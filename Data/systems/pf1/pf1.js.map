{"version":3,"file":"pf1.js","sources":["module/documents/chat-message.mjs","module/utils/semver.mjs","module/dice/roll.mjs","module/utils/lib.mjs","module/canvas/low-light-vision.mjs","module/patch-core.mjs","module/compendium-directory.mjs","module/chatlog.mjs","module/utils/canvas.mjs","module/socket.mjs","module/documents/actor/actor-base.mjs","module/documents/item/item-base.mjs","module/documents/actor/utils/apply-changes.mjs","module/components/change.mjs","module/dice/damage-roll.mjs","module/applications/settings/health.mjs","module/applications/settings/experience.mjs","module/applications/settings/accessibility.mjs","module/applications/settings/tooltip_world.mjs","module/applications/settings/tooltip.mjs","module/applications/settings/integration.mjs","module/applications/settings/performance.mjs","module/applications/tooltip.mjs","module/documents/settings.mjs","module/dice/d20roll.mjs","module/components/action.mjs","module/action-use/chat-attack.mjs","module/action-use/action-use.mjs","module/documents/item/item-pf.mjs","module/documents/item/item-attack.mjs","module/documents/item/item-buff.mjs","module/documents/item/item-class.mjs","module/documents/item/item-physical.mjs","module/documents/item/item-consumable.mjs","module/documents/item/item-container.mjs","module/documents/item/item-equipment.mjs","module/documents/item/item-feat.mjs","module/documents/item/item-loot.mjs","module/documents/item/item-race.mjs","module/utils/handlebars/templates.mjs","module/documents/item/item-spell.mjs","module/documents/item/item-weapon.mjs","module/documents/item/item-implant.mjs","module/documents/actor/utils/spellbook.mjs","module/applications/vision-sharing.mjs","module/documents/actor/components/resource.mjs","module/documents/actor/actor-pf.mjs","module/documents/macros.mjs","module/utils/chat.mjs","module/documents/actor/actor-proxy.mjs","module/documents/item/item-proxy.mjs","module/config.mjs","module/const.mjs","module/applications/compendium-browser/filters/base.mjs","node_modules/fuzzysort/fuzzysort.js","module/applications/compendium-browser/compendium-browser.mjs","module/applications/trait-selector.mjs","module/registry/base-registry.mjs","module/registry/damage-types.mjs","module/registry/material-types.mjs","module/applications/damage-type-selector.mjs","module/applications/damage-resistance-selector.mjs","module/applications/actor/actor-rest.mjs","module/applications/point-buy-calculator.mjs","module/applications/item-picker.mjs","module/applications/level-up.mjs","module/applications/currency-transfer.mjs","module/applications/actor/actor-sheet.mjs","module/applications/actor/basic-sheet.mjs","module/applications/actor/character-sheet.mjs","module/applications/actor/npc-sheet.mjs","module/applications/actor/npc-lite-sheet.mjs","module/applications/actor/npc-loot-sheet.mjs","module/applications/actor/haunt-sheet.mjs","module/applications/actor/trap-sheet.mjs","module/applications/actor/vehicle-sheet.mjs","module/applications/speed-editor.mjs","module/applications/categorized-item-picker.mjs","module/applications/item/item-sheet.mjs","module/applications/item/container-sheet.mjs","module/applications/item/item-create.mjs","module/applications/component/action-sheet.mjs","module/applications/compendium-browser/filters/checkbox.mjs","module/applications/compendium-browser/filters/number-range.mjs","module/applications/compendium-browser/filters/item.mjs","module/applications/compendium-browser/filters/common.mjs","module/applications/compendium-browser/filters/spell.mjs","module/applications/compendium-browser/filters/feat.mjs","module/applications/compendium-browser/filters/class.mjs","module/applications/compendium-browser/filters/race.mjs","module/applications/compendium-browser/filters/buff.mjs","module/applications/compendium-browser/filters/creature.mjs","module/applications/compendium-browser/buff-browser.mjs","module/applications/compendium-browser/class-browser.mjs","module/applications/compendium-browser/creature-browser.mjs","module/applications/compendium-browser/feat-browser.mjs","module/applications/compendium-browser/item-browser.mjs","module/applications/compendium-browser/race-browser.mjs","module/applications/compendium-browser/spell-browser.mjs","module/applications/action-selector.mjs","module/applications/attack-dialog.mjs","module/applications/change-log.mjs","module/applications/entry-selector.mjs","module/applications/item-selector.mjs","module/applications/help-browser.mjs","module/applications/script-editor.mjs","module/applications/senses-selector.mjs","module/applications/skill-editor.mjs","module/applications/content-source-editor.mjs","module/applications/xp-distributor.mjs","module/applications/change-editor.mjs","module/applications/sidebar/items-directory.mjs","module/applications/troubleshooter.mjs","module/applications/actor-selector.mjs","module/applications/split-stack.mjs","module/applications/_module.mjs","module/documents/active-effect.mjs","module/documents/combat.mjs","module/documents/combatant.mjs","module/documents/controls.mjs","module/documents/token.mjs","module/documents/actor/actor-basic.mjs","module/documents/actor/actor-character.mjs","module/documents/actor/actor-npc.mjs","module/documents/actor/actor-haunt.mjs","module/documents/actor/actor-trap.mjs","module/documents/actor/actor-vehicle.mjs","module/chat/text-enrichers.mjs","module/canvas/measure.mjs","module/canvas/attack-reach.mjs","module/canvas/token.mjs","module/canvas/token-quick-actions.mjs","module/canvas/detection-modes.mjs","module/canvas/vision-modes.mjs","module/canvas/ability-template.mjs","module/dice/terms/base/function-term.mjs","module/dice/terms/auxillary/realstring-term.mjs","module/dice/terms/auxillary/boolean-term.mjs","module/dice/terms/auxillary/null-term.mjs","module/dice/terms/auxillary/undefined-term.mjs","module/dice/terms/functions/ifelse-term.mjs","module/dice/terms/functions/if-term.mjs","module/dice/terms/functions/lookup-term.mjs","module/dice/terms/functions/sizereach-term.mjs","module/dice/terms/functions/sizeroll-term.mjs","module/components/context-note.mjs","module/components/conditionals.mjs","module/components/script-call.mjs","module/utils/handlebars/helpers.mjs","module/utils/dialog.mjs","module/utils/currency.mjs","module/utils/formulas.mjs","module/utils/roll-functions.mjs","module/utils/initialization.mjs","module/utils/roll-data.mjs","module/registry/script-call.mjs","module/registry/conditions.mjs","module/registry/sources.mjs","module/migration/migration-category.mjs","module/migration/migration-state.mjs","module/applications/migration/migration-issues-dialog.mjs","module/applications/migration/migration-dialog.mjs","module/migration.mjs","pf1.mjs","module/modules.mjs"],"sourcesContent":["export class ChatMessagePF extends ChatMessage {\n  /**\n   * Replaces all roll data object in a given object with {@link Roll} instances\n   *\n   * @param {object} maybeRollObject - The object to replace roll data objects with {@link Roll} instances\n   * @returns {object} The object with all roll data objects replaced with {@link Roll} instances\n   * @private\n   */\n  static _initRollObject(maybeRollObject) {\n    // If object is an array, map to roll objects\n    if (Array.isArray(maybeRollObject)) {\n      return maybeRollObject.map((o) => this._initRollObject(o));\n    }\n\n    // If this is a roll object, initialize it\n    if (maybeRollObject != null && typeof maybeRollObject === \"object\" && \"class\" in maybeRollObject) {\n      return Roll.fromData(maybeRollObject);\n    }\n\n    // If object is a regular object, recurse into it to find roll to initialise\n    if (typeof maybeRollObject === \"object\" && maybeRollObject != null) {\n      for (const [k, v] of Object.entries(maybeRollObject)) {\n        maybeRollObject[k] = this._initRollObject(v);\n      }\n    }\n    // Return object in which all roll data has been replaced by Roll instances\n    return maybeRollObject;\n  }\n\n  /**\n   * Linked action.\n   *\n   * @type {ItemAction|undefined|null} - Null is returned if no action is linked and ItemAction otherwise.\n   */\n  get actionSource() {\n    const id = this.flags?.pf1?.metadata?.action;\n    return id ? this.itemSource?.actions.get(id) : null;\n  }\n\n  /**\n   * Linked item.\n   *\n   * @type {ItemPF|undefined|null} - Null is returned if no item is linked, undefined if item is not found, and ItemPF otherwise.\n   */\n  get itemSource() {\n    const itemId = this.flags?.pf1?.metadata?.item;\n    if (itemId) {\n      const actor = this.constructor.getSpeakerActor(this.speaker);\n      return actor?.items.get(itemId);\n    }\n    return null;\n  }\n\n  /**\n   * @type {boolean} True if item source is defined, regardless if that item source still exists.\n   */\n  get hasItemSource() {\n    return this.flags?.pf1?.metadata?.item !== undefined;\n  }\n\n  /**\n   * Return associated template or null.\n   *\n   * @type {MeasuredTemplatePF}\n   */\n  get measureTemplate() {\n    const templateId = this.flags?.pf1?.metadata?.template;\n    if (!templateId) return null;\n\n    const template = canvas.templates.get(templateId);\n    return template || null;\n  }\n\n  /**\n   * @returns {TokenPF[]} The tokens which were targeted with this chat card.\n   */\n  get targets() {\n    const targetIds = this.flags?.pf1?.metadata?.targets ?? [];\n    if (targetIds.length === 0) return targetIds;\n\n    // Legacy IDs from old messages\n    if (/^\\w{16}$/.test(targetIds[0])) return canvas.tokens.placeables.filter((o) => targetIds.includes(o.id));\n\n    return targetIds.map((uuid) => fromUuidSync(uuid)?.object).filter((t) => !!t);\n  }\n\n  /** @inheritDoc */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    /**\n     * An object containing Pathfinder specific rolls for this chat message,\n     * with a structure grouping them by their purpose.\n     *\n     * @type {object}\n     */\n    this.systemRolls = this.constructor._initRollObject(this.flags?.pf1?.metadata?.rolls ?? {});\n  }\n}\n\n/**\n * @typedef {object} ChatMessagePFIdentifiedInfo\n * @property {boolean} identified - True if item was identified when rolled.\n * @property {string} name - Name of the identified item.\n * @property {string} description - Description of the identified item.\n * @property {string} [actionName] - Name of the action that was used\n * @property {string} [actionDescription] - Description of the action that was used\n */\n\n// Returns a promise to the created chatMessage or false if no command was executed\nexport const customRolls = function (message, speaker, rollData) {\n  if (message.match(/^\\/(\\w+)(?: +([^#]+))(?:#(.+))?/)) {\n    const type = RegExp.$1?.toUpperCase();\n    const value = RegExp.$2;\n    const flavor = RegExp.$3;\n\n    speaker = speaker ?? ChatMessage.implementation.getSpeaker();\n    const actor = ChatMessage.implementation.getSpeakerActor(speaker);\n    const scene = speaker.scene ? game.scenes.get(speaker.scene) : canvas.scene;\n    const tokenDocument = scene?.tokens.get(speaker.token);\n    const tokenUuid = tokenDocument?.uuid;\n\n    switch (type) {\n      case \"D\":\n      case \"DAMAGE\":\n      case \"H\":\n      case \"HEAL\": {\n        rollData = rollData ?? actor?.getRollData() ?? {};\n        const roll = new Roll(value, rollData).evaluate();\n\n        return roll.then(async (roll) => {\n          const total = roll.total;\n          const isHealing = type === \"HEAL\" || type === \"H\";\n          const content = await renderTemplate(\"systems/pf1/templates/chat/simple-damage.hbs\", {\n            tokenId: tokenUuid,\n            isHealing,\n            css: isHealing ? \"heal\" : \"damage\",\n            value: {\n              total: roll.total * (isHealing ? -1 : 1),\n              half: Math.floor(roll.total / 2) * (isHealing ? -1 : 1),\n            },\n            roll,\n          });\n          const chatOptions = {\n            type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n            roll: roll,\n            flavor,\n            sound: CONFIG.sounds.dice,\n            speaker: speaker,\n            rollMode: game.settings.get(\"core\", \"rollMode\"),\n            content: content,\n            flags: { pf1: { subject: { health: isHealing ? \"healing\" : \"damage\" } } },\n          };\n          ChatMessage.implementation.create(chatOptions);\n        });\n      }\n    }\n  }\n  return false;\n};\n","export class SemanticVersion {\n  static re = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)?$/\n\n  constructor() {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.preRelease = \"\";\n    this.buildMetaData = \"\";\n  }\n\n  static fromString(str) {\n    if (str.match(this.re)) {\n      const result = new this();\n      result.major = parseInt(RegExp.$1);\n      result.minor = parseInt(RegExp.$2);\n      result.patch = parseInt(RegExp.$3 || 0);\n      result.preRelease = RegExp.$4 || \"\";\n      result.buildMetaData = RegExp.$5 || \"\";\n      return result;\n    }\n    return null;\n  }\n\n  toString() {\n    return `${this.major}.${this.minor}.${this.patch}`;\n  }\n\n  isHigherThan(otherVersion) {\n    if (this.major > otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor > otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch > otherVersion.patch) return true;\n    return false;\n  }\n\n  isLowerThan(otherVersion) {\n    if (this.major < otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor < otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch < otherVersion.patch) return true;\n    return false;\n  }\n\n  isSame(otherVersion) {\n    return this.major == otherVersion.major && this.minor == otherVersion.minor && this.patch == otherVersion.patch;\n  }\n}\n","export class RollPF extends Roll {\n  get totalHalved() {\n    return Math.floor(this.total / 2);\n  }\n\n  /**\n   * Return an Array of the individual DiceTerm instances contained within this Roll.\n   * Override to recognize dice in SizeRollTerm.\n   *\n   * @override\n   * @returns {DiceTerm[]}\n   */\n  get dice() {\n    return (\n      this.terms\n        .reduce((dice, t) => {\n          if (t instanceof DiceTerm) dice.push(t);\n          else if (t instanceof PoolTerm) dice = dice.concat(t.dice);\n          else if (t.inheritDice) dice = dice.concat(t.dice);\n          return dice;\n        }, [])\n        // Append dice from parenthesis and similar eliminated rolls.\n        .concat(this._dice)\n    );\n  }\n\n  get flavor() {\n    return this.options?.flavor;\n  }\n\n  /**\n   * Synchronous and thrown error consuming roll evaluation.\n   *\n   * @remarks\n   * - Returned roll has `.err` set if an error occurred during evaluation.\n   * - If error occurs, the returned roll will have its formula replaced.\n   * @param {string} formula - Roll formula\n   * @param {object} rollData - Data supplied to roll\n   * @param {object} context - If error occurs, this will be included in the error message.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.suppressError=false] - If true, no error will be printed even if one occurs.\n   * @param {object} [evalOpts] - Additional options to pass to Roll.evaluate()\n   * @returns {RollPF} - Evaluated roll, or placeholder if error occurred.\n   */\n  static safeRoll(formula, rollData = {}, context, { suppressError = false } = {}, evalOpts = {}) {\n    if (evalOpts.async !== true) {\n      foundry.utils.logCompatibilityWarning(\n        \"RollPF.safeRoll() is becoming async to match upstream API changes. Use RollPF.safeRollSync() for any non-dice synchronous rolling. Pass async=true to evalOpts to suppress this warning.\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n    }\n\n    let roll;\n    try {\n      roll = this.create(formula, rollData).evaluate({ ...evalOpts, async: false });\n    } catch (err) {\n      roll = this.create(\"0\", rollData).evaluate({ ...evalOpts, async: false });\n      roll.err = err;\n    }\n    if (roll.warning) roll.err = Error(\"This formula had a value replaced with null.\");\n    if (roll.err) {\n      if (context && !suppressError) console.error(context, roll.err);\n      else if (CONFIG.debug.roll) console.error(roll.err);\n    }\n    return roll;\n  }\n\n  /**\n   * Synchronous version of {@link safeRoll safeRoll()}\n   *\n   * @ignore\n   * @see {@link safeRoll}\n   */\n  static safeRollSync(formula, rollData, context, options, evalOpts = {}) {\n    // TODO: Recreate safeRoll() with .evaluateSync() usage\n    evalOpts.async = true; // HACK, API hasn't actually changed yet\n    const roll = this.safeRoll(formula, rollData, context, options, evalOpts);\n    if (!roll.isDeterministic && evalOpts.maximize !== true && evalOpts.minimize !== true) {\n      foundry.utils.logCompatibilityWarning(\n        \"RollPF.safeRollSync() will not support non-deterministic formulas in the future.\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n    }\n    return roll;\n  }\n\n  /**\n   * Temporary helper function to handle transition to Foundry v12. Remove with Foundry v12 support.\n   *\n   * @ignore\n   * @internal\n   */\n  static safeRollAsync(formula, rollData, context, options, evalOpts = {}) {\n    evalOpts.async = true;\n    return this.safeRoll(formula, rollData, context, options, evalOpts);\n  }\n\n  static safeTotal(formula, data) {\n    foundry.utils.logCompatibilityWarning(\"RollPF.safeTotal() is deprecated in favor of RollPF.safeRoll().total\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return RollPF.safeRoll(formula, data).total;\n  }\n\n  /**\n   * @override\n   */\n  static simplifyTerms(terms) {\n    // Simplify terms by combining with pending strings\n    let simplified = terms.reduce((terms, term) => {\n      const prior = terms[terms.length - 1];\n      const isOperator = term instanceof OperatorTerm;\n\n      // Combine a non-operator term with prior StringTerm\n      if (!isOperator && prior instanceof StringTerm) {\n        prior.term += term.total;\n        foundry.utils.mergeObject(prior.options, term.options);\n        return terms;\n      }\n\n      // Attach string terms as flavor texts to numeric terms, if appropriate\n      const priorNumeric = prior instanceof NumericTerm;\n      if (prior && priorNumeric && term instanceof StringTerm && term.term.match(/\\[(.+)\\]/)) {\n        prior.options.flavor = RegExp.$1;\n        return terms;\n      }\n\n      /*\n      // Attach string terms as flavor texts to size roll terms, if appropriate\n      // TODO: Review the need for this bit with Foundry v10, according to staff it will no longer be required.\n      const priorSizeRoll = prior instanceof pf1.dice.terms.SizeRollTerm;\n      if (prior && priorSizeRoll && term instanceof StringTerm) {\n        const re = term.term.match(pf1.dice.terms.SizeRollTerm.TRAILER_REGEXP);\n        const [match, modifiers, flavor] = re;\n        // Attach Flavor\n        if (flavor) {\n          prior.options.flavor = flavor;\n        }\n        // Attach modifiers\n        if (modifiers) {\n          prior.modifiers = Array.from((modifiers || \"\").matchAll(DiceTerm.MODIFIER_REGEXP)).map((m) => m[0]);\n        }\n        return terms;\n      }\n      */\n\n      // Custom handling\n      if (prior && term instanceof StringTerm) {\n        const flavor = /^\\[(?<flavor>.+)\\]$/.exec(term.term)?.groups.flavor;\n        if (flavor) {\n          // Attach string terms as flavor texts to function terms, if appropriate\n          if (prior instanceof pf1.dice.terms.base.FunctionTerm) {\n            prior.options.flavor = flavor;\n            return terms;\n          }\n        }\n      }\n\n      // Combine StringTerm with a prior non-operator term\n      const priorOperator = prior instanceof OperatorTerm;\n      if (prior && !priorOperator && term instanceof StringTerm) {\n        term.term = String(prior.total) + term.term;\n        foundry.utils.mergeObject(term.options, prior.options);\n        terms[terms.length - 1] = term;\n        return terms;\n      }\n\n      // Otherwise continue\n      terms.push(term);\n      return terms;\n    }, []);\n\n    // Convert remaining String terms to a RollTerm which can be evaluated\n    simplified = simplified.map((term) => {\n      if (!(term instanceof StringTerm)) return term;\n      const t = this._classifyStringTerm(term.formula, { intermediate: false });\n      t.options = foundry.utils.mergeObject(term.options, t.options, { inplace: false });\n      return t;\n    });\n\n    // Eliminate leading or trailing arithmetic\n    if (simplified[0] instanceof OperatorTerm && simplified[0].operator !== \"-\") simplified.shift();\n    if (simplified.at(-1) instanceof OperatorTerm) simplified.pop();\n    return simplified;\n  }\n\n  static cleanFlavor(flavor) {\n    return flavor.replace(/\\[\\];/g, \"\");\n  }\n\n  /**\n   * Render the tooltip HTML for a RollPF instance\n   *\n   * @returns {Promise<string>} The rendered HTML tooltip as a string\n   */\n  async getTooltip() {\n    const parts = this.dice.filter((d) => d.results.some((r) => r.active)).map((d) => d.getTooltipData());\n    const numericParts = this.terms.reduce((cur, t, idx, arr) => {\n      const ttdata = t instanceof NumericTerm || t.hasNumericTooltip ? t.getTooltipData() : undefined;\n\n      if (ttdata !== undefined) {\n        const prior = arr[idx - 1];\n        if (t instanceof NumericTerm && prior && prior instanceof OperatorTerm && prior.operator === \"-\") {\n          ttdata.total = -ttdata.total;\n        }\n\n        ttdata.flavor ??= game.i18n.localize(\"PF1.Undefined\");\n        cur.push(ttdata);\n      }\n      return cur;\n    }, []);\n    return renderTemplate(\"systems/pf1/templates/dice/tooltip.hbs\", { parts, numericParts });\n  }\n\n  static parse(formula, data) {\n    const terms = super.parse(formula, data);\n\n    const final = [];\n\n    for (let i = 0; i < terms.length; i++) {\n      const term = terms[i],\n        next = terms[i + 1],\n        prior = terms[i - 1];\n\n      // Standalone terms\n      if (term instanceof StringTerm) {\n        const systerm = Object.values(pf1.dice.terms.aux).find((t) => t.matchTerm(term.term));\n        if (systerm) {\n          final.push(new systerm({ term: term.term }));\n          continue;\n        }\n      }\n      // Function terms\n      else if (term instanceof ParentheticalTerm && prior instanceof StringTerm) {\n        const systerm = Object.values(pf1.dice.terms.fn).find((t) => t.matchTerm(prior.term));\n        if (systerm?.isFunction) {\n          const args = systerm.parseArgs(this._lenientSplitArgs(term.term));\n          final.pop();\n          final.push(new systerm({ terms: args }));\n          continue;\n        }\n      }\n\n      final.push(term);\n    }\n\n    return final;\n  }\n\n  /**\n   * Variant of _splitMathArgs that takes system terms into consideration.\n   *\n   * @param {string} expression\n   * @returns {RollTerm[]}\n   */\n  static _lenientSplitArgs(expression) {\n    return expression.split(\",\").reduce((args, t) => {\n      t = t.trim();\n      if (!t) return args; // Blank args\n      if (!args.length) {\n        // First arg\n        args.push(t);\n        return args;\n      }\n      const p = args[args.length - 1]; // Prior arg\n      const priorValid = this.validate(p);\n      if (priorValid) args.push(t);\n      else {\n        const aux = Object.values(pf1.dice.terms.aux).find((t) => t.matchTerm(p));\n        if (aux) args.push(t);\n        else args[args.length - 1] = [p, t].join(\",\"); // Collect inner parentheses or pools\n      }\n      return args;\n    }, []);\n  }\n}\n","import { SemanticVersion } from \"./semver.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n/**\n * Creates a tag from a string.\n *\n * @example\n * ```js\n * pf1.utils.createTag(\"Wizard of Oz 2\"); // => \"wizardOfOz2\"\n * pf1.utils.createTag(\"Wizard of Oz 2\", {camelCase:false}); // => wizardofoz2\n * pf1.utils.createTag(\"Wizard of Oz 2\", {camelCase:false,allowUpperCase:true}); // => WizardofOz2\n * pf1.utils.createTag(\"d'Artagnan\"); // => dartagnan\n * pf1.utils.createTag(\"d'Artagnan\", {allowUpperCase:true}); // => dArtagnan\n * ```\n * @param {string} str - String to convert\n * @param {object} [options] - Additional options\n * @param {boolean} [options.allowUpperCase=false] - Do not forcibly lowercase everything.\n * @param {boolean} [options.camelCase=true] - Automatic camel case\n * @param {string | Function} [options.replacement=\"\"] - Replacement for disallowed characters.\n * @param {boolean} [options.allowInitialNumbers=false] - If false, number prefix is removed.\n * @param {boolean} [options.allowUnderScore=true] - If false, underscore is removed.\n * @returns {string} - String suitable as a tag\n */\nexport function createTag(\n  str,\n  {\n    allowUpperCase = false,\n    camelCase = true,\n    replacement = \"\",\n    allowInitialNumbers = false,\n    allowUnderScore = true,\n  } = {}\n) {\n  if (!str) return \"\";\n\n  str = str\n    .normalize(\"NFD\") // Normalize\n    .replace(/\\p{Diacritic}/gu, \"\") // Remove diacritics\n    .replace(/[^a-zA-Z0-9_\\s]/g, replacement) // Replace remaining non-latin letters\n    // Camel case and such\n    .split(/\\s+/)\n    .map((s, a) => {\n      if (!allowUpperCase) s = s.toLowerCase();\n      if (a > 0 && camelCase) s = s.substring(0, 1).toUpperCase() + s.substring(1);\n      return s;\n    })\n    .join(\"\");\n\n  if (!allowUnderScore) str = str.replaceAll(\"_\", \"\");\n\n  // Remove number prefix\n  if (!allowInitialNumbers) str = str.replace(/^\\d/, \"\");\n\n  return str;\n}\n\n/**\n * @deprecated\n * @param {string} version - The minimum core version to compare to. Must be something like '0.5.1'.\n * @returns {boolean} Whether the current core version is at least the given version.\n */\nexport const isMinimumCoreVersion = function (version) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.isMinimumCoreVersion is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n  const coreVersion = SemanticVersion.fromString(game.version);\n  const compareVersion = SemanticVersion.fromString(version);\n\n  return !coreVersion.isLowerThan(compareVersion);\n};\n\n/**\n * @deprecated - Use `item.actor` instead\n * @param {object} item Item data\n * @returns {User|null}\n */\nexport const getItemOwner = function (item) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.getItemOwner() is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n  if (item.actor) return item.actor;\n  if (item.id) return game.actors.find((o) => o.items.get(item.id));\n  return null;\n};\n\n/**\n * Turn some fractional numbers into pretty strings.\n *\n * @param {number} v\n * @returns {string|undefined}\n */\nexport const fractionalToString = (v) => {\n  const base = Math.floor(v);\n  const f = Math.roundDecimals(v - base, 3);\n  if (f === 0) return `${base}`;\n  const rv = [];\n  if (base !== 0) rv.push(base);\n  if (f === 0.25) rv.push(\"1/4\");\n  else if (f === 0.333) rv.push(\"1/3\");\n  else if (f === 0.5) rv.push(\"1/2\");\n  else if (f === 0.667) rv.push(\"2/3\");\n  else if (f === 0.75) rv.push(\"3/4\");\n  return rv.join(\" \");\n};\n\nexport const CR = {\n  fromString(value) {\n    if (value === \"1/8\") return 0.125;\n    if (value === \"1/6\") return 0.1625;\n    if (value === \"1/4\") return 0.25;\n    if (value === \"1/3\") return 0.3375;\n    if (value === \"1/2\") return 0.5;\n    return parseFloat(value);\n  },\n\n  fromNumber(value = 0) {\n    if (value === 0.125) return \"1/8\";\n    if (value === 0.1625) return \"1/6\";\n    if (value === 0.25) return \"1/4\";\n    if (value === 0.3375) return \"1/3\";\n    if (value === 0.5) return \"1/2\";\n    if (!Number.isNumeric(value)) return \"0\";\n    return value?.toString() ?? \"\";\n  },\n};\n\n/**\n * @deprecated - Use `game.actors.get(id)` instead\n * @param {*} id\n * @returns\n */\nexport const getActorFromId = function (id) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.getActorFromId() is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n  const speaker = ChatMessage.getSpeaker();\n  let actor = null;\n  if (id) {\n    actor = game.actors.tokens[id];\n    if (!actor) actor = game.actors.get(id);\n  }\n  if (speaker.token && !actor) actor = game.actors.tokens[speaker.token];\n  if (!actor) actor = game.actors.get(speaker.actor);\n  return actor;\n};\n\n/**\n * Converts feet to what the world is using as a measurement unit.\n *\n * @example\n * // With metric enabled\n * pf1.utils.convertDistance(30); // => [9, \"m\"]\n *\n * @param {number} value - The value (in feet) to convert.\n * @param {\"ft\"|\"mi\"} type - The original type to convert from. Either 'ft' (feet, default) or 'mi' (miles, in which case the result is in km (metric))\n * @returns {Array.<number, string>} An array containing the converted value in index 0 and the new unit key in index 1 (for use in PF1.measureUnits, for example)\n */\nexport const convertDistance = function (value, type = \"ft\") {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round(value * 1.6 * 100) / 100, \"km\"];\n        default:\n          return [Math.round((value / 5) * 1.5 * 100) / 100, \"m\"];\n      }\n    default:\n      if (![\"ft\", \"mi\"].includes(type)) type = \"ft\";\n      return [value, type];\n  }\n};\n\n/**\n * Converts what the world is using as a measurement unit to feet.\n *\n * @param {number} value - The value (in the world's measurement unit) to convert back.\n * @param {string} type - The target type to convert back to. Either 'ft' (feet, default) or 'mi' (miles, in which case the expected given value should be in km (metric))\n * @returns {number} The resulting value.\n */\nexport const convertDistanceBack = function (value, type = \"ft\") {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round((value / 1.6) * 100) / 100, \"mi\"];\n        default:\n          return [Math.round(((value * 5) / 1.5) * 100) / 100, \"ft\"];\n      }\n    default:\n      return [value, type];\n  }\n};\n\n/**\n * Convert feet or meters distance to the opposite regardless of what configuration is used.\n *\n * @example\n * ```js\n * pf1.utils.swapDistance(30, \"ft\"); // => 9\n * pf1.utils.swapDistance(9, \"m\"); // => 30\n * ```\n * @param {number} value - Feet or meters\n * @param {\"ft\"|\"m\"} type - Type the value is in\n * @throws {Error} - On invalid parameters.\n * @returns {number} - Feet or meters, opposite of what set type was\n */\nexport function swapDistance(value, type) {\n  if (!Number.isFinite(value)) throw new Error(\"value parameter must be a number\");\n  switch (type) {\n    case \"ft\":\n      return Math.round(((value * 100) / 5) * 1.5) / 100; // to meters\n    case \"m\":\n      return Math.round(((value * 100) / 1.5) * 5) / 100; // to feet\n    default:\n      throw new Error(\"type parameter must be defined\");\n  }\n}\n\n/**\n * Convert pounds or kilograms weight to the opposite regardless of what configuration is used.\n *\n * @example\n * ```js\n * pf1.utils.swapWeight(5, \"kg\"); // => 10\n * pf1.utils.swapWeight(10, \"lbs\"); // => 5\n * ```\n * @param {number} value - Pounds or kilos\n * @param {\"kg\"|\"lbs\"} type - Type the value is in\n * @throws {Error} - On invalid parameters.\n * @returns {number} - Pounds or kilos, opposite of what set type was\n */\nexport function swapWeight(value, type) {\n  if (!Number.isFinite(value)) throw new Error(\"value parameter must be a number\");\n  switch (type) {\n    case \"kg\":\n      return value * 2; // to lbs\n    case \"lbs\":\n      return value / 2; // to kg\n    default:\n      throw new Error(\"type parameter must be defined\");\n  }\n}\n\n/**\n * Calculate overland speed per hour\n *\n * @see {@link https://www.aonprd.com/Rules.aspx?Name=Movement&Category=Exploration Exploration Movement rules}\n *\n * @example\n * // metric\n * overlandSpeed(9) // => {speed:6, unit:'km'}\n * // imperial\n * overlandSpeed(40) // => {speed:4, unit:'mi'}\n *\n * @param {number} speed - Tactical speed\n * @returns {{speed:number,unit:string}} - Object with overland speed and unit.\n */\nexport function overlandSpeed(speed) {\n  const system = getDistanceSystem();\n  const variant = system === \"metric\" ? game.settings.get(\"pf1\", \"overlandMetricVariant\") : \"default\";\n  const { per, out, unit } = pf1.config.overlandSpeed[system][variant];\n\n  return { speed: (speed / per) * out, unit };\n}\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getDistanceSystem = () => {\n  let system = game.settings.get(\"pf1\", \"distanceUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getWeightSystem = () => {\n  let system = game.settings.get(\"pf1\", \"weightUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @typedef Point\n * @property {number} x X coordinate\n * @param {number} y Y coordinate\n */\n\n/**\n * @typedef MeasureState\n * @param {number} diagonals Number of diagonals passed so far.\n * @param {number} cells Total cells in distance\n */\n\n/**\n * Measure distance between two points.\n *\n * @example\n * pf1.utils.measureDistance(token, game.user.targets.first());\n *\n * @param {Point} p0 - Start point on canvas\n * @param {Point} p1 - End point on canvas\n * @param {object} [options] - Measuring options.\n * @param {\"5105\"|\"555\"} [options.diagonalRule=\"5105\"] - Used diagonal rule. Defaults to 5/10/5 PF measuring.\n * @param {Ray} [options.ray=null] - Pre-generated ray to use instead of the points.\n * @param {MeasureState} [options.state] - Optional state tracking across multiple measures.\n * @returns {number} - Grid distance between the two points.\n */\nexport const measureDistance = function (\n  p0,\n  p1,\n  { ray = null, diagonalRule = \"5105\", state = { diagonals: 0, cells: 0 } } = {}\n) {\n  // TODO: Optionally adjust start and end point to closest grid\n  ray ??= new Ray(p0, p1);\n  const gs = canvas.dimensions.size,\n    nx = Math.ceil(Math.abs(ray.dx / gs)),\n    ny = Math.ceil(Math.abs(ray.dy / gs));\n\n  // Get the number of straight and diagonal moves\n  const nDiagonal = Math.min(nx, ny),\n    nStraight = Math.abs(ny - nx);\n\n  state.diagonals += nDiagonal;\n\n  let cells = 0;\n  // Standard Pathfinder diagonals: double distance for every odd.\n  if (diagonalRule === \"5105\") {\n    const nd10 = Math.floor(state.diagonals / 2) - Math.floor((state.diagonals - nDiagonal) / 2);\n    cells = nd10 * 2 + (nDiagonal - nd10) + nStraight;\n  }\n  // Equal distance diagonals\n  else cells = nStraight + nDiagonal;\n\n  state.cells += cells;\n  return cells * canvas.dimensions.distance;\n};\n\n/**\n * Converts lbs to what the world is using as a measurement unit.\n *\n * @param {number} value - The value (in lbs) to convert.\n * @returns {number} The converted value. In the case of the metric system, converts to kg.\n */\nexport const convertWeight = function (value) {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n      return value / 2;\n    default:\n      return value;\n  }\n};\n\n/**\n * Converts back to lbs from what the world is using as a measurement unit.\n *\n * @example\n * // Assuming metric is enabled\n * pf1.utils.convertWeightBack(10); // => 20\n * // With metric disabled\n * pf1.utils.convertWeightBack(10); // => 10\n *\n * @param {number} value - The value to convert back to lbs.\n * @returns {number} The converted value. In the case of the metric system, converts from kg.\n */\nexport const convertWeightBack = function (value) {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      return value * 2; // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n    default:\n      return value;\n  }\n};\n\n/**\n * Sort an array in-place using a language-aware comparison function that can sort by a property key.\n * If no property key is provided, the array is sorted directly.\n *\n * @template T\n * @param {T[]} arr The array to sort\n * @param {string} [propertyKey=\"\"] The property key to sort by, if any; can be a dot-separated path\n * @param {object} [sortOptions] - Options affecting the sorting of elements\n * @param {boolean} sortOptions.numeric - Whether numeric collation should be used, such that \"1\" < \"2\" < \"10\".\n * @param {boolean} sortOptions.ignorePunctuation - Whether punctuation should be ignored.\n * @returns {T[]} The sorted array\n */\nexport const naturalSort = function (arr, propertyKey = \"\", { numeric = true, ignorePunctuation = false } = {}) {\n  const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), { numeric, ignorePunctuation });\n  return arr.sort((a, b) => {\n    const propA = propertyKey ? (propertyKey in a ? a[propertyKey] : foundry.utils.getProperty(a, propertyKey)) : a;\n    const propB = propertyKey ? (propertyKey in b ? b[propertyKey] : foundry.utils.getProperty(b, propertyKey)) : b;\n    return collator.compare(propA, propB);\n  });\n};\n\n/**\n * Adjusts a string to a number, allowing relative adjustments.\n *\n * @param {number} initialValue - The initial number to use for relative operations.\n * @param {string} cmdStr - The exact string inputted by the user.\n * @param {number} [maxValue=null] - The maximum allowed value for this variable.\n * @param {number} [clearValue=null] - What to change the variable to if the user simply erased the value.\n * @returns {number} The resulting new value.\n */\nexport const adjustNumberByStringCommand = function (initialValue, cmdStr, maxValue = null, clearValue = null) {\n  let result = initialValue;\n  const re = cmdStr.match(/(?<abs>=)?(?<op>[+-]+)?(?<value>\\d+)/);\n  if (re) {\n    const { op: operator, abs, value: rawValue } = re.groups;\n    const isAbsolute = abs == \"=\" || [\"--\", \"++\"].includes(operator) || (!abs && !operator);\n    const isNegative = [\"-\", \"--\"].includes(operator);\n    let value = parseInt(rawValue);\n    if (isNegative) value = -value;\n    result = isAbsolute ? value : initialValue + value;\n  } else if (cmdStr === \"\" && clearValue !== null) {\n    result = clearValue;\n  } else {\n    result = parseFloat(cmdStr || \"0\");\n  }\n\n  if (Number.isFinite(maxValue)) result = Math.min(result, maxValue);\n\n  if (Number.isNaN(result)) {\n    console.warn(\"Input resulted in NaN\", { initial: initialValue, command: cmdStr });\n    result = initialValue;\n  }\n\n  return result;\n};\n\n/**\n * Opens journal or journal page.\n *\n * Pages are opened in collapsed state.\n *\n * @param {string} uuid - UUID to journal or journal page\n * @param {object} [options={}] - Additional rendering options\n * @returns {JournalEntry|JournalEntryPage|null} - Opened document\n */\nexport async function openJournal(uuid, options = {}) {\n  const journal = await fromUuid(uuid);\n\n  if (journal instanceof JournalEntryPage) {\n    journal.parent.sheet.render(true, {\n      pageId: journal.id,\n      editable: false,\n      collapsed: true,\n      width: 600,\n      height: 700,\n      ...options,\n    });\n  } else {\n    journal.sheet.render(true, { editable: false, ...options });\n  }\n\n  return journal;\n}\n\n/**\n * Determine if buff target or buff target category is valid for the defined actor and item.\n *\n * @param {object} data - Buff target or category data\n * @param {object} options - Additional options\n * @param {Actor} [options.actor] - Actor to test\n * @param {Item} [options.item] - Item to test\n * @returns {{actor:boolean,item:boolean,valid:boolean}}\n */\nexport function isValidChangeTarget(data, { actor, item } = {}) {\n  const { filters } = data;\n  if (!filters) return { actor: true, item: true, valid: true };\n\n  let ar = true;\n  if (filters.actor && actor) {\n    const { include, exclude, fn } = filters.actor;\n    if (exclude && exclude.includes(actor.type)) ar = false;\n    else if (include && !include.includes(actor.type)) ar = false;\n    else if (typeof fn === \"function\") ar = fn(data, { actor, item });\n  }\n\n  let ir = true;\n  if (filters.item && item) {\n    const { include, exclude, fn } = filters.item;\n    if (exclude && exclude.includes(item.type)) ir = false;\n    else if (include && !include.includes(item.type)) ir = false;\n    else if (typeof fn === \"function\") ir = fn(data, { actor, item });\n  }\n\n  return {\n    actor: actor ? ar : undefined,\n    item: item ? ir : undefined,\n    valid: ar && ir,\n  };\n}\n\n/**\n * @typedef {object} BuffTargetItem\n * @property {string} [label] - The buff target's label.\n * @property {string} category - The buff target's category.\n * @property {string} [icon] - The URL to an icon.\n */\n/**\n * Assembles an array of all possible buff targets.\n *\n * @internal\n * @param {\"buffs\"|\"contextNotes\"} type - Type of targets to fetch\n * @param {object} context - Additional context\n * @param {Actor} [context.actor] - Actor for which to specifically get buff targets.\n * @param {Item} [context.item] - Item on which this change is on.\n * @returns {Object<string, BuffTargetItem>} The resulting array of buff targets.\n */\nexport function getBuffTargets(type, { actor, item } = {}) {\n  const buffTargets = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargets,\n      contextNotes: pf1.config.contextNoteTargets,\n    }[type]\n  );\n\n  // Append individual skills to buff targets\n  const allowSkills = isValidChangeTarget(pf1.config.buffTargetCategories.skills, { actor, item }).valid;\n\n  if (actor) {\n    const skillTargets = actor._skillTargets ?? [];\n    for (const s of skillTargets) {\n      const skillId = s.split(\".\").slice(1).join(\".\");\n      const skill = actor.getSkillInfo(skillId);\n      buffTargets[s] = { label: skill.fullName, category: \"skill\", valid: allowSkills };\n    }\n  } else {\n    for (const [key, label] of Object.entries(pf1.config.skills)) {\n      buffTargets[`skill.${key}`] = { label, category: \"skill\", valid: allowSkills };\n    }\n  }\n\n  // Append spell targets\n  const allowSpells = isValidChangeTarget(pf1.config.buffTargetCategories.spell, { actor, item }).valid;\n\n  const books = actor?.system.attributes?.spells?.spellbooks ?? {\n    primary: { label: game.i18n.localize(\"PF1.SpellBookPrimary\") },\n    secondary: { label: game.i18n.localize(\"PF1.SpellBookSecondary\") },\n    tertiary: { label: game.i18n.localize(\"PF1.SpellBookTertiary\") },\n    spelllike: { label: game.i18n.localize(\"PF1.SpellBookSpelllike\") },\n  };\n\n  // Get actor specific spell targets\n  const spellTargets = actor?._spellbookTargets ?? [];\n\n  // Add spell school DCs and CLs\n  for (const schoolId of Object.keys(CONFIG.PF1.spellSchools)) {\n    spellTargets.push(`dc.school.${schoolId}`, `cl.school.${schoolId}`);\n  }\n\n  for (const s of spellTargets) {\n    const re = /^(?<key>\\w+)(?:\\.(?<category>\\w+))?\\.(?<subKey>\\w+)$/.exec(s);\n    if (!re) continue;\n    const { key, category, subKey } = re.groups;\n\n    let subLabel;\n    if (category === \"school\") subLabel = CONFIG.PF1.spellSchools[subKey];\n    else subLabel = books[subKey]?.label || subKey;\n\n    const fullKey = category ? `${key}.${category}` : key;\n    const mainLabel = game.i18n.localize(\n      {\n        \"dc.school\": \"PF1.DC\",\n        concn: \"PF1.Concentration\",\n        \"cl.book\": \"PF1.CasterLevel\",\n        \"cl.school\": \"PF1.CasterLevelAbbr\",\n      }[fullKey]\n    );\n\n    buffTargets[s] = {\n      label: `${mainLabel} (${subLabel})`,\n      category: \"spell\",\n      valid: allowSpells,\n    };\n  }\n\n  return buffTargets;\n}\n\n/**\n * @typedef {object} BuffTargetCategory\n * @property {string} label - The category's label.\n */\n/**\n * Assembles an array of buff targets and their categories, ready to be inserted into a Widget_CategorizedItemPicker.\n *\n * @internal\n * @param {\"buffs\"|\"contextNotes\"} type - Type of targets to retrieve\n * @param {object} context - Additional context\n * @param {Actor} [context.actor] - Actor for which to specifically get buff targets.\n * @param {Item} [context.item] - Item on which this change is on.\n * @returns {Widget_CategorizedItemPicker~Category[]}\n */\nexport function getBuffTargetDictionary(type = \"buffs\", { actor, item } = {}) {\n  const buffTargets = getBuffTargets(type, { actor, item });\n\n  // Assemble initial categories and items\n  const targetCategories = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargetCategories,\n      contextNotes: pf1.config.contextNoteCategories,\n    }[type]\n  );\n\n  const categories = Object.values(\n    Object.entries(buffTargets).reduce((cur, [key, { label, category, icon, ...options }]) => {\n      if (!key.startsWith(\"~\")) {\n        cur[category] ??= {\n          key,\n          category,\n          label: targetCategories[category].label,\n          items: [],\n          validity: isValidChangeTarget(targetCategories[category], { actor, item }),\n        };\n\n        cur[category].items.push({\n          key,\n          label,\n          icon,\n          validity: isValidChangeTarget({ key, label, category, icon, ...options }, { actor, item }),\n        });\n      }\n      return cur;\n    }, {})\n  );\n\n  naturalSort(categories, \"label\");\n\n  // Return result\n  return categories;\n}\n\n/**\n * A locale-safe insertion sort of an Array of Objects, not in place. Ignores punctuation and capitalization.\n * `name` properties in objects will be lowercased.\n *\n * @template T\n * @param {Array.<T & {name: string}>} inputArr - Array to be sorted. Each element must have a name property set\n * @returns {T[]} - New sorted Array\n */\nexport const sortArrayByName = function (inputArr) {\n  inputArr = foundry.utils.deepClone(inputArr);\n  for (const elem of inputArr) {\n    elem.name = elem.name.toLocaleLowerCase();\n  }\n  return naturalSort(inputArr, \"name\", { numeric: true, ignorePunctuation: true });\n};\n\n/**\n * A simple binary search to be used on sorted arrays\n *\n * @template T\n * @param {T[]} searchArr - Sorted Array to be searched\n * @param {T} el - Element to be compared to array values\n * @param {function(T, T): number} compare_fn - Comparison function to be apply el to every element in ar. Should return an positive/ negative integer or 0 if matching.\n * @returns {number} Index where search is found or negative index indicating where it would be inserted\n */\nexport const binarySearch = function (searchArr, el, compare_fn) {\n  let m = 0,\n    n = searchArr.length - 1;\n  while (m <= n) {\n    const k = (n + m) >> 1,\n      cmp = compare_fn(el, searchArr[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n};\n\n/**\n * Generate permutations of an array. Complexity is O(n!).\n * Should be safe up to 7, though you should probably consider something else if you're reaching that high often.\n *\n * @template T\n * @param {T[]} perm - The Array to be generated upon\n * @returns {Array.<T[]>|false} An Array containing all Array permutations or false if failed.\n */\nfunction uniquePermutations(perm) {\n  perm = perm.map((p) => p.trim()).filter((p) => p?.length > 0);\n\n  if (perm.length > 7) {\n    console.warn(\"Array too large. Not attempting.\", perm);\n    return false;\n  }\n\n  const total = new Set();\n\n  for (let i = 0; i < perm.length; i = i + 1) {\n    const rest = uniquePermutations(perm.slice(0, i).concat(perm.slice(i + 1)));\n\n    if (!rest.length) {\n      total.add([perm[i]]);\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        total.add([perm[i]].concat(rest[j]));\n      }\n    }\n  }\n  return [...total];\n}\n\n/**\n * Searches through compendia quickly using the system generated index caches.\n * Exact matches excluding punctuation and case are prioritized before searching word order permutations.\n *\n * @param {string} searchTerm - The name of the Document being searched for\n * @param {object} [options] - Provides a filter to limit search to specific packs or Document types\n * @param {string[]} [options.packs] - An array of packs to search in\n * @param {\"Actor\"|\"Item\"|\"Scene\"|\"JournalEntry\"|\"Macro\"|\"RollTable\"|\"Playlist\"} [options.type] - A Document type to limit which packs are searched in\n * @param {string} [options.docType] - Document type, such as \"loot\" or \"npc\"\n * @param {boolean} [options.disabled=false] - Include packs disabled for compendium browser.\n * @returns {{pack: CompendiumCollection, index: object}|false} The index and pack containing it or undefined if no match is found\n */\nexport const findInCompendia = function (searchTerm, { packs = [], type, docType, disabled = false } = {}) {\n  if (packs?.length) packs = packs.flatMap((o) => game.packs.get(o) ?? []);\n  else packs = game.packs.filter((o) => !type || o.metadata.type == type);\n  if (!disabled) packs = packs.filter((o) => o.config?.pf1?.disabled !== true);\n\n  searchTerm = searchTerm.toLocaleLowerCase();\n\n  for (const pack of packs) {\n    if (!pack.fuzzyIndex) pack.fuzzyIndex = sortArrayByName([...pack.index]);\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    const found = binarySearch(filteredIndex, searchTerm, (sp, it) =>\n      sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n    );\n    if (found > -1) {\n      const entry = pack.index.get(filteredIndex[found]._id);\n      return { pack, index: entry };\n    }\n  }\n\n  let searchMutations = uniquePermutations(searchTerm.split(/[, _-]/));\n  if (searchMutations) searchMutations = searchMutations.map((o) => o.join(\" \"));\n  else {\n    // If array is too long, search for just a reversed version and one that pivots around commas/ semicolons\n    searchMutations = [null];\n    searchMutations.push(searchTerm.split(/[ _-]/).reverse().join(\" \"));\n    searchMutations.push(\n      searchTerm\n        .split(/[,;] ?/)\n        .reverse()\n        .flatMap((o) => o.split(\" \"))\n        .join(\" \")\n    );\n  }\n\n  for (const pack of packs) {\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    // Skip first mutation since it is already searched for manually before computing mutations\n    for (let mut = 1; mut < searchMutations.length; mut++) {\n      const found = binarySearch(filteredIndex, searchMutations[mut], (sp, it) =>\n        sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n      );\n      if (found > -1) {\n        const entry = pack.index.get(filteredIndex[found]._id);\n        if (entry) return { pack, index: entry };\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * Variant of TextEditor._createInlineRoll for creating unrolled inline rolls.\n *\n * Synchronized with Foundry VTT v10.291\n *\n * {@inheritDoc TextEditor._createInlineRoll\n *\n * @param match\n * @param rollData\n * @param options\n */\nexport function createInlineFormula(match, rollData, options) {\n  let [command, formula, closing, label] = match.slice(1, 5);\n  const isDeferred = !!command;\n  let roll;\n\n  // Leave command variants to be handled by core\n  if (command) return TextEditor._createInlineRoll(match, rollData, { ...options, rolls: true });\n\n  const cls = [\"inline-preroll\", \"inline-formula\"];\n\n  // Handle the possibility of closing brackets\n  if (closing.length === 3) formula += \"]\";\n\n  // Extract roll data as a parsed chat command\n  const chatCommand = `${command}${formula}`;\n  let parsedCommand = null;\n  try {\n    parsedCommand = ChatLog.parse(chatCommand);\n  } catch (err) {\n    console.error(\"Failed to parse formula:\", chatCommand, err);\n    return null;\n  }\n  const [cmd, matches] = parsedCommand;\n  const [raw, rollType, fml, flv] = matches;\n  // TODO: Prettify display of commands like: /d 3d6\n\n  const a = document.createElement(\"a\");\n\n  // Set roll data\n  if (cmd) {\n    cls.push(cmd);\n    a.dataset.mode = cmd;\n  }\n  a.dataset.flavor = flv?.trim() ?? label ?? \"\";\n  formula = Roll.defaultImplementation.replaceFormulaData(formula.trim(), rollData || {});\n  try {\n    formula = pf1.utils.formula.simplify(formula);\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n  a.dataset.formula = formula;\n\n  a.classList.add(...cls);\n\n  a.dataset.tooltip = formula;\n  label = label ? `${label}: ${formula}` : formula;\n  a.innerHTML = `<i class=\"fas fa-dice-d20\"></i> ${label}`;\n\n  return a;\n}\n\n/**\n * enrichHTML but with inline rolls not rolled\n *\n * {@inheritDoc TextEditor.enrichHTML}\n *\n * @experimental - This may be removed without warning.\n * @param {string} content HTML content in string format to be enriched.\n * @param {options} [options] Additional options passed to enrichHTML\n * @param {object} [options.rollData] Roll data object\n * @param {boolean} [options.secrets] Display secrets\n * @param {boolean} [options.rolls=false] Roll inline rolls. If false, the roll formula is shown instead as if /r had been used.\n * @param {boolean} [options.documents] Parse content links\n * @returns {string} - Enriched HTML string\n * Synchronized with Foundry VTT v11.315\n */\nexport function enrichHTMLUnrolled(content, { rollData, secrets, rolls = false, documents, relativeTo } = {}) {\n  let pcontent = TextEditor.enrichHTML(content, { secrets, rolls, documents, rollData, async: false, relativeTo });\n\n  if (!rolls) {\n    const html = document.createElement(\"div\");\n    html.innerHTML = String(pcontent);\n    const text = TextEditor._getTextNodes(html);\n    const rgx = /\\[\\[(\\/[a-zA-Z]+\\s)?(.*?)(]{2,3})(?:{([^}]+)})?/gi;\n    TextEditor._replaceTextContent(text, rgx, (match) => createInlineFormula(match, rollData));\n    pcontent = html.innerHTML;\n  }\n\n  return pcontent;\n}\n\n/**\n * Temporary async variant until the rest of the code can be refactored.\n *\n * @internal\n * @param content\n * @param root0\n * @param root0.rollData\n * @param root0.secrets\n * @param root0.rolls\n * @param root0.documents\n * @param root0.relativeTo\n */\nexport async function enrichHTMLUnrolledAsync(\n  content,\n  { rollData, secrets, rolls = false, documents, relativeTo } = {}\n) {\n  let pcontent = await TextEditor.enrichHTML(content, { secrets, rolls, documents, rollData, async: true, relativeTo });\n\n  if (!rolls) {\n    const html = document.createElement(\"div\");\n    html.innerHTML = String(pcontent);\n    const text = TextEditor._getTextNodes(html);\n    const rgx = /\\[\\[(\\/[a-zA-Z]+\\s)?(.*?)(]{2,3})(?:{([^}]+)})?/gi;\n    TextEditor._replaceTextContent(text, rgx, (match) => createInlineFormula(match, rollData));\n    pcontent = html.innerHTML;\n  }\n\n  return pcontent;\n}\n\n/**\n * Resolve range formula to numeric value.\n *\n * @param {string} [formula] Range formula. Only used with \"mi\", \"ft\", \"m\", \"km\" and similar types.\n * @param {\"natural\"|\"melee\"|\"touch\"|\"reach\"|\"close\"|\"medium\"|\"long\"|\"mi\"} [type=\"ft\"] Formula type\n * @param {object} [rollData] Roll data for evaluating the formula\n * @returns {number} Range in feet for the defined formula\n */\nexport const calculateRangeFormula = (formula, type = \"ft\", rollData = {}) => {\n  switch (type) {\n    case \"natural\":\n      return rollData.traits?.reach?.natural?.melee ?? 0;\n    case \"melee\":\n    case \"touch\":\n      return rollData.range?.melee ?? 0;\n    case \"reach\":\n      return rollData.range?.reach ?? 0;\n    case \"close\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.close, rollData).total;\n    case \"medium\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.medium, rollData).total;\n    case \"long\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.long, rollData).total;\n    case \"mi\":\n      return RollPF.safeRollSync(formula, rollData).total * 5_280;\n    case \"m\":\n      return (RollPF.safeRollSync(formula, rollData).total / 1.5) * 5;\n    case \"km\":\n      return ((RollPF.safeRollSync(formula, rollData).total * 1000) / 1.5) * 5;\n    default:\n      return RollPF.safeRollSync(formula, rollData).total;\n  }\n};\n\n/**\n * Calculates range formula and converts it.\n *\n * Wrapper around {@link calculateRangeFormula} and {@link convertDistance}\n *\n * @example\n * Simple example\n * ```js\n * const [range,unit] = calculateRange(\"@level\", \"mi\", { level:2 });\n * // => range:10560, unit:\"ft\"\n * ```\n *\n * @param {string} formula - Range formula\n * @param {string} type - Type fed to calculateRangeFormula\n * @param {object} rollData - Roll data fed to calculateRangeFormula\n * @returns {Array.<number, string>} - Range value and unit tuple\n */\nexport function calculateRange(formula, type = \"ft\", rollData = {}) {\n  const value = calculateRangeFormula(formula, type, rollData);\n  return convertDistance(value, type);\n}\n\n/**\n * Refreshes all actor data and re-renders sheets.\n *\n * @param {object} [options] - Additional options\n * @param {boolean} [options.renderOnly=false] - If false, actors are reset also.\n * @param {boolean} [options.renderForEveryone=false] - If true, other players are told to re-render, too.\n */\nexport function refreshActors({ renderOnly = false, renderForEveryone = false } = {}) {\n  const resetOrRender = async (actor) => {\n    if (!actor) return;\n    if (!renderOnly) actor.reset();\n    actor.render(true);\n  };\n\n  // Reset base actors\n  game.actors.forEach(resetOrRender);\n\n  // Reset unlinked actors in all scenes\n  game.scenes.forEach((scene) =>\n    scene.tokens\n      .filter((t) => t.actor && !t.isLinked)\n      .map((t) => t.actor)\n      .forEach(resetOrRender)\n  );\n\n  if (renderForEveryone) {\n    game.socket.emit(\"pf1\", \"refreshActorSheets\");\n  }\n}\n\n/**\n * Refresh all actor, item and action sheets.\n *\n * @param {object} [options] Additional options\n * @param {boolean} [options.reset=true] Reset underlying document.\n * @param {boolean} [options.actor] Include actor sheets\n * @param {boolean} [options.item] Include item sheets\n * @param {boolean} [options.action] Include action sheets\n */\nexport function refreshSheets({ reset = true, actor = true, item = true, action = true } = {}) {\n  Object.values(ui.windows).forEach((app) => {\n    if (\n      (actor && app instanceof ActorSheet) ||\n      (item && app instanceof ItemSheet) ||\n      (action && app instanceof pf1.applications.component.ItemActionSheet)\n    ) {\n      if (reset && app.object instanceof Document) app.object.reset();\n      else app.render();\n    }\n  });\n}\n\n/**\n * Turns dictionaries with numbered keys into arrays.\n *\n * @param {object} sourceObj The source object which contains the full array in the same path as targetObj.\n * @param {object} targetObj The target object to alter. The array doesn't have to be immediately in this object.\n * @param {string} keepPath A path to the array to keep, separated with dots. e.g. \"system.damageParts\".\n */\nexport function keepUpdateArray(sourceObj, targetObj, keepPath) {\n  const newValue = foundry.utils.getProperty(targetObj, keepPath);\n  if (newValue == null) return;\n  if (Array.isArray(newValue)) return;\n\n  const newArray = foundry.utils.deepClone(foundry.utils.getProperty(sourceObj, keepPath) || []);\n\n  for (const [key, value] of Object.entries(newValue)) {\n    if (foundry.utils.getType(value) === \"Object\") {\n      const subData = foundry.utils.expandObject(value);\n      newArray[key] = foundry.utils.mergeObject(newArray[key], subData);\n    } else {\n      newArray[key] = value;\n    }\n  }\n\n  foundry.utils.setProperty(targetObj, keepPath, newArray);\n}\n\n/**\n * Deeply difference an object against some other, returning the update keys and values.\n * Unlike foundry.utils.diffObject, this function also deeply compares arrays.\n *\n * @param {object} original       An object comparing data against which to compare\n * @param {object} other          An object containing potentially different data\n * @param {object} [options={}]   Additional options which configure the diff operation\n * @param {boolean} [options.inner=false]  Only recognize differences in other for keys which also exist in original\n * @param {boolean} [options.keepLength=false]  Keep array length intact, possibly having to insert empty objects\n * @returns {object}               An object of the data in other which differs from that in original\n */\nexport const diffObjectAndArray = function (original, other, { inner = false, keepLength = false } = {}) {\n  /**\n   *\n   * @param v0\n   * @param v1\n   */\n  function _difference(v0, v1) {\n    const t0 = getType(v0);\n    const t1 = getType(v1);\n    if (t0 !== t1) return [true, v1];\n    if (t0 === \"Array\") {\n      if (v0.length !== v1.length) return [true, v1];\n      const d = [];\n      for (let a = 0; a < v0.length; a++) {\n        const d2 = diffObjectAndArray(v0[a], v1[a], { inner, keepLength });\n        if (!foundry.utils.isEmpty(d2)) d.push(d2);\n        else if (keepLength) d.push({});\n      }\n      if (d.length > 0) return [true, d];\n      return [false, d];\n    }\n    if (t0 === \"Object\") {\n      if (foundry.utils.isEmpty(v0) !== foundry.utils.isEmpty(v1)) return [true, v1];\n      const d = diffObjectAndArray(v0, v1, { inner, keepLength });\n      return [!foundry.utils.isEmpty(d), d];\n    }\n    return [v0 !== v1, v1];\n  }\n\n  // Recursively call the _difference function\n  return Object.keys(other).reduce((obj, key) => {\n    if (inner && !(key in original)) return obj;\n    const [isDifferent, difference] = _difference(original[key], other[key]);\n    if (isDifferent) obj[key] = difference;\n    return obj;\n  }, {});\n};\n\n/**\n * Determines what ability modifier is appropriate for a given score.\n *\n * @example\n * pf1.utils.getAbilityModifier(15); // => 2\n * pf1.utils.getAbilityModifier(6, { damage: 1 }); // => -2\n *\n * @param {number} [score] - The score to find the modifier for.\n * @param {object} [options={}] - Options for this function.\n * @param {number} [options.penalty=0] - A penalty value to take into account.\n * @param {number} [options.damage=0] - Ability score damage to take into account.\n * @returns {number} The modifier for the given score.\n */\nexport function getAbilityModifier(score = null, options = {}) {\n  if (score != null) {\n    const penalty = Math.abs(options.penalty ?? 0);\n    const damage = Math.abs(options.damage ?? 0);\n    return Math.max(-5, Math.floor((score - 10) / 2) - Math.floor(penalty / 2) - Math.floor(damage / 2));\n  }\n  return 0;\n}\n\n/**\n * Recursively transforms an ES module to a regular, writable object.\n *\n * @internal\n * @template T\n * @param {T} module - The ES module to transform.\n * @returns {T} The transformed module.\n */\nexport function moduleToObject(module) {\n  const result = {};\n  for (const key in module) {\n    if (Object.prototype.toString.call(module[key]) === \"[object Module]\") {\n      result[key] = moduleToObject(module[key]);\n    } else {\n      result[key] = module[key];\n    }\n  }\n  return result;\n}\n\n/**\n * Set default scene scaling.\n *\n * `imperial` sets scaling to 5 ft, `metric` sets scaling to 1.5 m\n *\n * @param {UnitSystem | undefined} [system] System of units. Pull current setting if undefined.\n */\nexport function setDefaultSceneScaling(system) {\n  system ??= getDistanceSystem();\n  if (system == \"metric\") {\n    game.system.gridUnits = \"m\";\n    game.system.gridDistance = 1.5;\n  } else {\n    game.system.gridUnits = \"ft\";\n    game.system.gridDistance = 5;\n  }\n}\n\n/**\n * Create throttling function.\n *\n * Returned function will execute after defined delayed. Multiple calls will be discarded until the callback is executed and new timeout can start.\n *\n * @param {Function} callback - Callback function\n * @param {number} delay - Delay in milliseconds\n * @returns {Function}\n */\nexport function throttle(callback, delay) {\n  let timeoutId = -1;\n  return () => {\n    if (timeoutId <= 0) {\n      timeoutId = setTimeout(() => {\n        timeoutId = -1;\n        callback();\n      }, delay);\n    }\n    return timeoutId;\n  };\n}\n\n/**\n * Get iterator for all actors.\n *\n * @param {object} [options] - Options for which actors to fetch.\n * @param {Array<string>|null} [options.types=null] - Array of actor types to accept. Returns all if null.\n * @param {boolean} [options.base=true] - Return base actors (from game.actors).\n * @param {string|Scene|null} [options.scene=null] - Specific scene. Sets `scenes` and `base` to false.\n * @param {boolean} [options.scenes=false] - All scenes.\n * @param {boolean} [options.linked=true] - Get linked actors from scenes.\n * @param {boolean} [options.unlinked=true] - Get unlinked actors from scenes.\n * @param {Array<string|User>} [options.users=[game.user]] - Test specific users permission, either User instances or user IDs. Defaults to current user.\n * @param {*} [options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER] - What permission level (`CONST.DOCUMENT_OWNERSHIP_LEVELS`) to test user for, if user is defined.\n *\n * @yields {Actor} - Relevant actors\n */\nexport function* getActors({\n  base = true,\n  types = null,\n  scene = null,\n  scenes = false,\n  linked = true,\n  unlinked = true,\n  users = [game.user],\n  ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,\n} = {}) {\n  users = users.map((user) => (user instanceof User ? user : game.users.get(user)));\n\n  const testUsers = (actor) => (users.length ? users.some((user) => actor.testUserPermission(user, ownership)) : true);\n\n  let actors;\n  if (base) {\n    for (const actor of [...game.actors]) {\n      if (types && !types.includes(actor.type)) continue;\n      if (!testUsers(actor)) continue;\n      yield actor;\n    }\n  }\n\n  let sceneList;\n  if (scene) {\n    if (scene instanceof Scene) sceneList = [scene];\n    else sceneList = [game.scenes.get(scene)];\n  } else if (scenes) {\n    sceneList = [...game.scenes];\n  }\n\n  for (const scene of sceneList) {\n    for (const token of [...scene.tokens]) {\n      const actor = token.actor;\n      if (!actor) continue;\n\n      if (types && !types.includes(actor.type)) continue;\n\n      // Test at least one user has appropriate ownership\n      if (!testUsers(actor)) continue;\n\n      const isLinked = token.isLinked;\n      // Yield linked only if such are desired and we didn't already return base actors\n      if (isLinked && linked && !base) yield actor;\n      // Yield unlinked only if desired\n      else if (!isLinked && unlinked) yield actor;\n    }\n  }\n}\n\n/**\n * Parse alignment string and provide breakdown of it.\n *\n * Each alignment is either 0 or 1, except for neutral which can reach 2 for true neutral.\n *\n * @param {string} align - Alignment string.\n * @returns {{lawful:number, evil:number, chaotic:number, good:number, neutral:number}}\n * @since PF1 v10\n */\nexport function parseAlignment(align) {\n  const lawful = align.includes(\"l\") ? 1 : 0;\n  const evil = align.includes(\"e\") ? 1 : 0;\n  const chaotic = align.includes(\"c\") ? 1 : 0;\n  const good = align.includes(\"g\") ? 1 : 0;\n  const neutral = align == \"tn\" ? 2 : align.includes(\"n\") ? 1 : 0;\n  return { lawful, evil, chaotic, good, neutral };\n}\n\n/**\n * Limit precision.\n *\n * Reduces number of decimals but does not insist on those decimals to be there.\n *\n * @beta\n * @param {number} number - Number to adjust\n * @param {number} decimals - Maximum number of decimals\n * @returns {number} - Adjusted number\n */\nexport function limitPrecision(number, decimals = 2) {\n  const mult = Math.pow(10, decimals);\n  return Math.floor(number * mult) / mult;\n}\n\n/**\n * Tests if two items are in same sub-group.\n *\n * This does not test main grouping (that is, item type itself).\n *\n * @param {ItemPF} item0\n * @param {ItemPF} item1\n * @returns {boolean}\n */\nexport function isItemSameSubGroup(item0, item1) {\n  if (item0.type === \"spell\") {\n    // Spells sort by spell level instead of subtype\n    return item0.system.spellbook === item1.system.spellbook && item0.system.level === item1.system.level;\n  }\n\n  if (item0.subType) return item0.subType === item1.subType;\n\n  // Assume everything else is only categorized by main type\n  return true;\n}\n","/**\n * Add a checkbox to enable/disable low-light vision effects to a light's configuration\n *\n * @param {FormApplication} app - The LightConfig app\n * @param {jQuery} html - The jQuery of the inner html\n */\nexport const addLowLightVisionToLightConfig = function (app, html) {\n  /** @type {AmbientLightDocument} */\n  const light = app.object;\n\n  // Create checkbox HTML element\n  let checkboxStr = `<div class=\"form-group\"><label>${game.i18n.localize(\"PF1.DisableLightLowLightVision\")}</label>`;\n  checkboxStr += '<input type=\"checkbox\" name=\"flags.pf1.disableLowLight\" data-dtype=\"Boolean\"';\n  if (light.getFlag(\"pf1\", \"disableLowLight\")) checkboxStr += \" checked\";\n  checkboxStr += \"></div>\";\n  const checkbox = $(checkboxStr);\n\n  // Insert new checkbox\n  html.find('div.tab[data-tab=\"basic\"]').append(checkbox);\n};\n\n/**\n * Override `LightSource` initialization and add `getRadius` to support LLV.\n */\nexport const patchCore = function () {\n  // Low-light vision light radius initialization (v10 & v11)\n  const LightSource_initialize = LightSource.prototype.initialize;\n  LightSource.prototype.initialize = function (data = {}) {\n    const { dim, bright } = this.getRadius(data.dim, data.bright);\n\n    // Avoid NaN and introducing keys that shouldn't be in the data\n    // Without undefined check, global illumination will cause darkvision and similar vision modes to glitch.\n    // We're assuming getRadius gives sensible values otherwise.\n    if (data.dim !== undefined) data.dim = dim;\n    if (data.bright !== undefined) data.bright = bright;\n\n    return LightSource_initialize.call(this, data);\n  };\n\n  LightSource.prototype.getRadius = function (dim, bright) {\n    const result = { dim, bright };\n    let multiplier = { dim: 1, bright: 1 };\n\n    if (!game.settings.get(\"pf1\", \"systemVision\")) return result;\n\n    /**\n     * @param {TokenDocument} token\n     * @returns {boolean}\n     */\n    const hasSystemVision = (token) =>\n      token.getFlag(\"pf1\", \"disableLowLight\") !== true && token.getFlag(\"pf1\", \"customVisionRules\") !== true;\n\n    const token = this.object?.document;\n    if (token && !hasSystemVision(token)) return result;\n\n    const requiresSelection = game.user.isGM || game.settings.get(\"pf1\", \"lowLightVisionMode\");\n    const relevantTokens = canvas.tokens.placeables.filter((token) => {\n      const tokenDoc = token.document;\n      return (\n        token.actor?.testUserPermission(game.user, \"OBSERVER\") &&\n        (requiresSelection ? token.controlled : true) &&\n        hasSystemVision(tokenDoc)\n      );\n    });\n    const lowLightTokens = relevantTokens.filter((o) => o.actorVision.lowLight === true);\n\n    if (requiresSelection) {\n      if (lowLightTokens.length && lowLightTokens.length === relevantTokens.length) {\n        multiplier = { dim: 999, bright: 999 };\n        for (const t of lowLightTokens) {\n          const tokenVision = t.actorVision;\n          multiplier.dim = Math.min(multiplier.dim, tokenVision.lowLightMultiplier);\n          multiplier.bright = Math.min(multiplier.bright, tokenVision.lowLightMultiplierBright);\n        }\n      }\n    } else {\n      for (const t of lowLightTokens) {\n        const tokenVision = t.actorVision;\n        multiplier.dim = Math.max(multiplier.dim, tokenVision.lowLightMultiplier);\n        multiplier.bright = Math.max(multiplier.bright, tokenVision.lowLightMultiplierBright);\n      }\n    }\n\n    result.dim *= multiplier.dim;\n    result.bright *= multiplier.bright;\n\n    return result;\n  };\n};\n","import { customRolls } from \"./documents/chat-message.mjs\";\nimport { sortArrayByName } from \"./utils/lib.mjs\";\nimport { RollPF } from \"./dice/roll.mjs\";\nimport { patchCore as patchLowLightVision } from \"./canvas/low-light-vision.mjs\";\n\n// Add inline support for extra /commands\n{\n  const origParse = ChatLog.parse;\n  ChatLog.parse = function (message) {\n    const match = message.match(/^\\/(\\w+)(?: +([^#]+))(?:#(.+))?/),\n      type = match?.[1]?.toUpperCase();\n    if ([\"HEAL\", \"H\", \"DAMAGE\", \"D\"].includes(type)) {\n      match[2] = match[0].slice(1);\n      return [\"custom\", match];\n    } else return origParse.call(this, message);\n  };\n\n  const origClick = TextEditor._onClickInlineRoll;\n  TextEditor._onClickInlineRoll = function (event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    if (!a.classList.contains(\"custom\")) return origClick.call(this, event);\n\n    const chatMessage = `/${a.dataset.formula}`;\n    const speaker = ChatMessage.implementation.getSpeaker();\n    const actor = ChatMessage.implementation.getSpeakerActor(speaker);\n    let rollData = actor ? actor.getRollData() : {};\n\n    const sheet = a.closest(\".sheet\");\n    if (sheet) {\n      const app = ui.windows[sheet.dataset.appid];\n      if ([\"Actor\", \"Item\"].includes(app?.document.documentName)) rollData = app.object.getRollData();\n    }\n    return customRolls(chatMessage, speaker, rollData);\n  };\n\n  // Fix for race condition\n  if ($._data($(\"body\").get(0), \"events\")?.click?.find((o) => o.selector === \"a.inline-roll\")) {\n    $(\"body\").off(\"click\", \"a.inline-roll\", origClick);\n    $(\"body\").on(\"click\", \"a.inline-roll\", TextEditor._onClickInlineRoll);\n  }\n}\n\n// Change tooltip showing on alt\n{\n  const fn = KeyboardManager.prototype._onAlt;\n  KeyboardManager.prototype._onAlt = function (event, up, modifiers) {\n    if (!pf1.tooltip) return;\n    if (!up) pf1.tooltip.lock.new = true;\n    fn.call(this, event, up, modifiers);\n    if (!up) pf1.tooltip.lock.new = false;\n  };\n}\n\n// Patch NumericTerm\nNumericTerm.prototype.getTooltipData = function () {\n  return {\n    formula: this.expression,\n    total: this.total,\n    flavor: this.flavor,\n  };\n};\n\n// Add support for numbers without prefix, e.g. .5\n// This was previously done in StringTerm monkeypatch\nNumericTerm.REGEXP = new RegExp(`^((?:\\\\d+\\\\.|\\\\.)?\\\\d+)${RollTerm.FLAVOR_REGEXP_STRING}?$`);\n\n// Patch ParentheticalTerm and allowed operators\nParentheticalTerm.CLOSE_REGEXP = new RegExp(`\\\\)${RollTerm.FLAVOR_REGEXP_STRING}?`, \"g\");\nOperatorTerm.REGEXP = /(?:&&|\\|\\||\\*\\*|%|\\+|-|\\*|\\/|\\\\%|\\||:|\\?)|(?<![a-z])[!=<>]+/g;\nOperatorTerm.OPERATORS.push(\"\\\\%\", \"!\", \"?\", \":\", \"=\", \"<\", \">\", \"==\", \"===\", \"<=\", \">=\", \"??\", \"||\", \"&&\", \"**\");\n\n// Document link attribute stuffing\n{\n  const origFunc = TextEditor._createContentLink;\n  TextEditor._createContentLink = function (match, { async = false, relativeTo } = {}) {\n    const [type, target, hash, name] = match.slice(1, 5);\n    const a = origFunc.call(this, match, { async, relativeTo });\n    if (name?.indexOf(\"::\") > -1) {\n      const args = name.split(\"::\"),\n        label = args.pop();\n      if (args.length) {\n        args.forEach((o) => {\n          let [key, value] = o.split(/(?<!\\\\):/);\n          if (!(key && value)) {\n            value = key;\n            key = \"extra\";\n          }\n          switch (key) {\n            case \"icon\":\n              a.firstChild.className = \"fas fa-\" + value;\n              break;\n            case \"class\":\n              a.classList.add(...value.split(\" \"));\n              break;\n            default:\n              a.setAttribute(\"data-\" + key, value);\n          }\n        });\n        a.lastChild.textContent = label;\n      }\n    }\n    return a;\n  };\n}\n\n// Patch the `fromData` method used by Foundry to allow rolls from builds with a renamed roll class\n// to still be created from JSON for tooltips etc.\n// Introduced in v0.81.1 for Foundry v9.269\n{\n  const origFunc = Roll.fromData;\n  Roll.fromData = function (data, ...args) {\n    if (data.class === \"RollPF$1\") data.class = \"RollPF\";\n    return origFunc.call(this, data, ...args);\n  };\n}\n\n/**\n * Patch ImagePopout image share handling function to respect identified status of items\n *\n * Synchronized with Foundry VTT v11.311\n *\n * Does not work if sharing embedded document image from compendium.\n */\n{\n  const original_handleShareImage = ImagePopout._handleShareImage;\n  ImagePopout._handleShareImage = function ({ image, title, caption, uuid, showTitle } = {}) {\n    try {\n      const doc = fromUuidSync(uuid);\n      if (doc instanceof Item) {\n        title = doc.name;\n      }\n    } catch (error) {\n      console.error(\"Failed to protect against document identity leakage\", error);\n    }\n\n    return original_handleShareImage.call(this, { image, title, caption, uuid, showTitle });\n  };\n}\n\n/**\n * Stop releasing modifiers on HTMLButtonElement. Check again on proper support of popouts. How blur is handled will have to be reevaluated\n *\n * Introduced Foundry VTT v10.291\n */\n\n{\n  const original_onFocusIn = KeyboardManager.prototype._onFocusIn;\n  KeyboardManager.prototype._onFocusIn = function (event) {\n    const formElements = [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLOptionElement];\n\n    if (event.target.isContentEditable || formElements.some((cls) => event.target instanceof cls)) {\n      this.releaseKeys();\n    }\n  };\n\n  Object.defineProperty(KeyboardManager.prototype, \"hasFocus\", {\n    get() {\n      // Pulled from https://www.w3schools.com/html/html_form_elements.asp\n      const formElements = [\"input\", \"select\", \"textarea\", \"option\", \"[contenteditable]\"];\n      const selector = formElements.map((el) => `${el}:focus`).join(\", \");\n      return document.querySelectorAll(selector).length > 0;\n    },\n  });\n}\n\n// Call patch functions\npatchLowLightVision();\n","const buttons = {\n  spells: { label: \"PF1.BrowseSpells\" },\n  items: { label: \"PF1.BrowseItems\" },\n  bestiary: { label: \"PF1.BrowseBestiary\" },\n  feats: { label: \"PF1.BrowseFeats\" },\n  classes: { label: \"PF1.BrowseClasses\" },\n  races: { label: \"PF1.BrowseRaces\" },\n  buffs: { label: \"PF1.BrowseBuffs\", wide: true },\n};\n\n/**\n * @param event\n */\nfunction compendiumButtonClick(event) {\n  event.preventDefault();\n  const type = event.target.dataset.category;\n  pf1.applications.compendiums[type]._render(true, { focus: true });\n}\n\n/**\n * Render compendium browser buttons.\n *\n * @param {CompendiumDirectory} app\n * @param {JQuery} html\n * @param {object} options\n */\nHooks.on(\"renderCompendiumDirectory\", async (app, [html], options) => {\n  const element = html.querySelector(\"footer.directory-footer\");\n  element.classList.add(\"action-buttons\"); // For v10 cross-compatibility\n\n  for (const [category, info] of Object.entries(buttons)) {\n    const button = document.createElement(\"button\");\n    button.type = \"button\";\n    button.dataset.category = category;\n    button.classList.add(\"compendium\", category);\n    button.innerText = game.i18n.localize(info.label);\n    if (info.wide) button.classList.add(\"colspan-2\");\n    element.append(button);\n    button.addEventListener(\"click\", compendiumButtonClick);\n  }\n});\n\n// Add compendium sidebar context options\nHooks.on(\"getCompendiumDirectoryEntryContext\", (html, entryOptions) => {\n  // Add option to enable & disable pack\n  entryOptions.unshift(\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.HidePack\"),\n      icon: '<i class=\"fas fa-low-vision\"></i>',\n      condition: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled !== true;\n      },\n      callback: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: true } });\n      },\n    },\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.ShowPack\"),\n      icon: '<i class=\"fas fa-eye\"></i>',\n      condition: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled === true;\n      },\n      callback: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: false } });\n      },\n    }\n  );\n});\n","const getMessage = (html) => game.messages.get(html.dataset.messageId);\nconst isOwnedSpellCard = (msg) => {\n  const item = msg.itemSource;\n  return item && item.type === \"spell\" && item.isOwner && !!item.actor;\n};\n\n/**\n * @param _\n * @param {object[]} entries - Context menu entries\n */\nfunction spellCardContextMenu(_, entries) {\n  entries.unshift(\n    {\n      name: \"PF1.ConcentrationCheck\",\n      icon: '<i class=\"fa-solid fa-brain context-icon pf1 concentration\"></i>',\n      condition: ([html]) => isOwnedSpellCard(getMessage(html)),\n      callback: ([html]) => {\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollConcentration(item.system.spellbook, { messageId: msg.id });\n      },\n    },\n    {\n      name: \"PF1.CasterLevelCheck\",\n      icon: '<i class=\"fa-solid fa-wand-magic-sparkles context-icon pf1 caster-level\"></i>',\n      condition: ([html]) => isOwnedSpellCard(getMessage(html)),\n      callback: ([html]) => {\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollCL(item.system.spellbook, { messageId: msg.id });\n      },\n    }\n    // TODO: Roll ASF option\n  );\n}\n\nHooks.on(\"getChatLogEntryContext\", spellCardContextMenu);\n","import { measureDistance as unifiedMeasureDistance } from \"./lib.mjs\";\n\n/**\n * Measure the distance between two pixel coordinates\n * See BaseGrid.measureDistance for more details\n *\n * @param segments\n * @param options\n */\nexport const measureDistances = function (segments, options = {}) {\n  if (!options.gridSpaces) return BaseGrid.prototype.measureDistances.call(this, segments, options);\n\n  // Track the total number of diagonals\n  const diagonalRule = game.settings.get(\"pf1\", \"diagonalMovement\");\n  const state = { diagonals: 0 };\n\n  // Iterate over measured segments\n  return segments.map((s) => unifiedMeasureDistance(null, null, { ray: s.ray, diagonalRule, state }));\n};\n\n/* -------------------------------------------- */\n\nconst _TokenHUD_getStatusEffectChoices = TokenHUD.prototype._getStatusEffectChoices;\nTokenHUD.prototype._getStatusEffectChoices = function () {\n  const core = _TokenHUD_getStatusEffectChoices.call(this),\n    buffs = {};\n\n  const items = this.object.actor?.itemTypes.buff ?? [];\n  for (const buff of items) {\n    buffs[`buff-${buff.id}`] = {\n      id: buff.id,\n      title: buff.name,\n      src: buff.img,\n      isActive: buff.isActive,\n      isOverlay: false,\n      cssClass: buff.isActive ? \"active\" : \"\",\n    };\n  }\n\n  return { ...core, ...buffs };\n};\n\n//const TokenHUD__onToggleEffect = TokenHUD.prototype._onToggleEffect;\nTokenHUD.prototype._onToggleEffect = function (event, { overlay = false } = {}) {\n  event.preventDefault();\n  const img = event.currentTarget;\n  const statusId = img.dataset.statusId;\n  const effect =\n    statusId && this.object.actor\n      ? CONFIG.statusEffects.find((e) => e.id === statusId) ?? statusId\n      : img.getAttribute(\"src\");\n\n  return this.object.toggleEffect(effect, { overlay, interaction: true });\n};\n","import { refreshActors } from \"./utils/lib.mjs\";\n\nexport function initializeSocket() {\n  game.socket.on(\"system.pf1\", runSocketFunction);\n}\n\nconst runSocketFunction = async function (args, senderId) {\n  const isFirstGM = game.users.activeGM.isSelf;\n  const sender = game.users.get(senderId);\n  try {\n    switch (args.eventType) {\n      case \"currencyTransfer\": {\n        if (!isFirstGM) return;\n        let source = await fromUuid(args.data.sourceActor);\n        let dest = await fromUuid(args.data.destActor);\n\n        if (args.data.sourceContainer) source = source.items.get(args.data.sourceContainer);\n        if (args.data.destContainer) dest = dest.items.get(args.data.destContainer);\n        const amount = args.data.amount;\n\n        pf1.applications.CurrencyTransfer.transfer(source, dest, amount, args.data.sourceAlt, args.data.destAlt, false);\n        break;\n      }\n      case \"alterChatTargetAttribute\":\n        if (isFirstGM) alterChatTargetAttribute(args);\n        break;\n      case \"giveItem\": {\n        if (!isFirstGM) return;\n        const item = await fromUuid(args.item);\n        const sourceActor = item.actor;\n        if (!sourceActor.testUserPermission(sender, \"OWNER\")) return;\n        const targetActor = await fromUuid(args.targetActor);\n        const itemData = item.toObject();\n        await targetActor.createEmbeddedDocuments(\"Item\", [itemData]);\n        await sourceActor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n        break;\n      }\n      case \"refreshActorSheets\":\n        if (sender.hasPermission(CONST.USER_PERMISSIONS.SETTINGS_MODIFY)) {\n          pf1.utils.refreshActors({ renderOnly: true });\n        }\n        break;\n    }\n  } catch (err) {\n    console.log(\"PF1 | Socket Error:\", err);\n  }\n};\n\nexport const alterChatTargetAttribute = function (args) {\n  const message = game.messages.get(args.message);\n  const contentHTML = $(message.data.content);\n\n  // Alter saving throw\n  if (args.save != null) {\n    const targetElem = contentHTML.find(\n      `div.attack-targets .target[data-uuid=\"${args.targetUuid}\"] .saving-throws .${args.save}`\n    );\n    const valueElem = targetElem.find(\".value\");\n    valueElem.html(`${args.value}`);\n\n    // Add classes based off extra data\n    if (args.isFailure) valueElem.addClass(\"failure\");\n    else valueElem.removeClass(\"failure\");\n    if (args.isSuccess) valueElem.addClass(\"success\");\n    else valueElem.removeClass(\"success\");\n\n    return message.update({\n      content: contentHTML.prop(\"outerHTML\"),\n    });\n  }\n};\n","/**\n * Base actor class with minimal functionality.\n *\n * Provides only caching of .itemTypes and nothing else.\n */\nexport class ActorBasePF extends Actor {\n  constructor(...args) {\n    super(...args);\n\n    // Init .itemTypes cache\n    this._itemTypes ??= null;\n  }\n\n  /**\n   * Add default artwork.\n   *\n   * @see {@link pf1.config.defaultIcons.actors}\n   *\n   * @internal\n   * @override\n   * @param {object} [actorData]\n   * @returns {object}\n   */\n  static getDefaultArtwork(actorData) {\n    const result = super.getDefaultArtwork(actorData);\n    const image = pf1.config.defaultIcons.actors[actorData?.type];\n    if (image) {\n      result.img = image;\n      result.texture.src = image;\n    }\n    return result;\n  }\n\n  /**\n   * Resets internal itemTypes cache.\n   *\n   * @protected\n   * @override\n   */\n  prepareBaseData() {\n    // Reset item types cache\n    this._itemTypes = null;\n    // Reset roll data cache if it exists.\n    delete this._rollData;\n\n    super.prepareBaseData();\n  }\n\n  /**\n   * Get item by its identifier tag.\n   *\n   * @param {string} tag - Desired tag.\n   * @returns {Item|undefined} - Matching item or undefined if no item is found.\n   */\n  getItemByTag(tag) {\n    return this.items.find((o) => o.system.tag === tag);\n  }\n\n  /**\n   * Cached result of .itemTypes\n   *\n   * @internal\n   * @type {ItemTypesMap}\n   */\n  _itemTypes;\n\n  /**\n   * Cached override\n   *\n   * @override\n   * @type {ItemTypesMap}\n   */\n  get itemTypes() {\n    if (!this._itemTypes) {\n      this._itemTypes = super.itemTypes;\n\n      // Enrich the arrays with getName() and getId()\n      for (const items of Object.values(this._itemTypes)) {\n        Object.defineProperties(items, {\n          getName: {\n            value: function (name) {\n              return this.find((i) => i.name === name);\n            },\n          },\n          getId: {\n            value: function (identifier) {\n              return this.find((i) => i.system.tag === identifier);\n            },\n          },\n        });\n      }\n    }\n    return this._itemTypes;\n  }\n\n  /**\n   * Returns first active owner, favoring players and GM as fallback.\n   *\n   * @type {User|null}\n   */\n  get activeOwner() {\n    const firstOwner =\n      game.users\n        .filter((u) => u.active && !u.isGM)\n        .filter((u) => this.testUserPermission(u, \"OWNER\"))\n        .sort((a, b) => (a.id > b.id ? 1 : -1))[0] ?? null;\n\n    return firstOwner ?? game.users.activeGM;\n  }\n\n  /**\n   * Get related combatants.\n   *\n   * @param {Combat} [combat=game.combat] Combat instance\n   * @returns {Combatant[]} Related combatants.\n   */\n  getCombatants(combat = game.combat) {\n    return combat?.combatants.filter((c) => c.actor === this) ?? [];\n  }\n\n  /**\n   * @type {boolean} - Whether current user can see through this actor.\n   */\n  get sharesVision() {\n    const visionFlag = this.getFlag(\"pf1\", \"visionSharing\");\n    if (!visionFlag) return false;\n\n    const shared = visionFlag.users[game.user.id] ?? null;\n    if (shared === true) return true;\n    else if (shared === false) return false;\n    // Else handle by default rule\n    return visionFlag.default ?? false;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 where visibility of AE no longer controls if it's temporary.\n   *\n   * @internal\n   * @returns {ActiveEffectPF[]}\n   */\n  get _effectsWithDuration() {\n    const effects = [];\n    for (const effect of this.allApplicableEffects()) {\n      if (effect.active && effect._hasDuration) effects.push(effect);\n    }\n    return effects;\n  }\n\n  /**\n   * @internal\n   * @returns {Set<string>}\n   */\n  getConditionImmunities() {\n    const list = new Set(this.system.traits?.ci?.value ?? []);\n\n    // Map immunities to actual conditions\n    // TODO: Unify the IDs where possible\n    const condToImmMap = {\n      confuse: [\"confused\"],\n      daze: [\"dazed\"],\n      dazzle: [\"dazzled\"],\n      fatigue: [\"fatigued\"],\n      fear: pf1.registry.conditions.conditionsInTrack(\"fear\"),\n      sicken: [\"sickened\"],\n      paralyze: [\"paralyzed\"],\n      petrify: [\"petrified\"],\n      stun: [\"stunned\"],\n    };\n    for (const [key, conditions] of Object.entries(condToImmMap)) {\n      if (list.has(key)) {\n        for (const cond of conditions) list.add(cond);\n      }\n    }\n\n    return list;\n  }\n}\n\n/**\n * All items sorted by type.\n *\n * @typedef ItemTypesMap\n * @property {ItemAttackPF[]} attack\n * @property {ItemBuffPF[]} buff\n * @property {ItemClassPF[]} class\n * @property {ItemConsumablePF[]} consumable\n * @property {ItemContainerPF[]} container\n * @property {ItemEquipmentPF[]} equipment\n * @property {ItemFeatPF[]} feat\n * @property {ItemLootPF[]} loot\n * @property {ItemRacePF[]} race\n * @property {ItemSpellPF[]} spell\n * @property {ItemWeaponPF[]} weapon\n */\n","/**\n * Base item\n *\n * From which all other item documents inherit from.\n */\nexport class ItemBasePF extends Item {\n  /**\n   * Add default artwork.\n   *\n   * @see {@link pf1.config.defaultIcons.items}\n   *\n   * @internal\n   * @override\n   * @param {object} [itemData]\n   * @returns {object}\n   */\n  static getDefaultArtwork(itemData) {\n    const result = super.getDefaultArtwork(itemData);\n    const image = pf1.config.defaultIcons.items[itemData?.type];\n    if (image) result.img = image;\n    return result;\n  }\n\n  /**\n   * Item create dialog.\n   *\n   * @override\n   * @param {object} data Initial form data\n   * @param {object} [context] Additional options.\n   * @param {Actor|null} [context.parent=null] Parent parameter passed to Item.create() options\n   * @param {string|null} [context.pack=null] Pack ID parameter passed to Item.create() options\n   * @param {object} [context.options] Dialog context options.\n   * @returns {Promise<Item|null>}\n   *\n   * Synchronized with Foundry VTT v11.315\n   */\n  static async createDialog(data = {}, { parent = null, pack = null, ...options } = {}) {\n    return pf1.applications.item.CreateDialog.waitPrompt(data, { parent, pack, options });\n  }\n\n  /**\n   * @override\n   */\n  static async createDocuments(data = [], context = {}) {\n    if (!Array.isArray(data)) data = [data]; // Match Foundry API\n\n    const origContext = foundry.utils.deepClone(context);\n    const inActor = context.parent instanceof Actor;\n\n    let supplements;\n    if (inActor) {\n      supplements = await this._collectItemSupplements(data, context);\n    }\n\n    const created = await super.createDocuments(data, context);\n\n    if (supplements?.size) {\n      await this._addSupplementChildLinks(created, supplements, origContext);\n    }\n\n    return created;\n  }\n\n  /**\n   * @internal\n   * @param {Array<object>} items - Array of item data\n   * @param {object} context\n   * @returns {Map<string, *>}\n   */\n  static async _collectItemSupplements(items, context) {\n    const allSupplements = new Collection();\n\n    const depth = 0;\n    const unnotified = 0;\n\n    const collect = async (item, { depth = 0 } = {}) => {\n      const supplements = item.system.links?.supplements ?? [];\n      const classLink = item.system.class;\n      // Log larger fetches.\n      // Fails if there's multiple small fetches\n      if (supplements.length > 5) console.log(\"Fetching\", supplements.length, \"supplements for\", item.name);\n      // Collect supplements\n      const newItems = [];\n      for (const supplement of supplements) {\n        const { uuid } = supplement;\n        if (!uuid) continue; // Erroneous supplement data\n        const extraItem = await fromUuid(uuid);\n        if (!extraItem) {\n          // TODO: Display notification instead when this is from UI interaction.\n          console.warn(\"Supplement\", uuid, \"not found for\", item.uuid ?? item.flags?.core?.sourceId ?? item);\n          continue;\n        }\n        const old = allSupplements.get(uuid);\n        if (old) old.count += 1;\n        else {\n          allSupplements.set(uuid, { parent: item, item: extraItem, count: 1, classLink });\n          newItems.push(extraItem);\n        }\n      }\n\n      // TODO: Make the limits here configurable?\n      if (newItems.length) {\n        if (depth > 3) {\n          return void console.warn(\"Stopping collecting supplements deeper than 3 layers\");\n        }\n        if (allSupplements.size > 100 && newItems.length) {\n          return void console.warn(`Too many supplements (${allSupplements.size}), stopping collecting more`);\n        }\n\n        for (const newItem of newItems) {\n          if (!newItem.system) continue; // No system data in creation data\n\n          // TODO: Somehow add child relation to the children\n          await collect(newItem, { depth: depth + 1 });\n        }\n      }\n    };\n\n    // Collect supplements for all items\n    for (const item of items) {\n      if (!item.system) continue; // Creation data lacks .system\n      await collect(item);\n    }\n\n    if (allSupplements.size) {\n      // Add to items array\n      for (const supplement of allSupplements) {\n        const { item, count, parent } = supplement;\n        const parentUuid = parent?.uuid ?? parent?.flags?.core?.sourceId;\n        const itemData = game.items.fromCompendium(item, { clearFolder: true });\n        if (parentUuid) {\n          setProperty(itemData, \"flags.pf1.source\", parentUuid);\n        }\n        // Adjust quantity of physical items if more than one was added of the same item\n        if (item.isPhysical && itemData.system.quantity > 0) {\n          itemData.system.quantity *= count;\n        }\n        // Inherit class link\n        if (supplement.classLink && item.type === \"feat\" && item.system.subType === \"classFeat\") {\n          itemData.system.class = supplement.classLink;\n        }\n        items.push(itemData);\n      }\n    }\n\n    return allSupplements;\n  }\n\n  /**\n   * Update item child links with supplements.\n   *\n   * @internal\n   * @param {Array<Item>} items\n   * @param context\n   * @param {Map<string,object>} supplements\n   */\n  static async _addSupplementChildLinks(items, supplements, context) {\n    const updates = new Collection();\n    const collection = new Collection();\n    for (const item of items) {\n      const source = item.getFlag(\"core\", \"sourceId\");\n      if (source) collection.set(source, item);\n    }\n\n    for (const item of items) {\n      const source = item.getFlag(\"pf1\", \"source\");\n      if (source) {\n        const parent = collection.get(source);\n        let update = updates.get(parent.id);\n        if (!update) {\n          update = { system: { links: { children: [] } } };\n          update._id = parent.id;\n          updates.set(parent.id, update);\n        }\n\n        update.system.links.children.push({ uuid: item.getRelativeUUID(context.parent) });\n      }\n    }\n\n    if (updates.size) {\n      return this.updateDocuments(Array.from(updates), context);\n    }\n  }\n\n  /**\n   * Fetch item name\n   *\n   * @param {boolean} [forcePlayerPerspective=false] - If true, return value players see.\n   * @returns {string}\n   */\n  getName(forcePlayerPerspective = false) {\n    return this.name;\n  }\n\n  /**\n   * Is the item is fully functional.\n   *\n   * This returns composite result of if the item is equipped, has quantity, is not disabled, is not out of charges, etc.\n   * and is not representative if the item can be set active or not via {@link setActive}.\n   *\n   * @see {@link activeState}\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get isActive() {\n    return true;\n  }\n\n  /**\n   * If the item can be activated via {@link setActive}.\n   *\n   * {@link isActive} can return variable state independent of the toggle that {@link setActive} controls, this returns .\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get activeState() {\n    return this.isActive;\n  }\n\n  /**\n   * Set item's active state.\n   *\n   * @abstract\n   * @param {boolean} active - Active state\n   * @param {object} [context] - Optional update context\n   * @returns {Promise<this>} - Update promise if item type supports the operation.\n   * @throws {Error} - If item does not support the operation.\n   */\n  async setActive(active, context) {\n    throw new Error(`Item type ${this.type} does not support ItemBasePF#setActive`);\n  }\n\n  /**\n   * Is this item usable at base level, disregarding per-action details.\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get canUse() {\n    return this.isActive;\n  }\n}\n","import { RollPF } from \"../../../dice/roll.mjs\";\n\n/**\n * @this {pf1.documents.actor.ActorPF}\n */\nexport function applyChanges() {\n  this.changeOverrides = {};\n  const changes = Array.from(this.changes);\n\n  const { targets, types } = getSortChangePriority.call(this);\n  const _sortChanges = function (a, b) {\n    const targetA = targets.indexOf(a.target);\n    const targetB = targets.indexOf(b.target);\n    const typeA = types.indexOf(a.type);\n    const typeB = types.indexOf(b.type);\n    const prioA = a.priority ?? 0;\n    const prioB = b.priority ?? 0;\n\n    return prioB - prioA || targetA - targetB || typeA - typeB;\n  };\n\n  // Organize changes by priority\n  changes.sort((a, b) => _sortChanges.call(this, a, b));\n\n  // Parse change flags\n  for (const i of this.changeItems) {\n    if (!i.system.changeFlags) continue;\n    for (const [k, v] of Object.entries(i.system.changeFlags)) {\n      if (v !== true) continue;\n      this.changeFlags[k] = true;\n      if (k !== \"loseDexToAC\") continue;\n\n      for (const k2 of [\"normal\", \"touch\"]) {\n        getSourceInfo(this.sourceInfo, `system.attributes.ac.${k2}.total`).negative.push({\n          value: game.i18n.localize(\"PF1.ChangeFlags.LoseDexToAC\"),\n          name: i.name,\n          type: i.type,\n        });\n      }\n      getSourceInfo(this.sourceInfo, \"system.attributes.cmd.total\").negative.push({\n        value: game.i18n.localize(\"PF1.ChangeFlags.LoseDexToAC\"),\n        name: i.name,\n        type: i.type,\n      });\n    }\n  }\n  this.refreshDerivedData();\n\n  // Determine continuous changes\n  const continuousChanges = changes.filter((o) => o.continuous === true);\n\n  resetSkills.call(this);\n\n  // Apply all changes\n  for (const change of changes) {\n    const flats = change.getTargets(this);\n    for (const f of flats) {\n      if (!this.changeOverrides[f]) this.changeOverrides[f] = createOverride();\n    }\n\n    change._safeApplyChange(this, flats, { applySourceInfo: false });\n\n    // Apply continuous changes\n    for (const cc of continuousChanges) {\n      if (cc === change) continue;\n      const flats = cc.getTargets(this);\n      for (const f of flats) {\n        if (!this.changeOverrides[f]) this.changeOverrides[f] = createOverride();\n      }\n\n      cc._safeApplyChange(this, flats, { applySourceInfo: false });\n    }\n\n    this.refreshDerivedData();\n  }\n\n  // Apply source info for changes\n  for (const change of changes) {\n    change.applySourceInfo(this);\n  }\n\n  finalizeSkills.call(this);\n}\n\nconst createOverride = function () {\n  const result = {\n    add: {},\n    set: {},\n  };\n\n  for (const k of Object.keys(pf1.config.bonusTypes)) {\n    result.add[k] = null;\n    result.set[k] = null;\n  }\n\n  return result;\n};\n\nconst getSortChangePriority = function () {\n  /** @type {[string, {sort: number}][]}*/\n  const skillTargets = this._skillTargets.map((target, index) => [target, { sort: 76000 + index * 10 }]);\n  const buffTargets = Object.entries(pf1.config.buffTargets);\n  const targets = [...skillTargets, ...buffTargets]\n    .sort(([, { sort: aSort }], [, { sort: bSort }]) => aSort - bSort)\n    .map(([target]) => target);\n\n  return {\n    targets,\n    types: Object.keys(pf1.config.bonusTypes),\n  };\n};\n\n/**\n * @this {ActorPF}\n * @param {BuffTarget} target Target (e.g. \"ac\" or \"skills\")\n * @param {ModifierType} modifierType Type (e.g. \"profane\", \"untyped\", or \"dodge\"). If undefined, all valid targets will be returned.\n * @param {number} [value]  Value, if known\n * @returns {Array<string>} Array of target paths to modify\n */\nexport const getChangeFlat = function (target, modifierType, value) {\n  if (target == null) return [];\n\n  const curData = this.system;\n  /** @type {string[]} */\n  const result = [];\n\n  switch (target) {\n    case \"mhp\":\n      result.push(\"system.attributes.hp.max\");\n      break;\n    case \"wounds\":\n      result.push(\"system.attributes.wounds.max\");\n      break;\n    case \"woundThreshold\":\n      result.push(\"system.attributes.wounds.threshold\");\n      break;\n    case \"vigor\":\n      result.push(\"system.attributes.vigor.max\");\n      break;\n    case \"str\":\n    case \"dex\":\n    case \"con\":\n    case \"int\":\n    case \"wis\":\n    case \"cha\":\n      if ([\"base\", \"untypedPerm\"].includes(modifierType)) {\n        result.push(`system.abilities.${target}.base`);\n      }\n      result.push(`system.abilities.${target}.total`, `system.abilities.${target}.undrained`);\n      break;\n    case \"strPen\":\n    case \"dexPen\":\n    case \"conPen\":\n    case \"intPen\":\n    case \"wisPen\":\n    case \"chaPen\": {\n      const ablKey = target.slice(0, -3);\n      result.push(`system.abilities.${ablKey}.penalty`);\n      break;\n    }\n    case \"strMod\":\n    case \"dexMod\":\n    case \"conMod\":\n    case \"intMod\":\n    case \"wisMod\":\n    case \"chaMod\":\n      result.push(`system.abilities.${target.slice(0, 3)}.mod`);\n      break;\n    case \"carryStr\":\n      result.push(\"system.details.carryCapacity.bonus.total\");\n      break;\n    case \"carryMult\":\n      result.push(\"system.details.carryCapacity.multiplier.total\");\n      break;\n    case \"ac\":\n      result.push(\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\");\n\n      switch (modifierType) {\n        case \"dodge\":\n        case \"haste\":\n          result.push(\"system.attributes.cmd.total\");\n          break;\n        case \"deflection\":\n        case \"circumstance\":\n        case \"insight\":\n        case \"luck\":\n        case \"morale\":\n        case \"profane\":\n        case \"sacred\":\n          result.push(\n            \"system.attributes.ac.flatFooted.total\",\n            \"system.attributes.cmd.total\",\n            \"system.attributes.cmd.flatFootedTotal\"\n          );\n          break;\n        default:\n          result.push(\"system.attributes.ac.flatFooted.total\");\n          // Other penalties also apply to CMD, but not bonuses\n          if (value < 0) {\n            result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n          }\n          break;\n      }\n      break;\n    case \"aac\": {\n      const targets = [\"system.ac.normal.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.normal.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.normal.enh\");\n          break;\n        default:\n          targets.push(\"system.ac.normal.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"sac\": {\n      const targets = [\"system.ac.shield.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.shield.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.shield.enh\");\n          break;\n        default:\n          targets.push(\"system.ac.shield.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"nac\": {\n      const targets = [\"system.ac.natural.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.natural.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.natural.enh\");\n          break;\n        default:\n          targets.push(\"system.ac.natural.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"tac\":\n      result.push(\"system.attributes.ac.touch.total\");\n      break;\n    case \"ffac\":\n      result.push(\"system.attributes.ac.flatFooted.total\");\n      break;\n    case \"ffcmd\":\n      result.push(\"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"bab\":\n      result.push(\"system.attributes.bab.total\");\n      break;\n    case \"~attackCore\":\n      result.push(\"system.attributes.attack.shared\");\n      break;\n    case \"attack\":\n      result.push(\"system.attributes.attack.general\");\n      break;\n    case \"wattack\":\n      result.push(\"system.attributes.attack.weapon\");\n      break;\n    case \"sattack\":\n      result.push(\"system.attributes.attack.spell\");\n      break;\n    case \"mattack\":\n      result.push(\"system.attributes.attack.melee\");\n      break;\n    case \"nattack\":\n      result.push(\"system.attributes.attack.natural\");\n      break;\n    case \"rattack\":\n      result.push(\"system.attributes.attack.ranged\");\n      break;\n    case \"critConfirm\":\n      result.push(\"system.attributes.attack.critConfirm\");\n      break;\n    case \"allSavingThrows\":\n      result.push(\n        \"system.attributes.savingThrows.fort.total\",\n        \"system.attributes.savingThrows.ref.total\",\n        \"system.attributes.savingThrows.will.total\"\n      );\n      break;\n    case \"fort\":\n      result.push(\"system.attributes.savingThrows.fort.total\");\n      break;\n    case \"ref\":\n      result.push(\"system.attributes.savingThrows.ref.total\");\n      break;\n    case \"will\":\n      result.push(\"system.attributes.savingThrows.will.total\");\n      break;\n    case \"skills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const b of Object.keys(skl.subSkills)) {\n            result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"unskills\":\n      // Untrained skills\n      for (const [skillId, skill] of Object.entries(curData.skills)) {\n        if (skill == null) continue;\n        for (const [subSkillId, subskill] of Object.entries(skill.subSkills ?? {})) {\n          if (subskill.rank > 0) continue;\n          result.push(`system.skills.${skillId}.subSkills.${subSkillId}.mod`);\n        }\n        if (skill.rank > 0) continue;\n        result.push(`system.skills.${skillId}.mod`);\n      }\n      break;\n    case \"reach\":\n      // Natural reach\n      result.push(\"system.traits.reach.total.melee\");\n      result.push(\"system.traits.reach.total.reach\");\n      break;\n    case \"strSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"str\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"str\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"dexSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"dex\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"dex\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"conSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"con\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"con\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"intSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"int\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"int\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"wisSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"wis\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"wis\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"chaSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"cha\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"cha\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"allChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        \"system.abilities.dex.checkMod\",\n        \"system.abilities.con.checkMod\",\n        \"system.abilities.int.checkMod\",\n        \"system.abilities.wis.checkMod\",\n        \"system.abilities.cha.checkMod\",\n        ...(this.system.attributes.init.ability ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"strChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        ...(this.system.attributes.init.ability === \"str\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"dexChecks\":\n      result.push(\n        \"system.abilities.dex.checkMod\",\n        ...(this.system.attributes.init.ability === \"dex\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"conChecks\":\n      result.push(\n        \"system.abilities.con.checkMod\",\n        ...(this.system.attributes.init.ability === \"con\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"intChecks\":\n      result.push(\n        \"system.abilities.int.checkMod\",\n        ...(this.system.attributes.init.ability === \"int\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"wisChecks\":\n      result.push(\n        \"system.abilities.wis.checkMod\",\n        ...(this.system.attributes.init.ability === \"wis\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"chaChecks\":\n      result.push(\n        \"system.abilities.cha.checkMod\",\n        ...(this.system.attributes.init.ability === \"cha\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"allSpeeds\":\n      for (const speedKey of Object.keys(curData.attributes.speed)) {\n        result.push(`system.attributes.speed.${speedKey}.total`);\n      }\n      break;\n    case \"landSpeed\":\n      result.push(\"system.attributes.speed.land.total\");\n      break;\n    case \"climbSpeed\":\n      result.push(\"system.attributes.speed.climb.total\");\n      break;\n    case \"swimSpeed\":\n      result.push(\"system.attributes.speed.swim.total\");\n      break;\n    case \"burrowSpeed\":\n      result.push(\"system.attributes.speed.burrow.total\");\n      break;\n    case \"flySpeed\":\n      result.push(\"system.attributes.speed.fly.total\");\n      break;\n    case \"cmb\":\n      result.push(\"system.attributes.cmb.bonus\");\n      break;\n    case \"cmd\":\n      if ([\"dodge\", \"haste\"].includes(modifierType)) {\n        result.push(\"system.attributes.cmd.total\");\n        break;\n      }\n      result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"init\":\n      result.push(\"system.attributes.init.total\");\n      break;\n    case \"acpA\":\n      result.push(\"system.attributes.acp.armorBonus\");\n      break;\n    case \"acpS\":\n      result.push(\"system.attributes.acp.shieldBonus\");\n      break;\n    case \"mDexA\":\n      result.push(\"system.attributes.mDex.armorBonus\");\n      break;\n    case \"mDexS\":\n      result.push(\"system.attributes.mDex.shieldBonus\");\n      break;\n    case \"spellResist\":\n      result.push(\"system.attributes.sr.total\");\n      break;\n    case \"damage\":\n      result.push(\"system.attributes.damage.general\");\n      break;\n    case \"mdamage\":\n      result.push(\"system.attributes.damage.meleeAll\");\n      break;\n    case \"rdamage\":\n      result.push(\"system.attributes.damage.rangedAll\");\n      break;\n    case \"wdamage\":\n      result.push(\"system.attributes.damage.weapon\");\n      break;\n    case \"rwdamage\":\n      result.push(\"system.attributes.damage.ranged\");\n      break;\n    case \"twdamage\":\n      result.push(\"system.attributes.damage.thrown\");\n      break;\n    case \"mwdamage\":\n      result.push(\"system.attributes.damage.melee\");\n      break;\n    case \"ndamage\":\n      result.push(\"system.attributes.damage.natural\");\n      break;\n    case \"sdamage\":\n      result.push(\"system.attributes.damage.spell\");\n      break;\n    case \"bonusFeats\":\n      result.push(\"system.details.feats.bonus\");\n      break;\n    case \"bonusSkillRanks\":\n      result.push(\"system.details.skills.bonus\");\n      break;\n    case \"concentration\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.concentration.total\",\n        \"system.attributes.spells.spellbooks.secondary.concentration.total\",\n        \"system.attributes.spells.spellbooks.tertiary.concentration.total\",\n        \"system.attributes.spells.spellbooks.spelllike.concentration.total\"\n      );\n      break;\n    case \"cl\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.cl.total\",\n        \"system.attributes.spells.spellbooks.secondary.cl.total\",\n        \"system.attributes.spells.spellbooks.tertiary.cl.total\",\n        \"system.attributes.spells.spellbooks.spelllike.cl.total\"\n      );\n      break;\n    case \"dc\":\n      result.push(`system.attributes.spells.school.all.dc`);\n      break;\n  }\n\n  // Per school DC target\n  const schoolDC = /^dc\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolDC) {\n    const schoolId = schoolDC.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.dc`);\n  }\n\n  // Per school CL target\n  const schoolCL = /^cl\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolCL) {\n    const schoolId = schoolCL.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.cl`);\n  }\n\n  // Per book concentration target\n  const concnMatch = /^concn\\.(?<bookId>\\w+)/.exec(target);\n  if (concnMatch) {\n    const bookId = concnMatch.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.concentration.total`);\n  }\n\n  // Per book caster level target\n  const bookCL = /^cl\\.book\\.(?<bookId>\\w+)/.exec(target);\n  if (bookCL) {\n    const bookId = bookCL.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.cl.bonus`);\n  }\n\n  if (/^skill\\./.test(target)) {\n    const parts = target.split(\".\").slice(1);\n    const sklKey = parts.shift();\n    const subSklKey = parts.pop();\n\n    if (subSklKey) {\n      if (curData.skills[sklKey]?.subSkills?.[subSklKey] != null) {\n        result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n      }\n    } else {\n      const skillData = curData.skills[sklKey];\n      if (skillData != null) {\n        result.push(`system.skills.${sklKey}.mod`);\n        // Apply to subskills also\n        for (const subSklKey of Object.keys(skillData.subSkills ?? {})) {\n          result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n        }\n      }\n    }\n  }\n\n  // Call hooks to enable modules to add or adjust the result array\n  if (Hooks.events.pf1GetChangeFlat?.length) {\n    Hooks.callAll(\"pf1GetChangeFlat\", result, target, modifierType, value, this);\n  }\n\n  // Return results directly when deprecation is removed\n  return result;\n};\n\n/**\n * Calculate actor health\n *\n * @param {ActorPF} actor - Actor\n * @param {ItemPF[]} allClasses - All classes from the actor\n * @param changes - Changes\n */\nfunction calculateHealth(actor, allClasses, changes) {\n  // Categorize classes\n  const [pcClasses, npcClasses, racialHD] = allClasses.reduce(\n    (all, cls) => {\n      if (cls.subType === \"racial\") all[2].push(cls);\n      else if (cls.subType === \"npc\") all[1].push(cls);\n      else all[0].push(cls);\n      return all;\n    },\n    [[], [], []]\n  );\n\n  const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n  /**\n   * @function\n   * @param {number} value\n   * @returns {number}\n   */\n  const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n  const { continuous } = healthConfig;\n\n  /**\n   * @param {number} value - Amount of health to add\n   * @param {ItemPF} source - Source item\n   */\n  function pushHealth(value, source) {\n    const fcb = pf1.config.favoredClassTypes.includes(source.subType) ? source.system.fc?.hp?.value || 0 : 0;\n\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: value,\n        target: \"mhp\",\n        type: \"untypedPerm\",\n        flavor: source.name,\n      }),\n      new pf1.components.ItemChange({\n        formula: value,\n        target: \"vigor\",\n        type: \"untypedPerm\",\n        flavor: source.name,\n      })\n    );\n    if (fcb != 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: fcb,\n          target: \"mhp\",\n          type: \"untypedPerm\",\n          flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n        }),\n        new pf1.components.ItemChange({\n          formula: fcb,\n          target: \"vigor\",\n          type: \"untypedPerm\",\n          flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {ItemPF} source - Source item\n   */\n  function manualHealth(source) {\n    let health = source.system.hp;\n    if (!continuous) health = round(health);\n\n    pushHealth(health, source);\n  }\n\n  /**\n   * @param {ItemPF} source - Class granting health\n   * @param {object} config - Class type configuration\n   * @param {number} config.rate - Automatic HP rate\n   * @param {boolean} config.maximized - Is this class allowed to grant maximized HP\n   * @param {object} state - State tracking\n   */\n  function autoHealth(source, { rate, maximized } = {}, state) {\n    const hpPerHD = source.system.hd ?? 0;\n    if (hpPerHD === 0) return;\n\n    let health = 0;\n\n    // Mythic\n    if (source.subType === \"mythic\") {\n      const hpPerTier = hpPerHD ?? 0;\n      if (hpPerTier === 0) return;\n      const tiers = source.system.level ?? 0;\n      if (tiers === 0) return;\n      health = hpPerTier * tiers;\n    }\n    // Everything else\n    else {\n      let dieHealth = 1 + (hpPerHD - 1) * rate;\n      if (!continuous) dieHealth = round(dieHealth);\n\n      const hitDice = source.hitDice;\n\n      let maxedHD = 0;\n      if (maximized) {\n        maxedHD = Math.min(hitDice, state.maximized.remaining);\n        state.maximized.value += maxedHD;\n      }\n      const maxedHp = maxedHD * hpPerHD;\n      const levelHp = Math.max(0, hitDice - maxedHD) * dieHealth;\n      health = maxedHp + levelHp;\n    }\n\n    pushHealth(health, source);\n  }\n\n  /**\n   * Compute and push health, tracking the remaining maximized levels.\n   *\n   * @param {ItemPF[]} sources - Health source classes\n   * @param {object} config - Configuration for this class type\n   * @param {boolean} config.auto - Automatic health enabled\n   * @param config\n   * @param state\n   */\n  function computeHealth(sources, config, state) {\n    if (config.auto) {\n      for (const cls of sources) autoHealth(cls, config, state);\n    } else {\n      for (const cls of sources) manualHealth(cls);\n    }\n  }\n\n  // State tracking\n  const state = {\n    maximized: {\n      value: 0,\n      max: healthConfig.maximized,\n      get remaining() {\n        return this.max - this.value;\n      },\n    },\n  };\n\n  computeHealth(racialHD, healthConfig.hitdice.Racial, state);\n  computeHealth(pcClasses, healthConfig.hitdice.PC, state);\n  computeHealth(npcClasses, healthConfig.hitdice.NPC, state);\n}\n\nexport const addDefaultChanges = function (changes) {\n  const actorData = this.system;\n  // Call hook\n  const tempChanges = [];\n  if (Hooks.events.pf1AddDefaultChanges?.length) {\n    Hooks.callAll(\"pf1AddDefaultChanges\", this, tempChanges);\n  }\n  changes.push(...tempChanges.filter((c) => c instanceof pf1.components.ItemChange));\n\n  const allClasses = this.itemTypes.class.sort((a, b) => a.sort - b.sort);\n\n  calculateHealth(this, allClasses, changes);\n\n  // Add class data to saving throws\n  const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\") === true;\n  for (const a of Object.keys(actorData.attributes.savingThrows)) {\n    let hasGoodSave = false;\n    actorData.attributes.savingThrows[a].total = actorData.attributes.savingThrows[a]?.base ?? 0;\n\n    const total = allClasses.reduce((cur, cls) => {\n      const base = cls.system.savingThrows[a].base;\n\n      if (!useFractional) {\n        // Add per class change\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: base,\n            target: a,\n            type: \"untypedPerm\",\n            flavor: cls.name,\n          })\n        );\n      } else {\n        if (cls.system.savingThrows[a].good === true) hasGoodSave = true;\n      }\n      return cur + base;\n    }, 0);\n\n    if (useFractional) {\n      // Add shared change with fractional\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: Math.floor(total),\n          target: a,\n          type: \"untypedPerm\",\n          flavor: game.i18n.localize(\"PF1.Base\"),\n        })\n      );\n    }\n\n    // Fractional bonus +2 when one class has good save\n    if (useFractional && hasGoodSave) {\n      const goodSaveFormula = pf1.config.classFractionalSavingThrowFormulas.goodSaveBonus;\n      const total = RollPF.safeRollSync(goodSaveFormula).total;\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: total,\n          target: a,\n          type: \"untypedPerm\",\n          flavor: game.i18n.localize(\"PF1.SavingThrowGoodFractionalBonus\"),\n        })\n      );\n    }\n  }\n\n  // Add Constitution to HP\n  const hpAbility = actorData.attributes.hpAbility;\n  if (hpAbility) {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"@attributes.hpAbility.mod * @attributes.hd.total\",\n        operator: \"add\",\n        target: \"mhp\",\n        type: \"base\",\n        flavor: pf1.config.abilities[hpAbility],\n      })\n    );\n\n    if (!this.system.attributes.wounds?.base) {\n      // > a creature has a number of wound points equal to twice its Constitution score.\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.undrained * 2\",\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"base\",\n          flavor: pf1.config.abilities[hpAbility],\n        })\n      );\n      // > It also has a wound threshold equal to its Constitution score.\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.undrained\",\n          operator: \"add\",\n          target: \"woundThreshold\",\n          type: \"base\",\n          flavor: pf1.config.abilities[hpAbility],\n        })\n      );\n      // https://www.aonprd.com/Rules.aspx?ID=1157\n      // >  For each point of Constitution damage a creature takes, it loses 2 wound points\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-(@attributes.hpAbility.damage * 2)\",\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.AbilityDamage\"),\n        })\n      );\n      // > When a creature takes a penalty to its Constitution score or its Constitution is drained,\n      // > it loses 1 wound point per point of drain or per penalty\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.penalty\", // no minus since penalty is negative inherently\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(`PF1.Ability${hpAbility.capitalize()}Pen`),\n        })\n      );\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-@attributes.hpAbility.drain\",\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.AbilityDrain\"),\n        })\n      );\n    }\n  }\n\n  // Add movement speed(s)\n  for (const [k, s] of Object.entries(actorData.attributes.speed)) {\n    let base = s.base;\n    if (!base) base = 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: base,\n        target: `${k}Speed`,\n        type: \"base\",\n        operator: \"set\",\n        priority: 1001,\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      })\n    );\n  }\n\n  // Add base attack modifiers shared by all attacks\n  {\n    // BAB to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Negative levels to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n    // ACP to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.acp.attackPenalty\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n      })\n    );\n  }\n\n  // Add variables to CMD\n  {\n    // BAB to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Strength or substitute to CMD\n    const strAbl = actorData.attributes.cmd.strAbility;\n    if (strAbl in pf1.config.abilities) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${strAbl}.mod`,\n          target: \"cmd\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[strAbl],\n        })\n      );\n    }\n    // Negative levels to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n  }\n\n  // Add Dexterity Modifier to Initiative\n  {\n    const abl = actorData.attributes.init.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"init\",\n          type: \"untypedPerm\",\n          priority: -100,\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n\n    // Add ACP penalty\n    if ([\"str\", \"dex\"].includes(abl)) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-@attributes.acp.attackPenalty\",\n          operator: \"add\",\n          target: \"init\",\n          type: \"untyped\",\n          priority: -100,\n          flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n        })\n      );\n    }\n  }\n\n  // Add Ability modifiers and negative levels to saving throws\n  {\n    // Ability Mod to Fortitude\n    let abl = actorData.attributes.savingThrows.fort.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"fort\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n    // Ability Mod to Reflex\n    abl = actorData.attributes.savingThrows.ref.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"ref\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n    // Ability Mod to Will\n    abl = actorData.attributes.savingThrows.will.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"will\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n    // Negative level to saves\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"allSavingThrows\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n  }\n  // Spell Resistance\n  {\n    const sr = actorData.attributes.sr.formula || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: sr,\n        target: \"spellResist\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.CustomBonus\"),\n      })\n    );\n  }\n  {\n    // Carry capacity strength bonus\n    const cStr = actorData.details.carryCapacity.bonus.user || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: cStr,\n        target: \"carryStr\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n    // Carry capacity multiplier\n    const cMultBase = actorData.details.carryCapacity.multiplier.base ?? 1;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: cMultBase,\n        target: \"carryMult\",\n        type: \"base\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      })\n    );\n    const cMult = actorData.details.carryCapacity.multiplier.user || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: cMult,\n        target: \"carryMult\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n  }\n\n  // NPC Lite Sheet Values for Init, CMD, BAB and AC\n  {\n    const liteValues = {\n      init: null,\n      cmd: null,\n      bab: null,\n      ac: (data) => data.normal,\n    };\n\n    for (const [key, valfn] of Object.entries(liteValues)) {\n      let value = actorData.attributes[key];\n      if (typeof valfn === \"function\") value = valfn(value);\n      value = value.value;\n\n      if (value !== undefined) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: value,\n            trget: key,\n            type: \"base\",\n            flavor: game.i18n.localize(\"PF1.Custom\"),\n            operator: \"set\",\n          })\n        );\n      }\n    }\n  }\n\n  // Natural armor\n  {\n    const ac = actorData.attributes.naturalAC || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: ac,\n        target: \"nac\",\n        type: \"untyped\",\n        flavor: game.i18n.format(\"PF1.CustomBonusType\", { type: game.i18n.localize(\"PF1.NaturalArmor\") }),\n      })\n    );\n  }\n  // Add armor bonuses from equipment\n  this.itemTypes.equipment\n    .filter((item) => item.system.equipped)\n    .forEach((item) => {\n      let armorTarget = \"aac\";\n      if (item.system.subType === \"shield\") armorTarget = \"sac\";\n      // Push base armor\n      if (item.system.armor.value || item.system.armor.enh) {\n        const baseAC = item.isBroken ? Math.floor(item.system.armor.value / 2) : item.system.armor.value;\n        const enhAC = item.system.armor.enh;\n        changes.push(\n          new pf1.components.ItemChange(\n            {\n              formula: baseAC,\n              target: armorTarget,\n              type: \"base\",\n            },\n            { parent: item }\n          )\n        );\n        changes.push(\n          new pf1.components.ItemChange(\n            {\n              formula: enhAC,\n              target: armorTarget,\n              type: \"enhancement\",\n            },\n            { parent: item }\n          )\n        );\n      }\n    });\n\n  // Add fly bonuses or penalties based on maneuverability\n  {\n    const flyKey = actorData.attributes.speed.fly.maneuverability;\n    let flyValue = 0;\n    if (flyKey != null) flyValue = pf1.config.flyManeuverabilityValues[flyKey];\n    if (flyValue !== 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: flyValue,\n          target: \"skill.fly\",\n          type: \"racial\",\n          flavor: game.i18n.localize(\"PF1.Movement.FlyManeuverability.Label\"),\n        })\n      );\n    }\n  }\n  // Add swim and climb skill bonuses based on having speeds for them\n  {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.climb.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.clm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.climb\"),\n      })\n    );\n\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.swim.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.swm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.swim\"),\n      })\n    );\n  }\n\n  // Negative level to skills\n  {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"skills\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n  }\n\n  // Add size bonuses to various attributes\n  const sizeKey = actorData.traits.size;\n  if (sizeKey !== \"med\") {\n    // AC\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeMods[sizeKey],\n        target: \"ac\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n    // Stealth skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeStealthMods[sizeKey],\n        target: \"skill.ste\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n    // Fly skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeFlyMods[sizeKey],\n        target: \"skill.fly\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n    // CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeSpecialMods[sizeKey],\n        target: \"cmd\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n  }\n\n  // Custom skill rank bonus from sheet\n  if (this.system.details?.bonusSkillRankFormula) {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: this.system.details.bonusSkillRankFormula,\n        target: \"bonusSkillRanks\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.SkillBonusRankFormula\"),\n      })\n    );\n  }\n\n  // Add conditions\n  for (const [con, v] of Object.entries(actorData.conditions)) {\n    if (!v) continue;\n    const condition = pf1.registry.conditions.get(con);\n    if (!condition) continue;\n\n    const mechanic = condition.mechanics;\n    if (!mechanic) continue;\n\n    // Add changes\n    for (const change of mechanic.changes ?? []) {\n      // Alter change data\n      const changeData = { ...change, flavor: condition.name };\n\n      // Create change object\n      const changeObj = new pf1.components.ItemChange(changeData);\n      changes.push(changeObj);\n    }\n\n    // Set flags\n    for (const flag of mechanic.flags ?? []) {\n      this.changeFlags[flag] = true;\n    }\n  }\n\n  // Negative level to hit points and init\n  if (actorData.attributes.energyDrain > 0) {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-(@attributes.energyDrain * 5)\",\n        operator: \"add\",\n        target: \"mhp\",\n        type: \"untyped\",\n        priority: -750,\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-(@attributes.energyDrain * 5)\",\n        operator: \"add\",\n        target: \"vigor\",\n        type: \"untyped\",\n        priority: -750,\n        flavor: game.i18n.localize(\"PF1.NegativeLevels\"),\n      })\n    );\n  }\n};\n\n/**\n * Set actor skill baseline values.\n */\nfunction resetSkills() {\n  const actorData = this.system;\n  const skills = actorData.skills;\n\n  const csBonus = pf1.config.classSkillBonus;\n\n  const resetSkill = (skill) => {\n    const rank = skill.rank || 0;\n    skill.mod = rank + (skill.cs && rank > 0 ? csBonus : 0);\n  };\n\n  for (const [skillKey, skill] of Object.entries(skills)) {\n    if (!skill) {\n      console.warn(`Bad skill data for \"${skillKey}\"`, this);\n      continue;\n    }\n\n    resetSkill(skill);\n\n    for (const [subSkillKey, subSkill] of Object.entries(skill.subSkills || {})) {\n      if (!subSkill) {\n        console.warn(`Bad subskill data for \"${skillKey}.${subSkillKey}\"`, this);\n      } else {\n        resetSkill(subSkill);\n      }\n    }\n  }\n}\n\n/**\n * Finalize actor skill values.\n */\nfunction finalizeSkills() {\n  const actorData = this.system;\n  const skills = actorData.skills;\n  if (!skills) return; // Vehicles, Traps and Haunts have no skills\n\n  const abilities = actorData.abilities;\n\n  const acpPenaltyValue = actorData.attributes?.acp?.skill ?? 0;\n\n  const finalizeSkill = (skill) => {\n    const acpPenalty = skill.acp ? acpPenaltyValue : 0;\n    const abilityModifier = abilities[skill.ability]?.mod || 0;\n    skill.mod += abilityModifier - acpPenalty;\n  };\n\n  for (const [skillKey, skill] of Object.entries(skills)) {\n    if (!skill) continue;\n    finalizeSkill(skill);\n    for (const [subSkillKey, subSkill] of Object.entries(skill.subSkills || {})) {\n      if (!subSkill) continue;\n      finalizeSkill(subSkill);\n    }\n  }\n}\n\nexport const getSourceInfo = function (obj, key) {\n  obj[key] ??= { negative: [], positive: [] };\n  return obj[key];\n};\n\nexport const setSourceInfoByName = function (obj, key, name, value, positive = true) {\n  const target = positive ? \"positive\" : \"negative\";\n  const sourceInfo = getSourceInfo(obj, key)[target];\n  const data = sourceInfo.find((o) => o.name === name);\n  if (data) data.value = value;\n  else {\n    sourceInfo.push({\n      name: name,\n      value: value,\n    });\n  }\n};\n\n/**\n * @param {ItemChange[]} changes - An array containing all changes to check. Must be called after they received a value (by ItemChange.applyChange)\n * @param {object} [options]\n * @param {boolean} [options.ignoreTarget] - Whether to only check for modifiers such as enhancement, insight (true) or whether the target (AC, weapon damage) is also important (false)\n * @returns {ItemChange[]} - A list of processed changes, excluding the lower-valued ones inserted (if they don't stack)\n */\nexport const getHighestChanges = function (changes, options = { ignoreTarget: false }) {\n  const highestTemplate = {\n    value: 0,\n    ids: [],\n    highestID: null,\n  };\n  const highest = Object.keys(pf1.config.bonusTypes).reduce((cur, k) => {\n    if (options.ignoreTarget) cur[k] = foundry.utils.deepClone(highestTemplate);\n    else cur[k] = {};\n    return cur;\n  }, {});\n\n  for (const c of changes) {\n    let h;\n    if (options.ignoreTarget) h = highest[c.type];\n    else h = highest[c.type]?.[c.target];\n\n    if (!h) continue; // Ignore bad changes\n    h.ids.push(c._id);\n    if (h.value < c.value || !h.highestID) {\n      h.value = c.value;\n      h.highestID = c._id;\n    }\n  }\n\n  {\n    let mod, h;\n    const filterFunc = function (c) {\n      if (h.highestID === c._id) return true;\n      if (pf1.config.stackingBonusTypes.indexOf(mod) === -1 && h.ids.includes(c._id)) return false;\n      return true;\n    };\n\n    for (mod of Object.keys(highest)) {\n      if (options.ignoreTarget) {\n        h = highest[mod];\n        changes = changes.filter(filterFunc);\n      } else {\n        for (const subTarget of Object.keys(highest[mod])) {\n          h = highest[mod][subTarget];\n          changes = changes.filter(filterFunc);\n        }\n      }\n    }\n  }\n\n  return changes;\n};\n","import { getChangeFlat, getSourceInfo } from \"../documents/actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n/**\n * Change datamodel\n *\n * @property {string} formula\n * @property {\"add\"|\"set\"} operator\n * @property {BuffTarget} target\n * @property {string} type - Bonus type\n * @property {string} priority\n * @property {number} value\n * @property {string} flavor\n * @property {boolean} continuous\n * @property {ItemPF|ActorPF} parent\n */\nexport class ItemChange extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      _id: new fields.StringField({\n        blank: false,\n        initial: () => foundry.utils.randomID(8),\n        required: true,\n        readonly: true,\n      }),\n      formula: new fields.StringField({ blank: true, required: false }),\n      operator: new fields.StringField({ blank: false, initial: \"add\", choices: [\"add\", \"set\"] }),\n      target: new fields.StringField({ blank: true, required: false }),\n      type: new fields.StringField({ blank: true, required: false }),\n      priority: new fields.NumberField({ initial: 0, required: false }),\n      value: new fields.NumberField({ initial: 0, required: false }),\n      flavor: new fields.StringField({ blank: true, initial: undefined, required: false }),\n      continuous: new fields.BooleanField({ initial: undefined, required: false }),\n    };\n  }\n\n  static migrateData(data) {\n    // Update terminology\n    if (data.subTarget) {\n      data.target = data.subTarget;\n      delete data.subTarget;\n    }\n    if (data.modifier) {\n      data.type = data.modifier;\n      delete data.modifier;\n    }\n    // Script operator is no longer supported\n    // And migrate legacy operators\n    if (data.operator === \"script\") data.operator = \"add\";\n    else if (data.operator === \"+\") data.operator = \"add\";\n    else if (data.operator === \"=\") data.operator = \"set\";\n  }\n\n  constructor(data, options = {}) {\n    if (options instanceof Item || options instanceof Actor) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemChange constructor's second parameter is now options object for datamodel instead of direct parent reference\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n\n      options = { parent: options };\n    }\n    super(data, options);\n    this.updateTime = new Date();\n  }\n\n  /**\n   * @override\n   */\n  _initialize(options = {}) {\n    super._initialize(options);\n    // Required to overcome Foundry's _id special case\n    Object.defineProperty(this, \"_id\", {\n      value: this._source._id,\n      writable: false,\n      configurable: true,\n    });\n    this.prepareData();\n  }\n\n  /**\n   * Prepare in-memory data.\n   *\n   * @internal\n   */\n  prepareData() {\n    this.flavor ||= this.parent?.name.replace(/\\[|\\]/g, \"\") || this.type;\n  }\n\n  /**\n   * Creates a change.\n   *\n   * @param {object[]} data - Data to initialize the change(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the change within.\n   * @returns {ItemChange[]} The resulting changes, or an empty array if nothing was created.\n   */\n  static async create(data, { parent = null } = {}) {\n    if (!Array.isArray(data)) data = [data];\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => new this(dataObj).toObject());\n\n      const oldChangeData = parent.toObject().system.changes ?? [];\n\n      // Catalog existing IDs\n      const ids = new Set(oldChangeData.map((c) => c._id));\n      // Remove invalid IDs\n      ids.delete(undefined);\n      ids.delete(\"\");\n      // Ensure new data has unique IDs that don't conflict with old\n      const newIds = new Set();\n      for (const c of data) {\n        c._id ||= foundry.utils.randomID(8);\n        while (ids.has(c._id)) c._id = foundry.utils.randomID(8);\n        ids.add(c._id);\n        newIds.add(c._id);\n      }\n\n      // Update parent\n      const newChangeData = [...oldChangeData, ...data];\n      await parent.update({ \"system.changes\": newChangeData });\n\n      // Return results\n      return [...parent.changes.filter((c) => newIds.has(c._id))];\n    }\n\n    return [];\n  }\n\n  async delete() {\n    const item = this.parent;\n    if (!item) throw new Error(\"Can not delete Change not in an item\");\n    const changes = item.toObject().system.changes ?? [];\n    const changeId = this.id;\n    changes.findSplice((c) => c._id === changeId);\n    return item.update({ \"system.changes\": changes });\n  }\n\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemChange.defaultData() is deprecated in favor of using ItemChange DataModel\",\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return new this().toObject();\n  }\n\n  get data() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange.data is deprecated in favor of accessing the model directly.\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    return this;\n  }\n\n  /** @type {string} - Change ID */\n  get id() {\n    return this._id;\n  }\n\n  get subTarget() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange.subTarget is deprecated in favor of ItemChange.target\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.target;\n  }\n\n  get modifier() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange.modifier is deprecated in favor of ItemChange.type\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.type;\n  }\n\n  /** @type {boolean} */\n  get isDeferred() {\n    const targetData = pf1.config.buffTargets[this.target];\n    if (targetData) return targetData.deferred ?? false;\n\n    // Also any per-skill change is deferred\n    return /^skill\\./.test(this.target);\n  }\n\n  /** @type {boolean} - Does this change refer to a distance? */\n  get isDistance() {\n    return /speed/i.test(this.target);\n  }\n\n  get source() {\n    console.warn(\"ItemChange.source does not exist\");\n    return null;\n  }\n\n  getSourceInfoTargets(actor) {\n    switch (this.target) {\n      case \"aac\":\n      case \"sac\":\n      case \"nac\":\n        return [\"system.attributes.ac.normal.total\", \"system.attributes.ac.flatFooted.total\"];\n    }\n\n    // Return default targets\n    return getChangeFlat.call(actor, this.target, this.type);\n  }\n\n  _preUpdate(data) {\n    data = new this.constructor(data).toObject();\n\n    // Make sure sub-target is valid\n    /*\n    // BUG: This does not work reliably for much anything but skills\n    const targetCategory = data.target?.split(\".\").shift();\n    if (targetCategory) {\n      const target = data.target || this.target;\n      const changeTargets = this.parent.getChangeTargets(targetCategory);\n      if (changeTargets[target] == null) {\n        console.error(`Invalid change target ${target}, resetting.`);\n        data.target = \"\";\n      }\n    }\n    */\n\n    return data;\n  }\n\n  /**\n   * @override\n   */\n  updateSource(data, options) {\n    // Shallow copy to avoid altering things for caller\n    data = { ...data };\n    // Prevent ID alterations\n    if (this.id && data._id) delete data._id;\n\n    return super.updateSource(data, options);\n  }\n\n  /**\n   *\n   * @param {object} data - Update data\n   * @param {object} options - Additional options\n   * @param {object} context - Update context\n   * @throws {Error} - If change has no parent to update or the change does not exist on parent.\n   * @returns {Promise<Item|null>} - Updated parent, or null if no update was performed (e.g. nothing changed)\n   */\n  async update(data, options = {}, context = {}) {\n    if (!this.parent) throw new Error(\"ItemChange has no parent to update.\");\n\n    this.updateTime = new Date();\n\n    data = this._preUpdate(data);\n    // Prevent ID alterations\n    if (data._id) delete data._id;\n\n    const changes = this.parent.toObject().system.changes ?? [];\n\n    const idx = changes.findIndex((change) => change._id === this.id);\n    if (idx >= 0) {\n      const updated = this.updateSource(data);\n      // Omit update if nothing would change\n      if (foundry.utils.isEmpty(updated)) return null;\n\n      changes[idx] = this.toObject();\n      return this.parent.update({ \"system.changes\": changes }, context);\n    } else {\n      throw new Error(`Change #${this.id} not found on parent ${this.parent.uuid}`);\n    }\n  }\n\n  /**\n   * Safely apply this change to an actor, catching any errors.\n   *\n   * @internal\n   * @see {@link ItemChange#applyChange}\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   */\n  _safeApplyChange(actor, targets = null, { applySourceInfo = true } = {}) {\n    try {\n      this.applyChange(actor, targets, { applySourceInfo });\n    } catch (error) {\n      if (this.parent?.isOwner || actor.isOwner) {\n        const msgSourceReference = this.parent\n          ? `from ${this.parent.name} [${this.parent.uuid}] to ${actor.name}`\n          : `to ${actor.name} [${actor.uuid}]]`;\n        const errorMessage = `Failed to apply ItemChange ${this.id} ${msgSourceReference}`;\n        const errorData = {\n          change: this,\n          parent: this.parent,\n          actor,\n          targets,\n        };\n        Hooks.onError(\"ItemChange#applyChange\", error, {\n          msg: errorMessage,\n          log: \"error\",\n          data: errorData,\n        });\n        ui.notifications?.error(error.message, { console: false });\n      }\n    }\n  }\n\n  /**\n   * Applies this change to an actor.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   * @param {object} [options.rollData] - Roll data\n   */\n  applyChange(actor, targets = null, { applySourceInfo = true, rollData } = {}) {\n    // Prepare change targets\n    targets ??= this.getTargets(actor);\n\n    rollData ??= this.parent ? this.parent.getRollData({ refresh: true }) : actor.getRollData({ refresh: true });\n\n    const overrides = actor.changeOverrides;\n    for (const t of targets) {\n      const override = overrides[t];\n      const operator = this.operator;\n\n      // HACK: Data prep change application creates overrides; only changes meant for manual comparison lack them,\n      // and those do not have to be applied to the actor.\n      // This hack enables calling applyChange on Changes that are not meant to be applied, but require a call to\n      // determine effective operator and/or value.\n      if (!override) continue;\n\n      let value = 0;\n      if (this.formula) {\n        if (operator === \"function\") {\n          foundry.utils.logCompatibilityWarning(\n            \"ItemChange function operator is no longer supported with no replacement.\",\n            { since: \"PF1 v10\", until: \"PF1 v11\" }\n          );\n          continue;\n        } else if (!isNaN(this.formula)) {\n          value = parseFloat(this.formula);\n        } else if (this.isDeferred && RollPF.parse(this.formula).some((t) => !t.isDeterministic)) {\n          value = RollPF.replaceFormulaData(this.formula, rollData, { missing: 0 });\n        } else {\n          value = RollPF.safeRollSync(\n            this.formula,\n            rollData,\n            [t, this, rollData],\n            { suppressError: this.parent && !this.parent.isOwner },\n            { maximize: true }\n          ).total;\n        }\n      }\n\n      this.value = value;\n\n      if (!t) continue;\n\n      const prior = override[operator][this.type];\n\n      switch (operator) {\n        case \"add\":\n          {\n            let base = foundry.utils.getProperty(actor, t);\n\n            // Don't change non-existing ability scores\n            if (base == null) {\n              if (t.match(/^system\\.abilities/)) continue;\n              base = 0;\n            }\n\n            // Deferred formula\n            if (typeof value === \"string\") break;\n\n            if (typeof base === \"number\") {\n              // Skip positive dodge modifiers if lose dex to AC is in effect\n              if (actor.changeFlags.loseDexToAC && value > 0 && this.type === \"dodge\" && this.isAC) continue;\n\n              if (pf1.config.stackingBonusTypes.includes(this.type)) {\n                // Add stacking bonus\n                foundry.utils.setProperty(actor, t, base + value);\n                override[operator][this.type] = (prior ?? 0) + value;\n              } else {\n                // Use higher value only\n                const diff = !prior ? value : Math.max(0, value - (prior ?? 0));\n                foundry.utils.setProperty(actor, t, base + diff);\n                override[operator][this.type] = Math.max(prior ?? 0, value);\n              }\n            }\n          }\n          break;\n\n        case \"set\":\n          foundry.utils.setProperty(actor, t, value);\n          override[operator][this.type] = value;\n          break;\n      }\n\n      if (applySourceInfo) this.applySourceInfo(actor);\n\n      // Adjust ability modifier\n      const modifierChanger = t.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.(?:total|penalty|base)$/);\n      const abilityTarget = modifierChanger?.[1];\n      if (abilityTarget) {\n        const ability = actor.system.abilities[abilityTarget];\n        ability.mod = pf1.utils.getAbilityModifier(ability.total, {\n          damage: ability.damage,\n          penalty: ability.penalty,\n        });\n      }\n    }\n  }\n\n  /** @type {boolean} - Does this target any kind of AC? */\n  get isAC() {\n    return [\"ac\", \"aac\", \"sac\", \"nac\", \"tac\", \"ffac\"].includes(this.target);\n  }\n\n  /**\n   * Applies this change's info to an actor's `sourceInfo`.\n   * Info is only added if either the {@link type | modifier type} allows stacking or the {@link value} is higher than the previous value.\n   * If the modifier type is not stacking and this change's info is added, existing and now ineffective info entries are removed.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @returns {void}\n   */\n  applySourceInfo(actor) {\n    const sourceInfoTargets = this.getSourceInfoTargets(actor);\n    const value = this.value;\n\n    // This Change's info entry data\n    const infoEntry = {\n      value,\n      operator: this.operator,\n      name: this.parent ? this.parent.name : this.flavor,\n      modifier: this.type,\n      type: this.parent ? this.parent.type : null,\n      change: this,\n    };\n\n    switch (this.operator) {\n      case \"add\":\n      case \"function\":\n        if (pf1.config.stackingBonusTypes.includes(this.type)) {\n          // Always add stacking entries\n          const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n          for (const si of sourceInfoTargets) {\n            getSourceInfo(actor.sourceInfo, si)[sourceInfoGroup].push(infoEntry);\n          }\n        } else {\n          for (const infoTarget of sourceInfoTargets) {\n            const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n            const sInfo = getSourceInfo(actor.sourceInfo, infoTarget)[sourceInfoGroup];\n\n            // Assume this Change's info entry should be added\n            let doAdd = true;\n\n            // The value of the this Change's source info entry for this specific target\n            let sumValue = value;\n\n            // Check if there already is an info entry with which this Change should be combined\n            // This is the case for `enhancement` and `base` entries otherwise sharing parent and target\n            const existingInfoEntry = sInfo.find((infoEntry) => {\n              const hasSameParent = infoEntry.change?.parent === this.parent;\n              const isEnh =\n                (infoEntry.change?.type === \"base\" && this.type === \"enhancement\") ||\n                (infoEntry.change?.type === \"enhancement\" && this.type === \"base\");\n              const hasSameTarget = infoEntry.change?.target === this.target;\n              return hasSameParent && isEnh && hasSameTarget;\n            });\n            if (existingInfoEntry) {\n              doAdd = false;\n              if (existingInfoEntry.change?.type === \"base\") {\n                // This Change enhances an existing base\n                existingInfoEntry.value += value;\n                continue;\n              } else {\n                // This Change replaces an existing `enhancement` entry with its own `base` entry, using the sum of both values\n                sumValue += existingInfoEntry.value;\n                // Check whether the combined entry should exist, or if another entry is already better than it\n                const hasHighestValue = !sInfo.some((infoEntry) => {\n                  const isSameModifier = infoEntry.modifier === infoEntry.modifier;\n                  const target = infoEntry.change?.target;\n                  const isSameTarget = target ? target === this.target : true;\n                  const hasHigherValue = infoEntry.value > sumValue;\n                  return isSameModifier && isSameTarget && hasHigherValue;\n                });\n                // If the merged entry is the best, replace the existing entry with it\n                sInfo.findSplice(\n                  (entry) => entry === existingInfoEntry,\n                  hasHighestValue ? { ...infoEntry, value: sumValue } : undefined\n                );\n              }\n            }\n\n            // Determine whether there is an entry with a higher value; remove entries with lower values\n            if (this.type) {\n              sInfo.forEach((oldEntry) => {\n                if (!oldEntry.type) return;\n                const isSameType = oldEntry.change?.type === oldEntry.type;\n                if (isSameType) {\n                  if (oldEntry.value < sumValue) {\n                    sInfo.splice(sInfo.indexOf(oldEntry), 1);\n                  } else {\n                    doAdd = false;\n                  }\n                }\n              });\n            }\n\n            if (doAdd) sInfo.push({ ...infoEntry });\n          }\n        }\n        break;\n      case \"set\": {\n        for (const si of sourceInfoTargets) {\n          getSourceInfo(actor.sourceInfo, si).positive.push({ ...infoEntry });\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * @see {@link getChangeFlat}\n   * @param {ActorPF} actor - Actor instance\n   * @returns {Array<string>} - Valid targets for this change on specified actor\n   */\n  getTargets(actor) {\n    return getChangeFlat.call(actor, this.target, this.type, this.value);\n  }\n\n  toObject(...options) {\n    const data = super.toObject(...options);\n\n    // Cleanup: Following are never meant to be stored\n    delete data.value;\n    delete data.continuous;\n\n    // Null priority is pointless\n    if (data.priority === null) delete data.priority;\n\n    // Clear undefined values\n    for (const [key, value] of Object.entries(data)) {\n      if (value === undefined) delete data[key];\n    }\n\n    return data;\n  }\n}\n","import { RollPF } from \"./roll.mjs\";\n\n/**\n * A specialized Roll class which is used to evaluate damage rolls.\n * Provides additional utility getters for data relevant to damage rolls (e.g. damage type).\n */\nexport class DamageRoll extends RollPF {\n  /**\n   * @param {string} formula - The formula to parse.\n   * @param {object} data - The data object against which to parse attributes within the formula.\n   * @param {object} options - Additional options which customize the created Roll instance.\n   */\n  constructor(formula, data, options = {}) {\n    super(formula, data, options);\n\n    this.options.damageType ??= { values: [\"untyped\"], custom: \"\" };\n  }\n\n  /**\n   * Types of damage rolls with regard to their critical status.\n   *\n   * @type {{NON_CRITICAL: string, NORMAL: string, CRITICAL: string}}\n   */\n  static TYPES = {\n    NORMAL: \"normal\",\n    CRITICAL: \"crit\",\n    NON_CRITICAL: \"nonCrit\",\n  };\n\n  /**\n   * The damage type of this damage roll.\n   *\n   * @type {{values: string[], custom: string}}\n   */\n  get damageType() {\n    return this.options.damageType;\n  }\n\n  /**\n   * The type of this damage roll.\n   *\n   * @see {@link DamageRoll.TYPES}\n   * @type {\"normal\"|\"crit\"|\"nonCrit\"}\n   */\n  get type() {\n    return this.options.type;\n  }\n\n  /**\n   * Whether this damage roll is for a critical damage instance.\n   *\n   * @type {boolean}\n   */\n  get isCritical() {\n    return this.type === this.constructor.TYPES.CRITICAL;\n  }\n}\n","export class HealthConfigModel extends foundry.abstract.DataModel {\n  constructor(...args) {\n    super(...args);\n\n    Object.defineProperty(this, \"continuity\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"continuity string property in health configuration is deprecated in favor of continuous boolean property\",\n          {\n            since: \"PF1 v10\",\n            until: \"PF1 v11\",\n          }\n        );\n\n        return this.continuous ? \"continuous\" : \"discrete\";\n      },\n    });\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      hitdice: new fields.SchemaField({\n        Racial: new fields.SchemaField({\n          auto: new fields.BooleanField({ initial: false }),\n          rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1 }),\n          maximized: new fields.BooleanField({ initial: false }),\n        }),\n        PC: new fields.SchemaField({\n          auto: new fields.BooleanField({ initial: false }),\n          rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1 }),\n          maximized: new fields.BooleanField({ initial: true }),\n        }),\n        NPC: new fields.SchemaField({\n          auto: new fields.BooleanField({ initial: false }),\n          rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1 }),\n          maximized: new fields.BooleanField({ initial: false }),\n        }),\n      }),\n      maximized: new fields.NumberField({ integer: true, min: 0, initial: 1 }),\n      rounding: new fields.StringField({ blank: false, nullable: false, initial: \"up\" }),\n      continuous: new fields.BooleanField({ initial: false }),\n      variants: new fields.SchemaField({\n        pc: new fields.SchemaField({\n          useWoundsAndVigor: new fields.BooleanField({ initial: false }),\n          useWoundThresholds: new fields.NumberField({ initial: 0 }),\n          allowWoundThresholdOverride: new fields.BooleanField({ initial: false }),\n        }),\n        npc: new fields.SchemaField({\n          useWoundsAndVigor: new fields.BooleanField({ initial: false }),\n          useWoundThresholds: new fields.NumberField({ initial: 0 }),\n          allowWoundThresholdOverride: new fields.BooleanField({ initial: true }),\n        }),\n      }),\n    };\n  }\n\n  /**\n   * Retrieve hit die configuration relevant to given class.\n   *\n   * @param {ItemClassPF} item\n   * @returns {object} -\n   */\n  getClassHD(item) {\n    const subtype = item.system.subType;\n    switch (item.system.subType) {\n      case \"npc\":\n        return this.hitdice.NPC;\n      case \"racial\":\n        return this.hitdice.Racial;\n      default:\n        return this.hitdice.PC;\n    }\n  }\n\n  static migrateData(data) {\n    if (data.continuity) {\n      data.continuous = data.continuity === \"continuous\";\n    }\n  }\n\n  static get woundThesholdOptions() {\n    return {\n      0: game.i18n.localize(\"PF1.SETTINGS.Health.WoundThresholds.Disabled\"),\n      1: game.i18n.localize(\"PF1.SETTINGS.Health.WoundThresholds.Normal\"),\n      2: game.i18n.localize(\"PF1.SETTINGS.Health.WoundThresholds.Gritty\"),\n    };\n  }\n}\n\nexport class HealthConfig extends FormApplication {\n  /**\n   * @readonly\n   */\n  static model = HealthConfigModel;\n\n  constructor(object = new HealthConfigModel(), options) {\n    super(object, options);\n  }\n\n  /**\n   * @override\n   */\n  getData() {\n    this.healthConfig ??= new HealthConfigModel(game.settings.get(\"pf1\", \"healthConfig\").toObject());\n\n    const context = {\n      ...this.healthConfig,\n      woundThesholdOptions: HealthConfigModel.woundThesholdOptions,\n      healthRounding: {\n        up: \"PF1.SETTINGS.Health.RoundingUp\",\n        nearest: \"PF1.SETTINGS.Health.RoundingNearest\",\n        down: \"PF1.SETTINGS.Health.RoundingDown\",\n      },\n      healthContinuity: {\n        true: \"PF1.SETTINGS.Health.Continuous\",\n        false: \"PF1.SETTINGS.Health.Discrete\",\n      },\n    };\n\n    for (const [hdId, data] of Object.entries(context.hitdice)) {\n      data.label = `PF1.SETTINGS.Health.Class.${hdId.toLowerCase()}`;\n    }\n\n    return context;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      title: game.i18n.localize(\"PF1.SETTINGS.Health.Title\"),\n      id: \"health-config\",\n      template: \"systems/pf1/templates/settings/health.hbs\",\n      classes: [...options.classes, \"pf1\", \"health-config\"],\n      width: 480,\n      height: \"auto\",\n      tabs: [\n        {\n          navSelector: \".tabs\",\n          contentSelector: \".tabbed\",\n          initial: \"base\",\n          group: \"primary\",\n        },\n      ],\n      submitOnChange: true,\n      submitOnClose: false,\n      closeOnSubmit: false,\n    };\n  }\n\n  /**\n   * Handle button click to reset default settings\n   *\n   * @param event {Event}   The initial button click event\n   * @private\n   */\n  async _onReset(event) {\n    event.preventDefault();\n\n    await game.settings.set(\"pf1\", \"healthConfig\", {});\n    this.healthConfig = null; // remove cache\n    return this.render();\n  }\n\n  async _onSave(event) {\n    event.preventDefault();\n\n    const settings = this.healthConfig.toObject();\n    const diff = game.settings.get(\"pf1\", \"healthConfig\").updateSource(settings, { dry: true });\n    this.close();\n    if (foundry.utils.isEmpty(diff)) return;\n\n    await game.settings.set(\"pf1\", \"healthConfig\", settings);\n\n    SettingsConfig.reloadConfirm({ world: true });\n  }\n\n  /**\n   * Activate the default set of listeners for the Document sheet These listeners handle basic stuff like form submission or updating images.\n   *\n   * @override\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find(\"button.reset\").click(this._onReset.bind(this));\n    html.find(\"button.save\").click(this._onSave.bind(this));\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated.\n   *\n   * @override\n   */\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    const settings = new HealthConfigModel(game.settings.get(\"pf1\", \"healthConfig\").toObject());\n    settings.updateSource(formData); // Validate settings\n    this.healthConfig = settings;\n    this.render();\n  }\n}\n","export class ExperienceConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      track: new fields.StringField({ initial: \"medium\", choices: [\"fast\", \"medium\", \"slow\", \"custom\"] }),\n      custom: new fields.SchemaField({\n        formula: new fields.StringField({ initial: \"\", nullable: false }),\n      }),\n      openDistributor: new fields.BooleanField({ initial: true }),\n    };\n  }\n\n  static migrateData(data) {\n    super.migrateData(data);\n\n    data.disable ??= data.disableExperienceTracking;\n    if (data.track === \"customFormula\") data.track = \"custom\";\n    data.openDistributor ??= data.openXpDistributor;\n  }\n}\n\nexport class ExperienceConfig extends FormApplication {\n  constructor(...args) {\n    super(...args);\n\n    this._settings = game.settings.get(\"pf1\", \"experienceConfig\").toObject();\n  }\n\n  /** @override */\n  getData() {\n    const settings = this._settings;\n\n    return {\n      ...settings,\n      // Custom experience track booleans\n      enabled: settings.disable !== true,\n      hasCustomFormula: settings.track === \"custom\",\n      config: pf1.config,\n      const: pf1.const,\n      progressionOptions: {\n        slow: \"PF1.SETTINGS.Experience.Track.Options.Slow\",\n        medium: \"PF1.SETTINGS.Experience.Track.Options.Medium\",\n        fast: \"PF1.SETTINGS.Experience.Track.Options.Fast\",\n        custom: \"PF1.SETTINGS.Experience.Track.Options.Custom\",\n      },\n    };\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...super.defaultOptions,\n      title: game.i18n.localize(\"PF1.ExperienceConfigName\"),\n      classes: [...options.classes, \"pf1\", \"experience-config\"],\n      id: \"experience-config\",\n      template: \"systems/pf1/templates/settings/experience.hbs\",\n      submitOnChange: true,\n      closeOnSubmit: false,\n      submitOnClose: false,\n      width: 560,\n      height: \"auto\",\n    };\n  }\n\n  /**\n   * Activate the default set of listeners for the Document sheet These listeners handle basic stuff like form submission or updating images.\n   *\n   * @override\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    this.form.querySelector(\"button.save\").addEventListener(\"click\", this._onSaveConfig.bind(this));\n  }\n\n  async _onSaveConfig(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    game.settings.set(\"pf1\", \"experienceConfig\", this._settings);\n    this.close();\n  }\n\n  /** @override */\n  async _updateObject(event, formData) {\n    this._settings = foundry.utils.mergeObject(this._settings, foundry.utils.expandObject(formData));\n    this.render();\n  }\n}\n","export class AccessibilityConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    return {};\n  }\n}\n\nexport class AccessibilityConfig extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    this._init = false;\n  }\n\n  /** Collect data for the template. @override */\n  async getData() {\n    const data = {};\n\n    if (!this._init) {\n      const settings = await game.settings.get(\"pf1\", \"accessibilityConfig\");\n      this._settings = foundry.utils.mergeObject(this.constructor.defaultSettings, settings);\n      this._init = true;\n    }\n    data.settings = this._settings;\n\n    return data;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      title: game.i18n.localize(\"PF1.AccessibilityConfigName\"),\n      id: \"accessibility-config\",\n      template: \"systems/pf1/templates/settings/accessibility.hbs\",\n      width: 560,\n      height: \"auto\",\n      submitOnClose: false,\n      closeOnSubmit: true,\n      submitOnChange: false,\n    });\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated.\n   *\n   * @override\n   */\n  async _updateObject(event, formData) {\n    const settings = foundry.utils.expandObject(formData);\n    // Some mild sanitation for the numeric values.\n    await game.settings.set(\"pf1\", \"accessibilityConfig\", settings);\n    ui.notifications.info(\"Updated Pathfinder accessibility configuration.\");\n  }\n}\n","export class TokenTooltipWorldConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      portrait: new fields.SchemaField({\n        hide: new fields.BooleanField({ initial: false }),\n      }),\n      hideHeld: new fields.BooleanField({ initial: true }),\n      hideArmor: new fields.BooleanField({ initial: true }),\n      hideBuffs: new fields.BooleanField({ initial: true }),\n      hideConditions: new fields.BooleanField({ initial: false }),\n      hideClothing: new fields.BooleanField({ initial: true }),\n      hideActorNameByDisposition: new fields.NumberField({ initial: 0 }),\n      minimumPermission: new fields.NumberField({ initial: CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED }),\n      hideActorNameReplacement: new fields.StringField({ initial: \"???\", nullable: false }),\n    };\n  }\n\n  static migrateData(data) {\n    if (data.hideActorName !== undefined) {\n      if (data.hideActorNameByDisposition === undefined) {\n        // 1 (All) for true, -2 (None) for false\n        data.hideActorNameByDisposition = data.hideActorName ? 1 : -2;\n      }\n      delete data.hideActorName;\n    }\n  }\n}\n\nexport class TooltipWorldConfig extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    this._cachedData = null;\n  }\n\n  getData() {\n    const result = {\n      data: game.settings.get(\"pf1\", \"tooltipWorldConfig\"),\n      config: pf1.config,\n      const: pf1.const,\n      tokenNameDisposition: {\n        \"-2\": \"PF1.Disposition.None\",\n        \"-1\": \"PF1.Disposition.Hostile\",\n        0: \"PF1.Disposition.Non-Friendly\",\n        1: \"PF1.Disposition.All\",\n      },\n      permissions: {\n        [CONST.DOCUMENT_OWNERSHIP_LEVELS.NONE]: \"OWNERSHIP.NONE\",\n        [CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED]: \"OWNERSHIP.LIMITED\",\n        [CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER]: \"OWNERSHIP.OBSERVER\",\n        [CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER]: \"OWNERSHIP.OWNER\",\n      },\n    };\n\n    return result;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      title: game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.World.Name\"),\n      id: \"tooltip-world-config\",\n      template: \"systems/pf1/templates/settings/tooltip_world.hbs\",\n      width: 540,\n      height: \"auto\",\n    });\n  }\n\n  activateListeners(html) {\n    html.find(\"button.reset\").click(this._onReset.bind(this));\n  }\n\n  async _onReset(event) {\n    event.preventDefault();\n    await game.settings.set(\"pf1\", \"tooltipWorldConfig\", {});\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.ResetInfo\"));\n    return this.render();\n  }\n\n  async _updateObject(event, formData) {\n    if (!this.form.reportValidity()) return;\n\n    const settings = foundry.utils.expandObject(formData);\n\n    await game.settings.set(\"pf1\", \"tooltipWorldConfig\", settings);\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.UpdateInfo\"));\n  }\n}\n","import { TooltipWorldConfig } from \"./tooltip_world.mjs\";\n\nexport class TokenTooltipConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      hideWithoutKey: new fields.BooleanField({ initial: false }),\n      anchor: new fields.SchemaField({\n        x: new fields.NumberField({ initial: 1 }),\n        y: new fields.NumberField({ initial: 1 }),\n      }),\n      offset: new fields.SchemaField({\n        x: new fields.NumberField({ initial: 0 }),\n        y: new fields.NumberField({ initial: 0 }),\n      }),\n      onMouse: new fields.BooleanField({ initial: false }),\n      portrait: new fields.SchemaField({\n        hide: new fields.BooleanField({ initial: false }),\n        maxSize: new fields.SchemaField({\n          width: new fields.NumberField({ initial: 280 }),\n          height: new fields.NumberField({ initial: 280 }),\n        }),\n      }),\n    };\n  }\n}\n\nexport class TooltipConfig extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    this._cachedData = null;\n  }\n\n  getData() {\n    if (this._cachedData) return this._cachedData;\n\n    const canvasRect = canvas.app.view.getBoundingClientRect();\n    const result = {\n      screen: {\n        width: canvasRect.width,\n        height: canvasRect.height,\n        halfWidth: Math.floor(canvasRect.width / 2),\n        halfHeight: Math.floor(canvasRect.height / 2),\n      },\n      isGM: game.user.isGM,\n    };\n\n    // Prepare preview data\n    {\n      const p = {\n        width: 320,\n        height: 320,\n        tooltip: {\n          width: 80,\n          height: 48,\n        },\n      };\n\n      const r1 = result.screen.width / result.screen.height;\n      const r2 = result.screen.height / result.screen.width;\n\n      if (r1 > r2) {\n        p.height = Math.ceil(p.height * r2);\n      } else if (r2 > r1) {\n        p.width = Math.ceil(p.width * r1);\n      }\n\n      result.preview = p;\n    }\n\n    // Get settings\n    result.data = game.settings.get(\"pf1\", \"tooltipConfig\");\n\n    // Get hide key\n    result.hideKey = game.i18n.localize(\"PF1.Key_Control\");\n\n    this._cachedData = result;\n    return result;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      title: game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.Name\"),\n      id: \"tooltip-config\",\n      template: \"systems/pf1/templates/settings/tooltip.hbs\",\n      width: 640,\n      height: \"auto\",\n    });\n  }\n\n  activateListeners(html) {\n    html.find(\".immediate-change\").change(this._handleImmediateChange.bind(this));\n\n    html.find(\"button.world-settings\").click(this._openWorldSettings.bind(this));\n\n    html.find(\"button.reset\").click(this._onReset.bind(this));\n  }\n\n  _handleImmediateChange(event) {\n    const el = event.currentTarget;\n    const key = el.name;\n    if (!key) return;\n\n    let value;\n    if (el.tagName === \"INPUT\") {\n      value = el.value;\n      if (el.type === \"checkbox\") value = el.checked === true ? true : false;\n    } else {\n      value = el.innerHTML;\n    }\n    if (el.dataset?.dtype === \"Boolean\") value = Boolean(value);\n    else if (el.dataset?.dtype === \"Number\") value = parseFloat(value);\n\n    foundry.utils.setProperty(this._cachedData, `data.${key}`, value);\n    this.render();\n  }\n\n  _openWorldSettings(event) {\n    if (!game.user.can(\"SETTINGS_MODIFY\"))\n      return void ui.notifications.error(\"PF1.Error.GenericPermission\", { localize: true });\n\n    new TooltipWorldConfig().render(true, { focus: true });\n  }\n\n  async _onReset(event) {\n    event.preventDefault();\n    await game.settings.set(\"pf1\", \"tooltipConfig\", {});\n    this._cachedData = null;\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.ResetInfo\"));\n    return this.render();\n  }\n\n  async _updateObject(event, formData) {\n    const settings = foundry.utils.expandObject(formData);\n\n    await game.settings.set(\"pf1\", \"tooltipConfig\", settings);\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.UpdateInfo\"));\n  }\n}\n","export class IntegrationModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      diceSoNice: new fields.BooleanField({ initial: true }),\n      dragRuler: new fields.BooleanField({ initial: true }),\n      enhancedTerrainLayer: new fields.BooleanField({ initial: true }),\n    };\n  }\n}\n\nexport class IntegrationConfig extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      title: game.i18n.localize(\"PF1.Application.Integration.Title\"),\n      id: \"pf1-integration-config\",\n      template: \"systems/pf1/templates/settings/integration.hbs\",\n      classes: [...options.classes, \"pf1\", \"integration-config\"],\n      width: 460,\n      height: \"auto\",\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: true,\n    };\n  }\n\n  getData() {\n    return {\n      ...game.settings.get(\"pf1\", \"integration\"),\n      dsnFound: game.modules.get(\"dice-so-nice\")?.active,\n      drFound: game.modules.get(\"drag-ruler\")?.active,\n      etlFound: game.modules.get(\"enhanced-terrain-layer\")?.active,\n    };\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    game.settings.set(\"pf1\", \"integration\", formData.settings);\n  }\n}\n","export class PerformanceModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      reachLimit: new fields.NumberField({ integer: true, min: 0, initial: 60 }),\n    };\n  }\n}\n\nexport class PerformanceConfig extends FormApplication {\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      title: game.i18n.localize(\"PF1.Application.Performance.Title\"),\n      id: \"performance-config\",\n      template: \"systems/pf1/templates/settings/performance.hbs\",\n      classes: [...options.classes, \"pf1\", \"performance-config\"],\n      submitOnChange: false,\n      closeOnSubmit: true,\n      submitOnClose: false,\n      width: 520,\n      height: \"auto\",\n    };\n  }\n\n  getData() {\n    const settings = game.settings.get(\"pf1\", \"performance\");\n    return {\n      ...settings,\n      model: settings.constructor.defineSchema(),\n    };\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const [html] = jq;\n\n    const reachLabel = html.querySelector(\"span.reach-limit\");\n    html\n      .querySelector(\"input[name='settings.reachLimit']\")\n      .addEventListener(\"input\", (event) => (reachLabel.textContent = event.target.value), { passive: true });\n\n    html.querySelector(\"button[type='reset']\").addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      game.settings.set(\"pf1\", \"performance\", {}).then(() => this.close());\n    });\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    console.table(formData.settings);\n    game.settings.set(\"pf1\", \"performance\", formData.settings);\n  }\n}\n","export class TooltipPF extends Application {\n  constructor() {\n    super();\n\n    this.mousePos = {\n      x: 0,\n      y: 0,\n    };\n\n    document.addEventListener(\n      \"pointermove\",\n      (event) => {\n        this.mousePos.x = event.clientX;\n        this.mousePos.y = event.clientY;\n        if (this.onMouse && !this.hidden) this._setPosition();\n      },\n      { passive: true }\n    );\n\n    /** @type {TokenDocument|null} */\n    this.token = null;\n\n    this.forceHideGMInfo = false;\n    this.forceHide = false;\n    this.sticky = false;\n    /**\n     * Has stickied tooltip. Prevent replacing tooltip.\n     */\n    this.stickied = false;\n\n    this.lock = {\n      new: false,\n      old: false,\n    };\n  }\n\n  /** @type {TokenDocument|null} */\n  get token() {\n    return this.object;\n  }\n\n  set token(token) {\n    this.object = token;\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      template: \"systems/pf1/templates/hud/tooltip.hbs\",\n      popOut: false,\n    };\n  }\n\n  get clientConfig() {\n    return game.settings.get(\"pf1\", \"tooltipConfig\").toObject();\n  }\n\n  get worldConfig() {\n    return game.settings.get(\"pf1\", \"tooltipWorldConfig\").toObject();\n  }\n\n  get actorConfig() {\n    return this.token?.actor?.system.details?.tooltip ?? {};\n  }\n\n  get onMouse() {\n    return this.clientConfig.onMouse;\n  }\n\n  get hidden() {\n    return this.element[0]?.style.visibility === \"hidden\";\n  }\n\n  /**\n   * @param {TokenDocument} token\n   */\n  bind(token) {\n    if (!game.user.isGM && token.disposition === CONST.TOKEN_DISPOSITIONS.SECRET) return;\n\n    if (this.lock.new) return;\n    // If already stickied, don't replace it unless new sticky is tried.\n    if (this.stickied && !this.sticky) return;\n    this.token = token;\n    if (this.sticky) this.stickied = true;\n    this.render(true);\n  }\n\n  /**\n   * @param {TokenDocument} token\n   */\n  unbind(token) {\n    if (token !== this.token) return;\n\n    if (this.lock.old) return;\n    // Sticky current tooltip. Don't track current state fully to avoid being far too sensitive about it.\n    if (this.sticky) this.stickied = true;\n    // Keep stickied tooltips\n    if (this.stickied) return;\n    this.token = null;\n    this.hide();\n  }\n\n  clearBind() {\n    this.stickied = false;\n    this.token = null;\n    this.hide();\n  }\n\n  async getData() {\n    const token = this.token;\n    const actor = token?.actor;\n    if (!actor) return {};\n\n    const context = {\n      data: actor.system,\n      name: token.name,\n      isOwner: actor.isOwner,\n    };\n\n    const isGM = game.user.isGM;\n\n    const actorConfig = this.actorConfig;\n    const worldConfig = this.worldConfig;\n    const clientConfig = this.clientConfig;\n\n    // Combine the two configs into something effective\n    const config = foundry.utils.deepClone(worldConfig);\n    Object.entries(actorConfig).forEach(([key, value]) => (config[key] ||= value));\n\n    if (!clientConfig.portrait.hide && !worldConfig.portrait.hide === true) {\n      context.portrait = {\n        maxWidth: clientConfig.portrait?.maxSize?.width || 100,\n        maxHeight: clientConfig.portrait?.maxSize?.height || 100,\n        url: actor.img,\n      };\n    }\n\n    const fullInfo = isGM ? !this.forceHideGMInfo : actor.isOwner;\n\n    // Display name, separate permission checking from\n    if (isGM ? this.forceHideGMInfo : !token.actor.testUserPermission(game.user, worldConfig.minimumPermission)) {\n      // Hide name if explicitly set to hide or disposition does not match\n      if (config.hideName || token.disposition <= worldConfig.hideActorNameByDisposition) {\n        context.name = config.name || worldConfig.hideActorNameReplacement || \"???\";\n      }\n      // Otherwise display custom name if configured\n      else if (config.name) {\n        context.name = config.name;\n      }\n    }\n\n    // Get conditions\n    if (fullInfo || !config.hideConditions) {\n      const conditions = actor.system.conditions;\n      for (const [conditionId, active] of Object.entries(conditions ?? {})) {\n        if (active === true) {\n          context.conditions = context.conditions || [];\n          const condition = pf1.registry.conditions.get(conditionId);\n          context.conditions.push({\n            label: condition.name,\n            icon: condition.texture,\n          });\n        }\n      }\n    }\n\n    // Get buffs\n    if (fullInfo || !config.hideBuffs) {\n      const buffs = actor.itemTypes.buff?.filter((i) => i.isActive && !i.system.hideFromToken) ?? [];\n      for (const b of buffs) {\n        context.buffs = context.buffs || [];\n        context.buffs.push({\n          label: b.name,\n          icon: b.img,\n          level: b.system.level,\n        });\n      }\n    }\n\n    // Get held items\n    if (fullInfo || !config.hideHeld) {\n      const held = actor.items.filter((i) => {\n        if (![\"weapon\", \"equipment\"].includes(i.type)) return false;\n        if (!i.isActive) return false;\n        if (i.type === \"equipment\" && i.subType !== \"shield\") return false;\n        return true;\n      });\n\n      for (const i of held) {\n        context.held = context.held || [];\n        context.held.push({\n          label: i.getName(!fullInfo),\n          icon: i.img,\n        });\n      }\n    }\n\n    const equipment = actor.itemTypes.equipment?.filter((i) => i.isActive) ?? [];\n\n    // Get armor\n    if (fullInfo || !config.hideArmor) {\n      const armor = equipment.filter((i) => i.subType === \"armor\");\n\n      for (const i of armor) {\n        context.armor = context.armor || [];\n        context.armor.push({\n          label: i.getName(!fullInfo),\n          icon: i.img,\n        });\n      }\n    }\n\n    // Get clothing\n    if (fullInfo || !config.hideClothing) {\n      const clothing = equipment.filter((i) => i.subType === \"clothing\");\n\n      for (const i of clothing) {\n        context.clothing = context.clothing || [];\n        context.clothing.push({\n          label: i.getName(!fullInfo),\n          icon: i.img,\n        });\n      }\n    }\n\n    return context;\n  }\n\n  _setPosition() {\n    if (!this.element[0]) return;\n\n    const v = canvas.app.view.getBoundingClientRect();\n    const elSize = this.element[0].getBoundingClientRect();\n    const position = {\n      width: elSize.width,\n      height: elSize.height,\n      left: 0,\n      top: 0,\n    };\n\n    const sb = ui.sidebar.element[0].getBoundingClientRect();\n    const mw = v.width - position.width - sb.width,\n      mh = v.height - position.height;\n\n    const clientConfig = this.clientConfig;\n    const anchor = clientConfig.anchor;\n    const offset = clientConfig.offset;\n\n    // Calculate final position\n    if (this.onMouse) {\n      const minPos = {\n        x: v.left,\n        y: v.top,\n      };\n      const maxPos = {\n        x: minPos.x + mw,\n        y: minPos.y + mh,\n      };\n      const pos = {\n        x: this.mousePos.x - position.width + position.width * anchor.x + offset.x,\n        y: this.mousePos.y - position.height + position.height * anchor.y + offset.y,\n      };\n      position.left = Math.clamped(pos.x, minPos.x, maxPos.x);\n      position.top = Math.clamped(pos.y, minPos.y, maxPos.y);\n    } else {\n      position.left = v.left + mw * anchor.x + offset.x;\n      position.top = v.top + mh * anchor.y + offset.y;\n    }\n\n    this.element.css(position);\n  }\n\n  show() {\n    const token = this.token;\n    if (!token) return;\n    if (this.forceHide) return;\n    if (this.clientConfig.disable === true || this.worldConfig.disable === true) return;\n\n    // Ensure tooltip is stickied\n    if (this.sticky) this.stickied = true;\n\n    this.element[0].classList.toggle(\"sticky\", this.stickied);\n\n    this.element.css(\"visibility\", \"visible\");\n  }\n\n  hide() {\n    this.element.css(\"visibility\", \"hidden\");\n  }\n\n  async _render(force = false, options = {}) {\n    await super._render(force, options);\n\n    this.hide();\n\n    // Required to re-align portraits\n    const loadableContent = this.element.find(\"img\");\n    const loadableContentCount = loadableContent.length;\n    if (loadableContentCount > 0) {\n      let loadedContentCount = 0;\n      loadableContent.one(\"load\", () => {\n        loadedContentCount++;\n        if (loadedContentCount === loadableContentCount && this.token) {\n          this._setPosition();\n          this.show();\n        }\n      });\n    } else if (this.token) {\n      this._setPosition();\n      this.show();\n    }\n  }\n\n  activateListeners(html) {\n    html.find(\".controls .close\").click(() => {\n      this.clearBind();\n    });\n  }\n\n  tokenHover(token, hovering) {\n    // Show token tooltip\n    if (hovering) {\n      const p = pf1.tooltip.mousePos;\n      const el = document.elementFromPoint(p.x, p.y);\n      // This check is required to prevent hovering over tokens under application windows\n      if (el?.id === \"board\") {\n        pf1.tooltip.bind(token.document);\n      }\n    }\n    // Hide token tooltip\n    else pf1.tooltip.unbind(token.document);\n  }\n\n  static toggle(enable) {\n    if (enable) {\n      if (!pf1.tooltip) {\n        pf1.tooltip = new TooltipPF();\n        Hooks.on(\"hoverToken\", pf1.tooltip.tokenHover);\n      }\n      pf1.tooltip.setPosition();\n    } else {\n      if (pf1.tooltip) {\n        Hooks.off(\"hoverToken\", pf1.tooltip.tokenHover);\n        pf1.tooltip = null;\n      }\n    }\n  }\n\n  async refresh() {\n    await this.render();\n\n    if (this.forceHide) this.hide();\n    else this.show();\n  }\n}\n","import { HealthConfig, HealthConfigModel } from \"../applications/settings/health.mjs\";\nimport { ExperienceConfig, ExperienceConfigModel } from \"../applications/settings/experience.mjs\";\nimport { AccessibilityConfig, AccessibilityConfigModel } from \"../applications/settings/accessibility.mjs\";\nimport { TooltipConfig, TokenTooltipConfigModel } from \"../applications/settings/tooltip.mjs\";\nimport { TooltipWorldConfig, TokenTooltipWorldConfigModel } from \"../applications/settings/tooltip_world.mjs\";\nimport { IntegrationConfig, IntegrationModel } from \"module/applications/settings/integration.mjs\";\nimport { PerformanceConfig, PerformanceModel } from \"module/applications/settings/performance.mjs\";\nimport { TooltipPF } from \"../applications/tooltip.mjs\";\n\nexport const registerSystemSettings = function () {\n  /**\n   * Track the system version upon which point a migration was last applied\n   */\n  game.settings.register(\"pf1\", \"systemMigrationVersion\", {\n    name: \"System Migration Version\",\n    scope: \"world\",\n    config: false,\n    type: String,\n    default: \"0.0.0\",\n  });\n\n  // Migration is in progress\n  game.settings.register(\"pf1\", \"migrating\", {\n    scope: \"world\",\n    config: false,\n    type: Boolean,\n    default: false,\n    onChange: (value) => (pf1.migrations.isMigrating = value),\n  });\n\n  /**\n   * Track when the last changelog was shown\n   */\n  game.settings.register(\"pf1\", \"changelogVersion\", {\n    name: \"Changelog Version\",\n    scope: \"client\",\n    config: false,\n    type: String,\n    default: \"0.74.9\",\n  });\n  game.settings.register(\"pf1\", \"dontShowChangelog\", {\n    name: \"Don't Automatically Show Changelog\",\n    scope: \"client\",\n    config: false,\n    type: Boolean,\n    default: false,\n  });\n\n  // Health configuration\n  game.settings.registerMenu(\"pf1\", \"healthConfig\", {\n    name: \"PF1.SETTINGS.Health.Title\",\n    label: \"PF1.SETTINGS.Health.Button\",\n    hint: \"PF1.SETTINGS.Health.Hint\",\n    icon: \"fas fa-heartbeat\",\n    type: HealthConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"healthConfig\", {\n    scope: \"world\",\n    default: new HealthConfigModel(),\n    type: HealthConfigModel,\n    config: false,\n    requiresReload: true,\n    //onChange: () => pf1.utils.refreshActors(), // Excessive if reloading instantly\n  });\n\n  // Experience configuration\n  game.settings.registerMenu(\"pf1\", \"experienceConfig\", {\n    name: \"PF1.ExperienceConfigName\",\n    label: \"PF1.ExperienceConfigLabel\",\n    hint: \"PF1.ExperienceConfigHint\",\n    icon: \"fas fa-book\",\n    type: ExperienceConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"experienceConfig\", {\n    name: \"PF1.ExperienceConfigName\",\n    scope: \"world\",\n    default: new ExperienceConfigModel(),\n    type: ExperienceConfigModel,\n    config: false,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Accessibility configuration\n  /*\n  game.settings.registerMenu(\"pf1\", \"accessibilityConfig\", {\n    name: \"PF1.AccessibilityConfigName\",\n    label: \"PF1.AccessibilityConfigLabel\",\n    hint: \"PF1.AccessibilityConfigHint\",\n    restricted: false,\n    icon: \"fas fa-wheelchair\",\n    type: AccessibilityConfig,\n  });\n  */\n  game.settings.register(\"pf1\", \"accessibilityConfig\", {\n    name: \"PF1.AccessibilityConfigName\",\n    scope: \"client\",\n    default: new AccessibilityConfigModel(),\n    type: AccessibilityConfigModel,\n    config: false,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Tooltip configuration\n  game.settings.registerMenu(\"pf1\", \"tooltipConfig\", {\n    name: \"PF1.SETTINGS.TokenTooltip.Name\",\n    label: \"PF1.SETTINGS.TokenTooltip.Label\",\n    hint: \"PF1.SETTINGS.TokenTooltip.Hint\",\n    restricted: false,\n    icon: \"fas fa-window-maximize\",\n    type: TooltipConfig,\n  });\n  game.settings.register(\"pf1\", \"tooltipConfig\", {\n    scope: \"client\",\n    default: new TokenTooltipConfigModel(),\n    type: TokenTooltipConfigModel,\n    config: false,\n    onChange: (settings) => {\n      const worldConf = game.settings.get(\"pf1\", \"tooltipWorldConfig\");\n      const enable = !worldConf.disabled && !settings.disabled;\n      TooltipPF.toggle(enable);\n    },\n  });\n\n  // Tooltip World configuration\n  game.settings.register(\"pf1\", \"tooltipWorldConfig\", {\n    scope: \"world\",\n    default: new TokenTooltipWorldConfigModel(),\n    type: TokenTooltipWorldConfigModel,\n    config: false,\n    onChange: (settings) => {\n      TooltipPF.toggle(!settings.disable);\n      pf1.tooltip?.setPosition();\n    },\n  });\n\n  game.settings.register(\"pf1\", \"integration\", {\n    type: IntegrationModel,\n    default: new IntegrationModel(),\n    scope: \"world\",\n    config: false,\n    requiresReload: true,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"integration\", {\n    name: \"PF1.Application.Integration.Title\",\n    label: \"PF1.Application.Integration.Label\",\n    hint: \"PF1.Application.Integration.Hint\",\n    restricted: true,\n    icon: \"fa-solid fa-check-to-slot\",\n    type: IntegrationConfig,\n  });\n\n  game.settings.register(\"pf1\", \"performance\", {\n    scope: \"client\",\n    default: new PerformanceModel(),\n    type: PerformanceModel,\n    config: false,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"performance\", {\n    name: \"PF1.Application.Performance.Title\",\n    label: \"PF1.Application.Performance.Button\",\n    hint: \"PF1.Application.Performance.Hint\",\n    restricted: false,\n    icon: \"fa-solid fa-gauge\",\n    type: PerformanceConfig,\n  });\n\n  // MEASURING\n\n  /**\n   * Option to change measure style\n   */\n  game.settings.register(\"pf1\", \"measureStyle\", {\n    name: \"PF1.SETTINGS.Canvas.MeasureStyle\",\n    hint: \"PF1.SETTINGS.Canvas.MeasureStyleHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * Register diagonal movement rule setting\n   */\n  game.settings.register(\"pf1\", \"diagonalMovement\", {\n    name: \"PF1.SETTINGS.DiagonalRule.Label\",\n    hint: \"PF1.SETTINGS.DiagonalRule.Hint\",\n    scope: \"world\",\n    config: true,\n    default: \"5105\",\n    type: String,\n    choices: {\n      5105: \"PF1.SETTINGS.DiagonalRule.Options.Core\",\n      555: \"PF1.SETTINGS.DiagonalRule.Options.Simple\",\n    },\n  });\n\n  /**\n   * System of Units\n   */\n  game.settings.register(\"pf1\", \"units\", {\n    name: \"PF1.SETTINGS.Units.System\",\n    hint: \"PF1.SETTINGS.Units.SystemHint\",\n    scope: \"world\",\n    config: true,\n    default: \"imperial\",\n    type: String,\n    choices: {\n      imperial: \"PF1.SETTINGS.Units.Imperial\",\n      metric: \"PF1.SETTINGS.Units.Metric\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for distances.\n   */\n  game.settings.register(\"pf1\", \"distanceUnits\", {\n    name: \"PF1.SETTINGS.Units.Distance\",\n    hint: \"PF1.SETTINGS.Units.DistanceHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialDistance\",\n      metric: \"PF1.SETTINGS.Units.MetricDistance\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for weights.\n   */\n  game.settings.register(\"pf1\", \"weightUnits\", {\n    name: \"PF1.SETTINGS.Units.Weight\",\n    hint: \"PF1.SETTINGS.Units.WeightHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialWeight\",\n      metric: \"PF1.SETTINGS.Units.MetricWeight\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * Overland speed variant for metric.\n   */\n  game.settings.register(\"pf1\", \"overlandMetricVariant\", {\n    name: \"PF1.SETTINGS.OverlandVariantN\",\n    hint: \"PF1.SETTINGS.OverlandVariantL\",\n    scope: \"world\",\n    config: true,\n    default: \"rounded\",\n    choices: {\n      rounded: \"PF1.SETTINGS.OverlandMetricRounded\",\n      exact: \"PF1.SETTINGS.OverlandMetricExact\",\n    },\n  });\n\n  // OPTIONAL RULES\n\n  /**\n   * Option to allow the background skills optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"allowBackgroundSkills\", {\n    name: \"PF1.SETTINGS.VariantRules.BackgroundSkills\",\n    hint: \"PF1.SETTINGS.VariantRules.BackgroundSkillsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Option to use the Fractional Base Bonuses optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"useFractionalBaseBonuses\", {\n    name: \"PF1.SETTINGS.VariantRules.FractionalBaseBonuses\",\n    hint: \"PF1.SETTINGS.VariantRules.FractionalBaseBonusesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Unchained action economy\n   */\n  game.settings.register(\"pf1\", \"unchainedActionEconomy\", {\n    name: \"PF1.SETTINGS.UnchainedActionEconomyN\",\n    hint: \"PF1.SETTINGS.UnchainedActionEconomyH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Cybertech\n   */\n  game.settings.register(\"pf1\", \"cybertech\", {\n    name: \"PF1.SETTINGS.Cybertech\",\n    hint: \"PF1.SETTINGS.CybertechHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Armor as DR\n\n  /**\n   * Critical confirmation rolls\n   */\n  game.settings.register(\"pf1\", \"critConfirm\", {\n    name: \"PF1.SETTINGS.CriticalConfirm\",\n    hint: \"PF1.SETTINGS.CriticalConfirmHint\",\n    scope: \"world\",\n    type: Boolean,\n    default: true,\n    config: true,\n  });\n\n  // VISION\n\n  /**\n   * Low-light Vision Mode\n   */\n  game.settings.register(\"pf1\", \"lowLightVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.RequiresSelection\",\n    hint: \"PF1.SETTINGS.Vision.RequiresSelectionHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => {\n      // Refresh canvas sight\n      canvas.perception.update(\n        { initializeLighting: true, initializeVision: true, refreshLighting: true, refreshVision: true },\n        true\n      );\n    },\n  });\n\n  /**\n   * Shared Vision sharing style.\n   */\n  game.settings.register(\"pf1\", \"sharedVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.Sharing\",\n    hint: \"PF1.SETTINGS.Vision.SharingHint\",\n    scope: \"world\",\n    config: false, // Hidden as it is unused; TODO: Re-implement #187's setting usage or remove setting/feature completely\n    default: 0,\n    type: Number,\n    choices: {\n      0: \"PF1.SETTINGS.Vision.SharingWithoutSelection\",\n      1: \"PF1.SETTINGS.Vision.SharingWithSelection\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  game.settings.register(\"pf1\", \"guaranteedVision\", {\n    name: \"PF1.SETTINGS.Vision.Guaranteed\",\n    hint: \"PF1.SETTINGS.Vision.GuaranteedHint\",\n    scope: \"world\",\n    config: true,\n    default: \"OBSERVER\",\n    type: String,\n    choices: {\n      OBSERVER: \"OWNERSHIP.OBSERVER\",\n      OWNER: \"OWNERSHIP.OWNER\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  /**\n   * Enable vision for player characters by default.\n   */\n  game.settings.register(\"pf1\", \"characterVision\", {\n    name: \"PF1.SETTINGS.Vision.PCDefault\",\n    hint: \"PF1.SETTINGS.Vision.PCDefaultHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  game.settings.register(\"pf1\", \"pcDisposition\", {\n    name: \"PF1.SETTINGS.Token.PCDisposition\",\n    hint: \"PF1.SETTINGS.Token.PCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      FRIENDLY: \"TOKEN.DISPOSITION.FRIENDLY\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n    },\n    default: \"FRIENDLY\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"npcDisposition\", {\n    name: \"PF1.SETTINGS.Token.NPCDisposition\",\n    hint: \"PF1.SETTINGS.Token.NPCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n      HOSTILE: \"TOKEN.DISPOSITION.HOSTILE\",\n    },\n    default: \"NONE\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"systemVision\", {\n    name: \"PF1.SETTINGS.Vision.SystemControl\",\n    hint: \"PF1.SETTINGS.Vision.SystemControlHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    onChange: () => {\n      Object.values(ui.windows)\n        .filter((app) => app instanceof TokenConfig)\n        .forEach((app) => app.render());\n\n      // Initialize lighting is required for LLV to take effect\n      canvas.perception.update({ initializeLighting: true, refreshLighting: true, refreshVision: true }, true);\n    },\n  });\n\n  // CHAT CARDS\n\n  /**\n   * Option to automatically collapse Item Card descriptions\n   */\n  game.settings.register(\"pf1\", \"autoCollapseItemCards\", {\n    name: \"PF1.SETTINGS.Chat.AutoCollapse\",\n    hint: \"PF1.SETTINGS.Chat.AutoCollapseHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  /**\n   * Option to hide chat buttons\n   */\n  game.settings.register(\"pf1\", \"hideChatButtons\", {\n    name: \"PF1.SETTINGS.Chat.HideButtons\",\n    hint: \"PF1.SETTINGS.Chat.HideButtonsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  // HOMEBREW\n\n  /**\n   * Set coin weight\n   */\n  game.settings.register(\"pf1\", \"coinWeight\", {\n    name: \"PF1.SETTINGS.Houserules.CoinDivisor\",\n    hint: \"PF1.SETTINGS.Houserules.CoinDivisorHint\",\n    scope: \"world\",\n    config: true,\n    default: 50,\n    type: Number,\n    requiresReload: true,\n  });\n\n  /**\n   * Default spellpoint cost\n   */\n  game.settings.register(\"pf1\", \"spellPointCost\", {\n    name: \"PF1.SETTINGS.Houserules.SpellPointCost\",\n    hint: \"PF1.SETTINGS.Houserules.SpellPointCostHint\",\n    scope: \"world\",\n    config: true,\n    default: \"1 + @sl\",\n    type: String,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n  });\n\n  /**\n   * Alternative reach corner rule\n   */\n  game.settings.register(\"pf1\", \"alternativeReachCornerRule\", {\n    name: \"PF1.SETTINGS.Houserules.AltReach\",\n    hint: \"PF1.SETTINGS.Houserules.AltReachHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Allow proficiencies on NPCs.\n   */\n  game.settings.register(\"pf1\", \"npcProficiencies\", {\n    name: \"PF1.SETTINGS.Houserules.NPCProficiencies\",\n    hint: \"PF1.SETTINGS.Houserules.NPCProficienciesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n    type: Boolean,\n  });\n\n  // TOKENS / CONDITIONS\n\n  /**\n   * Display default token conditions alongside system ones\n   */\n  game.settings.register(\"pf1\", \"coreEffects\", {\n    name: \"PF1.SETTINGS.CoreEffectsN\",\n    hint: \"PF1.SETTINGS.CoreEffectsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide token conditions\n   */\n  game.settings.register(\"pf1\", \"hideTokenConditions\", {\n    name: \"PF1.SETTINGS.HideTokenConditionsN\",\n    hint: \"PF1.SETTINGS.HideTokenConditionsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => canvas.tokens?.placeables?.forEach((t) => t._applyRenderFlags({ redrawEffects: true })),\n  });\n\n  // TRANSPARENCY\n\n  /**\n   * Hide inline rolls from non-observers.\n   */\n  game.settings.register(\"pf1\", \"obscureInlineRolls\", {\n    name: \"PF1.SETTINGS.Chat.ObscureInlineRolls\",\n    hint: \"PF1.SETTINGS.Chat.ObscureInlineRollsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide save DCs.\n   */\n  game.settings.register(\"pf1\", \"obscureSaveDCs\", {\n    name: \"PF1.SETTINGS.Chat.ObscureSaveDCs\",\n    hint: \"PF1.SETTINGS.Chat.ObscureSaveDCsHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // COMBAT\n\n  game.settings.register(\"pf1\", \"initiativeTiebreaker\", {\n    name: \"PF1.SETTINGS.InitTiebreaker.Label\",\n    hint: \"PF1.SETTINGS.InitTiebreaker.Hint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // USER INTERFACE\n\n  /**\n   * Skip action dialog prompts\n   */\n  game.settings.register(\"pf1\", \"skipActionDialogs\", {\n    name: \"PF1.SETTINGS.SkipActionDialogsN\",\n    hint: \"PF1.SETTINGS.SkipActionDialogsH\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /*\n   * When skipping an action dialog prompt still place the template if one is configured\n   */\n  game.settings.register(\"pf1\", \"placeMeasureTemplateOnQuickRolls\", {\n    name: \"PF1.SETTINGS.MeasureOnQuickUse\",\n    hint: \"PF1.SETTINGS.MeasureOnQuickUseHint\",\n    scope: \"client\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * Invert filter Shift-clicking\n   */\n  game.settings.register(\"pf1\", \"invertSectionFilterShiftBehaviour\", {\n    name: \"PF1.SETTINGS.Sheet.InvertFilters\",\n    hint: \"PF1.SETTINGS.Sheet.InvertFiltersHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  // TARGETING\n\n  /**\n   * Disable targets for attack cards\n   */\n  game.settings.register(\"pf1\", \"disableAttackCardTargets\", {\n    name: \"PF1.SETTINGS.Chat.NoTargets\",\n    hint: \"PF1.SETTINGS.Chat.NoTargetsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Clear targets after attack\n   */\n  game.settings.register(\"pf1\", \"clearTargetsAfterAttack\", {\n    name: \"PF1.SETTINGS.Chat.ClearTargets\",\n    hint: \"PF1.SETTINGS.Chat.ClearTargetsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n};\n\nexport const registerClientSettings = function () {};\n\nexport const migrateSystemSettings = async function () {\n  // Delete now unused compendium browser cache\n  game.settings.storage.get(\"client\").removeItem(\"pf1.compendiumItems\");\n\n  if (!game.user.isGM) return;\n\n  // Currently empty, since the last option was removed (2022-06-06)\n};\n\n/**\n * Returns whether the user's settings and key presses signal that dialogs should be skipped.\n *\n * @returns {boolean}\n */\nexport const getSkipActionPrompt = function () {\n  return (\n    (game.settings.get(\"pf1\", \"skipActionDialogs\") && !pf1.skipConfirmPrompt) ||\n    (!game.settings.get(\"pf1\", \"skipActionDialogs\") && pf1.skipConfirmPrompt)\n  );\n};\n","import { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { RollPF } from \"./roll.mjs\";\n\n/**\n * A class adding additional functionality to {@link Roll Rolls} for d20 based Pathfinder rolls.\n */\nexport class D20RollPF extends RollPF {\n  /** @type {D20RollOptions} */\n  options;\n\n  /**\n   * Standard roll used by the system (1d20).\n   */\n  static standardRoll = \"1d20\";\n\n  /**\n   * @param {string} formula - The roll formula to parse\n   * @param {object} [data] - The data object against which to parse attributes within the formula\n   * @param {Partial<D20RollConstructorOptions>} [options]\n   * @param {D20RollContext} [context]\n   */\n  constructor(formula, data, options = {}, context = {}) {\n    super(formula, data, options);\n    this.options = foundry.utils.mergeObject(this.constructor.defaultOptions, options);\n\n    this.context = context;\n\n    // No dice in the formula\n    if (!(this.terms[0] instanceof Die)) {\n      // If the first term is a number, use it as the static roll\n      if (this.terms[0] instanceof NumericTerm && this.options.staticRoll === null) {\n        this.options.staticRoll = this.terms[0].total;\n        this.terms[0] = new Die({ number: 1, faces: 20 });\n        this._formula = this.constructor.getFormula(this.terms);\n      } else {\n        // Conflict between numeric term and static roll\n        throw new Error(`Invalid D20RollPF formula provided: ${this._formula}`);\n      }\n    }\n  }\n\n  /**\n   * Default options for D20Rolls\n   *\n   * @type {Partial<D20RollOptions>}\n   */\n  static get defaultOptions() {\n    return { critical: 20, flavor: \"\", staticRoll: null, bonus: \"\" };\n  }\n\n  /**\n   * The default handlebars template used to render the roll's dialog\n   *\n   * @type {string}\n   */\n  static DIALOG_TEMPLATE = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n\n  /**\n   * The default handlebars template used to render the roll's chat message\n   *\n   * @type {string}\n   */\n  static CHAT_TEMPLATE = \"systems/pf1/templates/chat/roll-ext.hbs\";\n\n  /**\n   * Static roll results\n   *\n   * @enum {number}\n   */\n  static STATIC_ROLL = {\n    TEN: 10,\n    TWENTY: 20,\n  };\n\n  /**\n   * The D20 die this roll is based on.\n   *\n   * @type {Die}\n   */\n  get d20() {\n    // this.dice[0] returns wrong number if formula had, for example, a die roll inside parenthesis.\n    return this.terms[0];\n  }\n\n  /**\n   * Is this roll a critical success? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isCrit() {\n    if (!this._evaluated) return undefined;\n    if (!Number.isNumeric(this.options.critical)) return false;\n    return this.d20.total >= this.options.critical;\n  }\n\n  /**\n   * Is this roll a natural 20? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat20() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 20;\n  }\n\n  /**\n   * Is this roll a natural 1? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat1() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 1;\n  }\n\n  /**\n   * Is this roll a misfire.\n   *\n   * @type {boolean|void}\n   */\n  get isMisfire() {\n    if (!this._evaluated) return undefined;\n    return this.natural <= (this.options.misfire ?? 0);\n  }\n\n  /**\n   * Natural roll value. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get natural() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total;\n  }\n\n  /**\n   * @type {boolean} - Is static roll (e.g. Take 20)\n   */\n  get isStatic() {\n    return this.options.staticRoll !== null;\n  }\n\n  /**\n   * @type {boolean} - Is normal d20 roll\n   */\n  get isNormal() {\n    return this.terms[0].formula === this.constructor.standardRoll;\n  }\n\n  /**\n   * Modifier on the roll besides natural roll. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get bonus() {\n    if (!this._evaluated) return undefined;\n    return this.total - this.natural;\n  }\n\n  /**\n   * Return a standardized representation for the displayed formula associated with this Roll.\n   * This formula includes any {@link D20RollOptions.bonus bonus} that might not be part of this roll's {@link terms}.\n   *\n   * @type {string}\n   */\n  get formula() {\n    let formula = this.constructor.getFormula(this.terms);\n    const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n    if (this.options.bonus && !this._evaluated) formula += ` + ${this.constructor.getFormula(bonusTerms)}`;\n    return formula;\n  }\n\n  /**\n   * The flavor this roll was created with.\n   *\n   * @type {string}\n   */\n  get flavor() {\n    return this.options.flavor;\n  }\n\n  /**\n   * Render a {@link Dialog} for the user to enter additional bonuses, set a static roll result, or take 10/20.\n   *\n   * @param {D20RollDialogOptions} [options] - Additional options determining what options to show in the dialog\n   * @returns {Promise<this | null>} A promise that resolves when the dialog is closed\n   */\n  async promptDialog(options = {}) {\n    const { rollMode = game.settings.get(\"core\", \"rollMode\"), template = this.constructor.DIALOG_TEMPLATE } = options;\n    const d20 = this.options.staticRoll === null ? this.d20.formula : this.options.staticRoll;\n    const renderData = {\n      data: this.data,\n      rollMode: options.rollMode || rollMode,\n      rollModes: CONFIG.Dice.rollModes,\n      // TODO: Move this standard roll obfuscation to dialog handling\n      d20: d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20, // Do not show standard roll in the input field\n      bonus: this.options.bonus,\n    };\n\n    const dialogOptions = options.dialogOptions || {};\n    dialogOptions.classes ??= [];\n    dialogOptions.classes.push(...Dialog.defaultOptions.classes, \"pf1\", \"roll-prompt\");\n\n    const renderOptions = options.renderOptions || {};\n\n    const html = await renderTemplate(template, renderData);\n\n    return Dialog.wait(\n      {\n        title: options.title || game.i18n.localize(\"PF1.Roll\"),\n        content: html,\n        buttons: {\n          normal: {\n            label: game.i18n.localize(\"PF1.Normal\"),\n            callback: (html) => this._onDialogSubmit(html, null),\n          },\n          takeTen: {\n            label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TEN }),\n            callback: (html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TEN),\n          },\n          takeTwenty: {\n            label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TWENTY }),\n            callback: (html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TWENTY),\n          },\n        },\n        default: \"normal\",\n        close: () => null,\n      },\n      {\n        ...dialogOptions,\n        jQuery: false,\n        subject: options.subject,\n        speaker: options.speaker,\n        roll: this,\n      },\n      {\n        ...(options.renderOptions || {}),\n        focus: true,\n      }\n    );\n  }\n\n  /**\n   * Converts form element to object\n   *\n   * @protected\n   * @param {HTMLFormElement} html\n   * @returns {object} - Expanded form data\n   */\n  _getFormData(html) {\n    return foundry.utils.expandObject(new FormDataExtended(html).object);\n  }\n\n  /**\n   * A callback applying the user's input from the dialog to the roll and its options.\n   *\n   * @protected\n   * @param {HTMLElement} html - The dialog's submitted HTML\n   * @param {number | null} [staticRoll] - A static roll result to use instead of rolling the dice\n   * @returns {D20RollPF} This roll\n   */\n  _onDialogSubmit(html, staticRoll) {\n    const form = html.querySelector(\"form\");\n    if (!form) return this;\n    const formData = this._getFormData(form);\n\n    if (formData.bonus) {\n      this.options.bonus = formData.bonus;\n    }\n\n    if (formData.d20) {\n      const baseDice = this.constructor.parse(formData.d20, this.data);\n      // If a static roll is given as d20 input, Take X button clicks are ignored\n      if (baseDice[0] instanceof NumericTerm) this.options.staticRoll = baseDice[0].total;\n      else if (baseDice[0] instanceof Die) {\n        this.terms = [...baseDice, ...this.terms.slice(1)];\n        // d20 input is actual dice, so Take X buttons are respected\n        if (staticRoll !== undefined) this.options.staticRoll = staticRoll;\n      }\n    } else {\n      // No d20 input, base die is default, so Take X buttons are respected\n      if (staticRoll !== undefined) this.options.staticRoll = staticRoll;\n    }\n\n    if (formData.rollMode) {\n      this.options.rollMode = formData.rollMode;\n    }\n\n    this._formula = this.constructor.getFormula(this.terms);\n\n    return this;\n  }\n\n  /**\n   * Transform this roll into a {@link ChatMessage} displaying the result.\n   * This function can either create a ChatMessage (by default) or return the data object that would be used to create one.\n   *\n   * @param {object} messageData - The data object to use when creating the message\n   * @param {D20RollChatOptions} options - Additional options which configure how the message is created\n   * @returns {Promise<ChatMessage | object>} The created ChatMessage document, or the object of data that would be used to create one\n   */\n  async toMessage(messageData = {}, options = {}) {\n    if (!this._evaluated) await this.evaluate();\n\n    const chatTemplate = options.chatTemplate || this.constructor.CHAT_TEMPLATE;\n    const chatTemplateData = foundry.utils.mergeObject(\n      {\n        formula: this.formula,\n        tooltip: await this.getTooltip(),\n        total: Math.floor(this.total * 100) / 100,\n        isCrit: this.isCrit,\n        isMisfire: this.isMisfire,\n        isNat20: this.isNat20,\n        isNat1: this.isNat1,\n        natural: this.natural,\n        options: this.options,\n        isStatic: this.isStatic,\n        isNormal: this.isNormal,\n        get isAbnormal() {\n          return this.isStatic || !this.isNormal;\n        },\n        get abnormalTooltip() {\n          if (this.isStatic) return game.i18n.format(\"PF1.TakeX\", { number: this.options.staticRoll });\n          else if (this.isAbnormal) return \"PF1.CustomRollDesc\";\n          else return \"\";\n        },\n        bonus: this.bonus,\n        flavor: this.options.flavor,\n        compendiumEntry: options.compendium?.entry,\n        compendiumEntryType: options.compendium?.type,\n      },\n      options.chatTemplateData || {}\n    );\n\n    const rollMode = options.rollMode || this.options.rollMode || game.settings.get(\"core\", \"rollMode\");\n    messageData = foundry.utils.mergeObject(\n      {\n        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n        sound: options.noSound ? undefined : CONFIG.sounds.dice,\n        content: await renderTemplate(chatTemplate, chatTemplateData),\n      },\n      messageData\n    );\n    messageData.rolls = [this]; // merge/expandObject would otherwise destroy the `Roll` instance\n    if (options.subject) foundry.utils.setProperty(messageData, \"flags.pf1.subject\", options.subject);\n\n    // Add combat reference if such exists\n    const actor = ChatMessage.getSpeakerActor(messageData.speaker);\n    if (actor && game.combat?.combatants.some((c) => c.actor === actor)) {\n      foundry.utils.setProperty(messageData, \"flags.pf1.metadata.combat\", game.combat.id);\n    }\n\n    const message = new ChatMessage.implementation(messageData);\n    if (rollMode) message.applyRollMode(rollMode);\n    messageData = message.toObject();\n\n    if (options.create ?? true) {\n      return ChatMessage.implementation.create(messageData, { rollMode });\n    } else {\n      return messageData;\n    }\n  }\n\n  /** @inheritDoc */\n  async _evaluate(options) {\n    this._applyBonus();\n    await super._evaluate(options);\n    this._applyStaticRoll();\n    return this;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync(options) {\n    this._applyBonus();\n    super._evaluateSync(options);\n    this._applyStaticRoll();\n    return this;\n  }\n\n  /**\n   * Apply the bonus the roll was created with or the user entered into the dialog.\n   *\n   * @private\n   */\n  _applyBonus() {\n    if (this.options.bonus) {\n      const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n      if (!(bonusTerms[0] instanceof OperatorTerm)) bonusTerms.unshift(new OperatorTerm({ operator: \"+\" }));\n      this.terms.push(...bonusTerms);\n      this._formula = this.constructor.getFormula(this.terms);\n    }\n  }\n\n  /**\n   * Replace the rolled result of the active d20 (or its replacement) with a static value,\n   * and adjust the total accordingly.\n   *\n   * @remarks This requires the roll to be evaluated.\n   * @private\n   */\n  _applyStaticRoll() {\n    if (!this._evaluated) throw new Error(\"Roll must be evaluated before applying static roll.\");\n\n    if (this.options.staticRoll !== null && this.options.staticRoll >= 0) {\n      const d20 = this.d20;\n      const diff = this.options.staticRoll - d20.total;\n      const newTotal = this._total + diff;\n      const activeDie = d20.results.find((r) => r.active) ?? d20.results[0];\n      activeDie.result = this.options.staticRoll;\n      this._total = newTotal;\n    }\n  }\n}\n\n/**\n * Performs an actor based d20 roll.\n *\n * @param {Partial<D20ActorRollOptions>} [options]\n * @example Rolling a 1d20 + an actor's BAB + 2 for good behavior\n * ```js\n * const actor = game.actors.getName(\"Righteous Paladin\");\n * await pf1.dice.d20Roll({\n *   skipDialog: true, // Roll away without a dialog\n *   flavor: \"BAB\", // Add a flavor/title to the roll\n *   parts: [`${actor.system.attributes.bab.total}[BAB]`], // Use the actor's BAB\n *   dice: \"2d20kh\", // Roll 2 d20s and keep the highest\n *   bonus: \"2[Good Behavior]\", // Add a static bonus of 2\n *   rollMode: \"gmroll\", // Make roll only visible to user and GM\n * });\n * ```\n * @returns {Promise<ChatMessage | object | undefined>} The created ChatMessage document, the object of data that would be used to create one, or undefined if cancelled\n */\nexport async function d20Roll(options = {}) {\n  const {\n    skipDialog = getSkipActionPrompt(),\n    staticRoll = null,\n    chatTemplateData = {},\n    chatMessage = true,\n    compendium,\n    noSound = false,\n    flavor = \"\",\n    parts = [],\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollData = {},\n    subject,\n    bonus = \"\",\n    speaker,\n    messageData = undefined,\n  } = options;\n\n  let rollMode = options.rollMode;\n\n  const formula = [dice, ...parts].join(\"+\");\n\n  const roll = new pf1.dice.D20RollPF(formula, rollData, { flavor, staticRoll, bonus }, { speaker });\n  if (!skipDialog) {\n    const title = speaker?.alias ? `${speaker.alias}: ${flavor}` : flavor;\n    const dialogResult = await roll.promptDialog({ title, rollMode, subject, speaker });\n    if (dialogResult === null) return;\n\n    // Move roll mode selection from roll data\n    rollMode = roll.options.rollMode;\n    delete roll.options.rollMode;\n  }\n\n  if (Hooks.call(\"pf1PreD20Roll\", roll, options) === false) return;\n\n  return roll.toMessage(\n    { ...messageData, speaker },\n    { create: chatMessage, noSound, chatTemplateData, compendium, subject, rollMode }\n  );\n}\n","import { calculateRange, convertDistance } from \"../utils/lib.mjs\";\nimport { getHighestChanges } from \"../documents/actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\nimport { keepUpdateArray } from \"../utils/lib.mjs\";\nimport { DamageRoll } from \"../dice/damage-roll.mjs\";\nimport { D20RollPF } from \"../dice/d20roll.mjs\";\n\n/**\n * Action pseudo-document\n */\nexport class ItemAction {\n  /**\n   * @internal\n   * @type {pf1.applications.component.ItemActionSheet}\n   */\n  _sheet = null;\n  /** @type {pf1.documents.item.ItemPF} */\n  parent = null;\n  /** @type {Record<number,Application>} */\n  apps = {};\n\n  static FALLBACK_IMAGE = \"systems/pf1/icons/skills/gray_04.jpg\";\n\n  constructor(data, parent) {\n    this.data = foundry.utils.mergeObject(ItemAction.defaultData, data);\n\n    this.parent = parent;\n\n    this.prepareData();\n  }\n\n  /** @type {string|null} - Normal material */\n  get normalMaterial() {\n    return this.data.material?.normal.value || this.item.normalMaterial;\n  }\n\n  /** @type {string[]} - Addon materials */\n  get addonMaterial() {\n    const addons = this.data.material?.addon || this.item.addonMaterial || [];\n    return addons.filter((o) => !!o);\n  }\n\n  /**\n   * The action's alignment attributes, or `null` if the action has no alignment attributes\n   *\n   * @type {string|null}\n   */\n  get alignments() {\n    return this.data.alignments ?? null;\n  }\n\n  get description() {\n    return this.data.description;\n  }\n\n  /**\n   * Returns whether this action is a combat maneuver\n   *\n   * @type {boolean}\n   */\n  get isCombatManeuver() {\n    return [\"mcman\", \"rcman\"].includes(this.data.actionType);\n  }\n\n  /**\n   * General activation accessor that removes determining which action economy is in use.\n   *\n   * @type {string} - Activation type.\n   */\n  get activation() {\n    return (\n      (game.settings.get(\"pf1\", \"unchainedActionEconomy\") ? this.data.activation.unchained : this.data.activation) ?? {}\n    );\n  }\n\n  /**\n   * Creates an action.\n   *\n   * @param {object[]} data - Data to initialize the action(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the action within.\n   * @returns The resulting actions, or an empty array if nothing was created.\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newActionData = foundry.utils.deepClone(parent.system.actions || []);\n      newActionData.push(...data);\n\n      // Update parent\n      await parent.update({ \"system.actions\": newActionData });\n      // Return results\n      return data.map((o) => parent.actions.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultDamageType() {\n    return {\n      values: [],\n      custom: \"\",\n    };\n  }\n\n  /** @type {ItemPF|undefined} - Parent item */\n  get item() {\n    return this.parent;\n  }\n\n  /** @type {ActorPF|undefined} - Parent actor of the parent item. */\n  get actor() {\n    return this.parent.actor;\n  }\n\n  /** @type {string} - Action ID */\n  get id() {\n    return this.data._id;\n  }\n\n  /** @type {string} - Image with fallback handling. */\n  get img() {\n    return this.data.img || this.item?.img || this.constructor.FALLBACK_IMAGE;\n  }\n\n  /** @type {string} - Name */\n  get name() {\n    return this.data.name;\n  }\n\n  /** @type {string} - Tag */\n  get tag() {\n    return this.data.tag || pf1.utils.createTag(this.name);\n  }\n\n  /**\n   * Can this action be used?\n   *\n   * Returns false if any known criteria for use limitation fails. Calls owning item's canUse functinality also.\n   *\n   * @see {@link pf1.documents.item.ItemBasePF.canUse}\n   *\n   * @type {boolean}\n   */\n  get canUse() {\n    const item = this.item;\n    if (!item.canUse) return false;\n\n    if (this.isSelfCharged) {\n      if ((this.data.uses.self?.value ?? 0) <= 0) return false;\n    }\n\n    if (item.isPhysical) {\n      if (item.system.quantity <= 0) return false;\n    }\n\n    if (this.isCharged) {\n      const cost = this.getChargeCost();\n      const charges = item.charges;\n      if (cost > 0) {\n        if (cost > charges) return false;\n      }\n    }\n\n    const ammo = this.ammoType;\n    if (ammo) {\n      // Check if actor has any relevant ammo, regardless if they're set to default\n      if (\n        this.actor?.itemTypes.loot.filter(\n          (i) => i.subType === \"ammo\" && i.system.extraType === ammo && i.system.quantity > 0\n        ).length === 0\n      )\n        return false;\n    }\n\n    return true;\n  }\n\n  /** @type {boolean} - Is some type of attack action. */\n  get hasAttack() {\n    return [\"mwak\", \"rwak\", \"twak\", \"msak\", \"rsak\", \"mcman\", \"rcman\"].includes(this.data.actionType);\n  }\n\n  /** @type {boolean} - Has multiple attacks */\n  get hasMultiAttack() {\n    if (!this.hasAttack) return false;\n    const exAtk = this.data.extraAttacks ?? {};\n    return exAtk.manual?.length > 0 || !!exAtk.type;\n  }\n\n  /** @type {boolean} - Consumes charges on use */\n  get autoDeductCharges() {\n    return this.getChargeCost() > 0;\n  }\n\n  /** @type {boolean} - Does parent item have charges */\n  get isCharged() {\n    return this.item.isCharged;\n  }\n\n  /** @type {boolean} - Action has charges of its own */\n  get isSelfCharged() {\n    return !!this.data.uses?.self?.per;\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {object} [options.rollData=null] - Pre-determined roll data to pass for determining the charge cost.\n   * @returns {number} Cost in charges for this action.\n   */\n  getChargeCost({ rollData = null } = {}) {\n    if (!this.isCharged) return 0;\n\n    const isSpell = this.item.type === \"spell\";\n    const isSpellpointSpell = isSpell && this.item.useSpellPoints();\n\n    let formula = !isSpellpointSpell ? this.data.uses.autoDeductChargesCost : this.data.uses.spellPointCost;\n    if (!formula) {\n      formula = this.item.getDefaultChargeFormula();\n    } else if (typeof formula !== \"string\") {\n      console.warn(this.item.name, \"action\", this.name, \"has invalid charge formula:\", formula, this);\n      formula = this.item.getDefaultChargeFormula();\n    }\n\n    rollData ??= this.getRollData();\n    const cost = RollPF.safeRollAsync(formula, rollData).total;\n    return this.item.isSingleUse ? Math.clamped(cost, -1, 1) : cost;\n  }\n\n  /**\n   * @type {number} The action's first increment range (in system configured units)\n   */\n  get range() {\n    return this.getRange({ type: \"single\" });\n  }\n\n  /** @type {number} - The action's exclusive minimum range. */\n  get minRange() {\n    return this.getRange({ type: \"min\" });\n  }\n\n  /**\n   * @type {number} The action's maximum range (range multiplied by range increments).\n   */\n  get maxRange() {\n    return this.getRange({ type: \"max\" });\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {\"single\"|\"min\"|\"max\"} [options.type=\"single\"] - What type of range to query. Either \"single\" (for a single range increment), \"max\" or \"min\".\n   * @param {object} [options.rollData=null] - Specific roll data to pass.\n   * @returns {number|null} The given range, in system configured units, or `null` if no range is applicable.\n   */\n  getRange({ type = \"single\", rollData = null } = {}) {\n    const baseRange = this.data.range.units;\n    const range = type === \"min\" ? this.data.range.minValue : this.data.range.value;\n    let rangeType = type === \"min\" ? this.data.range.minUnits : baseRange;\n\n    // Special case of ignoring min range for invalid range types\n    if (type === \"min\" && ![\"reach\", \"ft\", \"mi\", \"seeText\"].includes(baseRange)) return 0;\n\n    if (!rangeType) {\n      if (type !== \"min\") return null;\n      // Special handling for reach minimum range to account for natural reach when no explicit minimum range is defined\n      if (baseRange === \"reach\") rangeType = \"natural\";\n      else return 0;\n    }\n\n    rollData ??= this.getRollData();\n    const singleIncrementRange = calculateRange(range, rangeType, rollData)[0];\n\n    if ([\"single\", \"min\"].includes(type)) return singleIncrementRange;\n    return singleIncrementRange * this.data.range.maxIncrements;\n  }\n\n  /** @type {boolean} - Has measured template */\n  get hasTemplate() {\n    const { type, size } = this.data.measureTemplate;\n    return !!type && !!size;\n  }\n\n  /**\n   * Does the action implement a damage roll as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return !!this.data.damage.parts?.length;\n  }\n\n  /**\n   * Effective critical range when accounting for broken status and action type.\n   *\n   * @type {number}\n   */\n  get critRange() {\n    if (this.item.isBroken || this.isCombatManeuver) return 20;\n    return this.data.ability?.critRange || 20;\n  }\n\n  /**\n   * Misfire threshold\n   *\n   * @type {number} Misfire threshold. Zero if action does not misfire.\n   */\n  get misfire() {\n    const misfire = this.data.ammo?.misfire ?? null;\n    if (Number.isFinite(misfire)) return misfire;\n    return this.item?.system.ammo?.misfire ?? 0;\n  }\n\n  /**\n   * Get power attack, deadly aim or piranha strike multiplier.\n   *\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData=null] - Roll data instance\n   * @returns {number} - Effective multiplier\n   */\n  getPowerAttackMult({ rollData = null } = {}) {\n    rollData ??= this.getRollData();\n\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n\n    let mult = rollData.action?.powerAttack?.multiplier;\n    // Use defined override\n    if (mult) return mult;\n\n    // Determine default based on attack type and held option\n    mult = 1;\n    if (this.item.subType === \"natural\") {\n      // Primary\n      if (rollData.action.naturalAttack?.primaryAttack) {\n        const ablDmgMult = rollData.action.ability?.damageMult ?? 1;\n        // Primary attack gets +50% damage like with two-handing if ability score multiplier is 1.5x or higher\n        if (ablDmgMult >= 1.5) mult = 1.5;\n      }\n      // Secondary\n      else {\n        mult = 0.5;\n      }\n    } else {\n      if (held === \"2h\") mult = 1.5;\n      else if (held === \"oh\") mult = 0.5;\n    }\n\n    return mult;\n  }\n\n  /**\n   * Does the item have range defined.\n   *\n   * @type {boolean}\n   */\n  get hasRange() {\n    const units = this.data.range?.units;\n    if (units === \"none\") return false;\n    return !!units;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Does the item provide an amount of healing instead of conventional damage?\n   *\n   * @returns {boolean}\n   */\n  get isHealing() {\n    return this.data.actionType === \"heal\" && this.hasDamage;\n  }\n\n  get hasEffect() {\n    return this.hasDamage || (this.data.effectNotes != null && this.data.effectNotes.length > 0);\n  }\n\n  /**\n   * Does the Item implement a saving throw as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasSave() {\n    return !!this.data.save?.type;\n  }\n\n  /**\n   * @param {object} [rollData] - Data to pass to the roll. If none is given, get new roll data.\n   * @returns {number} The Difficulty Class for this action.\n   */\n  getDC(rollData = null) {\n    rollData ??= this.getRollData();\n    let result = 10;\n\n    // Get conditional save DC bonus\n    const dcBonus = rollData.dcBonus ?? 0;\n\n    if (this.item.type === \"spell\") {\n      const spellbook = this.item.spellbook;\n      if (spellbook) {\n        let formula = spellbook.baseDCFormula;\n\n        const data = rollData.action;\n        if (data.save.dc.length > 0) formula += ` + ${data.save.dc}`;\n\n        const dcSchoolBonus = rollData.attributes.spells?.school?.[this.item.system.school]?.dc ?? 0;\n        const universalDCBonus = rollData.attributes?.spells?.school?.all?.dc ?? 0;\n\n        return RollPF.safeRollSync(formula, rollData).total + dcBonus + dcSchoolBonus + universalDCBonus;\n      } else {\n        // Assume standard base formula for spells with minimum required abilty score\n        const level = this.item?.system.level ?? 1;\n        const minAbl = Math.floor(level / 2);\n        return 10 + level + minAbl + dcBonus;\n      }\n    } else {\n      const dcFormula = this.data.save.dc?.toString() || \"0\";\n      result = RollPF.safeRollSync(dcFormula, rollData).total + dcBonus;\n      return result;\n    }\n  }\n\n  /** @type {boolean} - Is sound effect defined? */\n  get hasSound() {\n    return !!this.data.soundEffect;\n  }\n\n  /** @type {number|null} - Effective enhancement bonus */\n  get enhancementBonus() {\n    return this.data.enh?.value ?? this.item.system.enh;\n  }\n\n  /** @type {boolean} - Is ranged action */\n  get isRanged() {\n    return [\"rwak\", \"twak\", \"rsak\", \"rcman\"].includes(this.data.actionType);\n  }\n\n  /** @type {boolean} - Is spell action? */\n  get isSpell() {\n    return [\"rsak\", \"msak\"].includes(this.data.actionType);\n  }\n\n  /**\n   * An array of changes affecting this action's damage\n   *\n   * @type {ItemChange[]}\n   */\n  get damageSources() {\n    // Build damage context\n    const contexts = [pf1.const.actionTypeToContext[this.data.actionType] ?? \"damage\"];\n    if (this.isRanged) contexts.push(\"rdamage\");\n    else contexts.push(\"mdamage\");\n    if (this.item.subType === \"natural\") contexts.push(\"ndamage\");\n\n    const changes = this.item.getContextChanges(contexts);\n    if (changes.length == 0) return [];\n    return getHighestChanges(changes, { ignoreTarget: true });\n  }\n\n  /**\n   * @type {ItemChange[]} All relevant Changes for this action's damage.\n   */\n  get allDamageSources() {\n    const conds = this.data.conditionals\n      .filter((c) => c.default)\n      .filter((c) => c.modifiers.find((m) => m.target === \"damage\"));\n    const rollData = this.getRollData();\n\n    if (!rollData) return [];\n\n    const mods = Object.keys(pf1.config.bonusTypes);\n\n    // Turn relevant conditionals into structure accepted by getHighestChanges\n    const fakeCondChanges = [];\n    for (const c of conds) {\n      for (const m of c.modifiers) {\n        if (m.target !== \"damage\") continue;\n        const roll = new RollPF(m.formula, rollData);\n        const isDeterministic = roll.isDeterministic;\n        try {\n          if (isDeterministic) roll.evaluate({ async: false });\n        } catch (err) {\n          // Ignore\n        }\n        const isModifier = mods.includes(m.type);\n        fakeCondChanges.push({\n          flavor: c.name,\n          value: isDeterministic ? roll.total : m.formula,\n          modifier: isModifier ? m.type : \"untyped\", // Turn unrecognized types to untyped\n          type: isModifier ? undefined : m.type, // Preserve damage type if present\n          formula: m.formula,\n        });\n      }\n    }\n\n    const allChanges = [...this.damageSources, ...fakeCondChanges];\n\n    // Add enhancement bonus\n    const enh = this.enhancementBonus;\n    if (enh) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        value: enh,\n        type: \"enh\",\n        formula: enh.toString(),\n      });\n    }\n\n    // Add special cases specific to the item\n    // Broken\n    if (this.item.isBroken) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.Broken\"),\n        value: -2,\n        type: \"untyped\",\n        formula: \"-2\",\n      });\n    }\n\n    return getHighestChanges(allChanges, { ignoreTarget: true });\n  }\n\n  /**\n   * @internal\n   * @returns {object}\n   */\n  getRollData() {\n    const result = foundry.utils.deepClone(this.item.getRollData());\n\n    result.action = foundry.utils.deepClone(this.data);\n    result.dc = this.hasSave ? this.getDC(result) : 0;\n\n    if (this.item.type === \"spell\") {\n      // Add per school CL bonus\n      result.cl += result.attributes?.spells?.school?.[this.item.system.school]?.cl ?? 0;\n    }\n\n    // BAB override\n    if (result.action.bab) {\n      const bab = RollPF.safeRollSync(result.action.bab, result).total;\n      foundry.utils.setProperty(result, \"attributes.bab.total\", bab || 0);\n    }\n\n    // Add @bab\n    result.bab = result.attributes?.bab?.total || 0;\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      name: game.i18n.localize(\"PF1.Action\"),\n      img: \"\",\n      description: \"\",\n      tag: \"\",\n      activation: {\n        cost: 1,\n        type: \"nonaction\",\n        unchained: {\n          cost: 1,\n          type: \"nonaction\",\n        },\n      },\n      duration: {\n        value: null,\n        units: \"\",\n      },\n      target: {\n        value: \"\",\n      },\n      range: {\n        value: null,\n        units: \"\",\n        maxIncrements: 1,\n        minValue: null,\n        minUnits: \"\",\n      },\n      uses: {\n        autoDeductChargesCost: \"\",\n        self: {\n          value: 0,\n          maxFormula: \"\",\n          per: \"\",\n        },\n      },\n      measureTemplate: {\n        type: \"\",\n        size: \"\",\n        color: \"\",\n        texture: \"\",\n      },\n      attackName: \"\",\n      actionType: \"other\",\n      attackBonus: \"\",\n      critConfirmBonus: \"\",\n      damage: {\n        parts: [],\n        critParts: [],\n        nonCritParts: [],\n      },\n      extraAttacks: {\n        type: \"\",\n        manual: [],\n        formula: {\n          count: \"\",\n          bonus: \"\",\n          label: \"\",\n        },\n      },\n      ability: {\n        attack: \"\",\n        damage: \"\",\n        damageMult: null,\n        critRange: 20,\n        critMult: 2,\n      },\n      save: {\n        dc: \"\",\n        type: \"\",\n        description: \"\",\n      },\n      effectNotes: [],\n      attackNotes: [],\n      soundEffect: \"\",\n      powerAttack: {\n        multiplier: null,\n        damageBonus: 2,\n        critMultiplier: 1,\n      },\n      naturalAttack: {\n        primaryAttack: true,\n        secondary: {\n          attackBonus: \"-5\",\n          damageMult: 0.5,\n        },\n      },\n      held: \"\",\n      nonlethal: false,\n      splash: false,\n      touch: false,\n      ammo: {\n        type: \"\",\n        cost: 1,\n      },\n      spellEffect: \"\",\n      area: \"\",\n      conditionals: [],\n      enh: {\n        value: null,\n      },\n      material: {\n        normal: {},\n        addon: [],\n      },\n      alignments: {\n        lawful: null,\n        chaotic: null,\n        good: null,\n        evil: null,\n      },\n    };\n  }\n\n  /**\n   * Data preparation\n   *\n   * @internal\n   */\n  prepareData() {\n    // Default action type to other if undefined.\n    // Optimally this would be in constructor only, but item action handling can cause that to be lost\n    this.data.actionType ||= \"other\";\n\n    const rollData = this.getRollData();\n\n    // Update conditionals\n    if (this.data.conditionals instanceof Array) {\n      this.conditionals = this._prepareConditionals(this.data.conditionals);\n    }\n\n    // Prepare max personal charges\n    if (this.data.uses.self?.per) {\n      const maxFormula = this.data.uses.self.per === \"single\" ? \"1\" : this.data.uses.self.maxFormula;\n      const maxUses = RollPF.safeRollSync(maxFormula, rollData).total ?? 0;\n      foundry.utils.setProperty(this.data, \"uses.self.max\", maxUses);\n    }\n\n    // Remove enhancement bonus override, if wrong type\n    if (this.data.enh?.value != null && ![\"weapon\", \"attack\"].includes(this.item.type)) {\n      foundry.utils.setProperty(this.data, \"enh.value\", null);\n    }\n\n    // Initialize default damageMult if missing (for things that can't inherit it from item)\n    if (!Number.isFinite(this.data.ability?.damageMult)) {\n      let canHold = this.item?.isPhysical || this.item?.isQuasiPhysical || false;\n      if (!this.hasAttack) canHold = false;\n      if (!canHold) foundry.utils.setProperty(this.data, \"ability.damageMult\", 1);\n    }\n    if (this.data.naturalAttack?.secondary?.damageMult === undefined) {\n      foundry.utils.setProperty(this.data, \"naturalAttack.secondary.damageMult\", 0.5);\n    }\n  }\n\n  /**\n   * @internal\n   *\n   * @param {Array} conditionals\n   * @returns {Collection<string,ItemConditional>}\n   */\n  _prepareConditionals(conditionals) {\n    const prior = this.conditionals;\n    const collection = new Collection();\n    for (const o of conditionals) {\n      let conditional = null;\n      if (prior && prior.has(o._id)) {\n        conditional = prior.get(o._id);\n        conditional.data = o;\n        conditional.prepareData();\n      } else conditional = new pf1.components.ItemConditional(o, this);\n      collection.set(o._id || conditional.data._id, conditional);\n    }\n    return collection;\n  }\n\n  /**\n   * Delete this action\n   *\n   * @returns {Item} - Updated parent item document.\n   */\n  async delete() {\n    const actions = foundry.utils.deepClone(this.item.system.actions);\n    actions.findSplice((a) => a._id == this.id);\n\n    // Pre-emptively close applications\n    const promises = [];\n    for (const app of Object.values(this.apps)) {\n      promises.push(app.close({ pf1: { action: \"delete\" }, submit: false, force: true }));\n    }\n    await Promise.all(promises);\n\n    // Delete action\n    return this.item.update({ \"system.actions\": actions });\n  }\n\n  /**\n   * Update the action\n   *\n   * @param {object} updateData - Update data\n   * @param {object} context - Update context\n   */\n  async update(updateData, context = {}) {\n    updateData = foundry.utils.expandObject(updateData);\n    const idx = this.item.system.actions.findIndex((action) => action._id === this.id);\n    if (idx < 0) throw new Error(`Action ${this.id} not found on item.`);\n    const prevData = this.item.toObject().system.actions[idx];\n    const newUpdateData = foundry.utils.mergeObject(prevData, updateData, { performDeletions: true });\n\n    // Make sure this action has a name, even if it's removed\n    newUpdateData[\"name\"] ||= this.name;\n\n    // Make sure stuff remains an array\n    {\n      const keepPaths = [\n        \"extraAttacks.manual\",\n        \"damage.parts\",\n        \"damage.critParts\",\n        \"damage.nonCritParts\",\n        \"attackNotes\",\n        \"effectNotes\",\n        \"conditionals\",\n      ];\n\n      for (const path of keepPaths) {\n        keepUpdateArray(this.data, newUpdateData, path);\n      }\n    }\n\n    await this.item.update({ \"system.actions\": { [idx]: newUpdateData } }, context);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Data Generation\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this action's parent item, but with this action's data,\n   * regardless of whether it is the first action or not.\n   *\n   * @see {@link ItemPF#getChatData}\n   * @param {object} [chatDataOptions] - Options passed to {@link ItemPF#getChatData} affecting the chat data\n   * @returns {Promise<import(\"../documents/item/item-pf.mjs\").ChatData>} Chat data for this action's parent and this action\n   */\n  async getChatData(chatDataOptions = {}) {\n    return this.item.getChatData({ ...chatDataOptions, actionId: this.id });\n  }\n\n  /**\n   * Returns labels related to this particular action\n   *\n   * @param {object} [options]\n   * @param {object} [options.rollData] - Pre-determined roll data. If not provided, finds the action's own roll data.\n   * @returns {Record<string, string>} This action's labels\n   */\n  getLabels({ rollData } = {}) {\n    const actionData = this.data;\n    const labels = {};\n    rollData ??= this.getRollData();\n\n    // Activation method\n    if (actionData.activation) {\n      const activation = this.activation;\n      if (activation) {\n        const isUnchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n        const activationTypes = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypes_unchained\n          : pf1.config.abilityActivationTypes;\n        const activationTypesPlural = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypesPlurals_unchained\n          : pf1.config.abilityActivationTypesPlurals;\n\n        const activationType = activation.type || \"nonaction\";\n        if (activation.type === \"special\") {\n          labels.activation = activation.cost || activationTypes.special;\n        } else if (activation.cost > 1 && !!activationTypesPlural[activationType]) {\n          labels.activation = [activation.cost.toString(), activationTypesPlural[activationType]].filterJoin(\" \");\n        } else {\n          labels.activation = [\n            [\"minute\", \"hour\", \"action\"].includes(activationType) && activation.cost ? activation.cost.toString() : \"\",\n            activationTypes[activationType],\n          ].filterJoin(\" \");\n        }\n      }\n    }\n\n    // Difficulty Class\n    if (this.hasSave) {\n      const totalDC = rollData.dc + (rollData.dcBonus ?? 0);\n      labels.save = game.i18n.format(\"PF1.DCThreshold\", { threshold: totalDC });\n    }\n\n    if (this.hasRange) {\n      const sourceUnits = actionData.range.units;\n      const rangeLabel = pf1.config.distanceUnits[sourceUnits];\n      if (sourceUnits === \"spec\") {\n        // Special can not be displayed reasonably\n      } else if ([\"personal\", \"touch\", \"melee\", \"reach\"].includes(sourceUnits)) {\n        labels.range = rangeLabel;\n      } else {\n        const range = this.getRange({ type: \"single\", rollData });\n        if (range > 0) {\n          const usystem = pf1.utils.getDistanceSystem();\n          const rangeUnit = usystem === \"metric\" ? \"m\" : \"ft\";\n          labels.range = `${range} ${rangeUnit}`;\n        }\n        if ([\"close\", \"medium\", \"long\"].includes(sourceUnits)) {\n          labels.range += ` (${rangeLabel})`;\n        }\n      }\n    }\n\n    // Action type\n    labels.actionType = pf1.config.itemActionTypes[actionData.actionType];\n\n    return labels;\n  }\n\n  // -----------------------------------------------------------------------\n\n  /**\n   * Get all appropriate context changes for attack rolls.\n   *\n   * @see {@link ItemPF.getContextChanges}\n   */\n  get attackSources() {\n    const contexts = [\"~attackCore\"];\n    if (this.isCombatManeuver) contexts.push(\"cmb\");\n    if (this.isRanged) contexts.push(\"rattack\");\n    else contexts.push(\"mattack\");\n\n    const isNatural = this.item.subType === \"natural\";\n    if (isNatural) contexts.push(\"nattack\");\n\n    switch (this.data.actionType) {\n      case \"twak\":\n        contexts.push(\"tattack\");\n        if (!isNatural) contexts.push(\"wattack\");\n        break;\n      case \"mwak\":\n      case \"rwak\":\n        if (!isNatural) contexts.push(\"wattack\");\n        break;\n      case \"msak\":\n      case \"rsak\":\n        contexts.push(\"sattack\");\n        break;\n    }\n\n    return this.item.getContextChanges(contexts);\n  }\n\n  /**\n   * Place an attack roll using an item (weapon, feat, spell, or equipment)\n   *\n   * @param {object} [options] - Options\n   * @param {object} [options.data] - Roll data\n   * @param {Array<string>} [options.extraParts] - Additional attack parts\n   * @param {string} [options.bonus] - Additional attack bonus\n   * @param {boolean} [options.primaryAttack=true] - Treat as primary natural attack\n   * @returns {D20RollPF}\n   */\n  async rollAttack({ data = null, extraParts = [], bonus = null, primaryAttack = true } = {}) {\n    const rollData = data ?? this.getRollData();\n    const itemData = rollData.item;\n    const actionData = rollData.action;\n\n    const config = {};\n\n    itemData.primaryAttack = primaryAttack;\n\n    const isRanged = this.isRanged;\n    const isCMB = this.isCombatManeuver;\n\n    const size = rollData.traits?.size ?? \"med\";\n\n    // Determine size bonus\n    rollData.sizeBonus = !isCMB ? pf1.config.sizeMods[size] : pf1.config.sizeSpecialMods[size];\n\n    // Add misc bonuses/penalties\n    itemData.proficiencyPenalty = -4;\n\n    // Determine ability score modifier\n    const abl = actionData.ability.attack;\n\n    // Define Roll parts\n    const parts = [];\n\n    // Add size bonus\n    if (rollData.sizeBonus !== 0) parts.push(`@sizeBonus[${game.i18n.localize(\"PF1.Size\")}]`);\n\n    const ability = rollData.abilities?.[abl];\n    // Add ability modifier\n    if (ability?.mod !== 0) {\n      parts.push(`@abilities.${abl}.mod[${pf1.config.abilities[abl]}]`);\n    }\n\n    // Get relevant changes\n    const changes = this.attackSources;\n\n    // Add masterwork bonus to changes (if applicable)\n    if ([\"mwak\", \"rwak\", \"twak\", \"mcman\", \"rcman\"].includes(this.data.actionType) && this.item.system.masterwork) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"1\",\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: 1,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Add enhancement bonus to changes\n    if (this.enhancementBonus) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: this.enhancementBonus.toString(),\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: this.enhancementBonus,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Add bonus parts\n    parts.push(...extraParts);\n    // Add attack bonus\n    if (typeof actionData.attackBonus === \"string\" && ![\"\", \"0\"].includes(actionData.attackBonus)) {\n      parts.push(actionData.attackBonus);\n    }\n    // Backwards compatibility\n    else if (typeof actionData.attackBonus === \"number\") {\n      itemData.attackBonus = actionData.attackBonus;\n      parts.push(`@item.attackBonus[${game.i18n.localize(\"PF1.AttackRollBonus\")}]`);\n    }\n\n    // Add proficiency penalty\n    try {\n      config.proficient = this.item.getProficiency(true);\n    } catch (error) {\n      // Treat as proficient if there's proficiency incompatibility.\n      config.proficient = true;\n    }\n\n    // Add secondary natural attack penalty\n    const isNatural = this.item.subType === \"natural\";\n    const isNaturalSecondary = isNatural && primaryAttack === false;\n    config.secondaryPenalty = isNaturalSecondary ? -5 : 0;\n\n    // Add bonus\n    rollData.bonus = bonus ? await RollPF.safeRollAsync(bonus, rollData).total : 0;\n\n    // Options for D20RollPF\n    const rollOptions = {\n      critical: this.critRange,\n    };\n\n    if (this.ammoType && this.ammoCost > 0) {\n      const misfire = this.misfire;\n      if (misfire > 0) rollOptions.misfire = misfire;\n    }\n\n    // call pre attack hook before changes are filtered and before specific [parts] from config and roll data are created\n    Hooks.call(\"pf1PreAttackRoll\", this, config, rollData, rollOptions, parts, changes);\n\n    // Get attack bonus\n    getHighestChanges(\n      changes.filter((c) => {\n        c.applyChange(this.actor);\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).forEach((c) => {\n      let value = c.value;\n      // BAB override\n      if (actionData.bab && c._id === \"_bab\") {\n        value = RollPF.safeRollSync(c.formula, data).total || 0;\n      }\n      if (value == 0) return;\n      parts.push(`${value}[${RollPF.cleanFlavor(c.flavor)}]`);\n    });\n\n    // Convert config to roll part\n    if (config.secondaryPenalty != 0) {\n      parts.push(`${config.secondaryPenalty}[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n    }\n\n    if (rollData.bonus != 0) {\n      parts.push(`@bonus[${game.i18n.localize(\"PF1.SituationalBonus\")}]`);\n    }\n\n    if (!config.proficient) {\n      parts.push(`@item.proficiencyPenalty[${game.i18n.localize(\"PF1.Proficiency.Penalty\")}]`);\n    }\n\n    const roll = await new pf1.dice.D20RollPF(\n      [rollData.d20 || pf1.dice.D20RollPF.standardRoll, ...parts.filter((p) => !!p)].join(\"+\"),\n      rollData,\n      rollOptions\n    ).evaluate();\n\n    // Cleanup roll data that was altered here.\n    delete rollData.bonus;\n\n    Hooks.call(\"pf1AttackRoll\", this, roll, config);\n\n    return roll;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll damage for an action.\n   *\n   * @param {object} [options] - Options configuring the damage roll\n   * @param {object | null} [options.data=null] - rollData to be used\n   * @param {boolean} [options.critical=false] - Whether to roll critical damage\n   * @param {string[]} [options.extraParts] - Additional strings added to the roll formula\n   * @param {object} [options.conditionalParts=[]] - Conditional data sets\n   * @param {boolean} [options.primaryAttack] - Whether this is the primary attack\n   * @returns {Promise<DamageRoll[]>} Created damage rolls, one roll per damage part\n   */\n  async rollDamage({\n    data = null,\n    critical = false,\n    extraParts = [],\n    conditionalParts = {},\n    primaryAttack = true,\n  } = {}) {\n    const rollData = data ?? this.getRollData();\n    const itemData = rollData.item;\n    const actionData = rollData.action;\n\n    if (!this.hasDamage) {\n      throw new Error(\"You may not make a Damage Roll with this Action.\");\n    }\n\n    const isNatural = this.item?.subType === \"natural\";\n\n    // Determine critical multiplier\n    rollData.critMult = 1;\n    if (critical) rollData.critMult = actionData.ability.critMult;\n    // Determine ability multiplier\n    if (rollData.ablMult == null) {\n      const held = actionData?.held || itemData?.held || \"1h\";\n      rollData.ablMult =\n        actionData?.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    }\n\n    // Define Roll parts\n    const parts =\n      this.data.damage.parts?.map((damage) => {\n        return { base: damage.formula, extra: [], damageType: damage.type, type: \"normal\" };\n      }) ?? [];\n    // Add conditionals damage\n    conditionalParts[\"damage.normal\"]?.forEach((p) => {\n      const [base, damageType, isExtra] = p;\n      isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type: \"normal\" });\n    });\n    // Add critical damage parts\n    if (critical === true) {\n      const critParts = this.data.damage?.critParts;\n      if (critParts) {\n        parts.push(\n          ...critParts.map((damage) => {\n            return { base: damage.formula, extra: [], damageType: damage.type, type: \"crit\" };\n          })\n        );\n      }\n      // Add conditional critical damage parts\n      conditionalParts[\"damage.crit\"]?.forEach((p) => {\n        const [base, damageType, isExtra] = p;\n        isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type: \"crit\" });\n      });\n    }\n    // Add non-critical damage parts\n    if (critical === false) {\n      const nonCritParts = this.data.damage?.nonCritParts;\n      if (nonCritParts) {\n        parts.push(\n          ...nonCritParts.map((damage) => {\n            return { base: damage.formula, extra: [], damageType: damage.type, type: \"nonCrit\" };\n          })\n        );\n      }\n      // Add conditional non-critical damage parts\n      conditionalParts[\"damage.nonCrit\"]?.forEach((p) => {\n        const [base, damageType, isExtra] = p;\n        isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type: \"nonCrit\" });\n      });\n    }\n\n    /**\n     * Initialize changes to empty array so mods can still add changes for healing \"attacks\" via the pre-roll hook below\n     *\n     *  @type {ItemChange[]}\n     */\n    let changes = [];\n    if (!this.isHealing) {\n      // Gather changes\n      changes = this.damageSources;\n\n      // Add enhancement bonus to changes\n      if (this.enhancementBonus) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: this.enhancementBonus.toString(),\n            operator: \"add\",\n            target: \"damage\",\n            type: \"enh\",\n            value: this.enhancementBonus,\n            flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n          })\n        );\n      }\n\n      // Add broken penalty\n      if (this.item.isBroken) {\n        const label = game.i18n.localize(\"PF1.Broken\");\n        parts[0].extra.push(`-2[${label}]`);\n      }\n    }\n\n    // call pre damage hook before changes are filtered and before specific [parts] from roll data are created\n    Hooks.call(\"pf1PreDamageRoll\", this, rollData, parts, changes);\n\n    // Get damage bonus\n    getHighestChanges(\n      changes.filter((c) => {\n        c.applyChange(this.actor);\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).forEach((c) => {\n      let value = c.value;\n      // Put in parenthesis if there's a chance it is more complex\n      if (/[\\s+-?:]/.test(value)) value = `(${value})`;\n      parts[0].extra.push(`${value}[${c.flavor}]`);\n    });\n\n    // Determine ability score modifier\n    const abl = actionData.ability.damage;\n    const ability = rollData.abilities?.[abl];\n    if (ability) {\n      // Determine ability score bonus\n      const max = actionData.ability?.max ?? Infinity;\n      if (ability.mod < 0) rollData.ablDamage = Math.min(max, ability.mod);\n      else rollData.ablDamage = Math.floor(Math.min(max, ability.mod) * rollData.ablMult);\n\n      // Determine ability score label\n      const ablLabel = pf1.config.abilities[abl];\n\n      // Add ability score\n      parts[0].extra.push(`@ablDamage[${ablLabel}]`);\n    }\n\n    // Create roll\n    const rolls = [];\n    for (let a = 0; a < parts.length; a++) {\n      const part = parts[a];\n      let rollParts = [];\n      if (a === 0) rollParts = [...part.extra, ...extraParts];\n      const formula = [part.base, ...rollParts].join(\" + \");\n      // Skip empty formulas instead of erroring on them\n      if (formula.length == 0) continue;\n      try {\n        const roll = await new DamageRoll(formula, rollData, {\n          damageType: part.damageType,\n          type: part.type,\n        }).evaluate();\n        // Add to result\n        rolls.push(roll);\n      } catch (err) {\n        console.error(\"Error with damage formula:\", formula, this);\n        throw err;\n      }\n    }\n\n    return rolls;\n  }\n\n  /**\n   * Generates a list of targets this modifier can have.\n   *\n   * @param {ItemPF} item - The item for which the modifier is to be created.\n   * @returns {Object<string, string>} A list of targets\n   */\n  getConditionalTargets() {\n    const result = {};\n    if (this.hasAttack) {\n      result[\"attack\"] = game.i18n.localize(pf1.config.conditionalTargets.attack._label);\n      result[\"critMult\"] = game.i18n.localize(pf1.config.conditionalTargets.critMult._label);\n    }\n    if (this.hasDamage) result[\"damage\"] = game.i18n.localize(pf1.config.conditionalTargets.damage._label);\n    result[\"size\"] = game.i18n.localize(pf1.config.conditionalTargets.size._label);\n    if (this.item.type === \"spell\" || this.hasSave)\n      result[\"effect\"] = game.i18n.localize(pf1.config.conditionalTargets.effect._label);\n    // Only add Misc target if subTargets are available\n    if (Object.keys(this.getConditionalSubTargets(\"misc\")).length > 0) {\n      result[\"misc\"] = game.i18n.localize(pf1.config.conditionalTargets.misc._label);\n    }\n    return result;\n  }\n\n  /**\n   * Generates lists of conditional subtargets this attack can have.\n   *\n   * @param {string} target - The target key, as defined in PF1.conditionTargets.\n   * @returns {Object<string, string>} A list of conditionals\n   */\n  getConditionalSubTargets(target) {\n    const result = {};\n    // Add static targets\n    if (foundry.utils.hasProperty(pf1.config.conditionalTargets, target)) {\n      for (const [k, v] of Object.entries(pf1.config.conditionalTargets[target])) {\n        if (!k.startsWith(\"_\") && !k.startsWith(\"~\")) result[k] = v;\n      }\n    }\n    // Add subtargets depending on attacks\n    if ([\"attack\", \"damage\"].includes(target)) {\n      // Add specific attacks\n      if (this.hasAttack) {\n        result[\"attack_0\"] = `${game.i18n.localize(\"PF1.Attack\")} 1`;\n\n        const exAtk = this.data.extraAttacks;\n        if (exAtk?.manual?.length) {\n          exAtk.manual.forEach((part, index) => {\n            result[`attack_${index + 1}`] = part.name;\n          });\n        }\n      } else {\n        delete result[\"rapidShotDamage\"];\n      }\n    }\n    // Add subtargets affecting effects\n    if (target === \"effect\") {\n      if (this.hasSave) result[\"dc\"] = game.i18n.localize(\"PF1.DC\");\n      if (this.item?.type === \"spell\") result[\"cl\"] = game.i18n.localize(\"PF1.CasterLevelAbbr\");\n    }\n    // Add misc subtargets\n    if (target === \"misc\") {\n      // Add charges subTarget with specific label\n      if (this.isCharged && this.type !== \"spell\") result[\"charges\"] = game.i18n.localize(\"PF1.ChargeCost\");\n    }\n    return result;\n  }\n\n  /* Generates lists of conditional modifier bonus types applicable to a formula.\n   * @param {string} target - The target key as defined in PF1.conditionTargets.\n   * @returns {Object.<string, string>} A list of bonus types.\n   * */\n  getConditionalModifierTypes(target) {\n    const result = {};\n    if (target === \"attack\" || target === \"damage\") {\n      // Add types from pf1.config.bonusTypes\n      for (const [k, v] of Object.entries(pf1.config.bonusTypes)) {\n        result[k] = v;\n      }\n    }\n    if (target === \"damage\") {\n      for (const damageType of pf1.registry.damageTypes) {\n        result[damageType.id] = damageType.name;\n      }\n    }\n    return result;\n  }\n\n  /* Generates a list of critical applications for a given formula target.\n   * @param {string} target - The target key as defined in PF1.conditionalTargets.\n   * @returns {Object.<string, string>} A list of critical applications.\n   * */\n  getConditionalCritical(target) {\n    let result = {};\n    // Attack bonuses can only apply as critical confirm bonus\n    if (target === \"attack\") {\n      result = { ...result, normal: \"PF1.Normal\", crit: \"PF1.CriticalConfirmBonus\" };\n    }\n    // Damage bonuses can be multiplied or not\n    if (target === \"damage\") {\n      result = { ...result, normal: \"PF1.Normal\" };\n      if (this.hasAttack) {\n        result = { ...result, crit: \"PF1.OnCritBonusFormula\", nonCrit: \"PF1.NonMultBonusFormula\" };\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generate attacks.\n   *\n   * @param {object} [options] - Options\n   * @param {boolean} [options.full=true] - Full attack\n   * @param {object} [options.rollData] - Roll data\n   * @param {boolean} [options.resolve=false] - If the bonuses are to be resolved directly.\n   * @param {boolean} [options.conditionals=false] - Include conditional modifications. Requires `resolve` to be enabled.\n   * @param {boolean} [options.bonuses=false] - Include other bonuses. Requires `resolve` to be enabled.\n   * @returns {Array<object>} - Array of attack data\n   */\n  getAttacks({ full = true, rollData, resolve = false, conditionals = false, bonuses = false } = {}) {\n    rollData ||= this.getRollData();\n\n    const actionData = this.data;\n\n    const exAtkCfg = pf1.config.extraAttacks[actionData.extraAttacks?.type] ?? {};\n\n    /**\n     * Counter for unnamed or other numbered attacks, to be incremented with each usage.\n     * Starts at 1 to account for the base attack.\n     */\n    let unnamedAttack = 0;\n    const unnamedAttackNames = new Set();\n    const getUniqueName = (name, template) => {\n      if (template && template.indexOf(\"{0}\") == -1) template = null;\n      let label = name;\n      while (unnamedAttackNames.has(label) || !label) {\n        unnamedAttack += 1;\n        if (template) label = template.replace(\"{0}\", unnamedAttack);\n        else label = game.i18n.format(\"PF1.ExtraAttacks.Formula.LabelDefault\", { 0: unnamedAttack });\n      }\n      unnamedAttackNames.add(label);\n      return label;\n    };\n\n    rollData.attackCount = 0;\n\n    const flavor = game.i18n.localize(exAtkCfg.flavor || \"\");\n    const formula = flavor ? `(${exAtkCfg.bonus || \"0\"})[${flavor}]` : exAtkCfg.bonus;\n    const attacks = [{ bonus: formula, label: getUniqueName(actionData.attackName) }];\n\n    // Extra attacks\n    if (full) {\n      rollData.fullAttack = 1;\n      const unchainedEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n      let attackCount = 0;\n\n      const parseAttacks = (countFormula, bonusFormula, label, bonusLabel) => {\n        const exAtkCount = RollPF.safeRollAsync(countFormula, rollData)?.total ?? 0;\n        if (exAtkCount <= 0) return;\n\n        try {\n          for (let i = 0; i < exAtkCount; i++) {\n            rollData.attackCount = attackCount += 1;\n            rollData.formulaicAttack = i + 1; // Add and update attack counter\n            const bonus = RollPF.safeRollAsync(\n              bonusFormula || \"0\",\n              rollData,\n              { formula: bonusFormula, action: this },\n              undefined,\n              {\n                minimize: true,\n              }\n            ).total;\n\n            attacks.push({\n              bonus: bonusLabel ? `(${bonus})[${bonusLabel}]` : bonus,\n              // Continue counting if similar to initial attack name\n              // If formulaic attacks have a non-default name, number them with their own counter; otherwise, continue unnamed attack numbering\n              label: getUniqueName(label?.replace(\"{0}\", i + 1), label),\n            });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n\n        // Cleanup roll data\n        delete rollData.attackCount;\n        delete rollData.formulaicAttack;\n      };\n\n      if (exAtkCfg.iteratives && !unchainedEconomy) {\n        parseAttacks(\n          pf1.config.iterativeExtraAttacks,\n          pf1.config.iterativeAttackModifier,\n          null,\n          game.i18n.localize(\"PF1.Iterative\")\n        );\n      }\n\n      // Add attacks defined by configuration\n      if (exAtkCfg.count) parseAttacks(exAtkCfg.count, exAtkCfg.bonus, null, flavor);\n\n      // Add manually entered explicit extra attacks\n      if (exAtkCfg.manual) {\n        const extraAttacks = actionData.extraAttacks?.manual ?? [];\n        for (const { name, formula } of extraAttacks) {\n          if (name) unnamedAttackNames.add(name);\n          attacks.push({\n            bonus: formula,\n            // Use defined label, or fall back to continuously numbered default attack name\n            label: name || getUniqueName(),\n          });\n        }\n      }\n\n      // Add custom extra attack formula\n      if (exAtkCfg.formula) {\n        parseAttacks(\n          actionData.extraAttacks.formula?.count,\n          actionData.extraAttacks.formula?.bonus,\n          actionData.extraAttacks.formula?.label\n        );\n      }\n    }\n\n    if (resolve) {\n      const condBonuses = new Array(attacks.length).fill(0);\n      if (conditionals) {\n        // Conditional modifiers\n        actionData.conditionals\n          .filter((c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\"))\n          .forEach((c) => {\n            c.modifiers.forEach((cc) => {\n              const bonusRoll = RollPF.safeRollAsync(cc.formula, rollData);\n              if (bonusRoll.total == 0) return;\n              if (cc.subTarget?.match(/^attack\\.(\\d+)$/)) {\n                const atk = parseInt(RegExp.$1, 10);\n                if (atk in condBonuses) condBonuses[atk] += bonusRoll.total;\n              }\n            });\n          });\n      }\n\n      let totalBonus = 0;\n      if (bonuses) {\n        const sources = this.item.getAttackSources(this.id, { rollData });\n        totalBonus = sources.reduce((f, s) => f + s.value, 0);\n      }\n\n      attacks.forEach((atk, i) => {\n        rollData.attackCount = i;\n        atk.bonus = RollPF.safeRollAsync(atk.bonus, rollData).total + totalBonus + condBonuses[i];\n        delete rollData.attackCount;\n      });\n    }\n\n    return attacks;\n  }\n\n  /**\n   * Use action.\n   *\n   * Wrapper for {@link pf1.documents.item.ItemPF.use() ItemPF.use()}\n   *\n   * @param {object} options - Options passed to `ItemPF.use()`.\n   * @returns {Promise<void>} - Returns what `ItemPF.use()` returns.\n   */\n  async use(options = {}) {\n    options.actionId = this.id;\n\n    return this.item.use(options);\n  }\n\n  /**\n   * Effective ammo type.\n   *\n   * @type {string|null} - Ammo type string or null if this doesn't use ammo.\n   */\n  get ammoType() {\n    const type = this.data.ammo?.type;\n    if (type === \"none\") return null;\n    return type || this.item.system.ammo?.type || null;\n  }\n\n  /**\n   * Effective per-attack ammo cost.\n   *\n   * @type {number} - Number of ammo each attack consumes. Defaults to 1 if using ammo, 0 if not.\n   */\n  get ammoCost() {\n    if (this.ammoType) return this.data.ammo?.cost ?? 1;\n    return 0;\n  }\n\n  /**\n   * @type {pf1.applications.component.ItemActionSheet} - Returns current sheet for this action or creates one if it doesn't exist.\n   */\n  get sheet() {\n    if (!this._sheet) {\n      this._sheet = new pf1.applications.component.ItemActionSheet(this);\n    }\n    return this._sheet;\n  }\n\n  /**\n   * Render all connected application instances.\n   *\n   * @param {boolean} [force=false] - Force rendering\n   * @param {object} [context={}] - Optional context\n   */\n  render(force = false, context = {}) {\n    Object.values(this.apps).forEach((app) => app.render(force, context));\n  }\n}\n","import { RollPF } from \"../dice/roll.mjs\";\n\nexport class ChatAttack {\n  /** @type {ItemAction} */\n  action;\n\n  /** @type {pf1.actionUse.ActionUse} */\n  actionUse;\n\n  /** @type {D20RollPF | null} */\n  attack = null;\n  hasRange = false;\n  /** @type {D20RollPF | null} */\n  critConfirm = null;\n\n  hasAttack = false;\n  hasCritConfirm = false;\n\n  hasDamage = false;\n  damage = new AttackDamage();\n  damageRows = [];\n  nonlethal = false;\n  critDamage = new AttackDamage();\n\n  ammo = null;\n\n  hasCards = false;\n  cards = {};\n\n  effectNotes = [];\n  effectNotesHTML = \"\";\n  notesOnly = true;\n\n  targets = null;\n\n  constructor(action, { label = \"\", rollData = {}, targets = null, actionUse = null } = {}) {\n    this.actionUse = actionUse;\n    this.rollData = rollData;\n    this.setAction(action);\n    this.label = label;\n    this.hasRange = action.item.hasRange;\n    this.targets = targets;\n  }\n\n  /** @type {Actor} */\n  get actor() {\n    return this.action?.actor;\n  }\n\n  setAmmo(ammoId) {\n    const ammoItem = this.actor.items.get(ammoId);\n    if (!ammoItem) {\n      this.ammo = null;\n      return;\n    }\n\n    this.ammo = {\n      id: ammoId,\n      img: ammoItem.img,\n      name: ammoItem.name,\n      misfire: false,\n    };\n  }\n\n  /**\n   * Sets the attack's item reference.\n   *\n   * @param {ItemAction} action - The action to reference.\n   */\n  setAction(action) {\n    if (action == null) {\n      this.rollData = null;\n      this.action = null;\n      return;\n    }\n\n    this.action = action;\n    this.isHealing = action.isHealing;\n\n    this.setRollData();\n  }\n\n  /**\n   * Applies changes to the roll data.\n   */\n  setRollData() {\n    const data = this.rollData;\n    // Set critical hit multiplier\n    data.critMult = 1;\n    data.critCount = 0;\n    // Determine ability multiplier\n    if (data.action.ability.damageMult != null) {\n      const held = data.action?.held || data.item?.held || \"1h\";\n      data.ablMult = data.action.ability.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n    }\n  }\n\n  async setEffectNotesHTML() {\n    if (this.effectNotes.length === 0) {\n      this.effectNotesHTML = \"\";\n      return;\n    }\n\n    const rollData = this.rollData;\n    const enrichOptions = {\n      rollData,\n      async: true,\n      relativeTo: this.action.actor,\n    };\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", {\n      notes: this.effectNotes,\n      css: \"effect-notes\",\n      title: \"PF1.EffectNotes\",\n    });\n\n    this.effectNotesHTML = await TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  async addAttack({ noAttack = false, bonus = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    const actor = this.action.actor;\n\n    this.hasAttack = true;\n    this.notesOnly = false;\n\n    /** @type {D20RollPF} */\n    if (critical === true) {\n      if (this.action.data.critConfirmBonus) {\n        let critConfirm = this.action.data.critConfirmBonus;\n        if (RollPF.parse(critConfirm).length > 1) critConfirm = `(${critConfirm})`;\n        extraParts.push(`${critConfirm}[${game.i18n.localize(\"PF1.CriticalConfirmation\")}]`);\n      }\n\n      const ccKeys = pf1.documents.actor.changes.getChangeFlat.call(actor, \"critConfirm\");\n      for (const ccKey of ccKeys) {\n        actor?.sourceDetails[ccKey]?.forEach((c) => extraParts.push(`(${c.value})[${c.name}]`));\n      }\n\n      // Add conditionals for critical confirmation\n      if (conditionalParts[\"attack.crit\"]?.length) extraParts.push(...conditionalParts[\"attack.crit\"]);\n    } else {\n      // Add conditional attack bonus\n      if (conditionalParts[\"attack.normal\"]?.length) extraParts.push(...conditionalParts[\"attack.normal\"]);\n    }\n\n    // Add broken penalty\n    const broken = this.rollData.item.broken;\n    if (broken && !critical) {\n      const label = game.i18n.localize(\"PF1.Broken\");\n      extraParts.push(`-2[${label}]`);\n    }\n\n    // Armor as DR\n    if (!noAttack) {\n      if (critical && !game.settings.get(\"pf1\", \"critConfirm\")) {\n        // Defense DC\n        this.critConfirm = this.actionUse?.getDefenseDC(this.attack) ?? RollPF.safeRollSync(\"0\");\n        this.critConfirm.armorAsDR = true;\n        this.critConfirm.options.flavor = game.i18n.localize(\"PF1.Critical\");\n        noAttack = true;\n      }\n    }\n\n    // Roll attack\n    if (!noAttack) {\n      const roll = await this.action.rollAttack({\n        data: this.rollData,\n        bonus: bonus,\n        extraParts: extraParts,\n      });\n\n      if (critical === true) this.critConfirm = roll;\n      else this.attack = roll;\n\n      // Add crit confirm\n      const baseCritMult = this.rollData.action.ability.critMult ?? 1;\n      if (!critical && !this.action.isCombatManeuver && roll.isCrit && baseCritMult > 1) {\n        this.hasCritConfirm = true;\n        this.rollData.critMult = Math.max(1, baseCritMult + (this.rollData.critMultBonus ?? 0));\n        if (broken) this.rollData.critMult = 1;\n\n        await this.addAttack({ bonus: bonus, extraParts: extraParts, critical: true, conditionalParts });\n      }\n\n      // Add tooltip\n      roll.options.flavor = critical ? game.i18n.localize(\"PF1.CriticalConfirmation\") : this.label;\n    }\n  }\n\n  async addDamage({ flavor = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    this.hasDamage = true;\n    this.notesOnly = false;\n    let data = this.damage;\n    if (critical === true) data = this.critDamage;\n\n    const rollData = foundry.utils.deepClone(this.rollData);\n    // Enforce critical multiplier\n    rollData.critCount = 0;\n\n    // Roll damage\n    const repeatCount = critical ? Math.max(1, rollData.critMult - 1) : 1;\n    for (let repeat = 0; repeat < repeatCount; ++repeat) {\n      if (critical) rollData.critCount++;\n      data.rolls.push(\n        ...(await this.action.rollDamage({\n          data: rollData,\n          extraParts: extraParts,\n          critical: critical,\n          conditionalParts,\n        }))\n      );\n    }\n\n    // Add normal data\n    if (!flavor) {\n      if (!critical) flavor = this.isHealing ? game.i18n.localize(\"PF1.Healing\") : game.i18n.localize(\"PF1.Damage\");\n      else flavor = game.i18n.localize(\"PF1.DamageCritical\");\n    }\n\n    // Determine total damage\n    let totalDamage = data.rolls.reduce((cur, p) => {\n      return cur + p.total;\n    }, 0);\n    if (critical) {\n      totalDamage = this.damage.rolls.reduce((cur, p) => {\n        return cur + p.total;\n      }, totalDamage);\n    }\n\n    // Handle minimum damage rule\n    if (totalDamage < 1) {\n      totalDamage = 1;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n      this.nonlethal = true;\n    }\n\n    // Handle nonlethal attacks\n    if (this.rollData.action.nonlethal || this.action.item.system.properties?.nnl) {\n      this.nonlethal = true;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n    }\n\n    // Finalize data\n    data.flavor = flavor;\n    data.total = totalDamage;\n  }\n\n  async addEffectNotes() {\n    this.effectNotes = [];\n\n    const item = this.action.item;\n    if (!item) return;\n\n    const actor = item.actor;\n\n    if (actor) {\n      const noteSources = [\"attacks.effect\"];\n      if (item.type === \"spell\") noteSources.push(\"spell.effect\"); // Spell specific notes\n\n      for (const source of noteSources) {\n        actor.getContextNotes(source).forEach((ns) => {\n          for (const note of ns.notes) this.effectNotes.push(...note.split(/[\\n\\r]+/));\n        });\n      }\n    }\n\n    // Add item notes\n    if (item.system.effectNotes?.length) {\n      this.effectNotes.push(...item.system.effectNotes);\n    }\n    // Add action notes\n    if (this.action.data.effectNotes?.length) {\n      this.effectNotes.push(...this.action.data.effectNotes);\n    }\n\n    // Misfire\n    if (this.ammo?.misfire) {\n      let label = game.i18n.localize(\"PF1.Misfire\");\n      const explosionRadius = this.action.item?.system.ammo?.explode ?? 0;\n      if (explosionRadius) {\n        const radius = pf1.utils.convertDistance(explosionRadius, \"ft\")[0];\n        const unit =\n          pf1.utils.getDistanceSystem() === \"metric\" ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        label += ` (${radius} ${unit})`;\n      }\n      this.effectNotes.push(label);\n    }\n\n    await this.setEffectNotesHTML();\n  }\n\n  finalize() {\n    this.hasCards = Object.keys(this.cards).length > 0;\n\n    // Determine damage rows for chat cards\n    // this.damageRows = [];\n    for (let a = 0; a < Math.max(this.damage.rolls.length, this.critDamage.rolls.length); a++) {\n      this.damageRows.push({ normal: null, crit: null });\n    }\n    for (let a = 0; a < this.damage.rolls.length; a++) {\n      this.damageRows[a].normal = this.damage.rolls[a];\n    }\n    for (let a = 0; a < this.critDamage.rolls.length; a++) {\n      this.damageRows[a].crit = this.critDamage.rolls[a];\n    }\n\n    return this;\n  }\n}\n\nclass AttackDamage {\n  flavor = \"\";\n\n  total = 0;\n\n  /** @type {DamageRoll[]} */\n  rolls = [];\n\n  get isActive() {\n    return this.rolls.length > 0;\n  }\n\n  get half() {\n    return Math.floor(this.total / 2);\n  }\n}\n","import { ChatAttack } from \"./chat-attack.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n// Documentation/type imports\n/** @typedef {import(\"@item/item-pf.mjs\").SharedActionData} SharedActionData */\n/** @typedef {pf1.documents.item.ItemPF} ItemPF */\n/** @typedef {pf1.documents.actor.ActorPF} ActorPF */\n/** @typedef {pf1.components.ItemAction} ItemAction */\n\n/**\n * Error states for when an item does not meet the requirements for an attack.\n *\n * @enum {number}\n * @readonly\n */\nexport const ERR_REQUIREMENT = Object.freeze({\n  NO_ACTOR_PERM: 1,\n  DISABLED: 2,\n  INSUFFICIENT_QUANTITY: 3,\n  INSUFFICIENT_CHARGES: 4,\n  MISSING_AMMO: 5,\n  INSUFFICIENT_AMMO: 6,\n});\n\nexport class ActionUse {\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {ActorPF}\n   */\n  actor;\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * The item this action use is based on.\n   *\n   * @type {ItemPF}\n   */\n  item;\n  /**\n   * The action this action use is based on.\n   *\n   * @type {ItemAction}\n   */\n  action;\n  /**\n   * The shared data object holding all relevant data for this action use.\n   *\n   * @type {SharedActionData}\n   */\n  shared;\n\n  /**\n   * @param {Partial<SharedActionData>} [shared={}] - The shared context for this action use\n   */\n  constructor(shared = {}) {\n    Object.defineProperties(this, {\n      shared: { value: shared },\n      item: { value: shared.item },\n      action: { value: shared.action },\n      actor: { value: shared.item.actor },\n      token: { value: shared.token },\n    });\n\n    // Init some shared data\n    this.shared.templateData = {\n      action: this.shared.action,\n      item: this.shared.item,\n    };\n  }\n\n  /**\n   * @returns {Promise<number>} - 0 when successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkRequirements() {\n    const actor = this.item.actor;\n    if (actor && !actor.isOwner) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n      return ERR_REQUIREMENT.NO_ACTOR_PERM;\n    }\n\n    if (this.item.type === \"feat\" && this.item.system.disabled) {\n      ui.notifications.warn(game.i18n.localize(\"PF1.Error.FeatDisabled\"));\n      return ERR_REQUIREMENT.DISABLED;\n    }\n\n    // Cost override set to 0 or to increase charges/quantity\n    if (this.shared.cost !== null && this.shared.cost <= 0) return 0;\n\n    if (this.item.isPhysical) {\n      const itemQuantity = this.item.system.quantity || 0;\n      if (itemQuantity <= 0) {\n        ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n        return ERR_REQUIREMENT.INSUFFICIENT_QUANTITY;\n      }\n    }\n\n    if (this.action.isSelfCharged && this.action.data.uses.self?.value < 1) {\n      ui.notifications.warn(\n        game.i18n.format(\"PF1.Error.InsufficientCharges\", {\n          name: `${this.item.name}: ${this.action.name}`,\n        })\n      );\n      return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @returns {Promise<object>} The roll data object for this attack.\n   */\n  getRollData() {\n    const rollData = foundry.utils.deepClone(this.shared.action.getRollData());\n    const d20 = this.shared.dice;\n    // TODO: Move this standard roll obfuscation to dialog handling\n    rollData.d20 = d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20;\n\n    // Init values\n    rollData.dcBonus ||= 0;\n    rollData.chargeCost ||= 0;\n    rollData.chargeCostBonus ||= 0;\n\n    rollData.critMultBonus ||= 0;\n\n    return rollData;\n  }\n\n  /**\n   * Creates and renders an attack roll dialog, and returns a result.\n   *\n   * @returns {Promise<ItemAttack_Dialog_Result|null>}\n   */\n  createAttackDialog() {\n    const dialog = new pf1.applications.AttackDialog(this);\n    return dialog.show();\n  }\n\n  /**\n   * Alters roll (and shared) data based on user input during the attack's dialog.\n   *\n   * @param {object} formData - The attack dialog's form data\n   * @returns {Promise}\n   */\n  alterRollData(formData = {}) {\n    const useOptions = this.shared.useOptions;\n    formData[\"power-attack\"] ??= useOptions.powerAttack;\n    formData[\"primary-attack\"] ??= useOptions.primaryAttack;\n    formData[\"cl-check\"] ??= useOptions.clCheck ?? this.item?.system.clCheck === true;\n    formData[\"measure-template\"] ??= useOptions.measureTemplate;\n    formData[\"haste-attack\"] ??= useOptions.haste;\n    formData[\"manyshot\"] ??= useOptions.manyshot;\n    formData[\"rapid-shot\"] ??= useOptions.rapidShot;\n    formData[\"damage-ability-multiplier\"] ??= useOptions.abilityMult;\n    formData.fullAttack ??= true;\n\n    if (formData[\"d20\"]) this.shared.rollData.d20 = formData[\"d20\"];\n    const atkBonus = formData[\"attack-bonus\"];\n    if (atkBonus) {\n      this.shared.attackBonus.push(atkBonus);\n    }\n    const dmgBonus = formData[\"damage-bonus\"];\n    if (dmgBonus) {\n      this.shared.damageBonus.push(dmgBonus);\n    }\n\n    if (formData.rollMode) this.shared.rollMode = formData.rollMode;\n\n    // Point-Blank Shot\n    if (formData[\"point-blank-shot\"]) {\n      this.shared.attackBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.damageBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.pointBlankShot = true;\n    }\n\n    this.shared.fullAttack = formData.fullAttack;\n\n    // Many-shot\n    if (this.shared.fullAttack && formData[\"manyshot\"]) {\n      this.shared.manyShot = true;\n    }\n\n    // Rapid Shot\n    if (this.shared.fullAttack && formData[\"rapid-shot\"]) {\n      this.shared.attackBonus.push(`-2[${game.i18n.localize(\"PF1.RapidShot\")}]`);\n    }\n\n    // Primary attack\n    if (formData[\"primary-attack\"] != null)\n      foundry.utils.setProperty(this.shared.rollData, \"action.naturalAttack.primaryAttack\", formData[\"primary-attack\"]);\n\n    // Use measure template\n    if (formData[\"measure-template\"] != null) this.shared.useMeasureTemplate = formData[\"measure-template\"];\n\n    // Set held type\n    const held = formData[\"held\"] || this.shared.rollData.action.held || this.shared.rollData.item.held || \"normal\";\n    this.shared.rollData.action.held = held;\n\n    // Damage multiplier\n    const abilityDamageMultOverride = formData[\"damage-ability-multiplier\"];\n    if (abilityDamageMultOverride != null) {\n      this.shared.rollData.action.ability.damageMult = abilityDamageMultOverride;\n    }\n\n    // Power Attack\n    if (formData[\"power-attack\"]) {\n      const basePowerAttackBonus = this.shared.rollData.action?.powerAttack?.damageBonus ?? 2;\n      let powerAttackBonus = (1 + Math.floor(this.shared.rollData.attributes.bab.total / 4)) * basePowerAttackBonus;\n\n      // Get multiplier\n      const paMult = this.shared.action.getPowerAttackMult({ rollData: this.shared.rollData });\n\n      // Apply multiplier\n      powerAttackBonus = Math.floor(powerAttackBonus * paMult);\n\n      // Get label\n      const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.action.data.actionType)\n        ? game.i18n.localize(\"PF1.DeadlyAim\")\n        : game.i18n.localize(\"PF1.PowerAttack\");\n\n      // Get penalty\n      const powerAttackPenalty = -(\n        1 + Math.floor(foundry.utils.getProperty(this.shared.rollData, \"attributes.bab.total\") / 4)\n      );\n\n      // Add bonuses\n      this.shared.rollData.powerAttackPenalty = powerAttackPenalty;\n      this.shared.attackBonus.push(`${powerAttackPenalty}[${label}]`);\n      this.shared.powerAttack = true;\n      this.shared.rollData.powerAttackBonus = powerAttackBonus;\n      this.shared.rollData.powerAttackPenalty = powerAttackPenalty;\n    } else {\n      this.shared.rollData.powerAttackBonus = 0;\n      this.shared.rollData.powerAttackPenalty = 0;\n    }\n\n    // Conditionals\n    const { conditional: conditionals } = foundry.utils.expandObject(formData);\n    if (conditionals) {\n      this.shared.conditionals = [];\n      Object.entries(conditionals).forEach(([idx, value]) => {\n        if (value) this.shared.conditionals.push(parseInt(idx));\n      });\n    }\n    // Conditional defaults for fast-forwarding\n    if (!this.shared.conditionals) {\n      this.shared.conditionals = this.shared.action.data.conditionals?.reduce((arr, con, i) => {\n        if (con.default) arr.push(i);\n        return arr;\n      }, []);\n    }\n\n    // Apply secondary attack penalties\n    if (\n      this.shared.rollData.item.subType === \"natural\" &&\n      this.shared.rollData.action?.naturalAttack.primaryAttack === false\n    ) {\n      const attackBonus = this.shared.rollData.action.naturalAttack?.secondary?.attackBonus || \"-5\";\n      let damageMult = this.shared.rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n      // Allow dialog override to work\n      if (abilityDamageMultOverride) damageMult = abilityDamageMultOverride;\n      this.shared.attackBonus.push(`(${attackBonus})[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n      this.shared.rollData.action.ability.damageMult = damageMult;\n    }\n\n    // CL check enabled\n    this.shared.casterLevelCheck = formData[\"cl-check\"];\n\n    // Concentration enabled\n    this.shared.concentrationCheck = formData[\"concentration\"];\n  }\n\n  /**\n   * @typedef {object} ItemAttack_AttackData\n   * @property {string} label - The attack's name\n   * @property {number|string|undefined} [attackBonus] - An attack bonus specific to this attack\n   * @property {number|string|undefined} [damageBonus] - A damage bonus specific to this attack\n   * @property {string|null} [ammo] - The ID of the ammo item used\n   */\n  /**\n   * Generates attacks for an item's action.\n   *\n   * @param {boolean} [forceFullAttack=false] - Generate full attack data, e.g. as base data for an {@link AttackDialog}\n   * @returns {Promise<ItemAttack_AttackData[]> | ItemAttack_AttackData[]} The generated default attacks.\n   */\n  generateAttacks(forceFullAttack = false) {\n    const rollData = this.shared.rollData;\n    const action = this.action;\n    const actor = this.actor;\n\n    const useOptions = this.shared.useOptions;\n\n    // Use either natural fullAttack state, or force generation of all attacks via override\n    const full = forceFullAttack || this.shared.fullAttack;\n\n    /** @type {Array<ActionUseAttack>} */\n    const allAttacks = this.action\n      .getAttacks({ full, rollData, conditionals: false, bonuses: false })\n      .map((atk) => new ActionUseAttack(atk.label, atk.bonus));\n\n    // Set default ammo usage\n    const ammoType = this.action.ammoType;\n    if (ammoType) {\n      const ammoId = this.item.getFlag(\"pf1\", \"defaultAmmo\");\n      const ammos = this.getAmmo();\n      if (ammoId && ammos.length) {\n        const ammo = ammos.find((a) => a.id === ammoId);\n        const quantity = ammo?.quantity || 0;\n        const ammoCost = action.ammoCost;\n        const abundant = ammo?.abundant || false;\n        for (let a = 0; a < allAttacks.length; a++) {\n          const atk = allAttacks[a];\n          if (abundant || quantity >= (a + 1) * ammoCost) atk.ammo = ammo;\n          else atk.ammo = null;\n        }\n      }\n    }\n\n    this.shared.attacks = allAttacks;\n\n    return allAttacks;\n  }\n\n  async autoSelectAmmo() {\n    const ammoType = this.shared.action.ammoType;\n    if (!ammoType) return;\n\n    const ammoCost = this.action.ammoCost;\n\n    const ammoId = this.item.getFlag(\"pf1\", \"defaultAmmo\");\n    const item = this.item.actor?.items.get(ammoId);\n    if (item && (item.system.quantity || 0) >= ammoCost) return;\n\n    const ammo = this.actor.itemTypes.loot\n      .filter(\n        (i) =>\n          i.subType === \"ammo\" &&\n          i.system.extraType === ammoType &&\n          i.system.quantity >= ammoCost &&\n          i.system.identified !== false\n      )\n      .sort((a, b) => a.system.price - b.system.price);\n\n    if (ammo.length == 0) return;\n\n    await this.item.setFlag(\"pf1\", \"defaultAmmo\", ammo[0].id);\n  }\n\n  /**\n   * Fetch valid ammo items from actor.\n   *\n   * @returns {AttackAmmo}\n   */\n  getAmmo() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammoCost;\n    const ammo = actor.itemTypes.loot.filter((item) => this._filterAmmo(item, ammoCost));\n\n    const defaultAmmo = this.action.item.getFlag(\"pf1\", \"defaultAmmo\");\n\n    return ammo.map((o) => {\n      return {\n        id: o.id,\n        quantity: o.system.quantity || 0,\n        abundant: o.system.abundant || false,\n        data: o.toObject(),\n        document: o,\n        isDefault: defaultAmmo === o.id,\n      };\n    });\n  }\n\n  /**\n   * Determine if item is valid for use as ammo.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {number} ammoCost - Ammo usage per attack\n   * @returns {boolean}\n   */\n  _filterAmmo(item, ammoCost = 1) {\n    if (!(item.type === \"loot\" && item.subType === \"ammo\")) return false;\n    if (item.system.quantity < ammoCost) return false;\n\n    const ammoType = item.system.extraType;\n    if (!ammoType) return true;\n\n    return this.action.ammoType === ammoType;\n  }\n\n  /**\n   * Subtracts ammo for this attack, updating relevant items with new quantities.\n   *\n   * @param {number} [value=1] - How much ammo to subtract.\n   * @returns {Promise}\n   */\n  async subtractAmmo(value = 1) {\n    if (!this.shared.action.ammoType) return;\n\n    const actor = this.item.actor;\n\n    const ammoUsage = {};\n    for (const atk of this.shared.attacks) {\n      if (atk.ammo) {\n        const item = actor.items.get(atk.ammo.id);\n        if (!item) continue;\n        // Don't remove abundant ammunition\n        if (item.system.abundant) continue;\n\n        ammoUsage[atk.ammo.id] ??= 0;\n        ammoUsage[atk.ammo.id] += value;\n      }\n    }\n\n    this.shared.ammoUsage = ammoUsage;\n\n    if (!foundry.utils.isEmpty(ammoUsage)) {\n      const updateData = Object.entries(ammoUsage).reduce((cur, [ammoId, usage]) => {\n        const quantity = this.item.actor.items.get(ammoId)?.system.quantity;\n        const obj = {\n          _id: ammoId,\n          \"system.quantity\": quantity - usage,\n        };\n\n        cur.push(obj);\n        return cur;\n      }, []);\n\n      return this.item.actor.updateEmbeddedDocuments(\"Item\", updateData);\n    }\n  }\n\n  /**\n   * Update remaining ammo in {@link ChatAttack}s\n   */\n  updateAmmoUsage() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammoCost;\n    if (ammoCost <= 0) return;\n    for (const atk of this.shared.attacks) {\n      const ammoId = atk.ammo?.id;\n      if (!ammoId) continue;\n      const chatAtk = atk.chatAttack;\n      const ammo = actor.items.get(ammoId)?.system.quantity || 0;\n      chatAtk.ammo.remaining = ammo;\n      chatAtk.ammo.quantity = ammoCost;\n    }\n  }\n\n  handleConditionals() {\n    if (this.shared.conditionals) {\n      const conditionalData = {};\n      for (const i of this.shared.conditionals) {\n        const conditional = this.shared.action.data.conditionals[i];\n        const tag = pf1.utils.createTag(conditional.name);\n        for (const [i, modifier] of conditional.modifiers.entries()) {\n          // Adds a formula's result to rollData to allow referencing it.\n          // Due to being its own roll, this will only correctly work for static formulae.\n          const conditionalRoll = RollPF.safeRollAsync(modifier.formula, this.shared.rollData);\n          if (conditionalRoll.err) {\n            ui.notifications.warn(\n              game.i18n.format(\"PF1.Warning.ConditionalRoll\", { number: i + 1, name: conditional.name })\n            );\n            // Skip modifier to avoid multiple errors from one non-evaluating entry\n            continue;\n          } else\n            conditionalData[[tag, i].join(\".\")] = RollPF.safeRollAsync(modifier.formula, this.shared.rollData).total;\n\n          // Create a key string for the formula array\n          const partString = `${modifier.target}.${modifier.subTarget}${\n            modifier.critical ? \".\" + modifier.critical : \"\"\n          }`;\n          // Add formula in simple format\n          if ([\"attack\", \"effect\", \"misc\"].includes(modifier.target)) {\n            const hasFlavor = /\\[.*\\]/.test(modifier.formula);\n            const flavoredFormula = hasFlavor ? modifier.formula : `(${modifier.formula})[${conditional.name}]`;\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              flavoredFormula,\n            ];\n          }\n          // Add formula as array for damage\n          else if (modifier.target === \"damage\") {\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              [modifier.formula, modifier.damageType, false],\n            ];\n          }\n          // Add formula to the size property\n          else if (modifier.target === \"size\") {\n            this.shared.rollData.size += conditionalRoll.total;\n          } else if (modifier.target === \"critMult\") {\n            this.shared.rollData.critMultBonus += conditionalRoll.total;\n          }\n        }\n      }\n\n      // Expand data into rollData to enable referencing in formulae\n      this.shared.rollData.conditionals = foundry.utils.expandObject(conditionalData, 5);\n\n      // Add specific pre-rolled rollData entries\n      for (const target of [\"effect.cl\", \"effect.dc\", \"misc.charges\"]) {\n        if (this.shared.conditionalPartsCommon[target] != null) {\n          const formula = this.shared.conditionalPartsCommon[target].join(\"+\");\n          const roll = RollPF.safeRollAsync(formula, this.shared.rollData, [target, formula]).total;\n          switch (target) {\n            case \"effect.cl\":\n              this.shared.rollData.cl += roll;\n              break;\n            case \"effect.dc\":\n              this.shared.rollData.dcBonus += roll;\n              break;\n            case \"misc.charges\":\n              this.shared.rollData.chargeCostBonus += roll;\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks all requirements to make the attack. This is after the attack dialog's data has been parsed.\n   *\n   * @returns {Promise<number> | number} 0 if successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkAttackRequirements() {\n    let cost = this.shared.rollData.chargeCost;\n\n    if (cost > 0) {\n      const uses = this.item.charges;\n      if (this.item.type === \"spell\") {\n        if (this.item.spellbook?.spontaneous && !this.item.system.preparation?.value) {\n          cost = Infinity;\n        }\n      }\n\n      // Only spells have variable max uses\n      if (this.item?.type === \"spell\") {\n        const maxUses = this.item.maxCharges;\n        if (maxUses <= 0) {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientPreparation\", { name: this.item.name }));\n          return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n        }\n      }\n\n      // Cancel usage on insufficient charges\n      if (cost > uses) {\n        ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.item.name }));\n        return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Generates ChatAttack entries based off the attack type.\n   */\n  async generateChatAttacks() {\n    // Normal attack(s)\n    if (this.shared.action.hasAttack) await this.addAttacks();\n    // Damage only\n    else if (this.shared.action.hasDamage) await this.addDamage();\n    // for effect notes only\n    else await this.addEmptyAttack();\n\n    const misfire = this.action.misfire ?? 0;\n\n    // Fill in ammo use details\n    this.shared.attacks.forEach((/** @type {ChatAttack}*/ attack) => {\n      if (!attack.hasAmmo) return;\n      /** @type {ChatAttack} */\n      const atk = attack.chatAttack;\n      if (atk) atk.setAmmo(attack.ammo.id);\n      // Mark misfire\n      if (atk.ammo) {\n        const d20 = atk.attack?.d20?.total;\n        atk.ammo.misfire = d20 <= misfire;\n      }\n    });\n\n    // Add save info\n    this.shared.save = this.shared.action.data.save.type;\n    this.shared.saveDC = this.shared.action.getDC(this.shared.rollData);\n\n    // add notes after all attack info is generated\n    await this.addEffectNotes();\n    await this.addFootnotes();\n  }\n\n  /**\n   * Determines conditional parts used in a specific attack.\n   *\n   * @param {object} atk - The attack used.\n   * @param {number} [index=0] - The index of the attack, in order of enabled attacks.\n   * @returns {object} The conditional parts used.\n   */\n  _getConditionalParts(atk, { index = 0 }) {\n    const result = {};\n\n    const conditionalTemplates = {\n      \"attack.normal\": \"attack.;id;.normal\",\n      \"attack.crit\": \"attack.;id;.crit\",\n      \"damage.normal\": \"damage.;id;.normal\",\n      \"damage.crit\": \"damage.;id;.crit\",\n      \"damage.nonCrit\": \"damage.;id;.nonCrit\",\n    };\n    const addPart = (id) => {\n      for (const [templateKey, templateStr] of Object.entries(conditionalTemplates)) {\n        if (!result[templateKey]) result[templateKey] = [];\n\n        const parsedStr = templateStr.replace(\";id;\", id);\n        result[templateKey].push(...(this.shared.conditionalPartsCommon[parsedStr] ?? []));\n      }\n    };\n\n    addPart(`attack_${index}`);\n    addPart(\"allAttack\");\n    addPart(\"allDamage\");\n\n    if (atk.type === \"rapid-shot\") {\n      addPart(\"rapidShotAttack\");\n      addPart(\"rapidShotDamage\");\n    } else if (atk.type === \"haste-attack\") {\n      addPart(\"hasteAttack\");\n      addPart(\"hasteDamage\");\n    }\n\n    return result;\n  }\n\n  /**\n   * Adds ChatAttack entries to an attack's shared context.\n   */\n  async addAttacks() {\n    const rollData = this.shared.rollData;\n\n    for (let a = 0; a < this.shared.attacks.length; a++) {\n      const atk = this.shared.attacks[a];\n\n      // Combine conditional modifiers for attack and damage\n      const conditionalParts = this._getConditionalParts(atk, { index: a });\n\n      rollData.attackCount = a;\n\n      // Create attack object\n      const attack = new ChatAttack(this.shared.action, {\n        label: atk.label,\n        rollData,\n        targets: game.user.targets,\n        actionUse: this,\n      });\n\n      if (atk.type !== \"manyshot\") {\n        // Add attack roll\n        await attack.addAttack({\n          extraParts: [...this.shared.attackBonus, atk.attackBonus],\n          conditionalParts,\n        });\n      }\n\n      // Add damage\n      if (this.shared.action.hasDamage) {\n        const extraParts = foundry.utils.deepClone(this.shared.damageBonus);\n        const nonCritParts = [];\n        const critParts = [];\n\n        // Add power attack bonus\n        if (rollData.powerAttackBonus > 0) {\n          // Get label\n          const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.shared.action.data.actionType)\n            ? game.i18n.localize(\"PF1.DeadlyAim\")\n            : game.i18n.localize(\"PF1.PowerAttack\");\n\n          const powerAttackBonus = rollData.powerAttackBonus;\n          const powerAttackCritBonus = powerAttackBonus * (rollData.action?.powerAttack?.critMultiplier ?? 1);\n          nonCritParts.push(`${powerAttackBonus}[${label}]`);\n          critParts.push(`${powerAttackCritBonus}[${label}]`);\n        }\n\n        // Add damage\n        let flavor = null;\n        if (atk.type === \"manyshot\") flavor = game.i18n.localize(\"PF1.Manyshot\");\n        await attack.addDamage({\n          flavor,\n          extraParts: [...extraParts, ...nonCritParts],\n          critical: false,\n          conditionalParts,\n        });\n\n        // Add critical hit damage\n        if (attack.hasCritConfirm) {\n          await attack.addDamage({ extraParts: [...extraParts, ...critParts], critical: true, conditionalParts });\n        }\n      }\n\n      // Add to list\n      this.shared.chatAttacks.push(attack);\n\n      // Add a reference to the attack that created this chat attack\n      atk.chatAttack = attack;\n    }\n\n    // Cleanup rollData\n    delete rollData.attackCount;\n  }\n\n  /**\n   * Adds a ChatAttack entry for damage to an attack's shared context.\n   */\n  async addDamage() {\n    // Set conditional modifiers\n    this.shared.conditionalParts = {\n      \"damage.normal\": this.shared.conditionalPartsCommon[\"damage.allDamage.normal\"] ?? [],\n    };\n\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n    // Add damage\n    await attack.addDamage({\n      extraParts: foundry.utils.deepClone(this.shared.damageBonus),\n      critical: false,\n      conditionalParts: this.shared.conditionalParts,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  async addFootnotes() {\n    if (!this.item) return;\n\n    const type = this.action.data.actionType;\n    const typeMap = {\n      rsak: [\"ranged\", \"rangedSpell\"],\n      rwak: [\"ranged\", \"rangedWeapon\"],\n      twak: [\"ranged\", \"thrownWeapon\", \"rangedWeapon\"],\n      rcman: [\"ranged\"],\n      mwak: [\"melee\", \"meleeWeapon\"],\n      msak: [\"melee\", \"meleeSpell\"],\n      mcman: [\"melee\"],\n    };\n\n    const isAttack = this.action.hasAttack ?? false;\n\n    const notes = [];\n    // Add actor notes for attacks\n    if (this.actor && isAttack) {\n      notes.push(...this.actor.getContextNotesParsed(\"attacks.attack\"));\n      typeMap[type]?.forEach((subTarget) => notes.push(...this.actor.getContextNotesParsed(`attacks.${subTarget}`)));\n    }\n    // Add item notes\n    if (this.item?.system.attackNotes) {\n      notes.push(...this.item.system.attackNotes);\n    }\n    // Add action notes\n    if (this.action.data.attackNotes) {\n      notes.push(...this.action.data.attackNotes);\n    }\n\n    // Add CMB notes\n    if (this.action.isCombatManeuver) {\n      notes.push(...(this.item?.actor?.getContextNotesParsed(\"misc.cmb\") ?? []));\n    }\n\n    if (isAttack) {\n      const hasCritConfirm = this.shared.attacks.some((atk) => !!atk.chatAttack?.hasCritConfirm);\n      if (hasCritConfirm) notes.push(...(this.action.actor?.getContextNotesParsed(\"attacks.critical\") ?? []));\n    }\n\n    this.shared.templateData.footnotes = notes;\n  }\n\n  async addEmptyAttack() {\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  /**\n   * Add effect notes for each individual attack.\n   */\n  async addEffectNotes() {\n    /** @type {ChatAttack[]} */\n    const attacks = this.shared.chatAttacks;\n    await Promise.all(attacks.filter((attack) => attack.type !== \"manyshot\").map((attack) => attack.addEffectNotes()));\n  }\n\n  /**\n   * @typedef {object} Attack_MeasureTemplateResult\n   * @property {boolean} result - Whether an area was selected.\n   * @property {Function} [place] - Function to place the template, if an area was selected.\n   * @property {Function} [delete] - Function to delete the template, if it has been placed.\n   */\n  /**\n   * Prompts the user for an area, based on the attack's measure template.\n   *\n   * @returns {Promise.<Attack_MeasureTemplateResult>} Whether an area was selected.\n   */\n  async promptMeasureTemplate() {\n    const mt = this.shared.action.data.measureTemplate;\n\n    // Determine size\n    let dist = RollPF.safeRollSync(mt.size, this.shared.rollData).total;\n    // Apply system of units conversion\n    dist = pf1.utils.convertDistance(dist)[0];\n\n    // Create data object\n    const templateOptions = {\n      type: mt.type,\n      distance: dist,\n      flags: {\n        pf1: {\n          origin: {\n            uuid: this.shared.item.uuid,\n            action: this.shared.action.id,\n          },\n        },\n      },\n    };\n\n    if (mt.color) {\n      // Color transformation to avoid invalid colors provided by user from corrupting the template\n      const c = Color.fromString(mt.color);\n      if (Number.isFinite(Number(c))) templateOptions.color = c.toString();\n    }\n    if (mt.texture) templateOptions.texture = mt.texture;\n\n    // Create template\n    this.shared.template = null;\n    const template = pf1.canvas.AbilityTemplate.fromData(templateOptions);\n    let result;\n    if (template) {\n      const actorSheet = this.item.actor?.sheet;\n      const sheetRendered = actorSheet?._element != null;\n      if (sheetRendered) actorSheet.minimize();\n      result = await template.drawPreview(this.shared.event);\n      if (!result.result) {\n        if (sheetRendered) actorSheet.maximize();\n        return result;\n      }\n    }\n\n    this.shared.template = await result.place();\n    return result;\n  }\n\n  /**\n   * Handles Dice So Nice integration.\n   */\n  async handleDiceSoNice() {\n    if (!game.settings.get(\"pf1\", \"integration\").diceSoNice) return;\n    if (!game.dice3d?.isEnabled()) return;\n\n    // Use try to make sure a chat card is rendered even if DsN fails\n    try {\n      // Define common visibility options for whole attack\n      const chatData = {};\n      ChatMessage.implementation.applyRollMode(chatData, this.shared.rollMode);\n\n      const mergeRolls = game.settings.get(\"dice-so-nice\", \"enabledSimultaneousRolls\");\n      const skipRolls = game.settings.get(\"dice-so-nice\", \"immediatelyDisplayChatMessages\");\n\n      /**\n       * Visually roll dice\n       *\n       * @async\n       * @param {PoolTerm[]} pools - An array of PoolTerms to be rolled together\n       * @returns {Promise} A Promise that is resolved when all rolls have been displayed\n       */\n      const showRoll = async (pools) => {\n        const whisper = chatData.whisper?.length ? chatData.whisper : undefined; // DSN does not like empty array for whisper\n        if (mergeRolls) {\n          return Promise.all(\n            pools.map((pool) => game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind))\n          );\n        } else {\n          for (const pool of pools) {\n            await game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind);\n          }\n        }\n      };\n\n      /** @type {PoolTerm[]} */\n      const pools = [];\n\n      for (const atk of this.shared.chatAttacks) {\n        // Create PoolTerm for attack and damage rolls\n        const attackPool = new PoolTerm();\n        if (atk.attack) attackPool.rolls.push(atk.attack);\n        attackPool.rolls.push(...(atk.damage?.rolls ?? []));\n\n        // Create PoolTerm for crit confirmation and crit damage rolls\n        const critPool = new PoolTerm();\n        if (atk.chatAttack?.hasCritConfirm) critPool.rolls.push(atk.chatAttack.critConfirm);\n        critPool.rolls.push(...(atk.critDamage?.rolls ?? []));\n\n        // Add non-empty pools to the array of rolls to be displayed\n        if (attackPool.rolls.length) pools.push(attackPool);\n        if (critPool.rolls.length) pools.push(critPool);\n      }\n\n      if (pools.length) {\n        // Chat card is to be shown immediately\n        if (skipRolls) showRoll(pools);\n        // Wait for rolls to finish before showing the chat card\n        else await showRoll(pools);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * Adds an attack's chat card data to the shared object.\n   */\n  async getMessageData() {\n    if (this.shared.chatAttacks.length === 0) return;\n\n    // Create chat template data\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      name: this.item.name,\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n      rollMode: this.shared.rollMode,\n      attacks: this.shared.chatAttacks.map((o) => o.finalize()),\n    };\n\n    const actor = this.item.actor,\n      token = this.token ?? actor?.token;\n\n    // Set chat data\n    this.shared.chatData = {\n      speaker: ChatMessage.implementation.getSpeaker({ actor, token, alias: token?.name }),\n      rollMode: this.shared.rollMode,\n    };\n\n    // Set attack sound\n    if (this.shared.action.data.soundEffect) this.shared.chatData.sound = this.shared.action.data.soundEffect;\n    // Set dice sound if neither attack sound nor Dice so Nice are available\n    else if (!game.settings.get(\"pf1\", \"integration\").diceSoNice || !game.dice3d?.isEnabled())\n      this.shared.chatData.sound = CONFIG.sounds.dice;\n\n    // Get extra text\n    const props = [];\n    const extraText = await this.enrichNotes(this.shared.templateData.footnotes, \"PF1.Footnotes\", \"footnotes\");\n\n    const itemChatData = await this.item.getChatData({\n      actionId: this.shared.action.id,\n      chatcard: true,\n      rollData: this.shared.rollData,\n    });\n\n    // Get properties\n    const properties = [...itemChatData.properties, ...this.addGenericPropertyLabels()];\n    if (properties.length > 0) props.push({ header: game.i18n.localize(\"PF1.InfoShort\"), value: properties });\n\n    // Get combat properties\n    if (game.combat) {\n      const combatProps = this.addCombatPropertyLabels();\n\n      if (combatProps.length > 0) {\n        props.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: combatProps,\n          css: \"combat-properties\",\n        });\n      }\n    }\n\n    // Add CL notes\n    if (this.item.type === \"spell\" && actor) {\n      const clNotes = actor.getContextNotesParsed(`spell.cl.${this.item.system.spellbook}`);\n\n      if (clNotes.length) {\n        props.push({\n          header: game.i18n.localize(\"PF1.CLNotes\"),\n          value: clNotes,\n        });\n      }\n\n      const school = this.item.system.school;\n      if (school) {\n        // Add DC School notes\n        const dcSchoolNotes = actor.getContextNotesParsed(`dc.school.${school}`);\n        if (dcSchoolNotes.length) {\n          props.push({\n            header: game.i18n.format(\"PF1.DCSchoolNotes\", { school: pf1.config.spellSchools[school] }),\n            value: dcSchoolNotes,\n          });\n        }\n        // Add CL School notes\n        const clSchoolNotes = actor.getContextNotesParsed(`cl.school.${school}`);\n        if (clSchoolNotes.length) {\n          props.push({\n            header: game.i18n.format(\"PF1.CLSchoolNotes\", { school: pf1.config.spellSchools[school] }),\n            value: clSchoolNotes,\n          });\n        }\n      }\n    }\n\n    // Parse template data\n    const identified = Boolean(this.shared.rollData.item?.identified ?? true);\n    const name = identified ? `${this.item.name} (${this.shared.action.name})` : this.item.getName(true);\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      tokenUuid: token?.uuid,\n      actionId: this.shared.action?.id,\n      extraText: extraText,\n      identified: identified,\n      name: name,\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      actionDescription: itemChatData.actionDescription,\n      properties: props,\n      item: this.item.toObject(),\n      actor,\n      token,\n      scene: canvas.scene?.id,\n      hasSave: this.shared.action.hasSave,\n      rollData: this.shared.rollData,\n      save: {\n        dc: this.shared.saveDC,\n        type: this.shared.save,\n        label: game.i18n.format(\"PF1.SavingThrowButtonLabel\", {\n          type: pf1.config.savingThrows[this.shared.save],\n          dc: this.shared.saveDC.toString(),\n        }),\n        gmSensitiveLabel: game.i18n.format(\"PF1.SavingThrowButtonLabelGMSensitive\", {\n          save: pf1.config.savingThrows[this.shared.save],\n        }),\n      },\n    };\n\n    // Add range info\n    {\n      const range = this.shared.action.getRange({ type: \"max\", rollData: this.shared.rollData });\n      if (range != null) {\n        this.shared.templateData.range = range;\n        const usystem = pf1.utils.getDistanceSystem();\n        this.shared.templateData.rangeLabel = usystem === \"metric\" ? `${range} m` : `${range} ft.`;\n\n        const rangeUnits = this.shared.action.data.range.units;\n        if ([\"melee\", \"touch\", \"reach\", \"close\", \"medium\", \"long\"].includes(rangeUnits)) {\n          this.shared.templateData.rangeLabel = pf1.config.distanceUnits[rangeUnits];\n        }\n      }\n    }\n\n    // Add spell info\n    if (this.item.type === \"spell\" && actor) {\n      // Spell failure\n      if (actor.spellFailure > 0 && this.item.system.components.somatic) {\n        const spellbook = foundry.utils.getProperty(\n          actor.system,\n          `attributes.spells.spellbooks.${this.item.system.spellbook}`\n        );\n        if (spellbook && spellbook.arcaneSpellFailure) {\n          const roll = RollPF.safeRollAsync(\"1d100\");\n          this.shared.templateData.spellFailure = roll.total;\n          this.shared.templateData.spellFailureRoll = roll;\n          this.shared.templateData.spellFailureSuccess = this.shared.templateData.spellFailure > actor.spellFailure;\n        }\n      }\n      // Caster Level Check\n      this.shared.templateData.casterLevelCheck = this.shared.casterLevelCheck;\n      // Concentration check\n      this.shared.templateData.concentrationCheck = this.shared.concentrationCheck;\n    }\n\n    // Generate metadata\n    const metadata = this.generateChatMetadata();\n\n    // Get target info\n    if (!game.settings.get(\"pf1\", \"disableAttackCardTargets\")) {\n      this.shared.templateData.targets = this.shared.targets.map((t) => ({\n        img: t.document.texture.src,\n        actor: t.actor,\n        token: t.document,\n        uuid: t.document.uuid,\n      }));\n    }\n\n    this.shared.chatData[\"flags.pf1.metadata\"] = metadata;\n    this.shared.chatData[\"flags.core.canPopout\"] = true;\n    if (!identified)\n      this.shared.chatData[\"flags.pf1.identifiedInfo\"] = {\n        identified,\n        name: this.item._source.name || this.item.name,\n        description: itemChatData.identifiedDescription,\n        actionName: this.shared.action.name,\n        actionDescription: itemChatData.actionDescription,\n      };\n  }\n\n  /**\n   * Enrich notes\n   *\n   * @param {Array<string>} notes - Notes\n   * @param {string} title - Notes section title\n   * @param {string} css - CSS selectors\n   * @returns {string} - Enriched HTML as text\n   */\n  async enrichNotes(notes, title, css) {\n    if (notes.length === 0) return;\n\n    const enrichOptions = {\n      rollData: this.shared.rollData,\n      async: true,\n      relativeTo: this.actor,\n    };\n\n    const renderContext = {\n      notes,\n      css,\n      title,\n    };\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", renderContext);\n\n    return TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  /**\n   * Adds generic property labels to an attack's chat card.\n   *\n   * @returns {string[]} The resulting property labels.\n   */\n  addGenericPropertyLabels() {\n    const properties = [];\n\n    // Add actual cost\n    const cost = this.shared.totalChargeCost;\n    if (cost && !this.item.system.atWill) {\n      if (this.item.type === \"spell\" && this.item.useSpellPoints()) {\n        properties.push(`${game.i18n.localize(\"PF1.SpellPointsCost\")}: ${cost}`);\n      } else {\n        properties.push(`${game.i18n.localize(\"PF1.ChargeCost\")}: ${cost}`);\n      }\n    }\n\n    // Add conditions\n    const conditions = Object.entries(this.actor.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInAction)\n      .map((c) => c.name);\n\n    // Special case\n    // TODO: Move this configuration to conditions registry\n    if (this.actor.statuses.has(\"deaf\") && this.item.type === \"spell\") {\n      // TODO: Check if someone modified the conditions to show anyway?\n      conditions.push(pf1.registry.conditions.get(\"deaf\").name);\n    }\n\n    if (conditions.length) properties.push(...conditions);\n\n    // Add info for broken state\n    if (this.shared.rollData.item.broken) {\n      properties.push(game.i18n.localize(\"PF1.Broken\"));\n    }\n\n    // Nonlethal\n    if (this.action.data.nonlethal) properties.push(game.i18n.localize(\"PF1.Nonlethal\"));\n\n    // Splash\n    if (this.action.data.splash) properties.push(game.i18n.localize(\"PF1.Splash\"));\n\n    if (this.action.data.touch) properties.push(game.i18n.localize(\"PF1.TouchAttackShort\"));\n\n    // Add info for material\n    let materialKey = null;\n    let materialAddons = null;\n    const normalMaterialAction = this.action.data.material?.normal.value;\n    const normalMaterialItem = this.item.system.material?.normal.value;\n    const baseMaterialItem = this.item.system.material?.base?.value;\n    const addonMaterialAction = this.action.data.material?.addon;\n    const addonMaterialItem = this.item.system.material?.addon;\n\n    // Check the action data first, then the normal material, then the base material\n    if (normalMaterialAction && normalMaterialAction.length > 0) materialKey = normalMaterialAction;\n    else if (normalMaterialItem && normalMaterialItem.length > 0) materialKey = normalMaterialItem;\n    else materialKey = baseMaterialItem;\n\n    if (materialKey) {\n      properties.push(pf1.registry.materialTypes.get(materialKey.toLowerCase())?.name ?? materialKey.capitalize());\n    }\n\n    // Check for addon materials; prefer action data, then item data\n    if (addonMaterialAction && addonMaterialAction.length > 0) materialAddons = addonMaterialAction;\n    else if (addonMaterialItem && addonMaterialItem.length > 0) materialAddons = addonMaterialItem;\n\n    if (materialAddons) {\n      const materialAddonNames = materialAddons\n        .map((addon) => {\n          if (!addon) return null;\n          const addonName = pf1.registry.materialTypes.get(addon.toLowerCase())?.name ?? addon.capitalize();\n          return addonName;\n        })\n        .filter((addon) => !!addon);\n\n      if (materialAddonNames.length > 0) properties.push(...materialAddonNames);\n    }\n\n    // Add info for alignments\n    const actionAlignments = this.action.data.alignments;\n    const itemAlignments = this.item.system.alignments ?? {};\n    if (actionAlignments) {\n      for (const alignment of Object.keys(actionAlignments)) {\n        if (\n          actionAlignments[alignment] || // The action alignment is true OR\n          (actionAlignments[alignment] === null && // (The action alignment is indeterminate AND\n            itemAlignments[alignment])\n        ) {\n          // The item has the alignment)\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    } else {\n      // Honestly, this should never happen. An action should always have an alignment now.\n      for (const alignment of Object.keys(itemAlignments)) {\n        if (itemAlignments[alignment]) {\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    }\n\n    // Add info for Power Attack to melee, Deadly Aim to ranged attacks\n    if (this.shared.powerAttack) {\n      switch (this.action.data.actionType) {\n        case \"rwak\":\n        case \"twak\":\n          properties.push(game.i18n.localize(\"PF1.DeadlyAim\"));\n          break;\n        case \"mwak\":\n          properties.push(game.i18n.localize(\"PF1.PowerAttack\"));\n          break;\n      }\n    }\n\n    // Add info for Point-Blank shot\n    if (this.shared.pointBlankShot) properties.push(game.i18n.localize(\"PF1.PointBlankShot\"));\n\n    // Add info for Rapid Shot\n    if (this.shared.attacks.find((o) => o.id === \"rapid-shot\")) properties.push(game.i18n.localize(\"PF1.RapidShot\"));\n\n    if (this.shared.manyShot) properties.push(game.i18n.localize(\"PF1.Manyshot\"));\n\n    // Add Armor Check Penalty's application to attack rolls info\n    if (this.item.hasAttack && this.shared.rollData.attributes?.acp?.attackPenalty > 0)\n      properties.push(game.i18n.localize(\"PF1.ArmorCheckPenalty\"));\n\n    // Add conditionals info\n    if (this.shared.conditionals?.length) {\n      this.shared.conditionals.forEach((c) => {\n        properties.push(this.shared.action.data.conditionals[c].name);\n      });\n    }\n\n    // Add Wound Thresholds info\n    if (this.shared.rollData.attributes?.woundThresholds?.level > 0)\n      properties.push(pf1.config.woundThresholdConditions[this.shared.rollData.attributes.woundThresholds.level]);\n\n    return properties;\n  }\n\n  /**\n   * Adds combat property labels to an attack's chat card.\n   *\n   * @returns {string[]} The resulting property labels.\n   */\n  addCombatPropertyLabels() {\n    const properties = [];\n\n    // Add round info\n    properties.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n    return properties;\n  }\n\n  /**\n   * Generates metadata for this attack for the chat card to store.\n   *\n   * @returns {object} The resulting metadata object.\n   */\n  generateChatMetadata() {\n    const metadata = {\n      actor: this.actor.uuid,\n      item: this.item.id,\n      action: this.action.id,\n      combat: undefined,\n      template: this.shared.template?.id ?? null, // BUG: Fails when multiple scenes are involved\n      rolls: {\n        attacks: [],\n      },\n      targets: this.shared.targets.map((t) => t.document.uuid),\n      config: {\n        critMult: this.shared.rollData.critMult,\n      },\n    };\n\n    if (this.actor && game.combat?.combatants.some((c) => c.actor === this.actor)) {\n      metadata.combat = game.combat.id;\n    }\n\n    // Add attack rolls\n    for (let attackIndex = 0; attackIndex < this.shared.chatAttacks.length; attackIndex++) {\n      const chatAttack = this.shared.chatAttacks[attackIndex];\n      const attackRolls = { attack: null, damage: [], critConfirm: null, critDamage: [] };\n      // Add attack roll\n      if (chatAttack.attack) attackRolls.attack = chatAttack.attack.toJSON();\n      // Add damage rolls\n      if (chatAttack.damage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.damage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.damage.rolls[damageIndex];\n          attackRolls.damage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n      // Add critical confirmation roll\n      if (chatAttack.critConfirm) attackRolls.critConfirm = chatAttack.critConfirm.toJSON();\n      // Add critical damage rolls\n      if (chatAttack.critDamage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.critDamage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.critDamage.rolls[damageIndex];\n          attackRolls.critDamage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n\n      // Record used ammo ID and quantity\n      if (chatAttack.ammo?.id) {\n        // Quantity is included for future proofing for supporting attacks that consume more than 1.\n        attackRolls.ammo = { id: chatAttack.ammo.id, quantity: 1, misfire: chatAttack.ammo.misfire ?? false };\n      }\n\n      metadata.rolls.attacks[attackIndex] = attackRolls;\n    }\n\n    // Add miscellaneous metadata\n    if (this.shared.saveDC) metadata.save = { dc: this.shared.saveDC, type: this.shared.save };\n    if (this.item.type === \"spell\") metadata.spell = { cl: this.shared.rollData.cl, sl: this.shared.rollData.sl };\n\n    return metadata;\n  }\n\n  /**\n   * Executes the item's script calls.\n   *\n   * @param {\"use\"|\"postUse\"} [category=\"use\"] Script call category\n   */\n  async executeScriptCalls(category = \"use\") {\n    const shared = this.shared;\n\n    if (!(\"attackData\" in shared)) {\n      Object.defineProperty(shared, \"attackData\", {\n        get: () => {\n          foundry.utils.logCompatibilityWarning(\n            \"shared.attackData is deprecated in favor of directly accessing shared\",\n            {\n              since: \"PF1 v10\",\n              until: \"PF1 v12\",\n            }\n          );\n          return shared;\n        },\n      });\n    }\n\n    const rv = await this.item.executeScriptCalls(category, {}, shared);\n\n    if (category === \"use\") this.shared.scriptData = rv;\n  }\n\n  /**\n   * Posts the attack's chat card.\n   *\n   * @returns {Promise<ChatMessage | SharedActionData | { descriptionOnly: boolean }> }\n   */\n  async postMessage() {\n    // Old hook data + callAll\n    const hookData = {\n      ev: this.shared.event,\n      skipDialog: this.shared.skipDialog,\n      chatData: this.shared.chatData,\n      templateData: this.shared.templateData,\n      shared: this.shared,\n    };\n\n    this.shared.chatTemplate ||= \"systems/pf1/templates/chat/attack-roll.hbs\";\n    this.shared.templateData.damageTypes = pf1.registry.damageTypes.toObject();\n    if (Hooks.call(\"pf1PreDisplayActionUse\", this) === false) return;\n\n    // Show chat message\n    let result;\n    if (this.shared.chatMessage && this.shared.scriptData.hideChat !== true) {\n      const enrichOptions = {\n        rollData: this.shared.rollData,\n        secrets: this.isOwner,\n        async: true,\n        relativeTo: this.actor,\n      };\n\n      const content = await renderTemplate(this.shared.chatTemplate, this.shared.templateData);\n      this.shared.chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n      const hiddenData = this.shared.chatData[\"flags.pf1.identifiedInfo\"];\n      if (hiddenData?.description) {\n        hiddenData.description = await TextEditor.enrichHTML(hiddenData.description, enrichOptions);\n      }\n      if (hiddenData?.actionDescription) {\n        hiddenData.actionDescription = await TextEditor.enrichHTML(hiddenData.actionDescription, enrichOptions);\n      }\n\n      // Apply roll mode\n      this.shared.chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n      ChatMessage.implementation.applyRollMode(this.shared.chatData, this.shared.chatData.rollMode);\n\n      result = await ChatMessage.implementation.create(this.shared.chatData);\n\n      this.shared.message = result;\n    } else result = this.shared;\n\n    return result;\n  }\n\n  /**\n   * Collect valid targets.\n   */\n  async getTargets() {\n    // Get targets from template, and if no template is present, from explicitly targeted tokens list\n    /** @type {MeasuredTemplatePF|null} */\n    const template = this.shared.template?.object;\n    let targets = template ? await template.getTokensWithin() : null;\n    targets ??= Array.from(game.user.targets);\n    // Ignore defeated and secret tokens\n    this.shared.targets = targets.filter(\n      (t) => t.document.disposition !== CONST.TOKEN_DISPOSITIONS.SECRET && t.combatant?.isDefeated !== true\n    );\n  }\n\n  /**\n   * Armor as DR defense DC determination.\n   *\n   * @remarks\n   * - Does not account for critical feats.\n   * - Does not account for size difference between target and attacker.\n   *\n   * @param attack\n   * @returns {RollPF} - Defense DC\n   */\n  getDefenseDC(attack) {\n    const parts = this._getDefenseDCParts(attack);\n    return RollPF.safeRollSync(parts.join(\" + \"));\n  }\n\n  _getDefenseDCParts(attack) {\n    const parts = [];\n\n    // Determine check\n    const check = attack.d20.total;\n    parts.push(`${check}[${game.i18n.localize(\"PF1.Rolls.Check.Label\")}]`);\n\n    // Locate used BAB (accounts for overrides)\n    const babIdent = game.i18n.localize(\"PF1.BAB\");\n    const bab = attack.terms.find((t) => t.flavor === babIdent)?.number ?? 0;\n    parts.push(`${Math.floor(bab / 2)}[${game.i18n.localize(\"PF1.HalfBAB\")}]`);\n\n    return parts;\n  }\n\n  prepareChargeCost() {\n    const rollData = this.shared.rollData;\n\n    // Determine charge cost\n    const baseCost = this.shared.action.getChargeCost({ rollData });\n\n    // Bonus cost, e.g. from a conditional modifier\n    const bonusCost = this.shared.rollData.chargeCostBonus ?? 0;\n\n    let cost = baseCost + bonusCost;\n\n    // Override cost\n    if (this.shared.cost !== null) cost = this.shared.cost;\n\n    // Save chargeCost as rollData entry for anything else\n    this.shared.rollData.chargeCost = cost;\n  }\n\n  /**\n   * Process everything\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.skipDialog=false] - Skip dialog\n   * @returns {Promise<ChatMessage|SharedActionData|void>}\n   */\n  async process({ skipDialog = false } = {}) {\n    const shared = this.shared;\n\n    // Check requirements for item\n    let reqErr = await this.checkRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    await this.autoSelectAmmo();\n\n    // Get new roll data\n    shared.rollData = this.getRollData();\n\n    // let modules modify the ActionUse before attacks are rolled\n    Hooks.callAll(\"pf1CreateActionUse\", this);\n\n    // Generate default attacks\n    shared.fullAttack = true;\n    await this.generateAttacks(true);\n\n    let form;\n    // Show attack dialog, if appropriate\n    if (!skipDialog) {\n      form = await this.createAttackDialog();\n      // Stop if result is not an object (i.e. when closed is clicked on the dialog)\n      if (!form) return;\n    }\n\n    // Save form data in case modules want to reference it later\n    this.formData = form ?? {};\n\n    // Alter roll data\n    await this.alterRollData(form);\n\n    // Filter out attacks without ammo usage (out of ammo)\n    if (shared.action.ammoType) {\n      shared.attacks = shared.attacks.filter((o) => o.hasAmmo);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.AmmoDepleted\"));\n        return;\n      }\n    }\n\n    // Limit attacks to 1 if not full rounding\n    if (!shared.fullAttack) shared.attacks = shared.attacks.slice(0, 1);\n    // Handle conditionals\n    await this.handleConditionals();\n\n    // Prepare charge cost\n    this.prepareChargeCost();\n\n    // Filter out attacks without charge usage (out of charges)\n    if (shared.rollData.chargeCost != 0 && this.shared.action.data.uses?.perAttack) {\n      const cost = shared.rollData.chargeCost;\n      const charges = shared.item.charges;\n\n      shared.attacks.forEach((atk, index) => {\n        if (charges >= (index + 1) * cost) atk.chargeCost = cost;\n        else atk.chargeCost = null;\n      });\n\n      shared.attacks = shared.attacks.filter((o) => o.chargeCost !== null);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.ChargesDepleted\"));\n        return;\n      }\n    }\n\n    // Check attack requirements, post-dialog\n    reqErr = await this.checkAttackRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    // Prompt measure template\n    let measureResult;\n    if (shared.useMeasureTemplate && canvas.scene) {\n      measureResult = await this.promptMeasureTemplate();\n      if (!measureResult.result) return;\n    }\n\n    await this.getTargets();\n\n    // Generate chat attacks - leave this just before `pf1PreActionuse` hook call\n    await this.generateChatAttacks();\n\n    // Call itemUse hook and determine whether the item can be used based off that\n    if (Hooks.call(\"pf1PreActionUse\", this) === false) {\n      await measureResult?.delete();\n      return;\n    }\n\n    // Call script calls\n    await this.executeScriptCalls();\n    if (shared.scriptData?.reject) {\n      await measureResult?.delete();\n      return;\n    }\n\n    const premessage_promises = [];\n    // Handle Dice So Nice\n    premessage_promises.push(this.handleDiceSoNice());\n\n    // Subtract uses\n    const ammoCost = this.action.ammoCost;\n    if (ammoCost != 0) premessage_promises.push(this.subtractAmmo(ammoCost));\n\n    let totalCost = shared.rollData?.chargeCost;\n    if (this.action.data.uses.perAttack) {\n      totalCost = this.shared.attacks.reduce((total, atk) => total + atk.chargeCost, 0);\n    }\n    if (totalCost != 0) {\n      shared.totalChargeCost = totalCost;\n      premessage_promises.push(this.item.addCharges(-totalCost));\n    }\n\n    if (shared.action.isSelfCharged)\n      premessage_promises.push(shared.action.update({ \"uses.self.value\": shared.action.data.uses.self.value - 1 }));\n\n    await Promise.all(premessage_promises);\n\n    // Update remaining ammo for chat message display\n    this.updateAmmoUsage();\n\n    // Retrieve message data\n    await this.getMessageData();\n\n    // Post message\n    let result = Promise.resolve(null);\n    if (shared.scriptData?.hideChat !== true) {\n      result = this.postMessage();\n    }\n\n    // Deselect targets\n    if (game.settings.get(\"pf1\", \"clearTargetsAfterAttack\") && game.user.targets.size) {\n      game.user.updateTokenTargets([]);\n      // Above does not communicate targets to other users, so..\n      game.user.broadcastActivity({ targets: [] });\n    }\n\n    // Wait for chat message to be created before continuing\n    await result;\n\n    // Call post-use script calls\n    await this.executeScriptCalls(\"postUse\");\n\n    Hooks.callAll(\"pf1PostActionUse\", this, this.shared.message ?? null);\n\n    return result;\n  }\n}\n\nexport class ActionUseAttack {\n  /** @type {string|null} */\n  type;\n\n  /** @type {string} */\n  label;\n\n  /** @type {string} */\n  attackBonus;\n\n  /** @type {boolean} */\n  abstract;\n\n  /** @type {AttackAmmo|null} */\n  ammo = null;\n\n  /** @type {number} */\n  chargeCost = null;\n\n  /** @type {ChatAttack} */\n  chatAttack = null;\n\n  /** @type {boolean} */\n  get hasAmmo() {\n    return !!this.ammo;\n  }\n\n  constructor(label, bonus = \"\", ammo = null, { abstract = false, type = null } = {}) {\n    this.label = label;\n    this.attackBonus = bonus;\n    this.ammo = ammo;\n    this.abstract = abstract ?? false;\n    this.type = type;\n  }\n}\n\n/**\n * @typedef {object} ItemAttack_Dialog_Result\n * @property {boolean} fullAttack - Whether it's a full attack (true) or a single attack (false)\n * @property {JQuery} html - The html containing user input and selections.\n */\n\n/**\n * @typedef {object} AttackAmmo\n * @property {string} id - Ammo item ID\n * @property {number} quantity - Quantity of ammo\n * @property {boolean} abundant - Is abundant?\n * @property {object} data - Ammo document data\n * @property {Item} document - Ammo document\n * @property {boolean} isDefault - Is this default ammo for the item?\n */\n","import { ItemBasePF } from \"./item-base.mjs\";\nimport { keepUpdateArray } from \"../../utils/lib.mjs\";\nimport { ItemChange } from \"../../components/change.mjs\";\nimport { ItemAction } from \"../../components/action.mjs\";\nimport { getHighestChanges } from \"../actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\nimport { ActionUse } from \"@actionUse/action-use.mjs\";\nimport { getSkipActionPrompt } from \"../settings.mjs\";\n\n/**\n * Override and extend the basic :class:`Item` implementation\n */\nexport class ItemPF extends ItemBasePF {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * An object containing links to other items.\n     *\n     * @type {Record<string, ItemPF>}\n     */\n    this.links ??= {};\n\n    if (Array.isArray(this.system.actions)) {\n      /**\n       * A {@link Collection} of {@link ItemAction}s.\n       *\n       * @type {Collection<ItemAction>}\n       */\n      this.actions ??= new Collection();\n    }\n  }\n\n  /**\n   * A static object holding system-specific metadata applicable to all instances of this Document class.\n   *\n   * @internal\n   */\n  static system = Object.freeze({\n    /**\n     * Whether this item is a physical one, possessing properties like quantity or weight.\n     *\n     * @type {boolean}\n     */\n    isPhysical: false,\n    /**\n     * Whether this item receives an identifier.\n     */\n    hasIdentifier: true,\n    /**\n     * Whether this item has changes and change flags.\n     */\n    hasChanges: true,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Ensure unique Change IDs\n    const actor = this.actor;\n    if (actor && data?.system?.changes?.length > 0) {\n      const changes = data.system.changes;\n\n      let ids = new Set();\n      while (ids.size < changes.length) ids.add(foundry.utils.randomID(8));\n      ids = Array.from(ids);\n      for (const c of changes) c._id = ids.pop();\n      this.updateSource({ \"system.changes\": changes });\n    }\n\n    const updates = this.preCreateData(data, context, user);\n\n    if (Object.keys(updates).length) this.updateSource(updates);\n  }\n\n  /**\n   * Meant to be overridden.\n   *\n   * {@inheritDoc _preCreate}\n   *\n   * @param data\n   * @param options\n   * @param user\n   * @returns {object} Update data to replace with.\n   */\n  preCreateData(data, options, user) {\n    return {};\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    const actor = this.actor;\n    if (userId !== game.user.id) return;\n\n    if (this.isActive) {\n      // Simulate toggling a feature or buff on\n      if ([\"buff\", \"feat\"].includes(this.type)) {\n        this.executeScriptCalls(\"toggle\", { state: true });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    // No system data changes\n    if (!changed.system) return;\n\n    this._preUpdateNumericValueGuard(changed.system);\n\n    // Ensure tag is not invalid\n    if (changed.system.tag) {\n      changed.system.tag = pf1.utils.createTag(changed.system.tag, { allowUpperCase: true, camelCase: false });\n    }\n\n    // Make sure stuff remains an array\n    const keepPaths = [\n      \"system.attackNotes\",\n      \"system.effectNotes\",\n      \"system.contextNotes\",\n      \"system.scriptCalls\",\n      \"system.actions\",\n      \"system.changes\",\n    ];\n\n    const itemData = this.toObject();\n    for (const path of keepPaths) {\n      keepUpdateArray(itemData, changed, path);\n    }\n\n    await this._chargePreUpdate(changed, context);\n  }\n\n  // Fake DataModel-like behaviour\n  // Ensure numeric bits remain numbers\n  _preUpdateNumericValueGuard(system) {\n    // Nothing to do here\n  }\n\n  /**\n   * Handle charge update sanity checking, constraining them to reasonable values,\n   *   and propagating to parent items if charges are shared.\n   *\n   * @private\n   * @param {object} changed\n   * @param {object} context\n   */\n  async _chargePreUpdate(changed, context) {\n    // Make sure charges doesn't exceed max charges\n    const uses = changed.system.uses;\n    if (uses?.value && this.isCharged) {\n      const maxCharges = this.maxCharges;\n      if (uses.value > maxCharges) uses.value = maxCharges;\n\n      const link = this.links.charges;\n      if (link) {\n        // Update charges for linked item. This will cascade if items are linked more.\n        await link.update({ \"system.uses.value\": uses.value }, context);\n        // Remove updating current item's inherited value\n        delete changed.system.uses.value;\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Remove special charge sharing links that don't clear on their own\n    const links = this.getLinkedItemsSync(\"charges\");\n    if (links.length) {\n      for (const link of links) {\n        if (link.links?.charges) {\n          delete link.links.charges;\n          link.reset();\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} The keys of data variables to memorize between updates, for e.g. determining the difference in update.\n   */\n  get memoryVariables() {\n    return [\"quantity\", \"level\"];\n  }\n\n  /**\n   * Whether this item is physical.\n   *\n   * @type {boolean}\n   */\n  static get isPhysical() {\n    return this.system.isPhysical;\n  }\n\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get isPhysical() {\n    return this.constructor.isPhysical;\n  }\n\n  static get hasChanges() {\n    return this.system.hasChanges;\n  }\n\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get hasChanges() {\n    return this.constructor.hasChanges;\n  }\n\n  /**\n   * The item's subtype, or `null` if the item has no subtype\n   *\n   * @type {string|null}\n   */\n  get subType() {\n    return this.system.subType ?? null;\n  }\n\n  /** @type {string|null} - Base material this item has. */\n  get baseMaterial() {\n    return this.system.armor?.material?.base?.value || this.system.material?.base?.value || null;\n  }\n\n  /**\n   * The item's material.\n   *\n   * @type {string|null}\n   */\n  get normalMaterial() {\n    return (\n      this.system.armor?.material?.normal?.value || this.system.material?.normal?.value || this.baseMaterial || null\n    );\n  }\n\n  /**\n   * The item's material addons.\n   *\n   * @type {string[]}\n   */\n  get addonMaterial() {\n    const addons = this.system.armor?.material?.addon || this.system.material?.addon || [];\n    return addons.filter((o) => !!o);\n  }\n\n  /**\n   * The item's alignment attributes, or `null` if the item has no alignment attributes\n   *\n   * @type {string|null}\n   */\n  get alignments() {\n    return this.system.alignments ?? null;\n  }\n\n  /**\n   * @deprecated\n   * @type {pf1.components.ItemAction|undefined}\n   */\n  get firstAction() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.firstAction is deprecated in favor of ItemPF.defaultAction\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v12\",\n    });\n    return this.defaultAction;\n  }\n\n  /** @type {pf1.components.ItemAction|undefined} */\n  get defaultAction() {\n    return this.actions?.get(this.system.actions?.[0]?._id);\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have an attack, see {@link ItemAction#hasAttack}.\n   *\n   * @type {boolean}\n   */\n  get hasAttack() {\n    return this.actions?.some((o) => o.hasAttack) ?? false;\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have a damage roll, see {@link ItemAction#hasDamage}.\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return this.actions?.some((o) => o.hasDamage) ?? false;\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Properties                             */\n  /* -------------------------------------------- */\n\n  /**\n   * @abstract\n   * @param {boolean} [weapon=true] - Get proficiency as a weapon. Armor otherwise.\n   * @returns {boolean} - Whether or not the owner of the item is proficient.\n   * @throws {Error} - If item type does not support proficiency.\n   * @since PF1 v10\n   */\n  getProficiency(weapon = true) {\n    throw new Error(`Item type ${this.type} has no concept of proficiency`);\n  }\n\n  /**\n   * @abstract\n   * @type {boolean} - Is proficient using this as weapon.\n   * @since PF1 v10\n   */\n  get isProficient() {\n    return true;\n  }\n\n  /** @type {boolean} */\n  get isOwned() {\n    return super.isOwned || this.parentItem != null;\n  }\n\n  /** @type {boolean} */\n  get hasAction() {\n    return this.system.actions?.length > 0;\n  }\n\n  /** @type {boolean} */\n  get isSingleUse() {\n    return this.system.uses?.per === \"single\";\n  }\n\n  /** @type {boolean} */\n  get isCharged() {\n    return this.isSingleUse || !!this.system.uses?.per;\n  }\n\n  /** @type {boolean} Does the item has finite number of charges */\n  get hasFiniteCharges() {\n    return this.isSingleUse || [\"charges\"].includes(this.system.uses?.per);\n  }\n\n  /** @type {number} Remaining charges */\n  get charges() {\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.charges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n    return this.system.uses?.value ?? 0;\n  }\n\n  /**\n   * @type {boolean} True if default charge cost is non-zero\n   */\n  get autoDeductCharges() {\n    return this.getDefaultChargeCost() != 0;\n  }\n\n  /**\n   * Get default charge cost for all actions.\n   *\n   * @param {object} [options] Additional options\n   * @param {object} [options.rollData] Roll data instance\n   * @returns {number} Number for default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    rollData ??= this.getRollData();\n    const formula = this.getDefaultChargeFormula();\n    return RollPF.safeRollAsync(formula, rollData).total;\n  }\n\n  /**\n   * Default charge formula.\n   *\n   * @returns {string} Charge formula\n   */\n  getDefaultChargeFormula() {\n    return this.system.uses?.autoDeductChargesCost || \"1\";\n  }\n\n  /**\n   * @type {number} Maximum charges the item can have.\n   */\n  get maxCharges() {\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.maxCharges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n\n    return this.system.uses?.max ?? 0;\n  }\n\n  /**\n   * Recharges item's uses, if any.\n   *\n   * @param {object} options - Options\n   * @param {\"round\"|\"hour\"|\"day\"|\"week\"|\"any\"} [options.period=\"day\"] Recharge period. Use \"any\" to ignore item's configuration.\n   * @param {boolean} [options.exact=false] - Use exact time period. Otherwise \"week\" for example will also recharge items with \"day\" period.\n   * @param {number} [options.value] - Recharge to specific value, respecting maximum and minimum bounds.\n   * @param {boolean} [options.maximize=false] - Recharge to full regardless of recharge formula.\n   * @param {boolean} [options.commit=true] - Commit update directly. If false, returns the update data instead.\n   * @param {object} [options.rollData] - Roll data instance to use for formulas.\n   * @param {object} [options.context] - Update context\n   * @returns {Promise<this|object|undefined>} - Promise for the update, update data object, or undefined (no update needed).\n   */\n  async recharge({ value, period = \"day\", exact = false, maximize = false, commit = true, rollData, context } = {}) {\n    const updateData = (await this._rechargeUses({ value, period, exact, maximize, rollData })) ?? { system: {} };\n    const actionUpdate = this._rechargeActions({ period, exact, rollData });\n    if (actionUpdate) updateData.system.actions = actionUpdate.system.actions;\n\n    // Cancel empty update\n    if (foundry.utils.isEmpty(updateData.system)) return;\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /**\n   * Recharge item uses\n   *\n   * {@inheritDoc recharge}\n   *\n   * @internal\n   * @param options\n   * @param options.value\n   * @param options.period\n   * @param options.exact\n   * @param options.maximize\n   * @param options.rollData\n   * @returns {Promise<object | undefined>} - Update data or undefined if no update is necessary.\n   */\n  async _rechargeUses({ value, period, exact, maximize, rollData } = {}) {\n    const uses = this.system.uses ?? {};\n    if (!uses.per) return; // Unlimited uses, recharging meaningless\n\n    // Cancel if charges are managed by different item.\n    if (this.links.charges) return;\n\n    // No update when period does not match usage\n    if ([\"charges\", \"single\"].includes(uses.per)) {\n      // Only charge if time period is any\n      if (period !== \"any\") return;\n    } else if (pf1.config.limitedUsePeriodOrder.includes(period) && !exact) {\n      // Recharge lesser time periods when using inexact matching\n      const idx = pf1.config.limitedUsePeriodOrder.indexOf(period);\n      const validPeriods = pf1.config.limitedUsePeriodOrder.slice(0, idx + 1);\n      if (!validPeriods.includes(uses.per)) return;\n    }\n    // Otherwise test if \"any\" period is used\n    else if (uses.per !== period && period !== \"any\") return;\n\n    const staticValue = value !== undefined;\n\n    // No specific value given\n    if (!staticValue) {\n      const formula = uses.rechargeFormula || \"\";\n      // Default to maximizing value\n      if (!formula) maximize = true;\n      else {\n        rollData ??= this.getRollData();\n        const roll = await RollPF.safeRollAsync(formula, rollData, \"recharge\");\n        value = roll.total;\n\n        // Cancel if formula produced invalid value\n        if (!Number.isFinite(value))\n          return void console.warn(`Formula \"${formula}\" produced non-numeric value \"${value}\"`);\n      }\n    }\n\n    // Maximize value regardless what value is\n    if (maximize) value = uses.max;\n\n    // Clamp charge value to\n    value = Math.clamped(value, 0, uses.max);\n\n    const updateData = { system: {} };\n\n    if (value !== uses.value) {\n      return { system: { uses: { value } } };\n    }\n  }\n\n  /**\n   * Update action limited uses\n   *\n   * {@inheritDoc ItemPF.recharge}\n   *\n   * @internal\n   * @param {object} options\n   * @param options.period\n   * @param options.exact\n   * @param options.rollData\n   * @returns {object|undefined} - Update data or undefined if no update is needed.\n   */\n  _rechargeActions({ period, exact, rollData } = {}) {\n    if (!(this.system.actions?.length > 0)) return;\n\n    const actions = this.toObject().system.actions;\n    let changedActions = false;\n    for (const actionData of actions) {\n      const action = this.actions.get(actionData._id);\n      const max = action.data.uses?.self?.max ?? 0;\n      if (!(max > 0)) continue;\n\n      const uses = actionData.uses?.self;\n      const per = uses?.per;\n      if (!per) continue;\n\n      if ([\"charges\"].includes(uses.per)) {\n        continue;\n      } else if (pf1.config.limitedUsePeriodOrder.includes(period) && !exact) {\n        // Recharge lesser time periods when using inexact matching\n        const idx = pf1.config.limitedUsePeriodOrder.indexOf(period);\n        const validPeriods = pf1.config.limitedUsePeriodOrder.slice(0, idx + 1);\n        if (!validPeriods.includes(per)) continue;\n      }\n\n      if (uses.value < max) {\n        uses.value = max;\n        changedActions = true;\n      }\n    }\n\n    if (!changedActions) return;\n\n    return { system: { actions } };\n  }\n\n  /**\n   * @type {number} Number from 0 to 4. 0 for no aura and 1-4 matching PF1.auraStrengths.\n   */\n  get auraStrength() {\n    const cl = this.system.cl || 0;\n    if (cl < 1) {\n      return 0;\n    } else if (cl < 6) {\n      return 1;\n    } else if (cl < 12) {\n      return 2;\n    } else if (cl < 21) {\n      return 3;\n    }\n    return 4;\n  }\n\n  /**\n   * @type {ActorPF|null} Parent actor\n   * @deprecated Use {@link actor instead}\n   */\n  get parentActor() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.parentActor is deprecated in favor of Item.actor\", {\n      since: \"PF1 v9\",\n      until: \"PF1 v11\",\n    });\n\n    return this.actor;\n  }\n\n  get limited() {\n    if (this.parentItem) return this.parentItem.limited;\n    return super.limited;\n  }\n\n  get uuid() {\n    if (this.parentItem) return this.parentItem.uuid + `.Item.${this.id}`;\n    return super.uuid;\n  }\n\n  testUserPermission(user, permission, { exact = false } = {}) {\n    if (this.isEmbedded) return this.parent.testUserPermission(user, permission, { exact });\n    if (this.parentItem) return this.parentItem.testUserPermission(user, permission, { exact });\n    return super.testUserPermission(user, permission, { exact });\n  }\n\n  get permission() {\n    if (this.actor) return this.actor.permission;\n    return super.permission;\n  }\n\n  get fullDescription() {\n    return this.system.description.value;\n  }\n\n  /**\n   * Get full description.\n   *\n   * @param {object} options - Item type dependant options for rendering the description.\n   * @param {boolean} [options.chatcard=false] - Instruct template to render chat card in mind.\n   * @param {object} [options.data={}] - Template data for rendering\n   * @param {object} [options.rollData] - Roll data for transforming description\n   * @param {boolean} [options.header] - Include header if such exists.\n   * @param {boolean} [options.body] - Include main description body if such exists.\n   * @returns {string} - Full description.\n   */\n  getDescription({ chatcard = false, data = {}, rollData, header = true, body = true } = {}) {\n    if (body) return this.system.description.value;\n    return \"\";\n  }\n\n  /**\n   * @returns {ActiveEffect} An active effect associated with this item.\n   */\n  get effect() {\n    return this.actor.effects.find((effect) => {\n      if (!effect.origin) return false;\n      // BUG: If origin is from another actor (duplicated actor), this can cause false positives/negatives.\n      return /\\.Item\\.(?<itemId>[^.]+)/.exec(effect.origin)?.groups.itemId === this.id;\n    });\n  }\n\n  /**\n   * An array containing all action types from this item's actions.\n   *\n   * @see {@link config.itemActionTypes}\n   * @type {string[]}\n   */\n  get actionTypes() {\n    const actionTypes = this.actions?.map((action) => action.data.actionType).filter(Boolean) ?? [];\n    return [...new Set(actionTypes)];\n  }\n\n  static get defaultContextNote() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF#defaultContextNote is deprecated in favor of pf1.components.ContextNote\",\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return new pf1.components.ContextNote().toObject();\n  }\n\n  /**\n   * Generic charge addition (or subtraction) function that either adds charges\n   * or quantity, based on item data.\n   *\n   * @param {number} value The amount of charges to add.\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible.\n   */\n  async addCharges(value) {\n    // Add link charges\n    const link = this.links.charges;\n    if (link) return link.addCharges(value);\n\n    // Add own charges\n    if (this.isSingleUse && this.isPhysical) {\n      return this.update({ \"system.quantity\": (this.system.quantity || 0) + value });\n    } else {\n      return this.update({ \"system.uses.value\": (this.system.uses?.value || 0) + value });\n    }\n  }\n\n  /**\n   * Linked ammunition item if any.\n   *\n   * @type {Item|undefined}\n   */\n  get defaultAmmo() {\n    const ammoId = this.getFlag(\"pf1\", \"defaultAmmo\");\n    return this.actor?.items.get(ammoId);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Should the item show unidentified data\n   *\n   * @type {boolean}\n   */\n  get showUnidentifiedData() {\n    return false;\n  }\n\n  /* -------------------------------------------- */\n  /*\tData Preparation\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this.prepareLinks();\n\n    const itemData = this.system;\n\n    // Update changes\n    if (this.hasChanges) {\n      this._prepareChanges();\n    }\n\n    this._prepareScriptCalls();\n\n    const wgroups = this.system.weaponGroups;\n    if (wgroups) {\n      wgroups.value ??= [];\n      wgroups.custom ??= [];\n      wgroups.total = new Set([...wgroups.value.map((g) => pf1.config.weaponGroups[g] || g), ...wgroups.custom]);\n    }\n\n    // Prepare dependent data only if there's no actor or actor initialization has happened.\n    if (!this.actor || this.actor._initialized !== false) {\n      this._prepareDependentData(true);\n    }\n  }\n\n  /**\n   * Prepare data potentially dependent on other items.\n   *\n   * @param {boolean} final - Is this final call to this?\n   */\n  _prepareDependentData(final = false) {\n    // Update maximum uses\n    this._updateMaxUses();\n\n    // Prepare actions only when item preparation is deemed finalized\n    if (final) this._prepareActions();\n  }\n\n  /**\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n    this._prepareIdentifier();\n\n    if (this.inContainer) this.adjustContained();\n\n    if (this.system.contextNotes?.length) {\n      this.system.contextNotes = this.system.contextNotes.map(\n        (cn) => new pf1.components.ContextNote(cn, { parent: this })\n      );\n    }\n  }\n\n  /**\n   * Initialize identifier\n   *\n   * @internal\n   */\n  _prepareIdentifier() {\n    const isTaggedType = this.constructor.system?.hasIdentifier ?? false;\n    if (isTaggedType) {\n      if (!this.system.tag) {\n        this.system.tag = pf1.utils.createTag(this.name);\n      }\n    }\n  }\n\n  /**\n   * Adjust data if the item is in container.\n   *\n   * @abstract\n   */\n  adjustContained() {}\n\n  /**\n   * Returns labels for this item\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.actionId] - ID of one of this item's actions to get labels for; defaults to first action\n   * @param {object} [options.rollData] - Roll data to use.\n   * @returns {Record<string, string>} This item's labels\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n    return {\n      activation: pf1.config.abilityActivationTypes.passive, // Default passive if no action is present\n      ...(action?.getLabels({ rollData }) ?? {}),\n    };\n  }\n\n  /**\n   * Prepare item links.\n   *\n   * @internal\n   */\n  prepareLinks() {\n    if (!this.links) return;\n\n    for (const [type, item] of Object.entries(this.links)) {\n      if (type === \"charges\") {\n        // Remove cached link if stale\n        // TODO: This should not exist.\n        const links = item.getLinkedItemsSync(\"charges\");\n        if (!links.some((i) => i.id === this.id)) {\n          delete this.links.charges;\n          continue;\n        }\n\n        this._updateInheritedCharges(item);\n      }\n    }\n  }\n\n  /**\n   * Prepare and update Changes collection.\n   *\n   * @internal\n   */\n  _prepareChanges() {\n    const prior = this.changes;\n    const collection = new Collection();\n    for (const c of this.system.changes ?? []) {\n      let change = null;\n      if (prior && prior.has(c._id)) {\n        change = prior.get(c._id);\n        const updateData = { ...c };\n        change.updateSource(updateData, { recursive: false });\n        change.prepareData();\n      } else change = new pf1.components.ItemChange(c, { parent: this });\n      collection.set(c._id || change.data._id, change);\n    }\n\n    this.changes = collection;\n  }\n\n  /**\n   * Prepare actions\n   *\n   * @internal\n   */\n  _prepareActions() {\n    const actions = this.system.actions ?? [];\n\n    const prior = this.actions;\n    const collection = new Collection();\n    for (const o of actions) {\n      let action = null;\n      if (prior && prior.has(o._id)) {\n        action = prior.get(o._id);\n        action.data = foundry.utils.mergeObject(ItemAction.defaultData, o);\n        action.prepareData();\n      } else action = new pf1.components.ItemAction(o, this);\n      collection.set(o._id || action.data._id, action);\n    }\n\n    /** @type {Map<string, pf1.components.ItemAction>} */\n    this.actions = collection;\n\n    for (const action of prior ?? []) {\n      if (this.actions.get(action.id) !== action) {\n        Object.values(action.apps).forEach((app) =>\n          app.close({ pf1: { action: \"delete\" }, submit: false, force: true })\n        );\n      }\n    }\n  }\n\n  /**\n   * Prepare `ItemPF.scriptCalls` collection.\n   *\n   * @internal\n   */\n  _prepareScriptCalls() {\n    const scriptCalls = this.system.scriptCalls;\n    if (!scriptCalls) return;\n\n    // TODO: Remove constant re-creation of the collection to retain the reference.\n    const prior = this.scriptCalls;\n    const collection = new Collection();\n    for (const s of scriptCalls) {\n      const sid = s._id;\n      let scriptCall = prior?.get(sid);\n      if (scriptCall) scriptCall.data = s;\n      else scriptCall = new pf1.components.ItemScriptCall(s, this);\n      scriptCall.prepareData();\n\n      collection.set(sid, scriptCall);\n    }\n\n    /** @type {Collection<string,pf1.components.ItemScriptCall>} */\n    this.scriptCalls = collection;\n  }\n\n  /**\n   * Executes all script calls on this item of a specified category.\n   *\n   * @param {string} category - The category of script calls to call.\n   * @param {Object<string, object>} [extraParams={}] - A dictionary of extra parameters to pass as variables for use in the script.\n   * @param {object} [shared={}] - Shared data object\n   * @returns {Promise.<object>} The shared object between calls which may have been given data.\n   */\n  async executeScriptCalls(category, extraParams = {}, shared = {}) {\n    /** @type {pf1.components.ItemScriptCall[]} */\n    const scripts = this.scriptCalls?.filter((o) => o.category === category) ?? [];\n\n    shared.category = category;\n\n    try {\n      for (const s of scripts) {\n        await s.execute(shared, extraParams);\n      }\n    } catch (error) {\n      console.error(`Script call execution failed\\n`, error, this);\n      // Rethrow to ensure everything cancels\n      throw new Error(\"Error occurred while executing a script call\", { cause: error });\n    }\n\n    return shared;\n  }\n\n  /**\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @returns {Promise<Item>}\n   */\n  async update(data, context = {}) {\n    // Avoid regular update flow for explicitly non-recursive update calls\n    if (context.recursive === false) {\n      if (this.inContainer) {\n        this.rootItem.update(this._transformContainerUpdateData(data, { recursive: true }), context);\n      } else {\n        return super.update(data, context);\n      }\n    }\n\n    data = foundry.utils.expandObject(data);\n\n    this.memorizeVariables();\n\n    const parentItem = this.parentItem;\n    if (!parentItem) {\n      return super.update(data, context);\n    } else {\n      // Update parent item\n      context.pf1 ??= {};\n      context.pf1.containerItem = this.id;\n      await parentItem.update(this._transformContainerUpdateData(data), context);\n      return this;\n    }\n  }\n\n  /**\n   * Transform given data so it becomes valid update data within parent item.\n   *\n   * This can, for example, be used to generate batched update to the real item.\n   *\n   * @example\n   * ```js\n   * _transformContainerUpdateData({ name: \"new name\" })\n   * // => { system: { items: { [itemID]: { name: \"new name\" } } } }\n   * ```\n   * @internal\n   * @param {object} data Update data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.recursive=false] - Create data recursively, meant for the real item document.\n   * @returns {object} - Transformed update data\n   */\n  _transformContainerUpdateData(data, { recursive = false } = {}) {\n    const parentItem = this.parentItem;\n    if (parentItem) {\n      const baseUpdate = { system: { items: { [this.id]: data } } };\n      if (recursive) return parentItem._transformContainerUpdateData(baseUpdate, { recursive });\n      else return baseUpdate;\n    }\n    return data;\n  }\n\n  /**\n   * Memorize quantity and level for later diffing.\n   *\n   * @internal\n   */\n  memorizeVariables() {\n    if (this._memoryVariables != null) return;\n\n    const memKeys = this.memoryVariables;\n    this._memoryVariables = {};\n    for (const k of memKeys) {\n      if (foundry.utils.hasProperty(this.system, k)) {\n        this._memoryVariables[k] = foundry.utils.deepClone(foundry.utils.getProperty(this.system, k));\n      }\n    }\n\n    // Memorize variables recursively on container items\n    for (const item of this.items ?? []) {\n      item.memorizeVariables();\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (userId !== game.user.id) return;\n\n    // Call 'toggle' script calls\n    let state = null;\n    if (this.type === \"buff\") state = changed.system?.active;\n    else if (this.type === \"feat\" && changed.system?.disabled !== undefined)\n      state = changed.system.disabled === true ? false : true;\n    if (state != null) {\n      const startTime = this.effect?.duration.startTime ?? game.time.worldTime;\n      this.executeScriptCalls(\"toggle\", { state, startTime });\n    }\n\n    if (this._memoryVariables) this._onMemorizedUpdate(changed, context);\n  }\n\n  _onMemorizedUpdate(changed, context) {\n    // Call 'changeLevel' script calls\n    const oldLevel = this._memoryVariables?.level;\n    if (oldLevel !== undefined && changed.system?.level !== undefined) {\n      const level = {\n        previous: parseInt(oldLevel),\n        new: parseInt(this.system.level),\n      };\n      for (const [k, v] of Object.entries(level)) {\n        if (Number.isNaN(v)) level[k] = null;\n      }\n      if (level.new !== undefined && level.new !== level.previous) {\n        this.executeScriptCalls(\"changeLevel\", { level });\n      }\n    }\n\n    // Forget memory variables\n    this._memoryVariables = null;\n  }\n\n  /**\n   * Update max uses\n   *\n   * @internal\n   */\n  _updateMaxUses() {\n    const per = this.system.uses?.per;\n\n    // No charges? No charges!\n    if (!per) return;\n\n    // Do not evaluate inherited charges\n    if (this.links?.charges) return;\n\n    const maxFormula = this.system.uses.maxFormula;\n    if (per === \"single\") {\n      this.system.uses.max = 1;\n    } else if (!maxFormula) {\n      this.system.uses.max = 0;\n    } else {\n      try {\n        const isDeterministic = Roll.parse(maxFormula).every((t) => t.isDeterministic);\n        if (isDeterministic) {\n          const rollData = this.getRollData();\n          const roll = RollPF.safeRollSync(\n            maxFormula,\n            rollData,\n            { formula: maxFormula, item: this },\n            { suppressError: !this.isOwner }\n          );\n          this.system.uses.max = roll.total;\n\n          // Update any items inheriting our charges\n          const linked = this.getLinkedItemsSync(\"charges\");\n          linked.forEach((item) => item._updateInheritedCharges(this));\n        } else {\n          const msg = game.i18n.format(\"PF1.Warning.NoDiceAllowedInFormula\", {\n            formula: maxFormula,\n            context: game.i18n.localize(\"PF1.ChargePlural\"),\n          });\n          ui.notifications.warn(msg, { console: false });\n          console.warn(msg, this);\n        }\n      } catch (err) {\n        console.error(\"Invalid max uses formula:\", { formula: maxFormula, item: this }, err);\n      }\n    }\n  }\n\n  /**\n   * Update this item's charges based on provided item.\n   *\n   * @internal\n   * @param {Item} item - Charge source\n   */\n  _updateInheritedCharges(item) {\n    const iuses = item.system.uses;\n    if (!iuses) return;\n\n    const uses = this.system.uses;\n\n    uses.per = iuses.per;\n    uses.max = iuses.max;\n    uses.maxFormula = iuses.maxFormula;\n    uses.value = iuses.value;\n    uses.rechargeFormula = iuses.rechargeFormula;\n  }\n\n  /**\n   * Determines the starting data for an ActiveEffect based off this item.\n   */\n  async getRawEffectData() {\n    return {\n      name: this.name,\n      icon: this.img,\n      origin: this.getRelativeUUID(this.actor),\n      duration: {\n        startTime: game.time.worldTime,\n      },\n      disabled: !this.isActive,\n    };\n  }\n\n  /**\n   * Fetches all this item's script calls of a specified category\n   *\n   * @internal\n   * @param {string} category\n   * @returns {pf1.components.ItemScriptCall[]}\n   */\n  getScriptCalls(category) {\n    return this.scriptCalls?.filter((s) => s.category === category) ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Display the chat card for an Item as a message in chat\n   *\n   * @param {object} [altChatData={}] - Optional data that will be merged into the chat data object.\n   * @param {object} [options=[]] Additional options.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage | void>} Chat message instance if one was created.\n   */\n  async displayCard(altChatData = {}, { token } = {}) {\n    const actor = this.actor;\n    if (actor && !actor.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n    }\n\n    // Basic template rendering data\n    token ??= actor?.token;\n    const rollData = this.getRollData();\n    const itemChatData = await this.getChatData({ rollData });\n    const identified = Boolean(rollData.item?.identified ?? true);\n\n    const templateData = {\n      actor: this.actor,\n      token,\n      tokenId: token?.uuid,\n      item: this.toObject(),\n      labels: this.getLabels({ rollData }),\n      hasAttack: this.hasAttack,\n      hasMultiAttack: this.hasMultiAttack,\n      hasAction: this.hasAction,\n      isVersatile: this.isVersatile,\n      isSpell: this.type === \"spell\",\n      name: this.getName(true),\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      rollData,\n      hasExtraProperties: false,\n      extraProperties: [],\n    };\n\n    const pfFlags = {};\n\n    const enrichOptions = {\n      rollData,\n      secrets: this.isOwner,\n      async: true,\n      relativeTo: this.actor,\n    };\n\n    // If the item is unidentified, store data for GM info box containing identified info\n    if (identified === false) {\n      pfFlags.identifiedInfo = {\n        identified,\n        name: this._source.name,\n        description: await TextEditor.enrichHTML(itemChatData.identifiedDescription, enrichOptions),\n      };\n    }\n\n    // Add combat info\n    if (game.combat) {\n      const combatProps = [];\n      // Add round info\n      combatProps.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n      if (combatProps.length > 0) {\n        templateData.extraProperties.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: combatProps,\n          css: \"combat-properties\",\n        });\n        templateData.hasExtraProperties = true;\n      }\n    }\n\n    // Render the chat card template\n    const templateType = [\"consumable\"].includes(this.type) ? this.type : \"item\";\n    const template = `systems/pf1/templates/chat/${templateType}-card.hbs`;\n\n    // Determine metadata\n    pfFlags.metadata = {};\n    pfFlags.metadata.item = this.id;\n\n    // Basic chat message data\n    const chatData = foundry.utils.mergeObject(\n      {\n        type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n        speaker: ChatMessage.implementation.getSpeaker({ actor, token, alias: token?.name }),\n        flags: {\n          core: {\n            canPopout: true,\n          },\n          pf1: pfFlags,\n        },\n      },\n      altChatData\n    );\n\n    if (Hooks.call(\"pf1DisplayCard\", this, { template, templateData, chatData }) === false) return;\n\n    // Create the chat message\n    const content = await renderTemplate(template, templateData);\n    chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n    // Apply roll mode\n    chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n    ChatMessage.implementation.applyRollMode(chatData, chatData.rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Cards\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this item, either in a default configuration or for a specific action.\n   *\n   * @param {EnrichmentOptions} [enrichOptions] - Options affecting how descriptions are enriched.\n   *                                              `rollData` defaults to {@link ItemAction#getRollData}/{@link ItemPF#getRollData}.\n   *                                              `secrets` defaults to {@link Item#isOwner}.\n   * @param {object} [options] - Additional options affecting the chat data generation\n   * @param {boolean} [options.chatcard=false] - Is this actually for chat card.\n   * @param {boolean} [options.extended=false] - Include extended information that may not be useful in all circumstances.\n   * @param {string} [options.actionId] - The ID of an action on this item to generate chat data for,\n   *                                      defaults to {@link ItemPF.defaultAction}\n   * @returns {ChatData} The chat data for this item (+action)\n   */\n  async getChatData({ chatcard = false, actionId = null, rollData = {} } = {}) {\n    /** @type {ChatData} */\n    const data = {};\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n\n    rollData ??= action ? action.getRollData() : this.getRollData();\n    const itemData = rollData.item ?? this.system;\n    const actionData = rollData.action ?? action?.data ?? {};\n\n    const labels = this.getLabels({ actionId, rollData });\n\n    // Rich text descriptions\n    data.identifiedDescription = this.getDescription({ chatcard, rollData });\n\n    data.unidentifiedDescription = itemData.description.unidentified;\n    data.description = this.showUnidentifiedData ? data.unidentifiedDescription : data.identifiedDescription;\n    data.actionDescription = actionData.description;\n\n    // General equipment properties\n    const props = [];\n\n    if (chatcard !== true) {\n      if (labels.subType && labels.childTypeDistinct !== true) props.push(labels.subType);\n      if (labels.childType) props.push(labels.childType);\n    }\n\n    if (!this.showUnidentifiedData) {\n      if (labels.activation) props.push(labels.activation);\n      // Range\n      if (actionData.range != null) {\n        const range = action.getRange({ type: \"max\", rollData }),\n          units = actionData.range.units === \"mi\" ? \"mi\" : \"ft\";\n        const distanceValues = pf1.utils.convertDistance(range, units);\n        // TODO: Display range increment and max range instead of just the latter when max increment is higher than 1\n        const rangeLabel =\n          range > 0 ? game.i18n.format(\"PF1.MaxRangeNote\", { distance: range, units: distanceValues[1] }) : null;\n        if (rangeLabel) props.push(rangeLabel);\n      }\n\n      // Add Difficulty Class (DC) label\n      if (labels.save) {\n        props.push(labels.save);\n        const saveDesc = actionData.save?.description;\n        if (saveDesc) props.push(saveDesc);\n      }\n\n      // Duration\n      if (actionData.duration != null) {\n        let duration;\n        if (actionData.duration.units === \"spec\") {\n          duration = actionData.duration.value;\n        } else if (![\"inst\", \"perm\"].includes(actionData.duration.units)) {\n          const value = await RollPF.safeRollAsync(actionData.duration.value || \"0\", rollData).total;\n          duration = [value, pf1.config.timePeriods[actionData.duration.units]].filterJoin(\" \");\n        }\n        if (duration) props.push(duration);\n      }\n\n      // Enhancement Bonus\n      const enhBonus = actionData.enh?.value ?? itemData.enh ?? 0;\n      if (enhBonus > 0) {\n        props.push(game.i18n.format(\"PF1.EnhancementInline\", { bonus: enhBonus }));\n      }\n    }\n\n    // Get per item type chat data\n    this.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    const harmless = actionData.save?.harmless;\n    if (harmless) props.push(game.i18n.localize(\"PF1.Harmless\"));\n\n    data.properties = props;\n\n    return data;\n  }\n\n  /**\n   * Per item type chat data.\n   *\n   * @param {ChatData} data - A partial of a chat data object that can be modified to add per item type data.\n   * @param {Object<string, string>} labels - The labels for this item.\n   * @param {string[]} props - Additional property strings\n   * @param {object} rollData - A rollData object to be used for checks\n   * @param {object} [options] - Additional options\n   * @param {string} [options.actionId=null] - Action this pertains to, if any.\n   * @param {boolean} [options.chatcard=false] - Is this for a chat card?\n   */\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    // Charges as used by most item types, except spells\n    if (this.isCharged) {\n      const charges = this.charges;\n      if (Number.isFinite(charges))\n        props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${charges}/${this.maxCharges}`);\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Rolls - Attack, Damage, Saves, Checks  */\n  /* -------------------------------------------- */\n\n  /**\n   * Use an attack, using {@link SharedActionData}\n   *\n   * @see {@link SharedActionData}\n   * @param {string} [actionId=\"\"] - The ID of the action to use, defaults to the first action\n   * @param {string} [actionID=\"\"] - Deprecated in favor of `actionId`\n   * @param {number} [cost=null] - Cost override. Replaces charge cost or slot cost as appropriate.\n   * @param {Event | null} [ev=null] - The event that triggered the use, if any\n   * @param {boolean} [skipDialog=getSkipActionPrompt()] - Whether to skip the dialog for this action\n   * @param {boolean} [chatMessage=true] - Whether to send a chat message for this action\n   * @param {string} [dice=pf1.dice.D20RollPF.standardRoll] - The base dice to roll for this action\n   * @param {string} [rollMode] - The roll mode to use for the chat message\n   * @param {TokenDocument} [token] Token this action is for, if any.\n   * @param {UseOptions} [options={}] Additional use options\n   * @throws {Error} - On some invalid inputs.\n   * @returns {Promise<SharedActionData | void | ChatMessage>}\n   */\n  async use({\n    actionId = \"\",\n    actionID = \"\",\n    cost = null,\n    ev = null,\n    skipDialog = getSkipActionPrompt(),\n    chatMessage = true,\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollMode,\n    token,\n    options = {},\n  } = {}) {\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n    token ||= this.actor?.token ?? this.actor?.getActiveTokens(true, true)[0];\n\n    if (ev?.originalEvent) ev = ev.originalEvent;\n\n    if (cost !== null && !Number.isSafeInteger(cost)) throw new Error(`Invalid value for cost override: ${cost}`);\n\n    if (actionID) {\n      foundry.utils.logCompatibilityWarning(\"ItemPF.use() actionID parameter is deprecated in favor of actionId\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      actionId ||= actionID;\n    }\n\n    if (options.held) {\n      // Convert human friendly options to internal types\n      if (options.held === \"twohanded\") options.held = \"2h\";\n      else if (options.held === \"offhand\") options.held = \"oh\";\n    }\n\n    // Prepare variables\n    /** @type {SharedActionData} */\n    const shared = {\n      event: ev,\n      action: null,\n      item: null,\n      token: null,\n      rollData: {},\n      skipDialog,\n      chatMessage,\n      dice,\n      cost,\n      fullAttack: true,\n      useOptions: options,\n      attackBonus: [],\n      damageBonus: [],\n      attacks: [],\n      chatAttacks: [],\n      rollMode,\n      useMeasureTemplate: false,\n      conditionals: null,\n      conditionalPartsCommon: {},\n      casterLevelCheck: false, // TODO: Move to use-options\n      concentrationCheck: false, // TODO: Move to use-options\n      scriptData: {},\n    };\n\n    // Prevent reassigning the ActionUse's item and token\n    Object.defineProperties(shared, {\n      item: { value: this, writable: false, enumerable: true },\n      token: { value: token, writable: false, enumerable: true },\n    });\n\n    // Old use method\n    if (!this.hasAction) {\n      // Use\n      if (!(\"attackData\" in shared)) {\n        Object.defineProperty(shared, \"attackData\", {\n          get: () => {\n            foundry.utils.logCompatibilityWarning(\n              \"shared.attackData is deprecated in favor of directly accessing shared\",\n              {\n                since: \"PF1 v10\",\n                until: \"PF1 v12\",\n              }\n            );\n            return shared;\n          },\n        });\n      }\n\n      await this.executeScriptCalls(\"use\", {}, shared);\n      rollMode = shared.rollMode || rollMode;\n      if (shared.reject) return shared;\n\n      // Deduct charges\n      if (this.isCharged) {\n        const chargeCost = cost ?? this.getDefaultChargeCost();\n        if (this.charges < chargeCost) {\n          if (this.isSingleUse) {\n            return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n          }\n          return void ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.name }));\n        }\n\n        await this.addCharges(-chargeCost);\n      }\n\n      if (shared.hideChat !== true && chatMessage) {\n        shared.descriptionOnly = true;\n        shared.chatCard = await this.displayCard({ rollMode });\n      }\n\n      return shared;\n    }\n\n    /** @type {ItemAction | undefined} */\n    let action;\n    if (this.system.actions.length > 0) {\n      if (actionId) {\n        action = this.actions.get(actionId);\n        if (!action) throw new Error(`Could not find action by ID \"${actionId}\"`);\n      } else if (this.system.actions.length > 1 && skipDialog !== true) {\n        return pf1.applications.ActionSelector.open(this, { ev, chatMessage, dice, rollMode, token });\n      } else {\n        action = this.defaultAction;\n      }\n    } else {\n      console.error(\"This item does not have an action associated with it.\");\n      return;\n    }\n\n    // Prevent reassigning the ActionUse's action\n    Object.defineProperties(shared, {\n      action: { value: action, writable: false, enumerable: true },\n    });\n\n    if (shared.useOptions.ammo) {\n      if (action.data.usesAmmo) {\n        await this.setFlag(\"pf1\", \"defaultAmmo\", shared.useOptions.ammo);\n      } else {\n        console.error(\"Attempted to set ammo for action that does not use ammo\");\n      }\n    }\n\n    // TODO: Remove this variable usage\n    shared.useMeasureTemplate = action.hasTemplate && game.settings.get(\"pf1\", \"placeMeasureTemplateOnQuickRolls\");\n\n    return new ActionUse(shared).process({ skipDialog });\n  }\n\n  /**\n   * Finds, filters and alters changes relevant to a context, and returns the result (as an array)\n   *\n   * @remarks - Always returns empty array if no actor is present.\n   * @param {\"mattack\"|\"rattack\"|\"nattack\"|\"tattack\"|\"wdamage\"|\"sdamage\"|\"rwdamage\"|\"twdamage\"|\"mwdamage\"|\"ndamage\"|\"rdamage\"|\"tdamage\"|\"mdamage\"} context - The given context.\n   * @returns {ItemChange[]} - The matching changes.\n   */\n  getContextChanges(context = [\"attack\"]) {\n    if (!this.actor) return [];\n    const targets = this.getContextStack(context);\n    return this.actor.changes.filter((c) => targets.has(c.target));\n  }\n\n  /**\n   * Retrieve stack of contexts related to the one given.\n   *\n   * @private\n   * @param {Array<string>} contexts Context subtarget ID array.\n   * @returns {Set<string>} - Modified context array.\n   */\n  getContextStack(contexts) {\n    const result = new Set(contexts);\n    for (const context of contexts) {\n      switch (context) {\n        case \"sattack\":\n        case \"wattack\":\n        case \"mattack\":\n        case \"rattack\":\n        case \"nattack\":\n        case \"tattack\":\n          result.add(\"attack\");\n          break;\n        case \"wdamage\":\n        case \"sdamage\":\n          result.add(\"damage\");\n          break;\n        case \"mwdamage\":\n        case \"rwdamage\":\n        case \"twdamage\":\n          result.add(\"damage\");\n          result.add(\"wdamage\");\n          break;\n      }\n    }\n\n    // Add generic ranged damage for ranged weapon damage and thrown weapon damage\n    if (result.has(\"rwdamage\") || result.has(\"twdamage\")) {\n      result.add(\"rdamage\");\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @returns {object} An object with data to be used in rolls in relation to this item.\n   */\n  getRollData() {\n    const actor = this.actor;\n    const result = { ...(actor?.getRollData() ?? {}) };\n\n    if (!actor) pf1.utils.rollData.addStatic(result);\n\n    result.item = foundry.utils.deepClone(this.system);\n\n    // Add @class\n    const classTag = result.item.class;\n    if (classTag) result.class = result.classes?.[classTag];\n\n    // Add dictionary flag\n    const tag = this.system.tag;\n    result.item.dFlags = result.dFlags?.[tag];\n\n    result.item.bFlags = Object.fromEntries(\n      Object.entries(result.item.flags?.boolean ?? {}).map(([key, value]) => [key, value ? 1 : 0])\n    );\n\n    // Set aura strength\n    if (this.isPhysical) {\n      result.item.auraStrength = this.auraStrength;\n\n      // Resize item\n      if (this.system.resizing && result.size !== undefined) {\n        result.item.size = result.size;\n      }\n    }\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  static chatListeners(html) {\n    html.on(\"click\", \".card-buttons button, .inline-action\", this._onChatCardButton.bind(this));\n    html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\n  }\n\n  /* -------------------------------------------- */\n\n  static async _onChatCardButton(event) {\n    event.preventDefault();\n\n    // Extract card data\n    const button = event.currentTarget;\n    button.disabled = true;\n    const card = button.closest(\".chat-card\");\n    const messageId = card.closest(\".message\").dataset.messageId;\n    const message = game.messages.get(messageId);\n    const action = button.dataset.action;\n\n    // Validate permission to proceed with the roll\n    // BUG: \"save\" is never actually used?\n    const isTargetted = [\"save\", \"applyDamage\"].includes(action);\n    if (!(isTargetted || game.user.isGM || message.isAuthor)) return;\n\n    if (action === \"applyDamage\") {\n      await this._onChatCardAction(action, { button, event });\n      button.disabled = false;\n      return;\n    }\n\n    // TODO: Clarify the following. Only used for ammo recovery?\n\n    // Get the Item\n    const actor = ChatMessage.getSpeakerActor(message.speaker);\n    const item = actor.items.get(card.dataset.itemId);\n\n    // Perform action\n    if (!(await this._onChatCardAction(action, { button, item, event }))) {\n      button.disabled = false;\n    }\n  }\n\n  /**\n   * Chat card actions\n   *\n   * @internal\n   * @param {string} action\n   * @param {object} options\n   * @param {Element} [options.button] - Button element\n   * @param {ItemPF} [options.item] - Item associated with card\n   * @param {Event} [options.event] - Triggering event\n   * @returns\n   */\n  static async _onChatCardAction(action, { button = null, item = null, event } = {}) {\n    const message = game.messages.get(button.closest(\".chat-message\").dataset.messageId);\n\n    // Apply damage\n    if (action === \"applyDamage\") {\n      let asNonlethal = false;\n      if (button.dataset.tags?.split(\" \").includes(\"nonlethal\")) asNonlethal = true;\n\n      const value = parseInt(button.dataset.value);\n      if (isNaN(value)) return void console.warn(\"Invalid damage value:\", value, { button });\n\n      const attackIndex = parseInt(button.closest(\"[data-index]\")?.dataset.index);\n      const attackType = button.dataset.type;\n\n      const attack = message.systemRolls?.attacks?.[attackIndex];\n      const isCritical = attackType === \"critical\";\n\n      const instances = [];\n      let damageRolls;\n      if (attack) {\n        if (attackType === \"normal\") damageRolls = attack.damage;\n        else if (isCritical) damageRolls = attack.critDamage;\n      }\n\n      const metadata = message.getFlag(\"pf1\", \"metadata\") ?? {};\n\n      if (damageRolls) {\n        for (const dmg of damageRolls) {\n          instances.push({\n            value: dmg.total,\n            types: dmg.damageType,\n          });\n        }\n      }\n\n      pf1.documents.actor.ActorPF.applyDamage(value, {\n        asNonlethal,\n        event,\n        element: button,\n        message,\n        isCritical,\n        critMult: isCritical ? metadata.config.critMult ?? 0 : 0,\n        instances,\n      });\n    }\n    // Recover ammunition\n    else if ([\"recoverAmmo\", \"forceRecoverAmmo\"].includes(action)) {\n      if (!item?.isOwner) return;\n\n      // Check for recovery state\n      const attackIndex = button.closest(\".chat-attack\").dataset.index;\n      if (!attackIndex) return;\n      const ammoId = button.closest(\".ammo\")?.dataset.ammoId || button.dataset.ammoId;\n      const ammoQuantity = button.closest(\".ammo\")?.dataset.ammoQuantity || button.dataset.ammoQuantity || 1;\n      if (ammoQuantity == 0) return;\n      const recoveryData = message.getFlag(\"pf1\", \"ammoRecovery\");\n      const ammoRecovery = recoveryData?.[attackIndex]?.[ammoId];\n      // Backwards compatibility (PF1 v10) with old messages\n      if (ammoRecovery?.failed === true) return;\n      // Recovered is the number recovered, the rest failed\n      if (ammoRecovery?.recovered !== undefined) return;\n\n      // Find ammo item\n      const ammoItem = item.actor.items.get(ammoId);\n      if (!ammoItem) return;\n      if (ammoItem.getFlag(\"pf1\", \"abundant\")) return; // Abundant is unrecoverable\n\n      let chance = 100;\n      if (action === \"recoverAmmo\") {\n        chance = ammoItem.system.recoverChance ?? 50;\n      }\n\n      // (Try to) recover ammo\n      let recovered = 0;\n      if (chance > 0) {\n        for (let i = 0; i < ammoQuantity; i++) {\n          if (chance <= Math.random() * 100) {\n            recovered += 1;\n          }\n        }\n      }\n\n      const promises = [];\n\n      // Update ammo if any were recovered\n      if (recovered > 0) promises.push(ammoItem.addCharges(recovered));\n\n      // Update chat card\n      promises.push(message.setFlag(\"pf1\", \"ammoRecovery\", { [attackIndex]: { [ammoId]: { recovered } } }));\n\n      await Promise.all(promises);\n\n      return true;\n    } else if (action === \"concentration\") {\n      // TODO: Apply bonuses on card if any\n      item.actor.rollConcentration(item.system.spellbook);\n    } else if (action === \"caster-level-check\") {\n      // TODO: Apply bonuses on card (e.g. CL increase in dialog, conditional modifiers, etc.)\n      item.actor.rollCL(item.system.spellbook);\n    }\n\n    return false;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle toggling the visibility of chat card content when the name is clicked\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  static _onChatCardToggleContent(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const card = header.closest(\".chat-card\");\n    const content = card.querySelector(\".card-content\");\n    content.style.display = content.style.display === \"none\" ? \"block\" : \"none\";\n\n    // Update chat popout size\n    const popout = header.closest(\".chat-popout\");\n    ui.windows[popout?.dataset.appid]?.setPosition();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Test if specified link can be created.\n   *\n   * @param {string} linkType - The type of link.\n   * @param {string} dataType - Either \"compendium\", \"data\" or \"world\".\n   * @param {object} targetItem - The target item to link to.\n   * @param {string} itemLink - The link identifier for the item.\n   * @returns {boolean} Whether a link to the item is possible here.\n   */\n  canCreateItemLink(linkType, dataType, targetItem, itemLink) {\n    const actor = this.actor;\n    const sameActor = actor && targetItem.actor && targetItem.actor.id === actor.id;\n\n    // Link happens between items on same actor?\n    const linkOnActor = [\"children\", \"charges\", \"ammunition\"].includes(linkType);\n    if (linkOnActor && !actor) return false;\n\n    // Don't create link to self\n    if (itemLink === this.id) return false;\n\n    // Don't re-create existing links\n    const links = this.system.links?.[linkType] || [];\n    if (links.some((o) => o.id === itemLink || o.uuid === itemLink)) return false;\n\n    const targetLinks = targetItem.system.links?.[linkType] ?? [];\n    if (linkOnActor && sameActor) {\n      if (linkType === \"charges\") {\n        // Prevent the closing of charge link loops\n        if (targetLinks.length > 0) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink\", { source: this.name, target: targetItem.name })\n          );\n          return false;\n        } else if (targetItem.links.charges != null) {\n          // Prevent the linking of one item to multiple resource pools\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink2\", {\n              source: this.name,\n              target: targetItem.name,\n              deeptarget: targetItem.links.charges.name,\n            })\n          );\n          return false;\n        }\n      }\n      return true;\n    }\n\n    // Allow class association links only from compendiums\n    if (linkType === \"classAssociations\" && dataType === \"compendium\") return true;\n    if (linkType === \"supplements\") {\n      // Allow supplement links only if not from an actor\n      if (!targetItem.actor) return true;\n      else ui.notifications.error(game.i18n.localize(\"PF1.LinkErrorNoActorSource\"));\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} linkType - The type of link.\n   * @param {string} dataType - Either \"compendium\", \"data\" or \"world\".\n   * @param {object} targetItem - The target item to link to.\n   * @param {string} itemLink - The link identifier for the item.\n   * @param {object} extraData - Additional data\n   * @returns {Array} An array to insert into this item's link data.\n   */\n  generateInitialLinkData(linkType, dataType, targetItem, itemLink, extraData = {}) {\n    const result = {\n      name: targetItem.name,\n    };\n\n    result.uuid = itemLink;\n\n    if (linkType === \"classAssociations\") {\n      result.level = 1;\n    }\n\n    // Remove name for various links\n    switch (linkType) {\n      case \"classAssociations\":\n      case \"supplements\":\n        // System packs are assumed static\n        if (game.packs.get(targetItem.pack)?.metadata.packageType === \"system\") {\n          delete result.name;\n        }\n        break;\n      case \"charges\":\n      case \"children\":\n        // Actor local links\n        delete result.name;\n        break;\n    }\n\n    // Merge in extra data\n    foundry.utils.mergeObject(result, extraData);\n\n    return result;\n  }\n\n  /**\n   * Creates a link to another item.\n   *\n   * @param {string} linkType - The type of link.\n   * e.g. \"children\", \"charges\", \"classAssociations\" or \"ammunition\".\n   * @param {string} dataType - Either \"compendium\", \"data\" or \"world\".\n   * @param {object} targetItem - The target item to link to.\n   * @param {string} itemLink - The link identifier for the item.\n   * e.g. UUID for items external to the actor, and item ID for same actor items.\n   * @param {object} [extraData] - Additional data to store int he link\n   * @returns {boolean} Whether a link was created.\n   */\n  async createItemLink(linkType, dataType, targetItem, itemLink, extraData) {\n    if (this.canCreateItemLink(linkType, dataType, targetItem, itemLink)) {\n      const link = this.generateInitialLinkData(linkType, dataType, targetItem, itemLink, extraData);\n      const itemData = this.toObject();\n      const links = foundry.utils.deepClone(itemData.system.links?.[linkType] ?? []);\n      links.push(link);\n      const itemUpdate = { _id: this.id, [`system.links.${linkType}`]: links };\n      const itemUpdates = [];\n\n      // Clear value, maxFormula and per from link target to avoid odd behaviour\n      if (linkType === \"charges\") {\n        itemUpdates.push({\n          _id: targetItem.id,\n          system: { uses: { \"-=value\": null, \"-=maxFormula\": null, \"-=per\": null, \"-=rechargeFormula\": null } },\n        });\n      }\n\n      if (this.actor && itemUpdates.length > 0) {\n        await this.actor.updateEmbeddedDocuments(\"Item\", [itemUpdate, ...itemUpdates]);\n      } else {\n        await this.update(itemUpdate);\n      }\n\n      // Call link creation hook\n      Hooks.callAll(\"pf1CreateItemLink\", this, link, linkType);\n\n      return true;\n    } else if (linkType === \"children\" && dataType !== \"data\") {\n      const itemData = targetItem.toObject();\n\n      // Default to spell-like tab until a selector is designed in the Links tab or elsewhere\n      if (itemData.type === \"spell\") itemData.system.spellbook = \"spelllike\";\n\n      const [newItem] = await this.actor.createEmbeddedDocuments(\"Item\", [itemData]);\n\n      await this.createItemLink(\"children\", \"data\", newItem, newItem.getRelativeUUID(this.actor));\n    }\n\n    return false;\n  }\n\n  /**\n   * Get item links of type\n   *\n   * @param {string} type - Link type\n   * @param {boolean} includeLinkData - Include link data, return value changes from item array to object array\n   * @param {object} [options={}] - Additional options\n   * @param {Set} [options._results] - Internal use only.\n   * @param {boolean} [options.recursive=false] - Retrieved linked items recursively.\n   * @returns {Item[]|object[]} - Linked items, or objects with linked items and additional data\n   */\n  async getLinkedItems(type, includeLinkData = false, { recursive = false, _results } = {}) {\n    const items = this.system.links?.[type];\n    if (!items) return [];\n\n    const results = _results ?? new Set();\n    for (const l of items) {\n      if (!l.uuid) continue;\n      const item = await fromUuid(l.uuid, { relative: this.actor });\n      if (item) {\n        if (includeLinkData) {\n          if (results.some((i) => i.item === item)) continue;\n        } else if (results.has(item)) continue;\n\n        if (includeLinkData) results.add({ item, linkData: l });\n        else results.add(item);\n\n        // Recursive\n        if (type !== \"charges\" && recursive) {\n          await item.getLinkedItems(type, { recursive, _results: results });\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Retrieve list of linked items for a type, synchronously.\n   * Intended mainly for fetching child or charge links quickly.\n   *\n   * @example\n   * const childItems = item.getLinkedItemsSync(\"children\");\n   * @param {string} type Link type, e.g. \"children\", \"charges\", or \"classAssociations\"\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.recursive=false] - Retrieve links recursively.\n   * @param {Set<string>} [options._results] - Internal use only\n   * @returns {Item[]|object[]} Linked items or their compendium index data\n   */\n  getLinkedItemsSync(type, { recursive = false, _results } = {}) {\n    const links = this.system.links?.[type];\n    if (!links) return [];\n\n    const results = _results ?? new Set();\n    for (const linkData of links) {\n      if (!linkData.uuid) continue;\n      const item = fromUuidSync(linkData.uuid, { relative: this.actor });\n      if (item) {\n        if (results.has(item)) continue;\n        results.add(item);\n\n        // Recursive\n        if (type !== \"charges\" && recursive) {\n          item.getLinkedItemsSync(type, { recursive, _results: results });\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Get all items linked by any means.\n   *\n   * @returns {Item[]}\n   */\n  async getAllLinkedItems() {\n    const result = [];\n\n    for (const items of Object.values(this.system.links ?? {})) {\n      for (const l of items) {\n        if (!l.uuid) continue;\n        const item = await fromUuid(l.uuid, { relative: this.actor });\n        if (item) result.push(item);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes all link references to an item.\n   *\n   * @param {string} uuid - The UUID of the item to remove links to.\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.commit=true] - Commit changes to database. If false, resulting update data is returned instead.\n   * @returns {Promise<Item|object|undefined>}\n   */\n  async removeItemLink(uuid, { commit = true } = {}) {\n    const updateData = {};\n    for (const [type, linkItems] of Object.entries(this.system.links ?? {})) {\n      const items = foundry.utils.deepClone(linkItems);\n      const idx = items.findIndex((item) => item.uuid === uuid);\n      if (idx >= 0) {\n        items.splice(idx, 1);\n        updateData[`system.links.${type}`] = items;\n      }\n    }\n\n    if (!foundry.utils.isEmpty(updateData)) {\n      if (commit) return this.update(updateData);\n      return updateData;\n    }\n  }\n\n  /**\n   * @deprecated\n   * @param {object} linkData - Link data\n   * @param {boolean} [extraData=false] - Deprecated: Include link data in return value\n   * @returns {Item|null} - Linked item if it exists\n   */\n  async getLinkItem(linkData, extraData = false) {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF.getLinkItem() is deprecated in favor of fromUuid(linkData.uuid, {relative:actor})\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    const item = await fromUuid(linkData.uuid, { relative: this.actor });\n\n    // Package extra data\n    if (extraData) {\n      return { item, linkData };\n    }\n\n    return item;\n  }\n\n  /**\n   * Retrieve item referred to by a link in .system.links data\n   *\n   * @deprecated\n   * @param {object} linkData Link data\n   * @returns {Item|object|undefined} Linked item, undefined, or compendium index data\n   */\n  getLinkedItemSync(linkData = {}) {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF.getLinkedItemSync() is deprecated in favor of fromUuidSync(linkData.uuid, {relative:actor})\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return fromUuidSync(linkData.uuid, { relative: this.actor });\n  }\n\n  /**\n   * Generates lists of change targets this item can have.\n   *\n   * @param {string} target - The target key, as defined in PF1.buffTargets.\n   * @returns {Object<string, string>} A list of changes\n   */\n  getChangeTargets(target) {\n    const result = {};\n    // Add specific skills\n    if (target === \"skill\") {\n      if (!this.actor) {\n        for (const [s, skl] of Object.entries(pf1.config.skills)) {\n          result[`skill.${s}`] = skl;\n        }\n      } else {\n        const actorSkills = foundry.utils.mergeObject(pf1.config.skills, this.actor.system.skills, { inplace: false });\n        for (const [s, skl] of Object.entries(actorSkills)) {\n          if (!skl.subSkills) {\n            if (skl.custom) result[`skill.${s}`] = skl.name;\n            else result[`skill.${s}`] = pf1.config.skills[s];\n          } else {\n            for (const [s2, skl2] of Object.entries(skl.subSkills)) {\n              result[`skill.${s}.${s2}`] = `${pf1.config.skills[s]} (${skl2.name})`;\n            }\n          }\n        }\n      }\n    }\n    // Add static subtargets\n    else if (foundry.utils.hasProperty(pf1.config.buffTargets, target)) {\n      for (const [k, v] of Object.entries(pf1.config.buffTargets[target])) {\n        if (!k.startsWith(\"_\") && !k.startsWith(\"~\")) result[k] = v;\n      }\n    }\n\n    return result;\n  }\n\n  getChangeSubTargets(target) {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF.getChangeSubTargets() is deprecated in favor of ItemPF.getChangeTargets\",\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n    return this.getChangeTargets(target);\n  }\n\n  getValue() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.getValue() is deprecated, only physical items have value\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return 0;\n  }\n\n  /**\n   * Sets a boolean flag on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async addItemBooleanFlag(flagName, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (Array.isArray(flags)) throw new Error(`${this.name} [${this.id}] requires migration.`);\n\n    if (flags[flagName] === undefined) {\n      await this.update({ [`system.flags.boolean.${flagName}`]: true }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a boolean flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemBooleanFlag(flagName, context = {}) {\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.boolean.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag on this item.\n   * @returns {boolean} Whether the flag was found on this item.\n   */\n  hasItemBooleanFlag(flagName) {\n    const flags = this.system.flags?.boolean ?? {};\n    return flags[flagName] === true;\n  }\n\n  /**\n   * Get all item boolean flags as array.\n   *\n   * @returns {string[]}\n   */\n  getItemBooleanFlags() {\n    const flags = this.system.flags?.boolean ?? {};\n    return Object.keys(flags);\n  }\n\n  /**\n   * Sets a dictionary flag value on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {number|string} value - The flag's new value.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async setItemDictionaryFlag(flagName, value, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== value) {\n      await this.update({ [`system.flags.dictionary.${flagName}`]: value }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a dictionary flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemDictionaryFlag(flagName, context = {}) {\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.dictionary.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag to get.\n   * @returns {string|number|undefined} The value stored in the flag.\n   */\n  getItemDictionaryFlag(flagName) {\n    const flags = this.system.flags?.dictionary || {};\n    return flags[flagName];\n  }\n\n  /**\n   * Get all item dictionary flags as array of objects.\n   *\n   * @returns {object[]}\n   */\n  getItemDictionaryFlags() {\n    const flags = this.system.flags?.dictionary || {};\n    return flags;\n  }\n\n  /**\n   * Get attack array for specific action.\n   *\n   * @param {string} actionId Action identifier.\n   * @returns {number[]} Simple array describing the individual guaranteed attacks.\n   */\n  getAttackArray(actionId) {\n    foundry.utils.logCompatibilityWarning(\n      `ItemPF.getAttackArray() is deprecated. Use ItemAction.getAttacks() instead.`,\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    const action = this.actions.get(actionId),\n      actionData = action?.data,\n      rollData = action?.getRollData();\n    if (!actionData) return [0];\n\n    const attacks = action.getAttacks({ full: true, rollData, conditionals: true, bonuses: true });\n\n    return attacks;\n  }\n\n  /**\n   * Get default action's attack array.\n   *\n   * @returns {number[]} Simple array describing the individual guaranteed attacks.\n   */\n  get attackArray() {\n    foundry.utils.logCompatibilityWarning(`ItemPF.attackArray is deprecated. Use ItemAction.getAttacks() instead.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.getAttackArray(this.defaultAction.id);\n  }\n\n  /**\n   * Attack sources for a specific action.\n   *\n   * @param {string} actionId Action ID\n   * @param {object} [options={}] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack, or undefined if the action is missing.\n   */\n  getAttackSources(actionId, { rollData } = {}) {\n    /** @type {pf1.components.ItemAction} */\n    const action = this.actions.get(actionId);\n    if (!action) return;\n\n    const sources = [];\n\n    const actorData = this.actor?.system,\n      itemData = this.system,\n      actionData = action.data;\n\n    if (!actorData || !actionData) return sources;\n    rollData ??= action.getRollData();\n\n    const describePart = (value, name, modifier, sort = 0) => {\n      if (value == 0) return;\n      sources.push({ value, name, modifier, sort });\n    };\n\n    const isManeuver = action.isCombatManeuver;\n\n    // Unreliable melee/ranged identification\n    const sizeBonus = !isManeuver\n      ? pf1.config.sizeMods[rollData.traits.size]\n      : pf1.config.sizeSpecialMods[rollData.traits.size];\n\n    // Add size bonus\n    if (sizeBonus != 0) describePart(sizeBonus, game.i18n.localize(\"PF1.Size\"), \"size\", -20);\n\n    const changeSources = action.attackSources;\n\n    const effectiveChanges = getHighestChanges(changeSources, { ignoreTarget: true });\n    effectiveChanges.forEach((ic) => {\n      let value = ic.value;\n      // BAB override\n      if (actionData.bab && ic._id === \"_bab\") {\n        value = RollPF.safeRollSync(ic.formula, rollData).total || 0;\n      }\n      describePart(value, ic.flavor, ic.type, -800);\n    });\n\n    if (actionData.ability.attack) {\n      const ablMod = actorData.abilities?.[actionData.ability.attack]?.mod ?? 0;\n      describePart(ablMod, pf1.config.abilities[actionData.ability.attack], \"untyped\", -50);\n    }\n\n    // Attack bonus formula\n    const bonusRoll = RollPF.safeRollAsync(actionData.attackBonus || \"0\", rollData);\n    if (bonusRoll.total != 0)\n      describePart(bonusRoll.total, bonusRoll.flavor ?? game.i18n.localize(\"PF1.AttackRollBonus\"), \"untyped\", -100);\n\n    // Masterwork or enhancement bonus\n    // Only add them if there's no larger enhancement bonus from some other source\n    const virtualEnh = action.enhancementBonus ?? (itemData.masterwork ? 1 : 0);\n    if (!effectiveChanges.find((i) => i.type === \"enh\" && i.value > virtualEnh)) {\n      if (Number.isFinite(action.enhancementBonus) && action.enhancementBonus !== 0) {\n        describePart(action.enhancementBonus, game.i18n.localize(\"PF1.EnhancementBonus\"), \"enh\", -300);\n      } else if (itemData.masterwork) {\n        describePart(1, game.i18n.localize(\"PF1.Masterwork\"), \"enh\", -300);\n      }\n    }\n\n    // Add proficiency penalty\n    try {\n      if (!this.getProficiency(true)) {\n        describePart(-4, game.i18n.localize(\"PF1.Proficiency.Penalty\"), \"untyped\", -500);\n      }\n    } catch (error) {\n      // Ignore proficiency incompatibility.\n    }\n\n    // Broken condition\n    if (this.isBroken) {\n      describePart(-2, game.i18n.localize(\"PF1.Broken\"), \"untyped\", -500);\n    }\n\n    // Add secondary natural attack penalty\n    if (actionData.naturalAttack.primaryAttack !== true && itemData.subType === \"natural\") {\n      const attackBonus = actionData.naturalAttack?.secondary?.attackBonus || \"-5\";\n      const secondaryModifier = RollPF.safeRollSync(`${attackBonus}`, rollData).total ?? 0;\n      describePart(secondaryModifier, game.i18n.localize(\"PF1.SecondaryAttack\"), \"untyped\", -400);\n    }\n\n    // Conditional modifiers\n    actionData.conditionals\n      .filter((c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\"))\n      .forEach((c) => {\n        c.modifiers.forEach((cc) => {\n          if (cc.subTarget === \"allAttack\") {\n            const bonusRoll = RollPF.safeRollAsync(cc.formula, rollData);\n            if (bonusRoll.total == 0) return;\n            describePart(bonusRoll.total, c.name, cc.type, -5000);\n          }\n        });\n      });\n\n    return sources.sort((a, b) => b.sort - a.sort);\n  }\n\n  /**\n   * Return attack sources for default action.\n   *\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack.\n   */\n  get attackSources() {\n    return this.getAttackSources(this.defaultAction.id);\n  }\n\n  getAllDamageSources(actionId) {\n    return this.actions.get(actionId)?.allDamageSources;\n  }\n\n  /**\n   * Generic damage source retrieval for default action, includes default conditionals and other item specific modifiers.\n   *\n   * @returns {ItemChange[]|undefined} All relevant changes, or undefined if action was not found.\n   */\n  get allDamageSources() {\n    return this.getAllDamageSources(this.defaultAction.id);\n  }\n\n  /** @type {boolean} - Is this item in a container? */\n  get inContainer() {\n    return !!this.parentItem;\n  }\n\n  /**\n   * @internal\n   * @type {Item} - Root item. The item at bottom of the container tree.\n   */\n  get rootItem() {\n    return this.parentItem?.rootItem ?? this;\n  }\n}\n\n/**\n * @typedef {object} ChatData\n * Data required to render an item's summary or chat card, including descriptions and properties/tags/labels\n * @property {string} description - The item's enriched description as appropriate for the current user\n * @property {string} identifiedDescription - The item's full enriched description when identified\n * @property {string} unidentifiedDescription - The item's enriched description when unidentified\n * @property {string} [actionDescription] - The enriched description of a specific action\n * @property {string[]} properties - Additional properties/labels for the item and the action\n */\n\n/**\n * @typedef {object} SharedActionData\n * A common data object used to store and share data between stages of an action's usage.\n * @property {Event | null} event - The event that triggered the action. Defaults to `null`.\n * @property {object} rollData - The singular rollData object used for all rolls in the action\n * @property {boolean} skipDialog - Whether the user-facing dialog should get skipped. Defaults to `false`.\n * @property {boolean} chatMessage - Whether a chat message should be created at the end of the action's usage. Defaults to `true`.\n * @property {ChatMessage} message - Chat message once it is created.\n * @property {string} dice - The base dice used for the action's attack rolls. Defaults to return value of `pf1.dice.D20RollPF.standardRoll`.\n * @property {boolean} fullAttack - Whether the action is a full attack. Defaults to `true`.\n * @property {string[]} attackBonus - Bonus values to be added to the attack roll formula\n * @property {string[]} damageBonus - Bonus values to be added to the damage roll formula\n * @property {ActionUseAttack[]} attacks - Array of attacks\n * @property {pf1.actionUse.ChatAttack[]} chatAttacks - Array of chat attacks for this action's use\n * @property {string} rollMode - The roll mode to be used for the creation of the chat message. Defaults to the `core.rollMode` setting.\n * @property {boolean} useMeasureTemplate - Whether to use a measure template\n * @property {object[] | null} conditionals\n * @property {object} conditionalPartsCommon\n * @property {boolean} casterLevelCheck\n * @property {boolean} concentrationCheck\n * @property {object} scriptData\n * @property {ItemAction} action - The {@link ItemAction} this use is based on\n * @property {ItemPF} item - The {@link ItemPF} this use is based on\n * @property {object} chatData - Data to be passed to {@link ChatMessage.create}, excluding `content` rendered using {@link templateData} and {@link template}.\n * @property {string} [chatTemplate] - The template to be used for the creation of the chat message.\n * @property {MeasuredTemplateDocument} template - Template document.\n * @property {object} templateData - Data used to render the chat card, passed to {@link foundry.utils.renderTemplate}.\n * @property {Token[]} targets - Targeted tokens\n */\n\n/**\n * Additional options for (action) use.\n *\n * @typedef {object} UseOptions\n * @property {boolean} [primaryAttack] - Set primary attack state\n * @property {boolean} [clCheck] - Set caster level check state\n * @property {boolean} [measureTemplate] - Set measure template state\n * @property {boolean} [powerAttack] - Set power attack state\n * @property {\"normal\"|\"2h\"|\"twohanded\"|\"oh\"|\"offhand\"} [held] - Set held option (for power attack mode).\n * @property {number} [abilityMult] - Ability score damage multiplier\n * @property {string} [ammo] - Ammo item ID to use.\n * @property {boolean} [haste] - Enable Haste\n * @property {boolean} [manyshot] - Enable Manyshot\n * @property {boolean} [rapidShot] - Enable Rapid Shot\n */\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Attack item\n *\n * Non-specific combat related actions. Mainly used to populate the combat tab.\n */\nexport class ItemAttackPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Remove held option if type changed to natural attack\n    if (changed.system.subType === \"natural\") {\n      changed.system.held = null;\n    }\n  }\n\n  /** @type {boolean} - This attack pretends to be physical item. */\n  get isQuasiPhysical() {\n    return [\"weapon\", \"item\"].includes(this.subType);\n  }\n\n  /**\n   * {@inheritDoc ItemPhysicalPF.isBroken}\n   */\n  get isBroken() {\n    if (!this.isQuasiPhysical) return false;\n    return this.system.broken === true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Attacks do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n\n    // Non-weapon attacks always proficient\n    if (this.subType !== \"weapon\") return true;\n\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * Creates attack from provided item.\n   *\n   * @remarks - Only supports weapon item type.\n   * @param {Item} item - Source item\n   * @throws {Error} - On unsupported type\n   * @returns {object} - Attack item data\n   */\n  static fromItem(item) {\n    if (item.type !== \"weapon\") throw new Error(`Unsupported item type \"${item.type}\"`);\n\n    const srcData = item.toObject().system;\n\n    // Convert single-use to 1 max charge\n    const uses = srcData.uses ?? {};\n    if (uses.per === \"single\") {\n      uses.per = \"charges\";\n      uses.maxFormula = \"1\";\n    }\n\n    // Get attack template\n    const attackItem = {\n      name: item.name,\n      type: \"attack\",\n      img: item.img,\n      system: {\n        subType: \"weapon\",\n        weapon: {\n          category: srcData.subType,\n          type: srcData.weaponSubtype,\n        },\n        held: srcData.held,\n        masterwork: srcData.masterwork,\n        proficient: srcData.proficient,\n        enh: srcData.enh,\n        broken: item.isBroken,\n        timeworn: srcData.timeworn,\n        cursed: srcData.cursed,\n        artifact: srcData.artifact,\n        baseTypes: srcData.baseTypes,\n        tags: srcData.tags,\n        weaponGroups: srcData.weaponGroups,\n        actions: srcData.actions ?? [],\n        material: srcData.material,\n        alignments: srcData.alignments,\n        attackNotes: srcData.attackNotes ?? [],\n        effectNotes: srcData.effectNotes ?? [],\n      },\n    };\n\n    // Ensure action IDs are correct and unique\n    for (const action of attackItem.system.actions) {\n      action._id = foundry.utils.randomID(16);\n    }\n\n    return attackItem;\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.attackTypes[this.subType];\n\n    if (this.subType === \"weapon\") {\n      // Type and subtype labels\n      const wcat = itemData.weapon?.category || \"simple\";\n      const wtype = itemData.weapon?.type || \"light\";\n\n      labels.weapon ??= {};\n      const cat = pf1.config.weaponTypes[wcat];\n      labels.weapon.category = cat?._label;\n      labels.weapon.type = cat?.[wtype];\n    }\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\n/**\n * Buff item\n *\n * More or less ephemeral effects, such as spell buffs.\n */\nexport class ItemBuffPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Add activation time when not present\n    if (changed.system?.active && changed.system?.duration?.start === undefined) {\n      foundry.utils.setProperty(changed, \"system.duration.start\", game.time.worldTime);\n    }\n\n    if (this.isActive && changed.system?.active == false) {\n      const effect = this.effect;\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Update data\n   * @param {object} context - Update context options\n   * @param {string} userId - User ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (changed.system === undefined) return; // No system data updates\n\n    // Following requires actor\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Toggle buff hook\n    const isActive = changed.system?.active;\n    if (isActive !== undefined) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, isActive);\n    }\n\n    // Following should only run on triggering user\n    if (game.user.id !== userId) return;\n\n    this._updateTrackingEffect(changed);\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {string} userId - User ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    const actor = this.actor;\n    const isActive = this.isActive;\n    if (actor && isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, true);\n    }\n\n    if (game.user.id !== userId) return;\n\n    if (isActive) {\n      this._updateTrackingEffect(data);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    // Run script call(s)\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        const startTime = context.pf1?.startTime;\n        this.executeScriptCalls(\"toggle\", { state: false, startTime });\n      }\n    }\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Call buff removal hook\n    if (this.isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, false);\n    }\n  }\n\n  /**\n   * Toggle active effect icon as necessary.\n   *\n   * @param {object} changed Update data\n   * @param {string} userId  User ID\n   */\n  async _updateTrackingEffect(changed, userId) {\n    // Toggle icon if active state has changed\n    const isActive = changed.system.active;\n    if (isActive === undefined) return;\n\n    const oldEffect = this.effect;\n\n    // Remove old AE\n    if (!isActive) {\n      oldEffect?.delete({ render: false });\n    }\n    // Add new AE or update old AE\n    else {\n      const aeData = await this.getRawEffectData();\n      aeData.active = isActive;\n      aeData.transfer = true;\n      setProperty(aeData, \"flags.pf1.tracker\", true);\n\n      // Update old\n      if (oldEffect) oldEffect.update(aeData);\n      // Create new\n      else ActiveEffect.implementation.create(aeData, { parent: this });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preDelete(context, user) {\n    const effect = this.effect;\n    if (effect) {\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n      // Delete associated effect\n      // TODO: Remove this eventually, it is only needed by old items/actors\n      if (effect?.parent !== this) {\n        await effect.delete({ pf1: { delete: this.uuid } });\n      }\n    }\n\n    await super._preDelete(context, user);\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.buffTypes[itemData.subType];\n\n    if (this.system.duration) {\n      const duration = this.system.duration;\n      const unit = pf1.config.timePeriodsShort[duration.units];\n      if (unit === \"turn\") {\n        labels.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n      } else if (unit && duration.value) {\n        try {\n          // TODO: Durations can be variable, variable durations need to be supported.\n          rollData ??= this.getRollData();\n          const roll = RollPF.safeRollSync(\n            duration.value,\n            rollData,\n            { formula: duration.value, item: this },\n            {},\n            { maximize: true }\n          );\n          let value;\n          if (roll.isDeterministic) {\n            value = roll.total ?? 0;\n          } else {\n            value = pf1.utils.formula.simplify(duration.value, rollData);\n          }\n          labels.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n        } catch (e) {\n          console.warn(`Error with buff duration formula \"${duration.value}\"`, this);\n        }\n      }\n    }\n\n    return labels;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    super._prepareDependentData(final);\n\n    this._prepareDuration();\n    this._prepareTraits();\n  }\n\n  /**\n   * Prepare trait selector managed data.\n   *\n   * @internal\n   */\n  _prepareTraits() {\n    const conds = (this.system.conditions ??= {});\n    conds.all = new Set([...(conds.value ?? []), ...(conds.custom ?? [])]);\n  }\n\n  /**\n   * Prepare .system.duration\n   *\n   * @deprecated Remove with PF1 v11\n   * @internal\n   * @param {object} [options] Additional options\n   * @param {object} [options.rollData] Roll data instance. New instance is generated if undefined and needed.\n   */\n  _prepareDuration({ rollData } = {}) {\n    const itemData = this.system;\n\n    const duration = itemData.duration ?? {};\n    const { units, value: formula } = duration;\n    if (!units) return;\n\n    // Add total duration in seconds\n    let seconds = NaN;\n    if (units === \"turn\") {\n      seconds = CONFIG.time.roundTime;\n    } else {\n      if (!formula) return;\n      rollData ??= this.getRollData();\n      const roll = RollPF.safeRollSync(formula, rollData, { formula, item: this }, {}, { minimize: true });\n      if (!roll.isDeterministic) return;\n      const duration = roll.isDeterministic ? roll.total : roll.formula;\n      switch (units) {\n        case \"hour\":\n          seconds = duration * 60 * 60;\n          break;\n        case \"minute\":\n          seconds = duration * 60;\n          break;\n        case \"round\":\n          seconds = duration * CONFIG.time.roundTime;\n          break;\n      }\n    }\n    itemData.duration.totalSeconds = seconds;\n  }\n\n  /**\n   * Duration of the buff in seconds.\n   *\n   * @internal\n   * @param {object} [options]\n   * @param {object} [options.rollData]\n   * @returns {number|null} Duration in seconds or null if if it has no duration.\n   */\n  async getDuration({ rollData } = {}) {\n    const duration = this.system.duration ?? {};\n    const { units, value: formula } = duration;\n    if (!units) return null;\n\n    rollData ??= this.getRollData();\n\n    // Add total duration in seconds\n    let seconds = 0;\n    if (units === \"turn\") {\n      seconds = CONFIG.time.roundTime;\n    } else {\n      if (!formula) return;\n      rollData ??= this.getRollData();\n      // TODO: Make this roll somehow known\n      const duration = await RollPF.safeRollAsync(formula, rollData).total;\n      switch (units) {\n        case \"hour\":\n          seconds = duration * 60 * 60;\n          break;\n        case \"minute\":\n          seconds = duration * 60;\n          break;\n        case \"round\":\n          seconds = duration * CONFIG.time.roundTime;\n          break;\n      }\n    }\n    return seconds;\n  }\n\n  /**\n   * Create basic Active Effect data based on the item.\n   *\n   * @internal\n   * @param {object} options\n   * @param {object} options.rollData\n   * @returns {object}\n   */\n  async getRawEffectData({ rollData } = {}) {\n    const createData = await super.getRawEffectData();\n\n    createData.statuses = Array.from(this.system.conditions.all);\n\n    // Add buff durations\n    const duration = this.system.duration;\n    const formula = `${duration.value}`;\n\n    let endTiming = this.system.duration.end || \"turnStart\";\n\n    let seconds;\n    if (duration.units === \"turn\") {\n      endTiming = \"turnEnd\";\n      seconds = 0;\n    } else if (formula) {\n      seconds = await this.getDuration({ rollData });\n    }\n\n    createData.duration.seconds = seconds;\n\n    const flags = { duration: {} };\n\n    // Record end timing\n    flags.duration.end = endTiming;\n\n    // Record initiative\n    flags.duration.initiative = game.combat?.initiative;\n\n    foundry.utils.mergeObject(createData, { \"flags.pf1\": flags });\n\n    return createData;\n  }\n\n  /**\n   * @override\n   */\n  getRollData() {\n    const result = super.getRollData();\n\n    result.item.level = this.system.level;\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isActive() {\n    return this.system.active ?? false;\n  }\n\n  /**\n   * Retrieve associated tracking Active Effect\n   *\n   * @type {ActiveEffect|undefined}\n   */\n  get effect() {\n    return this.effects.find((ae) => ae.getFlag(\"pf1\", \"tracker\") === true);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async setActive(active, context) {\n    return this.update({ \"system.active\": active }, context);\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\n/**\n * Class-like item\n *\n * For base classes, NPC classes, racial HD, and mythic paths.\n */\nexport class ItemClassPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Set level marker\n    if (changed.system.level !== undefined) {\n      context.pf1 ??= {};\n      context.pf1.level ??= {};\n      context.pf1.level.old = this.system.level;\n    }\n\n    // Ensure class associations remain in level order\n    const classLinks = changed.system.links?.classAssociations;\n    if (classLinks?.length) {\n      classLinks.forEach((link) => (link.level ||= 1));\n      classLinks.sort((a, b) => a.level - b.level);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (userId !== game.user.id) return;\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Adjust associations if any exist\n    const level = this.system.level ?? 0;\n    if (level > 0) {\n      this._onLevelChange(0, level, { event: \"create\" });\n    }\n\n    // Create spellbook if the class has spellcasting defined\n    if (this.system.casting?.type) {\n      const bookData = { ...this.system.casting, class: this.system.tag };\n      actor.createSpellbook(bookData);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (userId !== game.user.id) return;\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Adjust associations if any exist\n    const prevLevel = this.system.level;\n    if (prevLevel > 0) {\n      this._onLevelChange(prevLevel, 0, { event: \"delete\" });\n    }\n\n    // Disable book associated with this class, if it has spellcasting defined\n    const tag = this.system.tag;\n    if (!tag || !this.system.casting?.type) return;\n    const books = actor.system.attributes.spells.spellbooks ?? {};\n    const usedBook = Object.entries(books).find(([bookId, book]) => !!book.class && book.class === tag);\n    if (usedBook === undefined) return;\n    const [bookId, book] = usedBook;\n    if (book.inUse) {\n      actor.update({ [`system.attributes.spells.spellbooks.${bookId}.inUse`]: false });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Do following processing only on the triggering user\n    if (game.user.id !== userId) return;\n\n    // Update class associations if level changed\n    const newLevel = changed.system?.level;\n    if (newLevel !== undefined) {\n      const prevLevel = context.pf1?.level?.old ?? 0;\n      this._onLevelChange(prevLevel, newLevel ?? 0, { event: \"update\" });\n    }\n  }\n\n  /**\n   * Add or remove class associations on level change.\n   *\n   * @param {number} curLevel Current level, before the change.\n   * @param {number} newLevel New level, after the change.\n   * @param {object} [options] - Additional options\n   * @param {\"delete\"|\"update\"|\"create\"} [options.event] - Relevant event\n   */\n  async _onLevelChange(curLevel = 0, newLevel = 0, { event } = {}) {\n    const actor = this.actor;\n    if (!actor) return;\n\n    if (curLevel === newLevel) return;\n\n    // Add items associated to this class\n    if (newLevel > curLevel) {\n      const associations = this.system.links?.classAssociations ?? [];\n      const newAssociations = associations.filter((link) => link.level > curLevel && link.level <= newLevel);\n\n      const sources = new Map();\n\n      const newItems = [];\n      for (const link of newAssociations) {\n        const item = await fromUuid(link.uuid);\n        if (!item) {\n          const msg = `Could not find class association: ${link.uuid}`;\n          console.warn(link.uuid, msg, this);\n          ui.notifications?.warn(msg, { console: false });\n          continue;\n        }\n\n        sources.set(item.uuid, link);\n\n        // Apply Foundry's transformations for importing (automatically calls .toObject())\n        // This adds flags.core.sourceId, removes extraneous permissions, resets sorting, etc.\n        const itemData = game.items.fromCompendium(item, { clearFolder: true });\n\n        // Set associated class\n        itemData.system.class = this.system.tag;\n\n        newItems.push({ data: itemData, link });\n      }\n\n      if (newItems.length) {\n        const itemsCreationData = newItems.sort((a, b) => a.link.level - b.link.level).map((o) => o.data);\n        // Put new items at end of their types\n        const _typeSorting = {};\n        for (const item of itemsCreationData) {\n          _typeSorting[item.type] ??= actor.itemTypes[item.type].sort((a, b) => b.sort - a.sort)[0]?.sort ?? 0;\n          _typeSorting[item.type] += CONST.SORT_INTEGER_DENSITY;\n          item.sort = _typeSorting[item.type];\n        }\n        const items = await actor.createEmbeddedDocuments(\"Item\", itemsCreationData);\n\n        const classAssociations = {};\n        const updateData = { flags: { pf1: { links: { classAssociations } } } };\n        for (const item of items) {\n          const link = sources.get(item.getFlag(\"core\", \"sourceId\"));\n\n          // Set class association flags\n          classAssociations[item.id] = link?.level ?? 1;\n        }\n\n        await this.update(updateData, { render: false });\n      }\n    }\n\n    // Remove items associated to this class\n    if (newLevel < curLevel) {\n      const associations = foundry.utils.deepClone(this.getFlag(\"pf1\", \"links.classAssociations\") || {});\n\n      const itemIds = [];\n      for (const [id, level] of Object.entries(associations)) {\n        const item = actor.items.get(id);\n        if (!item) {\n          delete associations[id];\n          continue;\n        }\n\n        if (level > newLevel) {\n          itemIds.push(item.id);\n          delete associations[id];\n        }\n      }\n\n      if (event !== \"delete\") await this.setFlag(\"pf1\", \"links.classAssociations\", associations);\n\n      await Item.implementation.deleteDocuments(itemIds, { parent: actor });\n    }\n\n    // Call level change hook\n    Hooks.callAll(\"pf1ClassLevelChange\", this.actor, this, curLevel, newLevel);\n  }\n\n  /**\n   * @override\n   */\n  prepareBaseData() {\n    super.prepareBaseData();\n    const itemData = this.system;\n    // Reset cached HD/MT\n    // Can't prepare here as the actor uses this info before item preparation is done.\n    itemData.hitDice = undefined;\n    itemData.mythicTier = undefined;\n\n    // Soft fill default casting details when missing\n    if (itemData.casting?.type) {\n      itemData.casting.progression ??= \"high\";\n      itemData.casting.ability ??= \"int\";\n      itemData.casting.spells ??= \"arcane\";\n      itemData.casting.domainSlots ??= 1;\n      itemData.casting.cantrips ??= true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const itemData = this.system;\n\n    const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\");\n\n    // Prepare class base save\n    {\n      const saveFormulas = useFractional\n        ? pf1.config.classFractionalSavingThrowFormulas\n        : pf1.config.classSavingThrowFormulas;\n\n      for (const save of Object.keys(pf1.config.savingThrows)) {\n        const classType = itemData.subType || \"base\";\n        let formula;\n        const saveData = itemData.savingThrows[save];\n        const saveType = saveData.value;\n        if (saveType === \"custom\") {\n          formula = saveData.custom || \"0\";\n        } else {\n          formula = saveFormulas[classType][saveType];\n        }\n        if (formula == null) formula = \"0\";\n        const total = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n        saveData.base = total;\n        if (useFractional) saveData.good = saveFormulas[classType].goodSave === true && saveType === \"high\";\n      }\n    }\n\n    // Prepare BAB\n    {\n      const babFormulas = useFractional ? pf1.config.classFractionalBABFormulas : pf1.config.classBABFormulas;\n\n      const babType = itemData.bab;\n      let formula;\n      if (babType === \"custom\") {\n        formula = itemData.babFormula || \"0\";\n      } else {\n        formula = babFormulas[babType] || \"0\";\n      }\n      itemData.babBase = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n    }\n\n    // Feed info back to actor\n    // Unlinked actors sometimes call item prep when actor isn't prepped and they're lacking .system\n    if (this.actor?.system) this._registerOnActor();\n  }\n\n  /**\n   * Register this item on actor in relevant places.\n   *\n   * @internal\n   */\n  _registerOnActor() {\n    const actor = this.actor;\n    if (!actor.classes) return; // actor prep has not run for some reason (unlinked actor)\n\n    const actorData = actor.system,\n      itemData = this.system;\n\n    // Don't record a link of tag is missing or empty.\n    if (!itemData.tag) return void console.error(\"Class doesn't have a tag\", this);\n\n    if (!itemData.subType) console.warn(`${this.name} lacks class type`, this);\n\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\").getClassHD(this);\n\n    const isBaseClass = (itemData.subType || \"base\") === \"base\";\n    const isMythic = itemData.subType === \"mythic\";\n\n    actor.classes[itemData.tag] = {\n      _id: this.id,\n      level: itemData.level,\n      unlevel: itemData.level,\n      name: this.name,\n      hd: itemData.hd,\n      hitDice: this.hitDice,\n      mythicTier: this.mythicTier,\n      bab: itemData.bab,\n      hp: healthConfig.auto,\n      type: itemData.subType,\n      isBase: isBaseClass,\n      isMythic,\n      savingThrows: {\n        fort: itemData.savingThrows.fort.base,\n        ref: itemData.savingThrows.ref.base,\n        will: itemData.savingThrows.will.base,\n      },\n      fc: {\n        hp: isBaseClass ? itemData.fc.hp.value : 0,\n        skill: isBaseClass ? itemData.fc.skill.value : 0,\n        alt: isBaseClass ? itemData.fc.alt.value : 0,\n      },\n    };\n  }\n\n  /** @type {number} - Number of hit dice */\n  get hitDice() {\n    const itemData = this.system;\n    if (itemData.hitDice === undefined) {\n      if (itemData.subType === \"mythic\") {\n        itemData.hitDice = 0;\n      } else if (itemData.customHD?.length > 0) {\n        const rollData = { item: { level: this.system.level } };\n        itemData.hitDice = RollPF.safeRollSync(itemData.customHD, rollData).total;\n      } else {\n        itemData.hitDice = itemData.level;\n      }\n    }\n\n    return itemData.hitDice;\n  }\n\n  /** @type {number} - Mythic tier */\n  get mythicTier() {\n    this.system.mythicTier ??= this.subType === \"mythic\" ? this.system.level : 0;\n    return this.system.mythicTier;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  /** @inheritDoc */\n  getLabels({ rollData } = {}) {\n    const labels = super.getLabels({ rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.classTypes[itemData.subType];\n\n    labels.bab = pf1.config.classBAB[itemData.bab];\n    labels.saves = {\n      fort: pf1.config.classSavingThrows[itemData.savingThrows?.fort?.value],\n      ref: pf1.config.classSavingThrows[itemData.savingThrows?.ref?.value],\n      will: pf1.config.classSavingThrows[itemData.savingThrows?.will?.value],\n    };\n\n    labels.hitDie = itemData.hd;\n    if (itemData.subType !== \"mythic\") labels.hitDie = game.i18n.format(\"PF1.DieSize\", { size: itemData.hd });\n\n    labels.hasFCB = itemData.fc?.hp > 0 || itemData.fc?.skill > 0 || itemData.fc?.alt > 0;\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Abstract class for physical items.\n */\nexport class ItemPhysicalPF extends ItemPF {\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.diff === false || context.recursive === false) return;\n\n    // No system changes\n    if (!changed.system) return;\n\n    await this._resetChargesOnQuantityUpdate(changed);\n  }\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  static system = Object.freeze(foundry.utils.mergeObject(super.system, { isPhysical: true }, { inplace: false }));\n\n  /**\n   * @internal\n   * @param system\n   */\n  _preUpdateNumericValueGuard(system) {\n    super._preUpdateNumericValueGuard(system);\n\n    if (system.quantity !== undefined && (!Number.isSafeInteger(system.quantity) || system.quantity < 0)) {\n      system.quantity = 0;\n    }\n    if (system.price !== undefined && !Number.isFinite(system.price)) {\n      system.price = 0;\n    }\n    if (system.unidentified?.price !== undefined && !Number.isFinite(system.unidentified.price)) {\n      system.unidentified.price = 0;\n    }\n    if (system.hardness !== undefined && (!Number.isSafeInteger(system.hardness) || system.hardness < 0)) {\n      system.hardness = 0;\n    }\n    if (system.hp?.value !== undefined && !Number.isSafeInteger(system.hp.value)) {\n      system.hp.value = 0;\n    }\n    if (system.hp?.max !== undefined && (!Number.isSafeInteger(system.hp.max) || system.hp.max < 0)) {\n      system.hp.max = 0;\n    }\n  }\n\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Items for NPC should be unidentified by default\n    if (this.actor?.type === \"npc\" && data.system?.identified === undefined) {\n      this.updateSource({ \"system.identified\": false });\n    }\n  }\n\n  /**\n   * @override\n   * @param {*} data\n   * @param {*} context\n   * @param {*} userId\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.equipped === true) {\n      this.executeScriptCalls(\"equip\", { equipped: true });\n    }\n\n    // Quantity change\n    const quantity = this.system.quantity || 0;\n    if (quantity > 0) {\n      this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: 0, new: quantity } });\n    }\n  }\n\n  /**\n   * @override\n   * @param {*} changed\n   * @param {*} context\n   * @param {*} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'equip' script calls\n    const equipped = changed.system?.equipped;\n    if (equipped != null) {\n      this.executeScriptCalls(\"equip\", { equipped });\n    }\n  }\n\n  _onMemorizedUpdate(changed, context) {\n    // Call 'changeQuantity' script calls\n    const oldQuantity = this._memoryVariables?.quantity;\n    if (oldQuantity !== undefined) {\n      const quantity = {\n        previous: oldQuantity,\n        new: this.system.quantity,\n      };\n\n      if (quantity.new != null && quantity.new !== quantity.previous) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity });\n      }\n    }\n\n    // Must call super last or the memory data gets cleared too soon\n    super._onMemorizedUpdate(changed, context);\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.equipped === true) {\n        this.executeScriptCalls(\"equip\", { equipped: false });\n      }\n\n      if (this.system.quantity > 0) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: this.system.quantity, new: 0 } });\n      }\n    }\n  }\n\n  /**\n   * Reset charges when quantity is changed to simulate a stack.\n   *\n   * - If charges are 0\n   * - ... and quantity is reduced, reset to max\n   *\n   * @param {object} changed\n   */\n  async _resetChargesOnQuantityUpdate(changed) {\n    // Don't care if charges are linked\n    if (this.links.charges) return;\n\n    // Only if quantity changed\n    const newQuantity = changed.system.quantity;\n    if (newQuantity === undefined) return;\n    // Don't touch if quantity is increased or remains the same\n    if ((newQuantity || 0) >= (this.system.quantity || 0)) return;\n\n    // Avoid overwriting value if the update is modifying it.\n    if (changed.system.uses?.value !== undefined) return;\n\n    const oldUses = this.system.uses ?? {};\n    if (oldUses.per && oldUses.value === 0 && oldUses.max > 0) {\n      const update = await this.recharge({ period: \"any\", commit: false });\n      if (update) {\n        changed.system.uses ??= {};\n        changed.system.uses.value = update.system.uses.value;\n      }\n    }\n  }\n\n  /** @override */\n  prepareBaseData() {\n    // Set visible name\n    if (this.showUnidentifiedData) {\n      this.name = this.system.unidentified?.name || this._source.name;\n    } else {\n      this.name = this._source.name;\n    }\n\n    // Ensure some base data has values\n    this.system.size ||= \"med\";\n    this.system.weight ??= {};\n    this.system.weight.value ||= 0;\n    this.system.quantity ||= 0;\n\n    super.prepareBaseData();\n\n    const itemData = this.system;\n    // Init base weight values in case they're missing.\n    itemData.weight ??= {};\n    itemData.weight.value ??= 0;\n    itemData.weight.total = 0;\n    itemData.weight.converted ??= {};\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this.prepareWeight();\n\n    // Physical items\n    if (this.isPhysical && this.showUnidentifiedData) {\n      // Set unidentified description for players\n      this.system.description.value = this.system.description.unidentified;\n    }\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.equipped\": active }, context);\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Determines if the item is equipped.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.equipped || false;\n  }\n\n  /**\n   * Prepare this item's {@link ItemWeightData}\n   */\n  prepareWeight() {\n    const itemData = this.system;\n    const weight = itemData.weight;\n\n    // Adjust base weight\n    // Altering weight.value directly will corrupt the weight\n    const baseWeight = weight.value * this.getWeightMultiplier();\n\n    weight.total ||= 0; // In case item subclass didn't prepare it\n    weight.total += baseWeight * itemData.quantity;\n\n    // Convert weight according metric system (lb vs kg)\n    weight.converted.value = pf1.utils.convertWeight(baseWeight);\n    weight.converted.total = pf1.utils.convertWeight(weight.total);\n  }\n\n  /**\n   * Return weight multiplier affecting this item.\n   *\n   * Such as item size dictating how heavy an armor is.\n   *\n   * @returns {number} - Multiplier, 1 for most items regardless of size.\n   */\n  getWeightMultiplier() {\n    return 1;\n  }\n\n  /**\n   * Weight scaling\n   *\n   * For use with {@link getWeightMultiplier()} across item types\n   *\n   * @internal\n   * @returns {number}\n   */\n  _getArmorWeightMultiplier() {\n    // Scale weight for weapons, armor and shields\n    const actorSize = this.actor?.system.traits?.size;\n    const itemSize = this.system.size || \"med\";\n    const size = this.system.resizing ? actorSize || itemSize : itemSize;\n    const mult = pf1.config.armorWeight[size];\n    return mult ?? 1;\n  }\n\n  /**\n   * Returns the displayed value of an item according to multiple options\n   *\n   * @param {object} [options] - Various optional parameters affecting value calculations\n   * @param {boolean} [options.recursive=true] - Whether the value of contained items should be included\n   * @param {number} [options.sellValue=0.5] - The sell value multiplier\n   * @param {boolean} [options.inLowestDenomination=false] - Whether the value should be returned in the lowest denomination\n   * @param {boolean} [options.forceUnidentified=false] - Override whether the value should use the unidentified price\n   * @param {boolean} [options.single=false] - Return value of singular item instead of the actual stack. Disables recursive option.\n   * @param {boolean} [options.identical=false] - Treat all items in stack as identical (same number of charges).\n   * @param {boolean} [options.maximized=false] - Pretend as if the items were fresh  (full charges)\n   * @returns {number} The item's value\n   */\n  getValue({\n    recursive = true,\n    sellValue = 0.5,\n    inLowestDenomination = false,\n    forceUnidentified = false,\n    single = false,\n    identical = false,\n    maximized = false,\n  } = {}) {\n    if (single) recursive = false;\n\n    const hasFiniteCharges = this.hasFiniteCharges;\n    const maxChargesValue = hasFiniteCharges ? this.maxCharges : 0;\n    const remainingCharges = hasFiniteCharges ? (maximized ? maxChargesValue : this.charges) : 0;\n\n    const getActualValue = (identified = true, maxCharges = false) => {\n      let value = 0;\n      if (identified) value = this.system.price || 0;\n      else value = this.system.unidentified?.price || 0;\n\n      // Add charge price\n      if (identified && hasFiniteCharges) {\n        let charges = maxCharges ? maxChargesValue : remainingCharges;\n        if (!Number.isFinite(charges) || charges < 0) charges = 0;\n        value += (this.system.uses?.pricePerUse ?? 0) * charges;\n      }\n\n      if (inLowestDenomination) value *= 100;\n      if (this.isBroken) value *= 0.75; // TODO: Make broken value configurable\n      if (this.system.timeworn) {\n        if (hasFiniteCharges && remainingCharges === 0) value *= 0.01;\n        else value *= 0.5;\n      }\n      return value;\n    };\n\n    // Increase value by quantity\n    const isIdentified = forceUnidentified ? false : !this.showUnidentifiedData;\n    const quantity = single ? 1 : this.system.quantity || 0;\n    let result = getActualValue(isIdentified);\n    if (quantity > 1) {\n      // If charged item, add rest of the stack as if they had full charges\n      if (hasFiniteCharges && identical !== true) result += getActualValue(isIdentified, true) * (quantity - 1);\n      // Otherwise just multiply\n      else result *= quantity;\n    }\n\n    // Modify sell value\n    if (!(this.type === \"loot\" && [\"tradeGoods\", \"treasure\"].includes(this.subType))) result *= sellValue;\n\n    return result;\n  }\n\n  /**\n   * @remarks\n   * Checks if the item is equipped and has quantity.\n   * @inheritDoc\n   */\n  get canUse() {\n    return this.system.equipped && this.system.quantity > 0;\n  }\n\n  /**\n   * @type {boolean} - Broken state\n   */\n  get isBroken() {\n    if (this.system.broken) return true;\n\n    const hp = this.system.hp ?? {};\n    const hpMax = hp.max ?? 0;\n    if (hpMax > 0) {\n      const hpCur = hp.value ?? 0;\n      const brokenThreshold = Math.floor(hpMax / 2);\n      return hpCur <= Math.floor(hpMax / 2);\n    }\n\n    return false;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n\n    // Equipped label\n    const checkYes = '<i class=\"fas fa-check\"></i>';\n    const checkNo = '<i class=\"fas fa-times\"></i>';\n    labels.equipped = \"\";\n    if (itemData.equipped === true) labels.equipped = checkYes;\n    else labels.equipped = checkNo;\n\n    // Carried label\n    labels.carried = \"\";\n    if (itemData.carried === true) labels.carried = checkYes;\n    else labels.carried = checkNo;\n\n    // Identified label\n    labels.identified = \"\";\n    if (itemData.identified === true) labels.identified = checkYes;\n    else labels.identified = checkNo;\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n\n    // Auto-unequip\n    if (!this.canEquip) this.system.equipped = false;\n  }\n\n  /** @type {boolean} - If the item can be equipped currently */\n  get canEquip() {\n    return !this.inContainer;\n  }\n\n  /**\n   * @remarks\n   * Identified state is the only thing that can alter the result.\n   * @override\n   * @inheritDoc\n   */\n  getName(forcePlayerPerspective = false) {\n    if (game.user.isGM && forcePlayerPerspective) {\n      if (this.system.identified === false) return this.system.unidentified?.name || this.name;\n    }\n    return this.name;\n  }\n\n  get showUnidentifiedData() {\n    return !game.user.isGM && this.system.identified === false;\n  }\n\n  /** @inheritDoc */\n  getRollData() {\n    const result = super.getRollData();\n\n    // Overwrite broken state\n    result.item.broken = this.isBroken;\n\n    return result;\n  }\n}\n\n/**\n * @typedef {object} ItemWeightData\n * An item's `weight` data. The only property to be stored is `value`, from which all other values are derived.\n * @see {@link ItemPF.prepareWeight} for generation\n * @remarks A weight property is considered \"effective\" if it is the value that is added to its parent's weight.\n *          An item with a weight of 10 lbs in a container with 50% weight reduction would increase\n *          the container's effective `weight.total` by 5 lbs, but increases the container's `weight.contents` weight by 10 lbs.\n * @property {number} value - The weight of a single item instance, in lbs\n * @property {number} total - The effective total weight of the item (including quantity and contents), in lbs\n * @property {number} [currency] - Effective weight of contained currency for containers, in lbs\n * @property {number} [contents] - Weight of contained items and currency, in lbs\n * @property {object} converted - Weight of this item, converted to the current unit system\n * @property {number} converted.value - The weight of a single item instance, in world units\n * @property {number} converted.total - The effective total weight of the item (including quantity and contents), in world units\n * @property {number} [converted.contents] - Weight of contained items and currency, in world units\n */\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Consumable item\n *\n * For potions, wands, scrolls, drugs, etc.\n */\nexport class ItemConsumablePF extends ItemPhysicalPF {\n  /**\n   * @inheritDoc\n   */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n\n  /** @type {boolean} - If the item can be equipped currently */\n  get canEquip() {\n    return !this.inContainer;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.consumableTypes[this.subType];\n\n    return labels;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Container item\n *\n * Bags, backpacks, chests, etc.\n */\nexport class ItemContainerPF extends ItemPhysicalPF {\n  /**\n   * @override\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: true,\n  });\n\n  constructor(...args) {\n    super(...args);\n\n    this.items ??= null;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    // No system updates\n    if (!changed.system) return;\n\n    if (context.recursive === false || context.diff === false) return;\n\n    // Ensure contained item updates adhere to reason\n    const items = changed.system.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        await this._containedItemUpdate(itemId, itemData, items, context);\n      }\n    }\n  }\n\n  /**\n   * Handle conhtained item CRUD\n   *\n   * @internal\n   * @param {string} itemId - Item ID\n   * @param {object|null} itemData - Item's update data\n   * @param context\n   * @param {object} items - Parent's items update object\n   */\n  async _containedItemUpdate(itemId, itemData, items, context) {\n    // Deletion\n    if (itemId.startsWith(\"-=\")) {\n      /** @type {ItemPF} */\n      const oldItem = this.items.get(itemId.replace(/^-=/, \"\"));\n\n      if (oldItem) {\n        await oldItem._preDelete(context, game.user);\n        // TODO: Run pre-delete on everything contained by this\n      }\n      return;\n    }\n\n    /** @type {ItemPF} */\n    const oldItem = this.items.get(itemId);\n\n    let diff;\n    // Existing contained item\n    if (oldItem) {\n      await oldItem._preUpdate(itemData, context, game.user);\n      diff = oldItem.updateSource(itemData, { dryRun: true, fallback: false });\n      // Remove lingering .data if present, the above line prunes this out if done externally\n      if (\"data\" in this.system.items[itemId]) diff[\"-=data\"] = null;\n    }\n    // New contained item\n    else {\n      /** @type {ItemPF} */\n      const temp = new Item.implementation(itemData);\n      await temp._preCreate(itemData, context, game.user);\n      diff = temp.toObject();\n    }\n\n    items[itemId] = diff;\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} options\n   * @param {string} userId\n   */\n  _onUpdate(changed, options, userId) {\n    // Call various document workflows for changed items\n    const items = changed.system?.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        const item = this.items.get(itemId);\n        try {\n          if (itemId.startsWith(\"-=\")) {\n            // TODO: Item reference is no longer available for _onDelete workflow\n            // item._onDelete(options, userId);\n          } else if (itemData._id) {\n            item._onCreate(itemData, options, userId);\n          } else {\n            item._onUpdate(itemData, options, userId);\n          }\n        } catch (err) {\n          console.error(err, { parent: this, item });\n        }\n\n        // TODO: createDocument, deleteDocument, updateDocument hooks\n      }\n    }\n\n    super._onUpdate(changed, options, userId);\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    // Set base weight to weight of coins, which can be calculated without knowing contained items\n    const weightReduction = (100 - (this.system.weight?.reduction?.percent ?? 0)) / 100;\n    this.system.weight.currency = this._calculateCoinWeight() * weightReduction;\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    this._prepareInventory();\n\n    super.prepareDerivedData();\n  }\n\n  /**\n   * Prepare dependent data for contained items.\n   *\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    super._prepareDependentData(final);\n\n    // Update dependant data and resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(final);\n    });\n  }\n\n  /**\n   * Prepare .items collection for contained items.\n   *\n   * @private\n   */\n  _prepareInventory() {\n    const prior = this.items;\n    const collection = new Collection();\n    this.system.items ??= {}; // Shim for items that haven't had template.json applied to them\n    for (const [itemId, itemData] of Object.entries(this.system.items)) {\n      try {\n        let item = prior?.get(itemId);\n        if (item) {\n          item.updateSource(new Item.implementation(itemData).toObject(), { recursive: false });\n        } else {\n          item = new Item.implementation(itemData, { parent: this.actor });\n          item.parentItem = this;\n        }\n        item.reset();\n        collection.set(itemId, item);\n      } catch (err) {\n        console.error(\"Error preparing contained item:\", { id: itemId, data: itemData }, this);\n        throw err;\n      }\n    }\n\n    this.items = collection;\n  }\n\n  /** @inheritDoc */\n  prepareWeight() {\n    this.system.weight ??= {};\n    /** @type {ItemWeightData} */\n    const weight = this.system.weight;\n    weight.total = 0; // Reset\n\n    // Percentile weight reduction\n    const weightMult = (100 - (weight.reduction?.percent || 0)) / 100;\n\n    const currencyWeight = this._calculateCoinWeight();\n    weight.currency = currencyWeight * weightMult;\n\n    // Total unreduced weight of contents\n    weight.contents = this.items.reduce((total, item) => total + item.system.weight.total, 0);\n    weight.contents += currencyWeight;\n\n    const reductionFlat = weight.reduction?.value ?? 0;\n    weight.total += Math.max(0, weight.contents * weightMult - reductionFlat);\n\n    weight.converted.reduction = pf1.utils.convertWeight(reductionFlat);\n    weight.converted.contents = pf1.utils.convertWeight(weight.contents);\n    weight.converted.currency = pf1.utils.convertWeight(weight.currency);\n\n    super.prepareWeight();\n  }\n\n  /**\n   * @deprecated\n   * @param itemId\n   */\n  getContainerContent(itemId) {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemContainerPF.getContainerContent() is deprecated in favor of ItemContainerPF.items collection usage.\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n    return this.items.get(itemId);\n  }\n\n  /**\n   * @protected\n   * @param {object[]} itemData Item creation data\n   * @param itemsData\n   * @param {object} [options={}] Additional options\n   * @returns {Promise<this>} Promise to the updated document.\n   */\n  async createContainerContent(itemsData, options = { renderSheet: false }) {\n    itemsData = itemsData instanceof Array ? itemsData : [itemsData];\n\n    const itemOptions = deepClone(options);\n    const user = game.user;\n\n    const actuallyCreated = [];\n    const updateData = { system: { items: {} } };\n\n    // Iterate over data to create\n    for (const itemData of itemsData) {\n      // Find unique ID\n      do {\n        itemData._id = foundry.utils.randomID(16);\n      } while (this.system.items[itemData._id] !== undefined);\n\n      // Create temporary item\n      const item = new Item.implementation(itemData);\n\n      // Run pre-create workflow\n      let allowed = (await item._preCreate(itemData, options, game.user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(\"preCreateItem\", item, itemData, itemOptions, user.id);\n      if (allowed === false) {\n        console.debug(`${vtt} | Item creation prevented during pre-create`);\n        continue;\n      }\n\n      // Update _stats\n      item.updateSource({\n        _stats: {\n          coreVersion: game.version,\n          systemVersion: game.system.version,\n          createdTime: Date.now(),\n          lastModifiedBy: user.id,\n        },\n      });\n\n      updateData.system.items[itemData._id] = item.toObject();\n      actuallyCreated.push(itemData._id);\n    }\n\n    await this.update(updateData, { pf1: { createContained: actuallyCreated } });\n\n    // Mimic createEmbeddedDocuments()\n    const created = this.items.filter((i) => actuallyCreated.includes(i.id));\n    if (options.renderSheet) created.forEach((i) => i.sheet.render(true));\n    return created;\n  }\n\n  async deleteContainerContent(data, context = {}) {\n    const ids = new Set(data instanceof Array ? data : [data]);\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n\n    const updateData = { system: { items: {} } };\n\n    const actuallyDeleted = [];\n\n    // Iterate over data to delete\n    for (const id of ids) {\n      const item = this.items.get(id);\n\n      // Run pre-delete workflow\n      let allowed = (await item._preDelete(context, user)) ?? true;\n      allowed &&= context.noHook || Hooks.call(`preDelete${embeddedName}`, item, context, user.id);\n      if (allowed === false) {\n        console.debug(`${vtt} | ${embeddedName} deletion prevented during pre-delete`);\n        continue;\n      }\n\n      updateData.system.items[`-=${id}`] = null;\n      actuallyDeleted.push(id);\n    }\n\n    await this.update(updateData, { pf1: { removeContained: actuallyDeleted } });\n  }\n\n  async updateContainerContents(data) {\n    data = data instanceof Array ? data : [data];\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n    const options = { diff: true };\n\n    const actuallyUpdated = [];\n    const updateData = { system: { items: {} } };\n\n    // Difference each update against existing data\n    for (const changes of data) {\n      if (!changes._id) throw new Error(\"You must provide an id for every Embedded Document in an update operation\");\n\n      const item = this.items.get(changes._id);\n\n      let diff = {};\n      try {\n        diff = item.updateSource(changes, { dryRun: true, fallback: false });\n      } catch (err) {\n        console.error(err);\n        continue;\n      }\n\n      // Run pre-update workflow\n      let allowed = (await item._preUpdate(diff, options, user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(`preUpdate${embeddedName}`, item, diff, options, user.id);\n      if (allowed === false) {\n        console.debug(`${vtt} | ${embeddedName} update prevented during pre-update`);\n        continue;\n      }\n\n      diff._stats = {\n        coreVersion: game.version,\n        systemVersion: game.system.version,\n        modifiedTime: Date.now(),\n        lastModifiedBy: user.id,\n      };\n\n      updateData.system.items[changes._id] = diff;\n      actuallyUpdated.push(changes._id);\n    }\n\n    await this.update(updateData, { pf1: { updateContained: actuallyUpdated } });\n  }\n\n  /**\n   * Returns the currency this item contains\n   *\n   * @param {object} [options] - Additional options affecting how the value is returned\n   * @param {boolean} [options.inLowestDenomination=false] - Whether to return the value in copper, or in gold (default)\n   * @returns {number} The total amount of currency this item contains, in gold pieces\n   */\n  getTotalCurrency({ inLowestDenomination = false } = {}) {\n    const currency = this.system.currency || {};\n    const total = (currency.pp || 0) * 1000 + (currency.gp || 0) * 100 + (currency.sp || 0) * 10 + (currency.cp || 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Converts currencies to the given currency type\n   *\n   * @param {CoinType} type - Converts as much currency as possible to this type.\n   * @returns {Promise<this>} The updated item\n   */\n  convertCurrency(type = \"pp\") {\n    const cp = this.getTotalCurrency({ inLowestDenomination: true });\n\n    const currency = pf1.utils.currency.convert(cp, type, { pad: true });\n\n    return this.update({ system: { currency } });\n  }\n\n  /**\n   * @returns {number} Weight of coins on the item.\n   * @private\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /** @inheritDoc */\n  getValue({ recursive = false, inLowestDenomination = false, ...options } = {}) {\n    if (options.single) recursive = false;\n    const fullOptions = { recursive, inLowestDenomination, ...options };\n    let result = super.getValue(fullOptions);\n\n    if (!recursive) return result;\n\n    // Add item's contained currencies at full value\n    result += this.getTotalCurrency({ inLowestDenomination });\n\n    // Add item's content items' values\n    this.items.forEach((i) => {\n      result += i.getValue(fullOptions);\n    });\n\n    return result;\n  }\n\n  /** @inheritDoc */\n  async getChatData({ chatcard, rollData } = {}) {\n    const context = await super.getChatData({ chatcard, rollData });\n    // Get contents value\n    const cpValue =\n      this.getValue({ sellValue: 1, recursive: true, inLowestDenomination: true }) -\n      this.getValue({ sellValue: 1, recursive: false, inLowestDenomination: true });\n    const totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    const value =\n      game.i18n.localize(\"PF1.Containers.Contents.Value\") + \": \" + game.i18n.format(\"PF1.SplitValue\", totalValue);\n    context.properties.push(value);\n    const currency = { ...this.system.currency };\n    currency.gp ||= 0;\n    currency.gp += currency.pp * 10;\n    const coins = game.i18n.localize(\"PF1.Currency.Label\") + \": \" + game.i18n.format(\"PF1.SplitValue\", currency);\n    context.properties.push(coins);\n\n    return context;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Equipment item\n *\n * Armor, shields, wondrous items, etc.\n */\nexport class ItemEquipmentPF extends ItemPhysicalPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Set equipment subtype and slot\n    const type = changed.system?.subType;\n    if (type !== undefined && type !== this.subType) {\n      // Set subtype\n      const subtype = changed.system?.equipmentSubtype ?? this.system.equipmentSubtype ?? \"\";\n      const subtypes = Object.keys(pf1.config.equipmentTypes[type] ?? {}).filter((o) => !o.startsWith(\"_\"));\n\n      // Current subtype is not valid for current type\n      if (!subtypes.includes(subtype)) {\n        // Clear if no subtypes exist\n        if (subtypes.length === 0) {\n          changed.system.equipmentSubtype = \"\";\n        }\n        // Set to first subtype if no valid subtype is set\n        else if (subtypes.length > 0) {\n          changed.system.equipmentSubtype = subtypes[0];\n        }\n      }\n\n      // Set slot\n      const slot = changed.system?.slot ?? this.system.slot ?? \"\";\n      const slotType = type === \"other\" ? \"wondrous\" : type; // Fix \"other\" item default slot type\n      const slotTypes = Object.keys(pf1.config.equipmentSlots[slotType] ?? {});\n      if (!slot || !slotTypes.includes(slot)) {\n        changed.system.slot = slotTypes[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const itemData = this.system;\n\n    let eType = this.subType;\n    const typeKeys = Object.keys(pf1.config.equipmentTypes);\n    if (!typeKeys.includes(eType)) eType = typeKeys[0];\n\n    let eSubtype = this.system.equipmentSubtype;\n    const subtypeKeys = Object.keys(pf1.config.equipmentTypes[eType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(eSubtype)) eSubtype = subtypeKeys[0];\n\n    const showIdentified = !this.showUnidentifiedData;\n\n    const subtypeLabels = pf1.config.equipmentTypes[eType];\n    labels.subType = subtypeLabels._label;\n    if (showIdentified) {\n      labels.childType = subtypeLabels[eSubtype];\n    } else {\n      // Obfuscate wondrous as other\n      if (this.subType === \"wondrous\") labels.subType = pf1.config.equipmentTypes.other._label;\n    }\n\n    if ([\"armor\", \"shield\"].includes(this.subType) && labels.childType) {\n      labels.childTypeDistinct = true;\n    }\n\n    let ac = itemData.armor.value || 0;\n    if (showIdentified) ac += itemData.armor?.enh || 0;\n\n    if (ac > 0) {\n      labels.armor = `${ac} ${game.i18n.localize(\"PF1.ACNormal\")}`;\n      labels.armorValue = ac;\n    }\n\n    const acp = itemData.armor?.acp || 0;\n    if (acp > 0) {\n      labels.acp = true;\n      labels.acpEffective = Math.max(0, acp + (itemData.masterwork ? -1 : 0));\n    }\n    const mdex = itemData.armor?.dex ?? null;\n    if (Number.isFinite(mdex)) labels.mdex = true;\n\n    if (this.hasSlots || [\"armor\", \"shield\"].includes(this.subType)) {\n      if (this.subType === \"armor\") {\n        labels.slot = pf1.config.equipmentSlots.armor.armor;\n      } else if (this.subType === \"shield\") {\n        labels.slot = pf1.config.equipmentSlots.shield.shield;\n      } else if (this.subType === \"clothing\") {\n        labels.slot = pf1.config.equipmentSlots.clothing.clothing;\n      } else {\n        labels.slot = pf1.config.equipmentSlots.wondrous[itemData.slot];\n      }\n    }\n\n    return labels;\n  }\n\n  /** @type {boolean} - If the item can be equipped currently */\n  get canEquip() {\n    // Always true if not in container\n    if (!this.inContainer) return true;\n\n    switch (this.subType) {\n      case \"armor\":\n      case \"shield\":\n      case \"clothing\":\n        return false;\n      case \"wondrous\":\n      case \"other\":\n        return this.system.slot === \"slotless\";\n    }\n    return true;\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const itemData = this.system;\n\n    // Add enhancement bonus\n    itemData.armor.enh ??= 0;\n\n    const enh = itemData.armor.enh || 0;\n    itemData.armor.total = (itemData.armor.value || 0) + enh;\n\n    // Feed info back to actor\n    if (itemData.equipped !== false) {\n      this.applyEquippedEffects();\n    }\n  }\n\n  /**\n   * Apply effects of equipping this item.\n   */\n  applyEquippedEffects() {\n    const itemData = this.system;\n\n    if (!this.isActive) return;\n\n    const actor = this.actor;\n    // Guard against weirdness with unlinked data (data is undefined at this state), and also basic test for if this item has actor.\n    if (!actor?.system || !actor?.equipment) return;\n\n    switch (this.subType) {\n      case \"shield\": {\n        const shieldTypes = pf1.config.shieldTypes;\n        const subtype = itemData.equipmentSubtype;\n        let shieldType = actor.equipment.shield.type;\n        if (subtype === \"other\" && shieldType < shieldTypes.other) shieldType = shieldTypes.other;\n        else if (subtype === \"lightShield\" && shieldType < shieldTypes.light) shieldType = shieldTypes.light;\n        else if (subtype === \"heavyShield\" && shieldType < shieldTypes.heavy) shieldType = shieldTypes.heavy;\n        else if (subtype === \"towerShield\" && shieldType < shieldTypes.tower) shieldType = shieldTypes.tower;\n        if (actor.equipment.shield.type !== shieldType) {\n          actor.equipment.shield.type = shieldType;\n          actor.equipment.shield.id = this.id;\n        }\n        break;\n      }\n      case \"armor\": {\n        const armorTypes = pf1.config.armorTypes;\n        const subtype = itemData.equipmentSubtype;\n        let armorType = actor.equipment.armor.type;\n        if (subtype === \"lightArmor\" && armorType < armorTypes.light) armorType = armorTypes.light;\n        else if (subtype === \"mediumArmor\" && armorType < armorTypes.medium) armorType = armorTypes.medium;\n        else if (subtype === \"heavyArmor\" && armorType < armorTypes.heavy) armorType = armorTypes.heavy;\n        if (armorType !== actor.equipment.armor.type) {\n          actor.equipment.armor.type = armorType;\n          actor.equipment.armor.id = this.id;\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Does the equipment subtype use slots.\n   *\n   * @type {boolean}\n   */\n  get hasSlots() {\n    return [\"wondrous\", \"other\"].includes(this.subType);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @remarks Supports both weapon and armor proficiencies.\n   */\n  getProficiency(weapon = true) {\n    if (weapon) return this.isProficient;\n\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    const actor = this.actor;\n    if (!actor) return true; // No actor, so always proficient\n\n    return actor.hasArmorProficiency(this);\n  }\n\n  /**\n   * @type {string} - Matching base proficiency for the armor or shield type.\n   * @since PF1 v10\n   */\n  get baseArmorProficiency() {\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    // Item type to proficiency maps\n    const proficiencyMaps = {\n      armor: {\n        lightArmor: \"lgt\",\n        mediumArmor: \"med\",\n        heavyArmor: \"hvy\",\n      },\n      shield: {\n        other: \"shl\", // buckler\n        lightShield: \"shl\",\n        heavyShield: \"shl\",\n        towerShield: \"twr\",\n      },\n    };\n\n    return proficiencyMaps[subType][this.system.equipmentSubtype] ?? null;\n  }\n\n  /**\n   * @see {@link https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor}\n   *\n   * @inheritdoc\n   * @remarks - Only armor and shields get anything besides 1.\n   * @since PF1 v10\n   */\n  getWeightMultiplier() {\n    if (![\"armor\", \"shield\"].includes(this.subType)) return 1;\n\n    return this._getArmorWeightMultiplier();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Feature item\n *\n * Class features, feats, traits, templates, racial traits, etc.\n */\nexport class ItemFeatPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {User} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        this.executeScriptCalls(\"toggle\", { state: false });\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.disabled\": !active }, context);\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    return this.system.disabled !== true;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const { subType, abilityType } = this.system;\n\n    labels.subType = pf1.config.featTypes[subType];\n    labels.featType = pf1.config.featTypes[subType];\n\n    labels.abilityType = pf1.config.abilityTypes[this.system.abilityType]?.short;\n    if (this.subType === \"trait\") {\n      labels.traitType = pf1.config.traitTypes[this.system.traitType];\n    } else if (this.subType === \"racial\") {\n      labels.raceType = pf1.config.raceTypes[this.system.traitType];\n      labels.traitCategory = pf1.config.racialTraitCategories[this.system.traitCategory];\n    }\n\n    // Ability type\n    if (abilityType && abilityType !== \"none\") {\n      labels.abilityType = pf1.config.abilityTypes[abilityType].short;\n      labels.abilityTypeLong = pf1.config.abilityTypes[abilityType].long;\n    } else if (labels.abilityType) {\n      delete labels.abilityType;\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    super.getTypeChatData(data, labels, props, rollData);\n    // Add ability type label\n    if (labels.abilityType) {\n      props.push(labels.abilityType);\n    }\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Loot item\n *\n * Ammunition, gear, trade goods, etc.\n */\nexport class ItemLootPF extends ItemPhysicalPF {\n  /** @type {string} */\n  get extraType() {\n    return this.system.extraType;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    //\n    if (changed.flags?.pf1?.abundant !== undefined) {\n      foundry.utils.logCompatibilityWarning(\"flags.pf1.abundant is deprecated in favor of system.abundant\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n      changed.system.abundant = changed.flags.pf1.abundant;\n      delete changed.flags.pf1.abundant;\n    }\n\n    // Reset loot extra type when loot subtype is changed\n    if (\n      changed.system?.subType !== undefined &&\n      changed.system?.subType !== this.system.subType &&\n      changed.system?.extraType === undefined\n    ) {\n      changed.system.extraType = \"\";\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    if (!this.showUnidentifiedData) {\n      labels.subType = pf1.config.lootTypes[this.subType];\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    if (pf1.config.unequippableLoot.includes(this.subType)) return true;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Make ammo count inherently as single use.\n   *\n   * @inheritDoc\n   */\n  get isSingleUse() {\n    return this.subType === \"ammo\" || super.isSingleUse;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Race item\n */\nexport class ItemRacePF extends ItemPF {\n  /**\n   * @override\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n\n    // Overwrite race\n    if (actor) {\n      const oldRace = actor.itemTypes.race.find((r) => r !== this);\n      if (oldRace) {\n        const oldSize = oldRace.system.size;\n        await oldRace.delete();\n\n        const context = {};\n        // Ensure actor size is updated to match the race, but only if it's same as old race\n        const actorSize = actor.system.traits.size;\n        if (actorSize !== this.system.size && oldSize === actorSize) context._pf1SizeChanged = true;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    const actor = this.actor;\n    if (actor?.type === \"basic\") return;\n\n    // Track size change\n    const newSize = changed.system?.size;\n    if (actor && newSize !== undefined) {\n      const oldSize = actor.system.traits?.size;\n      if (this.system.size === oldSize && newSize !== oldSize) {\n        context._pf1SizeChanged = true;\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data Creation data\n   * @param {object} context Create context\n   * @param {string} userId User ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (game.user.id !== userId) return;\n\n    // Update owning actor speed to match racial speed.\n    // TODO: Make this derived data on the actor instead, eliminating the update.\n    if (this.actor) {\n      const speedUpdates = {};\n      for (const [key, value] of Object.entries(this.system.speeds ?? {})) {\n        speedUpdates[key] = { base: value };\n      }\n      if (this.system.speeds?.fly > 0) {\n        speedUpdates.fly.maneuverability = this.system.speeds.flyManeuverability || \"average\";\n      }\n      this.actor.update({\n        \"system.attributes.speed\": speedUpdates,\n      });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(data, context, userId) {\n    super._onUpdate(data, context, userId);\n\n    const actor = this.actor;\n    // Change actor size if the old size is same as old race size.\n    if (actor && context._pf1SizeChanged && game.user.id === userId) {\n      actor.update({ \"system.traits.size\": this.system.size });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.user.id !== userId) return;\n\n    const actor = this.actor;\n    if (actor?.itemTypes.race.length === 0) {\n      // Reset some race dependant details\n      actor.update({\n        \"system.attributes.speed\": {\n          \"land.base\": 30,\n          \"fly.base\": 0,\n          \"fly.maneuverability\": \"average\",\n          \"swim.base\": 0,\n          \"climb.base\": 0,\n          \"burrow.base\": 0,\n        },\n      });\n    }\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n}\n","/**\n * @typedef {typeof templatePaths[number]} CachedTemplatePath\n * A path to a template that has been cached as part of the partial preloading process.\n */\n\n/**\n * A list of template paths to pre-load\n *\n * @private\n */\nconst templatePaths = /** @type {const} */ ([\n  // Actor Sheet Partials\n  \"systems/pf1/templates/actors/parts/actor-summary.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-level.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-traits.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-inventory.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-features.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-combat.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-defenses_tables.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-buffs.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-attributes.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings-ability-scores.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-item-summary.hbs\",\n\n  \"systems/pf1/templates/internal/item-search.hbs\",\n\n  \"systems/pf1/templates/internal/table_magic-items.hbs\",\n\n  // Item Sheet Partials\n  \"systems/pf1/templates/items/parts/item-actions.hbs\",\n  \"systems/pf1/templates/items/parts/item-advanced.hbs\",\n  \"systems/pf1/templates/items/parts/item-alignments.hbs\",\n  \"systems/pf1/templates/items/parts/item-ammo.hbs\",\n  \"systems/pf1/templates/items/parts/item-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-base-types.hbs\",\n  \"systems/pf1/templates/items/parts/item-changes.hbs\",\n  \"systems/pf1/templates/items/parts/item-class-link.hbs\",\n  \"systems/pf1/templates/items/parts/item-contents.hbs\",\n  \"systems/pf1/templates/items/parts/item-description.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-inputs.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-links.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials-addon.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials.hbs\",\n  \"systems/pf1/templates/items/parts/item-name.hbs\",\n  \"systems/pf1/templates/items/parts/item-notes.hbs\",\n  \"systems/pf1/templates/items/parts/item-proficiencies.hbs\",\n  \"systems/pf1/templates/items/parts/item-class-skills.hbs\",\n  \"systems/pf1/templates/items/parts/item-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-size.hbs\",\n  \"systems/pf1/templates/items/parts/item-tag.hbs\",\n  \"systems/pf1/templates/items/parts/item-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-weapon-groups.hbs\",\n  \"systems/pf1/templates/items/parts/spell-descriptors.hbs\",\n\n  \"systems/pf1/templates/internal/content-source-view.hbs\",\n\n  // Apps\n  \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n  \"systems/pf1/templates/apps/vision-sharing.hbs\",\n  \"systems/pf1/templates/apps/help-browser.hbs\",\n  \"systems/pf1/templates/apps/action-select.hbs\",\n  \"systems/pf1/templates/apps/item-select.hbs\",\n  \"systems/pf1/templates/apps/actor-select.hbs\",\n\n  // Item Action Partials\n  \"systems/pf1/templates/apps/item-action/action.hbs\",\n  \"systems/pf1/templates/apps/item-action/activation.hbs\",\n  \"systems/pf1/templates/apps/item-action/template.hbs\",\n  \"systems/pf1/templates/apps/item-action/conditionals.hbs\",\n\n  // Compendium browser partials\n  \"systems/pf1/templates/apps/compendium-browser/entries.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/minmax-filter.hbs\",\n\n  // Chat\n  \"systems/pf1/templates/chat/roll-ext.hbs\",\n  \"systems/pf1/templates/chat/defenses.hbs\",\n  \"systems/pf1/templates/chat/parts/gm-description.hbs\",\n\n  // Chat card partials\n  \"systems/pf1/templates/chat/parts/attack-roll-header.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-footer.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-targets.hbs\",\n\n  \"systems/pf1/templates/chat/parts/item-notes.hbs\",\n\n  // Internal Rendering Partials\n  \"systems/pf1/templates/internal/spell-description.hbs\",\n  \"systems/pf1/templates/internal/token-config_vision.hbs\",\n  \"systems/pf1/templates/internal/damage-type-visual.hbs\",\n\n  // Tooltip\n  \"systems/pf1/templates/hud/tooltip.hbs\",\n\n  \"systems/pf1/templates/hud/quick-actions.hbs\",\n\n  // Level Up sections\n  \"systems/pf1/templates/apps/level-up/health.hbs\",\n  \"systems/pf1/templates/apps/level-up/ability-score.hbs\",\n  \"systems/pf1/templates/apps/level-up/fcb.hbs\",\n  \"systems/pf1/templates/apps/level-up/summary.hbs\",\n\n  // Dynamic tooltips\n  \"systems/pf1/templates/extended-tooltip.hbs\",\n]);\n\n/**\n * Define a set of template paths to pre-load\n * Pre-loaded templates are compiled and cached for fast access when rendering\n *\n * @internal\n * @private\n * @returns {Promise<Function[]>} - A Promise resolving to an array of template functions\n */\nexport const preloadHandlebarsTemplates = async () => {\n  // Load the template parts\n  return loadTemplates(templatePaths);\n};\n\n/**\n * Synchronously render a cached Handlebars template using provided data.\n *\n * @internal\n * @private\n * @see {renderTemplate}\n * @param {CachedTemplatePath} path - The template identifier\n * @param {object} [data={}] - The data provided to the template\n * @returns {string} The rendered HTML\n * @throws {Error} If the requested template could not be found in the cache\n */\nexport const renderCachedTemplate = (path, data = {}) => {\n  /** @type {Handlebars.TemplateDelegate|undefined} */\n  const template = Handlebars.partials[path];\n  if (!template) throw new Error(`Template ${path} not found in cache`);\n\n  return template(data, {\n    allowProtoMethodsByDefault: true,\n    allowProtoPropertiesByDefault: true,\n    preventIndent: true,\n  });\n};\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\nimport { calculateRangeFormula } from \"@utils\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Spell item\n */\nexport class ItemSpellPF extends ItemPF {\n  /**\n   * @override\n   * @inheritDoc\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n    hasChanges: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data Creation data\n   * @param {object} options Context options\n   * @param {User} user Triggering user\n   */\n  async _preCreate(data, options, user) {\n    await super._preCreate(data, options, user);\n    this._assignLevelOnCreate(data, options);\n\n    // Handle preparation data creation\n    {\n      const prep = data.system.preparation ?? {};\n      const prepUpdate = {};\n      if (prep.maxAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.maxAmount is now preparation.max\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prepUpdate.max = prep.maxAmount;\n        prepUpdate[\"-=maxAmount\"] = null;\n      }\n      if (prep.preparedAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.preparedAmount is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prepUpdate.value = prep.preparedAmount;\n        prepUpdate[\"-=preparedAmount\"] = null;\n      }\n      if (prep.spontaneousPrepared !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.spontaneousPrepared is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prepUpdate.value = prep.spontaneousPrepared ? 1 : 0;\n        prepUpdate[\"-=spontaneousPrepared\"] = null;\n      }\n\n      // Add preparation\n      if (this.actor && prepUpdate.value === undefined) {\n        // Only spontaneous casters auto-prepare new spells\n        if (this.spellbook?.spellPreparationMode === \"spontaneous\") {\n          prepUpdate.value ??= 1;\n          prepUpdate.max ??= 1;\n        }\n      }\n\n      if (!foundry.utils.isEmpty(prepUpdate)) {\n        this.updateSource({ system: { preparation: prepUpdate } });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} options\n   * @param {User} user\n   */\n  async _preUpdate(changed, options, user) {\n    await super._preUpdate(changed, options, user);\n\n    if (!changed.system) return;\n\n    this._preparationPreUpdate(changed);\n\n    const prep = changed.system.preparation;\n    if (prep) {\n      if (prep.maxAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.maxAmount is now preparation.max\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prep.max = prep.maxAmount;\n        delete prep.maxAmount;\n      }\n      if (prep.preparedAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.preparedAmount is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prep.value = prep.preparedAmount;\n        delete prep.preparedAmount;\n      }\n      if (prep.spontaneousPrepared !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.spontaneousPrepared is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prep.value = prep.spontaneousPrepared ? 1 : 0;\n        delete prep.spontaneousPrepared;\n      }\n    }\n  }\n\n  /**\n   * Constrains and alters prepared slot updates to result in meaningful end results.\n   *\n   * @private\n   * @param {object} changed Change data in pre-update\n   */\n  _preparationPreUpdate(changed) {\n    const prep = changed.system.preparation;\n    if (!prep) return;\n\n    const current = this.system.preparation;\n    const max = prep.max ?? current.max ?? 0;\n    const left = prep.value ?? current.value ?? 0;\n\n    // Constrain left and max to sane values\n    if (left > max) {\n      if (prep.max !== undefined) {\n        prep.value = max;\n      } else if (prep.value !== undefined) {\n        prep.max = left;\n      }\n    }\n\n    // TODO: Remove following once DataModel is implemented with relevant constraints\n    if (prep.max < 0) prep.max = 0;\n    if (prep.value < 0) prep.value = 0;\n  }\n\n  /**\n   * Assign spell level according to spellbook class if present.\n   *\n   * @protected\n   * @param {object} data Item data\n   * @param {object} options Creation options\n   */\n  _assignLevelOnCreate(data, options) {\n    const actor = this.actor;\n    const book = this.system.spellbook;\n    const cls = actor?.system.attributes?.spells?.spellbooks?.[book]?.class;\n    const level = this.system.learnedAt?.class?.[cls];\n    if (Number.isFinite(level)) this.updateSource({ \"system.level\": Math.clamped(level, 0, 9) });\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const itemData = this.system;\n\n    // Spell Level, School, and Components\n    labels.level = pf1.config.spellLevels[itemData.level];\n    labels.school = pf1.config.spellSchools[itemData.school];\n    labels.components = this.getSpellComponents({ compact: true }).join(\" \");\n\n    return labels;\n  }\n\n  /**\n   * Returns the spell's effective spell level, after counting in offsets.\n   *\n   * @deprecated\n   * @param {number} [bonus=0] - Another bonus to account for.\n   * @returns {number} The spell's effective spell level.\n   */\n  getEffectiveSpellLevel(bonus = 0) {\n    foundry.utils.logCompatibilityWarning(\n      `ItemSpellPF.getEffectiveSpellLevel() is deprecated. Use ItemSpellPF.spellLevel instead.`,\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return (this.spellLevel ?? 0) + bonus;\n  }\n\n  /**\n   * Returns the spell's effective caster level, after counting in offsets.\n   *\n   * @deprecated\n   * @param {number} [bonus=0] - Another bonus to account for.\n   * @returns {number} The spell's effective caster level.\n   */\n  getEffectiveCasterLevel(bonus = 0) {\n    foundry.utils.logCompatibilityWarning(\n      `ItemSpellPF.getEffectiveCasterLevel() is deprecated. Use ItemSpellPF.casterLevel instead.`,\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return (this.casterLevel ?? 0) + bonus;\n  }\n\n  preCreateData(data, options, user) {\n    const updates = super.preCreateData(data, options, user);\n\n    const actor = this.actor;\n    if (actor) {\n      // Swap non-psychic components for psychic ones\n      if (this.spellbook?.psychic === true) {\n        if (this.system.components?.verbal === true) {\n          updates[\"system.components.verbal\"] = false;\n          updates[\"system.components.thought\"] = true;\n        }\n        if (this.system.components?.somatic === true) {\n          updates[\"system.components.somatic\"] = false;\n          updates[\"system.components.emotion\"] = true;\n        }\n      }\n    }\n\n    return updates;\n  }\n\n  /** @override */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this.system.preparation ??= {};\n    const prep = this.system.preparation;\n    // Compatibility shims\n    const compat = [\n      [\"maxAmount\", \"max\"],\n      [\"preparedAmount\", \"value\"],\n      [\"spontaneousPrepared\", \"value\"],\n    ];\n    for (const [oldk, newk] of compat) {\n      if (!Object.getOwnPropertyDescriptor(prep, oldk)?.[\"get\"]) {\n        delete prep[oldk];\n        Object.defineProperty(prep, oldk, {\n          get() {\n            foundry.utils.logCompatibilityWarning(\n              `ItemSpellPF preparation.${oldk} is deprecated in favor of preparation.${newk}`,\n              { since: \"PF1 v10\", until: \"PF1 v11\" }\n            );\n            return prep[newk];\n          },\n          enumerable: false,\n        });\n      }\n    }\n  }\n\n  /** @override */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const descs = this.system.descriptors;\n    if (descs) {\n      descs.custom ??= [];\n      descs.value ??= [];\n      descs.total = new Set([...descs.value.map((d) => pf1.config.spellDescriptors[d] || d), ...descs.custom]);\n    }\n  }\n\n  /** @override */\n  getRollData() {\n    const result = super.getRollData();\n\n    result.sl = this.spellLevel || 0;\n\n    const spellbook = this.spellbook;\n    if (spellbook) {\n      const spellAbility = spellbook.ability;\n      let ablMod = \"\";\n      if (spellAbility !== \"\") ablMod = result.abilities?.[spellAbility]?.mod;\n      result.ablMod = ablMod;\n\n      result.cl = this.casterLevel || 0;\n\n      // Add @class shortcut to @classes[classTag]\n      if (spellbook.class === \"_hd\")\n        result.class = { level: result.attributes.hd?.total ?? result.details?.level?.value ?? 0 };\n      else result.class = result.classes?.[spellbook.class] ?? {};\n      Object.defineProperty(result, \"classLevel\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\"@classLevel is deprecated in favor of @class.level\", {\n            since: \"PF1 v10\",\n            until: \"PF1 v11\",\n          });\n          return this.class?.level;\n        },\n      });\n\n      // Add @spellbook shortcut to @spells[bookId]\n      result.spellbook = result.spells[this.system.spellbook];\n    } else {\n      const [sl, cl] = this.constructor.getMinimumCasterLevelBySpellData(this);\n\n      result.sl = sl;\n      result.cl = cl;\n      result.ablMod = Math.floor(sl / 2);\n    }\n\n    return result;\n  }\n\n  getConditionalSubTargets(target) {\n    const result = super.getConditionalSubTargets(target);\n\n    // Add subtargets affecting effects\n    if (target === \"effect\") {\n      result[\"cl\"] = game.i18n.localize(\"PF1.CasterLevel\");\n    }\n\n    // Add misc subtargets\n    if (target === \"misc\") {\n      // Add charges subTarget with specific label\n      if (this.type === \"spell\" && this.useSpellPoints()) result[\"charges\"] = game.i18n.localize(\"PF1.SpellPointsCost\");\n    }\n\n    return result;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    if (rollData.item.sr) {\n      props.push(game.i18n.localize(\"PF1.SpellResistance\"));\n    }\n\n    // Add charges\n    if (this.isCharged && !this.system.atWill) {\n      if (this.useSpellPoints()) {\n        props.push(`${game.i18n.localize(\"PF1.SpellPoints\")}: ${this.charges}/${this.maxCharges}`);\n      } else {\n        props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${this.charges}/${this.maxCharges}`);\n      }\n    }\n  }\n\n  /**\n   * Add charges to the spell or its relevant resource pool (spell points or spontaneous spells).\n   *\n   * @override\n   * @param {number} value - Number of charges to add\n   * @param {object} [data=null] - Additional data to pass to the update\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible or required.\n   */\n  async addCharges(value, data = null) {\n    if (!this.actor) return;\n    if (this.system.atWill) return;\n\n    const spellbook = this.spellbook;\n    if (!spellbook) return;\n    const isSpontaneous = spellbook.spontaneous,\n      spellbookKey = this.system.spellbook || \"primary\",\n      spellLevel = this.system.level;\n\n    if (this.useSpellPoints()) {\n      const curUses = this.getSpellUses();\n      const updateData = {};\n      updateData[`system.attributes.spells.spellbooks.${spellbookKey}.spellPoints.value`] = curUses + value;\n      await this.actor.update(updateData);\n      return this;\n    } else {\n      const newCharges = isSpontaneous\n        ? Math.max(0, (spellbook.spells?.[`spell${spellLevel}`]?.value || 0) + value)\n        : Math.max(0, (this.system.preparation?.value || 0) + value);\n\n      if (!isSpontaneous) {\n        const key = \"system.preparation.value\";\n        if (data == null) {\n          data = {};\n          data[key] = newCharges;\n          return this.update(data);\n        } else {\n          data[key] = newCharges;\n        }\n      } else {\n        const key = `system.attributes.spells.spellbooks.${spellbookKey}.spells.spell${spellLevel}.value`;\n        const actorUpdateData = {};\n        actorUpdateData[key] = newCharges;\n        await this.actor.update(actorUpdateData);\n        return this;\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  get isCharged() {\n    if (this.system.atWill) return false;\n    return true;\n  }\n\n  /** @inheritdoc */\n  get hasFiniteCharges() {\n    if (this.system.atWill) return false;\n    return this.getDefaultChargeCost() > 0;\n  }\n\n  /** @type {number} - Remaining charges */\n  get charges() {\n    return this.getSpellUses();\n  }\n\n  /** @type {number} - Maximum possible charges */\n  get maxCharges() {\n    return this.getSpellUses(true);\n  }\n\n  /**\n   * Get default charge cost for spell actions.\n   *\n   * @param options\n   * @param options.rollData\n   * @returns {number} Number for default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    if (this.system.atWill) return 0;\n\n    if (this.useSpellPoints()) {\n      rollData ??= this.getRollData();\n      const formula = this.getDefaultChargeFormula();\n      return RollPF.safeRollAsync(formula, rollData).total;\n    } else {\n      return super.getDefaultChargeCost({ rollData });\n    }\n  }\n\n  /** @inheritDoc */\n  getDefaultChargeFormula() {\n    if (this.useSpellPoints()) {\n      return this.system.spellPoints?.cost || game.settings.get(\"pf1\", \"spellPointCost\") || \"0\";\n    } else {\n      return super.getDefaultChargeFormula();\n    }\n  }\n\n  /**\n   * @remarks\n   * - Recharging individual spells for spell point, spontaneous, or hybrid spellbooks has no effect.\n   * @override\n   * @inheritDoc\n   */\n  async recharge({ value, period = \"day\", exact = false, maximize = true, commit = true, rollData, context } = {}) {\n    const spellbook = this.spellbook,\n      mode = spellbook?.spellPreparationMode || \"prepared\";\n\n    // Can not recharge non-prepared spellbooks\n    if (mode !== \"prepared\") return;\n\n    // Spellpoints are not on spells\n    if (spellbook?.spellPoints?.useSystem ?? false) return;\n\n    if (period == \"week\") {\n      // Spells do not recharge per week\n      if (exact) return;\n      // When not recharging with exact period, downgrade to \"day\" which is normal spell restoration period\n      period = \"day\";\n    }\n\n    // Spells do not restore on non-day period\n    if (![\"day\", \"any\"].includes(period)) return;\n\n    const prep = this.system.preparation ?? {};\n\n    // No specific value given\n    maximize = !(Number.isFinite(value) && value >= 0);\n\n    // Set value\n    if (maximize) value = prep.max || 0;\n    // Clamp charge value\n    value = Math.clamped(value, 0, prep.max || 0);\n\n    // Cancel pointless or bad update\n    if (value === (prep.value || 0) || !Number.isFinite(value)) return;\n\n    const updateData = { system: { preparation: { value } } };\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /** @type {number} - Effective spell level with offset taken into account. */\n  get spellLevel() {\n    return this.system.level + (this.system.slOffset || 0);\n  }\n\n  /** @type {numbe|null} - EFfective caster level with CL offset taken into account. Null if not linked to valid spellbook */\n  get casterLevel() {\n    const spellbook = this.spellbook;\n    if (!spellbook) return null;\n\n    return spellbook.cl.total + (this.system.clOffset || 0);\n  }\n\n  /** @type {object|undefined} - Actor's linked spellbook data */\n  get spellbook() {\n    const bookId = this.system.spellbook;\n    return this.actor?.system.attributes?.spells.spellbooks[bookId];\n  }\n\n  getDC(rollData = null) {\n    foundry.utils.logCompatibilityWarning(\"ItemSpellPF.getDC() is deprecated in favor of ItemAction.getDC()\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.defaultAction?.getDC(rollData) ?? 10;\n  }\n\n  getSpellUses(max = false) {\n    const itemData = this.system;\n    if (itemData.atWill) return Number.POSITIVE_INFINITY;\n\n    const spellbook = this.spellbook;\n\n    const isSpontaneous = spellbook?.spontaneous ?? false,\n      spellLevel = itemData.level;\n\n    if (this.useSpellPoints()) {\n      if (max) return spellbook.spellPoints?.max ?? 0;\n      return spellbook.spellPoints?.value ?? 0;\n    } else {\n      if (isSpontaneous) {\n        if (itemData.preparation.value > 0) {\n          if (max) return spellbook.spells?.[`spell${spellLevel}`]?.max || 0;\n          return spellbook.spells?.[`spell${spellLevel}`]?.value || 0;\n        }\n      } else {\n        if (max) return itemData.preparation?.max ?? 0;\n        return itemData.preparation?.value ?? 0;\n      }\n    }\n\n    return 0;\n  }\n\n  /** @returns {boolean} - Whether the attached spellbok uses spell points */\n  useSpellPoints() {\n    return this.spellbook?.spellPoints?.useSystem ?? false;\n  }\n\n  /**\n   * Spell components\n   *\n   * @example\n   * ```js\n   * // Discern Lies on Cleric\n   * spell.getSpellComponents(); // V S M/DF\n   * spell.getSpellComponents({compact:true}); // V S DF\n   * ```\n   * @param {object} options - Additional options\n   * @param {boolean} [options.compact] - Remove redundant components (e.g. M/DF becomes DF for divine caster)\n   * @returns {string[]} - Component keys\n   */\n  getSpellComponents({ compact = false } = {}) {\n    const reSplit = pf1.config.re.traitSeparator,\n      srcComponents = this.system.components ?? {},\n      srcMaterials = this.system.materials ?? {};\n\n    const kind = this.spellbook?.kind,\n      //isArcane = kind === \"arcane\",\n      //isPsychic = kind === \"psychic\",\n      //isAlchemical = kind === \"alchemy\",\n      isDivine = kind === \"divine\";\n\n    const components = [];\n    const labels = pf1.config.spellComponents;\n\n    if (srcComponents.verbal) components.push(labels.verbal);\n    if (srcComponents.somatic) components.push(labels.somatic);\n    if (srcComponents.thought) components.push(labels.thought);\n    if (srcComponents.emotion) components.push(labels.emotion);\n\n    // Reverse mapping of CONFIG.PF1.divineFocus for readability\n    const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n\n    let df = srcComponents.divineFocus;\n\n    // Display focus and material only if they aren't overridden by DF variant\n    if (isDivine && df === dfVariants.MDF && compact) {\n      // Downgrade to DF since material is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.material) {\n      let material = labels.material;\n      // Display indetermined M/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.MDF) material = `${material}/${labels.divineFocus}`;\n      if (srcMaterials.value && !compact) material = `${material} (${srcMaterials.value})`;\n      if (material) components.push(material);\n    }\n\n    if (isDivine && df === dfVariants.FDF && compact) {\n      // Downgrade to DF since focus is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.focus) {\n      let focus = labels.focus;\n      // Display indeterminate F/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.FDF) focus = `${focus}/${labels.divineFocus}`;\n      if (srcMaterials.focus && !compact) focus = `${focus} (${srcMaterials.focus})`;\n      if (focus) components.push(focus);\n    }\n\n    if (df === dfVariants.DF) components.push(labels.divineFocus);\n    if (labels.value) components.push(...srcComponents.value.split(reSplit));\n\n    return components;\n  }\n\n  /**\n   * @param {object} itemData - A spell item's data.\n   * @returns {[number,number]} - A tuple containing the spell level and caster level in order.\n   */\n  static getMinimumCasterLevelBySpellData(itemData) {\n    const learnedAt = Object.entries(itemData.system.learnedAt?.class ?? {})?.reduce((cur, [classId, level]) => {\n      const classes = classId.split(\"/\");\n      for (const cls of classes) cur.push([cls, level]);\n      return cur;\n    }, []);\n    const result = [9, 20];\n    for (const [classId, level] of learnedAt) {\n      result[0] = Math.min(result[0], level);\n\n      const tc = pf1.config.classCasterType[classId] || \"high\";\n      if (tc === \"high\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 2);\n      } else if (tc === \"med\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 3);\n      } else if (tc === \"low\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level) * 3);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Used in consumable creation\n   *\n   * @internal\n   * @param string\n   * @param rollData\n   */\n  static _replaceConsumableConversionString(string, rollData) {\n    return string\n      .replace(/@sl/g, `${rollData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}]`)\n      .replace(/@cl/g, \"@item.cl\")\n      .replace(/@ablMod/g, `${rollData.ablMod}[${game.i18n.localize(\"PF1.AbilityScore\")}]`);\n  }\n\n  /**\n   * Convert spell into a consumable item.\n   *\n   * @param {object} origData - Spell item data\n   * @param {\"wand\"|\"scroll\"|\"potion\"} type - Consumable type\n   * @param {object} [options] - Additional options\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @returns {object|null} - Item data for appropriate consumable, or null if dialog option was used and it was cancelled.\n   */\n  static async toConsumable(origData, type, { spellType = \"arcane\" } = {}) {\n    const isWand = type === \"wand\",\n      isPotion = type === \"potion\",\n      isScroll = type === \"scroll\";\n\n    const [minLevel, minCl] = this.getMinimumCasterLevelBySpellData(origData);\n    const level = origData.sl ?? minLevel ?? 1;\n    const cl = origData.cl ?? minCl ?? 1;\n    const materialPrice = origData.system.materials?.gpValue ?? 0;\n\n    const itemData = {\n      type: \"consumable\",\n      name: origData.name,\n      system: {\n        subType: type,\n        spellType: origData.spellType || spellType,\n        description: {},\n        identified: origData.identified ?? true,\n        unidentified: {\n          name: origData.unidentifiedName || game.i18n.localize(`PF1.CreateItem${type.capitalize()}`),\n        },\n        cl, // Caster level\n        aura: { school: origData.system.school },\n        uses: { per: \"single\" },\n        price: 0,\n        hardness: 0,\n        hp: { value: 1, max: 1 },\n        actions: origData.system.actions ?? [],\n        sources: origData.system.sources ?? [],\n      },\n    };\n\n    // Add basic item type source as source for the consumable\n    const extraSources = {\n      wand: { id: \"PZO1110\", pages: \"496\" },\n      scroll: { id: \"PZO1110\", pages: \"490-491\" },\n      potion: { id: \"PZO1110\", pages: \"477-478\" },\n    };\n    const xsrc = extraSources[type];\n    if (xsrc) {\n      const osrc = itemData.system.sources.find((s) => s.id == xsrc.id);\n      if (osrc) {\n        // Merge pages when same source already exists\n        if (osrc.pages) osrc.pages += `, ${xsrc.pages}`;\n        else osrc.pages = xsrc.pages;\n      } else {\n        itemData.system.sources.push(xsrc);\n      }\n    }\n\n    // Initialize default action\n    if (itemData.system.actions.length == 0) itemData.system.actions.push(defaultAction);\n    const defaultAction = itemData.system.actions[0] ?? pf1.components.ItemAction.defaultData;\n    defaultAction.range ??= {};\n\n    // Prepare new action copying over with old data if present\n\n    // Override activation as required by consumables\n    defaultAction.activation.type = \"standard\";\n    defaultAction.activation.unchained.type = \"action\";\n    defaultAction.activation.unchained.cost = 2;\n\n    // Fill in pseudo roll data object\n    const rollData = {\n      item: origData.system,\n      ablMod: Math.floor(level / 2), // Minimum usable ability modifier\n      sl: level,\n      cl,\n    };\n\n    if (isWand) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemWandOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/wand-star.jpg\";\n      itemData.system.uses.pricePerUse =\n        Math.floor(((Math.max(0.5, level) * cl * 750) / 50) * 100) / 100 + materialPrice;\n      itemData.system.hardness = 5;\n      itemData.system.hp.max = 5;\n      itemData.system.hp.value = 5;\n      // Set charges\n      itemData.system.uses.maxFormula = \"50\";\n      itemData.system.uses.value = 50;\n      itemData.system.uses.max = 50;\n      itemData.system.uses.per = \"charges\";\n    } else if (isPotion) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemPotionOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Drink\");\n      itemData.img = \"systems/pf1/icons/items/potions/minor-blue.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 50 + materialPrice;\n      itemData.system.hardness = 1;\n    } else if (isScroll) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemScrollOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/scroll-magic.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 25 + materialPrice;\n    }\n\n    const convertNotes = (data) => {\n      // Replace attack and effect formula data\n      for (const arrKey of [\"attackNotes\", \"effectNotes\"]) {\n        const arr = data[arrKey];\n        if (!arr) continue;\n        for (let idx = 0; idx < arr.length; idx++) {\n          arr[idx] = this._replaceConsumableConversionString(arr[idx], rollData);\n        }\n      }\n    };\n\n    // Adjust all actions\n    for (const action of itemData.system.actions) {\n      // Convert ranges\n      if (isPotion && defaultAction === action) {\n        // Special handling for potions\n        action.range.units = \"personal\";\n        delete action.range.value;\n      } else {\n        // Convert spell-only ranges\n        if ([\"close\", \"medium\", \"long\"].includes(action.range?.units)) {\n          // TODO: These should only replace @cl with @item.level instead of pre-resolving the scaling formula\n          const rlabel = pf1.config.distanceUnits[action.range.units];\n          const rvalue = RollPF.safeRollSync(pf1.config.spellRangeFormulas[action.range.units], rollData).total ?? 0;\n          action.range.value = `${rvalue}[${rlabel}]`;\n          action.range.units = \"ft\";\n        }\n      }\n\n      // Convert template\n      if (action.measureTemplate?.type) {\n        action.measureTemplate.size = this._replaceConsumableConversionString(action.measureTemplate.size, rollData);\n      }\n\n      // Convert extra attacks\n      const exAtk = action.extraAttacks;\n      if (exAtk) {\n        if (exAtk.formula?.count?.length)\n          exAtk.formula.count = this._replaceConsumableConversionString(exAtk.formula.count, rollData);\n        if (exAtk.formula?.bonus?.length)\n          exAtk.formula.bonus = this._replaceConsumableConversionString(exAtk.formula.bonus, rollData);\n\n        for (const bAtk of exAtk.manual ?? []) {\n          bAtk.formula = this._replaceConsumableConversionString(bAtk.formula, rollData);\n        }\n      }\n\n      // Set damage formula\n      for (const dmgPart of action.damage?.parts ?? []) {\n        dmgPart.formula = this._replaceConsumableConversionString(dmgPart.formula, rollData);\n      }\n\n      // Set save\n      if (action.save?.type) {\n        const oldSaveDC = action.save.dc;\n        action.save.dc = `10 + ${origData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}] + ${Math.floor(\n          origData.sl / 2\n        )}[${game.i18n.localize(\"PF1.SpellcastingAbility\")}]`;\n        // Add DC offset\n        if (oldSaveDC?.length) action.save.dc += ` + (${oldSaveDC})[${game.i18n.localize(\"PF1.DCOffset\")}]`;\n      }\n\n      convertNotes(action);\n    }\n\n    convertNotes(itemData.system);\n\n    // Set description\n    const spell = new Item.implementation(origData);\n    spell.reset();\n    // TODO: Make range and duration appear as inline rolls that scale on item CL?\n    const desc = spell.getDescription({ charcard: false, header: true, body: true, rollData });\n    itemData.system.description.value = this._replaceConsumableConversionString(desc, rollData);\n\n    // Create and return synthetic item data\n    return new ItemPF(foundry.utils.expandObject(itemData)).toObject();\n  }\n\n  /**\n   * Open Consumable conversion dialog.\n   *\n   * Automatically calls {@link this.toConsumable} as appropriate.\n   *\n   * @param {object} itemData - Spell item data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.allowSpell=true] - Allow spell creation\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @param {object} [options.actor=undefined] - The actor the consumable is being created on.\n   * @returns {Promise<null|false|object>} - Returns null if cancelled, false if no conversion is to take place, or converted data.\n   */\n  static async toConsumablePrompt(itemData, { allowSpell = true, spellType = \"arcane\", actor = undefined } = {}) {\n    const [sl, cl] = CONFIG.Item.documentClasses.spell.getMinimumCasterLevelBySpellData(itemData);\n\n    const getFormData = (html) => {\n      const formData = foundry.utils.expandObject(new FormDataExtended(html.querySelector(\"form\")).object);\n      foundry.utils.mergeObject(itemData, formData);\n      // NaN check here to allow SL 0\n      if (Number.isNaN(itemData.sl)) itemData.sl = 1;\n      return itemData;\n    };\n\n    const createConsumable = (data, type) => this.toConsumable(data, type, { spellType: data.spellType });\n\n    const buttons = {\n      potion: {\n        icon: '<i class=\"fas fa-prescription-bottle\"></i>',\n        label: game.i18n.localize(\"PF1.CreateItemPotion\"),\n        callback: (html) => createConsumable(getFormData(html), \"potion\"),\n      },\n      scroll: {\n        icon: '<i class=\"fas fa-scroll\"></i>',\n        label: game.i18n.localize(\"PF1.CreateItemScroll\"),\n        callback: (html) => createConsumable(getFormData(html), \"scroll\"),\n      },\n      wand: {\n        icon: '<i class=\"fas fa-magic\"></i>',\n        label: game.i18n.localize(\"PF1.CreateItemWand\"),\n        callback: (html) => createConsumable(getFormData(html), \"wand\"),\n      },\n      spell: {\n        icon: '<i class=\"fas fa-hand-sparkles\"></i>',\n        label: game.i18n.localize(\"TYPES.Item.spell\"),\n        callback: () => false,\n      },\n    };\n\n    if (!allowSpell) delete buttons.spell;\n\n    return Dialog.wait(\n      {\n        title: game.i18n.format(\"PF1.CreateItemForSpell\", { name: itemData.name }),\n        content: await renderTemplate(\"systems/pf1/templates/internal/create-consumable.hbs\", {\n          name: itemData.name,\n          sl,\n          cl,\n          isGM: game.user.isGM,\n          config: pf1.config,\n          spellType,\n          // We assume every other check done at `ActorSheetPF._alterDropItemData` has passed\n          isNPC: actor?.type === \"npc\",\n        }),\n        itemData,\n        buttons,\n        close: () => null,\n        default: \"potion\",\n      },\n      {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"create-consumable\"],\n        jQuery: false,\n      }\n    );\n  }\n\n  /**\n   * @type {boolean} - true if the default action is prepared to cast\n   */\n  get canCast() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemSpellPF.canCast is deprecated in favor of ItemBasePF.canUse and ItemAction.canUse\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return this.canUse && (this.defaultAction?.canUse ?? true);\n  }\n\n  /**\n   * @remarks\n   * Checks for at-will and preparation status.\n   * @inheritDoc\n   */\n  get canUse() {\n    if (this.system.atWill) return true;\n\n    return (this.system.preparation?.value ?? 0) > 0;\n  }\n\n  /**\n   * Determine if this spell is domain/school spell.\n   *\n   * @type {boolean}\n   */\n  get isDomain() {\n    return this.system.domain === true;\n  }\n\n  /** @inheritDoc */\n  getDescription({ chatcard = false, data = {}, rollData, header = true, body = true } = {}) {\n    const headerContent = header\n      ? renderCachedTemplate(\"systems/pf1/templates/internal/spell-description.hbs\", {\n          ...data,\n          ...this.getDescriptionData({ rollData }),\n          chatcard: chatcard === true,\n        })\n      : \"\";\n    const bodyContent = body ? this.system.description.value : \"\";\n    return headerContent + bodyContent;\n  }\n\n  /** @inheritDoc */\n  getDescriptionData({ rollData } = {}) {\n    const reSplit = pf1.config.re.traitSeparator;\n    const srcData = this.system;\n    const defaultAction = this.defaultAction;\n    const actionData = defaultAction?.data ?? {};\n\n    rollData ??= defaultAction?.getRollData() ?? this.getRollData();\n\n    const label = {\n      school: pf1.config.spellSchools[srcData.school],\n      subschool: srcData.subschool || \"\",\n      descriptors: \"\",\n    };\n    const data = {\n      data: foundry.utils.mergeObject(this.system, srcData, { inplace: false }),\n      label: label,\n    };\n\n    // Set subschool and descriptors label\n    {\n      const value = srcData.descriptors?.value ?? [];\n      const custom = srcData.descriptors?.custom ?? [];\n      label.descriptors = [\n        ...value.map((descriptor) => pf1.config.spellDescriptors[descriptor] ?? descriptor),\n        ...custom,\n      ]\n        .filter((x) => x)\n        .join(\", \");\n    }\n    // Set information about when the spell is learned\n    data.learnedAt = {};\n    if (srcData.learnedAt) {\n      [\"class\", \"domain\", \"subDomain\", \"elementalSchool\", \"bloodline\"].forEach(\n        (category) =>\n          (data.learnedAt[category] = Object.entries(srcData.learnedAt[category])\n            .map(([classId, level]) => {\n              classId = pf1.config.classNames[classId] || classId;\n              return `${classId} ${level}`;\n            })\n            .join(\", \"))\n      );\n    }\n\n    const isUnchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n    // Set casting time label\n    const act = defaultAction?.activation;\n    if (act != null) {\n      const activationCost = act.cost;\n      const activationType = act.type;\n      const activationTypes = isUnchainedActionEconomy\n        ? pf1.config.abilityActivationTypes_unchained\n        : pf1.config.abilityActivationTypes;\n      const activationTypesPlurals = isUnchainedActionEconomy\n        ? pf1.config.abilityActivationTypesPlurals_unchained\n        : pf1.config.abilityActivationTypesPlurals;\n\n      if (activationType) {\n        if (activationType === \"special\") {\n          label.castingTime = activationCost || activationTypes.special;\n        } else if (activationTypesPlurals[activationType] != null) {\n          if (activationCost === 1) label.castingTime = `${activationTypes[activationType]}`;\n          else label.castingTime = `${activationTypesPlurals[activationType]}`;\n        } else {\n          label.castingTime = `${activationTypes[activationType]}`;\n        }\n      }\n      if (Number.isFinite(activationCost) && label.castingTime != null)\n        label.castingTime = `${activationCost} ${label.castingTime}`;\n    }\n\n    // Set components label\n    label.components = this.getSpellComponents().join(\", \");\n\n    // Set duration label\n    const duration = actionData.duration;\n    switch (duration?.units) {\n      case \"spec\":\n        label.duration = duration.value;\n        break;\n      case \"seeText\":\n      case \"inst\":\n      case \"perm\":\n        label.duration = pf1.config.timePeriods[duration.units];\n        break;\n      case \"turn\": {\n        const unit = pf1.config.timePeriods[duration.units];\n        label.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n        break;\n      }\n      case \"round\":\n      case \"minute\":\n      case \"hour\":\n      case \"day\":\n      case \"month\":\n      case \"year\":\n        if (duration.value) {\n          const unit = pf1.config.timePeriods[duration.units];\n          const roll = Roll.defaultImplementation.safeRollAsync(duration.value, rollData);\n          const value = roll.total;\n          if (!roll.err) {\n            label.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n          } else {\n            console.error(\"Error in duration formula:\", { formula: duration.value, rollData, roll }, roll.err, this);\n          }\n          label.durationFormula = duration.value;\n          data.variableDuration = /@\\w/.test(duration.value);\n        }\n        break;\n    }\n\n    // Dismissable, but only if special duration isn't used\n    // TODO: Better i18n support\n    if (label.duration && duration.dismiss && duration.units !== \"spec\") {\n      label.duration += \" \" + game.i18n.localize(\"PF1.DismissableMark\");\n    }\n\n    // Set effect label\n    {\n      const effect = actionData.spellEffect;\n      if (effect) label.effect = effect;\n    }\n    // Set targets label\n    {\n      const targets = actionData.target?.value;\n      if (targets) label.targets = targets;\n    }\n    // Set range label\n    {\n      const rangeUnit = actionData.range?.units;\n      const rangeValue = actionData.range?.value;\n\n      if (rangeUnit != null && rangeUnit !== \"none\") {\n        label.range = pf1.config.distanceUnits[rangeUnit];\n        const units = pf1.utils.getDistanceSystem();\n        switch (rangeUnit) {\n          case \"close\":\n            label.range = `${label.range} ${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeShortMetric\" : \"PF1.SpellRangeShort\"\n            )}`;\n            break;\n          case \"medium\":\n            label.range = `${label.range} ${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeMediumMetric\" : \"PF1.SpellRangeMedium\"\n            )}`;\n            break;\n          case \"long\":\n            label.range = `${label.range} ${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeLongMetric\" : \"PF1.SpellRangeLong\"\n            )}`;\n            break;\n          case \"ft\":\n          case \"mi\":\n            if (!rangeValue) label.range = \"\";\n            else {\n              let rf = calculateRangeFormula(rangeValue, rangeUnit, rollData);\n              if (rangeUnit === \"mi\") rf /= 5_280; // Convert feet back to miles\n              const [r, rt] = pf1.utils.convertDistance(rf, rangeUnit);\n              const rl = pf1.config.measureUnitsShort[rt];\n              label.range = `${r} ${rl}`;\n            }\n            break;\n          case \"spec\":\n            label.range = rangeValue || label.range;\n            break;\n        }\n      }\n    }\n    // Set area label\n    {\n      const area = actionData.area;\n\n      if (area) label.area = area;\n    }\n\n    // Set DC and SR\n    {\n      const savingThrowDescription = actionData.save?.description;\n      label.savingThrow = savingThrowDescription || game.i18n.localize(\"PF1.None\");\n\n      const sr = srcData.sr;\n      label.sr = (sr === true ? game.i18n.localize(\"PF1.Yes\") : game.i18n.localize(\"PF1.No\")).toLowerCase();\n\n      if (actionData.range?.units !== \"personal\") data.useDCandSR = true;\n    }\n\n    const harmless = actionData.save?.harmless ?? false;\n    if (harmless) label.harmless = game.i18n.localize(\"PF1.Yes\").toLowerCase();\n\n    return data;\n  }\n\n  /**\n   * Number of slots the spell takes to prepare.\n   *\n   * Quick access to .system.slotCost with additional considerations such as at-will toggle.\n   *\n   * Defaults to 1 if the data is not present, 0 if the spell is at-will.\n   *\n   * @type {number}\n   */\n  get slotCost() {\n    if (this.system.atWill) return 0;\n    return this.system.slotCost ?? 1;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Weapon item\n */\nexport class ItemWeaponPF extends ItemPhysicalPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Set weapon subtype if not present\n    const newWeaponType = changed.system?.subType;\n    if (newWeaponType != null && newWeaponType !== this.system.subType) {\n      const subtype = changed.system.weaponSubtype ?? this.system.weaponSubtype ?? \"\";\n      const keys = Object.keys(pf1.config.weaponTypes[newWeaponType]).filter((o) => !o.startsWith(\"_\"));\n      if (!subtype || !keys.includes(subtype)) {\n        changed.system.weaponSubtype = keys[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const { weaponTypes } = pf1.config;\n\n    // Type and subtype labels\n    let wType = this.system.subType;\n    const typeKeys = Object.keys(weaponTypes);\n    if (!typeKeys.includes(wType)) wType = typeKeys[0];\n\n    let wSubtype = this.system.weaponSubtype;\n    const subtypeKeys = Object.keys(weaponTypes[wType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(wSubtype)) wSubtype = subtypeKeys[0];\n\n    labels.subType = weaponTypes[wType]._label;\n    labels.childType = weaponTypes[wType][wSubtype];\n\n    labels.properties = [\n      ...Object.entries(this.system.properties ?? {})\n        .filter(([_, enabled]) => enabled)\n        .map(([id]) => pf1.config.weaponProperties[id] || id),\n    ];\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    super.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    if (this.showUnidentifiedData) return;\n\n    if (labels.weaponSubtype) props.push(labels.weaponSubtype);\n  }\n\n  /** @inheritDoc */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Weapons do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /** @inheritDoc */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks\n   * Not 100% RAW correct as this applies armor table to weapons,\n   * but since Paizo did not provide a table for weapons\n   * besides stating weapons for small are half weight, we assume they use the same table.\n   *\n   * @see {@link pf1.documents.item.ItemEquipmentPF.getWeightMultiplier}\n   */\n  getWeightMultiplier() {\n    // Use same as armor, even though Paizo has only stats for halving for small and nothing else.\n    return this._getArmorWeightMultiplier();\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\n/**\n * Implant item\n *\n * Cybernetics, magic tattoos, necrografts, demonic implants, piercings, etc.\n */\nexport class ItemImplantPF extends ItemPhysicalPF {\n  /** @override */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.implanted === true) {\n      this.executeScriptCalls(\"implant\", { implanted: true });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.implanted === true) {\n        this.executeScriptCalls(\"implant\", { implanted: false });\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'implant' script calls\n    const implanted = changed.system?.implanted;\n    if (implanted != null) {\n      this.executeScriptCalls(\"implant\", { implanted });\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.implantTypes[this.subType];\n\n    switch (this.subType) {\n      case \"cybertech\":\n        labels.slot = pf1.config.implantSlots.cybertech[this.system.slot] ?? pf1.config.implantSlots.cybertech.none;\n        break;\n    }\n\n    const checkYes = '<i class=\"fas fa-check\"></i>';\n    const checkNo = '<i class=\"fas fa-times\"></i>';\n    labels.equipped = this.system.implanted ? checkYes : checkNo;\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  adjustContained() {\n    // Everything in containers count as carried\n    this.system.carried = true;\n\n    // Auto-unimplant\n    this.system.implanted = false;\n  }\n\n  /** @inheritDoc */\n  prepareWeight() {\n    super.prepareWeight();\n\n    // Implanted items weigh nothing\n    const itemData = this.system;\n    const weight = itemData.weight;\n    if (itemData.implanted) {\n      weight.total = 0;\n      weight.converted.total = 0;\n\n      // If there's more than 1 in stack, restore part of the weight\n      if (itemData.quantity > 1) {\n        // Partial duplication from base physical item\n        const baseWeight = weight.value * this.getWeightMultiplier();\n        weight.total = baseWeight * (itemData.quantity - 1);\n        weight.converted.total = pf1.utils.convertWeight(weight.total);\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  get isActive() {\n    if (this.system.quantity <= 0) return false;\n    if (this.subType === \"cybertech\" && this.system.disabled) return false;\n    return this.system.implanted || false;\n  }\n\n  /**\n   * Determines if the item implanted.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.implanted || false;\n  }\n\n  /** @inheritDoc */\n  async setActive(active, context) {\n    return this.update({ \"system.implanted\": active }, context);\n  }\n}\n","/**\n * Spellbook details.\n */\nexport class Spellbook {\n  /**\n   * Book key.\n   */\n  key;\n\n  /**\n   * Owning actor.\n   */\n  actor;\n\n  /**\n   * Raw spellbook data.\n   */\n  data;\n\n  /**\n   * All spells.\n   */\n  spells = [];\n\n  level = {};\n\n  /**\n   * @param bookKey Book key.\n   * @param {ActorPF} actor Owning actor.\n   */\n  constructor(bookKey, actor) {\n    this.key = bookKey;\n    this.actor = actor;\n    this.data = actor.system.attributes.spells.spellbooks[bookKey];\n  }\n\n  /**\n   * Add spell to the spellbook and to its appropriate level.\n   *\n   * @param {ItemSpellPF} spell\n   */\n  addSpell(spell) {\n    this.spells.push(spell);\n\n    // Basic sanity check\n    const level = spell.system.level;\n    if (Math.clamped(level, 0, 9) !== level) {\n      console.error(\"Spell with impossible spell level:\", spell);\n      return;\n    }\n\n    // Ensure appropriate spell level exists\n    this.level[level] ??= new SpellbookLevel(this);\n\n    // Add spell to the spell level also\n    this.level[level].spells.push(spell);\n  }\n}\n\n/**\n * Spellbook leveled details.\n */\nexport class SpellbookLevel {\n  /**\n   * Owning book.\n   */\n\n  book;\n  /**\n   * Spells for level.\n   */\n  spells = [];\n\n  constructor(book) {\n    this.book = book;\n  }\n}\n\nexport class SpellbookSlots {\n  level = 0;\n  max = 0;\n  value = 0;\n  domain = 0;\n  domainMax = 0;\n  domainUnused = 0;\n  used = 0;\n  total = 0;\n\n  /**\n   * @param {object} options - Options\n   * @param {number} options.max - Maximum normal spells\n   * @param {number} options.domain - Maximum domain spells\n   * @param {number} options.level - Spell level\n   */\n  constructor({ max = 0, domain = 0, level = 0 } = {}) {\n    this.level = level;\n\n    // Enforce lack of domain slots for level 0\n    if (level === 0) domain = 0;\n\n    this.value = max + domain;\n    this.max = max;\n\n    this.domain = domain;\n    this.domainMax = domain;\n    this.domainUnused = domain;\n\n    this.total = max + domain;\n  }\n}\n\nexport class SpellRanges {\n  close;\n  medium;\n  long;\n\n  cl;\n\n  constructor(cl) {\n    this.cl = cl;\n    this.close = pf1.utils.calculateRange(null, \"close\", { cl })[0];\n    this.medium = pf1.utils.calculateRange(null, \"medium\", { cl })[0];\n    this.long = pf1.utils.calculateRange(null, \"long\", { cl })[0];\n  }\n}\n\nexport class SpellbookMode {\n  raw;\n\n  get isHybrid() {\n    return this.raw === \"hybrid\";\n  }\n\n  get isPrestige() {\n    return this.raw === \"prestige\";\n  }\n\n  get isSpontaneous() {\n    return this.raw === \"spontaneous\";\n  }\n\n  get isPrepared() {\n    return this.raw === \"prepared\";\n  }\n\n  get usesSpellpoints() {\n    return this.book.spellPoints?.useSystem === true;\n  }\n\n  get isSemiSpontaneous() {\n    return this.isSpontaneous || this.isHybrid || this.isPrestige || this.usesSpellpoints || false;\n  }\n\n  constructor(book) {\n    this.book = book;\n\n    let mode = book.spellPreparationMode;\n\n    // Shunt invalid mode\n    if (!mode) mode = book.spellPreparationMode = \"spontaneous\";\n\n    this.raw = mode;\n  }\n}\n","// Add Vision Sharing sheet to ActorDirectory context options\nHooks.on(\"getActorDirectoryEntryContext\", function sharedVision(html, menu) {\n  menu.push({\n    name: \"PF1.Application.VisionSharing.Label\",\n    icon: '<i class=\"fas fa-eye\"></i>',\n    condition: () => game.user.isGM,\n    callback: ([li]) =>\n      game.actors.get(li.dataset.documentId)?.visionSharingSheet?.render(true, {\n        focus: true,\n        // Positioning copied from Foundry's ownership dialog\n        top: Math.min(li.offsetTop, window.innerHeight - 350),\n        left: window.innerWidth - 720,\n      }),\n  });\n});\n\nexport class VisionSharingSheet extends ActorSheet {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"vision-sharing\"],\n      template: \"systems/pf1/templates/apps/vision-sharing.hbs\",\n      width: 400,\n      height: \"auto\",\n      closeOnSubmit: true,\n      submitOnClose: false,\n      submitOnChange: false,\n      sheetConfig: false,\n    };\n  }\n\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.VisionSharing.Label\") + `: ${this.actor.name}`;\n    if (this.actor.token) title += \"[\" + game.i18n.localize(\"Token\") + \"]\";\n    return title;\n  }\n\n  async getData() {\n    const context = {\n      levels: {\n        false: \"PF1.No\",\n        true: \"PF1.Yes\",\n      },\n      users: game.users.players.reduce((rv, user) => {\n        rv[user.id] = {\n          user,\n          level: null,\n        };\n        return rv;\n      }, {}),\n    };\n\n    const config = this.actor.getFlag(\"pf1\", \"visionSharing\");\n    context.default = String(config?.default ?? false);\n    if (config?.users) {\n      Object.entries(config.users).forEach(([userId, level]) => (context.users[userId].level = String(level ?? null)));\n    }\n\n    return context;\n  }\n\n  _getHeaderButtons() {\n    // HACK: Do not display import button\n    return super._getHeaderButtons().filter((b) => b.class !== \"import\");\n  }\n\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Clear users that are using default\n    for (const [userId, level] of Object.entries(formData.users)) {\n      if (level) formData.users[userId] = Boolean(level);\n      else formData.users[`-=${userId}`] = null;\n    }\n\n    await this.actor.setFlag(\"pf1\", \"visionSharing\", formData);\n  }\n}\n","/**\n * Resource interface.\n */\nexport class Resource {\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /** @type {ItemPF} */\n  #item;\n  get item() {\n    return this.#item;\n  }\n\n  /**\n   * @param {number} value Value to add to the charges.\n   * @returns {Promise} Update promise\n   */\n  async add(value) {\n    return this.item.addCharges(value);\n  }\n\n  constructor(item) {\n    this.#item = item;\n    const tag = item.system.tag;\n\n    Object.defineProperties(this, {\n      value: {\n        get() {\n          return this.item.charges;\n        },\n        enumerable: true,\n      },\n      max: {\n        get() {\n          return this.item.maxCharges;\n        },\n        enumerable: true,\n      },\n      _id: {\n        value: item.id,\n        enumerable: true,\n      },\n      tag: {\n        value: tag,\n        enumerable: true,\n      },\n    });\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\nimport { ItemPF, ItemRacePF } from \"@item/_module.mjs\";\nimport { createTag, fractionalToString, enrichHTMLUnrolled, openJournal } from \"@utils\";\nimport {\n  applyChanges,\n  addDefaultChanges,\n  getChangeFlat,\n  getSourceInfo,\n  setSourceInfoByName,\n  getHighestChanges,\n} from \"./utils/apply-changes.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\nimport { Spellbook, SpellRanges, SpellbookMode, SpellbookSlots } from \"./utils/spellbook.mjs\";\nimport { ItemChange } from \"../../components/change.mjs\";\nimport { VisionSharingSheet } from \"module/applications/vision-sharing.mjs\";\nimport { Resource } from \"./components/resource.mjs\";\n\n/**\n * Extend the base Actor class to implement additional game system logic.\n */\nexport class ActorPF extends ActorBasePF {\n  constructor(...args) {\n    super(...args);\n\n    if (this.itemFlags === undefined)\n      /**\n       * Init item flags.\n       */\n      this.itemFlags = { boolean: {}, dictionary: {} };\n\n    if (this.changeItems === undefined)\n      /**\n       * A list of all the active items with changes.\n       *\n       * @type {ItemPF[]}\n       */\n      this.changeItems = [];\n\n    if (this.changes === undefined)\n      /**\n       * Stores all ItemChanges from carried items.\n       *\n       * @public\n       * @type {Collection<ItemChange>}\n       */\n      this.changes = new Collection();\n\n    if (this._rollData === undefined)\n      /**\n       * Cached roll data for this item.\n       *\n       * @internal\n       * @type {object}\n       */\n      this._rollData = null;\n\n    if (this.containerItems === undefined)\n      /**\n       * All items this actor is holding in containers.\n       *\n       * @type {ItemPF[]}\n       */\n      this.containerItems = [];\n\n    this._visionSharingSheet ??= null;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const updates = this.preCreateData(data, context, user);\n\n    if (Object.keys(updates).length) this.updateSource(updates);\n  }\n\n  /**\n   * Meant to be overridden.\n   *\n   * @abstract\n   * @protected\n   * @augments _preCreate\n   * @param data\n   * @param options\n   * @param userId\n   * @returns {object} Update data to replace with.\n   */\n  preCreateData(data, options, userId) {\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Generic chatlog listener\n   *\n   * @internal\n   * @param {JQuery<HTMLElement>} html\n   */\n  static chatListeners(html) {\n    html.on(\"click\", \"button[data-action], a[data-action]\", this._onChatCardButtonAction.bind(this));\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  static async _onChatCardButtonAction(event) {\n    event.preventDefault();\n\n    // Extract card data\n    const button = event.currentTarget;\n    const card = button.closest(\".chat-card\");\n    const action = button.dataset.action;\n\n    // Roll saving throw\n    if (action === \"defense-save\") {\n      const messageId = card.closest(\".chat-message\").dataset.messageId;\n      const message = game.messages.get(messageId);\n      const actor = ChatMessage.getSpeakerActor(message.speaker);\n      const saveId = button.dataset.save;\n      actor.rollSavingThrow(saveId, { event });\n    } else if (action === \"save\") {\n      const saveId = button.dataset.type;\n\n      let actors = canvas.tokens.controlled.map((t) => t.actor).filter((t) => !!t);\n      if (actors.length == 0 && game.user.character) actors = [game.user.character];\n\n      let noSound = false;\n      for (const actor of actors) {\n        actor?.rollSavingThrow(saveId, { event, noSound });\n        noSound = true;\n      }\n    }\n    // Show compendium entry\n    else if (action === \"open-compendium-entry\") {\n      openJournal(button.dataset.compendiumEntry);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @type {number} - Effective spell failure percentage as number from 0 to 100.\n   */\n  get spellFailure() {\n    return this.itemTypes.equipment\n      .filter((o) => o.system.equipped === true)\n      .reduce((cur, o) => cur + (o.system.spellFailure || 0), 0);\n  }\n\n  /**\n   * Actor's current race item.\n   *\n   * @type {pf1.documents.item.ItemRacePF|null}\n   */\n  get race() {\n    return this.itemTypes.race[0] ?? null;\n  }\n\n  /**\n   * @internal\n   * @param {SourceInfo} src - Source info\n   */\n  static _getSourceLabel(src) {\n    const item = src.change?.parent;\n    if (item) {\n      const subtype = item.subType;\n      let typeLabel;\n\n      if (subtype && ((item.system.identified ?? true) || game.user.isGM) && ![\"weapon\"].includes(item.type))\n        typeLabel = game.i18n.localize(`PF1.Subtypes.Item.${item.type}.${subtype}.Single`);\n      else typeLabel = game.i18n.localize(`TYPES.Item.${item.type}`);\n\n      return `${src.name} (${typeLabel})`;\n    }\n\n    return src.name;\n  }\n\n  /**\n   * Retrieve valid skill change targets for this actor.\n   *\n   * @internal\n   */\n  get _skillTargets() {\n    const skills = [];\n    for (const [sklKey, skl] of Object.entries(this.system.skills)) {\n      if (skl == null) continue;\n      // Add main skill\n      skills.push(`skill.${sklKey}`);\n      // Add subskills if present\n      for (const subSklKey of Object.keys(skl.subSkills ?? [])) {\n        skills.push(`skill.${sklKey}.${subSklKey}`);\n      }\n    }\n    return skills;\n  }\n\n  /**\n   * Change targets for spellbooks on the actor.\n   *\n   * @internal\n   * @type {Array[]} Target paths\n   */\n  get _spellbookTargets() {\n    const spellTargets = [];\n    // Add caster level and concentration to targets\n    for (const [bookId, bookData] of Object.entries(this._source.system.attributes?.spells?.spellbooks ?? {})) {\n      if (bookData.inUse) {\n        spellTargets.push(`cl.book.${bookId}`, `concn.${bookId}`);\n      }\n    }\n    return spellTargets;\n  }\n\n  /**\n   * @internal\n   */\n  _prepareContainerItems() {\n    const collection = [];\n\n    /**\n     * @param {Item} item\n     */\n    function getContainerContents(item) {\n      if (item.type !== \"container\") return;\n\n      item.items.forEach((i) => {\n        collection.push(i);\n        getContainerContents(i);\n      });\n    }\n\n    this.itemTypes.container.forEach((item) => {\n      getContainerContents(item);\n    });\n\n    this.containerItems = collection;\n  }\n\n  /**\n   * Prepare boolean and dictionary flags.\n   *\n   * @internal\n   */\n  _prepareItemFlags() {\n    const items = this.allItems;\n    const bFlags = {};\n    const dFlags = {};\n\n    for (const item of items) {\n      // Process boolean flags\n      if (item.isActive) {\n        const flags = item.system.flags?.boolean || {};\n        for (const flag of Object.keys(flags)) {\n          bFlags[flag] ??= { sources: [] };\n          bFlags[flag].sources.push(item);\n        }\n      }\n\n      // Process dictionary flags\n      const tag = item.system.tag;\n      if (tag) {\n        const dEntries = Object.entries(item.system.flags?.dictionary || {});\n        if (dEntries.length) {\n          dFlags[tag] ||= {};\n\n          for (const [key, value] of dEntries) {\n            if (dFlags[tag][key] !== undefined && this.isOwner) {\n              const msg = game.i18n.format(\"PF1.Warning.DuplicateDFlag\", {\n                actor: this.uuid,\n                item: item.name,\n                key,\n                tag,\n              });\n              ui.notifications.warn(msg, { console: false });\n              console.warn(msg, item);\n            }\n\n            dFlags[tag][key] = item.isActive ? value : 0;\n          }\n        }\n      }\n    }\n\n    this.itemFlags = {\n      boolean: bFlags,\n      dictionary: dFlags,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter((item) => item.hasChanges && item.isActive);\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    addDefaultChanges.call(this, changes);\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  applyActiveEffects() {\n    // Apply active effects. Required for status effects in v11 and onward, such as blind and invisible.\n    super.applyActiveEffects();\n\n    this.prepareConditions();\n\n    this._prepareContainerItems();\n    this._prepareItemFlags();\n    this._prepareChanges();\n  }\n\n  /**\n   * Deletes expired temporary active effects and disables linked expired buffs.\n   *\n   * @param {object} [options] Additional options\n   * @param {Combat} [options.combat] Combat to expire data in, if relevant\n   * @param {number} [options.worldTime] - World time\n   * @param {number} [options.timeOffset=0] Time offset from world time\n   * @param {string} [options.event] - Expiration event\n   * @param {number} [options.initiative] - Initiative based expiration marker\n   * @param {DocumentModificationContext} [context] Document update context\n   * @throws {Error} - With insufficient permissions to control the actor.\n   */\n  async expireActiveEffects(\n    { combat, timeOffset = 0, worldTime = null, event = null, initiative = null } = {},\n    context = {}\n  ) {\n    if (!this.isOwner) throw new Error(\"Must be owner\");\n\n    // Canonical world time.\n    // Due to async code in numerous places and no awaiting of time updates, this can go out of sync of actual time.\n    worldTime ??= game.time.worldTime;\n    worldTime += timeOffset;\n\n    // Effects that have timed out\n    const expiredEffects = this._effectsWithDuration.filter((ae) => {\n      const { seconds, startTime } = ae.duration;\n      const { rounds, startRound } = ae.duration;\n\n      // Calculate remaining duration.\n      // AE.duration.remaining is updated by Foundry only in combat and is unreliable.\n      let remaining = Infinity;\n      // Convert rounds to seconds\n      if (Number.isFinite(seconds) && seconds >= 0) {\n        const elapsed = worldTime - (startTime ?? 0);\n        remaining = seconds - elapsed;\n      } else if (rounds > 0 && combat) {\n        // BUG: This will ignore which combat the round tracking started for\n        const elapsed = combat.round - (startRound ?? 0);\n        remaining = (rounds - elapsed) * CONFIG.time.roundTime;\n      }\n\n      // Time still remaining\n      if (remaining > 0) return false;\n\n      const flags = ae.getFlag(\"pf1\", \"duration\") ?? {};\n\n      switch (flags.end || \"turnStart\") {\n        // Initiative based ending\n        case \"initiative\":\n          if (initiative !== null) {\n            return initiative <= flags.initiative;\n          }\n          // Anything not on initiative expires if they have negative time remaining\n          return remaining < 0;\n        // End on turn start, but we're not there yet\n        case \"turnStart\":\n          if (remaining === 0 && ![\"turnStart\", \"turnEnd\"].includes(event)) return false;\n          break;\n        // End on turn end, but we're not quite there yet\n        case \"turnEnd\":\n          if (remaining === 0 && event !== \"turnEnd\") return false;\n          break;\n      }\n\n      // Otherwise end when time is out\n      return remaining <= 0;\n    });\n\n    const disableActiveEffects = [],\n      deleteActiveEffects = [],\n      disableBuffs = [];\n\n    for (const ae of expiredEffects) {\n      let item;\n      // Use AE parent when available\n      if (ae.parent instanceof Item) item = ae.parent;\n      // Otherwise support older origin cases\n      else item = ae.origin ? fromUuidSync(ae.origin, { relative: this }) : null;\n\n      if (item?.type === \"buff\") {\n        disableBuffs.push({ _id: item.id, \"system.active\": false });\n      } else {\n        if (ae.getFlag(\"pf1\", \"autoDelete\")) {\n          deleteActiveEffects.push(ae.id);\n        } else {\n          disableActiveEffects.push({ _id: ae.id, disabled: true });\n        }\n      }\n    }\n\n    // Add context info for why this update happens to allow modules to understand the cause.\n    context.pf1 ??= {};\n    context.pf1.reason = \"duration\";\n\n    if (deleteActiveEffects.length) {\n      const deleteAEContext = foundry.utils.mergeObject(\n        { render: !disableBuffs.length && !disableActiveEffects.length },\n        context\n      );\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", deleteActiveEffects, deleteAEContext);\n    }\n\n    if (disableActiveEffects.length) {\n      const disableAEContext = foundry.utils.mergeObject({ render: !disableBuffs.length }, context);\n      await this.updateEmbeddedDocuments(\"ActiveEffect\", disableActiveEffects, disableAEContext);\n    }\n\n    if (disableBuffs.length) {\n      await this.updateEmbeddedDocuments(\"Item\", disableBuffs, context);\n    }\n  }\n\n  /**\n   * Prepare actor data before items are prepared.\n   *\n   * @override\n   */\n  prepareBaseData() {\n    this._initialized = false; // For preventing items initializing certain data too early\n\n    super.prepareBaseData();\n\n    this.system.details ??= {};\n    this.system.details.level ??= {};\n\n    /** @type {Record<string, SourceInfo>} */\n    this.sourceInfo = {};\n    this.changeFlags = {};\n\n    // Reset equipment info\n    this.equipment = {\n      shield: { type: pf1.config.shieldTypes.none, id: undefined },\n      armor: { type: pf1.config.armorTypes.none, id: undefined },\n    };\n\n    // Reset class info\n    this.classes = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n\n    this._resetInherentTotals();\n\n    this._prepareNaturalReach();\n\n    if (Hooks.events.pf1PrepareBaseActorData?.length) {\n      Hooks.callAll(\"pf1PrepareBaseActorData\", this);\n    }\n\n    // Update total level and mythic tier\n    const classes = this.itemTypes.class;\n    /** @type {{hd:number,mythic:number,level:number}} */\n    const levels = classes.reduce(\n      (cur, o) => {\n        o.reset(); // HACK: Out of order preparation for later.\n        cur.hd += o.hitDice;\n        if (![\"mythic\", \"racial\"].includes(o.subType)) {\n          cur.level += o.system.level ?? 0;\n        }\n        cur.mythic += o.mythicTier;\n        return cur;\n      },\n      { hd: 0, mythic: 0, level: 0 }\n    );\n\n    this.system.details.level.value = levels.level;\n    this.system.details.mythicTier = levels.mythic;\n\n    // Refresh ability scores\n    for (const ability of Object.values(this.system.abilities)) {\n      const value = ability.value;\n      if (value === null) {\n        ability.total = null;\n        ability.base = null;\n      } else {\n        ability.undrained = value;\n        ability.total = value - ability.drain;\n        ability.penalty = (ability.penalty || 0) - Math.abs(ability.userPenalty || 0);\n        ability.base = ability.total;\n      }\n    }\n    this.refreshAbilityModifiers();\n\n    // Reset BAB\n    {\n      const k = \"system.attributes.bab.total\";\n      const v = Math.floor(\n        classes.reduce((cur, cls) => {\n          // HACK: Depends on earlier out of order preparation\n          const bab = cls.system.babBase;\n          if (bab !== 0) {\n            getSourceInfo(this.sourceInfo, k).positive.push({\n              name: cls.name,\n              value: fractionalToString(bab),\n            });\n          }\n          return cur + bab;\n        }, 0)\n      );\n      this.system.attributes.bab.total = Math.floor(v);\n\n      // Add .value for NPC lite sheet\n      if (this.system.attributes.bab.value) this.system.attributes.bab.total += this.system.attributes.bab.value ?? 0;\n    }\n\n    this._prepareClassSkills();\n\n    // Reset HD\n    foundry.utils.setProperty(this.system, \"attributes.hd.total\", levels.hd);\n  }\n\n  /**\n   * Prepare actor.system.conditions for use.\n   *\n   * @protected\n   */\n  prepareConditions() {\n    this.system.conditions = {};\n    const conditions = this.system.conditions;\n\n    // Populate condition base values\n    for (const condition of pf1.registry.conditions.keys()) {\n      conditions[condition] = false;\n    }\n\n    // Fill in actual state\n    // ??[] is to deal with the set not being available yet for some actors\n    for (const status of this.statuses) {\n      if (status in conditions) {\n        conditions[status] = true;\n      }\n    }\n\n    // Conditions backwards compatibility\n    if (!Object.getOwnPropertyDescriptor(this.system.attributes, \"conditions\")?.[\"get\"]) {\n      delete this.system.attributes.conditions;\n      Object.defineProperty(this.system.attributes, \"conditions\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"actor.system.attributes.conditions is deprecated in favor of actor.system.conditions and actor.statuses\",\n            { since: \"PF1 v10\", until: \"PF1 v11\" }\n          );\n          return conditions;\n        },\n        enumerable: false,\n      });\n    }\n  }\n\n  /**\n   * Prepare natural reach for melee range and for reach weapons.\n   *\n   * @protected\n   */\n  _prepareNaturalReach() {\n    // Prepare base natural reach\n    this.system.traits.reach ??= {};\n    const reach = this.system.traits.reach;\n\n    reach.base = this.constructor.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Reset values\n    reach.natural = reach.base;\n    reach.total = { ...reach.base };\n\n    // Add base natural values to the change sources\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.melee\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.melee,\n    });\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.reach\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.reach,\n    });\n  }\n\n  /**\n   * Reset class skills.\n   *\n   * @protected\n   */\n  _prepareClassSkills() {\n    const skillSet = new Set();\n    this.items\n      .filter((actorItems) => [\"class\", \"race\", \"feat\"].includes(actorItems.type))\n      .forEach((relevantActorItems) => {\n        for (const [classSkillName, isClassSkill] of Object.entries(relevantActorItems.system.classSkills || {})) {\n          if (isClassSkill === true) skillSet.add(classSkillName);\n        }\n      });\n\n    for (const [skillKey, skillData] of Object.entries(this.system.skills)) {\n      if (!skillData) {\n        console.warn(`Bad skill data for \"${skillKey}\"`, this);\n        continue;\n      }\n      this.system.skills[skillKey].cs = skillSet.has(skillKey);\n      for (const k2 of Object.keys(skillData.subSkills ?? {})) {\n        foundry.utils.setProperty(skillData, `subSkills.${k2}.cs`, skillSet.has(skillKey));\n      }\n    }\n  }\n\n  /**\n   * Checks if there's any matching proficiency\n   *\n   * @param {pf1.document.item.ItemEquipmentPF} item - The item to check for.\n   * @returns {boolean} Whether the actor is proficient with that item.\n   */\n  hasArmorProficiency(item) {\n    // Check for item type\n    if (item.type !== \"equipment\" || ![\"armor\", \"shield\"].includes(item.system.subType)) return true;\n\n    const aprof = this.system.traits?.armorProf;\n    if (!aprof) return false;\n\n    // Base proficiency\n    if (aprof.total.includes(item.baseArmorProficiency)) return true;\n\n    // Base types with custom proficiencies\n    const profs = aprof.customTotal ?? [];\n    if (profs.length == 0) return false;\n    const baseTypes = item.system.baseTypes ?? [];\n    if (baseTypes.length == 0) return false;\n\n    return profs.some((prof) => baseTypes.includes(prof));\n  }\n\n  /**\n   * Test if actor is proficient with specified weapon.\n   *\n   * @remarks Natural attacks incorrectly do not count as proficient.\n   *\n   * @param {ItemPF} item - Item to test\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.override=true] - Allow item's proficiency override to influence the result.\n   * @returns {boolean} - Proficiency state\n   */\n  hasWeaponProficiency(item, { override = true } = {}) {\n    if (override && item.system.proficient) return true; // Explicitly marked as proficient\n\n    const wprof = this.system.traits?.weaponProf;\n    if (!wprof) return false;\n\n    // Match basic proficiencies, e.g. simple and martial (only present on weapons)\n    // TODO: Make the item identify it's own weapon type\n    let category;\n    if (item.type === \"weapon\") {\n      category = item.subType;\n    } else if (item.type === \"attack\") {\n      category = item.subType === \"weapon\" ? item.system.weapon?.category : null;\n    }\n    if (wprof.total.includes(category)) return true;\n\n    // Match base types\n    const profs = wprof.customTotal ?? [];\n    if (profs.length == 0) return false;\n    const baseTypes = item.system.baseTypes ?? [];\n    if (baseTypes.length == 0) return false;\n\n    return profs.some((prof) => baseTypes.includes(prof));\n  }\n\n  /**\n   * Update specific spellbook.\n   *\n   * @internal\n   * @param {string} bookId Spellbook identifier\n   * @param {object} [rollData] Roll data instance\n   * @param {object} cache Pre-calculated data for re-use from _generateSpellbookCache\n   */\n  _updateSpellBook(bookId, rollData, cache) {\n    const actorData = this.system;\n    const book = actorData.attributes.spells.spellbooks[bookId];\n    if (!book) {\n      console.error(`Spellbook data not found for \"${bookId} on actor`, this);\n      return;\n    }\n\n    book.isSchool = book.kind !== \"divine\";\n\n    // Set spellbook label\n    book.label = book.name || game.i18n.localize(`PF1.SpellBook${bookId.capitalize()}`);\n\n    // Do not process spellbooks that are not in use\n    if (!book.inUse) return;\n\n    // Use custom name if present\n    if (book.name) book.label = book.name;\n    // Get name from class if selected\n    else if (book.class) {\n      if (book.class === \"_hd\") book.label = book.name || game.i18n.localize(\"PF1.SpellBookSpelllike\");\n      else {\n        const bookClassId = this.classes[book.class]?._id;\n        const bookClass = this.items.get(bookClassId);\n        if (bookClass) book.label = bookClass.name;\n      }\n    }\n\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    const bookInfo = cache.books[bookId];\n\n    const spellbookAbility = actorData.abilities[book.ability];\n\n    // Add spell slots based on ability bonus slot formula\n    const spellSlotAbilityScoreBonus = RollPF.safeRollSync(book.spellSlotAbilityBonusFormula || \"0\", rollData).total,\n      spellSlotAbilityScore = (spellbookAbility?.total ?? 10) + spellSlotAbilityScoreBonus,\n      spellSlotAbilityMod = pf1.utils.getAbilityModifier(spellSlotAbilityScore);\n\n    // Set CL\n    let clTotal = 0;\n    {\n      const key = `system.attributes.spells.spellbooks.${bookId}.cl.total`;\n      const formula = book.cl.formula || \"0\";\n      let total = 0;\n\n      // Add NPC base\n      if (this.type === \"npc\") {\n        const value = book.cl.base || 0;\n        total += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.Base\"), value);\n      }\n      // Add HD\n      if (book.class === \"_hd\") {\n        const value = actorData.attributes.hd.total;\n        total += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.HitDie\"), value);\n      }\n      // Add class levels\n      else if (book.class && rollData.classes[book.class]) {\n        const value = rollData.classes[book.class].unlevel;\n        total += value;\n        clTotal += value;\n\n        setSourceInfoByName(this.sourceInfo, key, rollData.classes[book.class].name, value);\n      }\n\n      // Set auto spell level calculation offset\n      if (book.autoSpellLevelCalculation) {\n        const autoFormula = book.cl.autoSpellLevelCalculationFormula || \"0\";\n        const autoBonus = RollPF.safeRollSync(autoFormula, rollData).total ?? 0;\n        const autoTotal = Math.clamped(total + autoBonus, 1, 20);\n        book.cl.autoSpellLevelTotal = autoTotal;\n\n        clTotal += autoBonus;\n        if (autoBonus !== 0) {\n          setSourceInfoByName(\n            this.sourceInfo,\n            key,\n            game.i18n.localize(\"PF1.AutoSpellClassLevelOffset.Formula\"),\n            autoBonus\n          );\n        }\n      }\n\n      // Add from bonus formula\n      const clBonus = RollPF.safeRollSync(formula, rollData).total;\n      clTotal += clBonus;\n      if (clBonus > 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus);\n      } else if (clBonus < 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus, false);\n      }\n\n      // Apply negative levels\n      if (rollData.attributes.energyDrain) {\n        clTotal = Math.max(0, clTotal - rollData.attributes.energyDrain);\n        setSourceInfoByName(\n          this.sourceInfo,\n          key,\n          game.i18n.localize(\"PF1.NegativeLevels\"),\n          -Math.abs(rollData.attributes.energyDrain),\n          false\n        );\n      }\n\n      clTotal += book.cl.total ?? 0;\n      clTotal += book.cl.bonus ?? 0;\n      book.cl.total = clTotal;\n    }\n\n    // Set concentration bonus\n    {\n      // Temp fix for old actors that fail migration\n      if (Number.isFinite(book.concentration)) {\n        console.error(`Bad spellbook concentration value \"${book.concentration}\" in spellbook \"${bookId}\"`);\n        book.concentration = {};\n      }\n\n      // Bonus formula\n      const concFormula = book.concentrationFormula;\n      const formulaRoll = concFormula.length\n        ? RollPF.safeRollSync(concFormula, rollData, undefined, undefined, { minimize: true })\n        : { total: 0, isDeterministic: true };\n      const rollBonus = formulaRoll.isDeterministic ? formulaRoll.total : 0;\n\n      // Add it all up\n      const classAbilityMod = actorData.abilities[book.ability]?.mod ?? 0;\n      const concentration = clTotal + classAbilityMod + rollBonus;\n      const prevTotal = book.concentration.total ?? 0;\n\n      // Set source info\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.CasterLevel\"),\n        clTotal,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.SpellcastingAbility\"),\n        classAbilityMod,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.ByBonus\"),\n        formulaRoll.isDeterministic ? formulaRoll.total : formulaRoll.formula,\n        false\n      );\n\n      // Apply value\n      book.concentration ??= {};\n      book.concentration.total = prevTotal + concentration;\n    }\n\n    const getAbilityBonus = (a) => (a !== 0 ? ActorPF.getSpellSlotIncrease(spellSlotAbilityMod, a) : 0);\n\n    const mode = new SpellbookMode(book);\n\n    // Spell slots\n    const useAuto = book.autoSpellLevelCalculation;\n\n    // Turn off spell points with auto slots\n    if (useAuto) book.spellPoints.useSystem = false;\n    // Turn off bonus slots from ability score without auto slots\n    else book.autoSpellLevels = false;\n\n    const useSpellPoints = book.spellPoints.useSystem === true;\n\n    // Set base \"spontaneous\" based on spell prep mode when using auto slots or spell points\n    book.spontaneous = mode.isSemiSpontaneous;\n    const isSpontaneous = book.spontaneous;\n\n    if (useAuto) {\n      let casterType = book.casterType;\n      // Set caster type to sane default if configuration not found.\n      if (pf1.config.casterProgression.castsPerDay[mode.raw]?.[casterType] === undefined) {\n        const keys = Object.keys(pf1.config.casterProgression.castsPerDay[mode.raw]);\n        if (mode.isPrestige) book.casterType = casterType = keys[0];\n        else book.casterType = casterType = keys.at(-1);\n      }\n\n      const castsForLevels =\n        pf1.config.casterProgression[isSpontaneous ? \"castsPerDay\" : \"spellsPreparedPerDay\"][mode.raw][casterType];\n      let classLevel = Math.clamped(book.cl.autoSpellLevelTotal, 1, 20);\n\n      // Protect against invalid class level bricking actors\n      if (!Number.isSafeInteger(classLevel)) {\n        const msg = `Actor ${this.id} has invalid caster class level.`;\n        console.error(msg, classLevel);\n        ui.notifications?.error(msg);\n        classLevel = Math.floor(classLevel);\n      }\n\n      rollData.ablMod = spellSlotAbilityMod;\n\n      const allLevelModFormula = book[isSpontaneous ? \"castPerDayAllOffsetFormula\" : \"preparedAllOffsetFormula\"] || \"0\";\n      const allLevelMod = RollPF.safeRollSync(allLevelModFormula, rollData).total ?? 0;\n\n      for (let level = 0; level < 10; level++) {\n        const levelData = book.spells[`spell${level}`];\n        // 0 is special because it doesn't get bonus preps and can cast them indefinitely so can't use the \"cast per day\" value\n        const spellsForLevel =\n          (level === 0 && isSpontaneous\n            ? pf1.config.casterProgression.spellsPreparedPerDay[mode.raw][casterType][classLevel - 1][level]\n            : castsForLevels[classLevel - 1][level]) ?? NaN;\n        levelData.base = spellsForLevel || 0;\n\n        const offsetFormula = levelData[isSpontaneous ? \"castPerDayOffsetFormula\" : \"preparedOffsetFormula\"] || \"0\";\n\n        const max =\n          (level === 0 && book.hasCantrips) || Number.isFinite(spellsForLevel)\n            ? spellsForLevel +\n              getAbilityBonus(level) +\n              allLevelMod +\n              (RollPF.safeRollSync(offsetFormula, rollData).total ?? 0)\n            : NaN;\n\n        levelData.max = max;\n        if (!Number.isFinite(levelData.value)) levelData.value = max;\n      }\n    } else {\n      for (let level = book.hasCantrips ? 0 : 1; level < 10; level++) {\n        const levelData = book.spells[`spell${level}`];\n        let base = levelData.base;\n        if (Number.isNaN(base) || base === null) {\n          levelData.base = null;\n          levelData.max = 0;\n        } else if (book.autoSpellLevels && base >= 0) {\n          base += getAbilityBonus(level);\n          levelData.max = base;\n        } else {\n          levelData.max = base || 0;\n        }\n\n        if (!Number.isFinite(levelData.value)) {\n          levelData.value = levelData.max;\n        }\n      }\n    }\n\n    // Set spontaneous spell slots to something sane\n    for (let a = 0; a < 10; a++) {\n      book.spells[`spell${a}`].value ||= 0;\n    }\n\n    // Update spellbook slots\n    {\n      const slots = {};\n      for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n        slots[spellLevel] = new SpellbookSlots({\n          level: spellLevel,\n          max: book.spells[`spell${spellLevel}`].max || 0,\n          domain: book.domainSlotValue || 0,\n        });\n      }\n\n      // Slot usage\n      for (let level = 0; level < 10; level++) {\n        /** @type {pf1.documents.item.ItemSpellPF[]} */\n        const levelSpells = bookInfo.level[level]?.spells ?? [];\n        const lvlSlots = slots[level];\n        const levelData = book.spells[`spell${level}`];\n        levelData.slots = { used: 0, max: lvlSlots.max };\n\n        if (isSpontaneous) continue;\n\n        for (const spell of levelSpells) {\n          if (Number.isFinite(spell.maxCharges)) {\n            const slotCost = spell.slotCost;\n            const slots = spell.maxCharges * slotCost;\n            if (spell.isDomain) {\n              lvlSlots.domain -= slots;\n            } else {\n              lvlSlots.used += slots;\n            }\n            lvlSlots.value -= slots;\n          }\n        }\n        levelData.value = lvlSlots.value;\n\n        // Add slot statistics\n        levelData.slots.used = lvlSlots.used;\n        levelData.slots.remaining = levelData.slots.max - levelData.slots.used;\n        levelData.slots.excess = Math.max(0, -levelData.slots.remaining);\n        levelData.domain = { max: lvlSlots.domainMax, remaining: lvlSlots.domain };\n        levelData.domain.excess = Math.max(0, -levelData.domain.remaining);\n        levelData.mismatchSlots = -(\n          levelData.slots.excess +\n          levelData.domain.excess -\n          Math.max(0, levelData.slots.remaining)\n        );\n        if (levelData.mismatchSlots == 0) levelData.mismatchSlots = levelData.slots.remaining;\n        levelData.invalidSlots = levelData.mismatchSlots != 0 || levelData.slots.remaining != 0;\n      }\n\n      // Spells available hint text if auto spell levels is enabled\n      const maxLevelByAblScore = (spellbookAbility?.total ?? 0) - 10;\n\n      const allLevelModFormula = book.preparedAllOffsetFormula || \"0\";\n      const allLevelMod = RollPF.safeRollSync(allLevelModFormula, rollData).total ?? 0;\n\n      const casterType = book.casterType || \"high\";\n      const classLevel = Math.floor(Math.clamped(book.cl.autoSpellLevelTotal, 1, 20));\n\n      for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n        const spellLevelData = book.spells[`spell${spellLevel}`];\n        // Insufficient ability score for the level\n        if (maxLevelByAblScore < spellLevel) {\n          const unlimit = bookInfo.data.noAbilityLimit ?? false;\n          if (!unlimit) {\n            spellLevelData.hasIssues = true;\n            spellLevelData.lowAbilityScore = true;\n          }\n        }\n\n        spellLevelData.known = { unused: 0, max: 0 };\n        const domainSlotMax = spellLevel > 0 ? slots[spellLevel].domainMax ?? 0 : 0;\n        spellLevelData.preparation = { unused: 0, max: 0, domain: domainSlotMax };\n\n        let remaining = 0;\n        if (mode.isPrepared) {\n          // for prepared casters, just use the 'value' calculated above\n          remaining = spellLevelData.value;\n          spellLevelData.preparation.max = spellLevelData.max + domainSlotMax;\n        } else {\n          // spontaneous or hybrid\n          // if not prepared then base off of casts per day\n          let available = useAuto\n            ? pf1.config.casterProgression.spellsPreparedPerDay[mode.raw][casterType]?.[classLevel - 1][spellLevel]\n            : spellLevelData.max;\n          available += allLevelMod;\n\n          const formula = spellLevelData.preparedOffsetFormula || \"0\";\n          available += RollPF.safeRollSync(formula, rollData).total ?? 0;\n\n          // Leave record of max known\n          spellLevelData.known.max = available;\n\n          if (Number.isNaN(available)) {\n            spellLevelData.hasIssues = true;\n            spellLevelData.lowLevel = true;\n          }\n\n          // Count spell slots used\n          let dSlots = slots[spellLevel].domain;\n          const used =\n            bookInfo.level[spellLevel]?.spells.reduce((acc, /** @type {pf1.documents.item.ItemSpellPF} */ i) => {\n              const { preparation, atWill, domain } = i.system;\n              if (!atWill && preparation.value) {\n                const slotCost = i.slotCost;\n                if (domain && dSlots > 0) dSlots -= slotCost;\n                else acc += slotCost;\n              }\n              return acc;\n            }, 0) ?? 0;\n          slots[spellLevel].domainUnused = dSlots;\n          slots[spellLevel].used = used;\n\n          remaining = available - used;\n        }\n\n        const lvlSlots = slots[spellLevel];\n        // Detect domain slot problems\n        const domainSlotsRemaining = spellLevel > 0 ? lvlSlots.domain : 0;\n\n        spellLevelData.remaining = remaining;\n\n        // No more processing needed\n        if (remaining == 0 && domainSlotsRemaining <= 0) continue;\n\n        spellLevelData.hasIssues = true;\n\n        if (isSpontaneous) {\n          spellLevelData.known.unused = Math.max(0, remaining);\n          spellLevelData.known.excess = -Math.min(0, remaining);\n          if (useAuto) {\n            spellLevelData.invalidKnown = spellLevelData.known.unused != 0 || spellLevelData.known.excess != 0;\n            spellLevelData.mismatchKnown = remaining;\n          }\n        } else {\n          spellLevelData.preparation.unused = Math.max(0, remaining);\n        }\n      }\n    }\n\n    // Spell points\n    if (useSpellPoints) {\n      const formula = book.spellPoints.maxFormula || \"0\";\n      rollData.cl = book.cl.total;\n      rollData.ablMod = spellSlotAbilityMod;\n      const spellClass = book.class ?? \"\";\n      rollData.classLevel =\n        spellClass === \"_hd\"\n          ? rollData.attributes.hd?.total ?? rollData.details.level.value\n          : rollData.classes[spellClass]?.level || 0;\n\n      const roll = RollPF.safeRollSync(formula, rollData);\n      book.spellPoints.max = roll.total;\n    } else {\n      book.spellPoints.max = 0;\n    }\n\n    // Set spellbook ranges\n    book.range = new SpellRanges(book.cl.total);\n  }\n\n  /**\n   * Collect some basic spellbook info so it doesn't need to be gathered again for each spellbook.\n   *\n   * @internal\n   * @returns {object} Spellbook cache\n   */\n  _generateSpellbookCache() {\n    const bookKeys = Object.keys(this.system.attributes.spells.spellbooks);\n\n    const allSpells = this.itemTypes.spell;\n\n    const cache = {\n      spells: allSpells,\n      books: {},\n    };\n\n    // Prepare spellbooks\n    bookKeys.forEach((bookKey) => {\n      cache.books[bookKey] ??= new Spellbook(bookKey, this);\n    });\n\n    // Spread out spells to books\n    allSpells.forEach((spell) => {\n      const bookKey = spell.system.spellbook;\n      if (!bookKeys.includes(bookKey)) return console.error(\"Spell has invalid book\", spell);\n      cache.books[bookKey].addSpell(spell);\n    });\n\n    return cache;\n  }\n\n  /**\n   * Update all spellbooks\n   *\n   * @internal\n   * @param {object} [rollData] Roll data instance\n   * @param {object} [cache] Spellbook cache\n   */\n  updateSpellbookInfo(rollData, cache) {\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    const spellbooks = this.system.attributes.spells.spellbooks;\n\n    // Set spellbook info\n    for (const bookKey of Object.keys(spellbooks)) {\n      this._updateSpellBook(bookKey, rollData, cache);\n    }\n\n    // usedSpellbooks backwards compatibility. Mostly unused by the system itself\n    Object.defineProperty(this.system.attributes.spells, \"usedSpellbooks\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"actor.system.attributes.spells.usedSpellbooks is deprecated with no replacement.\",\n          {\n            since: \"PF1 v10\",\n            until: \"PF1 v11\",\n          }\n        );\n\n        return Object.keys(spellbooks).filter((book) => spellbooks[book].inUse);\n      },\n    });\n  }\n\n  /**\n   * Called just before the first change is applied, and after every change is applied.\n   * Sets additional variables (such as spellbook range)\n   *\n   * @internal\n   */\n  refreshDerivedData() {\n    // Reset maximum dexterity bonus\n    this.system.attributes.maxDexBonus = null;\n    this.system.abilities.dex.maxBonus = this.system.abilities.dex.mod;\n\n    {\n      // Compute encumbrance\n      const encPen = this._computeEncumbrance();\n\n      // Apply armor penalties\n      const gearPen = this._applyArmorPenalties();\n\n      // Set armor check penalty\n      this.system.attributes.acp.encumbrance = encPen.acp;\n      this.system.attributes.acp.gear = gearPen.acp;\n      this.system.attributes.acp.total = Math.max(encPen.acp, gearPen.acp);\n      // Broken gear affects only skills\n      this.system.attributes.acp.skill = Math.max(encPen.acp, gearPen.acpSkill);\n\n      // Set maximum dexterity bonus\n      if (encPen.maxDexBonus != null || gearPen.maxDexBonus != null) {\n        this.system.attributes.maxDexBonus = Math.min(\n          encPen.maxDexBonus ?? Number.POSITIVE_INFINITY,\n          gearPen.maxDexBonus ?? Number.POSITIVE_INFINITY\n        );\n        this.system.abilities.dex.maxBonus = Math.min(\n          this.system.abilities.dex.maxBonus,\n          this.system.attributes.maxDexBonus\n        );\n      }\n    }\n  }\n\n  /**\n   * Augment the basic actor data with additional dynamic data.\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const race = this.race;\n    if (race) {\n      const creatureType = race?.system.creatureType || \"humanoid\";\n      this.system.traits ??= {};\n      this.system.traits.type = creatureType;\n      this.system.traits.humanoid = creatureType === \"humanoid\";\n      this.system.attributes ??= {};\n      this.system.attributes.quadruped ??= race?.system.quadruped ?? false;\n    }\n\n    this.prepareProficiencies();\n\n    // Reset roll data cache\n    // Some changes act wonky without this\n    // Example: `@skills.hea.rank >= 10 ? 6 : 3` doesn't work well without this\n    delete this._rollData;\n\n    // Update dependant data and resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    const natReach = this.system.traits.reach.total;\n    // Ensure reach never becomes negative value\n    if (natReach.melee < 0) natReach.melee = 0;\n    if (natReach.reach < 0) natReach.reach = 0;\n\n    // Prepare specific derived data\n    this.prepareSpecificDerivedData();\n\n    // Prepare CMB total\n    this.prepareCMB();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    this._prepareOverlandSpeeds();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update items\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    // Initialization is effectively complete at this point\n    this._initialized = true;\n\n    this._setSourceDetails();\n  }\n\n  /**\n   * Calculate overland speeds.\n   *\n   * @protected\n   */\n  _prepareOverlandSpeeds() {\n    for (const speed of Object.values(this.system.attributes?.speed ?? {})) {\n      speed.overland = speed.total > 0 ? pf1.utils.overlandSpeed(speed.total).speed : 0;\n    }\n  }\n\n  /**\n   * Prepare armor, weapon, and language proficiencies.\n   *\n   * @protected\n   */\n  prepareProficiencies() {\n    const actorData = this.system;\n    // Handle armor and weapon proficiencies for PCs\n    // NPCs are considered proficient with their armor\n    // Collect proficiencies from items, add them to actor's proficiency totals\n    const proficiencies = {\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      languages: pf1.config.languages,\n    };\n\n    const validItems = this.items.filter((i) => i.isActive);\n\n    for (const [prof, translations] of Object.entries(proficiencies)) {\n      // Custom proficiency baseline from actor\n      const customProficiencies = actorData.traits[prof]?.custom || [];\n\n      // Iterate over all items to create one array of non-custom proficiencies\n      const proficiencies = validItems.reduce(\n        (profs, item) => {\n          // Check only items able to grant proficiencies\n          if (foundry.utils.hasProperty(item, `system.${prof}`)) {\n            // Get existing sourceInfo for item with this name, create sourceInfo if none is found\n            // Remember whether sourceInfo can be modified or has to be pushed at the end\n            let sInfo = getSourceInfo(this.sourceInfo, `system.traits.${prof}`).positive.find(\n              (o) => o.name === item.name\n            );\n            const hasInfo = !!sInfo;\n            if (!sInfo) sInfo = { name: item.name, value: [] };\n            else if (typeof sInfo.value === \"string\") sInfo.value = sInfo.value.split(\", \");\n\n            // Regular proficiencies\n            for (const proficiency of item.system[prof].value) {\n              // Add localized source info if item's info does not have this proficiency already\n              if (!sInfo.value.includes(proficiency)) sInfo.value.push(translations[proficiency]);\n              // Add raw proficiency key\n              if (!profs.includes(proficiency)) profs.push(proficiency);\n            }\n\n            // Collect trimmed but otherwise original proficiency strings, dedupe array for actor's total\n            const customProfs = item.system[prof].custom || [];\n            // Add readable custom profs to sources and overall collection\n            sInfo.value.push(...customProfs);\n            customProficiencies.push(...customProfs);\n\n            if (sInfo.value.length > 0) {\n              // Dedupe if adding to existing sourceInfo\n              if (hasInfo) sInfo.value = [...new Set(sInfo.value)];\n              // Transform arrays into presentable strings\n              sInfo.value = sInfo.value.join(\", \");\n              // If sourceInfo was not a reference to existing info, push it now\n              if (!hasInfo) getSourceInfo(this.sourceInfo, `system.traits.${prof}`).positive.push(sInfo);\n            }\n          }\n          return profs;\n        },\n        [...(actorData.traits[prof]?.value ?? [])] // Default proficiency baseline from actor\n      );\n\n      // Save collected proficiencies in actor's data\n      actorData.traits[prof] ??= {}; // In case the data structure is missing\n      actorData.traits[prof].total = [...proficiencies];\n      actorData.traits[prof].customTotal = [...customProficiencies];\n    }\n  }\n\n  /**\n   * Prepare total CMB value.\n   *\n   * @todo Move all the logic here to the Change system.\n   *\n   * @protected\n   */\n  prepareCMB() {\n    const shrAtk = this.system.attributes.attack.shared ?? 0,\n      genAtk = this.system.attributes.attack.general ?? 0,\n      cmbAbl = this.system.attributes.cmbAbility,\n      cmbAblMod = this.system.abilities[cmbAbl]?.mod ?? 0,\n      size = this.system.traits.size,\n      szCMBMod = pf1.config.sizeSpecialMods[size] ?? 0,\n      cmbBonus = this.system.attributes.cmb.bonus ?? 0,\n      cmb = shrAtk + genAtk + szCMBMod + cmbBonus + cmbAblMod;\n    this.system.attributes.cmb.total = cmb;\n  }\n\n  /**\n   * @protected\n   */\n  prepareSpecificDerivedData() {\n    if (Hooks.events.pf1PrepareDerivedActorData?.length) {\n      Hooks.callAll(\"pf1PrepareDerivedActorData\", this);\n    }\n\n    this.refreshDerivedData();\n\n    const attributes = this.system.attributes,\n      abilities = this.system.abilities;\n\n    // Set base ability modifier\n    for (const ab of Object.keys(abilities)) {\n      const total = abilities[ab].base;\n      const penalty = abilities[ab].penalty || 0;\n      const damage = abilities[ab].damage;\n      abilities[ab].baseMod = pf1.utils.getAbilityModifier(total, { penalty, damage });\n    }\n\n    const actorData = this.system;\n    const data = actorData;\n\n    // Round health\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n    for (const k of [\"hp\", \"vigor\"]) {\n      attributes[k].max = round(attributes[k].max);\n    }\n\n    // Offset relative health\n    for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n      const hp = this.system.attributes[key];\n      if (Number.isFinite(hp?.offset)) {\n        hp.value = hp.max + hp.offset;\n      }\n    }\n\n    // Shared attack bonuses\n    {\n      // Total\n      const totalAtk = attributes.bab.total - attributes.acp.attackPenalty - (attributes.energyDrain ?? 0);\n      attributes.attack.shared = totalAtk;\n    }\n\n    // Update wound threshold\n    this.updateWoundThreshold();\n\n    // Create arbitrary skill slots\n    for (const skillId of pf1.config.arbitrarySkills) {\n      if (data.skills[skillId] == null) continue;\n      const skill = data.skills[skillId];\n      skill.subSkills = skill.subSkills || {};\n      for (const subSkillId of Object.keys(skill.subSkills)) {\n        if (skill.subSkills[subSkillId] == null) delete skill.subSkills[subSkillId];\n      }\n    }\n\n    // Delete removed skills\n    for (const skillId of Object.keys(data.skills)) {\n      const skl = data.skills[skillId];\n      if (skl == null) {\n        delete data.skills[skillId];\n      }\n    }\n\n    // Mark background skills\n    for (const skillId of Object.keys(data.skills)) {\n      if (pf1.config.backgroundSkills.includes(skillId)) {\n        const skill = data.skills[skillId];\n        skill.background = true;\n        for (const subSkillId of Object.keys(skill.subSkills ?? {})) skill.subSkills[subSkillId].background = true;\n      }\n    }\n\n    // Combine AC types\n    for (const k of [\"ac.normal.total\", \"ac.shield.total\", \"ac.natural.total\"]) {\n      const v = foundry.utils.getProperty(actorData, k);\n      if (v) {\n        for (const k2 of [\"normal\", \"flatFooted\"]) {\n          attributes.ac[k2].total += v;\n        }\n      }\n    }\n\n    // Add Dexterity to AC\n    {\n      // get configured ability scores\n      const acAbl = attributes.ac.normal.ability ?? \"dex\";\n      const acTouchAbl = attributes.ac.touch.ability ?? \"dex\";\n      const cmdDexAbl = attributes.cmd.dexAbility ?? \"dex\";\n      let acAblMod = abilities[acAbl]?.mod ?? 0;\n      let acTouchAblMod = abilities[acTouchAbl]?.mod ?? 0;\n      const cmdDexAblMod = abilities[cmdDexAbl]?.mod ?? 0;\n      if (this.changeFlags[\"loseDexToAC\"]) {\n        acAblMod = Math.min(acAblMod, 0);\n        acTouchAblMod = Math.min(acTouchAblMod, 0);\n      }\n      const maxDex = attributes.maxDexBonus ?? null;\n      const ac = {\n        normal: maxDex !== null ? Math.min(maxDex, acAblMod) : acAblMod,\n        touch: maxDex !== null ? Math.min(maxDex, acTouchAblMod) : acTouchAblMod,\n        flatFooted: Math.min(0, acAblMod),\n      };\n      const acAblKey = {\n        normal: acAbl,\n        touch: acTouchAbl,\n        flatFooted: acAbl,\n      };\n      const cmd = {\n        total: cmdDexAblMod,\n        flatFootedTotal: Math.min(0, cmdDexAblMod),\n      };\n      for (const [k, v] of Object.entries(ac)) {\n        attributes.ac[k].total += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.ac.${k}.total`).positive.push({\n          value: v,\n          name: pf1.config.abilities[acAblKey[k]],\n        });\n      }\n      for (const [k, v] of Object.entries(cmd)) {\n        attributes.cmd[k] += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.cmd.${k}`).positive.push({\n          value: v,\n          name: pf1.config.abilities[cmdDexAbl],\n        });\n      }\n    }\n\n    // Reduce final speed under certain circumstances\n    {\n      let reducedSpeed = false;\n      const sInfo = { name: \"\", value: game.i18n.localize(\"PF1.ReducedMovementSpeed\") };\n\n      // from encumbrance\n      const encLevel = attributes.encumbrance.level;\n      if (encLevel > 0) {\n        const encLevels = pf1.config.encumbranceLevels;\n        if (encLevel >= encLevels.heavy) {\n          if (!this.changeFlags.noHeavyEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.HeavyEncumbrance\");\n          }\n        } else if (encLevel >= encLevels.medium) {\n          if (!this.changeFlags.noMediumEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.MediumEncumbrance\");\n          }\n        }\n      }\n\n      const armor = { type: 0 };\n      const eqData = this.equipment;\n      if (eqData) this._prepareArmorData(eqData.armor, armor);\n\n      // Wearing heavy armor\n      if (armor.type == pf1.config.armorTypes.heavy && !this.changeFlags.heavyArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.heavy\");\n      }\n      // Wearing medium armor\n      else if (armor.type == pf1.config.armorTypes.medium && !this.changeFlags.mediumArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.medium\");\n      }\n\n      for (const speedKey of Object.keys(this.system.attributes.speed)) {\n        const speedValue = this.system.attributes.speed[speedKey].total;\n        // Save speed unaffected by speed maluses here (not counting negative changes)\n        // TODO: Somehow make this ignore additional set operators\n        this.system.attributes.speed[speedKey].unhindered = speedValue; // @since PF1 v10\n\n        if (reducedSpeed && speedValue > 0) {\n          this.system.attributes.speed[speedKey].total = this.constructor.getReducedMovementSpeed(speedValue);\n          getSourceInfo(this.sourceInfo, `system.attributes.speed.${speedKey}.total`).negative.push(sInfo);\n        }\n      }\n    }\n\n    // Add encumbrance source details\n    let encACPPPenalty = null,\n      encMaxDex = null;\n    switch (attributes.encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium: {\n        encACPPPenalty = 3;\n        encMaxDex = 3;\n        break;\n      }\n      case pf1.config.encumbranceLevels.heavy: {\n        encACPPPenalty = 6;\n        encMaxDex = 1;\n        break;\n      }\n    }\n    const encLabel = game.i18n.localize(\"PF1.Encumbrance\");\n    if (encACPPPenalty !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n        name: encLabel,\n        value: encACPPPenalty,\n      });\n    }\n    if (encMaxDex !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n        name: encLabel,\n        value: encMaxDex,\n      });\n      let maxDexLabel = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format(encMaxDex);\n      maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.normal.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n        valueAsNumber: encMaxDex,\n      });\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.touch.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n        valueAsNumber: encMaxDex,\n      });\n    }\n\n    this.updateSpellbookInfo();\n  }\n\n  /**\n   * Returns this actor's labels for use with sheets.\n   *\n   * @protected\n   * @returns {Record<string, string>}\n   */\n  getLabels() {\n    const labels = {};\n\n    labels.alignment = pf1.config.alignments[this.system.details.alignment];\n\n    // Speed\n    labels.speed = {};\n    for (const [key, obj] of Object.entries(this.system.attributes.speed ?? {})) {\n      const dist = pf1.utils.convertDistance(obj.total);\n      labels.speed[key] = `${dist[0]} ${pf1.config.measureUnitsShort[dist[1]]}`;\n    }\n\n    return labels;\n  }\n\n  /**\n   * Computes armor penalties for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from armor.\n   */\n  _applyArmorPenalties() {\n    let attackACPPenalty = 0; // ACP to attack penalty from lacking proficiency. Stacks infinitely.\n    const acp = { armor: 0, shield: 0 };\n    const broken = { armor: { value: 0, item: null }, shield: { value: 0, item: null } };\n    const mdex = { armor: null, shield: null };\n\n    this.itemTypes.equipment\n      .filter((item) => item.system.equipped)\n      .forEach((item) => {\n        const eqType = item.system.subType;\n        const isShieldOrArmor = [\"armor\", \"shield\"].includes(eqType);\n        let itemACP = Math.abs(item.system.armor.acp);\n        if (item.system.masterwork === true && isShieldOrArmor) itemACP = Math.max(0, itemACP - 1);\n\n        if (isShieldOrArmor) {\n          itemACP = Math.max(0, itemACP + (this.system.attributes?.acp?.[`${eqType}Bonus`] ?? 0));\n        }\n\n        if (itemACP) {\n          if (item.isBroken) {\n            broken[eqType].value = itemACP;\n            broken[eqType].item = item;\n\n            const bsInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.find(\n              (o) => o.itemId === item.id\n            );\n            if (bsInfo) bsInfo.value = itemACP;\n            else {\n              getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.push({\n                name: `${item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n                itemId: item.id,\n                value: itemACP,\n              });\n            }\n          }\n\n          const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.find(\n            (o) => o.itemId === item.id\n          );\n\n          if (sInfo) sInfo.value = itemACP;\n          else {\n            getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n              name: item.name,\n              itemId: item.id,\n              value: itemACP,\n            });\n          }\n        }\n\n        if (isShieldOrArmor) {\n          if (itemACP > acp[eqType]) acp[eqType] = itemACP;\n          if (!item.getProficiency(false)) attackACPPenalty += itemACP;\n        }\n\n        if (item.system.armor.dex !== null && isShieldOrArmor) {\n          const mDex = item.system.armor.dex;\n          if (Number.isInteger(mDex)) {\n            const mod = this.system.attributes?.mDex?.[`${eqType}Bonus`] ?? 0;\n            const itemMDex = mDex + mod;\n            mdex[eqType] = Math.min(itemMDex, mdex[eqType] ?? Number.POSITIVE_INFINITY);\n\n            const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.find(\n              (o) => o.itemId === item.id\n            );\n            if (sInfo) sInfo.value = itemMDex;\n            else {\n              getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n                name: item.name,\n                itemId: item.id,\n                value: itemMDex,\n                ignoreNull: false,\n              });\n            }\n\n            // Add max dex to AC, too.\n            let maxDexLabel = new Intl.NumberFormat(undefined, { signDisplay: \"always\" }).format(itemMDex);\n            maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n            for (const p of [\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\"]) {\n              // Use special maxDex id to ensure only the worst is shown\n              const sInfoA = getSourceInfo(this.sourceInfo, p).negative.find((o) => o.id === \"maxDexEq\");\n              if (sInfoA) {\n                if (itemMDex < sInfoA.valueAsNumber) {\n                  sInfoA.value = maxDexLabel;\n                  sInfoA.valueAsNumber = itemMDex;\n                  sInfoA.itemId = item.id;\n                  sInfoA.name = item.name;\n                } else if (sInfoA.itemId == item.id) {\n                  // Update existing (armor training or the like)\n                  sInfoA.value = maxDexLabel;\n                  sInfoA.valueAsNumber = itemMDex;\n                }\n              } else {\n                getSourceInfo(this.sourceInfo, p).negative.push({\n                  name: item.name,\n                  value: maxDexLabel,\n                  valueAsNumber: itemMDex,\n                  itemId: item.id,\n                  id: \"maxDexEq\",\n                });\n              }\n            }\n          }\n        }\n      });\n\n    // Add Broken to sources\n    {\n      for (const eqType of Object.keys(broken)) {\n        const value = broken[eqType].value;\n        if (value == 0) continue;\n        const brokenId = broken[eqType].item.id;\n        const sInfo = getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.find(\n          (o) => o.brokenId === brokenId\n        );\n        if (sInfo) sInfo.value = value;\n        else\n          getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.push({\n            name: `${broken[eqType].item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n            brokenId,\n            value,\n          });\n      }\n    }\n\n    // Return result\n    const totalACP = acp.armor + acp.shield;\n    const result = {\n      maxDexBonus: null,\n      acp: totalACP,\n      acpSkill: totalACP + broken.armor.value + broken.shield.value,\n    };\n    this.system.attributes.acp.gear = totalACP;\n    if (mdex.armor !== null || mdex.shield !== null)\n      result.maxDexBonus = Math.min(mdex.armor ?? Number.POSITIVE_INFINITY, mdex.shield ?? Number.POSITIVE_INFINITY);\n\n    // Set armor penalty to attack rolls\n    this.system.attributes.acp.attackPenalty = attackACPPenalty;\n\n    return result;\n  }\n\n  /**\n   * @internal\n   */\n  prepareItemLinks() {\n    for (const item of this.items) {\n      const links = item.system.links;\n      if (!links) continue;\n\n      for (const type of Object.keys(links)) {\n        for (const link of links[type]) {\n          const linkedItem = fromUuidSync(link.uuid, { relative: this });\n          if (!linkedItem) continue;\n\n          // Detect bad links pointing to other actors\n          if (linkedItem.actor && linkedItem.actor !== this) {\n            console.error(\"Invalid item link:\", { type, uuid: link.uuid, actor: this, item, linked: linkedItem });\n            continue;\n          }\n\n          switch (type) {\n            case \"charges\": {\n              linkedItem.links.charges = item;\n              linkedItem.prepareLinks();\n              break;\n            }\n            case \"children\": {\n              linkedItem.links.parent = item;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _setSourceDetails() {\n    const actorData = this.system;\n    const sourceDetails = {};\n    // Get empty source arrays\n    for (const b of Object.keys(pf1.config.buffTargets)) {\n      const buffTargets = getChangeFlat.call(this, b, null);\n      for (const bt of buffTargets) {\n        if (!sourceDetails[bt]) sourceDetails[bt] = [];\n      }\n    }\n    // Add additional source arrays not covered by changes\n    sourceDetails[\"system.attributes.bab.total\"] = [];\n\n    // Add base values to certain bonuses\n    sourceDetails[\"system.attributes.ac.normal.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.ac.touch.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.ac.flatFooted.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.cmd.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.cmd.flatFootedTotal\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n\n    // Add ability score data\n    for (const [a, abl] of Object.entries(actorData.abilities)) {\n      sourceDetails[`system.abilities.${a}.total`].push({ name: game.i18n.localize(\"PF1.Base\"), value: abl.value });\n      // Add ability penalty, damage and drain\n      if (abl.damage > 0) {\n        sourceDetails[`system.abilities.${a}.mod`].push({\n          name: game.i18n.localize(\"PF1.AbilityDamage\"),\n          value: -Math.floor(Math.abs(abl.damage) / 2),\n        });\n      }\n      if (abl.drain > 0) {\n        sourceDetails[`system.abilities.${a}.total`].push({\n          name: game.i18n.localize(\"PF1.AbilityDrain\"),\n          value: -Math.abs(abl.drain),\n        });\n      }\n    }\n\n    // Add wound threshold data\n    const hpconf = game.settings.get(\"pf1\", \"healthConfig\").variants;\n    const hpconfvariant = this.type === \"npc\" ? hpconf.npc : hpconf.pc;\n    const wtUsage = hpconfvariant.useWoundThresholds;\n    if (wtUsage > 0) {\n      const wtData = this.getWoundThresholdData({ healthConfig: hpconfvariant });\n\n      if (wtData.level > 0) {\n        const penalty = -wtData.penalty;\n        for (const fk of pf1.config.woundThresholdChangeTargets) {\n          const flats = getChangeFlat.call(this, fk, \"untyped\", penalty);\n          for (const k of flats) {\n            if (!k) continue;\n            sourceDetails[k].push({\n              name: pf1.config.woundThresholdConditions[wtData.level],\n              value: penalty,\n            });\n          }\n        }\n      }\n    }\n\n    const dexDenied = this.changeFlags.loseDexToAC === true;\n\n    // Add extra data\n    const rollData = this.getRollData();\n    for (const [path, changeGrp] of Object.entries(this.sourceInfo)) {\n      /** @type {Array<SourceInfo[]>} */\n      const sourceGroups = Object.values(changeGrp);\n      for (const grp of sourceGroups) {\n        sourceDetails[path] ||= [];\n        for (const src of grp) {\n          src.operator ||= \"add\";\n          // TODO: Separate source name from item type label\n          const label = this.constructor._getSourceLabel(src);\n          let srcValue =\n            src.value != null\n              ? src.value\n              : RollPF.safeRollAsync(src.formula || \"0\", rollData, [path, src, this], {\n                  suppressError: !this.isOwner,\n                }).total;\n          if (src.operator === \"set\") {\n            let displayValue = srcValue;\n            if (src.change?.isDistance) displayValue = pf1.utils.convertDistance(displayValue)[0];\n            srcValue = game.i18n.format(\"PF1.SetTo\", { value: displayValue });\n          }\n\n          // Add sources only if they actually add something else than zero\n          if (!(src.operator === \"add\" && srcValue === 0) || src.ignoreNull === false) {\n            // Account for dex denied denying dodge bonuses\n            if (dexDenied && srcValue > 0 && src.modifier === \"dodge\" && src.operator === \"add\" && src.change?.isAC)\n              continue;\n\n            sourceDetails[path].push({\n              name: label.replace(/[[\\]]/g, \"\"),\n              modifier: src.modifier || \"\",\n              value: srcValue,\n            });\n          }\n        }\n      }\n    }\n\n    this.sourceDetails = sourceDetails;\n  }\n\n  /**\n   * @internal\n   */\n  _getInherentTotalsKeys() {\n    // Determine base keys\n    const keys = {\n      \"attributes.ac.normal.total\": 10,\n      \"attributes.ac.touch.total\": 10,\n      \"attributes.ac.flatFooted.total\": 10,\n      \"attributes.bab.total\": 0,\n      \"attributes.cmd.total\": 10,\n      \"attributes.cmd.flatFootedTotal\": 10,\n      \"attributes.acp.armorBonus\": 0,\n      \"attributes.acp.shieldBonus\": 0,\n      \"attributes.acp.gear\": 0,\n      \"attributes.acp.encumbrance\": 0,\n      \"attributes.acp.total\": 0,\n      \"attributes.acp.skill\": 0,\n      \"attributes.acp.attackPenalty\": 0,\n      \"attributes.maxDexBonus\": null,\n      \"ac.normal.total\": 0,\n      \"ac.normal.base\": 0,\n      \"ac.normal.enh\": 0,\n      \"ac.normal.misc\": 0,\n      \"ac.natural.total\": 0,\n      \"ac.natural.base\": 0,\n      \"ac.natural.misc\": 0,\n      \"ac.natural.enh\": 0,\n      \"ac.shield.total\": 0,\n      \"ac.shield.base\": 0,\n      \"ac.shield.enh\": 0,\n      \"ac.shield.misc\": 0,\n      \"attributes.sr.total\": 0,\n      \"attributes.init.bonus\": 0,\n      \"attributes.init.total\": this.system.attributes.init.value ?? 0,\n      \"attributes.cmb.bonus\": 0,\n      \"attributes.cmb.total\": 0,\n      \"attributes.cmb.value\": 0,\n      \"attributes.hp.max\": this.system.attributes.hp.base ?? 0,\n      \"attributes.vigor.max\": this.system.attributes.vigor.base ?? 0,\n      \"attributes.wounds.max\": this.system.attributes.wounds.base ?? 0,\n      \"attributes.wounds.threshold\": 0,\n      \"attributes.attack.general\": 0,\n      \"attributes.attack.melee\": 0,\n      \"attributes.attack.natural\": 0,\n      \"attributes.attack.ranged\": 0,\n      \"attributes.attack.thrown\": 0,\n      \"attributes.attack.shared\": 0,\n      \"attributes.attack.critConfirm\": 0,\n      \"attributes.mDex\": { armorBonus: 0, shieldBonus: 0 },\n      \"attributes.damage.general\": 0,\n      \"attributes.damage.weapon\": 0,\n      \"attributes.damage.natural\": 0,\n      \"attributes.damage.melee\": 0, // Melee weapon\n      \"attributes.damage.meleeAll\": 0,\n      \"attributes.damage.ranged\": 0, // Ranged weapon\n      \"attributes.damage.rangedAll\": 0,\n      \"attributes.damage.thrown\": 0, // Thrown weapon\n      \"attributes.damage.spell\": 0,\n      \"attributes.damage.shared\": 0,\n      \"attributes.woundThresholds.level\": 0,\n      \"attributes.woundThresholds.mod\": 0,\n      \"attributes.woundThresholds.override\": -1,\n      \"attributes.woundThresholds.penaltyBase\": 0,\n      \"attributes.woundThresholds.penalty\": 0,\n      \"abilities.str.checkMod\": 0,\n      \"abilities.str.total\": 0,\n      \"abilities.str.undrained\": 0,\n      \"abilities.dex.checkMod\": 0,\n      \"abilities.dex.total\": 0,\n      \"abilities.dex.undrained\": 0,\n      \"abilities.con.checkMod\": 0,\n      \"abilities.con.total\": 0,\n      \"abilities.con.undrained\": 0,\n      \"abilities.int.checkMod\": 0,\n      \"abilities.int.total\": 0,\n      \"abilities.int.undrained\": 0,\n      \"abilities.wis.checkMod\": 0,\n      \"abilities.wis.total\": 0,\n      \"abilities.wis.undrained\": 0,\n      \"abilities.cha.checkMod\": 0,\n      \"abilities.cha.total\": 0,\n      \"abilities.cha.undrained\": 0,\n      \"attributes.spells.spellbooks.primary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.secondary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.concentration.total\": 0,\n      \"attributes.spells.spellbooks.primary.cl.total\": 0,\n      \"attributes.spells.spellbooks.secondary.cl.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.cl.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.cl.total\": 0,\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n      \"details.feats.bonus\": 0,\n      \"details.skills.bonus\": 0,\n      \"attributes.speed.land.add\": 0,\n      \"attributes.speed.swim.add\": 0,\n      \"attributes.speed.fly.add\": 0,\n      \"attributes.speed.climb.add\": 0,\n      \"attributes.speed.burrow.add\": 0,\n      \"attributes.savingThrows.fort.total\": this.system.attributes.savingThrows.fort.base ?? 0,\n      \"attributes.savingThrows.ref.total\": this.system.attributes.savingThrows.ref.base ?? 0,\n      \"attributes.savingThrows.will.total\": this.system.attributes.savingThrows.will.base ?? 0,\n    };\n\n    // Determine skill keys\n    try {\n      const skillKeys = getChangeFlat.call(this, \"skills\");\n      for (const k of skillKeys) {\n        keys[k.replace(/^system\\./, \"\")] = 0;\n      }\n    } catch (err) {\n      console.error(\"Could not determine skills for an actor\", this);\n    }\n\n    return keys;\n  }\n\n  /**\n   * Data to reset base value of, but only if missing.\n   *\n   * @private\n   * @see {@link _resetInherentTotals}\n   * @returns {Record<string,number>}\n   */\n  _getBaseValueFillKeys() {\n    return [\n      { parent: \"abilities.str\", key: \"base\", value: 0 },\n      { parent: \"abilities.dex\", key: \"base\", value: 0 },\n      { parent: \"abilities.con\", key: \"base\", value: 0 },\n      { parent: \"abilities.int\", key: \"base\", value: 0 },\n      { parent: \"abilities.wis\", key: \"base\", value: 0 },\n      { parent: \"abilities.cha\", key: \"base\", value: 0 },\n    ];\n  }\n\n  /**\n   * @protected\n   */\n  _resetInherentTotals() {\n    const keys = this._getInherentTotalsKeys();\n\n    // Reset totals\n    for (const [k, v] of Object.entries(keys)) {\n      try {\n        foundry.utils.setProperty(this.system, k, v);\n      } catch (err) {\n        console.error(err, k);\n      }\n    }\n\n    for (const data of this._getBaseValueFillKeys()) {\n      const { parent, key, value } = data;\n      const o = getProperty(this.system, parent);\n      if (!o) continue; // Not all actor types have these\n      o[key] ??= value;\n    }\n  }\n\n  /**\n   * Return reduced movement speed.\n   *\n   * @example\n   * pf1.documents.actor.ActorPF.getReducedMovementSpeed(30); // => 20\n   *\n   * @param {number} value - The non-reduced movement speed.\n   * @returns {number} The reduced movement speed.\n   */\n  static getReducedMovementSpeed(value) {\n    return value - Math.floor(value / 5 / 3) * 5;\n  }\n\n  /**\n   * Return increased amount of spell slots by ability score modifier.\n   *\n   * @example\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(2, 1); // => 1\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 1); // => 2\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 7); // => 0\n   *\n   * @param {number} mod - The associated ability modifier.\n   * @param {number} level - Spell level.\n   * @returns {number} Amount of spell levels to increase.\n   */\n  static getSpellSlotIncrease(mod, level) {\n    if (level === 0) return 0;\n    if (mod <= 0) return 0;\n    return Math.max(0, Math.ceil((mod + 1 - level) / 4));\n  }\n\n  /**\n   * Return the amount of experience required to gain a certain character level.\n   *\n   * @abstract\n   * @param {number} level - The desired level\n   * @returns {number} - The XP required\n   */\n  getLevelExp(level) {\n    return 0; // Only used by PCs\n  }\n\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Socket Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    if (!changed.system) return; // No system updates.\n\n    const oldData = this.system;\n\n    this._syncProtoTokenSize(changed);\n\n    // Offset HP values\n    const attributes = changed.system.attributes;\n    if (attributes) {\n      for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n        const hp = attributes[key];\n        if (!hp) continue;\n        if (hp.value !== undefined && hp.offset === undefined) {\n          const max = hp.max ?? oldData.attributes[key]?.max ?? 0;\n          hp.offset = hp.value - max;\n        }\n        // Do not ever keep .value\n        delete hp.value;\n      }\n\n      // Convert excess vigor damage to wounds\n      const vigor = attributes.vigor;\n      if (vigor?.offset < 0) {\n        const maxVigor = oldData.attributes.vigor.max;\n        const excessVigorDamage = -(maxVigor + vigor.offset);\n        if (excessVigorDamage > 0) {\n          attributes.wounds ??= {};\n          attributes.wounds.offset ??= oldData.attributes?.wounds?.offset ?? 0;\n          attributes.wounds.offset -= excessVigorDamage;\n          vigor.offset = -maxVigor;\n        }\n      }\n    }\n\n    if (changed.system.attributes?.quadruped !== undefined) {\n      const quad = changed.system.attributes.quadruped;\n      const quadRace = this.race?.system.quadruped ?? false;\n      // Null if setting qudruped to same as race (no override)\n      if (quad === quadRace) changed.system.attributes.quadruped = null;\n    }\n\n    // Make certain variables absolute\n    const abilities = changed.system.abilities;\n    if (abilities) {\n      const absoluteKeys = [\"userPenalty\", \"damage\", \"drain\"];\n      const keys = Object.keys(abilities);\n      for (const abl of keys) {\n        const ablData = abilities[abl];\n        if (!ablData) continue; // e.g. if null from being deleted for homebrew\n        for (const absKey of absoluteKeys) {\n          if (ablData[absKey] !== undefined) {\n            ablData[absKey] = Math.abs(ablData[absKey]);\n          }\n        }\n      }\n    }\n\n    const energyDrain = changed.system.attributes?.energyDrain;\n    if (energyDrain !== undefined) {\n      changed.system.attributes.energyDrain = Math.abs(energyDrain);\n    }\n\n    // Backwards compatibility\n    const conditions = changed.system.attributes?.conditions;\n\n    // Never allow updates to the new condtions location\n    if (changed.system.conditions !== undefined) {\n      delete changed.system.conditions;\n    }\n\n    if (conditions) {\n      foundry.utils.logCompatibilityWarning(\n        \"Toggling conditions via Actor.update() is deprecated in favor of Actor.setCondition()\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n\n      // Prevent data storage\n      delete changed.system.attributes.conditions;\n\n      // Toggle AEs\n      await this.setConditions(conditions);\n    }\n  }\n\n  /**\n   * Synchronize prototype token sizing with actor size.\n   *\n   * @internal\n   * @param {object} changed - Pre-uppdate data\n   */\n  _syncProtoTokenSize(changed) {\n    const sizeKey = changed.system.traits?.size;\n    if (!sizeKey) return;\n\n    if (this.token) return;\n\n    const staticSize =\n      changed.prototypeToken?.flags?.pf1?.staticSize ?? this.prototypeToken.getFlag(\"pf1\", \"staticSize\") ?? false;\n    if (staticSize) return;\n\n    const size = pf1.config.tokenSizes[sizeKey];\n    if (!size) return;\n\n    changed.prototypeToken ??= {};\n    if (changed.prototypeToken?.width === undefined) {\n      changed.prototypeToken.width = size.w;\n    }\n    if (changed.prototypeToken?.height === undefined) {\n      changed.prototypeToken.height = size.h;\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // No system data updated\n    if (!changed.system) return;\n\n    const sourceUser = game.user.id === userId;\n\n    let initializeVision = false,\n      refreshLighting = false;\n\n    if (foundry.utils.hasProperty(changed.system, \"traits.senses\")) {\n      initializeVision = true;\n      if (changed.system.traits.senses.ll) {\n        refreshLighting = true;\n      }\n    } else if (changed.flags?.pf1?.visionSharing) {\n      initializeVision = true;\n      refreshLighting = true;\n    }\n\n    if (initializeVision || refreshLighting) {\n      if (this.testUserPermission(game.user, \"OBSERVER\")) {\n        const visionUpdate = {\n          refreshLighting: true,\n          refreshVision: true,\n        };\n\n        // Ensure vision immediately updates\n        if (initializeVision) {\n          for (const token of this.getActiveTokens(false, true)) {\n            token._syncSenses();\n          }\n          visionUpdate.initializeVision = true;\n        }\n\n        // Ensure LLV functions correctly\n        if (refreshLighting) {\n          visionUpdate.initializeLighting = true;\n        }\n\n        canvas.perception.update(visionUpdate, true);\n      }\n    }\n\n    if (sourceUser) {\n      const sizeKey = changed.system.traits?.size;\n      if (sizeKey !== undefined) {\n        this._updateTokenSize(sizeKey);\n      }\n    }\n  }\n\n  /**\n   * Resize token sizes based on actor size.\n   *\n   * Ignores tokens with static size set.\n   *\n   * @todo Add option to update token size on all scenes.\n   *\n   * @internal\n   * @param {string} sizeKey - New size key\n   * @param {object} [options] - Additional options\n   * @returns {Promise<TokenDocument[]>|null} - Updated token documents, or null if no update was performed.\n   * @throws {Error} - On invalid parameters\n   */\n  async _updateTokenSize(sizeKey, options = {}) {\n    const size = pf1.config.tokenSizes[sizeKey];\n    if (!size) throw new Error(`Size key \"${sizeKey}\" is invalid`);\n    const scene = canvas.scene;\n    if (!scene) return null;\n\n    // Get relevant tokens\n    const tokens = this.token\n      ? [this.token]\n      : this.getActiveTokens(false, true).filter((token) => !token.getFlag(\"pf1\", \"staticSize\"));\n\n    const protoTexture = this.prototypeToken?.texture ?? {};\n\n    const updates = tokens.map((t) => ({\n      _id: t.id,\n      width: size.w,\n      height: size.h,\n      texture: {\n        scaleX: size.scale * (protoTexture.scaleX || 1),\n        scaleY: size.scale * (protoTexture.scaleY || 1),\n      },\n    }));\n\n    return TokenDocument.implementation.updateDocuments(updates, { parent: scene });\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {Item|Actor} parent - Parent document\n   * @param {\"items\"|\"effects\"} collection - Collection name\n   * @param {Item[]|ActiveEffect[]} documents - Created documents\n   * @param {object[]} result - Creation data for the documents\n   * @param {object} context - Create context options\n   * @param {string} userId - Triggering user's ID\n   */\n  _onCreateDescendantDocuments(parent, collection, documents, result, context, userId) {\n    super._onCreateDescendantDocuments(...arguments);\n\n    if (userId !== game.user.id) return;\n\n    if (collection === \"items\") {\n      // Apply race size to actor\n      const race = documents.find((d) => d.type === \"race\");\n      if (race?.system.size) {\n        if (this.system.traits.size !== race.system.size) this.update({ \"system.traits.size\": race.system.size });\n      }\n    }\n\n    if (collection === \"effects\") {\n      if (context.pf1?.updateConditionTracks !== false) {\n        this._handleConditionTracks(documents, context);\n      }\n    }\n  }\n\n  /**\n   * Handle condition track toggling post active effect creation if there's still some issues.\n   *\n   * @internal\n   * @param {ActiveEffect[]} documents Updated active effect documents\n   * @returns {Promise}\n   */\n  async _handleConditionTracks(documents) {\n    // Record of previously update conditions that didn't get notified about\n    const previousConditions = {};\n\n    const conditions = {};\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const ae of documents) {\n      for (const statusId of ae.statuses ?? []) {\n        // Skip non-conditions\n        if (!pf1.registry.conditions.has(statusId)) continue;\n\n        // Mark this condition for notification\n        previousConditions[statusId] = true;\n\n        // Process condition tracks\n        for (const conditionGroup of tracks) {\n          if (!conditionGroup.includes(statusId)) continue;\n          // Disable other conditions in the track\n          for (const disableConditionId of conditionGroup) {\n            if (disableConditionId === statusId) continue;\n            conditions[disableConditionId] = false;\n          }\n        }\n      }\n    }\n\n    this._conditionToggleNotify(previousConditions);\n\n    if (!foundry.utils.isEmpty(conditions)) {\n      return this.setConditions(conditions);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {*} parent\n   * @param {\"items\"|\"effects\"} collection\n   * @param {Item|ActiveEffect[]} documents\n   * @param {string[]} ids\n   * @param {object} context - Delete context\n   * @param {string} userId\n   */\n  _onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId) {\n    super._onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId);\n\n    if (collection === \"effects\") {\n      const updatedConditions = {};\n      for (const ae of documents) {\n        for (const statusId of ae.statuses ?? []) {\n          // Toggle off only if it's valid ID and there isn't any other AEs that have same condition still\n          if (pf1.registry.conditions.has(statusId) && !this.statuses.has(statusId)) {\n            updatedConditions[statusId] = false;\n          }\n        }\n      }\n\n      if (context?.pf1?.updateConditionTracks !== false) {\n        this._conditionToggleNotify(updatedConditions);\n      }\n    }\n\n    // Following process is done only on triggering user\n    if (game.user.id !== userId) return;\n\n    if (collection === \"items\") {\n      this._cleanItemLinksTo(documents);\n\n      // Delete child linked items\n      const toRemove = new Set();\n\n      // Remove linked children with item\n      const _enumChildren = (item) => {\n        toRemove.add(item.id);\n\n        const links = item.getLinkedItemsSync(\"children\");\n        for (const link of links) {\n          if (toRemove.has(link.id)) continue;\n          const child = item.actor.items.get(link.id);\n          if (child) _enumChildren(child);\n        }\n      };\n\n      // Find children\n      for (const item of documents) _enumChildren(item);\n      // Remove already deleted items\n      for (const id of ids) toRemove.delete(id);\n\n      if (toRemove.size > 0) {\n        this.deleteEmbeddedDocuments(\"Item\", Array.from(toRemove));\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @param {pf1.documents.item.ItemPF[]} items - Item documents to clean links to.\n   */\n  async _cleanItemLinksTo(items) {\n    const updates = [];\n    // Clean up references to this item\n    for (const deleted of items) {\n      const uuid = deleted.getRelativeUUID(this);\n      for (const item of this.items) {\n        const updateData = await item.removeItemLink(uuid, { commit: false });\n        if (updateData) {\n          updateData._id = item.id;\n          updates.push(updateData);\n        }\n      }\n    }\n\n    if (updates.length) {\n      return this.updateEmbeddedDocuments(\"Item\", updates);\n    }\n  }\n\n  /**\n   * @todo - The condition notification needs to be smarter.\n   *\n   * @internal\n   * @param conditions\n   */\n  _conditionToggleNotify(conditions = {}) {\n    for (const [conditionId, state] of Object.entries(conditions)) {\n      Hooks.callAll(\"pf1ToggleActorCondition\", this, conditionId, state);\n    }\n  }\n\n  /**\n   * @internal\n   * @param {ItemPF} item - the item to add to the actor's resources\n   * @param {object} [options] - extra options\n   * @param {boolean} [options.warnOnDuplicate] - Skips warning if item tag already exists in dictionary flags\n   * @returns {boolean} True if resources were set\n   */\n\n  updateItemResources(item, { warnOnDuplicate = true } = {}) {\n    if (item.type === \"spell\") return false;\n    if (!item.isCharged) return false;\n    if (item.isSingleUse) return false;\n    if (item.isPhysical) return false;\n\n    const tag = item.system.tag;\n    if (!tag) console.error(\"Attempting create resource on tagless item\", item);\n\n    if (warnOnDuplicate && this.system.resources[tag] && this.isOwner) {\n      const msg = game.i18n.format(\"PF1.Warning.DuplicateTag\", {\n        actor: this.uuid,\n        item: item.name,\n        tag,\n      });\n      ui.notifications.warn(msg, { console: false });\n      console.warn(msg, item);\n    }\n\n    const res = new Resource(item);\n    this.system.resources[tag] = res;\n\n    return true;\n  }\n\n  /* -------------------------------------------- */\n  /*  Rolls                                       */\n  /* -------------------------------------------- */\n\n  /**\n   * @deprecated - See {@link pf1.documents.item.ItemAttackPF.fromItem ItemAttackPF.fromItem()}\n   * @param {pf1.documents.item.ItemWeaponPF} item - Weapon to create attack from\n   * @returns {Item|undefined} - Created item.\n   */\n  async createAttackFromWeapon(item) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.createAttackFromWeapon() is deprecated in favor of ItemAttackPF.fromItem()\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const attackItem = pf1.documents.item.ItemAttackPF.fromItem(item);\n\n    // Create attack\n    const [newItem] = await this.createEmbeddedDocuments(\"Item\", [attackItem]);\n    if (!newItem) throw new Error(\"Failed to create attack from weapon\");\n\n    // Create link\n    await item.createItemLink(\"children\", \"data\", newItem, newItem.id);\n\n    // Notify user\n    ui.notifications.info(game.i18n.format(\"PF1.NotificationCreatedAttack\", { item: item.name }));\n\n    // Disable quick use of weapon\n    await item.update({ \"system.showInQuickbar\": false });\n\n    return newItem;\n  }\n\n  /**\n   * Enable and configure a new spellbook.\n   *\n   * @example\n   * // Create spellbook for inquisitor\n   * actor.createSpellbook({ type: \"spontaneous\", progression: \"med\", ability: \"wis\", spells: \"divine\", class: \"inquisitor\", cantrips: true, domain: 0 });\n   *\n   * @param {object} [casting] - Book casting configuration\n   * @param {\"prepared\"|\"spontaneous\"|\"hybrid\"} [casting.type=\"prepared\"] - Spellbook type\n   * @param {\"high\"|\"med\"|\"low\"} [casting.progression=\"high\"] - Casting progression type\n   * @param {string} [casting.ability=\"int\"] - Spellcasting ability score ID\n   * @param {\"arcane\"|\"divine\"|\"psychic\"|\"alchemy\"} [casting.spells=\"arcane\"] - Spell/spellcasting type\n   * @param {string} [casting.class=\"_hd\"] - Class tag\n   * @param {boolean} [casting.cantrips=true] - Has cantrips?\n   * @param {number} [casting.domain=1] - Domain/School slots\n   * @param {number} [casting.offset] - Level offset\n   * @returns {Promise<this>} - Promise to updated document\n   */\n  createSpellbook(casting = {}, { commit = true } = {}) {\n    const books = this.system.attributes.spells.spellbooks ?? {};\n\n    const oldBook = casting.class\n      ? Object.entries(books).find(([_, book]) => !!book.class && book.class === casting.class)\n      : null;\n\n    let bookId;\n    if (oldBook) {\n      if (oldBook[1].inUse) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.SpellbookExists\"));\n      bookId = oldBook[0]; // Reuse old book\n    } else {\n      const available = Object.entries(books).find(([bookId, bookData]) => bookData.inUse !== true);\n      if (available === undefined) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoFreeSpellbooks\"));\n      bookId = available[0];\n    }\n\n    // Add defaults when unconfigured\n    // `class` causes problems if destructured, hence why it is here.\n    casting.type ??= \"prepared\";\n    casting.class ??= \"_hd\";\n    casting.progression ??= \"high\";\n    casting.spells ??= \"arcane\";\n    casting.ability ??= \"int\";\n    casting.cantrips ??= true;\n    casting.domain ??= 1;\n    casting.offset ??= 0;\n    if (casting.offset !== 0) casting.offset = `${casting.offset}`;\n\n    const updateData = {\n      [`system.attributes.spells.spellbooks.${bookId}`]: {\n        inUse: true,\n        kind: casting.spells,\n        class: casting.class,\n        spellPreparationMode: casting.type,\n        casterType: casting.progression,\n        ability: casting.ability,\n        psychic: casting.spells === \"psychic\",\n        arcaneSpellFailure: casting.spells === \"arcane\",\n        hasCantrips: casting.cantrips,\n        domainSlotValue: casting.domain,\n        \"cl.formula\": casting.offset ? `${casting.offset}` : \"\",\n      },\n    };\n\n    if (commit) return this.update(updateData);\n    else return updateData;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Retrieve information about a skill.\n   *\n   * @example\n   * actor.getSkillInfo(\"per\"); // Perception skill info\n   * actor.getSkillInfo(\"crf.alchemy\"); // Craft (Alchemy) subskill info\n   *\n   * @param {string} skillId - Skill ID\n   * @param {object} [options] - Additional options\n   * @param {{ skills: {[key: string]: SkillData}}} [options.rollData] - Roll data instance to use.\n   * @throws {Error} - If defined skill is not found.\n   * @returns {SkillInfo}\n   */\n  getSkillInfo(skillId, { rollData } = {}) {\n    const skillIdParts = skillId.split(\".\");\n    if (skillIdParts.length > 2) skillIdParts.splice(1, 1);\n\n    const mainSkillId = skillIdParts.shift(),\n      subSkillId = skillIdParts.pop(),\n      isSubSkill = !!subSkillId;\n\n    // Reconstruct skillId with new shorter version to ensure format\n    skillId = [mainSkillId, subSkillId].filterJoin(\".\");\n\n    rollData ??= this.getRollData();\n    const parentSkill = isSubSkill ? this.getSkillInfo(mainSkillId, { rollData }) : null;\n\n    /** @type {SkillInfo} */\n    const skill = subSkillId\n      ? parentSkill.subSkills?.[subSkillId]\n      : foundry.utils.deepClone(rollData.skills[mainSkillId]);\n\n    if (!skill) throw new Error(`Invalid skill ID '${skillId}'`);\n\n    skill.journal ||= pf1.config.skillCompendiumEntries[isSubSkill ? mainSkillId : skillId];\n    skill.name ||= pf1.config.skills[skillId] || skillId;\n    skill.id = skillId;\n\n    if (isSubSkill) {\n      skill.fullName = `${parentSkill.name} (${skill.name})`;\n      skill.parentSkill = parentSkill;\n    } else {\n      skill.fullName = skill.name;\n    }\n\n    return skill;\n  }\n\n  /**\n   * Roll a Skill Check\n   *\n   * @example\n   * await actor.rollSkill(\"per\", { skipDialog: true, bonus: \"1d6\", dice: \"2d20kh\" });\n   *\n   * @param {string} skillId      The skill id (e.g. \"per\", \"prf.prf1\", or \"crf.alchemy\")\n   * @param {ActorRollOptions} [options={}]      Options which configure how the skill check is rolled\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSkill(skillId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const skillIdParts = skillId.split(\".\");\n    const mainSkillId = skillIdParts[0],\n      subSkillId = skillIdParts.length > 1 ? skillIdParts.at(-1) : null;\n    // Reconstruct skill ID to ensure it is valid for everything else.\n    skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n    const skillDataPathPart = subSkillId ? `${mainSkillId}.subSkills.${subSkillId}` : mainSkillId;\n\n    const skl = this.getSkillInfo(skillId);\n    const haveParentSkill = !!subSkillId;\n\n    // Add contextual attack string\n    const rollData = this.getRollData();\n    const noteObjects = this.getContextNotes(`skill.${skillId}`);\n    if (haveParentSkill) noteObjects.push(...this.getContextNotes(`skill.${mainSkillId}`, false));\n    const notes = this.formatContextNotes(noteObjects, rollData);\n\n    // Add untrained note\n    if (skl.rt && !skl.rank) {\n      notes.push(game.i18n.localize(\"PF1.Untrained\"));\n    }\n\n    // Gather changes\n    const parts = [];\n    const changes = getHighestChanges(\n      this.changes.filter((c) => {\n        const cf = c.getTargets(this);\n\n        if (haveParentSkill && cf.includes(`system.skills.${mainSkillId}.mod`)) return true;\n        return cf.includes(`system.skills.${skillDataPathPart}.mod`);\n      }),\n      { ignoreTarget: true }\n    );\n\n    // Add ability modifier\n    if (skl.ability) {\n      parts.push(`@abilities.${skl.ability}.mod[${pf1.config.abilities[skl.ability]}]`);\n    }\n\n    // Add rank\n    if (skl.rank > 0) {\n      parts.push(`${skl.rank}[${game.i18n.localize(\"PF1.SkillRankPlural\")}]`);\n      if (skl.cs) {\n        parts.push(`${pf1.config.classSkillBonus}[${game.i18n.localize(\"PF1.CSTooltip\")}]`);\n      }\n    }\n\n    // Add armor check penalty\n    if (skl.acp && rollData.attributes.acp.skill !== 0) {\n      parts.push(`-@attributes.acp.skill[${game.i18n.localize(\"PF1.ACPLong\")}]`);\n    }\n\n    // Add Wound Thresholds info\n    if (rollData.attributes.woundThresholds?.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push(label);\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Add changes\n    for (const c of changes) {\n      if (!c.value) continue;\n      // Hide complex change formulas in parenthesis.\n      if (typeof c.value === \"string\" && RollPF.parse(c.value).length > 1) {\n        parts.push(`(${c.value})[${c.flavor}]`);\n      } else {\n        parts.push(`${c.value}[${c.flavor}]`);\n      }\n    }\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    // Add metadata about the skill\n    const metadata = { skill: { rank: skl.rank ?? 0 } };\n    if ([\"acr\", \"swm\", \"clm\"].includes(skillId)) {\n      const speeds = this.system.attributes?.speed ?? {};\n      metadata.speed = { base: speeds.land?.total ?? 0 };\n      if (skillId === \"swm\") metadata.speed.swim = speeds.swim?.total ?? 0;\n      if (skillId === \"clm\") metadata.speed.climb = speeds.climb?.total ?? 0;\n    }\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SkillCheck\", { skill: skl.fullName }),\n      chatTemplateData: { properties: props },\n      compendium: { entry: pf1.config.skillCompendiumEntries[skillId] ?? skl.journal, type: \"JournalEntry\" },\n      subject: { skill: skillId },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n      messageData: {\n        flags: {\n          pf1: {\n            metadata,\n          },\n        },\n      },\n    };\n    if (Hooks.call(\"pf1PreActorRollSkill\", this, rollOptions, skillId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    if (result) Hooks.callAll(\"pf1ActorRollSkill\", this, result, skillId);\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll basic BAB check\n   *\n   * @param {ActorRollOptions} [options] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollBAB(options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts: [`${this.system.attributes.bab.total}[${game.i18n.localize(\"PF1.BABAbbr\")}]`],\n      subject: { core: \"bab\" },\n      flavor: game.i18n.localize(\"PF1.BAB\"),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollBab\", this, rollOptions) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollBab\", this, result);\n    return result;\n  }\n\n  /**\n   * Roll a basic CMB check for this actor\n   *\n   * @deprecated\n   * @param {ActorRollOptions & {ranged: boolean, ability: string | null}} [options={}]\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollCMB(options = {}) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.rollCMB() is deprecated in favor of ActorPF.rollAttack({maneuver:true})\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return this.rollAttack({ maneuver: true, ...options });\n  }\n\n  /**\n   * Roll a generic attack\n   *\n   * @example\n   * await actor.rollAttack({ ranged: true }); // Basic ranged attack\n   * await actor.rollAttack({ maneuver: true }); // Basic melee maneuver\n   *\n   * @param {ActorRollOptions} [options={}]\n   * @param {boolean} [options.maneuver=false] - Whether this is weapon or maneuver check.\n   * @param {boolean} [options.ranged=false] - Melee or ranged.\n   * @param {boolean} [options.ability=null] - Attack ability. If not defined, appropriate one is chosen based on the ranged option.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAttack({ maneuver = false, ranged = false, ability = null, ...options } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    if (options.melee !== undefined) {\n      foundry.utils.logCompatibilityWarning(\"ActorPF.rollAttack() melee parameter has been deprecated.\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      ranged = !options.melee;\n      delete options.melee;\n    }\n\n    const rangeLabel = {\n      melee: \"PF1.Melee\",\n      ranged: \"PF1.Ranged\",\n    };\n\n    let actionType;\n    if (!maneuver) actionType = ranged ? \"rwak\" : \"mwak\";\n    else actionType = ranged ? \"rcman\" : \"mcman\";\n\n    const atkData = {\n      ...pf1.components.ItemAction.defaultData,\n      name: !ranged ? game.i18n.localize(\"PF1.Melee\") : game.i18n.localize(\"PF1.Ranged\"),\n      actionType,\n    };\n\n    // Alter attack ability\n    const atkAbl = this.system.attributes?.attack?.[`${ranged ? \"ranged\" : \"melee\"}Ability`];\n    atkData.ability.attack = ability ?? (atkAbl || (ranged ? \"dex\" : \"str\"));\n\n    // Alter activation type\n    atkData.activation.type = \"attack\";\n    atkData.activation.unchained.type = \"attack\";\n\n    // Generate temporary item\n    /** @type {pf1.documents.item.ItemAttackPF} */\n    const atk = new Item.implementation(\n      {\n        type: \"attack\",\n        name: !maneuver ? game.i18n.localize(\"TYPES.Item.weapon\") : game.i18n.localize(\"PF1.CMBAbbr\"),\n        system: {\n          actions: [atkData],\n        },\n      },\n      { parent: this }\n    );\n\n    return atk.use(options);\n  }\n\n  /**\n   * Roll a Caster Level check using a particular spellbook of this actor\n   *\n   * @example\n   * await actor.rollCL(\"primary\");\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollCL(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData || this.getRollData();\n    rollData.cl = spellbook.cl.total;\n\n    // Set up roll parts\n    const parts = [];\n\n    const describePart = (value, label) => parts.push(`${value}[${label}]`);\n    const srcDetails = (s) => s?.reverse().forEach((d) => describePart(d.value, d.name, -10));\n    srcDetails(this.sourceDetails[`system.attributes.spells.spellbooks.${bookId}.cl.total`]);\n\n    // Add contextual caster level string\n    const notes = this.getContextNotesParsed(`spell.cl.${bookId}`);\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push(pf1.config.woundThresholdConditions[wT.level]);\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"cl\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.CasterLevelCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollCl\", this, rollOptions, bookId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollCl\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * Roll a concentration check using a particular spellbook of this actor\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollConcentration(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData || this.getRollData();\n    rollData.cl = spellbook.cl.total;\n    rollData.mod = this.system.abilities[spellbook.ability]?.mod ?? 0;\n\n    if (\n      Hooks.call(\"actorRoll\", \"pf1PreActorRollConcentration\", undefined, this, \"concentration\", bookId, options) ===\n      false\n    )\n      return;\n\n    // Set up roll parts\n    const parts = [];\n\n    const describePart = (value, label) => parts.push(`${value}[${label}]`);\n    const srcDetails = (s) => s?.reverse().forEach((d) => describePart(d.value, d.name, -10));\n    srcDetails(this.sourceDetails[`system.attributes.spells.spellbooks.${bookId}.concentration.total`]);\n\n    // Add contextual concentration string\n    const notes = this.getContextNotesParsed(`spell.concentration.${bookId}`);\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push(game.i18n.localize(pf1.config.woundThresholdConditions[wT.level]));\n    // TODO: Make the penalty show separate of the CL.total.\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"concentration\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.ConcentrationCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollConcentration\", this, rollOptions, bookId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollConcentration\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.damageResistances=true] If false, damage resistances (DR, ER) are omitted.\n   * @param {boolean} [options.damageVulnerabilities=true] If false, damage vulnerabilities are omitted.\n   */\n  getDefenseHeaders({ damageResistances = true, damageVulnerabilities = true } = {}) {\n    const actorData = this.system;\n    const headers = [];\n\n    const reSplit = pf1.config.re.traitSeparator;\n    const misc = [];\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n\n    if (damageResistances) {\n      // Damage reduction\n      if (actorData.traits.dr.length) {\n        headers.push({ header: game.i18n.localize(\"PF1.DamRed\"), value: actorData.traits.dr.split(reSplit) });\n      }\n      // Energy resistance\n      if (actorData.traits.eres.length) {\n        headers.push({ header: game.i18n.localize(\"PF1.EnRes\"), value: actorData.traits.eres.split(reSplit) });\n      }\n    }\n    if (damageVulnerabilities) {\n      // Damage vulnerabilities\n      if (actorData.traits.dv.value.length || actorData.traits.dv.custom.length) {\n        const value = [\n          ...actorData.traits.dv.value.map((obj) => damageTypes[obj]),\n          ...(actorData.traits.dv.custom || []),\n        ];\n        headers.push({ header: game.i18n.localize(\"PF1.DamVuln\"), value: value });\n      }\n    }\n    // Condition resistance\n    if (actorData.traits.cres.length) {\n      headers.push({ header: game.i18n.localize(\"PF1.ConRes\"), value: actorData.traits.cres.split(reSplit) });\n    }\n    // Immunities\n    if (\n      actorData.traits.di.value.length ||\n      actorData.traits.di.custom.length ||\n      actorData.traits.ci.value.length ||\n      actorData.traits.ci.custom.length\n    ) {\n      const value = [\n        ...actorData.traits.di.value.map((obj) => damageTypes[obj]),\n        ...(actorData.traits.di.custom || []),\n        ...actorData.traits.ci.value.map((obj) => pf1.config.conditionTypes[obj]),\n        ...(actorData.traits.ci.custom || []),\n      ];\n      headers.push({ header: game.i18n.localize(\"PF1.ImmunityPlural\"), value: value });\n    }\n    // Spell Resistance\n    if (actorData.attributes.sr.total > 0) {\n      misc.push(game.i18n.format(\"PF1.SpellResistanceNote\", { value: actorData.attributes.sr.total }));\n    }\n\n    if (misc.length > 0) {\n      headers.push({ header: game.i18n.localize(\"PF1.MiscShort\"), value: misc });\n    }\n\n    return headers;\n  }\n\n  /**\n   * @protected\n   * @returns\n   */\n  getInitiativeContextNotes() {\n    const notes = this.getContextNotes(\"misc.init\").reduce((arr, o) => {\n      for (const n of o.notes) arr.push(...n.split(/[\\n\\r]+/));\n      return arr;\n    }, []);\n\n    let notesHTML;\n    if (notes.length > 0) {\n      // Format notes if they're present\n      const notesHTMLParts = [];\n      notes.forEach((note) => notesHTMLParts.push(`<span class=\"tag\">${note}</span>`));\n      notesHTML =\n        '<div class=\"flexcol property-group gm-sensitive\"><label>' +\n        game.i18n.localize(\"PF1.Notes\") +\n        '</label> <div class=\"flexrow tag-list\">' +\n        notesHTMLParts.join(\"\") +\n        \"</div></div>\";\n    }\n\n    return [notes, notesHTML];\n  }\n\n  /**\n   * Roll initiative for one or multiple Combatants associated with this actor.\n   * If no combat exists, GMs have the option to create one.\n   * If viewing a full Actor document, all Tokens which map to that actor will be targeted for initiative rolls.\n   * If viewing a synthetic Token actor, only that particular Token will be targeted for an initiative roll.\n   *\n   * @example\n   * await actor.rollInitiative({ dice: \"2d20kh\", createCombatants: true, skipDialog: true });\n   *\n   * @override\n   * @see {@link pf1.documents.CombatPF#rollInitiative}\n   * @param {object} [options={}] Options which configure how initiative is rolled\n   * @param {boolean} [options.createCombatants=false] - Create new Combatant entries for tokens associated with this actor.\n   * @param {boolean} [options.rerollInitiative=false] - Reroll initiative for existing Combatants\n   * @param {string|null} [options.dice=null] - Formula override for dice to roll\n   * @param {string|null} [options.bonus=null] - Formula for bonus to initiative\n   * @param {boolean} [options.skipDialog] - Skip roll dialog\n   * @param {string} [options.rollMode] - Roll mode override\n   * @param {TokenDocumentPF} [options.token=this.token] - For which token this initiative roll is for\n   * @returns {Promise<pf1.documents.CombatPF|null>} The updated Combat document in which initiative was rolled, or null if no initiative was rolled\n   */\n  async rollInitiative({\n    createCombatants = false,\n    rerollInitiative = false,\n    initiativeOptions = {},\n    dice = null,\n    bonus = null,\n    rollMode = null,\n    skipDialog,\n    token,\n  } = {}) {\n    token ||= this.token;\n\n    // Obtain (or create) a combat encounter\n    let combat = game.combat;\n    if (!combat) {\n      if (game.user.isGM) {\n        const cls = getDocumentClass(\"Combat\");\n        combat = await cls.create({ scene: canvas.scene?.id, active: true });\n      } else {\n        ui.notifications.warn(\"COMBAT.NoneActive\", { localize: true });\n        return null;\n      }\n    }\n\n    // Create new combatants\n    if (createCombatants) {\n      const tokens = this.isToken ? [this.token] : this.getActiveTokens().map((t) => t.document);\n      const toCreate = [];\n      if (tokens.length) {\n        for (const t of tokens) {\n          if (t.inCombat) continue;\n          toCreate.push({ tokenId: t.id, sceneId: t.parent.id, actorId: this.id, hidden: t.hidden });\n        }\n      }\n      // No tokens on scene\n      else {\n        const existing = combat.combatants.filter((t) => t.actor == this && !t.token);\n        if (!existing.length) {\n          toCreate.push({ actorId: this.id, hidden: false });\n        }\n      }\n\n      if (toCreate.length) await combat.createEmbeddedDocuments(\"Combatant\", toCreate);\n    }\n\n    let untokened = 0;\n    // Roll initiative for combatants\n    let combatants = combat.combatants.filter((c) => {\n      if (c.actor?.id !== this.id) return false;\n      if (token && c.token?.id !== token.id) return false;\n      if (!c.token) untokened += 1;\n      return rerollInitiative || c.initiative === null;\n    });\n\n    // If more than one relevant combatants with no token present, prune list of valid combatants.\n    if (untokened > 1) {\n      combatants = combatants.filter((c) => !!c.token || c.initiative === null);\n      if (combatants.length == 0) ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoInitOnDuplicateCombatant\"));\n    }\n\n    // No combatants. Possibly from reroll being disabled.\n    if (combatants.length == 0) return combat;\n\n    foundry.utils.mergeObject(initiativeOptions, { d20: dice, bonus, rollMode, skipDialog });\n\n    await combat.rollInitiative(\n      combatants.map((c) => c.id),\n      initiativeOptions\n    );\n\n    return combat;\n  }\n\n  /**\n   * Roll a specific saving throw\n   *\n   * @example\n   * await actor.rollSavingThrow(\"ref\", { skipDialog: true, dice: \"2d20kh\", bonus: \"4\" });\n   *\n   * @param {\"ref\"|\"fort\"|\"will\"} savingThrowId Identifier for saving throw type.\n   * @param {ActorRollOptions} [options={}] Roll options.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSavingThrow(savingThrowId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = this.getRollData();\n    const noteObjects = this.getContextNotes(`savingThrow.${savingThrowId}`);\n    const notes = this.formatContextNotes(noteObjects, rollData);\n\n    const parts = [];\n\n    // Get base\n    const base = this.system.attributes.savingThrows[savingThrowId]?.base;\n    if (base) parts.push(`${base}[${game.i18n.localize(\"PF1.Base\")}]`);\n\n    // Add changes\n    let changeBonus = [];\n    const changes = this.changes.filter((c) => [\"allSavingThrows\", savingThrowId].includes(c.target));\n    {\n      // Get damage bonus\n      changeBonus = getHighestChanges(\n        changes.filter((c) => {\n          return c.operator !== \"set\";\n        }),\n        { ignoreTarget: true }\n      ).reduce((cur, c) => {\n        if (c.value)\n          cur.push({\n            value: c.value,\n            source: c.flavor,\n          });\n        return cur;\n      }, []);\n    }\n    for (const c of changeBonus) {\n      parts.push(`${c.value}[${c.source}]`);\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push(label);\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Roll saving throw\n    const props = this.getDefenseHeaders({ damageResistances: false, damageVulnerabilities: false });\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n    const label = pf1.config.savingThrows[savingThrowId];\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SavingThrowRoll\", { save: label }),\n      subject: { save: savingThrowId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollSave\", this, rollOptions, savingThrowId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollSave\", this, result, savingThrowId);\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll an Ability Test\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\n   *\n   * @example\n   * await actor.rollAbilityTest(\"str\");\n   *\n   * @param {string} abilityId - The ability ID (e.g. \"str\")\n   * @param {object} [options={}] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAbilityTest(abilityId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = options.rollData || this.getRollData();\n    const noteObjects = this.getContextNotes(`abilityChecks.${abilityId}`);\n    const notes = this.formatContextNotes(noteObjects, rollData);\n\n    const label = pf1.config.abilities[abilityId];\n    const abl = this.system.abilities[abilityId];\n\n    const parts = [`@abilities.${abilityId}.mod[${label}]`];\n    if (abl.checkMod != 0) {\n      const changes = this.sourceDetails[`system.abilities.${abilityId}.checkMod`];\n      for (const c of changes) parts.push(`${c.value}[${c.name}]`);\n    }\n    if (this.system.attributes.energyDrain) {\n      parts.push(\"-@attributes.energyDrain\");\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push(label);\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.AbilityTest\", { ability: label }),\n      subject: { ability: abilityId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollAbility\", this, rollOptions, abilityId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollAbility\", this, result, abilityId);\n    return result;\n  }\n\n  /**\n   * Show defenses in chat\n   *\n   * @param {object} [options={}] Additional options\n   * @param {string | null} [options.rollMode=null]   The roll mode to use for the roll; defaults to the user's current preference when `null`.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   */\n  async displayDefenseCard({ rollMode = null, token } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n    const rollData = this.getRollData();\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n\n    // Add contextual AC notes\n    const acNoteObjects = this.getContextNotes(\"misc.ac\");\n    const acNotes = this.formatContextNotes(acNoteObjects, rollData);\n    if (this.system.attributes.acNotes) acNotes.push(...this.system.attributes.acNotes.split(/[\\n\\r]+/));\n\n    // Add contextual CMD notes\n    const cmdNoteObjects = this.getContextNotes(\"misc.cmd\");\n    const cmdNotes = this.formatContextNotes(cmdNoteObjects, rollData);\n    if (this.system.attributes.cmdNotes) cmdNotes.push(...this.system.attributes.cmdNotes.split(/[\\n\\r]+/));\n\n    // Add contextual SR notes\n    const srNoteObjects = this.getContextNotes(\"misc.sr\");\n    const srNotes = this.formatContextNotes(srNoteObjects, rollData);\n    if (this.system.attributes.srNotes) srNotes.push(...this.system.attributes.srNotes.split(/[\\n\\r]+/));\n\n    // BUG: No specific saving throw notes are included\n    const saveNotesObjects = this.getContextNotes(\"allSavingThrows\");\n    const saveNotes = this.formatContextNotes(saveNotesObjects, rollData);\n    if (this.system.attributes.saveNotes) saveNotes.push(...this.system.attributes.saveNotes.split(/[\\n\\r]+/));\n\n    // Add misc data\n    const reSplit = pf1.config.re.traitSeparator;\n    // Damage Reduction\n    const drNotes = Object.values(this.parseResistances(\"dr\"));\n\n    // Energy Resistance\n    const energyResistance = Object.values(this.parseResistances(\"eres\"));\n\n    // Damage Immunity\n    if (this.system.traits.di.value.length || this.system.traits.di.custom.length) {\n      const values = [\n        ...this.system.traits.di.value.map((obj) => damageTypes[obj]),\n        ...(this.system.traits.di.custom || []),\n      ];\n      energyResistance.push(...values.map((o) => game.i18n.format(\"PF1.ImmuneTo\", { immunity: o })));\n    }\n    // Damage Vulnerability\n    if (this.system.traits.dv.value.length || this.system.traits.dv.custom.length) {\n      const values = [\n        ...this.system.traits.dv.value.map((obj) => damageTypes[obj]),\n        ...(this.system.traits.dv.custom || []),\n      ];\n      energyResistance.push(...values.map((o) => game.i18n.format(\"PF1.VulnerableTo\", { vulnerability: o })));\n    }\n    // Conditions\n    const conditions = Object.entries(this.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInDefense)\n      .map((c) => c.name);\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) {\n      const wTlabel = pf1.config.woundThresholdConditions[wT.level];\n      acNotes.push(wTlabel);\n      cmdNotes.push(wTlabel);\n    }\n\n    // Get actor's token\n    token ??= this.token;\n\n    // Create message\n    const actorData = this.system;\n    const templateData = {\n      actor: this,\n      name: token?.name ?? this.name,\n      tokenUuid: token?.uuid ?? null,\n      ac: {\n        normal: actorData.attributes.ac.normal.total,\n        touch: actorData.attributes.ac.touch.total,\n        flatFooted: actorData.attributes.ac.flatFooted.total,\n        notes: acNotes,\n      },\n      cmd: {\n        normal: actorData.attributes.cmd.total,\n        flatFooted: actorData.attributes.cmd.flatFootedTotal,\n        notes: cmdNotes,\n      },\n      misc: {\n        hardness: actorData.traits.hardness,\n        sr: actorData.attributes.sr.total,\n        srNotes: srNotes,\n        drNotes: drNotes,\n        energyResistance: energyResistance,\n        conditions: conditions,\n      },\n      saves: {\n        notes: saveNotes,\n      },\n    };\n    // Add regeneration and fast healing\n    if ((actorData.traits?.fastHealing || \"\").length || (actorData.traits?.regen || \"\").length) {\n      templateData.regen = {\n        regen: actorData.traits.regen,\n        fastHealing: actorData.traits.fastHealing,\n      };\n    }\n\n    rollMode ??= game.settings.get(\"core\", \"rollMode\");\n\n    const chatData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/defenses.hbs\", templateData),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n      rollMode,\n      flags: {\n        core: {\n          canPopout: true,\n        },\n        pf1: {\n          subject: \"defenses\",\n        },\n      },\n    };\n\n    // Apply roll mode\n    ChatMessage.implementation.applyRollMode(chatData, rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /**\n   * @internal\n   * @param key\n   */\n  _deprecatePF1PrefixConditions(key) {\n    if (/^pf1_/.test(key)) {\n      const newKey = key.replace(/^pf1_/, \"\");\n      foundry.utils.logCompatibilityWarning(`Condition \"${key}\" is deprecated in favor of \"${newKey}\"`, {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n      key = newKey;\n    }\n    return key;\n  }\n\n  /**\n   * Easy way to toggle a condition.\n   *\n   * @example\n   * await actor.toggleCondition(\"dazzled\");\n   *\n   * @param {boolean} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @param {object} [aeData] - Extra data to add to the AE if it's being enabled\n   * @returns {object} Condition ID to boolean mapping of actual updates.\n   */\n  async toggleCondition(conditionId, aeData) {\n    let active = !this.hasCondition(conditionId);\n    if (active && aeData) active = aeData;\n    return this.setCondition(conditionId, active);\n  }\n\n  /**\n   * Easy way to set a condition.\n   *\n   * @example\n   * await actor.setCondition(\"dazzled\", true);\n   * await actor.setCondition(\"sleep\", { duration: { seconds: 60 } });\n   *\n   * @param {string} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @param {object|boolean} enabled - Whether to enable (true) the condition, or disable (false) it. Or object for merging into the active effect as part of enabling.\n   * @param {object} [context] Update context\n   * @returns {object} Condition ID to boolean mapping of actual updates.\n   */\n  async setCondition(conditionId, enabled, context) {\n    if (typeof enabled !== \"boolean\" && foundry.utils.getType(enabled) !== \"Object\")\n      throw new TypeError(\"Actor.setCondition() enabled state must be a boolean or plain object\");\n    return this.setConditions({ [conditionId]: enabled }, context);\n  }\n\n  /**\n   * Set state of multiple conditions.\n   * Also handles condition tracks to minimize number of updates.\n   *\n   * @example\n   * await actor.setConditions({ blind: true, sleep: false, shaken:true });\n   *\n   * @param {object} conditions Condition ID to boolean (or update data) mapping of new condition states. See {@link setCondition()}\n   * @param {object} [context] Update context\n   * @returns {Record<string,boolean>} Condition ID to boolean mapping of actual updates.\n   */\n  async setConditions(conditions = {}, context = {}) {\n    conditions = foundry.utils.deepClone(conditions);\n\n    // Backgrounds compatibility\n    for (const key of Object.keys(conditions)) {\n      const newKey = this._deprecatePF1PrefixConditions(key);\n      if (newKey !== key) {\n        conditions[newKey] = conditions[key];\n        delete conditions[key];\n      }\n    }\n\n    // Handle Condition tracks\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const conditionGroup of tracks) {\n      const newTrackState = conditionGroup.find((c) => conditions[c] === true);\n      if (!newTrackState) continue;\n      const disableTrackEntries = conditionGroup.filter((c) => c !== newTrackState);\n      for (const key of disableTrackEntries) {\n        conditions[key] = false;\n      }\n    }\n\n    // Create update data\n    const toDelete = [],\n      toCreate = [];\n\n    const immunities = this.getConditionImmunities();\n\n    for (const [conditionId, value] of Object.entries(conditions)) {\n      const currentCondition = pf1.registry.conditions.get(conditionId);\n      if (currentCondition === undefined) {\n        console.error(\"Unrecognized condition:\", conditionId);\n        delete conditions[conditionId];\n        continue;\n      }\n\n      if (value === true && immunities.has(conditionId)) {\n        console.warn(\"Actor is immune to condition:\", conditionId, this);\n        delete conditions[conditionId];\n        continue;\n      }\n\n      const oldAe = this.hasCondition(conditionId) ? this.effects.find((ae) => ae.statuses.has(conditionId)) : null;\n\n      // Create\n      if (value) {\n        if (!oldAe) {\n          const aeData = {\n            flags: {\n              pf1: {\n                autoDelete: true,\n              },\n            },\n            statuses: [conditionId],\n            name: currentCondition.name,\n            icon: currentCondition.texture,\n            label: currentCondition.name,\n          };\n\n          // Special boolean for easy overlay\n          if (value?.overlay) {\n            delete value.overlay;\n            foundry.utils.setProperty(aeData.flags, \"core.overlay\", true);\n          }\n\n          if (typeof value !== \"boolean\") {\n            foundry.utils.mergeObject(aeData, value);\n          }\n\n          toCreate.push(aeData);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n      // Delete\n      else {\n        if (oldAe) {\n          toDelete.push(oldAe.id);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n    }\n\n    // Perform updates\n    // Inform update handlers they don't need to do work\n    context.pf1 ??= {};\n    context.pf1.updateConditionTracks = false;\n\n    if (toDelete.length) {\n      const deleteContext = foundry.utils.deepClone(context);\n      // Prevent double render\n      if (context.trender && toCreate.length) deleteContext.render = false;\n      // Without await the deletions may not happen at all, presumably due to race condition, if AEs are also created.\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", toDelete, context);\n    }\n    if (toCreate.length) {\n      const createContext = foundry.utils.deepClone(context);\n      await this.createEmbeddedDocuments(\"ActiveEffect\", toCreate, context);\n    }\n\n    this._conditionToggleNotify(conditions);\n\n    return conditions;\n  }\n\n  /**\n   * Easy way to determine whether this actor has a condition.\n   *\n   * @example\n   * actor.hasCondition(\"grappled\");\n   *\n   * @param {string} conditionId - A direct condition key, as per pf1.registry.conditions, such as `shaken` or `dazed`.\n   * @returns {boolean} Condition state\n   */\n  hasCondition(conditionId) {\n    conditionId = this._deprecatePF1PrefixConditions(conditionId);\n    return this.statuses.has(conditionId);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Helper function for actor energy resistance and damage reduction feedback.\n   *\n   * @protected\n   * @param {string} damage Value to check resistances for. Either \"dr\" or \"eres\".\n   * @returns {object} Entry to label mapping of resistances or reductions.\n   */\n  parseResistances(damage) {\n    const format = (amount, type, operator, type2) => {\n      let translatedType = type;\n      if (type2) {\n        switch (operator) {\n          case false: {\n            // Combine with AND\n            translatedType = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedAnd\", {\n              type1: type,\n              type2: type2,\n            });\n            break;\n          }\n          default:\n          case true: {\n            // Combine with OR\n            translatedType = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedOr\", {\n              type1: type,\n              type2: type2,\n            });\n            break;\n          }\n        }\n      }\n\n      return damage === \"dr\" ? `${amount}/${translatedType}` : `${translatedType} ${amount}`;\n    };\n\n    const damages = this.system.traits[damage];\n    const resistances = {};\n    damages.value.forEach((entry, counter) => {\n      const { amount, operator } = entry;\n      const type1 =\n        pf1.registry.damageTypes.get(entry.types[0])?.name ??\n        pf1.registry.materialTypes.get(entry.types[0])?.shortName ??\n        pf1.registry.materialTypes.get(entry.types[0])?.name ??\n        pf1.config.damageResistances[entry.types[0]] ??\n        \"-\";\n      const type2 =\n        pf1.registry.damageTypes.get(entry.types[1])?.name ??\n        pf1.registry.materialTypes.get(entry.types[1])?.shortName ??\n        pf1.registry.materialTypes.get(entry.types[1])?.name ??\n        pf1.config.damageResistances[entry.types[1]] ??\n        \"\";\n\n      resistances[`${counter + 1}`] = format(amount, type1, operator, type2);\n    });\n\n    if (damages.custom.length) {\n      damages.custom.split(pf1.config.re.traitSeparator).forEach((entry, counter) => {\n        const re = /(?<value>\\d+)/.exec(entry);\n        const amount = parseInt(re?.groups.value || \"0\");\n        const type = entry.replace(/\\d+\\s*\\/?/, \"\").trim();\n\n        resistances[`custom${counter + 1}`] = format(amount, type, null, \"\");\n      });\n    }\n\n    return resistances;\n  }\n\n  /**\n   * Wrapper for the static function, taking this actor as the only target.\n   *\n   * @see {@link ActorPF.applyDamage}\n   *\n   * @example\n   * await actor.applyDamage(10); // Cause 10 damage\n   * await actor.applyDamage(-10): // Heal 10 damage\n   * await actor.applyDamage(3, { asWounds: true }); // Apply 3 damage directly to Wounds instead of Vigor\n   *\n   * @param {number} value Value to adjust health by.\n   * @param {object} options Additional options.\n   */\n  async applyDamage(value, options = {}) {\n    return this.constructor.applyDamage(\n      value,\n      foundry.utils.mergeObject(options, {\n        targets: [this],\n      })\n    );\n  }\n\n  /**\n   * Apply rolled dice damage to the token or tokens which are currently controlled.\n   * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\n   * If Shift is held, will prompt for adjustments based on damage reduction and energy resistances\n   *\n   * @param {number} value - The amount of damage to deal.\n   * @param {object} [options] - Object containing default settings for overriding\n   * @param {boolean} [options.forceDialog=true] - Forces the opening of a Dialog as if Shift was pressed\n   * @param {string} [options.reductionDefault] - Default value for Damage Reduction\n   * @param {boolean} [options.asNonlethal] - Marks the damage as non-lethal\n   * @param {Array.<Token|Actor>} [options.targets=null] - Override the targets to apply damage to\n   * @param {number} [options.critMult=0] - Critical multiplier as needed for Wounds & Vigor variant health rule. Set to 0 for non-critical hits.\n   * @param {boolean} [options.asWounds=false] - Apply damage to wounds directly instead of vigor, as needed for Wounds & Vigor variant health rule.\n   * @param {Event} [options.event] - Triggering event, if any\n   * @param {Element} [options.element] - Triggering element, if any.\n   * @param {ChatMessage} [options.message] - Chat message reference if any. This is to help modules, the system does not use it.\n   * @param {DamageInstance[]} [options.instances] - Individual instances of damage. This is not processed currently.\n   * @param {boolean} [options.dualHeal] - Is this dual dealing? If enabled, healing affects both normal health and nonlethal.\n   * @returns {Promise<false|Actor[]>} - False if cancelled or array of updated actors.\n   */\n  static async applyDamage(\n    value = 0,\n    {\n      forceDialog = false,\n      reductionDefault = \"\",\n      asNonlethal = false,\n      targets = null,\n      critMult = 0,\n      dualHeal = false,\n      asWounds = false,\n      instances = [],\n      event,\n      element,\n      message = null,\n    } = {}\n  ) {\n    if (value == 0 || !Number.isFinite(value)) return void console.warn(\"Attempting to apply 0 damage.\");\n\n    const isHealing = value < 0;\n\n    const promises = [];\n    let controlled = canvas.tokens.controlled,\n      healingInvert = 1;\n\n    // Override targets, if supplied\n    if (targets instanceof Array) {\n      controlled = targets.filter((o) => o instanceof Token || o instanceof Actor);\n    }\n\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n    const numReg = /(\\d+)/g,\n      sliceReg = /[^,;\\n]+/g;\n\n    const _submit = async function (form, multiplier) {\n      if (form) {\n        value = form.find('[name=\"damage\"]').val();\n        let dR = form.find('[name=\"damage-reduction\"]').val();\n        value = value.length ? RollPF.safeRollSync(value).total : 0;\n        dR = dR.length ? RollPF.safeRollSync(dR).total : 0;\n        if (multiplier < 0) {\n          value = Math.ceil(value * multiplier);\n          value = Math.min(value - dR, 0);\n        } else {\n          value = Math.floor(value * (multiplier ?? 1));\n          value = Math.max(value - dR, 0);\n        }\n        const checked = [...form.find(\".tokenAffected:checked\")].map((tok) => tok.name.replace(\"affect.\", \"\"));\n        controlled = controlled.filter((con) => checked.includes(con.id));\n      }\n\n      if (value == 0) return void console.warn(\"Attempting to apply 0 damage.\"); // Early exit\n\n      for (const t of controlled) {\n        const a = t instanceof Token ? t.actor : t;\n\n        if (!a.isOwner) {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n          continue;\n        }\n\n        const actorType = { character: \"pc\", npc: \"npc\" }[a.type];\n        const useWoundsAndVigor = healthConfig.variants[actorType]?.useWoundsAndVigor ?? false,\n          hp = !useWoundsAndVigor ? a.system.attributes.hp : a.system.attributes.vigor,\n          tmp = hp.temp || 0;\n\n        const updateData = {};\n\n        if (useWoundsAndVigor) {\n          const currentHealth = hp.value;\n          let woundAdjust = 0;\n\n          if (asWounds) {\n            woundAdjust -= value;\n            value = 0;\n          }\n\n          // Temp HP adjustment\n          const dt = value > 0 ? Math.min(tmp, value) : 0;\n          value -= dt;\n\n          // Nonlethal damage\n          if (asNonlethal && value > 0) {\n            if (currentHealth > 0) {\n              value = Math.min(currentHealth, value);\n            } else {\n              woundAdjust -= critMult > 1 ? critMult : 1;\n              value = 0; // No other bleedover to wounds\n            }\n          }\n\n          // Create update data\n          if (dt != 0) updateData[\"system.attributes.vigor.temp\"] = tmp - dt;\n          if (value != 0) {\n            let newHP = Math.min(currentHealth - value, hp.max);\n            if (value > 0) {\n              if (newHP < 0) {\n                woundAdjust -= -newHP;\n                if (critMult > 0) woundAdjust -= critMult;\n                newHP = 0;\n              }\n            }\n\n            if (newHP != hp.value) updateData[\"system.attributes.vigor.value\"] = newHP;\n          }\n\n          if (woundAdjust != 0) {\n            const wounds = a.system.attributes.wounds;\n            updateData[\"system.attributes.wounds.value\"] = Math.clamped(wounds.value + woundAdjust, 0, wounds.max);\n          }\n        }\n        // Normal Hit Points\n        else {\n          // Nonlethal damage\n          let nld = 0;\n          if (asNonlethal) {\n            if (value > 0) {\n              nld = Math.min(hp.max - hp.nonlethal, value);\n              value -= nld;\n            }\n            // Nonlethal healing\n            else if (value < 0) {\n              nld = value;\n              value = 0;\n            }\n          }\n          // Dual healing heals also nonlethal\n          else if (isHealing && dualHeal) {\n            nld = value;\n          }\n\n          // Temp HP adjustment\n          const dt = value > 0 ? Math.min(tmp, value) : 0;\n\n          // Create update data\n          if (nld != 0) updateData[\"system.attributes.hp.nonlethal\"] = Math.max(0, hp.nonlethal + nld);\n          if (dt != 0) updateData[\"system.attributes.hp.temp\"] = tmp - dt;\n          const newHp = Math.min(hp.value - (value - dt), hp.max);\n          if (newHp != hp.value) updateData[\"system.attributes.hp.value\"] = newHp;\n        }\n\n        promises.push(a.update(updateData));\n      }\n      return Promise.all(promises);\n    };\n\n    if (pf1.skipConfirmPrompt ? !forceDialog : forceDialog) {\n      if (isHealing) {\n        healingInvert = -1;\n        value = -1 * value;\n      }\n\n      const tokens = controlled.map((tok) => {\n        const isToken = tok instanceof Token;\n        const actor = isToken ? tok.actor : tok;\n\n        return {\n          _id: isToken ? tok.id : actor.id,\n          name: isToken ? tok.name : actor.name,\n          isToken,\n          dr: Object.values(actor.parseResistances(\"dr\")),\n          eres: Object.values(actor.parseResistances(\"eres\")),\n          hardness: actor.system.traits.hardness,\n          di: [...actor.system.traits.di.value, ...(actor.system.traits.di.custom || [])],\n          dv: [...actor.system.traits.dv.value, ...(actor.system.traits.dv.custom || [])],\n          checked: true,\n        };\n      });\n\n      // Dialog configuration and callbacks\n      const template = \"systems/pf1/templates/apps/damage-dialog.hbs\";\n\n      const dialogData = {\n        damage: value,\n        healing: healingInvert == -1 ? true : false,\n        damageReduction: reductionDefault,\n        tokens,\n        nonlethal: asNonlethal,\n        asWounds,\n        critMult,\n        instances,\n      };\n\n      const content = await renderTemplate(template, dialogData);\n\n      return Dialog.wait(\n        {\n          title: healingInvert > 0 ? game.i18n.localize(\"PF1.ApplyDamage\") : game.i18n.localize(\"PF1.ApplyHealing\"),\n          content,\n          buttons: {\n            normal: {\n              label: game.i18n.localize(\"PF1.Apply\"),\n              callback: (html) => _submit.call(this, html, 1 * healingInvert),\n            },\n            half: {\n              label: game.i18n.localize(\"PF1.ApplyHalf\"),\n              callback: (html) => _submit.call(this, html, 0.5 * healingInvert),\n            },\n          },\n          default: \"normal\",\n          close: (html) => false,\n          render: (inp) => {\n            function swapSelected() {\n              const checked = [...inp[0].querySelectorAll('.selected-tokens input[type=\"checkbox\"]')];\n              checked.forEach((chk) => (chk.checked = !chk.checked));\n            }\n            /**\n             * @param {Element} e\n             */\n            function setReduction(e) {\n              inp[0].querySelector('input[name=\"damage-reduction\"]').value =\n                e.currentTarget.innerText.match(numReg) ?? \"\";\n            }\n            /**\n             * @param {WheelEvent} event\n             */\n            function mouseWheelAdd(event) {\n              const el = event.currentTarget;\n\n              //Digits with optional sign only\n              if (/[^\\d+-]|(?:\\d[+-])/.test(el.value.trim())) return;\n\n              const value = parseFloat(el.value) || 0;\n              const increase = -Math.sign(event.originalEvent.deltaY);\n\n              el.value = (value + increase).toString();\n            }\n\n            inp.on(\"click\", 'a[name=\"swap-selected\"]', swapSelected);\n            inp.on(\"click\", 'a[name=\"clear-reduction\"], p.notes a', setReduction);\n            inp.on(\"wheel\", \"input\", mouseWheelAdd);\n          },\n        },\n        {\n          classes: [...Dialog.defaultOptions.classes, \"pf1\", \"apply-hit-points\"],\n        },\n        {\n          focus: true,\n        }\n      );\n    } else return _submit();\n  }\n\n  /**\n   * Adjust temporary hit points.\n   *\n   * @example\n   * ```js\n   * actor.addTempHP(50); // Gain 50 THP\n   * actor.addTempHP(-10); // Lose 10 THP\n   * actor.addTempHP(0, {set:true}); // Set THP to zero\n   * ```\n   *\n   * @param {number} value - Value to add to temp HP\n   * @param {object} [options] - Additonal optons\n   * @param {boolean} [options.set] - If true, the temporary hit points are set to the provide value instead of added to existing.\n   * @returns {Promise<this|undefined>} - Updated document or undefined if no update occurred\n   */\n  async addTempHP(value, { set = false } = {}) {\n    const hpconf = game.settings.get(\"pf1\", \"healthConfig\").variants;\n    const variant = this.type === \"npc\" ? hpconf.npc : hpconf.pc;\n    const vigor = variant.useWoundsAndVigor;\n\n    const curTHP = (vigor ? this.system.attributes.vigor.temp : this.system.attributes.hp.temp) || 0;\n    const newTHP = Math.max(0, !set ? curTHP + value : value);\n\n    return this.update({ system: { attributes: { [vigor ? \"vigor\" : \"hp\"]: { temp: newTHP } } } });\n  }\n\n  /**\n   * Returns effective Wound Threshold multiplier with rules and overrides applied.\n   *\n   * @protected\n   * @param {object} [options]\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {number} Multiplier\n   */\n  getWoundThresholdMultiplier({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").variants[this.type === \"npc\" ? \"npc\" : \"pc\"];\n\n    const wt = this.system.attributes?.woundThresholds ?? {};\n    const override = wt.override ?? -1;\n    return override >= 0 && healthConfig.allowWoundThresholdOverride ? override : healthConfig.useWoundThresholds;\n  }\n\n  /**\n   * Returns Wound Threshold relevant data.\n   *\n   * @protected\n   * @param {object} [options]\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {{level:number,penalty:number,multiplier:number,valid:boolean}}\n   */\n  getWoundThresholdData({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").variants[this.type === \"npc\" ? \"npc\" : \"pc\"];\n\n    const wt = this.system.attributes?.woundThresholds ?? {};\n\n    const woundMult = this.getWoundThresholdMultiplier({ healthConfig }),\n      woundLevel = wt.level || 0,\n      woundPenalty = woundLevel * woundMult + (wt.mod || 0);\n\n    return {\n      level: woundLevel,\n      penalty: woundPenalty,\n      multiplier: woundMult,\n      valid: woundLevel > 0 && woundMult > 0,\n    };\n  }\n\n  /**\n   * Updates attributes.woundThresholds.level variable.\n   *\n   * @protected\n   */\n  updateWoundThreshold() {\n    const hpconf = game.settings.get(\"pf1\", \"healthConfig\").variants;\n    const variant = this.type === \"npc\" ? hpconf.npc : hpconf.pc;\n    const usage = variant.useWoundThresholds;\n    const vigor = variant.useWoundsAndVigor;\n    const wt = this.system.attributes.woundThresholds;\n    // Null if WT is not in use, or it is combined with Wounds & Vigor\n    if (!usage || vigor) {\n      wt.level = 0;\n      wt.penaltyBase = 0;\n      wt.penalty = 0;\n      wt.mod = 0;\n      return;\n    }\n    const hp = this.system.attributes.hp,\n      curHP = hp.value,\n      tempHP = hp.temp ?? 0,\n      maxHP = hp.max;\n\n    let level = usage > 0 ? Math.clamped(4 - Math.ceil(((curHP + tempHP) / maxHP) * 4), 0, 3) : 0;\n    if (Number.isNaN(level)) level = 0; // Division by 0 due to max HP on new actors.\n\n    const wtMult = this.getWoundThresholdMultiplier({ healthConfig: variant });\n    const wtMod = wt.mod ?? 0;\n\n    wt.level = level;\n    wt.penaltyBase = level * wtMult; // To aid relevant formulas\n    wt.penalty = level * wtMult + wtMod;\n\n    const penalty = wt.penalty;\n    // TODO: Convert to changes\n    if (penalty != 0) {\n      const changeFlatKeys = pf1.config.woundThresholdChangeTargets;\n      for (const fk of changeFlatKeys) {\n        const flats = getChangeFlat.call(this, fk, \"untyped\", -penalty);\n        for (const k of flats) {\n          if (!k) continue;\n          const curValue = foundry.utils.getProperty(this, k) ?? 0;\n          foundry.utils.setProperty(this, k, curValue - penalty);\n        }\n      }\n\n      // Soft add change for attacks\n      const ch = new pf1.components.ItemChange({\n        _id: \"woundThreshold\",\n        formula: `-${penalty}`,\n        flavor: pf1.config.woundThresholdConditions[wt.level],\n        target: \"attack\",\n        type: \"untyped\",\n        value: -penalty,\n      });\n      this.changes.set(ch.id, ch);\n    } else {\n      this.changes.delete(\"woundThreshold\");\n    }\n  }\n\n  /**\n   * @type {Array<string>} - Array of all skill IDs relevant to this actor.\n   */\n  get allSkills() {\n    const result = [];\n    for (const [key, skillData] of Object.entries(this.system.skills)) {\n      if (!skillData) continue;\n      result.push(key);\n      for (const subKey of Object.keys(skillData.subSkills ?? {})) {\n        result.push(`${key}.${subKey}`);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An array of all context note data for this actor.\n   *\n   * @type {{notes: Array<pf1.components.ContextNote>, item: ItemPF}[]}\n   */\n  get allNotes() {\n    return this.items\n      .filter((item) => item.isActive && item.system.contextNotes?.length > 0)\n      .map((item) => ({ notes: item.system.contextNotes, item }));\n  }\n\n  /**\n   * @returns {ItemPF[]} All items on this actor, including those in containers.\n   */\n  get allItems() {\n    return [...this.containerItems, ...Array.from(this.items)];\n  }\n\n  /**\n   * Generates an array with all the active context-sensitive notes for the given context on this actor.\n   *\n   * @param {string|Handlebars.SafeString} context - The context to draw from.\n   * @param {boolean} [all=true] - Retrieve notes meant for all.\n   */\n  getContextNotes(context, all = true) {\n    if (context.string) context = context.string;\n    const result = this.allNotes;\n\n    // Attacks\n    if (context.match(/^attacks\\.(.+)/)) {\n      const key = RegExp.$1;\n      for (const note of result) {\n        note.notes = note.notes.filter((o) => o.target === key).map((o) => o.text);\n      }\n\n      return result;\n    }\n\n    // Skill\n    if (context.match(/^skill\\.(.+)/)) {\n      const skillKey = RegExp.$1;\n      const skill = this.getSkillInfo(skillKey);\n      const ability = skill.ability;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes\n          .filter((n) => [context, `${ability}Skills`].includes(n.target) || (all && n.target === \"skills\"))\n          .map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    // Saving throws\n    if (context.match(/^savingThrow\\.(.+)/)) {\n      const saveKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes\n          .filter((n) => [saveKey, \"allSavingThrows\"].includes(n.target))\n          .map((n) => n.text);\n      }\n\n      if (this.system.attributes.saveNotes != null && this.system.attributes.saveNotes !== \"\") {\n        result.push({ notes: [this.system.attributes.saveNotes], item: null });\n      }\n\n      return result;\n    }\n\n    // Ability checks\n    if (context.match(/^abilityChecks\\.(.+)/)) {\n      const ablKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes\n          .filter((n) => [`${ablKey}Checks`, \"allChecks\"].includes(n.target))\n          .map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    // Misc\n    if (context.match(/^misc\\.(.+)/)) {\n      const miscKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === miscKey).map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    if (context.match(/^spell\\.concentration\\.([a-z]+)$/)) {\n      const bookId = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === \"concentration\").map((n) => n.text);\n      }\n\n      const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[bookId]?.concentrationNotes;\n      if (spellbookNotes?.length) {\n        result.push({ notes: spellbookNotes.split(/[\\n\\r]+/), item: null });\n      }\n\n      return result;\n    }\n\n    if (context.match(/^spell\\.cl\\.([a-z]+)$/)) {\n      const bookId = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === \"cl\").map((n) => n.text);\n      }\n\n      const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[bookId]?.clNotes;\n      if (spellbookNotes?.length) {\n        result.push({ notes: spellbookNotes.split(/[\\n\\r]+/), item: null });\n      }\n\n      return result;\n    }\n\n    if (context.match(/^spell\\.effect$/)) {\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === \"spellEffect\").map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    // Otherwise return notes if they directly match context\n    for (const note of result) {\n      note.notes = note.notes.filter((o) => o.target === context).map((o) => o.text);\n    }\n\n    return result.filter((n) => n.notes.length);\n  }\n\n  /**\n   * Returns a list of already parsed context notes.\n   *\n   * @param {string} context - The context to draw notes from.\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.roll=true] Whether to roll inline rolls or not.\n   * @returns {string[]} The resulting notes, already parsed.\n   */\n  getContextNotesParsed(context, { roll = true } = {}) {\n    const noteObjects = this.getContextNotes(context);\n\n    return noteObjects.reduce((cur, o) => {\n      for (const note of o.notes) {\n        const enrichOptions = {\n          rollData: o.item != null ? o.item.getRollData() : this.getRollData(),\n          rolls: roll,\n          async: false,\n          relativeTo: this,\n        };\n        cur.push(enrichHTMLUnrolled(note, enrichOptions));\n      }\n\n      return cur;\n    }, []);\n  }\n\n  /**\n   * @param notes\n   * @param rollData\n   * @param root0\n   * @param root0.roll\n   * @returns {Array<string>}\n   */\n  formatContextNotes(notes, rollData, { roll = true } = {}) {\n    const result = [];\n    rollData ??= this.getRollData();\n    for (const noteObj of notes) {\n      rollData.item = {};\n      if (noteObj.item != null) rollData = noteObj.item.getRollData();\n\n      for (const note of noteObj.notes) {\n        result.push(\n          ...note\n            .split(/[\\n\\r]+/)\n            .map((subnote) => enrichHTMLUnrolled(subnote, { rollData, rolls: roll, relativeTo: this }))\n        );\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @typedef {object} MobilityPenaltyResult\n   * @property {number|null} maxDexBonus - The maximum dexterity bonus allowed for this result.\n   * @property {number} acp - The armor check penalty of this result.\n   */\n\n  /**\n   * Computes encumbrance values for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from encumbrance.\n   */\n  _computeEncumbrance() {\n    // Init base data\n    this.system.attributes ??= {};\n    const attributes = this.system.attributes;\n    attributes.encumbrance ??= {};\n    const encumbrance = attributes.encumbrance;\n\n    const carry = this.getCarryCapacity();\n    // Set levels\n    encumbrance.levels = carry;\n    encumbrance.levels.carry = carry.heavy * 2;\n    encumbrance.levels.drag = carry.heavy * 5;\n\n    const carriedWeight = Math.max(0, this.getCarriedWeight());\n    encumbrance.carriedWeight = Math.round(carriedWeight * 10) / 10;\n\n    // Determine load level\n    let encLevel = pf1.config.encumbranceLevels.light;\n    if (carriedWeight > 0) {\n      if (carriedWeight > encumbrance.levels.medium) encLevel = pf1.config.encumbranceLevels.heavy;\n      else if (carriedWeight > encumbrance.levels.light) encLevel = pf1.config.encumbranceLevels.medium;\n    }\n    encumbrance.level = encLevel;\n\n    const result = {\n      maxDexBonus: null,\n      acp: 0,\n    };\n\n    switch (encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium:\n        result.acp = 3;\n        result.maxDexBonus = 3;\n        break;\n      case pf1.config.encumbranceLevels.heavy:\n        result.acp = 6;\n        result.maxDexBonus = 1;\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * @internal\n   * @returns {number} - Total coin weight in lbs\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /**\n   * Calculate current carry capacity limits.\n   *\n   * @returns {{light:number,medium:number,heavy:number}}\n   */\n  getCarryCapacity() {\n    // Determine carrying capacity\n    const carryCapacity = this.system.details?.carryCapacity ?? {};\n    const carryStr = this.system.abilities.str.total + carryCapacity.bonus?.total;\n    let carryMultiplier = carryCapacity.multiplier?.total;\n    const size = this.system.traits.size;\n    if (this.system.attributes.quadruped) carryMultiplier *= pf1.config.encumbranceMultipliers.quadruped[size];\n    else carryMultiplier *= pf1.config.encumbranceMultipliers.normal[size];\n    const table = pf1.config.encumbranceLoads;\n\n    let heavy = Math.floor(table[carryStr] * carryMultiplier);\n    if (carryStr >= table.length) {\n      const multiplierCount = (carryStr - (table.length - 1)) / 10;\n      heavy = Math.floor(table[table.length - 1] * Math.pow(4, multiplierCount) * carryMultiplier);\n    }\n    // Convert to world unit system\n    heavy = pf1.utils.convertWeight(heavy);\n\n    return {\n      light: Math.floor(heavy / 3),\n      medium: Math.floor((heavy / 3) * 2),\n      heavy: heavy,\n    };\n  }\n\n  /**\n   * Determines carried weight.\n   *\n   * @returns {number} - kg or lbs of all carried things, including currency\n   */\n  getCarriedWeight() {\n    const weight = this.items\n      .filter((i) => i.isPhysical && i.system.carried !== false)\n      .reduce((cur, o) => cur + o.system.weight.total, this._calculateCoinWeight());\n\n    return pf1.utils.convertWeight(weight);\n  }\n\n  /**\n   * Total coinage in both weighted and weightless.\n   *\n   * @deprecated Use {@link ActorPF.getTotalMergedCurrency} instead.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=false] - Use copper for calculations and return.\n   * @returns {number} - The total amount of currency, in gold pieces.\n   */\n  mergeCurrency({ inLowestDenomination = false } = {}) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.mergeCurrency() is deprecated in favor of ActorPF.getTotalCurrency()\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return this.getTotalCurrency({ inLowestDenomination }, { v2: true });\n  }\n\n  /**\n   * Get total currency in category.\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Return result in lowest denomination. If false, returns gold instead.\n   * @returns {number} - Total currency in category.\n   */\n  getCurrency(category = \"currency\", { inLowestDenomination = true } = {}) {\n    const currencies = this.system[category];\n    if (!currencies) {\n      console.error(`Currency type \"${category}\" not found.`);\n      return NaN;\n    }\n    const total = currencies.pp * 1000 + currencies.gp * 100 + currencies.sp * 10 + currencies.cp;\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Total coinage in both weighted and weightless.\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Use copper for calculations and return.\n   * @param {object} [deprecated] - Deprecated options\n   * @returns {number} - The total amount of currency, in copper pieces.\n   */\n  getTotalCurrency(options, deprecated) {\n    if (typeof options === \"string\" || options === undefined) {\n      foundry.utils.logCompatibilityWarning(\n        \"ActorPF.getTotalCurrency() parameters changed. Options are now the first and only parameter. Old behaviour is found in getCurrency()\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n\n      return this.getCurrency(options, deprecated);\n    }\n\n    options ??= {};\n    options.inLowestDenomination ??= true;\n\n    const total =\n      this.getCurrency(\"currency\", { inLowestDenomination: true }) +\n      this.getCurrency(\"altCurrency\", { inLowestDenomination: true });\n    return options.inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Converts currencies of the given category to the given currency type\n   *\n   * @see {@link pf1.utils.currency.convert}\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category, altCurrency is for weightless\n   * @param {CoinType} [type=\"pp\"] - Target currency.\n   * @returns {Promise<this>|undefined} Updated document or undefined if no update occurred.\n   */\n  convertCurrency(category = \"currency\", type = \"pp\") {\n    const cp = this.getCurrency(category, { inLowestDenomination: true });\n    if (!Number.isFinite(cp)) {\n      console.error(`Invalid total currency \"${cp}\" in \"${category}\" category`);\n      return;\n    }\n\n    const currency = pf1.utils.currency.convert(cp, type, { pad: true });\n\n    return this.update({ system: { [category]: currency } });\n  }\n\n  /**\n   * Prepare armor/shield data for roll data\n   *\n   * @internal\n   * @param {object} equipment Equipment info\n   * @param {string} equipment.id Item ID\n   * @param {string} equipment.type Armor/Shield type\n   * @param {object} armorData Armor data object\n   */\n  _prepareArmorData({ id, type } = {}, armorData) {\n    armorData.type = type ?? null;\n\n    const itemData = this.items.get(id)?.system;\n    if (!itemData) return;\n\n    armorData.ac = itemData.armor.value ?? 0;\n    armorData.enh = itemData.armor.enh ?? 0;\n    armorData.total = armorData.ac + armorData.enh;\n    if (!Number.isFinite(armorData.total)) armorData.total = 0;\n  }\n\n  /**\n   * Retrieve data used to fill in roll variables.\n   *\n   * @example\n   * await new Roll(\"1d20 + \\@abilities.wis.mod[Wis]\", actor.getRollData()).toMessage();\n   *\n   * @override\n   * @param {object} [options] - Additional options\n   * @returns {object}\n   */\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    pf1.utils.rollData.addStatic(result);\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Add denied Dex to AC\n    result.conditions ??= {};\n    result.conditions.loseDexToAC = this.changeFlags?.loseDexToAC ?? false;\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Sync health values\n    for (const hpKey of [\"hp\", \"wounds\", \"vigor\"]) {\n      const hp = result.attributes[hpKey];\n      hp.value = hp.max + hp.offset;\n      /*\n      // Supporting values\n      const thp = hp.temp ?? 0;\n      hp.effective = hp.value + thp;\n      hp.ratio = hp.effective / (hp.max + thp);\n      */\n    }\n\n    // Set size index\n    const sizeChart = Object.keys(pf1.config.sizeChart);\n    result.size = sizeChart.indexOf(result.traits.size);\n\n    // Add more info for formulas\n    result.armor = { type: 0, total: 0, ac: 0, enh: 0 };\n    result.shield = { type: 0, total: 0, ac: 0, enh: 0 };\n\n    // Determine equipped armor type\n    const eqData = this.equipment;\n    if (eqData) {\n      this._prepareArmorData(eqData.armor, result.armor);\n      this._prepareArmorData(eqData.shield, result.shield);\n    }\n\n    // Add spellbook info\n    result.spells = result.attributes.spells.spellbooks;\n    for (const [k, book] of Object.entries(result.spells)) {\n      book.abilityMod = result.abilities[book.ability]?.mod ?? 0;\n      // Add alias\n      if (book.class && book.class !== \"_hd\") result.spells[book.class] ??= book;\n    }\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n    result.bFlags = Object.fromEntries(\n      Object.entries(this.itemFlags?.boolean ?? {}).map(([key, { sources }]) => [key, sources.length > 0 ? 1 : 0])\n    );\n\n    result.range = this.system.traits?.reach?.total ?? { melee: NaN, reach: NaN };\n\n    // Add class info\n    result.classes = this.classes;\n    const negLevels = result.attributes.energyDrain ?? 0;\n    if (negLevels > 0 && result.classes) {\n      for (const cls of Object.values(result.classes)) {\n        if (cls.isMythic) continue;\n        cls.level = Math.max(0, cls.unlevel - negLevels);\n      }\n    }\n\n    // Map HP ability\n    const hpAbility = result.abilities[result.attributes.hpAbility];\n    Object.defineProperty(result.attributes, \"hpAbility\", {\n      get() {\n        return hpAbility;\n      },\n    });\n\n    // @since PF1 v10\n    result.alignment = pf1.utils.parseAlignment(this.system.details?.alignment || \"tn\");\n\n    this._rollData = result;\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Get melee and reach maximum ranges.\n   *\n   * @param {ActorSize|number} size - Actor size as size key or number\n   * @param {ActorStature} stature - Actor stature\n   * @returns {{melee:number,reach:number}} - Ranges\n   */\n  static getReach(size = \"med\", stature = \"tall\") {\n    let effectiveSize = size >= 0 ? size : Object.keys(pf1.config.sizeChart).indexOf(size);\n    // Long creatures larger than medium count as one size smaller\n    // https://www.aonprd.com/Rules.aspx?ID=179\n    if (stature !== \"tall\" && effectiveSize > 4) effectiveSize -= 1;\n\n    const reachStruct = (melee, reach) => ({ melee, reach });\n\n    switch (effectiveSize) {\n      case 0: // Fine\n      case 1: // Diminutive\n        return reachStruct(0, 0);\n      case 2: // Tiny\n        return reachStruct(0, 5);\n      default:\n      case 3: // Small\n      case 4: // Medium\n        return reachStruct(5, 10);\n      case 5: // Large\n        return reachStruct(10, 20);\n      case 6: // Huge\n        return reachStruct(15, 30);\n      case 7: // Gargantuan\n        return reachStruct(20, 40);\n      case 8: // Colossal\n        return reachStruct(30, 60);\n    }\n  }\n\n  /**\n   * @protected\n   * @returns\n   */\n  getQuickActions() {\n    return this.items\n      .filter((o) => o.isActive && o.system.showInQuickbar === true && o.showUnidentifiedData !== true)\n      .sort((a, b) => a.sort - b.sort)\n      .map((item) => {\n        const qi = {\n          item,\n          name: item.name,\n          id: item.id,\n          type: item.type,\n          img: item.img,\n          get isSingleUse() {\n            return item.isSingleUse;\n          },\n          get haveAnyCharges() {\n            return this.item.isCharged && Number.isFinite(this.maxCharge);\n          },\n          get maxCharge() {\n            return item.maxCharges;\n          },\n          get charges() {\n            return this.item.charges;\n          },\n        };\n\n        // Fill in charge details\n        qi.isCharged = qi.haveAnyCharges;\n        if (qi.isCharged) {\n          let chargeCost = item.defaultAction?.getChargeCost() ?? item.getDefaultChargeCost();\n          if (chargeCost == 0) qi.isCharged = false;\n\n          qi.recharging = chargeCost < 0;\n          chargeCost = Math.abs(chargeCost);\n\n          if (chargeCost != 0) {\n            qi.max = qi.maxCharge;\n            qi.uses = qi.charges;\n\n            // Maximum charging\n            if (qi.recharging) {\n              qi.uses = Math.ceil((qi.max - qi.uses) / chargeCost);\n              qi.max = Math.ceil(qi.max / chargeCost);\n            }\n            // Actual uses\n            else {\n              qi.uses = Math.floor(qi.uses / chargeCost);\n              qi.max = Math.floor(qi.max / chargeCost);\n            }\n          }\n        } else {\n          const action = item.defaultAction;\n          // Add fake charges for ammo using items\n          if (action?.ammoType) {\n            const ammo = item.defaultAmmo;\n            if (ammo) {\n              qi.isCharged = true;\n              qi.uses = ammo.system.quantity || 0;\n            }\n          }\n        }\n\n        return qi;\n      });\n  }\n\n  /**\n   * @internal\n   */\n  refreshAbilityModifiers() {\n    for (const k of Object.keys(this.system.abilities)) {\n      const total = this.system.abilities[k].total;\n      const penalty = Math.abs(this.system.abilities[k].penalty || 0);\n      const damage = this.system.abilities[k].damage;\n      const newMod = pf1.utils.getAbilityModifier(total, { penalty, damage });\n      this.system.abilities[k].mod = newMod;\n    }\n  }\n\n  /**\n   * Return feat counts.\n   *\n   * @typedef FeatCounts\n   * @type {object}\n   * @property {number} max - The maximum allowed feats.\n   * @property {number} active - The current number of active feats.\n   * @property {number} owned - The current number of feats, active or not.\n   * @property {number} levels - Feats gained by levels specifically\n   * @property {number} mythic - Mythic feats\n   * @property {number} formula - Feats gained by custom formula on the feats tab\n   * @property {number} changes - Feats gained via Changes\n   * @property {number} disabled - Disabled feats\n   * @property {number} excess - Feats over maximum allowed\n   * @property {number} missing - Feats under maximum allowed\n   * @returns {FeatCounts} An object with a property `value` which refers to the current used feats, and `max` which refers to the maximum available feats.\n   */\n  getFeatCount() {\n    const feats = this.itemTypes.feat.filter((o) => o.subType === \"feat\");\n\n    const active = feats.filter((o) => o.isActive).length;\n    const owned = feats.length;\n\n    const result = {\n      max: 0,\n      active,\n      owned,\n      disabled: owned - active,\n      levels: 0,\n      mythic: 0,\n      formula: 0,\n      changes: 0,\n      // Count totals\n      get discrepancy() {\n        return this.max - this.active;\n      },\n      get missing() {\n        return Math.max(0, this.discrepancy);\n      },\n      get excess() {\n        return Math.max(0, -this.discrepancy);\n      },\n    };\n\n    // Backwards compatibility\n    Object.defineProperty(result, \"value\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\"getFeatCount().value is deprecated in favor of getFeatCount().active\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n\n        return this.active;\n      },\n    });\n\n    const isMindless = this.system.abilities?.int?.value === null;\n\n    // Ignore classes for feats with mindless\n    // Mindless gets other bonuses to feats beyond these...\n    // ... since they can be explicit \"gains X feat\", homebrew, or other impossible to account for.\n    if (!isMindless) {\n      // Add feat count by level\n      result.levels = Math.ceil(this.system.attributes.hd.total / 2);\n      result.max += result.levels;\n\n      // Mythic feats\n      // https://aonprd.com/Rules.aspx?Name=Mythic%20Heroes&Category=Mythic%20Rules\n      // Gained at 1, 3, 5, etc.\n      result.mythic = Math.ceil(this.system.details.mythicTier / 2);\n      result.max += result.mythic;\n    }\n\n    // Bonus feat formula\n    const bonusRoll = RollPF.safeRollSync(this.system.details?.bonusFeatFormula || \"0\", this.getRollData());\n    result.formula = bonusRoll.total;\n    result.max += result.formula;\n    if (bonusRoll.err) {\n      console.error(\n        `An error occurred in the Bonus Feat Formula of actor \"${this.name}\" [${this.id}].`,\n        {\n          formula: this.system.details?.bonusFeatFormula,\n          actor: this,\n        },\n        bonusRoll.err\n      );\n    }\n\n    // Bonuses from changes\n    result.changes = getHighestChanges(\n      this.changes.filter((c) => {\n        if (c.target !== \"bonusFeats\") return false;\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).reduce((cur, c) => cur + c.value, 0);\n    result.max += result.changes;\n\n    return result;\n  }\n\n  /**\n   * Check if actor has item with specified boolean flag.\n   *\n   * @param {string} flagName - The name/key of the flag to search for.\n   * @returns {boolean} Whether this actor has any owned item with the given flag.\n   */\n  hasItemBooleanFlag(flagName) {\n    return this.itemFlags.boolean[flagName] != null;\n  }\n\n  /**\n   * Restore spellbook used slots and spellpoints.\n   *\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.commit=true] If false, return update data object instead of directly updating the actor.\n   * @param {object} [options.rollData] Roll data\n   * @returns {Promise<this|object>} Result of update or the update data.\n   */\n  async resetSpellbookUsage({ commit = true, rollData } = {}) {\n    const actorData = this.system;\n    const updateData = {};\n\n    rollData ??= this.getRollData();\n\n    // Update spellbooks\n    for (const [bookId, spellbook] of Object.entries(actorData.attributes.spells.spellbooks)) {\n      if (!spellbook.inUse) continue;\n\n      // Restore spellbooks using spell points\n      if (spellbook.spellPoints.useSystem) {\n        // Try to roll restoreFormula, fall back to restoring max spell points\n        let restorePoints = spellbook.spellPoints.max;\n        if (spellbook.spellPoints.restoreFormula) {\n          const restoreRoll = await RollPF.safeRollAsync(spellbook.spellPoints.restoreFormula, rollData);\n          if (restoreRoll.err) console.error(restoreRoll.err, spellbook.spellPoints.restoreFormula);\n          else restorePoints = Math.min(spellbook.spellPoints.value + restoreRoll.total, spellbook.spellPoints.max);\n        }\n        updateData[`system.attributes.spells.spellbooks.${bookId}.spellPoints.value`] = restorePoints;\n      }\n      // Restore spell slots\n      else {\n        for (let level = 0; level < 10; level++) {\n          updateData[`system.attributes.spells.spellbooks.${bookId}.spells.spell${level}.value`] =\n            spellbook.spells[`spell${level}`]?.max ?? 0;\n        }\n      }\n    }\n\n    if (commit) return this.update(updateData);\n    return updateData;\n  }\n\n  /**\n   * Recharge all owned items.\n   *\n   * @see {@link pf1.documents.item.ItemPF.recharge}\n   *\n   * @example\n   * await actor.rechargeItems(); // Recharge items with default settings.\n   * await actor.rechargeItems({ period: \"week\" }); // Recharge items as if week had passed.\n   *\n   * @param {RechargeActorItemsOptions} [options] - Additional options\n   * @returns {Promise<Item[]|object[]>} - Result of an update or the update data.\n   */\n  async rechargeItems({ commit = true, ...rechargeOptions } = {}) {\n    const actorData = this.system;\n    const itemUpdates = [];\n\n    // Update charged items\n    // TODO: Await all item recharges in one go.\n    for (const item of this.items) {\n      const itemUpdate = await item.recharge({ ...rechargeOptions, commit: false });\n\n      // Append update to queue\n      if (itemUpdate?.system && !foundry.utils.isEmpty(itemUpdate.system)) {\n        itemUpdate._id = item.id;\n        itemUpdates.push(itemUpdate);\n      }\n    }\n\n    if (commit) {\n      if (itemUpdates.length) return this.updateEmbeddedDocuments(\"Item\", itemUpdates);\n    } else return itemUpdates;\n    return [];\n  }\n\n  /**\n   * Handler for character healing during rest.\n   *\n   * @protected\n   * @param {object} options Resting options.\n   * @returns {object} Update data object\n   */\n  _restingHeal(options = {}) {\n    const actorData = this.system,\n      hp = actorData.attributes.hp,\n      wounds = actorData.attributes?.wounds,\n      vigor = actorData.attributes?.vigor;\n\n    const { hours, longTermCare } = options;\n    const updateData = {};\n\n    const hd = actorData.attributes.hd.total;\n\n    // Base healing\n    const heal = {\n      hp: hd,\n      abl: 1,\n      nonlethal: hours * hd,\n      vigor: vigor?.max ?? 0,\n      wounds: wounds?.max > 0 ? 1 : 0,\n    };\n\n    // -- Normal Hit Points ---\n\n    // Full day of resting\n    if (hours >= 24) {\n      heal.hp += 1;\n      heal.wounds += Math.floor(hd / 2);\n      heal.abl += 1;\n    }\n    // Long term care\n    if (longTermCare === true) {\n      heal.hp *= 2;\n      heal.abl *= 2;\n      heal.wounds *= 2;\n    }\n\n    updateData[\"system.attributes.hp.value\"] = Math.min(hp.value + heal.hp, hp.max);\n    updateData[\"system.attributes.hp.nonlethal\"] = Math.max(0, (hp.nonlethal || 0) - heal.nonlethal);\n    for (const [key, abl] of Object.entries(actorData.abilities)) {\n      const dmg = Math.abs(abl.damage);\n      updateData[`system.abilities.${key}.damage`] = Math.max(0, dmg - heal.abl);\n    }\n\n    // --- Wounds & Vigor ---\n\n    // Secondary actors don't use W&V rules\n    if (wounds?.max && vigor?.max) {\n      updateData[\"system.attributes.wounds.value\"] = Math.min(wounds.value + heal.wounds, wounds.max);\n      updateData[\"system.attributes.vigor.value\"] = Math.min(vigor.value + heal.vigor, vigor.max);\n    }\n\n    return updateData;\n  }\n\n  /**\n   * Perform all changes related to an actor resting, including restoring HP, ability scores, item uses, etc.\n   *\n   * @example\n   * await actor.performRest();\n   *\n   * @see {@link hookEvents!pf1PreActorRest pf1PreActorRest hook}\n   * @see {@link hookEvents!pf1ActorRest pf1ActorRest hook}\n   * @param {Partial<ActorRestOptions>} options - Options affecting an actor's resting\n   * @returns {Promise<ActorRestData | void>} Updates applied to the actor, if resting was completed\n   */\n  async performRest(options = {}) {\n    const { restoreHealth = true, longTermCare = false, restoreDailyUses = true, hours = 8, verbose = false } = options;\n    const actorData = this.system;\n\n    const updateData = {};\n    // Restore health and ability damage\n    if (restoreHealth === true) {\n      const healUpdate = this._restingHeal(options);\n      foundry.utils.mergeObject(updateData, healUpdate);\n    }\n\n    let itemUpdates = [];\n    // Restore daily uses of spells, feats, etc.\n    if (restoreDailyUses === true) {\n      const spellbookUpdates = await this.resetSpellbookUsage({ commit: false });\n      foundry.utils.mergeObject(updateData, spellbookUpdates);\n\n      // Recharge all items (including spells for prepared spellbooks)\n      itemUpdates = await this.rechargeItems({ commit: false, updateData, period: \"day\" });\n    }\n\n    options = { restoreHealth, restoreDailyUses, longTermCare, hours };\n    const allowed = Hooks.call(\"pf1PreActorRest\", this, options, updateData, itemUpdates);\n    if (allowed === false) return;\n\n    const context = { pf1: { action: \"rest\", restOptions: options } };\n\n    if (itemUpdates.length) await this.updateEmbeddedDocuments(\"Item\", itemUpdates, foundry.utils.deepClone(context));\n    if (!foundry.utils.isEmpty(updateData.system)) await this.update(updateData, foundry.utils.deepClone(context));\n\n    Hooks.callAll(\"pf1ActorRest\", this, options, updateData, itemUpdates);\n\n    if (verbose) {\n      const message = restoreDailyUses ? \"PF1.FullRestMessage\" : \"PF1.RestMessage\";\n      ui.notifications.info(game.i18n.format(message, { name: this.token?.name ?? this.name, hours }));\n    }\n\n    return { options, updateData, itemUpdates };\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  async modifyTokenAttribute(attribute, value, isDelta = false, isBar = true) {\n    let doc = this;\n    const current = foundry.utils.getProperty(this.system, attribute),\n      updates = {};\n\n    const isResource = current instanceof Resource;\n    if (isResource) doc = current.item;\n\n    if (!doc) return;\n    const updateData = {};\n\n    // Hit points\n    if (attribute === \"attributes.hp\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.hp.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.hp.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Wounds & Vigor\n    else if (attribute === \"attributes.vigor\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.vigor.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.vigor.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Relative\n    else if (isDelta) {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.min(current.value + value, current.max);\n      } else {\n        if (isBar)\n          updates[`system.${attribute}.value`] = Math.clamped(current.value + value, current.min || 0, current.max);\n        else updates[`system.${attribute}`] = current + value;\n      }\n    }\n    // Absolute\n    else {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.clamped(value, 0, current.max);\n      } else {\n        if (isBar) updates[`system.${attribute}.value`] = Math.min(value, current.max);\n        else updates[`system.${attribute}`] = value;\n      }\n    }\n\n    const allowed = Hooks.call(\"modifyTokenAttribute\", { attribute, value, isDelta, isBar }, updates);\n    return allowed !== false ? doc.update(updates) : this;\n  }\n\n  /**\n   * The VisionSharingSheet instance for this actor\n   *\n   * @type {VisionSharingSheet}\n   */\n  get visionSharingSheet() {\n    this._visionSharingSheet ??= new VisionSharingSheet(this);\n    return this._visionSharingSheet;\n  }\n}\n\n/**\n * @typedef {object} ActorRestOptions\n * Options given to {@link ActorPF.performRest} affecting an actor's resting.\n * @property {boolean} [restoreHealth=true] - Whether the actor's health should be restored.\n * @property {boolean} [restoreDailyUses=true] - Whether daily uses of spells and abilities should be restored.\n * @property {boolean} [longTermCare=false] - Whether additional hit and ability score points should be restored through the Heal skill.\n * @property {number} [hours=8] - The number of hours the actor will rest.\n * @property {boolean} [verbose=false] - Display notification once rest processing finishes.\n */\n\n/**\n * @typedef {object} ActorRestData\n * @property {ActorRestOptions} options - Options for resting\n * @property {object} updateData - Updates applied to the actor\n * @property {object[]} itemUpdates - Updates applied to the actor's items\n */\n\n/**\n * @typedef {object} DamageInstance\n * @property {number} value - Total damage in this instance\n * @property {object} types - Damage type data\n * @property {string} types.custom - Custom damage types\n * @property {string[]} types.values - Standard damage types\n */\n\n/**\n * TODO: Merge data/handling to changes\n *\n * @typedef {object} SourceInfo\n * @property {string} modifier - Bonus type\n * @property {string} name - Item name or other label\n * @property {\"add\"|\"set\"} operator - Change operator\n * @property {string} type - Arbitrary type\n * @property {number} value - Change value\n * @property {ItemChange} change - Parent change\n */\n","import { ActorPF } from \"./actor/actor-pf.mjs\";\nimport { getActorFromId, getItemOwner } from \"../utils/lib.mjs\";\n\n/**\n * Finds old macro with same name and command that user can execute and see.\n *\n * @param {string} name\n * @param {string} command\n * @returns {Macro|undefined}\n */\nfunction findOldMacro(name, command) {\n  return game.macros.find((m) => m.name === name && m.command === command && m.canExecute && m.visible && m.isAuthor);\n}\n\n/**\n * Various functions dealing with the creation and usage of macros.\n *\n * @module macros\n */\n\n/**\n * Create a Macro from an Item drop, or get an existing one.\n *\n * @param {object} item The item data\n * @param {string} actor The actor ID\n * @param {object} uuid\n * @param {number} slot The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createItemMacro = async (uuid, slot) => {\n  const item = fromUuidSync(uuid);\n  const command = `fromUuidSync(\"${uuid}\").use();`;\n  let macro = findOldMacro(item.name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: item.name,\n        type: \"script\",\n        img: item.img,\n        command,\n        flags: { \"pf1.itemMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create action use macro from dropped action.\n *\n * @param {string} actionId Action ID\n * @param {string} uuid UUID to parent item\n * @param {number} slot Hotbar slot to assign to\n * @returns {Promise<User>} The updated User\n */\nexport const createActionMacro = async (actionId, uuid, slot) => {\n  const item = fromUuidSync(uuid);\n\n  const action = item?.actions.get(actionId);\n\n  if (!action) {\n    return void ui.notifications.error(\n      game.i18n.format(\"PF1.Error.ActionNotFound\", { id: actionId, item: item?.name, actor: item?.actor?.name })\n    );\n  }\n\n  const command = `fromUuidSync(\"${uuid}\")\\n\\t.actions.get(\"${actionId}\")\\n\\t.use();`;\n\n  let macro = findOldMacro(item.name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: `${action.name} (${item.name})`,\n        type: \"script\",\n        img: action.img || item.img,\n        command,\n        flags: { pf1: { actionMacro: { item: uuid, action: actionId } } },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from skill data to roll an actor's skill, or get an existing one.\n *\n * @async\n * @param {string} skillId - The skill's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSkillMacro = async (skillId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const skillInfo = actor.getSkillInfo(skillId);\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSkill(\"${skillId}\");`;\n  const name = game.i18n.format(\"PF1.RollSkillMacroName\", { actor: actor.name, skill: skillInfo.fullName });\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command,\n        flags: { \"pf1.skillMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from save data to roll an actor's save, or get an existing one.\n *\n * @async\n * @param {string} saveId - The save's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSaveMacro = async (saveId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const saveName = game.i18n.localize(\"PF1.SavingThrow\" + saveId.capitalize());\n\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSavingThrow(\"${saveId}\");`;\n  const name = game.i18n.format(\"PF1.RollSaveMacroName\", { actor: actor.name, type: saveName });\n  let macro = findOldMacro(name, command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command: command,\n        flags: { \"pf1.saveMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro to roll one of various checks for an actor\n *\n * @async\n * @param {string} type The type of macro to create\n * @param {string} uuid The actor's UUID\n * @param {number} slot The hotbar slot to use\n * @param {object} [data] Additional context data\n * @returns {Promise<User|void>} The updated User, if an update is triggered\n */\nexport const createMiscActorMacro = async (type, uuid, slot, data) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const getBookLabel = (bookId) => actor.system.attributes?.spells?.spellbooks?.[bookId]?.label;\n\n  let name,\n    img,\n    command = `fromUuidSync(\"${actor.uuid}\")\\n\\t`;\n  switch (type) {\n    case \"defenses\":\n      command += `.displayDefenseCard();`;\n      name = game.i18n.format(\"PF1.DisplayDefensesMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/items/armor/shield-light-metal.png\";\n      break;\n    case \"cmb\":\n      command += `.rollAttack({maneuver:true});`;\n      name = game.i18n.format(\"PF1.RollCMBMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/feats/improved-grapple.jpg\";\n      break;\n    case \"cl\": {\n      const { bookId } = data;\n      command += `.rollCL(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollCLMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/spells/wind-grasp-eerie-3.jpg\";\n      break;\n    }\n    case \"concentration\": {\n      const { bookId } = data;\n      command += `.rollConcentration(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollConcentrationMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/skills/light_01.jpg\";\n      break;\n    }\n    case \"bab\":\n      command += `.rollBAB();`;\n      name = game.i18n.format(\"PF1.RollBABMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/yellow_08.jpg\";\n      break;\n    case \"initiative\":\n      command += \".rollInitiative({ createCombatants: true });\";\n      name = game.i18n.format(\"PF1.RollInitiativeMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/weapon_41.jpg\";\n      break;\n    case \"attack\": {\n      const { attack } = data;\n      const isMelee = attack === \"melee\";\n      command += `.rollAttack({ ranged: ${isMelee ? \"false\" : \"true\"}});`;\n      name = game.i18n.format(isMelee ? \"PF1.RollMeleeMacroName\" : \"PF1.RollRangedMacroName\", { actor: actor.name });\n      img = isMelee ? \"systems/pf1/icons/skills/weapon_23.jpg\" : \"systems/pf1/icons/skills/arrow_07.jpg\";\n      break;\n    }\n    case \"abilityScore\": {\n      const { ability } = data;\n      command += `.rollAbilityTest(\"${ability}\");`;\n      name = game.i18n.format(\"PF1.RollAbilityMacroName\", {\n        actor: actor.name,\n        ability: CONFIG.PF1.abilities[ability],\n      });\n      img = \"systems/pf1/icons/skills/blue_35.jpg\";\n      break;\n    }\n  }\n\n  if (!name) return;\n\n  let macro = findOldMacro(name, command);\n  macro ??= await Macro.create(\n    {\n      name,\n      type: \"script\",\n      img,\n      command,\n      flags: { pf1: { type, actor: uuid } },\n    },\n    { displaySheet: false }\n  );\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n","/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {object} data  - Render options\n */\nexport function hideRollInfo(cm, jq, data) {\n  const whisper = cm.whisper || [];\n  const isBlind = whisper.length && cm.blind;\n  const isVisible = whisper.length ? whisper.includes(game.user.id) || (cm.isAuthor && !isBlind) : true;\n  if (!isVisible) {\n    jq.find(\".dice-formula\").text(\"???\");\n    jq.find(\".dice-total\").text(\"?\");\n    jq.find(\".dice\").text(\"\");\n    jq.find(\".success\").removeClass(\"success\");\n    jq.find(\".failure\").removeClass(\"failure\");\n  }\n}\n\n/**\n * Generates an info block containing an item's identified info for GMs\n *\n * @remarks This HTML has to be generated in a synchronous way, as adding to a rendered chat message's content\n *          will cause erratic scrolling behaviour.\n * @param {ChatMessagePFIdentifiedInfo} info - An object containing the item's identified info\n * @returns {string} HTML string containing the info block\n */\nfunction getIdentifiedBlock(info) {\n  const hasCombinedName = info.actionName && !info.actionDescription;\n  return (\n    _templateCache[\"systems/pf1/templates/chat/parts/gm-description.hbs\"]?.(\n      { ...info, hasCombinedName },\n      { allowProtoMethodsByDefault: true, allowProtoPropertiesByDefault: true }\n    ) ?? \"\"\n  );\n}\n\n/**\n * Add GM-sensitive info for GMs and hide GM-sensitive info for players\n *\n * @param {ChatMessagePF} cm - The chat message\n * @param {JQuery} html - The chat message's HTML\n * @param {object} data - Data used to render the chat message\n */\nexport function hideGMSensitiveInfo(cm, html, data) {\n  // Handle adding of GM-sensitive info\n  if (game.user.isGM) {\n    // Show identified info box for GM if item was unidentified when rolled\n    const identifiedInfo = cm.flags.pf1?.identifiedInfo ?? {};\n    const { identified = true } = identifiedInfo;\n    if (!identified && cm.hasItemSource) {\n      const cardContent = html.find(\".card-content\");\n      cardContent.append(getIdentifiedBlock(identifiedInfo));\n    }\n    // Return early, as the rest of the function handles removing already existing info\n    return;\n  }\n\n  // Hide info that's always sensitive, no matter the card's owner\n  html.find(\".gm-sensitive-always\").remove();\n\n  // Hide info about unowned tokens\n  html.find(\"[data-gm-sensitive-uuid]\").each((a, elem) => {\n    // Quickly hide element\n    elem = $(elem);\n    elem.hide();\n\n    // Then check for stuff\n    const uuid = elem.data(\"gm-sensitive-uuid\");\n    if (!uuid) return;\n\n    let obj = fromUuidSync(uuid);\n    // If token or token document, get actor for testing user permissions\n    // TODO: This should no longer be necessary with Foundry v11, unlinked actors give actor directly.\n    if (obj instanceof Token || obj instanceof TokenDocument) obj = obj.actor;\n\n    //  Show element again, since we have permission\n    if (obj?.testUserPermission && obj.testUserPermission(game.user, \"OBSERVER\")) {\n      elem.show();\n    }\n    // Remove element completely, since we don't have permission\n    else {\n      elem.remove();\n    }\n  });\n\n  const actor = ChatMessage.getSpeakerActor(cm.speaker);\n  // Exit if allowed to see, followup is for hiding info\n  if (actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n  // Hide info\n  html.find(\".gm-sensitive\").remove();\n\n  // Alter GM inner texts\n  html.find(\"[data-gm-sensitive-inner]\").each((a, elem) => {\n    if (!game.settings.get(\"pf1\", \"obscureSaveDCs\") && elem.dataset.action === \"save\") return;\n\n    elem = $(elem);\n    elem.text(elem.data(\"gm-sensitive-inner\"));\n    elem.removeData(\"gm-sensitive-inner\");\n  });\n\n  if (game.settings.get(\"pf1\", \"obscureInlineRolls\")) {\n    // Turn rolls into raw strings\n    html.find(\".inline-roll\").each((a, elem) => {\n      if (!elem.dataset.roll) return;\n\n      let roll;\n      try {\n        roll = Roll.fromJSON(unescape(elem.dataset.roll));\n      } catch (err) {\n        console.error(`Inline roll in chat message ${cm.id} had invalid data`, err);\n        return;\n      }\n\n      const nroll = Roll.defaultImplementation.safeRollSync(`${roll.total}`);\n      elem.dataset.roll = escape(JSON.stringify(nroll));\n      delete elem.dataset.tooltip;\n      elem.classList.add(\"obfuscated\");\n    });\n  }\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterAmmoRecovery(cm, jq) {\n  const recoveryData = cm.getFlag(\"pf1\", \"ammoRecovery\");\n  if (!recoveryData) return;\n\n  jq.find(\".chat-attack .ammo[data-ammo-id]\").each((a, el) => {\n    const attackIndex = el.closest(\".chat-attack\").dataset.index;\n    const ammoId = el.dataset.ammoId;\n    const data = recoveryData[attackIndex]?.[ammoId];\n    if (!data) return;\n    const { recovered } = data;\n    $(el)\n      .find(\".inline-action\")\n      .each((i, ia) => {\n        // TODO: Disable button & track proper quantities\n        // TODO: Mark partial recovery\n        if (recovered === undefined) return;\n        else if (recovered > 0) ia.classList.add(\"recovered\");\n        else ia.classList.add(\"recovery-failed\");\n      });\n  });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterTargetDefense(cm, jq) {\n  const defenseData = cm.getFlag(\"pf1\", \"targetDefense\");\n  if (!defenseData) return;\n\n  jq.find(\".attack-targets .saving-throws div[data-saving-throw]\").each((a, el) => {\n    const actorUUID = el.closest(\".target\").dataset.uuid;\n    const save = el.dataset.savingThrow;\n    const value = foundry.utils.getProperty(defenseData, `${actorUUID}.save.${save}`);\n    if (value == null) return;\n    $(el).find(\".value\").text(value.toString());\n  });\n}\n\n/**\n * @param app\n * @param html\n * @param data\n * @param conf\n */\nexport function applyAccessibilitySettings(app, html, data, conf) {}\n\n/**\n * Returns an inline roll string suitable for chat messages.\n *\n * @deprecated\n * @param {Roll} roll - The roll to be stringified\n * @param {object} [options] - Additional options affecting the inline roll\n * @param {boolean} [options.hide3d] - Whether the roll should be hidden from DsN\n * @returns {string} The inline roll string\n */\nexport function createInlineRollString(roll, { hide3d = true } = {}) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.chat.createInlineRollString() is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n\n  const a = roll.toAnchor();\n  if (hide3d) a.classList.add(\"inline-dsn-hidden\");\n  return a.outerHTML;\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {HTMLElement} html - HTML element\n * @param recursive\n */\nexport function hideInvisibleTargets(cm, html, recursive = false) {\n  const targetsElem = html.querySelector(\".pf1.chat-card .attack-targets\");\n  if (!targetsElem) return; // No targets\n\n  // Delay until canvas ready if it's not yet so.\n  if (!canvas.ready) {\n    if (recursive) return;\n    targetsElem.style.display = \"none\";\n    if (!game.settings.get(\"core\", \"noCanvas\")) {\n      Hooks.once(\"canvasReady\", () => hideInvisibleTargets(cm, html, true));\n    } else {\n      // Canvas disabled, remove targets\n      targetsElem.remove();\n    }\n    return;\n  }\n\n  const targetElems = targetsElem.querySelectorAll(\".target\");\n  const targets = Array.from(targetElems).map((elem) => ({ uuid: elem.dataset.uuid, elem }));\n\n  let hasVisible = false;\n  for (const t of targets) {\n    /** @type {TokenDocumentPF} */\n    const token = fromUuidSync(t.uuid);\n    if (!token) continue;\n    t.token = token.object;\n\n    const isVisible = t.token?.isVisible;\n    const isObserver = token.actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER) ?? false;\n\n    // Hide if token invisible and user isn't observer of token\n    if (!isVisible && !isObserver) t.elem.remove();\n    else hasVisible = true;\n  }\n\n  // Hide targets if there's none visible to not reveal presence of invisible targets\n  if (!hasVisible) targetsElem.remove();\n  else targetsElem.style.removeProperty(\"display\");\n}\n\nconst getTokenByUuid = (uuid) => fromUuidSync(uuid)?.object;\n\n/**\n * Pan to defined token\n *\n * Provided here to allow overriding the behaviour.\n *\n * @internal\n * @param {Token} token - Token to pan to\n * @param {number} [duration=250] - Animation duration\n */\nexport function panToToken(token, duration = 250) {\n  canvas.animatePan({ ...token.center, duration });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function addTargetCallbacks(cm, jq) {\n  const targetElems = jq[0].querySelectorAll(\".attack-targets .target[data-uuid]\");\n\n  // Define getter functions\n  /**\n   * @param {HTMLElement} elem\n   * @returns {TokenPF|undefined}\n   */\n  function _getTokenByElem(elem) {\n    return fromUuidSync(elem?.dataset.uuid ?? \"\")?.object;\n  }\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {HTMLElement}\n   */\n  const _getRootTargetElement = function (elem) {\n    if (elem.dataset.uuid) return elem;\n    return elem.closest(\"[data-uuid]\");\n  };\n\n  function _mouseEnterCallback(event, uuid) {\n    getTokenByUuid(uuid)?._onHoverIn(event, { hoverOutOthers: false });\n  }\n\n  function _mouseLeaveCallback(event, uuid) {\n    getTokenByUuid(uuid)?._onHoverOut(event);\n  }\n\n  function _imageClickCallback(event, uuid) {\n    event.preventDefault();\n\n    const token = getTokenByUuid(uuid);\n    if (!token?.actor.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n    const toggle = event.shiftKey;\n\n    if (!toggle || (!token.controlled && toggle)) pf1.utils.chat.panToToken(token);\n\n    if (token.actor.isOwner) {\n      if (token.controlled) {\n        if (toggle) token.release();\n      } else {\n        token.control({ releaseOthers: !toggle });\n      }\n    }\n  }\n\n  // Add callbacks\n  for (let elem of targetElems) {\n    const uuid = elem.dataset.uuid;\n    const t = fromUuidSync(uuid);\n    if (!t) continue;\n\n    // Image element events\n    const imgElem = elem.querySelector(\".target-image\");\n    imgElem.addEventListener(\"pointerenter\", (ev) => _mouseEnterCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"pointerleave\", (ev) => _mouseLeaveCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"click\", (ev) => _imageClickCallback(ev, uuid));\n\n    // Misc element events\n    elem = $(elem);\n    elem.find(\".ac\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetACClick(cm, jq, t.actor, event);\n    });\n\n    elem.find(\".saving-throws .click\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetSavingThrowClick(cm, jq, t.actor, event);\n    });\n  }\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Actor} actor - Actor instance\n * @param {Event} event - Triggering event\n */\nexport async function targetACClick(cm, jq, actor, event) {\n  actor.displayDefenseCard({ rollMode: \"selfroll\" });\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Actor} actor - Actor instance\n * @param {Event} event - Triggering event\n */\nexport async function targetSavingThrowClick(cm, jq, actor, event) {\n  const elem = event.currentTarget;\n  const save = elem.dataset.savingThrow;\n\n  const message = await actor.rollSavingThrow(save, { event });\n  const total = message?.rolls?.[0]?.total;\n\n  // Replace saving throw value on original chat card's target\n  if (total != null) {\n    const actorUUID = elem.closest(\".target\").dataset.uuid;\n    await cm.setFlag(\"pf1\", \"targetDefense\", { [actorUUID]: { save: { [save]: total } } });\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\n\nconst actorHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Actor.documentClasses[type] ?? ActorBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ActorPFProxy = new Proxy(ActorBasePF, actorHandler);\n","import { ItemBasePF } from \"./item-base.mjs\";\n\nconst itemHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Item.documentClasses[type] ?? ItemBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ItemPFProxy = new Proxy(ItemBasePF, itemHandler);\n","/**\n * PF1 Configuration Values\n *\n * A dictionary of dictionaries providing configuration data like formulae,\n * translation keys, and other configuration values. Translations keys are\n * assumed to get replaced by their proper translation when the system is loaded.\n *\n * The PF1 object may be adjusted to influence the system's behaviour during runtime.\n * It is available as `pf1.config` as well as through `CONFIG.PF1`.\n *\n * @module\n */\nexport const re = {\n  traitSeparator: /\\s*[;]\\s*/g,\n};\n\n/**\n * The set of Ability Scores used within the system\n *\n * @enum {string}\n */\nexport const abilities = {\n  str: \"PF1.AbilityStr\",\n  dex: \"PF1.AbilityDex\",\n  con: \"PF1.AbilityCon\",\n  int: \"PF1.AbilityInt\",\n  wis: \"PF1.AbilityWis\",\n  cha: \"PF1.AbilityCha\",\n};\n\n/**\n * The set of Ability Scores used within the system in short form\n */\nexport const abilitiesShort = {\n  str: \"PF1.AbilityShortStr\",\n  dex: \"PF1.AbilityShortDex\",\n  con: \"PF1.AbilityShortCon\",\n  int: \"PF1.AbilityShortInt\",\n  wis: \"PF1.AbilityShortWis\",\n  cha: \"PF1.AbilityShortCha\",\n};\n\n/**\n * The point cost to increase an ability score using Point Buy\n */\nexport const abilityCost = {\n  7: -4,\n  8: -2,\n  9: -1,\n  10: 0,\n  11: 1,\n  12: 2,\n  13: 3,\n  14: 5,\n  15: 7,\n  16: 10,\n  17: 13,\n  18: 17,\n};\n\n/**\n * Point buy calculator.\n */\nexport const pointBuy = {\n  low: { label: \"PF1.Application.PointBuy.Type.low\", points: 10 },\n  standard: { label: \"PF1.Application.PointBuy.Type.standard\", points: 15 },\n  high: { label: \"PF1.Application.PointBuy.Type.high\", points: 20 },\n  epic: { label: \"PF1.Application.PointBuy.Type.epic\", points: 25 },\n};\n\n/**\n * At which levels you receive how many new ability points.\n */\nexport const levelAbilityScores = {\n  4: 1,\n  8: 1,\n  12: 1,\n  16: 1,\n  20: 1,\n};\n\n/**\n * How many points are assigned per choice.\n *\n * For homebrew support.\n */\nexport const levelAbilityScoreMult = 1;\n\n/**\n * At which mythic tiers you receive how many new ability points.\n */\nexport const tierAbilityScores = {\n  2: 2,\n  4: 2,\n  6: 2,\n  8: 2,\n  10: 2,\n};\n\n/**\n * How many points are assigned per choice.\n */\nexport const tierAbilityScoreMult = 2;\n\n/**\n * Valid hit die sizes.\n */\nexport const hitDieSizes = [6, 8, 10, 12];\n\n/**\n * Data for the feature associated with ability scores gained from leveling.\n */\nexport const levelAbilityScoreFeature = {\n  img: \"systems/pf1/icons/skills/affliction_10.jpg\",\n  name: \"PF1.LevelUp.AbilityScore.Item.Name\",\n  system: {\n    description: {\n      value: \"PF1.LevelUp.AbilityScore.Item.Desc\",\n    },\n    subType: \"misc\",\n  },\n  type: \"feat\",\n};\n\n/**\n * The set of Saving Throws\n */\nexport const savingThrows = {\n  fort: \"PF1.SavingThrowFort\",\n  ref: \"PF1.SavingThrowRef\",\n  will: \"PF1.SavingThrowWill\",\n};\n\n/**\n * The types of classes\n */\nexport const classTypes = {\n  base: \"PF1.Subtypes.Item.class.base.Single\",\n  prestige: \"PF1.Subtypes.Item.class.prestige.Single\",\n  npc: \"PF1.Subtypes.Item.class.npc.Single\",\n  racial: \"PF1.Subtypes.Item.class.racial.Single\",\n  mythic: \"PF1.Subtypes.Item.class.mythic.Single\",\n};\n\n/**\n * Valid options for a class's BAB progression\n */\nexport const classBAB = {\n  low: \"PF1.Low\",\n  med: \"PF1.Medium\",\n  high: \"PF1.High\",\n  custom: \"PF1.Custom\",\n};\n\n/**\n * Valid options for a class's saving throw bonus progression\n */\nexport const classSavingThrows = {\n  low: \"PF1.Poor\",\n  high: \"PF1.Good\",\n  custom: \"PF1.Custom\",\n};\n\n/**\n * The formulae for BAB progressions\n */\nexport const classBABFormulas = {\n  low: \"floor(@hitDice * 0.5)\",\n  med: \"floor(@hitDice * 0.75)\",\n  high: \"@hitDice\",\n  custom: \"0\",\n};\n\nexport const classFractionalBABFormulas = {\n  low: \"@hitDice * 0.5\", // 1/2\n  med: \"@hitDice * 0.75\", // 3/4\n  high: \"@hitDice\", // 1/1\n  custom: \"0\",\n};\n\n/**\n * The formulae for saving throw progressions by class type\n */\nexport const classSavingThrowFormulas = {\n  base: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  prestige: {\n    low: \"floor((1 + @hitDice) / 3)\",\n    high: \"floor((1 + @hitDice) / 2)\",\n  },\n  npc: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  racial: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n};\nexport const classFractionalSavingThrowFormulas = {\n  goodSaveBonus: \"2\",\n  base: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  prestige: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  npc: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  racial: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n};\n\n/**\n * Item types that can have class associations.\n *\n * TODO: Move this to item metadata.\n */\nexport const classAssociations = [\"feat\", \"attack\"];\n\n/**\n * The choices available for favoured class bonuses\n */\nexport const favouredClassBonuses = {\n  hp: \"PF1.FavouredClass.Bonuses.hp\",\n  skill: \"PF1.FavouredClass.Bonuses.skill\",\n  alt: \"PF1.FavouredClass.Bonuses.alt\",\n};\n\n/**\n * Icons used for favoured class bonus choices\n */\nexport const favouredClassBonusIcons = {\n  hp: \"fa-heartbeat\",\n  skill: \"fa-wrench\",\n  alt: \"fa-tag\",\n};\n\n/**\n * The set of Armor Classes\n */\nexport const ac = {\n  normal: \"PF1.ACNormal\",\n  touch: \"PF1.ACTouch\",\n  flatFooted: \"PF1.ACFlatFooted\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Character alignment options\n */\nexport const alignments = {\n  lg: \"PF1.Alignments.lg\",\n  ng: \"PF1.Alignments.ng\",\n  cg: \"PF1.Alignments.cg\",\n  ln: \"PF1.Alignments.ln\",\n  tn: \"PF1.Alignments.tn\",\n  cn: \"PF1.Alignments.cn\",\n  le: \"PF1.Alignments.le\",\n  ne: \"PF1.Alignments.ne\",\n  ce: \"PF1.Alignments.ce\",\n};\n\n/**\n * Character alignment options in their short form\n */\nexport const alignmentsShort = {\n  lg: \"PF1.Alignments.Short.lg\",\n  ng: \"PF1.Alignments.Short.ng\",\n  cg: \"PF1.Alignments.Short.cg\",\n  ln: \"PF1.Alignments.Short.ln\",\n  tn: \"PF1.Alignments.Short.tn\",\n  cn: \"PF1.Alignments.Short.cn\",\n  le: \"PF1.Alignments.Short.le\",\n  ne: \"PF1.Alignments.Short.ne\",\n  ce: \"PF1.Alignments.Short.ce\",\n};\n\n/**\n * Extra damage reduction types\n *\n * @alpha\n */\nexport const damageResistances = {\n  lawful: \"PF1.Alignments.l\",\n  chaotic: \"PF1.Alignments.c\",\n  good: \"PF1.Alignments.g\",\n  evil: \"PF1.Alignments.e\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * The set of Armor Proficiencies which a character may have\n */\nexport const armorProficiencies = {\n  lgt: \"PF1.Proficiency.Armor.light\",\n  med: \"PF1.Proficiency.Armor.medium\",\n  hvy: \"PF1.Proficiency.Armor.heavy\",\n  shl: \"PF1.Proficiency.Armor.shield\",\n  twr: \"PF1.Proficiency.Armor.tower\",\n};\n\n/**\n * The set of broad Weapon Proficiencies a character may have\n */\nexport const weaponProficiencies = {\n  simple: \"PF1.Proficiency.Weapon.simple\",\n  martial: \"PF1.Proficiency.Weapon.martial\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * This describes the ways that an ability can be activated.\n */\nexport const abilityActivationTypes = {\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  swift: \"PF1.Activation.swift.Single\",\n  immediate: \"PF1.Activation.immediate.Single\",\n  move: \"PF1.Activation.move.Single\",\n  standard: \"PF1.Activation.standard.Single\",\n  full: \"PF1.Activation.fullRound.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  round: \"PF1.Activation.round.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n};\n\n/**\n * This describes plurals for activation types.\n */\nexport const abilityActivationTypesPlurals = {\n  free: \"PF1.Activation.free.Plural\",\n  swift: \"PF1.Activation.swift.Plural\",\n  immediate: \"PF1.Activation.immediate.Plural\",\n  move: \"PF1.Activation.move.Plural\",\n  standard: \"PF1.Activation.standard.Plural\",\n  full: \"PF1.Activation.fullRound.Plural\",\n  attack: \"PF1.Activation.attack.Plural\",\n  round: \"PF1.Activation.round.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n};\n\n/**\n * This describes the ways that an ability can be activated when using\n * Unchained rules.\n */\nexport const abilityActivationTypes_unchained = {\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  reaction: \"PF1.Activation.reaction.Single\",\n  action: \"PF1.Activation.action.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n};\n\n/**\n * This describes plurals for the ways that an ability can be activated when\n * using Unchained rules.\n */\nexport const abilityActivationTypesPlurals_unchained = {\n  passive: \"PF1.Activation.passive.Plural\",\n  free: \"PF1.Activation.free.Plural\",\n  reaction: \"PF1.Activation.reaction.Plural\",\n  action: \"PF1.Activation.action.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n  special: \"PF1.Activation.special.Plural\",\n};\n\n/**\n * The possible conditions when using Wound Threshold rules\n */\nexport const woundThresholdConditions = {\n  0: \"PF1.WoundLevel.healthy\",\n  1: \"PF1.WoundLevel.grazed\",\n  2: \"PF1.WoundLevel.wounded\",\n  3: \"PF1.WoundLevel.critical\",\n};\n\n/**\n * Change targets affected by Wound Thresholds.\n */\nexport const woundThresholdChangeTargets = [\n  \"~attackCore\",\n  \"cl\",\n  \"allSavingThrows\",\n  \"ac\",\n  //\"cmd\", // valid target but is inherited from \"ac\"\n  \"skills\",\n  \"allChecks\",\n  //\"init\", // inherited from allChecks\n  //\"abilityChecks\", // inherited from allChecks\n];\n\nexport const divineFocus = {\n  0: \"\",\n  1: \"PF1.SpellComponents.DFVariants.DF\",\n  2: \"PF1.SpellComponents.DFVariants.MDF\",\n  3: \"PF1.SpellComponents.DFVariants.FDF\",\n};\n\n/**\n * The measure template types available for actions.\n *\n * They're the same as Foundry's measure templates, so it's copy of CONFIG.MeasuredTemplate.types.\n *\n * @deprecated - Use `CONFIG.MeasuredTemplate.types` instead.\n */\nexport const measureTemplateTypes = CONFIG.MeasuredTemplate.types;\n\n/* -------------------------------------------- */\n\n/**\n * The possible creature sizes\n */\nexport const actorSizes = {\n  fine: \"PF1.ActorSize.fine\",\n  dim: \"PF1.ActorSize.dim\",\n  tiny: \"PF1.ActorSize.tiny\",\n  sm: \"PF1.ActorSize.sm\",\n  med: \"PF1.ActorSize.med\",\n  lg: \"PF1.ActorSize.lg\",\n  huge: \"PF1.ActorSize.huge\",\n  grg: \"PF1.ActorSize.grg\",\n  col: \"PF1.ActorSize.col\",\n};\n\n/**\n * Armor & shield cost multipliers for different creature sizes.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorCost = {\n  humanoid: {\n    fine: 0.5,\n    dim: 0.5,\n    tiny: 0.5,\n    sm: 1,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  nonhumanoid: {\n    fine: 1,\n    dim: 1,\n    tiny: 1,\n    sm: 2,\n    med: 2,\n    lg: 4,\n    huge: 8,\n    grg: 16,\n    col: 32,\n  },\n};\n\n/**\n * Armor weight multipliers for different creature sizes.\n *\n * The values are same for both humanoid and non-humanoid.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorWeight = {\n  fine: 0.1,\n  dim: 0.1,\n  tiny: 0.1,\n  sm: 0.5,\n  med: 1,\n  lg: 2,\n  huge: 5,\n  grg: 8,\n  col: 12,\n};\n\n/**\n * The possible creature sizes in their one-letter form\n */\nexport const sizeChart = {\n  fine: \"F\",\n  dim: \"D\",\n  tiny: \"T\",\n  sm: \"S\",\n  med: \"M\",\n  lg: \"L\",\n  huge: \"H\",\n  grg: \"G\",\n  col: \"C\",\n};\n\n/**\n * @typedef {object} TokenSize\n * @property {number} w - Width, in cells\n * @property {number} h - Height, in cells\n * @property {number} scale - Scale ratio\n */\n\n/**\n * The size values for Tokens according to the creature's size\n *\n * @type {Record<string,TokenSize>}\n */\nexport const tokenSizes = {\n  fine: { w: 1, h: 1, scale: 0.45 },\n  dim: { w: 1, h: 1, scale: 0.6 },\n  tiny: { w: 1, h: 1, scale: 0.75 },\n  sm: { w: 1, h: 1, scale: 0.9 },\n  med: { w: 1, h: 1, scale: 1 },\n  lg: { w: 2, h: 2, scale: 1 },\n  huge: { w: 3, h: 3, scale: 1 },\n  grg: { w: 4, h: 4, scale: 1 },\n  col: { w: 6, h: 6, scale: 1 },\n};\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeMods = {\n  fine: 8,\n  dim: 4,\n  tiny: 2,\n  sm: 1,\n  med: 0,\n  lg: -1,\n  huge: -2,\n  grg: -4,\n  col: -8,\n};\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeSpecialMods = {\n  fine: -8,\n  dim: -4,\n  tiny: -2,\n  sm: -1,\n  med: 0,\n  lg: 1,\n  huge: 2,\n  grg: 4,\n  col: 8,\n};\n\n/**\n * The size modifier applied to fly checks of creatures not of medium size\n */\nexport const sizeFlyMods = {\n  fine: 8,\n  dim: 6,\n  tiny: 4,\n  sm: 2,\n  med: 0,\n  lg: -2,\n  huge: -4,\n  grg: -6,\n  col: -8,\n};\n\n/**\n * The size modifier applied to stealth checks of creatures not of medium size\n */\nexport const sizeStealthMods = {\n  fine: 16,\n  dim: 12,\n  tiny: 8,\n  sm: 4,\n  med: 0,\n  lg: -4,\n  huge: -8,\n  grg: -12,\n  col: -16,\n};\n\n/**\n * Vehicle properties based on size and type\n */\nexport const vehicles = {\n  size: {\n    lg: {\n      label: \"PF1.ActorSize.lg\",\n      space: \"PF1.Vehicles.Space.Large\",\n    },\n    huge: {\n      label: \"PF1.ActorSize.huge\",\n      space: \"PF1.Vehicles.Space.Huge\",\n    },\n    grg: {\n      label: \"PF1.ActorSize.grg\",\n      space: \"PF1.Vehicles.Space.Gargantuan\",\n    },\n    col: {\n      label: \"PF1.ActorSize.col\",\n      space: \"PF1.Vehicles.Space.Colossal\",\n    },\n  },\n  type: {\n    land: \"PF1.Vehicles.Types.Land\",\n    sea: \"PF1.Vehicles.Types.Sea\",\n    air: \"PF1.Vehicles.Types.Air\",\n  },\n};\n\n/**\n * The possible options for a creature's maneuverability\n */\nexport const flyManeuverabilities = {\n  clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n  poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n  average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n  good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n  perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n};\n\n/**\n * The bonus values for a creature's maneuverability\n */\nexport const flyManeuverabilityValues = {\n  clumsy: -8,\n  poor: -4,\n  average: 0,\n  good: 4,\n  perfect: 8,\n};\n\n/**\n * Overland speeds\n */\nexport const overlandSpeed = {\n  imperial: {\n    // Default\n    // 1 mi per 10 ft\n    default: {\n      per: 10,\n      out: 1,\n      unit: \"mi\",\n    },\n  },\n  metric: {\n    // Metric system, used by German translation\n    // 1.5 km per 3 m\n    rounded: {\n      per: 3,\n      out: 1.5,\n      unit: \"km\",\n    },\n    // Exact metric system, used by Spanish translation\n    // 1.6 km per 3 m\n    exact: {\n      per: 3,\n      out: 1.6,\n      unit: \"km\",\n    },\n  },\n};\n\n/* -------------------------------------------- */\n\n/**\n * An array of maximum carry capacities, where the index is the ability/strength score.\n */\n// prettier-ignore\nexport const encumbranceLoads = [\n  0,\n  10,\n  20,\n  30,\n  40,\n  50,\n  60,\n  70,\n  80,\n  90,\n  100,\n  115,\n  130,\n  150,\n  175,\n  200,\n  230,\n  260,\n  300,\n  350,\n  400,\n  460,\n  520,\n  600,\n  700,\n  800,\n  920,\n  1040,\n  1200,\n  1400,\n  1600,\n];\n\n/**\n * Encumbrance levels for light, medium, and heavy loads.\n *\n * @see {@link ActorPF._computeEncumbrance ActorPF.system.encumbrance.level}\n * @readonly\n * @enum {number}\n */\nexport const encumbranceLevels = {\n  light: 0,\n  medium: 1,\n  heavy: 2,\n};\n\n/**\n * Encumbrance multipliers applied due to a creature's size for bi- and\n * quadrupedal creatures.\n */\nexport const encumbranceMultipliers = {\n  normal: {\n    fine: 0.125,\n    dim: 0.25,\n    tiny: 0.5,\n    sm: 0.75,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  quadruped: {\n    fine: 0.25,\n    dim: 0.5,\n    tiny: 0.75,\n    sm: 1,\n    med: 1.5,\n    lg: 3,\n    huge: 6,\n    grg: 12,\n    col: 24,\n  },\n};\n\n/**\n * Damage multipliers from ability score.\n */\nexport const abilityDamageMultipliers = [\n  { value: 0.5, label: \"×0.5\" },\n  { value: 1, label: \"×1\" },\n  { value: 1.5, label: \"×1.5\" },\n  { value: 2, label: \"×2\" },\n  { value: 2.5, label: \"×2.5\" },\n];\n\n/**\n * Ability damage multipliers inherited from held options\n */\nexport const abilityDamageHeldMultipliers = {\n  oh: 0.5,\n  normal: 1,\n  \"2h\": 1.5,\n};\n\n/* -------------------------------------------- */\n\n/**\n * Classification types for item action types\n */\nexport const itemActionTypes = {\n  mwak: \"PF1.ActionTypes.mwak\",\n  rwak: \"PF1.ActionTypes.rwak\",\n  twak: \"PF1.ActionTypes.twak\",\n  msak: \"PF1.ActionTypes.msak\",\n  rsak: \"PF1.ActionTypes.rsak\",\n  mcman: \"PF1.ActionTypes.mcman\",\n  rcman: \"PF1.ActionTypes.rcman\",\n  spellsave: \"PF1.ActionTypes.spellSave\",\n  save: \"PF1.ActionTypes.save\",\n  heal: \"PF1.ActionTypes.heal\",\n  other: \"PF1.ActionTypes.other\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the lengths of time over which an item can have limited use ability\n */\nexport const limitedUsePeriods = {\n  single: \"PF1.LimitedUses.Periods.single\",\n  round: \"PF1.LimitedUses.Periods.round\",\n  hour: \"PF1.LimitedUses.Periods.hour\",\n  day: \"PF1.LimitedUses.Periods.day\",\n  week: \"PF1.LimitedUses.Periods.week\",\n  charges: \"PF1.LimitedUses.Periods.charges\",\n};\n\n/**\n * Order of limited use periods from smallest to biggest, omitting periods with no relation to time.\n */\nexport const limitedUsePeriodOrder = [\"round\", \"hour\", \"day\", \"week\"];\n\n/* -------------------------------------------- */\n\n/**\n * The various equipment types and their subtypes\n */\nexport const equipmentTypes = {\n  armor: {\n    _label: \"PF1.Subtypes.Item.equipment.armor.Single\",\n    lightArmor: \"PF1.Subtypes.Item.equipment.armor.Types.light\",\n    mediumArmor: \"PF1.Subtypes.Item.equipment.armor.Types.medium\",\n    heavyArmor: \"PF1.Subtypes.Item.equipment.armor.Types.heavy\",\n  },\n  shield: {\n    _label: \"PF1.Subtypes.Item.equipment.shield.Single\",\n    lightShield: \"PF1.Subtypes.Item.equipment.shield.Types.light\",\n    heavyShield: \"PF1.Subtypes.Item.equipment.shield.Types.heavy\",\n    towerShield: \"PF1.Subtypes.Item.equipment.shield.Types.tower\",\n    other: \"PF1.Subtypes.Item.equipment.shield.Types.misc\",\n  },\n  wondrous: {\n    _label: \"PF1.Subtypes.Item.equipment.wondrous.Single\",\n  },\n  clothing: {\n    _label: \"PF1.Subtypes.Item.equipment.clothing.Single\",\n  },\n  other: {\n    _label: \"PF1.Other\",\n  },\n};\n\n/**\n * The slots equipment can occupy, sorted by category\n */\nexport const equipmentSlots = {\n  armor: {\n    armor: \"PF1.EquipSlots.armor\",\n  },\n  shield: {\n    shield: \"PF1.EquipSlots.shield\",\n  },\n  wondrous: {\n    slotless: \"PF1.EquipSlots.none\",\n    head: \"PF1.EquipSlots.head\",\n    headband: \"PF1.EquipSlots.headband\",\n    eyes: \"PF1.EquipSlots.eyes\",\n    shoulders: \"PF1.EquipSlots.shoulders\",\n    neck: \"PF1.EquipSlots.neck\",\n    chest: \"PF1.EquipSlots.chest\",\n    body: \"PF1.EquipSlots.body\",\n    belt: \"PF1.EquipSlots.belt\",\n    wrists: \"PF1.EquipSlots.wrists\",\n    hands: \"PF1.EquipSlots.hands\",\n    ring: \"PF1.EquipSlots.ring\",\n    feet: \"PF1.EquipSlots.feet\",\n  },\n  clothing: {\n    clothing: \"PF1.EquipSlots.clothing\",\n  },\n  other: {\n    other: \"PF1.Other\",\n  },\n};\n\nexport const implantTypes = {\n  cybertech: \"PF1.Subtypes.Item.implant.cybertech.Single\",\n};\n\n/**\n * The slots implants can occupy.\n */\nexport const implantSlots = {\n  cybertech: {\n    none: \"PF1.Cybertech.Slots.none\",\n    arm: \"PF1.Cybertech.Slots.arm\",\n    body: \"PF1.Cybertech.Slots.body\",\n    brain: \"PF1.Cybertech.Slots.brain\",\n    ears: \"PF1.Cybertech.Slots.ears\",\n    eyes: \"PF1.Cybertech.Slots.eyes\",\n    head: \"PF1.Cybertech.Slots.head\",\n    legs: \"PF1.Cybertech.Slots.legs\",\n  },\n};\n\n/**\n * The subtypes for loot items\n */\nexport const lootTypes = {\n  gear: \"PF1.Subtypes.Item.loot.gear.Plural\",\n  tool: \"PF1.Subtypes.Item.loot.tool.Plural\",\n  ammo: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n  food: \"PF1.Subtypes.Item.loot.food.Plural\",\n  herb: \"PF1.Subtypes.Item.loot.herb.Plural\",\n  adventuring: \"PF1.Subtypes.Item.loot.adventuring.Plural\",\n  animal: \"PF1.Subtypes.Item.loot.animal.Plural\",\n  animalGear: \"PF1.Subtypes.Item.loot.animalGear.Plural\",\n  reagent: \"PF1.Subtypes.Item.loot.reagent.Plural\",\n  remedy: \"PF1.Subtypes.Item.loot.remedy.Plural\",\n  treasure: \"PF1.Subtypes.Item.loot.treasure.Plural\",\n  tradeGoods: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n  vehicle: \"PF1.Subtypes.Item.loot.vehicle.Plural\",\n  entertainment: \"PF1.Subtypes.Item.loot.entertainment.Plural\",\n  misc: \"PF1.Subtypes.Item.loot.misc.Plural\",\n};\n\n/**\n * Loot types that should not be equippable.\n */\nexport const unequippableLoot = [\n  \"food\",\n  \"herb\",\n  \"reagent\",\n  \"treasure\",\n  \"tradeGoods\",\n  \"vehicle\",\n  \"entertainment\",\n  \"ammo\",\n];\n\n/**\n * The subtypes for ammo type loot items\n */\nexport const ammoTypes = {\n  arrow: \"PF1.AmmoType.arrow\",\n  bolt: \"PF1.AmmoType.bolt\",\n  repeatingBolt: \"PF1.AmmoType.repeatingBolt\",\n  slingBullet: \"PF1.AmmoType.slingBullet\",\n  gunBullet: \"PF1.AmmoType.gunBullet\",\n  dragoonBullet: \"PF1.AmmoType.dragoonBullet\",\n  dart: \"PF1.AmmoType.dart\",\n  siege: \"PF1.AmmoType.siege\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the valid consumable types which are recognized by the system\n */\nexport const consumableTypes = {\n  potion: \"PF1.Subtypes.Item.consumable.potion.Single\",\n  poison: \"PF1.Subtypes.Item.consumable.poison.Single\",\n  drug: \"PF1.Subtypes.Item.consumable.drug.Single\",\n  scroll: \"PF1.Subtypes.Item.consumable.scroll.Single\",\n  wand: \"PF1.Subtypes.Item.consumable.wand.Single\",\n  rod: \"PF1.Subtypes.Item.consumable.rod.Single\",\n  staff: \"PF1.Subtypes.Item.consumable.staff.Single\",\n  pharmaceutical: \"PF1.Subtypes.Item.consumable.pharmaceutical.Single\",\n  misc: \"PF1.Misc\",\n};\n\nexport const attackTypes = {\n  weapon: \"PF1.Subtypes.Item.attack.weapon.Single\",\n  natural: \"PF1.Subtypes.Item.attack.natural.Single\",\n  ability: \"PF1.Subtypes.Item.attack.ability.Single\",\n  racialAbility: \"PF1.Subtypes.Item.attack.racialAbility.Single\",\n  item: \"PF1.Item\",\n  misc: \"PF1.Misc\",\n};\n\nexport const featTypes = {\n  feat: \"PF1.Subtypes.Item.feat.feat.Single\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Single\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Single\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Single\",\n  misc: \"PF1.Misc\",\n  template: \"PF1.Subtypes.Item.feat.template.Single\",\n};\n\nexport const featTypesPlurals = {\n  feat: \"PF1.Subtypes.Item.feat.feat.Plural\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Plural\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Plural\",\n  template: \"PF1.Subtypes.Item.feat.template.Plural\",\n};\n\nexport const traitTypes = {\n  combat: \"PF1.Trait.combat\",\n  magic: \"PF1.Trait.magic\",\n  faith: \"PF1.Trait.faith\",\n  social: \"PF1.Trait.social\",\n  campaign: \"PF1.Trait.campaign\",\n  cosmic: \"PF1.Trait.cosmic\",\n  equipment: \"PF1.Trait.equipment\",\n  exemplar: \"PF1.Trait.exemplar\",\n  faction: \"PF1.Trait.faction\",\n  family: \"PF1.Trait.family\",\n  mount: \"PF1.Trait.mount\",\n  race: \"PF1.Trait.race\",\n  region: \"PF1.Trait.region\",\n  religion: \"PF1.Trait.religion\",\n  drawback: \"PF1.Trait.drawback\",\n};\n\nexport const racialTraitCategories = {\n  defense: \"PF1.RacialTraitCategories.defense\",\n  featSkills: \"PF1.RacialTraitCategories.featSkills\",\n  magical: \"PF1.RacialTraitCategories.magical\",\n  movement: \"PF1.RacialTraitCategories.movement\",\n  senses: \"PF1.RacialTraitCategories.senses\",\n  offense: \"PF1.RacialTraitCategories.offense\",\n  other: \"PF1.RacialTraitCategories.other\",\n  weakness: \"PF1.RacialTraitCategories.weakness\",\n};\n\nexport const raceTypes = {\n  standard: \"PF1.RaceTypes.standard\",\n  advanced: \"PF1.RaceTypes.advanced\",\n  monstrous: \"PF1.RaceTypes.monstrous\",\n};\n\n/**\n * Ability types, each with their short and their long form\n */\nexport const abilityTypes = {\n  na: {\n    long: \"PF1.AbilityTypes.na.Label\",\n    short: \"PF1.AbilityTypes.na.Short\",\n  },\n  ex: {\n    long: \"PF1.AbilityTypes.ex.Label\",\n    short: \"PF1.AbilityTypes.ex.Short\",\n  },\n  su: {\n    long: \"PF1.AbilityTypes.su.Label\",\n    short: \"PF1.AbilityTypes.su.Short\",\n  },\n  sp: {\n    long: \"PF1.AbilityTypes.sp.Label\",\n    short: \"PF1.AbilityTypes.sp.Short\",\n  },\n};\n\n/* -------------------------------------------- */\n\n/**\n * The valid currency denominations supported by the game system\n */\nexport const currencies = {\n  pp: \"PF1.Currency.Abbr.pp\",\n  gp: \"PF1.Currency.Abbr.gp\",\n  sp: \"PF1.Currency.Abbr.sp\",\n  cp: \"PF1.Currency.Abbr.cp\",\n};\n\n/**\n * Currency\n */\nexport const currency = /** @type {const} */ ({\n  /**\n   * Conversion rates in relation to {@link currencyBase base currency}.\n   */\n  rate: {\n    pp: 1_000,\n    gp: 100,\n    sp: 10,\n  },\n\n  /**\n   * Standard currency. Most things are valued in this unit.\n   */\n  standard: \"gp\",\n\n  /**\n   * Baseline currency.\n   */\n  base: \"cp\",\n});\n\n/**\n * Resultant armor types for an actor's worn armor as per their roll data\n *\n * @see {@link ActorPF.getRollData ActorRollData.armor.type}\n * @readonly\n * @enum {number}\n */\nexport const armorTypes = {\n  none: 0,\n  light: 1,\n  medium: 2,\n  heavy: 3,\n};\n\n/**\n * Resultant shield types for an actor's worn shield\n *\n * @see {@link ActorPF.getRollData ActorRollData.shield.type}\n * @readonly\n * @enum {number}\n */\nexport const shieldTypes = {\n  none: 0,\n  other: 1, // buckler\n  light: 2,\n  heavy: 3,\n  tower: 4,\n};\n\n/**\n * The types of bonus modifiers\n */\nexport const bonusTypes = {\n  untyped: \"PF1.ModifierType.untyped\",\n  untypedPerm: \"PF1.ModifierType.untypedPerm\",\n  base: \"PF1.ModifierType.base\",\n  enh: \"PF1.ModifierType.enhancement\",\n  dodge: \"PF1.ModifierType.dodge\",\n  haste: \"PF1.ModifierType.haste\",\n  inherent: \"PF1.ModifierType.inherent\",\n  deflection: \"PF1.ModifierType.deflection\",\n  morale: \"PF1.ModifierType.morale\",\n  luck: \"PF1.ModifierType.luck\",\n  sacred: \"PF1.ModifierType.sacred\",\n  insight: \"PF1.ModifierType.insight\",\n  resist: \"PF1.ModifierType.resistance\",\n  profane: \"PF1.ModifierType.profane\",\n  trait: \"PF1.ModifierType.trait\",\n  racial: \"PF1.ModifierType.racial\",\n  size: \"PF1.ModifierType.size\",\n  competence: \"PF1.ModifierType.competence\",\n  circumstance: \"PF1.ModifierType.circumstance\",\n  alchemical: \"PF1.ModifierType.alchemical\",\n};\n\n/**\n * An array of stacking bonus types by their keys for {@link bonusTypes}\n */\nexport const stackingBonusTypes = [\"untyped\", \"untypedPerm\", \"dodge\", \"racial\", \"circumstance\"];\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n/**\n * Valid options for the range of abilities and spells\n */\nexport const distanceUnits = {\n  none: \"PF1.None\",\n  personal: \"PF1.Distance.personal\",\n  touch: \"PF1.Distance.touch\",\n  melee: \"PF1.Distance.melee\",\n  reach: \"PF1.Distance.reach\",\n  close: \"PF1.Distance.close\",\n  medium: \"PF1.Distance.medium\",\n  long: \"PF1.Distance.long\",\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  spec: \"PF1.Special\",\n  seeText: \"PF1.SeeText\",\n  unlimited: \"PF1.Unlimited\",\n};\n\nexport const measureUnits = {\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  m: \"PF1.Distance.m\",\n  km: \"PF1.Distance.km\",\n};\n\nexport const measureUnitsShort = {\n  ft: \"PF1.Distance.ftShort\",\n  mi: \"PF1.Distance.miShort\",\n  m: \"PF1.Distance.mShort\",\n  km: \"PF1.Distance.kmShort\",\n};\n\nexport const actorStatures = {\n  tall: \"PF1.StatureTall\",\n  long: \"PF1.StatureLong\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * This Object defines the various lengths of time which can occur in PF1\n */\nexport const timePeriods = {\n  inst: \"PF1.Time.Period.inst.Label\",\n  turn: \"PF1.Time.Period.turn.Label\",\n  round: \"PF1.Time.Period.round.Label\",\n  minute: \"PF1.Time.Period.minute.Label\",\n  hour: \"PF1.Time.Period.hour.Label\",\n  day: \"PF1.Time.Period.day.Label\",\n  month: \"PF1.Time.Period.month.Label\",\n  year: \"PF1.Time.Period.year.Label\",\n  perm: \"PF1.Time.Period.perm.Label\",\n  seeText: \"PF1.SeeText\",\n  spec: \"PF1.Special\",\n};\n\n/**\n * Short form labels for time periods, and valid options for buff durations.\n */\nexport const timePeriodsShort = {\n  turn: \"PF1.Time.Period.turn.Short\",\n  round: \"PF1.Time.Period.round.Short\",\n  minute: \"PF1.Time.Period.minute.Short\",\n  hour: \"PF1.Time.Period.hour.Short\",\n};\n\n/**\n * Duration end events\n *\n * Used by buffs to decide when exactly their duration ends.\n */\nexport const durationEndEvents = {\n  turnStart: \"PF1.Time.Turn.Start\",\n  initiative: \"PF1.Initiative\",\n  turnEnd: \"PF1.Time.Turn.End\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * This Object determines spells gained and cast per level\n */\nexport const casterProgression = {\n  castsPerDay: {\n    prepared: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 0],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 0],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2],\n        [Number.POSITIVE_INFINITY, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 5],\n        [Number.POSITIVE_INFINITY, 6, 3],\n        [Number.POSITIVE_INFINITY, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 6],\n      ],\n    },\n    hybrid: {\n      high: [\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    prestige: {\n      low: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n      ],\n    },\n  },\n  spellsPreparedPerDay: {\n    prepared: {\n      low: [\n        [null],\n        [null],\n        [null],\n        [null, 0],\n        [null, 1],\n        [null, 1],\n        [null, 1, 0],\n        [null, 1, 1],\n        [null, 2, 1],\n        [null, 2, 1, 0],\n        [null, 2, 1, 1],\n        [null, 2, 2, 1],\n        [null, 3, 2, 1, 0],\n        [null, 3, 2, 1, 1],\n        [null, 3, 2, 2, 1],\n        [null, 3, 3, 2, 1],\n        [null, 4, 3, 2, 1],\n        [null, 4, 3, 2, 2],\n        [null, 4, 3, 3, 2],\n        [null, 4, 4, 3, 3],\n      ],\n      med: [\n        [3, 1],\n        [4, 2],\n        [4, 3],\n        [4, 3, 1],\n        [4, 4, 2],\n        [5, 4, 3],\n        [5, 4, 3, 1],\n        [5, 4, 4, 2],\n        [5, 5, 4, 3],\n        [5, 5, 4, 3, 1],\n        [5, 5, 4, 4, 2],\n        [5, 5, 5, 4, 3],\n        [5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 5, 5, 4],\n        [5, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [3, 1],\n        [4, 2],\n        [4, 2, 1],\n        [4, 3, 2],\n        [4, 3, 2, 1],\n        [4, 3, 3, 2],\n        [4, 4, 3, 2, 1],\n        [4, 4, 3, 3, 2],\n        [4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [2],\n        [3],\n        [4],\n        [4, 2],\n        [5, 3],\n        [5, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 5, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 6, 5, 4],\n        [6, 6, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n      ],\n      med: [\n        [4, 2],\n        [5, 3],\n        [6, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 4, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 5, 4, 4],\n        [6, 5, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 5, 4, 4],\n        [6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 6, 5, 5, 4],\n        [6, 6, 6, 6, 6, 5, 5],\n      ],\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    hybrid: {\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    prestige: {\n      low: [\n        [null, 2],\n        [null, 3],\n        [null, 4],\n        [null, 4, 2],\n        [null, 4, 3],\n        [null, 4, 4],\n        [null, 5, 4, 2],\n        [null, 5, 4, 3],\n        [null, 5, 4, 4],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n      ],\n    },\n  },\n};\n\n/* -------------------------------------------- */\n\n/**\n * Character senses options\n */\nexport const senses = {\n  bs: \"PF1.Sense.blindsight\",\n  bse: \"PF1.Sense.blindsense\",\n  dv: \"PF1.Sense.darkvision\",\n  ts: \"PF1.Sense.tremorsense\",\n  tr: \"PF1.Sense.trueseeing\",\n  ll: \"PF1.Sense.lowlight\",\n  si: \"PF1.Sense.seeInvis\",\n  sid: \"PF1.Sense.seeInDark\",\n  sc: \"PF1.Sense.scent\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * The set of skill which can be trained in PF1\n */\nexport const skills = {\n  acr: \"PF1.SkillAcr\",\n  apr: \"PF1.SkillApr\",\n  art: \"PF1.SkillArt\",\n  blf: \"PF1.SkillBlf\",\n  clm: \"PF1.SkillClm\",\n  crf: \"PF1.SkillCrf\",\n  dip: \"PF1.SkillDip\",\n  dev: \"PF1.SkillDev\",\n  dis: \"PF1.SkillDis\",\n  esc: \"PF1.SkillEsc\",\n  fly: \"PF1.SkillFly\",\n  han: \"PF1.SkillHan\",\n  hea: \"PF1.SkillHea\",\n  int: \"PF1.SkillInt\",\n  kar: \"PF1.SkillKAr\",\n  kdu: \"PF1.SkillKDu\",\n  ken: \"PF1.SkillKEn\",\n  kge: \"PF1.SkillKGe\",\n  khi: \"PF1.SkillKHi\",\n  klo: \"PF1.SkillKLo\",\n  kna: \"PF1.SkillKNa\",\n  kno: \"PF1.SkillKNo\",\n  kpl: \"PF1.SkillKPl\",\n  kre: \"PF1.SkillKRe\",\n  lin: \"PF1.SkillLin\",\n  lor: \"PF1.SkillLor\",\n  per: \"PF1.SkillPer\",\n  prf: \"PF1.SkillPrf\",\n  pro: \"PF1.SkillPro\",\n  rid: \"PF1.SkillRid\",\n  sen: \"PF1.SkillSen\",\n  slt: \"PF1.SkillSlt\",\n  spl: \"PF1.SkillSpl\",\n  ste: \"PF1.SkillSte\",\n  sur: \"PF1.SkillSur\",\n  swm: \"PF1.SkillSwm\",\n  umd: \"PF1.SkillUMD\",\n};\n\n/**\n * Compendium journal entries containing details about {@link skills}\n */\nexport const skillCompendiumEntries = {\n  acr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.gGfJO90ZuRT4sZ9X\",\n  apr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.QGxoGsSIAOoe5dTW\",\n  art: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.vH2PLto0QPzkG4io\",\n  blf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.kRK5XwVBvcMi35w2\",\n  clm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ZAwjVOTwsBpZRgw4\",\n  crf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.3E8pxbjI8MD3JbfQ\",\n  dip: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.uB9Fy36RUjibxqvt\",\n  dev: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.cSdUATLHBFfw3v4s\",\n  dis: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xg25z3GIpS590NDW\",\n  esc: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.DTNlXXg77s3178WJ\",\n  fly: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.iH69GIwm8BjecrPN\",\n  han: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.IrVgSeMcAM8rAh2B\",\n  hea: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.nHbYSOoe1SzqEO9w\",\n  int: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.KNn8uxHu23phKC0y\",\n  kar: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kdu: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  ken: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kge: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  khi: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  klo: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kna: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kno: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kpl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kre: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  lin: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.SqLm3Deag2FpP8ty\",\n  lor: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.rExcBHs5GTiWLlo8\",\n  per: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.2h6hz5AkTDxKPFxr\",\n  prf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.emzBKDFNkNnC7N8u\",\n  pro: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.224EaK0K72NhCeRi\",\n  rid: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xQbTtefpEfEaOYo7\",\n  sen: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ka0VQGItdrWw3paO\",\n  slt: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.joza8kAIiImrPft7\",\n  spl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.VRD7jxiIAxKPt6EF\",\n  ste: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.wRWHk7tCUHR99PzD\",\n  sur: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.pLdYavy4nssLEoGV\",\n  swm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xhmDhOXuBbfVcD0Q\",\n  umd: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.A8j7nF6qHwuGEC2E\",\n};\n\n/**\n * An array of {@link skills} that can have arbitrary subskills\n */\nexport const arbitrarySkills = [\"art\", \"crf\", \"lor\", \"prf\", \"pro\"];\n\n/**\n * An array of {@link skills} that are considered background skills.\n */\nexport const backgroundSkills = [\n  \"apr\",\n  \"art\",\n  \"crf\",\n  \"han\",\n  \"ken\",\n  \"kge\",\n  \"khi\",\n  \"kno\",\n  \"lin\",\n  \"lor\",\n  \"prf\",\n  \"pro\",\n  \"slt\",\n];\n\n/**\n * Array of skills that are only shown with background skills optional rule enabled.\n */\nexport const backgroundOnlySkills = [\"lor\", \"art\"];\n\n/*\n * Number of background skills per level gained from valid classes.\n */\nexport const backgroundSkillsPerLevel = 2;\n\n/**\n * Valid class types to grant background skills.\n */\nexport const backgroundSkillClasses = [\"base\", \"prestige\"];\n\n/**\n * Valid class types to grant favored class bonuses.\n *\n * @remarks\n * - Prestige is included due to Favored Prestige Class feat.\n * - NPC is also valid as it is not omitted by any rules about favored class.\n * - Only mythic paths and racial HD are omitted.\n * @see https://www.aonprd.com/Rules.aspx?ID=344\n */\nexport const favoredClassTypes = [\"base\", \"prestige\", \"npc\"];\n\n/**\n * Bonus modifier granted to class skills.\n */\nexport const classSkillBonus = 3;\n\n/* -------------------------------------------- */\n\nexport const classCasterType = {\n  sorcerer: \"high\",\n  wizard: \"high\",\n  cleric: \"high\",\n  oracle: \"high\",\n  druid: \"high\",\n  psychic: \"high\",\n  shaman: \"high\",\n  witch: \"high\",\n  alchemist: \"med\",\n  bard: \"med\",\n  hunter: \"med\",\n  inquisitor: \"med\",\n  investigator: \"med\",\n  magus: \"med\",\n  mesmerist: \"med\",\n  occultist: \"med\",\n  skald: \"med\",\n  spiritualist: \"med\",\n  summoner: \"med\",\n  summonerUnchained: \"med\",\n  antipaladin: \"low\",\n  bloodrager: \"low\",\n  medium: \"low\",\n  paladin: \"low\",\n  ranger: \"low\",\n};\n\nexport const spellcasting = {\n  type: {\n    spontaneous: \"PF1.SpellPrepSpontaneous\",\n    prepared: \"PF1.SpellPrepPrepared\",\n    hybrid: \"PF1.Arcanist\",\n  },\n  spells: {\n    arcane: \"PF1.Spellcasting.Type.Arcane\",\n    divine: \"PF1.Spellcasting.Type.Divine\",\n    psychic: \"PF1.Spellcasting.Type.Psychic\",\n    alchemy: \"PF1.Spellcasting.Type.Alchemy\",\n  },\n};\n\nexport const spellDescriptors = {\n  acid: \"PF1.SpellDescriptors.acid\",\n  air: \"PF1.SpellDescriptors.air\",\n  chaotic: \"PF1.SpellDescriptors.chaotic\",\n  cold: \"PF1.SpellDescriptors.cold\",\n  curse: \"PF1.SpellDescriptors.curse\",\n  darkness: \"PF1.SpellDescriptors.darkness\",\n  death: \"PF1.SpellDescriptors.death\",\n  disease: \"PF1.SpellDescriptors.disease\",\n  draconic: \"PF1.SpellDescriptors.draconic\",\n  earth: \"PF1.SpellDescriptors.earth\",\n  electricity: \"PF1.SpellDescriptors.electricity\",\n  emotion: \"PF1.SpellDescriptors.emotion\",\n  evil: \"PF1.SpellDescriptors.evil\",\n  fear: \"PF1.SpellDescriptors.fear\",\n  fire: \"PF1.SpellDescriptors.fire\",\n  force: \"PF1.SpellDescriptors.force\",\n  good: \"PF1.SpellDescriptors.good\",\n  languageDependent: \"PF1.SpellDescriptors.languageDependent\",\n  lawful: \"PF1.SpellDescriptors.lawful\",\n  light: \"PF1.SpellDescriptors.light\",\n  meditative: \"PF1.SpellDescriptors.meditative\",\n  mindAffecting: \"PF1.SpellDescriptors.mindAffecting\",\n  pain: \"PF1.SpellDescriptors.pain\",\n  poison: \"PF1.SpellDescriptors.poison\",\n  ruse: \"PF1.SpellDescriptors.ruse\",\n  shadow: \"PF1.SpellDescriptors.shadow\",\n  sonic: \"PF1.SpellDescriptors.sonic\",\n  water: \"PF1.SpellDescriptors.water\",\n};\n\nexport const magicAuraByLevel = {\n  spell: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 4 },\n    { power: \"strong\", level: 7 },\n    { power: \"overwhelming\", level: 10 },\n  ],\n  item: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 6 },\n    { power: \"strong\", level: 12 },\n    { power: \"overwhelming\", level: 21 },\n  ],\n};\n\nexport const auraStrengths = {\n  1: \"PF1.Aura.Strength.faint\",\n  2: \"PF1.Aura.Strength.moderate\",\n  3: \"PF1.Aura.Strength.strong\",\n  4: \"PF1.Aura.Strength.overwhelming\",\n};\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n// Weapon Types\nexport const weaponTypes = {\n  simple: {\n    _label: \"PF1.Subtypes.Item.weapon.simple.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  martial: {\n    _label: \"PF1.Subtypes.Item.weapon.martial.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  exotic: {\n    _label: \"PF1.Subtypes.Item.weapon.exotic.Single\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  misc: {\n    _label: \"PF1.Subtypes.Item.weapon.misc.Single\",\n    splash: \"PF1.WeaponTypeSplash\",\n    other: \"PF1.Other\",\n  },\n};\n\n// Weapon hold types\nexport const weaponHoldTypes = {\n  normal: \"PF1.WeaponHoldTypeNormal\",\n  \"2h\": \"PF1.WeaponHoldTypeTwoHanded\",\n  oh: \"PF1.WeaponHoldTypeOffhand\",\n};\n\n/**\n * Weapon groups that a weapon can belong to\n */\nexport const weaponGroups = {\n  axes: \"PF1.WeaponGroup.axes\",\n  bladesHeavy: \"PF1.WeaponGroup.bladesHeavy\",\n  bladesLight: \"PF1.WeaponGroup.bladesLight\",\n  bows: \"PF1.WeaponGroup.bows\",\n  close: \"PF1.WeaponGroup.close\",\n  crossbows: \"PF1.WeaponGroup.crossbows\",\n  double: \"PF1.WeaponGroup.double\",\n  firearms: \"PF1.WeaponGroup.firearms\",\n  flails: \"PF1.WeaponGroup.flails\",\n  hammers: \"PF1.WeaponGroup.hammers\",\n  monk: \"PF1.WeaponGroup.monk\",\n  natural: \"PF1.WeaponGroup.natural\",\n  polearms: \"PF1.WeaponGroup.polearms\",\n  siegeEngines: \"PF1.WeaponGroup.siegeEngines\",\n  spears: \"PF1.WeaponGroup.spears\",\n  thrown: \"PF1.WeaponGroup.thrown\",\n  tribal: \"PF1.WeaponGroup.tribal\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Define the set of weapon property flags which can exist on a weapon\n */\nexport const weaponProperties = {\n  ato: \"PF1.WeaponProperty.Automatic\",\n  blc: \"PF1.WeaponProperty.Blocking\",\n  brc: \"PF1.WeaponProperty.Brace\",\n  dea: \"PF1.WeaponProperty.Deadly\",\n  dst: \"PF1.WeaponProperty.Distracting\",\n  dbl: \"PF1.WeaponProperty.Double\",\n  dis: \"PF1.WeaponProperty.Disarm\",\n  fin: \"PF1.WeaponProperty.Finesse\",\n  frg: \"PF1.WeaponProperty.Fragile\",\n  grp: \"PF1.WeaponProperty.Grapple\",\n  imp: \"PF1.WeaponProperty.Improvised\",\n  mnk: \"PF1.WeaponProperty.Monk\",\n  nnl: \"PF1.WeaponProperty.NonLethal\",\n  prf: \"PF1.WeaponProperty.Performance\",\n  rch: \"PF1.WeaponProperty.Reach\",\n  sct: \"PF1.WeaponProperty.Scatter\",\n  sma: \"PF1.WeaponProperty.SemiAutomatic\",\n  slf: \"PF1.WeaponProperty.SlowFiring\",\n  snd: \"PF1.WeaponProperty.Sunder\",\n  spc: \"PF1.WeaponProperty.Special\",\n  thr: \"PF1.WeaponProperty.Thrown\",\n  trp: \"PF1.WeaponProperty.Trip\",\n};\n\n/**\n * The components required for casting a spell\n */\nexport const spellComponents = {\n  verbal: \"PF1.SpellComponents.Type.verbal.Abbr\",\n  somatic: \"PF1.SpellComponents.Type.somatic.Abbr\",\n  thought: \"PF1.SpellComponents.Type.thought.Abbr\",\n  emotion: \"PF1.SpellComponents.Type.emotion.Abbr\",\n  material: \"PF1.SpellComponents.Type.material.Abbr\",\n  focus: \"PF1.SpellComponents.Type.focus.Abbr\",\n  divineFocus: \"PF1.SpellComponents.Type.divineFocus.Abbr\",\n};\n\n/**\n * Spell schools\n */\nexport const spellSchools = {\n  abj: \"PF1.SpellSchools.abj\",\n  con: \"PF1.SpellSchools.con\",\n  div: \"PF1.SpellSchools.div\",\n  enc: \"PF1.SpellSchools.enc\",\n  evo: \"PF1.SpellSchools.evo\",\n  ill: \"PF1.SpellSchools.ill\",\n  nec: \"PF1.SpellSchools.nec\",\n  trs: \"PF1.SpellSchools.tra\",\n  uni: \"PF1.SpellSchools.uni\",\n  misc: \"PF1.Misc\",\n};\n\n/**\n * Spell levels\n */\nexport const spellLevels = {\n  0: \"PF1.SpellLevels.0\",\n  1: \"PF1.SpellLevels.1\",\n  2: \"PF1.SpellLevels.2\",\n  3: \"PF1.SpellLevels.3\",\n  4: \"PF1.SpellLevels.4\",\n  5: \"PF1.SpellLevels.5\",\n  6: \"PF1.SpellLevels.6\",\n  7: \"PF1.SpellLevels.7\",\n  8: \"PF1.SpellLevels.8\",\n  9: \"PF1.SpellLevels.9\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Condition types for condition immunities and resistances selection\n */\nexport const conditionTypes = {\n  bleed: \"PF1.Condition.bleed\",\n  blind: \"PF1.Condition.blind\",\n  confuse: \"PF1.Condition.confused\",\n  daze: \"PF1.Condition.dazed\",\n  dazzle: \"PF1.Condition.dazzled\",\n  deaf: \"PF1.Condition.deaf\",\n  deathEffects: \"PF1.Condition.deathEffects\",\n  disease: \"PF1.Condition.disease\",\n  energyDrain: \"PF1.Condition.energyDrain\",\n  exhausted: \"PF1.Condition.exhausted\",\n  fatigue: \"PF1.Condition.fatigued\",\n  fear: \"PF1.Condition.fear\",\n  mindAffecting: \"PF1.Condition.mindAffecting\",\n  poison: \"PF1.Condition.poison\",\n  sicken: \"PF1.Condition.sickened\",\n  paralyze: \"PF1.Condition.paralyzed\",\n  petrify: \"PF1.Condition.petrified\",\n  polymorph: \"PF1.Condition.polymorph\",\n  stun: \"PF1.Condition.stunned\",\n  sleep: \"PF1.Condition.sleep\",\n};\n\nexport const buffTypes = {\n  temp: \"PF1.Subtypes.Item.buff.temp.Single\",\n  spell: \"PF1.Subtypes.Item.buff.spell.Single\",\n  feat: \"PF1.Subtypes.Item.buff.feat.Single\",\n  perm: \"PF1.Subtypes.Item.buff.perm.Single\",\n  item: \"PF1.Subtypes.Item.buff.item.Single\",\n  misc: \"PF1.Subtypes.Item.buff.misc.Single\",\n};\n\n/**\n * Formula for determining extra attacks for BAB iteratives\n */\nexport const iterativeExtraAttacks = \"min(3, ceil(@bab / 5) - 1)\";\n\n/**\n * Formula for determining attack modifier for BAB iteratives\n */\nexport const iterativeAttackModifier = \"@attackCount * -5\";\n\n/**\n * Extra Attacks configurations\n *\n * @example\n * Custom additional option\n * ```js\n * turboMonk: {\n *   label: \"Turbo Monk\",\n *   iteratives: true,\n *   count: \"floor(@bab / 3)\",\n *   bonus: \"@attackCount * -2\",\n *   manual: true,\n * }\n * ```\n */\nexport const extraAttacks = {\n  // Standard: BAB iteratives\n  standard: {\n    label: \"PF1.ExtraAttacks.Standard\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Advanced: BAB iteratives + manual extra attacks and custom formula\n  advanced: {\n    label: \"PF1.ExtraAttacks.Advanced\",\n    iteratives: true,\n    manual: true,\n    formula: true,\n  },\n  // Chained Monk's Flurry of Blows\n  // Requires BAB override\n  // TODO: Make attack handling allow flurries to use normal iteratives.\n  flurry: {\n    label: \"PF1.ExtraAttacks.Flurry\",\n    count: \"min(3, ceil(@bab / 5) - 1) + ceil(@class.level / 7)\",\n    bonus: \"-(floor(@attackCount / 2) * 5 + @fullAttack * 2)\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    iteratives: false,\n    manual: false,\n    formula: false,\n  },\n  // Unchained Monk's Flurry of Blows\n  unflurry: {\n    label: \"PF1.ExtraAttacks.UnFlurry\",\n    count: \"min(3, ceil(@bab / 5) - 1) + floor((@class.level + 9) / 10)\",\n    bonus: \"max(0, @attackCount - floor((@class.level + 9) / 10)) * -5\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    iteratives: false,\n    manual: false,\n    formula: false,\n  },\n  // Custom: No BAB iteratives but with manual extra attacks and custom formula\n  custom: {\n    label: \"PF1.ExtraAttacks.Custom\",\n    iteratives: false,\n    manual: true,\n    formula: true,\n  },\n};\n\n/**\n * Dictionaries of conditional modifier targets, each with a label and sub-categories\n */\nexport const conditionalTargets = {\n  attack: {\n    _label: \"PF1.AttackRollPlural\",\n    allAttack: \"PF1.All\",\n    hasteAttack: \"PF1.Haste\",\n    rapidShotAttack: \"PF1.RapidShot\",\n  },\n  damage: {\n    _label: \"PF1.Damage\",\n    allDamage: \"PF1.All\",\n    hasteDamage: \"PF1.Haste\",\n    rapidShotDamage: \"PF1.RapidShot\",\n  },\n  size: {\n    _label: \"PF1.Size\",\n  },\n  critMult: {\n    _label: \"PF1.CriticalMultiplier\",\n  },\n  effect: {\n    _label: \"PF1.Effects\",\n  },\n  misc: {\n    _label: \"PF1.MiscShort\",\n  },\n};\n\n// Default filters to exclude secondary actors\nconst baseActorFilters = { actor: { exclude: [\"haunt\", \"vehicle\", \"trap\"] } };\n\n/**\n * Dictionaries of change/buff targets, each with a label and a category it belongs to,\n * as well as a sort value that determines this buffTarget's priority when Changes are applied.\n */\nexport const buffTargets = /** @type {const} */ ({\n  acpA: { label: \"PF1.ACPArmor\", category: \"misc\", sort: 10000, filters: { ...baseActorFilters } },\n  acpS: { label: \"PF1.ACPShield\", category: \"misc\", sort: 11000, filters: { ...baseActorFilters } },\n  mDexA: { label: \"PF1.MaxDexArmor\", category: \"misc\", sort: 20000 },\n  mDexS: { label: \"PF1.MaxDexShield\", category: \"misc\", sort: 21000 },\n  reach: { label: \"PF1.BuffTarReach\", category: \"misc\", sort: 50000 },\n  str: { label: \"PF1.AbilityStr\", category: \"ability\", sort: 30000 },\n  dex: { label: \"PF1.AbilityDex\", category: \"ability\", sort: 31000 },\n  con: { label: \"PF1.AbilityCon\", category: \"ability\", sort: 32000 },\n  int: { label: \"PF1.AbilityInt\", category: \"ability\", sort: 33000 },\n  wis: { label: \"PF1.AbilityWis\", category: \"ability\", sort: 34000 },\n  cha: { label: \"PF1.AbilityCha\", category: \"ability\", sort: 35000 },\n  strMod: { label: \"PF1.AbilityStrMod\", category: \"ability\", sort: 40000 },\n  dexMod: { label: \"PF1.AbilityDexMod\", category: \"ability\", sort: 41000 },\n  conMod: { label: \"PF1.AbilityConMod\", category: \"ability\", sort: 42000 },\n  intMod: { label: \"PF1.AbilityIntMod\", category: \"ability\", sort: 43000 },\n  wisMod: { label: \"PF1.AbilityWisMod\", category: \"ability\", sort: 44000 },\n  chaMod: { label: \"PF1.AbilityChaMod\", category: \"ability\", sort: 45000 },\n  strPen: { label: \"PF1.AbilityStrPen\", category: \"ability\", sort: 50000 },\n  dexPen: { label: \"PF1.AbilityDexPen\", category: \"ability\", sort: 51000 },\n  conPen: { label: \"PF1.AbilityConPen\", category: \"ability\", sort: 52000 },\n  intPen: { label: \"PF1.AbilityIntPen\", category: \"ability\", sort: 53000 },\n  wisPen: { label: \"PF1.AbilityWisPen\", category: \"ability\", sort: 54000 },\n  chaPen: { label: \"PF1.AbilityChaPen\", category: \"ability\", sort: 55000 },\n  skills: {\n    label: \"PF1.BuffTarAllSkills\",\n    category: \"skills\",\n    sort: 50000,\n    deferred: true,\n    filters: { ...baseActorFilters },\n  },\n  unskills: {\n    label: \"PF1.BuffTarUntrainedSkills\",\n    category: \"skills\",\n    sort: 100000,\n    deferred: true,\n    filters: { ...baseActorFilters },\n  },\n  carryStr: { label: \"PF1.CarryStrength\", category: \"misc\", sort: 60000, filters: { ...baseActorFilters } },\n  carryMult: { label: \"PF1.CarryMultiplier\", category: \"misc\", sort: 61000, filters: { ...baseActorFilters } },\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\", sort: 70000 }, // TODO: Should be deferred\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\", sort: 71000 }, // TODO: Should be deferred\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\", sort: 72000 }, // TODO: Should be deferred\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\", sort: 73000 }, // TODO: Should be deferred\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\", sort: 74000 }, // TODO: Should be deferred\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\", sort: 75000 }, // TODO: Should be deferred\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\", sort: 80000 }, // TODO: Should be deferred\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\", sort: 81000 }, // TODO: Should be deferred\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\", sort: 82000 }, // TODO: Should be deferred\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\", sort: 83000 }, // TODO: Should be deferred\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\", sort: 84000 }, // TODO: Should be deferred\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\", sort: 85000 }, // TODO: Should be deferred\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\", sort: 86000 }, // TODO: Should be deferred\n  landSpeed: { label: \"PF1.Movement.Mode.land\", category: \"speed\", sort: 90000 },\n  climbSpeed: { label: \"PF1.Movement.Mode.climb\", category: \"speed\", sort: 91000 },\n  swimSpeed: { label: \"PF1.Movement.Mode.swim\", category: \"speed\", sort: 92000 },\n  burrowSpeed: { label: \"PF1.Movement.Mode.burrow\", category: \"speed\", sort: 93000 },\n  flySpeed: { label: \"PF1.Movement.Mode.fly\", category: \"speed\", sort: 94000 },\n  allSpeeds: { label: \"PF1.BuffTarAllSpeeds\", category: \"speed\", sort: 95000 },\n  ac: { label: \"PF1.BuffTarACGeneric\", category: \"defense\", sort: 100000 },\n  aac: { label: \"PF1.BuffTarACArmor\", category: \"defense\", sort: 101000 },\n  sac: { label: \"PF1.BuffTarACShield\", category: \"defense\", sort: 102000 },\n  nac: { label: \"PF1.BuffTarACNatural\", category: \"defense\", sort: 103000 },\n  tac: { label: \"PF1.BuffTarACTouch\", category: \"defense\", sort: 104000 },\n  ffac: { label: \"PF1.BuffTarACFlatFooted\", category: \"defense\", sort: 105000 },\n  bab: { label: \"PF1.BAB\", category: \"attack\", sort: 111000 },\n  \"~attackCore\": { label: \"\", category: \"attack\", sort: 112000 },\n  attack: { label: \"PF1.BuffTarAllAttackRolls\", category: \"attack\", sort: 110000, deferred: true },\n  wattack: { label: \"PF1.BuffTarWeaponAttack\", category: \"attack\", sort: 111000, deferred: true },\n  sattack: { label: \"PF1.BuffTarSpellAttack\", category: \"attack\", sort: 112000, deferred: true },\n  mattack: { label: \"PF1.BuffTarMeleeAttack\", category: \"attack\", sort: 113000, deferred: true },\n  nattack: { label: \"PF1.BuffTarNaturalAttack\", category: \"attack\", sort: 114000, deferred: true },\n  rattack: { label: \"PF1.BuffTarRangedAttack\", category: \"attack\", sort: 115000, deferred: true },\n  tattack: { label: \"PF1.BuffTarThrownAttack\", category: \"attack\", sort: 116000, deferred: true },\n  damage: { label: \"PF1.BuffTarAllDamageRolls\", category: \"damage\", sort: 120000, deferred: true },\n  wdamage: { label: \"PF1.WeaponDamage\", category: \"damage\", sort: 121000, deferred: true },\n  mwdamage: { label: \"PF1.MeleeWeaponDamage\", category: \"damage\", sort: 121100, deferred: true },\n  rwdamage: { label: \"PF1.RangedWeaponDamage\", category: \"damage\", sort: 121200, deferred: true },\n  twdamage: { label: \"PF1.ThrownWeaponDamage\", category: \"damage\", sort: 121300, deferred: true },\n  rdamage: { label: \"PF1.AllRangedDamage\", category: \"damage\", sort: 122100, deferred: true },\n  mdamage: { label: \"PF1.AllMeleeDamage\", category: \"damage\", sort: 122200, deferred: true },\n  ndamage: { label: \"PF1.NaturalAttackDamage\", category: \"damage\", sort: 123000, deferred: true },\n  sdamage: { label: \"PF1.SpellDamage\", category: \"damage\", sort: 124000, deferred: true },\n  critConfirm: { label: \"PF1.CriticalConfirmation\", category: \"attack\", sort: 130000, deferred: true },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\", sort: 140000, deferred: true },\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\", sort: 141000, deferred: true },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\", sort: 142000, deferred: true },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\", sort: 143000, deferred: true },\n  cmb: { label: \"PF1.CMB\", category: \"attack\", sort: 150000 },\n  cmd: { label: \"PF1.CMD\", category: \"defense\", sort: 151000 },\n  ffcmd: { label: \"PF1.CMDFlatFooted\", category: \"defense\", sort: 152000 },\n  init: { label: \"PF1.Initiative\", category: \"misc\", sort: 160000 }, // TODO: Should be deferred\n  mhp: { label: \"PF1.HitPoints\", category: \"health\", sort: 170000 },\n  wounds: { label: \"PF1.Wounds\", category: \"health\", sort: 180000, filters: { ...baseActorFilters } },\n  vigor: { label: \"PF1.Vigor\", category: \"health\", sort: 181000, filters: { ...baseActorFilters } },\n  spellResist: { label: \"PF1.SpellResistance\", category: \"defense\", sort: 190000 },\n  bonusFeats: { label: \"PF1.BuffTarBonusFeats\", category: \"misc\", sort: 200000, filters: { ...baseActorFilters } },\n  bonusSkillRanks: {\n    label: \"PF1.BuffTarBonusSkillRanks\",\n    category: \"skills\",\n    sort: 210000,\n    filters: { ...baseActorFilters },\n  },\n  concentration: {\n    label: \"PF1.Concentration\",\n    category: \"spell\",\n    sort: 220000,\n    deferred: true,\n    filters: { ...baseActorFilters },\n  },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\", sort: 230000 },\n  dc: { label: \"PF1.SpellDC\", category: \"spell\", sort: 240000 },\n});\n\n/**\n * Categories grouping related {@link BuffTarget change targets} in the selector UI.\n */\nexport const buffTargetCategories = /** @type {const} */ ({\n  defense: { label: \"PF1.Defense\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  attack: { label: \"PF1.Attack\" },\n  damage: { label: \"PF1.Damage\" },\n  ability: { label: \"PF1.AbilityScore\", filters: { ...baseActorFilters } },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\", filters: { ...baseActorFilters } },\n  health: { label: \"PF1.Health\", filters: { ...baseActorFilters } },\n  skills: { label: \"PF1.Skills\", filters: { ...baseActorFilters } },\n  skill: { label: \"PF1.BuffTarSpecificSkill\", filters: { ...baseActorFilters } },\n  speed: { label: \"PF1.Movement.Speed\" },\n  spell: { label: \"PF1.BuffTarSpells\", filters: { ...baseActorFilters } },\n  misc: { label: \"PF1.Misc\" },\n});\n\nexport const contextNoteTargets = {\n  attack: { label: \"PF1.AttackRollPlural\", category: \"attacks\" },\n  critical: { label: \"PF1.CriticalHitPlural\", category: \"attacks\" },\n  effect: { label: \"PF1.Effects\", category: \"attacks\" },\n  melee: { label: \"PF1.Melee\", category: \"attacks\" },\n  meleeWeapon: { label: \"PF1.MeleeWeapon\", category: \"attacks\" },\n  meleeSpell: { label: \"PF1.MeleeSpell\", category: \"attacks\" },\n  ranged: { label: \"PF1.Ranged\", category: \"attacks\" },\n  rangedWeapon: { label: \"PF1.RangedWeapon\", category: \"attacks\" },\n  rangedSpell: { label: \"PF1.RangedSpell\", category: \"attacks\" },\n  cmb: { label: \"PF1.CMB\", category: \"attacks\" },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\" },\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\" },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\" },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\" },\n  skills: { label: \"PF1.BuffTarAllSkills\", category: \"skills\" },\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\" },\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\" },\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\" },\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\" },\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\" },\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\" },\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\" },\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\" },\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\" },\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\" },\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\" },\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\" },\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\" },\n  spellEffect: { label: \"PF1.BuffTarSpellEffect\", category: \"spell\" },\n  concentration: { label: \"PF1.Concentration\", category: \"spell\" },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\" },\n  ac: { label: \"PF1.ACNormal\", category: \"defense\" },\n  cmd: { label: \"PF1.CMD\", category: \"defense\" },\n  sr: { label: \"PF1.SpellResistance\", category: \"defense\" },\n  init: { label: \"PF1.Initiative\", category: \"misc\" },\n  // Speeds\n  landSpeed: { label: \"PF1.Movement.Mode.land\", category: \"speed\" },\n  climbSpeed: { label: \"PF1.Movement.Mode.climb\", category: \"speed\" },\n  swimSpeed: { label: \"PF1.Movement.Mode.swim\", category: \"speed\" },\n  burrowSpeed: { label: \"PF1.Movement.Mode.burrow\", category: \"speed\" },\n  flySpeed: { label: \"PF1.Movement.Mode.fly\", category: \"speed\" },\n  allSpeeds: { label: \"PF1.BuffTarAllSpeeds\", category: \"speed\" },\n};\n\nexport const contextNoteCategories = {\n  attacks: { label: \"PF1.Attacks\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  skills: { label: \"PF1.Skills\", filters: { ...baseActorFilters } },\n  skill: { label: \"PF1.BuffTarSpecificSkill\", filters: { ...baseActorFilters } },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\" },\n  spell: { label: \"PF1.BuffTarSpells\", filters: { ...baseActorFilters } },\n  defense: { label: \"PF1.Defense\" },\n  speed: { label: \"PF1.Movement.Speed\" },\n  misc: { label: \"PF1.Misc\" },\n};\n\n/**\n * A list of Golarion's languages\n */\nexport const languages = {\n  aboleth: \"PF1.Language.aboleth\",\n  abyssal: \"PF1.Language.abyssal\",\n  aklo: \"PF1.Language.aklo\",\n  ancientosiriani: \"PF1.Language.ancientosiriani\",\n  androffan: \"PF1.Language.androffan\",\n  aquan: \"PF1.Language.aquan\",\n  auran: \"PF1.Language.auran\",\n  azlanti: \"PF1.Language.azlanti\",\n  boggard: \"PF1.Language.boggard\",\n  catfolk: \"PF1.Language.catfolk\",\n  celestial: \"PF1.Language.celestial\",\n  common: \"PF1.Language.common\",\n  cyclops: \"PF1.Language.cyclops\",\n  dark: \"PF1.Language.dark\",\n  draconic: \"PF1.Language.draconic\",\n  drowsign: \"PF1.Language.drowsign\",\n  druidic: \"PF1.Language.druidic\",\n  dwarven: \"PF1.Language.dwarven\",\n  dziriak: \"PF1.Language.dziriak\",\n  elven: \"PF1.Language.elven\",\n  giant: \"PF1.Language.giant\",\n  gnoll: \"PF1.Language.gnoll\",\n  gnome: \"PF1.Language.gnome\",\n  goblin: \"PF1.Language.goblin\",\n  grippli: \"PF1.Language.grippli\",\n  halfling: \"PF1.Language.halfling\",\n  hallit: \"PF1.Language.hallit\",\n  ignan: \"PF1.Language.ignan\",\n  infernal: \"PF1.Language.infernal\",\n  jistka: \"PF1.Language.jistka\",\n  kasatha: \"PF1.Language.kasatha\",\n  kelish: \"PF1.Language.kelish\",\n  lashunta: \"PF1.Language.lashunta\",\n  munavri: \"PF1.Language.munavri\",\n  necril: \"PF1.Language.necril\",\n  orc: \"PF1.Language.orc\",\n  orvian: \"PF1.Language.orvian\",\n  osiriani: \"PF1.Language.osiriani\",\n  polyglot: \"PF1.Language.polyglot\",\n  protean: \"PF1.Language.protean\",\n  reptoid: \"PF1.Language.reptoid\",\n  rougarou: \"PF1.Language.rougarou\",\n  samsaran: \"PF1.Language.samsaran\",\n  sasquatch: \"PF1.Language.sasquatch\",\n  shadowtongue: \"PF1.Language.shadowtongue\",\n  shoanti: \"PF1.Language.shoanti\",\n  skald: \"PF1.Language.skald\",\n  sphinx: \"PF1.Language.sphinx\",\n  strix: \"PF1.Language.strix\",\n  sylvan: \"PF1.Language.sylvan\",\n  syrinx: \"PF1.Language.syrinx\",\n  taldane: \"PF1.Language.taldane\",\n  tekritanin: \"PF1.Language.tekritanin\",\n  tengu: \"PF1.Language.tengu\",\n  terran: \"PF1.Language.terran\",\n  thassilonian: \"PF1.Language.thassilonian\",\n  tien: \"PF1.Language.tien\",\n  treant: \"PF1.Language.treant\",\n  triaxian: \"PF1.Language.triaxian\",\n  undercommon: \"PF1.Language.undercommon\",\n  vanaran: \"PF1.Language.vanaran\",\n  varisian: \"PF1.Language.varisian\",\n  vegepygmy: \"PF1.Language.vegepygmy\",\n  vishkanya: \"PF1.Language.vishkanya\",\n  vudrani: \"PF1.Language.vudrani\",\n  yaddithian: \"PF1.Language.yaddithian\",\n};\n\n/**\n * Creature types\n */\nexport const creatureTypes = {\n  aberration: \"PF1.CreatureTypes.aberration\",\n  animal: \"PF1.CreatureTypes.animal\",\n  construct: \"PF1.CreatureTypes.construct\",\n  dragon: \"PF1.CreatureTypes.dragon\",\n  fey: \"PF1.CreatureTypes.fey\",\n  humanoid: \"PF1.CreatureTypes.humanoid\",\n  magicalBeast: \"PF1.CreatureTypes.magicalBeast\",\n  monstrousHumanoid: \"PF1.CreatureTypes.monstrousHumanoid\",\n  ooze: \"PF1.CreatureTypes.ooze\",\n  outsider: \"PF1.CreatureTypes.outsider\",\n  plant: \"PF1.CreatureTypes.plant\",\n  undead: \"PF1.CreatureTypes.undead\",\n  vermin: \"PF1.CreatureTypes.vermin\",\n};\n\nexport const spellRangeFormulas = {\n  close: \"25 + floor(@cl / 2) * 5\",\n  medium: \"100 + @cl * 10\",\n  long: \"400 + @cl * 40\",\n};\n\n/**\n * An array containing the damage dice progression for size adjustments\n */\nexport const sizeDie = [\n  \"1\",\n  \"1d2\",\n  \"1d3\",\n  \"1d4\",\n  \"1d6\",\n  \"1d8\",\n  \"1d10\",\n  \"2d6\",\n  \"2d8\",\n  \"3d6\",\n  \"3d8\",\n  \"4d6\",\n  \"4d8\",\n  \"6d6\",\n  \"6d8\",\n  \"8d6\",\n  \"8d8\",\n  \"12d6\",\n  \"12d8\",\n  \"16d6\",\n  \"16d8\",\n];\n\n/**\n * Arrays of Character Level XP Requirements by XP track\n */\n// prettier-ignore\nexport const CHARACTER_EXP_LEVELS = {\n  slow: [\n    0,\n    3000,\n    7500,\n    14000,\n    23000,\n    35000,\n    53000,\n    77000,\n    115000,\n    160000,\n    235000,\n    330000,\n    475000,\n    665000,\n    955000,\n    1350000,\n    1900000,\n    2700000,\n    3850000,\n    5350000,\n  ],\n  medium: [\n    0,\n    2000,\n    5000,\n    9000,\n    15000,\n    23000,\n    35000,\n    51000,\n    75000,\n    105000,\n    155000,\n    220000,\n    315000,\n    445000,\n    635000,\n    890000,\n    1300000,\n    1800000,\n    2550000,\n    3600000,\n  ],\n  fast: [\n    0,\n    1300,\n    3300,\n    6000,\n    10000,\n    15000,\n    23000,\n    34000,\n    50000,\n    71000,\n    105000,\n    145000,\n    210000,\n    295000,\n    425000,\n    600000,\n    850000,\n    1200000,\n    1700000,\n    2400000,\n  ],\n};\n\n/**\n * An array of Challenge Rating XP Levels\n */\n// prettier-ignore\nexport const CR_EXP_LEVELS = [\n  200,\n  400,\n  600,\n  800,\n  1200,\n  1600,\n  2400,\n  3200,\n  4800,\n  6400,\n  9600,\n  12800,\n  19200,\n  25600,\n  38400,\n  51200,\n  76800,\n  102400,\n  153600,\n  204800,\n  307200,\n  409600,\n  614400,\n  819200,\n  1228800,\n  1638400,\n  2457600,\n  3276800,\n  4915200,\n  6553600,\n  9830400,\n];\n\nexport const temporaryRollDataFields = {\n  actor: [\n    \"d20\",\n    \"attackBonus\",\n    \"attackCount\",\n    \"formulaicAttack\",\n    \"damageBonus\",\n    \"pointBlankBonus\",\n    \"rapidShotPenalty\",\n    \"powerAttackBonus\",\n    \"powerAttackPenalty\",\n    \"conditionals\",\n    \"concentrationBonus\",\n    \"formulaBonus\",\n    \"dcBonus\",\n    \"chargeCostBonus\",\n    \"chargeCost\",\n    \"sizeBonus\",\n    \"bonus\",\n    \"critMult\",\n    \"ablMult\",\n    \"ablDamage\",\n    \"cl\",\n    \"sl\",\n    \"class\",\n    \"ablMod\",\n    \"item\",\n    \"action\",\n    \"level\",\n    \"mod\",\n  ],\n};\n\nexport const defaultIcons = {\n  items: {\n    attack: \"icons/svg/explosion.svg\",\n    buff: \"icons/svg/ice-aura.svg\",\n    class: \"icons/svg/paralysis.svg\",\n    consumable: \"icons/svg/tankard.svg\",\n    container: \"icons/svg/barrel.svg\",\n    equipment: \"icons/svg/combat.svg\",\n    feat: \"icons/svg/book.svg\",\n    loot: \"icons/svg/item-bag.svg\",\n    race: \"icons/svg/wing.svg\",\n    spell: \"icons/svg/daze.svg\",\n    weapon: \"icons/svg/sword.svg\",\n  },\n  actors: {\n    character: \"icons/svg/mystery-man.svg\",\n    npc: \"icons/svg/terror.svg\",\n    haunt: \"icons/svg/stoned.svg\",\n    basic: \"icons/svg/castle.svg\",\n    trap: \"icons/svg/net.svg\",\n    vehicle: \"icons/svg/stone-path.svg\",\n  },\n};\n\n/**\n * Sheet item section configuration.\n */\nexport const sheetSections = {\n  classes: {\n    class: {\n      label: \"PF1.ClassPlural\",\n      filters: [{ type: \"class\" }],\n      interface: {\n        types: true,\n        level: true,\n        create: true,\n      },\n      create: { type: \"class\", system: { subType: \"base\" } },\n      sort: 1_000,\n    },\n  },\n  combat: {\n    weapon: {\n      label: \"PF1.Subtypes.Item.attack.weapon.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"weapon\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\", proficient: true } },\n      sort: 1_000,\n    },\n    natural: {\n      label: \"PF1.Subtypes.Item.attack.natural.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"natural\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"natural\" } },\n      sort: 2_000,\n    },\n    ability: {\n      label: \"PF1.Subtypes.Item.attack.ability.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"ability\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"ability\" } },\n      sort: 3_000,\n    },\n    racialAbility: {\n      label: \"PF1.Subtypes.Item.attack.racialAbility.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"racialAbility\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"racialAbility\" } },\n      sort: 4_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.attack.item.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"item\" } },\n      sort: 5_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.attack.misc.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"misc\" } },\n      sort: 6_000,\n    },\n  },\n  inventory: {\n    weapon: {\n      label: \"PF1.InventoryWeapons\",\n      filters: [{ type: \"weapon\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n      },\n      create: { type: \"weapon\", system: { subType: \"simple\" } },\n      sort: 1_000,\n    },\n    armor: {\n      label: \"PF1.ArmorOrShield\",\n      filters: [{ type: \"equipment\", subTypes: [\"armor\", \"shield\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      create: { type: \"equipment\", system: { subType: \"armor\", equipmentSubtype: \"lightArmor\", slot: \"\" } },\n      sort: 2_000,\n    },\n    equipment: {\n      label: \"PF1.InventoryEquipment\",\n      filters: [{ type: \"equipment\", subTypes: [\"wondrous\", \"other\", \"clothing\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      create: { type: \"equipment\", system: { subType: \"wondrous\", slot: \"slotless\" } },\n      sort: 3_000,\n    },\n    implants: {\n      label: \"PF1.InventoryImplants\",\n      filters: [{ type: \"implant\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      labels: {\n        equip: \"PF1.Implanted\",\n      },\n      create: { type: \"implant\", system: { subType: \"cybertech\" } },\n      sort: 4_000,\n    },\n    consumable: {\n      label: \"PF1.InventoryConsumables\",\n      filters: [{ type: \"consumable\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: false,\n      },\n      create: { type: \"consumable\" },\n      sort: 5_000,\n    },\n    gear: {\n      label: \"PF1.Subtypes.Item.loot.gear.Plural\",\n      filters: [\n        {\n          type: \"loot\",\n          subTypes: [\"gear\", \"adventuring\", \"tool\", \"reagent\", \"remedy\", \"herb\", \"animal\", \"animalGear\"],\n        },\n      ],\n      interface: {\n        create: true,\n        actions: true,\n        equip: () => !pf1.config.unequippableLoot.includes(\"gear\"),\n      },\n      create: { type: \"loot\", system: { subType: \"gear\" } },\n      sort: 6_000,\n    },\n    ammo: {\n      label: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"ammo\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: () => !pf1.config.unequippableLoot.includes(\"ammo\"),\n      },\n      create: { type: \"loot\", system: { subType: \"ammo\" } },\n      sort: 8_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.loot.misc.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"misc\", \"food\", \"entertainment\", \"vehicle\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true, // Misc covers more than just misc loot\n      },\n      create: { type: \"loot\", system: { subType: \"misc\" } },\n      sort: 9_000,\n    },\n    tradeGoods: {\n      label: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"tradeGoods\", \"treasure\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: () => !pf1.config.unequippableLoot.includes(\"tradeGoods\"),\n      },\n      create: { type: \"loot\", system: { subType: \"tradeGoods\" } },\n      sort: 15_000,\n    },\n    container: {\n      label: \"PF1.InventoryContainers\",\n      filters: [{ type: \"container\" }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true,\n      },\n      create: { type: \"container\" },\n      sort: 20_000,\n    },\n  },\n  features: {\n    feat: {\n      label: \"PF1.Subtypes.Item.feat.feat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"feat\" } },\n      sort: 2_000,\n    },\n    classFeat: {\n      label: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"classFeat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"classFeat\" } },\n      sort: 1_000,\n    },\n    trait: {\n      label: \"PF1.Subtypes.Item.feat.trait.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"trait\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"trait\" } },\n      sort: 3_000,\n    },\n    racial: {\n      label: \"PF1.Subtypes.Item.feat.racial.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"racial\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"racial\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.feat.misc.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"misc\" } },\n      sort: 15_000,\n    },\n    template: {\n      label: \"PF1.Subtypes.Item.feat.template.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"template\"] }],\n      interface: {\n        create: true,\n        actions: false,\n      },\n      create: { type: \"feat\", system: { subType: \"template\" } },\n      sort: 6_000,\n    },\n  },\n  buffs: {\n    feat: {\n      label: \"PF1.Subtypes.Item.buff.feat.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"feat\" } },\n      sort: 5_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.buff.item.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"item\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.buff.misc.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"misc\" } },\n      sort: 10_000,\n    },\n    perm: {\n      label: \"PF1.Subtypes.Item.buff.perm.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"perm\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"perm\" } },\n      sort: 6_000,\n    },\n    spell: {\n      label: \"PF1.Subtypes.Item.buff.spell.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"spell\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"spell\" } },\n      sort: 2_000,\n    },\n    temp: {\n      label: \"PF1.Subtypes.Item.buff.temp.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"temp\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"temp\" } },\n      sort: 1_000,\n    },\n  },\n  // Spells section is not used quite like the others\n  spells: {\n    spell: {\n      interface: {\n        create: true,\n      },\n      create: { type: \"spell\", system: { school: \"abj\" } },\n    },\n  },\n  // Lite sheet and secondary sheet items\n  combatlite: {\n    attacks: {\n      label: \"PF1.AbilityPlural\",\n      filters: [{ type: \"attack\" }],\n      interface: {\n        create: true,\n        types: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\", proficient: true } },\n    },\n  },\n  // Misc section is only informal for sheet handling of special cases\n  misc: {\n    race: {\n      create: { type: \"race\" },\n    },\n  },\n};\n\n/** @type {Record<string,string>} - Class ID to name mappings */\nexport const classNames = {};\n\n// Update classNames with pack contents, leave any other mapping filling to modules and content owners\nHooks.once(\"ready\", async () => {\n  const index = await game.packs.get(\"pf1.classes\").getIndex({ fields: [\"system.tag\", \"system.subType\"] });\n\n  index.forEach((e) => {\n    if (e.system?.subType && ![\"base\", \"npc\"].includes(e.system?.subType)) return;\n\n    const tag = e.system?.tag;\n    if (!tag) return;\n\n    pf1.config.classNames[tag] = e.name;\n  });\n});\n\n// Prepare sheet sections with data available later\n// ... allowing module modification also.\nHooks.once(\"setup\", () => {\n  for (const [catKey, category] of Object.entries(sheetSections)) {\n    for (const [sectKey, section] of Object.entries(category)) {\n      section.category = catKey;\n      section.id = sectKey;\n      section.path = `${catKey}.${sectKey}`;\n\n      section.label = game.i18n.localize(section.label);\n\n      const iface = section.interface;\n      if (typeof iface?.equip === \"function\") {\n        iface.equip = iface.equip();\n      }\n    }\n  }\n});\n","/**\n * Action type to change context mapping.\n *\n * @see {@link pf1.documents.item.ItemPF.prototype.getContextChanges}\n */\nexport const actionTypeToContext = {\n  mwak: \"mwdamage\",\n  twak: \"twdamage\",\n  rwak: \"rwdamage\",\n  msak: \"sdamage\",\n  rsak: \"sdamage\",\n  spellsave: \"sdamage\",\n};\n\n/**\n * Message visibility\n *\n * Message visibility mode (roll mode) to non-roll message mapping.\n *\n * This will be obsoleted by Foundry ~v13\n */\nexport const messageVisibility = {\n  publicroll: \"PF1.Chat.Visibility.Public\",\n  gmroll: \"PF1.Chat.Visibility.Private\",\n  blindroll: \"PF1.Chat.Visibility.Blind\",\n  selfroll: \"PF1.Chat.Visibility.Self\",\n};\n","import { naturalSort } from \"@utils\";\n\n/**\n * @typedef {object} FilterChoice\n * @property {string} label - The label for this choice visible to the user; will be localized\n * @property {string} key - The key for this choice used to identify it\n * @property {boolean} [active] - Whether this choice is currently active\n */\n\n/**\n * A basic filter class containing common functionality for all filters.\n *\n * Inheriting classes should define the following static properties: {@link label}, {@link indexField}.\n * Inheriting classes may define the following static properties: {@link type}.\n *\n * @abstract\n */\nexport class BaseFilter {\n  /**\n   * The label for this filter visible to the user.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static label = \"\";\n\n  /**\n   * The field this filter checks against its choices.\n   * Will also be added to the `compendiumIndexFields` of the document's `CONFIG` object.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static indexField = \"\";\n\n  /**\n   * A convenience property to define a single `type` this filter applies to.\n   *\n   * @see {@link types}\n   * @see {@link handledTypes}\n   */\n  static type = \"\";\n\n  /**\n   * The `type`s of document this filter applies to.\n   *\n   * @see {Actor#type}\n   * @see {Item#type}\n   * @see {@link handledTypes}\n   * @type {string[]}\n   */\n  static types = [];\n\n  /**\n   * The handlebars template used to render this filter.\n   *\n   * @type {string}\n   */\n  static TEMPLATE = \"\";\n\n  /**\n   * The ID of this filter used to identify it in its browser's filters.\n   *\n   * @type {string}\n   */\n  id;\n\n  /**\n   * A {@link Collection} of {@link FilterChoice}s for this filter.\n   *\n   * @type {Collection<FilterChoice> | null}\n   */\n  choices = null;\n\n  /**\n   * A reference to the {@link CompendiumBrowser} this filter is used in.\n   *\n   * @type {pf1.applications.compendiumBrowser.CompendiumBrowser | null}\n   */\n  compendiumBrowser = null;\n\n  /**\n   * @param {pf1.applications.compendiumBrowser.CompendiumBrowser} compendiumBrowser - The compendium browser this filter is used in.\n   */\n  constructor(compendiumBrowser) {\n    this.compendiumBrowser = compendiumBrowser;\n    Object.defineProperty(this, \"id\", { value: foundry.utils.randomID(), writable: false, configurable: false });\n    this.registerIndexFields();\n  }\n\n  /**\n   * The authoritative `Set` of `type`s this filter applies to.\n   *\n   * @type {Set<string>}\n   */\n  static get handledTypes() {\n    return new Set([this.type, ...this.types].filter((type) => type));\n  }\n\n  /**\n   * Whether this filter has any active choices.\n   *\n   * @type {boolean}\n   */\n  get active() {\n    return this.choices?.some((choice) => choice.active) ?? false;\n  }\n\n  /**\n   * The number of active choices.\n   *\n   * @type {number}\n   */\n  get activeChoiceCount() {\n    return this.choices?.filter((choice) => choice.active).length ?? 0;\n  }\n\n  /**\n   * Adds the index fields checked by this filter to the document's `CONFIG` object,\n   * so that {@link CompendiumCollection#getIndex} will include them.\n   */\n  registerIndexFields() {\n    if (!this.compendiumBrowser) return;\n    const documentName = this.compendiumBrowser.constructor.documentName;\n\n    // Fields with double underscore are added in the mapping process and not part of Foundry's index\n    if (this.constructor.indexField.startsWith(\"__\")) return;\n\n    const compendiumIndexFields = CONFIG[documentName]?.compendiumIndexFields;\n    if (\n      compendiumIndexFields &&\n      this.constructor.indexField &&\n      !compendiumIndexFields.includes(this.constructor.indexField)\n    ) {\n      compendiumIndexFields?.push(this.constructor.indexField);\n    }\n  }\n\n  /**\n   * Prepare the filter for use.\n   * This step expects the compendium browser to have gathered its entries.\n   */\n  setup() {\n    this.prepareChoices();\n  }\n\n  /**\n   * Prepare the choices for this filter. This is called after the compendium browser has gathered its entries.\n   * By default, this will generate a list of choices from the index field of all entries in the compendium.\n   */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection();\n  }\n\n  /**\n   * Returns whether this filter has _more than_ the given number of choices.\n   * Defaults to 1, as a single choice allows for no real filtering.\n   *\n   * @param {number} [number=1] - The number of choices to check for\n   * @returns {boolean} - Whether this filter has more than the given number of choices\n   */\n  hasChoices(number = 1) {\n    return this.choices?.size > number;\n  }\n\n  /**\n   * Reset all choices and controls to their default state (inactive)\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Check whether an entry matches this filter.\n   * If the filter is not active, this will always return true.\n   *\n   * @abstract\n   * @param {object} entry - The entry to check against this filter\n   * @returns {boolean} - Whether the entry matches this filter\n   */\n  applyFilter(entry) {}\n\n  /**\n   * Provide data necessary to render this filter.\n   * The data object generated by {@link BaseFilter#getData} contains the minimum data not only required\n   * by the filter itself, but also by the rendering {@link CompendiumBrowser}.\n   *\n   * @returns {object}} The data object for this filter\n   */\n  getData() {\n    return {\n      id: this.id,\n      template: this.constructor.TEMPLATE,\n      label: game.i18n.localize(this.constructor.label),\n      active: this.active,\n      activeCount: this.activeChoiceCount,\n      choices: this.choices?.contents ?? [],\n      field: this.constructor.indexField,\n    };\n  }\n\n  /**\n   * Activate event listeners for this filter.\n   *\n   * @abstract\n   * @param {HTMLElement} html - The rendered HTML element for this filter only\n   */\n  activateListeners(html) {}\n}\n","// https://github.com/farzher/fuzzysort v2.0.4\r\n/*\r\n  SublimeText-like Fuzzy Search\r\n\r\n  fuzzysort.single('fs', 'Fuzzy Search') // {score: -16}\r\n  fuzzysort.single('test', 'test') // {score: 0}\r\n  fuzzysort.single('doesnt exist', 'target') // null\r\n\r\n  fuzzysort.go('mr', [{file:'Monitor.cpp'}, {file:'MeshRenderer.cpp'}], {key:'file'})\r\n  // [{score:-18, obj:{file:'MeshRenderer.cpp'}}, {score:-6009, obj:{file:'Monitor.cpp'}}]\r\n\r\n  fuzzysort.go('mr', ['Monitor.cpp', 'MeshRenderer.cpp'])\r\n  // [{score: -18, target: \"MeshRenderer.cpp\"}, {score: -6009, target: \"Monitor.cpp\"}]\r\n\r\n  fuzzysort.highlight(fuzzysort.single('fs', 'Fuzzy Search'), '<b>', '</b>')\r\n  // <b>F</b>uzzy <b>S</b>earch\r\n*/\r\n\r\n// UMD (Universal Module Definition) for fuzzysort\r\n;((root, UMD) => {\r\n  if(typeof define === 'function' && define.amd) define([], UMD)\r\n  else if(typeof module === 'object' && module.exports) module.exports = UMD()\r\n  else root['fuzzysort'] = UMD()\r\n})(this, _ => {\r\n  'use strict'\r\n\r\n  var single = (search, target) => {                                                                                                                                                                                                                        if(search=='farzher')return{target:\"farzher was here (^-^*)/\",score:0,_indexes:[0]}\r\n    if(!search || !target) return NULL\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    if(!isObj(target)) target = getPrepared(target)\r\n\r\n    var searchBitflags = preparedSearch.bitflags\r\n    if((searchBitflags & target._bitflags) !== searchBitflags) return NULL\r\n\r\n    return algorithm(preparedSearch, target)\r\n  }\r\n\r\n\r\n  var go = (search, targets, options) => {                                                                                                                                                                                                                  if(search=='farzher')return[{target:\"farzher was here (^-^*)/\",score:0,_indexes:[0],obj:targets?targets[0]:NULL}]\r\n    if(!search) return options&&options.all ? all(search, targets, options) : noResults\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    var searchBitflags = preparedSearch.bitflags\r\n    var containsSpace  = preparedSearch.containsSpace\r\n\r\n    var threshold = options&&options.threshold || INT_MIN\r\n    var limit     = options&&options['limit']  || INT_MAX // for some reason only limit breaks when minified\r\n\r\n    var resultsLen = 0; var limitedCount = 0\r\n    var targetsLen = targets.length\r\n\r\n    // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n\r\n    // options.key\r\n    if(options && options.key) {\r\n      var key = options.key\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n        var target = getValue(obj, key)\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result.score < threshold) continue\r\n\r\n        // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n        result = {target:result.target, _targetLower:'', _targetLowerCodes:NULL, _nextBeginningIndexes:NULL, _bitflags:0, score:result.score, _indexes:result._indexes, obj:obj} // hidden\r\n\r\n        if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n        else {\r\n          ++limitedCount\r\n          if(result.score > q.peek().score) q.replaceTop(result)\r\n        }\r\n      }\r\n\r\n    // options.keys\r\n    } else if(options && options.keys) {\r\n      var scoreFn = options['scoreFn'] || defaultScoreFn\r\n      var keys = options.keys\r\n      var keysLen = keys.length\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n        var objResults = new Array(keysLen)\r\n        for (var keyI = 0; keyI < keysLen; ++keyI) {\r\n          var key = keys[keyI]\r\n          var target = getValue(obj, key)\r\n          if(!target) { objResults[keyI] = NULL; continue }\r\n          if(!isObj(target)) target = getPrepared(target)\r\n\r\n          if((searchBitflags & target._bitflags) !== searchBitflags) objResults[keyI] = NULL\r\n          else objResults[keyI] = algorithm(preparedSearch, target)\r\n        }\r\n        objResults.obj = obj // before scoreFn so scoreFn can use it\r\n        var score = scoreFn(objResults)\r\n        if(score === NULL) continue\r\n        if(score < threshold) continue\r\n        objResults.score = score\r\n        if(resultsLen < limit) { q.add(objResults); ++resultsLen }\r\n        else {\r\n          ++limitedCount\r\n          if(score > q.peek().score) q.replaceTop(objResults)\r\n        }\r\n      }\r\n\r\n    // no keys\r\n    } else {\r\n      for(var i = 0; i < targetsLen; ++i) { var target = targets[i]\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result.score < threshold) continue\r\n        if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n        else {\r\n          ++limitedCount\r\n          if(result.score > q.peek().score) q.replaceTop(result)\r\n        }\r\n      }\r\n    }\r\n\r\n    if(resultsLen === 0) return noResults\r\n    var results = new Array(resultsLen)\r\n    for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n    results.total = resultsLen + limitedCount\r\n    return results\r\n  }\r\n\r\n\r\n  var highlight = (result, hOpen, hClose) => {\r\n    if(typeof hOpen === 'function') return highlightCallback(result, hOpen)\r\n    if(result === NULL) return NULL\r\n    if(hOpen === undefined) hOpen = '<b>'\r\n    if(hClose === undefined) hClose = '</b>'\r\n    var highlighted = ''\r\n    var matchesIndex = 0\r\n    var opened = false\r\n    var target = result.target\r\n    var targetLen = target.length\r\n    var indexes = result._indexes\r\n    indexes = indexes.slice(0, indexes.len).sort((a,b)=>a-b)\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n      if(indexes[matchesIndex] === i) {\r\n        ++matchesIndex\r\n        if(!opened) { opened = true\r\n          highlighted += hOpen\r\n        }\r\n\r\n        if(matchesIndex === indexes.length) {\r\n          highlighted += char + hClose + target.substr(i+1)\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false\r\n          highlighted += hClose\r\n        }\r\n      }\r\n      highlighted += char\r\n    }\r\n\r\n    return highlighted\r\n  }\r\n  var highlightCallback = (result, cb) => {\r\n    if(result === NULL) return NULL\r\n    var target = result.target\r\n    var targetLen = target.length\r\n    var indexes = result._indexes\r\n    indexes = indexes.slice(0, indexes.len).sort((a,b)=>a-b)\r\n    var highlighted = ''\r\n    var matchI = 0\r\n    var indexesI = 0\r\n    var opened = false\r\n    var result = []\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n      if(indexes[indexesI] === i) {\r\n        ++indexesI\r\n        if(!opened) { opened = true\r\n          result.push(highlighted); highlighted = ''\r\n        }\r\n\r\n        if(indexesI === indexes.length) {\r\n          highlighted += char\r\n          result.push(cb(highlighted, matchI++)); highlighted = ''\r\n          result.push(target.substr(i+1))\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false\r\n          result.push(cb(highlighted, matchI++)); highlighted = ''\r\n        }\r\n      }\r\n      highlighted += char\r\n    }\r\n    return result\r\n  }\r\n\r\n\r\n  var indexes = result => result._indexes.slice(0, result._indexes.len).sort((a,b)=>a-b)\r\n\r\n\r\n  var prepare = (target) => {\r\n    if(typeof target !== 'string') target = ''\r\n    var info = prepareLowerInfo(target)\r\n    return {'target':target, _targetLower:info._lower, _targetLowerCodes:info.lowerCodes, _nextBeginningIndexes:NULL, _bitflags:info.bitflags, 'score':NULL, _indexes:[0], 'obj':NULL} // hidden\r\n  }\r\n\r\n\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n\r\n\r\n  var prepareSearch = (search) => {\r\n    if(typeof search !== 'string') search = ''\r\n    search = search.trim()\r\n    var info = prepareLowerInfo(search)\r\n\r\n    var spaceSearches = []\r\n    if(info.containsSpace) {\r\n      var searches = search.split(/\\s+/)\r\n      searches = [...new Set(searches)] // distinct\r\n      for(var i=0; i<searches.length; i++) {\r\n        if(searches[i] === '') continue\r\n        var _info = prepareLowerInfo(searches[i])\r\n        spaceSearches.push({lowerCodes:_info.lowerCodes, _lower:searches[i].toLowerCase(), containsSpace:false})\r\n      }\r\n    }\r\n\r\n    return {lowerCodes: info.lowerCodes, bitflags: info.bitflags, containsSpace: info.containsSpace, _lower: info._lower, spaceSearches: spaceSearches}\r\n  }\r\n\r\n\r\n\r\n  var getPrepared = (target) => {\r\n    if(target.length > 999) return prepare(target) // don't cache huge targets\r\n    var targetPrepared = preparedCache.get(target)\r\n    if(targetPrepared !== undefined) return targetPrepared\r\n    targetPrepared = prepare(target)\r\n    preparedCache.set(target, targetPrepared)\r\n    return targetPrepared\r\n  }\r\n  var getPreparedSearch = (search) => {\r\n    if(search.length > 999) return prepareSearch(search) // don't cache huge searches\r\n    var searchPrepared = preparedSearchCache.get(search)\r\n    if(searchPrepared !== undefined) return searchPrepared\r\n    searchPrepared = prepareSearch(search)\r\n    preparedSearchCache.set(search, searchPrepared)\r\n    return searchPrepared\r\n  }\r\n\r\n\r\n  var all = (search, targets, options) => {\r\n    var results = []; results.total = targets.length\r\n\r\n    var limit = options && options.limit || INT_MAX\r\n\r\n    if(options && options.key) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var target = getValue(obj, options.key)\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n        target.score = INT_MIN\r\n        target._indexes.len = 0\r\n        var result = target\r\n        result = {target:result.target, _targetLower:'', _targetLowerCodes:NULL, _nextBeginningIndexes:NULL, _bitflags:0, score:target.score, _indexes:NULL, obj:obj} // hidden\r\n        results.push(result); if(results.length >= limit) return results\r\n      }\r\n    } else if(options && options.keys) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var objResults = new Array(options.keys.length)\r\n        for (var keyI = options.keys.length - 1; keyI >= 0; --keyI) {\r\n          var target = getValue(obj, options.keys[keyI])\r\n          if(!target) { objResults[keyI] = NULL; continue }\r\n          if(!isObj(target)) target = getPrepared(target)\r\n          target.score = INT_MIN\r\n          target._indexes.len = 0\r\n          objResults[keyI] = target\r\n        }\r\n        objResults.obj = obj\r\n        objResults.score = INT_MIN\r\n        results.push(objResults); if(results.length >= limit) return results\r\n      }\r\n    } else {\r\n      for(var i=0;i<targets.length;i++) { var target = targets[i]\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n        target.score = INT_MIN\r\n        target._indexes.len = 0\r\n        results.push(target); if(results.length >= limit) return results\r\n      }\r\n    }\r\n\r\n    return results\r\n  }\r\n\r\n\r\n  var algorithm = (preparedSearch, prepared, allowSpaces=false) => {\r\n    if(allowSpaces===false && preparedSearch.containsSpace) return algorithmSpaces(preparedSearch, prepared)\r\n\r\n    var searchLower = preparedSearch._lower\r\n    var searchLowerCodes = preparedSearch.lowerCodes\r\n    var searchLowerCode = searchLowerCodes[0]\r\n    var targetLowerCodes = prepared._targetLowerCodes\r\n    var searchLen = searchLowerCodes.length\r\n    var targetLen = targetLowerCodes.length\r\n    var searchI = 0 // where we at\r\n    var targetI = 0 // where you at\r\n    var matchesSimpleLen = 0\r\n\r\n    // very basic fuzzy match; to remove non-matching targets ASAP!\r\n    // walk through target. find sequential matches.\r\n    // if all chars aren't found then exit\r\n    for(;;) {\r\n      var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n      if(isMatch) {\r\n        matchesSimple[matchesSimpleLen++] = targetI\r\n        ++searchI; if(searchI === searchLen) break\r\n        searchLowerCode = searchLowerCodes[searchI]\r\n      }\r\n      ++targetI; if(targetI >= targetLen) return NULL // Failed to find searchI\r\n    }\r\n\r\n    var searchI = 0\r\n    var successStrict = false\r\n    var matchesStrictLen = 0\r\n\r\n    var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n    if(nextBeginningIndexes === NULL) nextBeginningIndexes = prepared._nextBeginningIndexes = prepareNextBeginningIndexes(prepared.target)\r\n    var firstPossibleI = targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n\r\n    // Our target string successfully matched all characters in sequence!\r\n    // Let's try a more advanced and strict test to improve the score\r\n    // only count it as a match if it's consecutive or a beginning character!\r\n    var backtrackCount = 0\r\n    if(targetI !== targetLen) for(;;) {\r\n      if(targetI >= targetLen) {\r\n        // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n        if(searchI <= 0) break // We failed to push chars forward for a better match\r\n\r\n        ++backtrackCount; if(backtrackCount > 200) break // exponential backtracking is taking too long, just give up and return a bad match\r\n\r\n        --searchI\r\n        var lastMatch = matchesStrict[--matchesStrictLen]\r\n        targetI = nextBeginningIndexes[lastMatch]\r\n\r\n      } else {\r\n        var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI]\r\n        if(isMatch) {\r\n          matchesStrict[matchesStrictLen++] = targetI\r\n          ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n          ++targetI\r\n        } else {\r\n          targetI = nextBeginningIndexes[targetI]\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if it's a substring match\r\n    var substringIndex = prepared._targetLower.indexOf(searchLower, matchesSimple[0]) // perf: this is slow\r\n    var isSubstring = ~substringIndex\r\n    if(isSubstring && !successStrict) { // rewrite the indexes from basic to the substring\r\n      for(var i=0; i<matchesSimpleLen; ++i) matchesSimple[i] = substringIndex+i\r\n    }\r\n    var isSubstringBeginning = false\r\n    if(isSubstring) {\r\n      isSubstringBeginning = prepared._nextBeginningIndexes[substringIndex-1] === substringIndex\r\n    }\r\n\r\n    { // tally up the score & keep track of matches for highlighting later\r\n      if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen }\r\n      else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen }\r\n\r\n      var score = 0\r\n\r\n      var extraMatchGroupCount = 0\r\n      for(var i = 1; i < searchLen; ++i) {\r\n        if(matchesBest[i] - matchesBest[i-1] !== 1) {score -= matchesBest[i]; ++extraMatchGroupCount}\r\n      }\r\n      var unmatchedDistance = matchesBest[searchLen-1] - matchesBest[0] - (searchLen-1)\r\n\r\n      score -= (12+unmatchedDistance) * extraMatchGroupCount // penality for more groups\r\n\r\n      if(matchesBest[0] !== 0) score -= matchesBest[0]*matchesBest[0]*.2 // penality for not starting near the beginning\r\n\r\n      if(!successStrict) {\r\n        score *= 1000\r\n      } else {\r\n        // successStrict on a target with too many beginning indexes loses points for being a bad target\r\n        var uniqueBeginningIndexes = 1\r\n        for(var i = nextBeginningIndexes[0]; i < targetLen; i=nextBeginningIndexes[i]) ++uniqueBeginningIndexes\r\n\r\n        if(uniqueBeginningIndexes > 24) score *= (uniqueBeginningIndexes-24)*10 // quite arbitrary numbers here ...\r\n      }\r\n\r\n      if(isSubstring)          score /= 1+searchLen*searchLen*1 // bonus for being a full substring\r\n      if(isSubstringBeginning) score /= 1+searchLen*searchLen*1 // bonus for substring starting on a beginningIndex\r\n\r\n      score -= targetLen - searchLen // penality for longer targets\r\n      prepared.score = score\r\n\r\n      for(var i = 0; i < matchesBestLen; ++i) prepared._indexes[i] = matchesBest[i]\r\n      prepared._indexes.len = matchesBestLen\r\n\r\n      return prepared\r\n    }\r\n  }\r\n  var algorithmSpaces = (preparedSearch, target) => {\r\n    var seen_indexes = new Set()\r\n    var score = 0\r\n    var result = NULL\r\n\r\n    var first_seen_index_last_search = 0\r\n    var searches = preparedSearch.spaceSearches\r\n    for(var i=0; i<searches.length; ++i) {\r\n      var search = searches[i]\r\n\r\n      result = algorithm(search, target)\r\n      if(result === NULL) return NULL\r\n\r\n      score += result.score\r\n\r\n      // dock points based on order otherwise \"c man\" returns Manifest.cpp instead of CheatManager.h\r\n      if(result._indexes[0] < first_seen_index_last_search) {\r\n        score -= first_seen_index_last_search - result._indexes[0]\r\n      }\r\n      first_seen_index_last_search = result._indexes[0]\r\n\r\n      for(var j=0; j<result._indexes.len; ++j) seen_indexes.add(result._indexes[j])\r\n    }\r\n\r\n    // allows a search with spaces that's an exact substring to score well\r\n    var allowSpacesResult = algorithm(preparedSearch, target, /*allowSpaces=*/true)\r\n    if(allowSpacesResult !== NULL && allowSpacesResult.score > score) {\r\n      return allowSpacesResult\r\n    }\r\n\r\n    result.score = score\r\n\r\n    var i = 0\r\n    for (let index of seen_indexes) result._indexes[i++] = index\r\n    result._indexes.len = i\r\n\r\n    return result\r\n  }\r\n\r\n\r\n  var prepareLowerInfo = (str) => {\r\n    var strLen = str.length\r\n    var lower = str.toLowerCase()\r\n    var lowerCodes = [] // new Array(strLen)    sparse array is too slow\r\n    var bitflags = 0\r\n    var containsSpace = false // space isn't stored in bitflags because of how searching with a space works\r\n\r\n    for(var i = 0; i < strLen; ++i) {\r\n      var lowerCode = lowerCodes[i] = lower.charCodeAt(i)\r\n\r\n      if(lowerCode === 32) {\r\n        containsSpace = true\r\n        continue // it's important that we don't set any bitflags for space\r\n      }\r\n\r\n      var bit = lowerCode>=97&&lowerCode<=122 ? lowerCode-97 // alphabet\r\n              : lowerCode>=48&&lowerCode<=57  ? 26           // numbers\r\n                                                             // 3 bits available\r\n              : lowerCode<=127                ? 30           // other ascii\r\n              :                                 31           // other utf8\r\n      bitflags |= 1<<bit\r\n    }\r\n\r\n    return {lowerCodes:lowerCodes, bitflags:bitflags, containsSpace:containsSpace, _lower:lower}\r\n  }\r\n  var prepareBeginningIndexes = (target) => {\r\n    var targetLen = target.length\r\n    var beginningIndexes = []; var beginningIndexesLen = 0\r\n    var wasUpper = false\r\n    var wasAlphanum = false\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      var targetCode = target.charCodeAt(i)\r\n      var isUpper = targetCode>=65&&targetCode<=90\r\n      var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57\r\n      var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum\r\n      wasUpper = isUpper\r\n      wasAlphanum = isAlphanum\r\n      if(isBeginning) beginningIndexes[beginningIndexesLen++] = i\r\n    }\r\n    return beginningIndexes\r\n  }\r\n  var prepareNextBeginningIndexes = (target) => {\r\n    var targetLen = target.length\r\n    var beginningIndexes = prepareBeginningIndexes(target)\r\n    var nextBeginningIndexes = [] // new Array(targetLen)     sparse array is too slow\r\n    var lastIsBeginning = beginningIndexes[0]\r\n    var lastIsBeginningI = 0\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      if(lastIsBeginning > i) {\r\n        nextBeginningIndexes[i] = lastIsBeginning\r\n      } else {\r\n        lastIsBeginning = beginningIndexes[++lastIsBeginningI]\r\n        nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning\r\n      }\r\n    }\r\n    return nextBeginningIndexes\r\n  }\r\n\r\n\r\n  var cleanup = () => { preparedCache.clear(); preparedSearchCache.clear(); matchesSimple = []; matchesStrict = [] }\r\n\r\n  var preparedCache       = new Map()\r\n  var preparedSearchCache = new Map()\r\n  var matchesSimple = []; var matchesStrict = []\r\n\r\n\r\n  // for use with keys. just returns the maximum score\r\n  var defaultScoreFn = (a) => {\r\n    var max = INT_MIN\r\n    var len = a.length\r\n    for (var i = 0; i < len; ++i) {\r\n      var result = a[i]; if(result === NULL) continue\r\n      var score = result.score\r\n      if(score > max) max = score\r\n    }\r\n    if(max === INT_MIN) return NULL\r\n    return max\r\n  }\r\n\r\n  // prop = 'key'              2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n  // prop = 'key1.key2'        10ms\r\n  // prop = ['key1', 'key2']   27ms\r\n  var getValue = (obj, prop) => {\r\n    var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n    var segs = prop\r\n    if(!Array.isArray(prop)) segs = prop.split('.')\r\n    var len = segs.length\r\n    var i = -1\r\n    while (obj && (++i < len)) obj = obj[segs[i]]\r\n    return obj\r\n  }\r\n\r\n  var isObj = (x) => { return typeof x === 'object' } // faster as a function\r\n  // var INT_MAX = 9007199254740991; var INT_MIN = -INT_MAX\r\n  var INT_MAX = Infinity; var INT_MIN = -INT_MAX\r\n  var noResults = []; noResults.total = 0\r\n  var NULL = null\r\n\r\n\r\n  // Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\n  var fastpriorityqueue=r=>{var e=[],o=0,a={},v=r=>{for(var a=0,v=e[a],c=1;c<o;){var s=c+1;a=c,s<o&&e[s].score<e[c].score&&(a=s),e[a-1>>1]=e[a],c=1+(a<<1)}for(var f=a-1>>1;a>0&&v.score<e[f].score;f=(a=f)-1>>1)e[a]=e[f];e[a]=v};return a.add=(r=>{var a=o;e[o++]=r;for(var v=a-1>>1;a>0&&r.score<e[v].score;v=(a=v)-1>>1)e[a]=e[v];e[a]=r}),a.poll=(r=>{if(0!==o){var a=e[0];return e[0]=e[--o],v(),a}}),a.peek=(r=>{if(0!==o)return e[0]}),a.replaceTop=(r=>{e[0]=r,v()}),a}\r\n  var q = fastpriorityqueue() // reuse this\r\n\r\n\r\n  // fuzzysort is written this way for minification. all names are mangeled unless quoted\r\n  return {'single':single, 'go':go, 'highlight':highlight, 'prepare':prepare, 'indexes':indexes, 'cleanup':cleanup}\r\n}) // UMD\r\n\r\n// TODO: (feature) frecency\r\n// TODO: (perf) use different sorting algo depending on the # of results?\r\n// TODO: (perf) preparedCache is a memory leak\r\n// TODO: (like sublime) backslash === forwardslash\r\n// TODO: (perf) prepareSearch seems slow\r\n","import { naturalSort } from \"@utils\";\nimport { BaseFilter } from \"./filters/base.mjs\";\nimport fuzzysort from \"fuzzysort\";\n\n/**\n * The basic compendium browser class allowing the browsing of compendiums by utilising their indexes.\n *\n * Extending classes must define the following static properties if the browser is not meant to browse Item documents: {@link documentName}.\n * Extending classes should define the following static properties: {@link typeName}, {@link filterClasses}.\n *\n * @abstract\n */\nexport class CompendiumBrowser extends Application {\n  /**\n   * The document name of entries this browser displays.\n   *\n   * @abstract\n   * @type {\"Actor\" | \"Item\"}\n   */\n  static documentName = \"Item\";\n\n  /**\n   * A localisation string used in the browser's title.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static typeName;\n\n  /**\n   * An array of classes extending {@link BaseFilter} that should be used for this browser.\n   *\n   * @type {Array<typeof BaseFilter>}\n   */\n  static filterClasses = [];\n\n  /**\n   * The template used to render individual entries in the browser.\n   *\n   * @type {string}\n   */\n  static ENTRY_TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/entries.hbs\";\n\n  /**\n   * A `Promise` that resolves once all pack indexes have been loaded.\n   *\n   * @internal\n   * @type {Map<string, Promise<void>>}\n   */\n  static #indexingPromises = new Map();\n\n  /**\n   * The set of filters to apply to the compendium index.\n   *\n   * @type {Collection<BaseFilter>}\n   */\n  filters = new foundry.utils.Collection();\n\n  /**\n   * The types of entries this browser handles, as per a document's `type` property.\n   *\n   * @type {Set<string>}\n   */\n  handledTypes = new Set();\n\n  /**\n   * Compendium packs this browser gets entries from.\n   *\n   * @type {CompendiumCollection[]}\n   */\n  packs = [];\n\n  /**\n   * A set of filters that were expanded by the user, and should stay expanded upon re-render.\n   *\n   * @type {Set<string>}\n   */\n  expandedFilters = new Set();\n\n  /**\n   * The {@link Collection} of index entries this browser is aware of.\n   *\n   * @readonly\n   * @type {Collection<IndexEntry>}\n   */\n  entries;\n\n  /**\n   * The current search query entered by the user.\n   *\n   * @private\n   * @type {string}\n   */\n  _query = \"\";\n\n  /**\n   * An object containing data used to render the loading spinner and related text.\n   *\n   * @private\n   * @type {object | null}\n   */\n  _loadingInfo = null;\n\n  /**\n   * Whether the browser and its data have been set up using {@link CompendiumBrowser.setup}.\n   *\n   * @private\n   * @internal\n   * @type {boolean}\n   */\n  #setup = false;\n\n  constructor(options = {}) {\n    super(options);\n    /**\n     * All index entries this compendium browser is aware of.\n     *\n     * @type {Collection<object>}\n     */\n    Object.defineProperty(this, \"entries\", { value: new Collection() });\n    this.initialize();\n    this._debouncedRender = foundry.utils.debounce(this.render, 300);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      template: \"systems/pf1/templates/apps/compendium-browser/compendium-browser.hbs\",\n      classes: [\"pf1\", \"app\", \"compendium-browser\"],\n      id: `pf1-compendium-browser-${this.name}`,\n      width: 800,\n      height: window.innerHeight - 60,\n      top: 30,\n      left: 40,\n      resizable: true,\n      scrollY: [\".filter-container\"],\n      dragDrop: [{ dragSelector: \".directory-item\", dropSelector: null }],\n    });\n  }\n\n  /**\n   * Initialize all {@link CompendiumBrowser}s found in {@link pf1.applications.compendiumBrowser}\n   * and register them in {@link pf1.applications.compendiums}.\n   */\n  static initializeBrowsers() {\n    const compendiums = pf1.applications.compendiums;\n    const compendiumClasses = pf1.applications.compendiumBrowser;\n    compendiums.items = new compendiumClasses.ItemBrowser();\n    compendiums.feats = new compendiumClasses.FeatBrowser();\n    compendiums.spells = new compendiumClasses.SpellBrowser();\n    compendiums.classes = new compendiumClasses.ClassBrowser();\n    compendiums.races = new compendiumClasses.RaceBrowser();\n    compendiums.bestiary = new compendiumClasses.CreatureBrowser();\n    compendiums.buffs = new compendiumClasses.BuffBrowser();\n  }\n\n  /**\n   * Request indexes of all packs of a document type to be loaded.\n   * This method should only ever be called as {@link CompendiumBrowser.getIndexes} to ensure Promises are properly bundled.\n   *\n   * @param {string[]} packNames - The names of the packs to load indexes for\n   * @see {@link CompendiumBrowser.#indexingPromise}\n   * @returns {Promise<void>} A `Promise` that resolves once all indexes have been loaded\n   */\n  static getIndexes(packNames = []) {\n    const packs = packNames.map((name) => game.packs.get(name));\n    const resultPromise = [];\n    for (const pack of packs) {\n      if (!this.#indexingPromises.has(pack.collection)) {\n        this.#indexingPromises.set(pack.collection, pack.getIndex());\n      }\n      resultPromise.push(this.#indexingPromises.get(pack.collection));\n    }\n    return Promise.all(resultPromise).finally(() => {\n      for (const pack of packs) {\n        this.#indexingPromises.delete(pack.collection);\n      }\n    });\n  }\n\n  /**\n   * Map an entry from a compendium to the format used by the browser.\n   *\n   * @param {object} entry - The entry to map\n   * @param {CompendiumCollection} pack - The compendium the entry is from\n   * @returns {IndexEntry} The mapped entry\n   */\n  static _mapEntry(entry, pack) {\n    // NOTE: This decouples the entry from the compendium; it will no longer be refreshed automatically, but changes will stick\n    const result = foundry.utils.deepClone(entry);\n    // Add default `system` data for the entry's type, as pruned compendium data omits default values\n    result.system = foundry.utils.mergeObject(game.model[this.documentName][entry.type], result.system, {\n      inplace: false,\n    });\n    // Add `pack` related fields to allow filtering by pack and label display\n    result.__pack = pack.collection;\n    result.__packLabel = pack.metadata.label;\n\n    result.__uuid = pack.getUuid(entry._id);\n    // Prepare `__name` field for fuzzy search optimisation\n    result.__name = fuzzysort.prepare(entry.name.normalize(\"NFKD\"));\n    return result;\n  }\n\n  /**\n   * Renders an array of {@link IndexEntry} objects into HTML.\n   *\n   * @private\n   * @param {IndexEntry[]} entries - The entries to render\n   * @returns {Promise<string>} The rendered HTML\n   */\n  static async _renderEntries(entries) {\n    return renderTemplate(this.ENTRY_TEMPLATE, { entries });\n  }\n\n  /** @inheritDoc */\n  get title() {\n    return game.i18n.format(\"PF1.CompendiumBrowserTitle\", { type: game.i18n.localize(this.constructor.typeName) });\n  }\n\n  /**\n   * Perform minimal preparation steps to initialize the compendium browser.\n   * Add filters and determine which compendiums include data relevant to this browser.\n   *\n   * @protected\n   */\n  initialize() {\n    this.filters?.clear();\n    for (const cls of this.constructor.filterClasses) {\n      if (!(cls.prototype instanceof BaseFilter)) {\n        throw new Error(`Filter class ${cls.name} does not extend BaseFilter`);\n      }\n      const filter = new cls(this);\n      this.filters.set(filter.id, filter);\n      // Add all types handled by that filter to the browser's list of handled types\n      cls.handledTypes.forEach((type) => this.handledTypes.add(type));\n    }\n    this.packs = game.packs.filter((pack) => this.isPackIncluded(pack));\n    this._loadingInfo = {\n      indexCount: this.packs.length,\n      entryCount: this.packs.reduce(\n        (acc, pack) => acc + pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length,\n        0\n      ),\n    };\n  }\n\n  /**\n   * Check whether a compendium should be included in the browser.\n   *\n   * @param {CompendiumCollection} pack - The compendium to test\n   * @returns {boolean} Whether the compendium should be included\n   */\n  isPackIncluded(pack) {\n    // Only include enabled packs with the right document type made for PF1\n    if (pack.config.pf1?.disabled) return false;\n    if (pack.documentName !== this.constructor.documentName) return false;\n    if (pack.metadata.system !== game.system.id) return false;\n\n    // Skip if pack is not visible to current user\n    if (!pack.visible) return false;\n\n    // Avoid unnecessarily adding packs that don't contain any relevant entries\n    if (pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length === 0) return false;\n\n    // Don't skip the compendium\n    return true;\n  }\n\n  /**\n   * Perform the initial setup of the compendium browser.\n   * This includes requesting the index of all relevant compendiums if necessary and preparing the filters.\n   *\n   * @returns {Promise<void>}\n   */\n  async setup() {\n    this.#setup = false;\n    this.entries?.clear();\n    await CompendiumBrowser.getIndexes(this.packs.map((pack) => pack.collection));\n    const unorderedEntries = await Promise.all(this.packs.map((pack) => this.loadPackIndex(pack)));\n    naturalSort(unorderedEntries.flat(), \"name\").forEach((entry) => this.entries.set(`${entry.__uuid}`, entry));\n    this.filters.forEach((filter) => filter.setup());\n    this.#setup = true;\n  }\n\n  /**\n   * Load a compendium's index to prepare it for browsing.\n   *\n   * @param {CompendiumCollection} pack - The compendium to load\n   * @returns {Promise<IndexEntry[]>} The loaded index entries\n   */\n  async loadPackIndex(pack) {\n    if (pack.indexed === false) await CompendiumBrowser.getIndexes(pack.collection);\n    const index = pack.index;\n    return index\n      .filter((entry) => this.handledTypes.has(entry.type))\n      .map((entry) => {\n        try {\n          return this.constructor._mapEntry(entry, pack);\n        } catch (err) {\n          Hooks.onError(`CompendiumBrowser#_mapEntry`, err, {\n            msg: `${this.constructor.name} failed to map entry ${entry.name} [${entry._id}] from pack ${pack.collection}`,\n            log: \"error\",\n            entry,\n            pack,\n          });\n          return null;\n        }\n      })\n      .filter((entry) => entry !== null);\n  }\n\n  /**\n   * Get the current set of entries allowed by the filters.\n   *\n   * @returns {IndexEntry[]} The filtered entries\n   */\n  getFilteredEntries() {\n    let entries = this.entries.contents;\n\n    const activeFilters = this.filters.filter((filter) => filter.active);\n    if (activeFilters.length)\n      entries = entries.filter((entry) => activeFilters.every((filter) => filter.applyFilter(entry)));\n\n    if (this._query) {\n      const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), {\n        numeric: true,\n        ignorePunctuation: true,\n      });\n      entries = fuzzysort\n        .go(this._query.normalize(\"NFKD\"), entries, { key: \"__name\", threshold: -10000 })\n        .sort((a, b) => {\n          // Sort by score first, then alphabetically by name\n          if (a.score !== b.score) return b.score - a.score;\n          else return collator.compare(a.obj.name, b.obj.name);\n        })\n        .map((match) => match.obj);\n    }\n\n    return entries;\n  }\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    // Identify the focused element\n    const focus = this.element?.[0]?.querySelector(\":focus\");\n    const selectionStart = focus?.selectionStart;\n\n    // Render the application and restore focus\n    await super._render(force, options);\n    if (focus && focus.name) {\n      const input = this._element[0].querySelector(`[name=\"${focus.name}\"]`);\n      if (input && input.focus instanceof Function) {\n        input.focus();\n        if (selectionStart) input.selectionStart = input.selectionEnd = selectionStart;\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  async getData() {\n    const context = await super.getData();\n    context.id = this.options.id;\n    context.query = this._query ?? \"\";\n    context.filters = this.filters\n      .filter((filter) => filter.hasChoices())\n      .map((filter) => ({\n        ...filter.getData(),\n        collapsed: this.expandedFilters.has(filter.id) ? \"\" : \"collapsed\",\n      }));\n\n    if (this.#setup) {\n      // Browser is set up, so we can render the entries\n      this._entries = this.getFilteredEntries();\n      context.entries = this._entries.slice(0, 100);\n      context.itemCount = this.entries.size;\n      context.filteredItemCount = this._entries.length;\n    } else {\n      // Browser is not set up, display a loading spinner\n      context.loading = true;\n      context.loadingInfo = this._loadingInfo;\n    }\n    return context;\n  }\n\n  _refocus = true;\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    /** @type {HTMLElement} */\n    const el = html[0];\n\n    if (this._priorState <= this.constructor.RENDER_STATES.NONE) this._refocus = true;\n\n    // If the browser is not set up yet, start the process and render again once it is done\n    if (!this.#setup) {\n      this.setup().then(() => this.render());\n      // No listeners have to be activated yet, so we can return here\n      return;\n    }\n\n    // Fix autofocus (the above re-render breaks it)\n    if (this._refocus) {\n      el.querySelector(\"[autofocus]\")?.focus();\n      this._refocus = false;\n    }\n\n    this._initLazyScrolling(el);\n\n    // Activate listeners for filters, allowing them to define their own\n    el.querySelectorAll(\".filter-content\").forEach((filterContent) => {\n      const filter = this.filters.get(filterContent.closest(\".filter\").dataset.filterId);\n      filter.activateListeners(filterContent);\n    });\n\n    el.querySelector(\".directory-list\").addEventListener(\"click\", (event) => {\n      this._onClickEntry(event);\n    });\n\n    el.querySelector(\"button.reload\").addEventListener(\"click\", (event) => {\n      this._onReload(event);\n    });\n\n    el.querySelector(\"button.clear-filters\").addEventListener(\"click\", (event) => {\n      this._onClearFilters(event);\n    });\n\n    el.querySelectorAll(\".filter>h3\").forEach((header) => {\n      header.addEventListener(\"click\", (event) => {\n        this._onFilterHeaderClick(event);\n      });\n    });\n\n    el.querySelector(\"input[name=filter]\")?.addEventListener(\"input\", (event) => {\n      this._onCustomSearchFilter(event);\n    });\n\n    ContextMenu.create(this, html, \".directory-item\", this._getEntryContextOptions());\n  }\n\n  /**\n   * Store the current search filter query and re-render the application.\n   *\n   * @private\n   * @param {Event} event - The originating change event\n   */\n  _onCustomSearchFilter(event) {\n    event.preventDefault();\n    this._query = event.target.value;\n    this._debouncedRender();\n  }\n\n  /**\n   * Handle a click on an entry in the compendium browser.\n   *\n   * @private\n   * @param {Event} event - The originating click Event\n   */\n  async _onClickEntry(event) {\n    const li = event.target.closest(\".directory-item\");\n    if (!li) return;\n    const { uuid } = li.dataset;\n    const document = await fromUuid(uuid);\n    const collection = game.packs.get(document.pack);\n    return document.sheet.render(true, { editable: game.user.isGM && !collection.locked, focus: true });\n  }\n\n  /**\n   * Get the set of ContextMenu options which should be used for the compendium browser's entries.\n   *\n   * @protected\n   * @returns {object[]} - The Array of ContextMenu options\n   */\n  _getEntryContextOptions() {\n    return [\n      {\n        name: \"COMPENDIUM.ImportEntry\",\n        icon: '<i class=\"fas fa-download\"></i>',\n        condition: () => getDocumentClass(this.constructor.documentName).canUserCreate(game.user),\n        callback: async (li) => {\n          const collection = game.collections.get(this.constructor.documentName);\n          const uuid = li.data(\"uuid\");\n          const entry = this.entries.get(uuid);\n          return collection.importFromCompendium(game.packs.get(entry.__pack), entry._id, {}, { renderSheet: true });\n        },\n      },\n      {\n        name: \"PF1.CopyUuidToClipboard\",\n        icon: '<i class=\"fas fa-id-badge\"></i>',\n        callback: (li) => {\n          const uuid = li.data(\"uuid\");\n          game.clipboard.copyPlainText(uuid);\n          const label = game.i18n.localize(getDocumentClass(this.constructor.documentName).metadata.label);\n          ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"uuid\", id: uuid }));\n        },\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /** @inheritDoc */\n  _onDragStart(event) {\n    const { uuid } = event.currentTarget.dataset;\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({\n        type: this.constructor.documentName,\n        uuid: uuid,\n      })\n    );\n\n    const html = this.element[0];\n    // Without the delay the following blocks the drag start\n    setTimeout(() => html.classList.add(\"active-drag\"), 0);\n    document.body.addEventListener(\"dragend\", () => html.classList.remove(\"active-drag\"), {\n      once: true,\n      passive: true,\n    });\n  }\n\n  /**\n   * Handle a click on the reset filters button, resetting all filters to their default state.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  _onClearFilters(_event) {\n    for (const filter of this.filters) {\n      filter.reset();\n    }\n    this._query = \"\";\n    this.expandedFilters.clear();\n    this.render();\n  }\n\n  /**\n   * Handle a click on the refresh button, re-running the setup process,\n   * and re-rendering the compendium browser afterwards.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  async _onReload(_event) {\n    this.#setup = false;\n    this.initialize();\n    this.render();\n  }\n\n  /**\n   * Handle a click on a filter's title to collapse or expand it.\n   *\n   * @private\n   * @param {Event} event - The originating click event\n   */\n  _onFilterHeaderClick(event) {\n    const { filterId } = event.target.closest(\".filter\").dataset;\n    const filterContents = event.target.closest(\".filter\").querySelector(\".filter-content\");\n    if (this.expandedFilters.has(filterId)) {\n      this.expandedFilters.delete(filterId);\n      filterContents.classList.add(\"collapsed\");\n    } else {\n      this.expandedFilters.add(filterId);\n      filterContents.classList.remove(\"collapsed\");\n    }\n  }\n\n  /**\n   * Initializes lazy loading of entries so that they are only rendered when close-ish to being visible.\n   *\n   * @private\n   * @param {HTMLElement} html - The HTML element to initialize lazy loading for\n   */\n  _initLazyScrolling(html) {\n    const listEnd = html.querySelector(\".directory-bottom\");\n    if (listEnd) {\n      new IntersectionObserver(\n        async ([entry], observer) => {\n          if (entry.isIntersecting) {\n            // Append more entries to the list\n            const currentCount = html.querySelectorAll(\".directory-item\").length;\n            const newEntries = this._entries.slice(currentCount, currentCount + 50);\n            if (newEntries.length === 0) {\n              // No more entries to load with current filters\n              observer.unobserve(listEnd);\n            } else {\n              const newHtml = await this.constructor._renderEntries(newEntries);\n              listEnd.insertAdjacentHTML(\"beforebegin\", newHtml);\n              this._dragDrop[0].bind(html);\n            }\n          }\n        },\n        { root: html.querySelector(\".directory-list\"), rootMargin: \"300px\" }\n      ).observe(listEnd);\n    }\n  }\n}\n\n/**\n * @typedef {object} IndexEntry\n * @property {string} _id - The entry's ID\n * @property {string} name - The entry's name\n * @property {string} type - The entry's type\n * @property {string} img - The entry's image\n * @property {string} __pack - The {@link CompendiumCollection} this entry is from\n * @property {string} __packLabel - The label of the {@link CompendiumCollection} this entry is from\n * @property {string} __uuid - The UUID of this entry\n */\n","import fuzzysort from \"fuzzysort\";\n\n/**\n * A specialized form used to select types.\n *\n * @type {DocumentSheet}\n */\nexport class ActorTraitSelector extends DocumentSheet {\n  _searchFilter = \"\";\n\n  /** @type {boolean} - Include language agnostic ID in search. */\n  static SEARCH_INCLUDE_ID = true;\n\n  constructor(doc, options) {\n    super(doc, options);\n    // Enrich dialog identity\n    this.options.classes.push(options.subject);\n\n    // Get current values\n    let { value, custom } = foundry.utils.getProperty(doc.toObject(), this.attribute) ?? { value: [], custom: [] };\n    value ||= [];\n    custom ||= [];\n\n    this.attributes = { value, custom };\n\n    const searchIndex = [];\n    for (const [id, label] of Object.entries(this.options.choices)) {\n      searchIndex.push({\n        id,\n        _id: fuzzysort.prepare(id.normalize(\"NFKD\")),\n        _name: fuzzysort.prepare(label.normalize(\"NFKD\")),\n      });\n    }\n    this._searchIndex = searchIndex;\n\n    this._collator = new Intl.Collator(game.i18n.lang, {\n      numeric: true,\n      ignorePunctuation: true,\n    });\n  }\n\n  splitCustom(value) {\n    return value\n      .split(pf1.config.re.traitSeparator)\n      .map((c) => c.trim())\n      .filter((c) => !!c);\n  }\n\n  get title() {\n    return `${this.options.title} – ${this.document.name}`;\n  }\n\n  get id() {\n    return `trait-selector-${this.document.uuid.replaceAll(\".\", \"-\")}-${this.options.subject}`;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"trait-selector\"],\n      template: \"systems/pf1/templates/apps/trait-selector.hbs\",\n      width: 320,\n      height: \"auto\",\n      sheetConfig: false,\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a reference to the target attribute\n   *\n   * @type {string}\n   */\n  get attribute() {\n    return this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provide data to the HTML template for rendering\n   *\n   * @type {object}\n   */\n  getData() {\n    const { value, custom } = this.attributes;\n\n    // Populate choices\n    const choices = foundry.utils.deepClone(this.options.choices);\n    for (const [k, v] of Object.entries(choices)) {\n      choices[k] = {\n        label: v,\n        chosen: value.includes(k),\n      };\n    }\n\n    // Object type\n    const updateButton = this.document instanceof Actor ? \"PF1.UpdateActor\" : \"PF1.UpdateItem\";\n\n    // Return data\n    return {\n      choices,\n      custom: Array.from(new Set(custom)),\n      updateButton,\n      search: this._searchFilter,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  async _updateDocument(event) {\n    await this._onSubmit(event, { preventRender: true });\n\n    // Unregister this app from doc to avoid re-renders\n    delete this.document.apps[this.appId];\n\n    const { custom, value } = this.attributes;\n    const updateData = { [this.attribute]: { value, custom } };\n    this.document.update(updateData);\n    this.close({ force: true });\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onCustomInput(event) {\n    // Consume input if semicolon is inserted\n    if (/;/.test(event.target.value)) {\n      event.preventDefault();\n      this.submit();\n    }\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onActiveCustomInput(event) {\n    if (event.isComposing) return;\n\n    switch (event.key) {\n      case \"Enter\": {\n        event.preventDefault();\n        this.submit();\n        break;\n      }\n      case \"Backspace\": {\n        if (event.target.value !== \"\") return;\n        if (event.repeat) return; // Ignore when backspace is held down\n        const last = this.form.querySelector(\".custom-tags .custom-tag:last-of-type\");\n        if (!last) return;\n        if (last.classList.contains(\"pre-delete\")) {\n          const tag = last.dataset.customTag;\n          this.attributes.custom = this.attributes.custom.filter((t) => t !== tag);\n          this.render();\n        } else {\n          last.classList.add(\"pre-delete\");\n        }\n        break;\n      }\n      default:\n        this.form.querySelector(\".custom-tags .custom-tag:last-of-type\")?.classList.remove(\"pre-delete\");\n        break;\n    }\n  }\n\n  _deleteCustomTag(event) {\n    const elem = event.target;\n    const tag = elem.dataset.customTag;\n    this.attributes.custom = this.attributes.custom.filter((t) => t !== tag);\n    this.render();\n  }\n\n  /**\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    // Stop auto-height adjusts after first render\n    delete this.options.height;\n\n    // Custom tag handling\n    const customInput = this.form.querySelector(\"input[name='custom']\");\n    customInput.addEventListener(\"input\", this._onCustomInput.bind(this), { passive: true });\n    customInput.addEventListener(\"keydown\", this._onActiveCustomInput.bind(this));\n    this.form.querySelectorAll(\".custom-tags .custom-tag > a[data-action='delete']\").forEach((el) => {\n      el.addEventListener(\"click\", this._deleteCustomTag.bind(this), { passive: true });\n    });\n\n    const search = this.form.querySelector(\"input[type='search']\");\n    search.addEventListener(\"input\", (ev) => this._onSearch(ev.target.value), { passive: true });\n    search.addEventListener(\"change\", (ev) => this._onSearch(ev.target.value), { passive: true });\n\n    this._onSearch(this._searchFilter);\n\n    // Submit button\n    this.form.querySelector(\"button[type='submit']\").addEventListener(\"click\", this._updateDocument.bind(this));\n  }\n\n  /**\n   * @internal\n   * @param {string} query - Seach string\n   */\n  _onSearch(query) {\n    query = query?.normalize(\"NFKD\");\n    this._searchFilter = query;\n\n    const keys = [\"_name\"];\n    if (this.constructor.SEARCH_INCLUDE_ID) keys.push(\"_id\");\n\n    const matches = query\n      ? fuzzysort\n          .go(query, this._searchIndex, { keys, threshold: -10000 })\n          .sort((a, b) => {\n            // Sort by score first, then alphabetically by name\n            if (a.score !== b.score) return b.score - a.score;\n            else return this._collator.compare(a.obj.name, b.obj.name);\n          })\n          .map((r) => r.obj.id)\n      : null;\n\n    const els = this.form.querySelectorAll(\".trait-list li\");\n    for (const el of els) {\n      el.classList.toggle(\"search-mismatch\", query && !matches.includes(el.dataset.choice));\n    }\n  }\n\n  /**\n   * Update the Actor object with new trait data processed from the form\n   *\n   * @param event\n   * @param formData\n   * @private\n   */\n  _updateObject(event, formData) {\n    let { choices, custom, search } = foundry.utils.expandObject(formData);\n\n    this._searchFilter = search;\n\n    choices = Object.entries(choices)\n      .filter(([_, v]) => v)\n      .map(([k]) => k);\n\n    if (custom?.length) this.attributes.custom.push(...this.splitCustom(custom));\n\n    this.attributes.value = choices;\n\n    this.render();\n  }\n}\n","const fields = foundry.data.fields;\n\n/**\n * The Base Registry class, providing shared functionality for all registries in the system.\n *\n * @abstract\n * @group Base Classes\n * @template {RegistryEntry} Model\n * @augments {foundry.utils.Collection<Model>}\n */\nexport class Registry extends foundry.utils.Collection {\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @type {typeof Model}\n   */\n  static model = null;\n\n  /**\n   * An array of data used to initialise this registry.\n   *\n   * @type {object[]} An array of data used to initialise this registry.\n   * @private\n   */\n  static _defaultData = [];\n\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @see {@link Registry.model}\n   * @type {Model}\n   */\n  model = null;\n\n  constructor() {\n    super();\n    Object.defineProperty(this, \"model\", { value: this.constructor.model, writable: false, enumerable: false });\n    this._initialize();\n  }\n\n  /**\n   * The name of the registry\n   *\n   * @type {string}\n   */\n  get name() {\n    return this.constructor.name;\n  }\n\n  /**\n   * Initializes the registry with its default data.\n   *\n   * @remarks This method is called automatically when the registry is instantiated.\n   *  It should be self-reliant and not require any other setup.\n   * @private\n   */\n  _initialize() {\n    this.clear();\n    for (const element of this.constructor._defaultData) {\n      try {\n        const content = new this.model({ ...element, namespace: \"pf1\" });\n        super.set(content.id, content);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // Allow modules to register their own content\n    Hooks.callAll(`pf1Register${this.name}`, this);\n  }\n\n  /**\n   * Prepares the data of all entries in the registry.\n   */\n  setup() {\n    for (const element of this) {\n      element.prepareData();\n    }\n  }\n\n  /**\n   * Sets the value of a key in the registry.\n   *\n   * @param {string} id - ID of the value to set.\n   * @param {Model} content - The value to set.\n   * @returns {Registry} The registry itself, after the value has been set.\n   */\n  set(id, content) {\n    const cls = this.model;\n    if (!(content instanceof cls)) {\n      throw new Error(`Registry '${this.name}' can only register ${cls.name}`);\n    }\n    return super.set(id, content);\n  }\n\n  /**\n   * Registers a new instance of {@link Model} with the registry, using a partial of its data as the base.\n   *\n   * @example\n   * ```js\n   * pf1.registry.damageTypes.register(\"my-module\", \"my-damage-type\", {\n   *   name: \"My Damage Type\",\n   *   img: \"icons/svg/damage.svg\",\n   *   category: \"physical\",\n   * });\n   * ```\n   * @param {string} namespace - The namespace for which this value is registered.\n   * @param {string} id - The unique key of the value.\n   * @param {object} value - A {@link Partial} of the data to use as the base for the new value.\n   * @returns {Registry} The registry itself, after the value has been registered.\n   */\n  register(namespace, id, value) {\n    if (!namespace || !id) throw new Error(\"Registering requires both a namespace and an ID\");\n    if (this.has(id)) {\n      throw new Error(`Registry '${this.name}' already has a key '${id}'`);\n    }\n    return this.set(id, new this.model({ ...value, namespace, _id: id }));\n  }\n\n  /**\n   * Unregisters a value from the registry, or if no id is provided, all values belonging to the namespace.\n   *\n   * @param {string} namespace - The namespace for which this value is unregistered.\n   * @param {string} [id] - The unique key of the value, or `undefined` to unregister all values belonging to the namespace.\n   */\n  unregister(namespace, id) {\n    if (!namespace) throw new Error(\"Unregistering requires a namespace\");\n    if (id) {\n      const entry = this.get(id);\n      if (entry && entry.namespace === namespace) this.delete(id);\n      else throw new Error(`Registry '${this.name}' has no key '${id}'`);\n    } else {\n      for (const entry of this) {\n        if (entry.namespace === namespace) this.delete(entry.id);\n      }\n    }\n  }\n\n  /**\n   * Returns the contents of this registry as object, using ids as keys.\n   *\n   * @param {boolean} [source=false] - Whether to include the source data instead of its prepared data for each value.\n   * @returns {{ [id: string]: object }} The data of each value in the registry, by id\n   */\n  toObject(source = false) {\n    return Object.fromEntries(this.map((registryObject) => [registryObject.id, registryObject.toObject(source)]));\n  }\n\n  /**\n   * Returns an object of the registry's contents, with the id as key and the name as value.\n   *\n   * @returns {{ [id: string]: string }} The names of each value in the registry, by id\n   */\n  getLabels() {\n    return Object.fromEntries(this.map((registryObject) => [registryObject.id, registryObject.name]));\n  }\n}\n\n/**\n * The Base Registry Object class, providing shared functionality for all registry objects in the system.\n * For the required data, see {@link defineSchema}.\n *\n * @abstract\n * @group Base Classes\n */\nexport class RegistryEntry extends foundry.abstract.DataModel {\n  /** @override */\n  static defineSchema() {\n    return {\n      _id: new fields.StringField({ required: true, blank: false, readonly: true }),\n      name: new fields.StringField({ required: false, initial: \"\", localize: true }),\n      flags: new fields.ObjectField({ required: false, initial: {} }),\n      namespace: new fields.StringField({ required: true, blank: false }),\n    };\n  }\n\n  /**\n   * The unique key of the value.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Prepares the data of the registry entry.\n   */\n  prepareData() {\n    this.reset();\n\n    // Localize fields marked for localization\n    for (const [name, field] of Object.entries(this.constructor.schema.fields)) {\n      if (field instanceof fields.StringField && field.options.localize === true)\n        this[name] = game.i18n.localize(this[name]);\n    }\n  }\n}\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single damage type entry in the {@link DamageTypes} registry.\n *\n * @group Damage Types\n */\nexport class DamageType extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      abbr: new fields.StringField({ required: false, blank: false, nullable: true, initial: null }),\n      icon: new fields.StringField({ required: false, initial: \"\" }),\n      img: new fields.FilePathField({ categories: [\"IMAGE\"] }),\n      category: new fields.StringField({\n        required: true,\n        blank: false,\n        initial: \"misc\",\n        choices: () => DamageTypes.CATEGORIES,\n      }),\n      isModifier: new fields.BooleanField({ required: false, initial: false }),\n      color: new fields.StringField({ required: true, initial: \"black\" }),\n    };\n  }\n}\n/**\n * The singleton registry of damage types.\n * At runtime this registry is accessible as `pf1.registry.damageTypes`.\n *\n * @group Damage Types\n * @see {@link Registry}\n * @see {@link DamageType}\n * @augments {Registry<DamageType>}\n */\nexport class DamageTypes extends Registry {\n  /** @inheritdoc */\n  static model = DamageType;\n\n  /**\n   * An array of allowed categories of damage types.\n   */\n  static CATEGORIES = /** @type {const} */ ([\"physical\", \"energy\", \"misc\"]);\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"untyped\",\n      name: \"PF1.DamageTypes.untyped.Label\",\n      icon: \"ra ra-uncertainty\",\n      category: \"misc\",\n    },\n    {\n      _id: \"slashing\",\n      name: \"PF1.DamageTypes.slashing.Label\",\n      abbr: \"PF1.DamageTypes.slashing.Abbr\",\n      icon: \"ra ra-sword\",\n      color: \"yellow\",\n      category: \"physical\",\n    },\n    {\n      _id: \"piercing\",\n      name: \"PF1.DamageTypes.piercing.Label\",\n      abbr: \"PF1.DamageTypes.piercing.Abbr\",\n      icon: \"ra ra-spear-head\",\n      color: \"blue\",\n      category: \"physical\",\n    },\n    {\n      _id: \"bludgeoning\",\n      name: \"PF1.DamageTypes.bludgeoning.Label\",\n      abbr: \"PF1.DamageTypes.bludgeoning.Abbr\",\n      icon: \"ra ra-large-hammer\",\n      color: \"red\",\n      category: \"physical\",\n    },\n    {\n      _id: \"fire\",\n      name: \"PF1.DamageTypes.fire.Label\",\n      icon: \"ra ra-fire\",\n      color: \"orange\",\n      category: \"energy\",\n    },\n    {\n      _id: \"cold\",\n      name: \"PF1.DamageTypes.cold.Label\",\n      icon: \"ra ra-frost-emblem\",\n      color: \"aqua\",\n      category: \"energy\",\n    },\n    {\n      _id: \"electric\",\n      name: \"PF1.DamageTypes.electricity.Label\",\n      icon: \"ra ra-lightning-bolt\",\n      color: \"yellow\",\n      category: \"energy\",\n    },\n    {\n      _id: \"acid\",\n      name: \"PF1.DamageTypes.acid.Label\",\n      icon: \"ra ra-acid\",\n      color: \"lime\",\n      category: \"energy\",\n    },\n    {\n      _id: \"sonic\",\n      name: \"PF1.DamageTypes.sonic.Label\",\n      icon: \"ra ra-horn-call\",\n      color: \"#00aedb\",\n      category: \"energy\",\n    },\n    {\n      _id: \"force\",\n      name: \"PF1.DamageTypes.force.Label\",\n      icon: \"ra ra-doubled\",\n      color: \"#a200ff\",\n      category: \"misc\",\n    },\n    {\n      _id: \"negative\",\n      name: \"PF1.DamageTypes.negative.Label\",\n      icon: \"ra ra-skull\",\n      color: \"#765898\",\n      category: \"misc\",\n    },\n    {\n      _id: \"positive\",\n      name: \"PF1.DamageTypes.positive.Label\",\n      icon: \"ra ra-sunbeams\",\n      color: \"#f8ed62\",\n      category: \"misc\",\n    },\n    {\n      _id: \"precision\",\n      name: \"PF1.Precision\",\n      icon: \"ra ra-archery-target\",\n      isModifier: true,\n    },\n    {\n      _id: \"nonlethal\",\n      name: \"PF1.Nonlethal\",\n      icon: \"ra ra-hand\",\n      isModifier: true,\n    },\n  ];\n}\n\n/**\n * {@inheritDoc DamageTypes}\n *\n * @group Damage Types\n * @type {DamageTypes}\n */\nexport let damageTypes;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single material type entry in the {@link MaterialTypes} registry.\n *\n * @group Material Types\n */\nexport class MaterialType extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      shortName: new fields.StringField({ required: false, initial: undefined, blank: false, localize: true }),\n      treatedAs: new fields.StringField({ required: false, initial: undefined, blank: false }),\n      addon: new fields.BooleanField({ required: false, initial: false }),\n      intrinsic: new fields.BooleanField({ required: false, initial: false }), // Always available, same as base materials\n      primitive: new fields.BooleanField({ required: false, initial: false }),\n      baseMaterial: new fields.ArrayField(new fields.StringField(), { required: false, initial: [] }),\n      hardness: new fields.NumberField({ required: false, initial: 10, integer: true, min: 0 }),\n      hardnessMultiplier: new fields.NumberField({ required: false, initial: null, nullable: true, min: 0 }),\n      healthPerInch: new fields.NumberField({ required: false, initial: null, integer: true, min: 0, nullable: true }),\n      healthBonus: new fields.NumberField({ required: false, initial: 0, integer: true, min: 0 }),\n      healthMultiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n      masterwork: new fields.BooleanField({ required: false, initial: false }),\n      allowed: new fields.SchemaField({\n        lightBlade: new fields.BooleanField({ required: false, initial: true }),\n        oneHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        twoHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        rangedWeapon: new fields.BooleanField({ required: false, initial: true }),\n        buckler: new fields.BooleanField({ required: false, initial: true }),\n        lightShield: new fields.BooleanField({ required: false, initial: true }),\n        heavyShield: new fields.BooleanField({ required: false, initial: true }),\n        towerShield: new fields.BooleanField({ required: false, initial: true }),\n        lightArmor: new fields.BooleanField({ required: false, initial: true }),\n        mediumArmor: new fields.BooleanField({ required: false, initial: true }),\n        heavyArmor: new fields.BooleanField({ required: false, initial: true }),\n      }),\n      armor: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      dr: new fields.BooleanField({ required: false, initial: false }),\n      incompatible: new fields.ArrayField(new fields.StringField(), {\n        required: false,\n        initial: [],\n      }),\n      price: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        perPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        ammunition: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        oneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        twoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedOneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedTwoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        shield: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        mediumArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        heavyArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        enhancement: new fields.SchemaField({\n          // Bonus cost to apply enhancement. One time price increase on first enhancement.\n          weapon: new fields.NumberField({ required: false, initial: 0, min: 0 }),\n        }),\n      }),\n      shield: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      weight: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        bonusPerPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n      }),\n    };\n  }\n\n  /**\n   * Getter for whether this material is a basic material.\n   *\n   * @type {boolean}\n   */\n  get basic() {\n    return !this.baseMaterial.length && !this.addon;\n  }\n\n  /**\n   * Check if a given material is okay to be added to our materials list\n   *\n   * @param {ItemPF} item - Whether we're checking weapons or equipment\n   * @returns {boolean} - Whether the material is allowed for the given item\n   */\n  isAllowed(item) {\n    // Let's end this early if we can never be allowed\n    if (this.basic) return false;\n    const type = item.type,\n      subtype = item.system.subType,\n      baseMaterial = item.baseMaterial;\n    let result = false;\n\n    if (this.baseMaterial.length && baseMaterial && !this.baseMaterial.includes(baseMaterial)) {\n      return result;\n    }\n\n    // Check whether the material is allowed for the given item\n    switch (type) {\n      case \"spell\": {\n        result = true;\n        break;\n      }\n      case \"weapon\":\n      case \"attack\": {\n        const weaponCategory = type === \"weapon\" ? item.system.weaponSubtype : item.system.weapon?.type || \"all\";\n\n        switch (weaponCategory) {\n          case \"light\":\n            result = this.allowed.lightBlade;\n            break;\n          case \"1h\":\n            result = this.allowed.oneHandBlade;\n            break;\n          case \"2h\":\n            result = this.allowed.twoHandBlade;\n            break;\n          case \"ranged\":\n            result = this.allowed.rangedWeapon;\n            break;\n          case \"all\": // We're prepping an Attack and don't care (don't have the info anyways)\n            result =\n              this.allowed.lightBlade ||\n              this.allowed.oneHandBlade ||\n              this.allowed.twoHandBlade ||\n              this.allowed.rangedWeapon; // Essentially, filter out any that are armor-only.\n            break;\n          default:\n            // Shouldn't find this\n            return false;\n        }\n        break;\n      }\n      case \"equipment\": {\n        if (subtype === \"shield\" && item.system.equipmentSubtype === \"other\") {\n          result = this.allowed.buckler;\n        } else {\n          result = this.allowed[item.system.equipmentSubtype];\n        }\n        break;\n      }\n    }\n\n    if (result && this.addon) {\n      // If we're an addon, we need to check if the addon is valid for the item\n      return this.isValidAddon(item) ?? false;\n    }\n    return result; // Finally made it through the gauntlet!\n  }\n\n  /**\n   * Check if a given addon material is valid for the chosen material\n   *\n   * @param {ItemPF|MaterialType|string} material - Item, material, or material ID for which to test if this addon is valid.\n   * @returns {boolean|null} - Null if the provided parameter is invalid, boolean otherwise.\n   */\n  isValidAddon(material) {\n    // Convert item and material IDs to actual material\n    if (material instanceof Item) material = pf1.registry.materialTypes.get(material.normalMaterial);\n    else if (typeof material === \"string\") material = pf1.registry.materialTypes.get(material);\n\n    if (!(material instanceof MaterialType)) {\n      if (this.intrinsic) return true;\n      return null; // Material not found or is invalid data\n    }\n\n    if (this.addon === material.addon) return false; // Both are addons or both are not addons\n\n    return !this.incompatible.includes(material.id);\n  }\n}\n\n/**\n * The singleton registry of material types.\n * At runtime this registry is accessible as `pf1.registry.materialTypes`.\n *\n * @group Material Types\n * @see {@link Registry}\n * @see {@link MaterialType}\n * @augments {Registry<MaterialType>}\n */\nexport class MaterialTypes extends Registry {\n  /** @inheritdoc */\n  static model = MaterialType;\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"cloth\",\n      name: \"PF1.Materials.Types.Cloth\",\n      hardness: 0,\n      healthPerInch: 2,\n      healthMultiplier: 0.07,\n    },\n    {\n      _id: \"leather\",\n      name: \"PF1.Materials.Types.Leather\",\n      hardness: 2,\n      healthPerInch: 5,\n      healthMultiplier: 0.17,\n    },\n    {\n      _id: \"adamantine\",\n      name: \"PF1.Materials.Types.Adamantine\",\n      baseMaterial: [\"steel\"],\n      hardness: 20,\n      healthPerInch: 40,\n      dr: true,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 60.0,\n        lightWeapon: 3000.0,\n        oneHandWeapon: 3000.0,\n        twoHandWeapon: 3000.0,\n        rangedOneHandWeapon: 3000.0,\n        rangedTwoHandWeapon: 3000.0,\n        lightArmor: 5000.0,\n        mediumArmor: 10000.0,\n        heavyArmor: 15000.0,\n      },\n    },\n    {\n      _id: \"alchemicalSilver\",\n      name: \"PF1.Materials.Types.AlchemicalSilver\",\n      shortName: \"PF1.Materials.Types.Silver\",\n      baseMaterial: [\"steel\"],\n      hardness: 8,\n      healthPerInch: 10,\n      incompatible: [\"adamantine\", \"coldIron\", \"mithral\", \"nexavaranSteel\", \"silversheen\", \"sunsilver\"],\n      dr: true,\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 2.0,\n        lightWeapon: 20.0,\n        oneHandWeapon: 90.0,\n        twoHandWeapon: 180.0,\n        rangedOneHandWeapon: 90.0,\n        rangedTwoHandWeapon: 180.0,\n      },\n    },\n    {\n      _id: \"angelSkin\",\n      name: \"PF1.Materials.Types.AngelSkin\",\n      baseMaterial: [\"leather\"],\n      hardness: 5,\n      healthPerInch: 5,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.17,\n      price: {\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"aszite\",\n      name: \"PF1.Materials.Types.Aszite\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 750.0,\n        heavyArmor: 1000.0,\n      },\n      weight: {\n        multiplier: 1.1,\n      },\n    },\n    {\n      _id: \"blackwood\",\n      name: \"PF1.Materials.Types.Blackwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 7,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 20.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"blightQuartz\",\n      name: \"PF1.Materials.Types.BlightQuartz\",\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 200.0,\n        lightWeapon: 2500.0,\n        oneHandWeapon: 2500.0,\n        twoHandWeapon: 2500.0,\n        rangedOneHandWeapon: 2500.0,\n        rangedTwoHandWeapon: 2500.0,\n      },\n    },\n    {\n      _id: \"bloodCrystal\",\n      name: \"PF1.Materials.Types.BloodCrystal\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 10,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        ammunition: 30.0,\n        lightWeapon: 1500.0,\n        oneHandWeapon: 1500.0,\n        twoHandWeapon: 1500.0,\n        rangedOneHandWeapon: 1500.0,\n        rangedTwoHandWeapon: 1500.0,\n      },\n    },\n    {\n      _id: \"caphorite\",\n      name: \"PF1.Materials.Types.Caphorite\",\n      baseMaterial: [\"steel\"],\n      // No official hardness stat\n      // No official hp per inch stat\n      // Only allowed to be used for ammunition so these stats are not necessary\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n      },\n    },\n    {\n      _id: \"coldIron\",\n      name: \"PF1.Materials.Types.ColdIron\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      dr: true,\n      price: {\n        multiplier: 2.0,\n        enhancement: {\n          weapon: 2_000,\n        },\n      },\n    },\n    {\n      _id: \"cryptstone\",\n      name: \"PF1.Materials.Types.Cryptstone\",\n      baseMaterial: [\"stone\", \"steel\", \"wood\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"darkleafCloth\",\n      name: \"PF1.Materials.Types.DarkleafCloth\",\n      baseMaterial: [\"leather\", \"cloth\"],\n      hardness: 10,\n      healthPerInch: 20,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: -10,\n      },\n      healthMultiplier: 4.0,\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 1500.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"darkwood\",\n      name: \"PF1.Materials.Types.Darkwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 10.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"dragonhide\",\n      name: \"PF1.Materials.Types.Dragonhide\",\n      baseMaterial: [\"leather\"],\n      hardness: 10,\n      healthPerInch: 10, // Typically ½ and 1 inch thick\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        buckler: false,\n        towerShield: false,\n      },\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"druchite\",\n      name: \"PF1.Materials.Types.Druchite\",\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 12.0,\n        lightWeapon: 1200.0,\n        oneHandWeapon: 1200.0,\n        twoHandWeapon: 1200.0,\n        rangedOneHandWeapon: 1200.0,\n        rangedTwoHandWeapon: 1200.0,\n        lightArmor: 1000.0,\n        mediumArmor: 1500.0,\n        heavyArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"eelHide\",\n      name: \"PF1.Materials.Types.EelHide\",\n      baseMaterial: [\"leather\"],\n      hardness: 2,\n      healthPerInch: 5,\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -1,\n        maxDex: 1,\n      },\n      price: {\n        lightArmor: 1200.0,\n        mediumArmor: 1800.0,\n      },\n    },\n    {\n      _id: \"elysianBronze\",\n      name: \"PF1.Materials.Types.ElysianBronze\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"fireForgedSteel\",\n      name: \"PF1.Materials.Types.FireForgedSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"frostForgedSteel\",\n      name: \"PF1.Materials.Types.FrostForgedSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"glaucite\",\n      name: \"PF1.Materials.Types.Glaucite\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 30,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 3.0,\n      },\n      weight: {\n        multiplier: 1.5,\n      },\n    },\n    {\n      _id: \"greenwood\",\n      name: \"PF1.Materials.Types.Greenwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      masterwork: true,\n      price: {\n        perPound: 50.0,\n        ammunition: 6.0,\n        lightWeapon: 300.0,\n        oneHandWeapon: 300.0,\n        twoHandWeapon: 300.0,\n        rangedOneHandWeapon: 300.0,\n        rangedTwoHandWeapon: 300.0,\n        shield: 150.0,\n        lightArmor: 150.0,\n        mediumArmor: 150.0,\n        heavyArmor: 150.0,\n      },\n    },\n    {\n      _id: \"griffonMane\",\n      name: \"PF1.Materials.Types.GriffonMane\",\n      baseMaterial: [\"cloth\"],\n      hardness: 1,\n      healthPerInch: 4,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 2.0,\n      price: {\n        perPound: 50.0,\n        lightArmor: 200.0,\n      },\n    },\n    {\n      _id: \"heatstonePlating\",\n      name: \"PF1.Materials.Types.HeatstonePlating\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightArmor: 800.0,\n        mediumArmor: 1000.0,\n      },\n      weight: {\n        bonusPerPound: 0.2,\n      },\n    },\n    {\n      _id: \"horacalcum\",\n      name: \"PF1.Materials.Types.Horacalcum\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.25, // Horacalcum actually has additional multiplier over health per inch\n      price: {\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        lightArmor: 10000.0,\n        mediumArmor: 30000.0,\n        heavyArmor: 60000.0,\n      },\n    },\n    {\n      _id: \"inubrix\",\n      name: \"PF1.Materials.Types.Inubrix\",\n      baseMaterial: [\"steel\"],\n      hardness: 5,\n      healthPerInch: 10,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 100.0,\n        lightWeapon: 5000.0,\n        oneHandWeapon: 5000.0,\n        twoHandWeapon: 5000.0,\n        rangedOneHandWeapon: 5000.0,\n        rangedTwoHandWeapon: 5000.0,\n      },\n    },\n    /* This is added for completenss' sake, but it's not an applicable material outside of constructs.\n    {\n      _id: \"irespanBasalt\",\n      name: \"PF1.Materials.Types.IrespanBasalt\",\n      baseMaterial: [\"stone\"],\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      hardness: 10,\n      price: {\n        perPound: 0.5,\n      },\n    },\n    */\n    {\n      _id: \"lazurite\",\n      name: \"PF1.Materials.Types.Lazurite\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 1500.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3500.0,\n      },\n    },\n    {\n      _id: \"liquidGlass\",\n      name: \"PF1.Materials.Types.LiquidGlass\",\n      baseMaterial: [\"glass\", \"steel\", \"wood\", \"stone\"], // BUG: Does not actually state base material\n      hardness: 10,\n      healthPerInch: 10,\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 250.0,\n        ammunition: 16.0,\n        lightWeapon: 800.0,\n        oneHandWeapon: 800.0,\n        twoHandWeapon: 800.0,\n        rangedOneHandWeapon: 800.0,\n        rangedTwoHandWeapon: 800.0,\n      },\n    },\n    {\n      _id: \"livingSteel\",\n      name: \"PF1.Materials.Types.LivingSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 15,\n      healthPerInch: 35,\n      healthMultiplier: 1.16,\n      price: {\n        perPound: 250.0,\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 100.0,\n        lightArmor: 500.0,\n        mediumArmor: 1000.0,\n        heavyArmor: 1500.0,\n      },\n    },\n    {\n      _id: \"mithral\",\n      name: \"PF1.Materials.Types.Mithral\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 15,\n      healthPerInch: 30,\n      masterwork: true,\n      armor: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      shield: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      price: {\n        perPound: 500, // Non-armor/shield only\n        shield: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 4000.0,\n        heavyArmor: 9000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"nexavaranSteel\",\n      name: \"PF1.Materials.Types.NexavaranSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      dr: true,\n      treatedAs: \"coldIron\",\n      price: {\n        multiplier: 1.5,\n        enhancement: {\n          weapon: 3_000,\n        },\n      },\n    },\n    {\n      _id: \"noqual\",\n      name: \"PF1.Materials.Types.Noqual\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      shield: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 2000.0,\n        lightArmor: 4000.0,\n        mediumArmor: 8000.0,\n        heavyArmor: 12000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"paueliel\",\n      name: \"PF1.Materials.Types.Paueliel\",\n      baseMaterial: [\"wood\"],\n      hardness: 7,\n      healthPerInch: 10,\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      price: {\n        perPound: 15.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"pyresteel\",\n      name: \"PF1.Materials.Types.PyreSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 15,\n      allowed: {\n        buckler: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"siccatite\",\n      name: \"PF1.Materials.Types.Siccatite\",\n      baseMaterial: [\"steel\"],\n      hardness: 10, // Not officially statted\n      healthPerInch: 30, // Not officially statted\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"silversheen\",\n      name: \"PF1.Materials.Types.Silversheen\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 10, // Not officially statted\n      healthPerInch: 30, // Not officially statted\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 750.0,\n        oneHandWeapon: 750.0,\n        twoHandWeapon: 750.0,\n        rangedOneHandWeapon: 750.0,\n        rangedTwoHandWeapon: 750.0,\n      },\n    },\n    {\n      _id: \"singingSteel\",\n      name: \"PF1.Materials.Types.SingingSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 20,\n      masterwork: true,\n      armor: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      shield: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      healthMultiplier: 0.67,\n      price: {\n        perPound: 600.0,\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        shield: 7000.0,\n        lightArmor: 750.0,\n        mediumArmor: 9000.0,\n        heavyArmor: 12000.0,\n      },\n    },\n    {\n      _id: \"spireSteel\",\n      name: \"PF1.Materials.Types.SpireSteel\",\n      baseMaterial: [\"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 2000.0,\n        oneHandWeapon: 2000.0,\n        twoHandWeapon: 2000.0,\n        rangedOneHandWeapon: 2000.0,\n        rangedTwoHandWeapon: 2000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"steel\",\n      name: \"PF1.Materials.Types.Steel\",\n      hardness: 10,\n      healthPerInch: 30,\n    },\n    {\n      _id: \"sunsilk\",\n      name: \"PF1.Materials.Types.Sunsilk\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"sunsilver\",\n      name: \"PF1.Materials.Types.Sunsilver\",\n      baseMaterial: [\"steel\"],\n      treatedAs: \"alchemicalSilver\",\n      hardness: 8,\n      healthPerInch: 10,\n      masterwork: true,\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 25.0,\n      },\n    },\n    {\n      _id: \"throneglass\",\n      name: \"PF1.Materials.Types.Throneglass\",\n      baseMaterial: [\"glass\", \"steel\", \"wood\", \"stone\"], // BUG: Does not actually state base material\n      hardness: 10, // \"as durable as steel\"\n      healthPerInch: 30, // \"as durable as steel\"\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 13000.0,\n        oneHandWeapon: 13000.0,\n        twoHandWeapon: 13000.0,\n      },\n    },\n    {\n      _id: \"viridium\",\n      name: \"PF1.Materials.Types.Viridium\",\n      baseMaterial: [\"steel\"],\n      hardness: 5,\n      healthPerInch: 30, // Not officially statted\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 200.0,\n        oneHandWeapon: 200.0,\n        twoHandWeapon: 200.0,\n        rangedOneHandWeapon: 200.0,\n        rangedTwoHandWeapon: 200.0,\n      },\n    },\n    {\n      _id: \"voidglass\",\n      name: \"PF1.Materials.Types.Voidglass\",\n      baseMaterial: [\"glass\", \"steel\"],\n      hardness: 10,\n      healthPerInch: 30,\n      price: {\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        shield: 3000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 4500.0,\n      },\n    },\n    {\n      _id: \"whipwood\",\n      name: \"PF1.Materials.Types.Whipwood\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      healthBonus: 5, // Grants flat +5 hp bonus to item regardless of anything else\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"wyroot\",\n      name: \"PF1.Materials.Types.Wyroot\",\n      baseMaterial: [\"wood\"],\n      hardness: 5,\n      healthPerInch: 10,\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n    },\n    {\n      _id: \"bone\",\n      name: \"PF1.Materials.Types.Bone\",\n      primitive: true,\n      hardness: 5, // Actually half of whatever the base material is for weapons, 5 is true for armor\n      healthPerInch: null, // Same as base material\n    },\n    {\n      _id: \"bronze\",\n      name: \"PF1.Materials.Types.Bronze\",\n      primitive: true,\n      hardness: 9,\n      healthPerInch: 30, // Not officially statted, but speaks of steel\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"glass\",\n      name: \"PF1.Materials.Types.Glass\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"gold\",\n      name: \"PF1.Materials.Types.Gold\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 10.0,\n      },\n      weight: {\n        multiplier: 1.5,\n      },\n    },\n    {\n      _id: \"obsidian\",\n      name: \"PF1.Materials.Types.Obsidian\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        multiplier: 0.5,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"stone\",\n      name: \"PF1.Materials.Types.Stone\",\n      primitive: true,\n      hardnessMultiplier: 0.5,\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 0.25,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"wood\",\n      name: \"PF1.Materials.Types.Wood\",\n      hardness: 5,\n      healthPerInch: 10,\n    },\n    {\n      _id: \"magic\",\n      name: \"PF1.Materials.Types.Magic\",\n      addon: true,\n      intrinsic: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      dr: true,\n    },\n    {\n      _id: \"epic\",\n      name: \"PF1.Materials.Types.Epic\",\n      addon: true,\n      intrinsic: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      dr: true,\n    },\n  ];\n}\n\n/**\n * {@inheritDoc MaterialTypes}\n *\n * @group Material Types\n * @type {MaterialTypes}\n */\nexport let materialTypes;\n","export class DamageTypeSelector extends FormApplication {\n  /**\n   * @internal\n   * @type {string}\n   */\n  path;\n  /**\n   * @internal\n   * @type {DamageTypes}\n   */\n  damage;\n\n  /**\n   * @param {object} object - Parent object\n   * @param {string} path - Path to damage data in object\n   * @param {DamageTypes} data - Damage data\n   * @param {object} options - Application options\n   */\n  constructor(object, path, data, options = {}) {\n    super(object, options);\n    this.path = path;\n    this.damage = foundry.utils.deepClone(data) || { values: [] };\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 720,\n      height: 590,\n      template: \"systems/pf1/templates/apps/damage-type-selector.hbs\",\n      scrollY: [\".damage-type-categories\", \".damage-modifiers\"],\n      closeOnSubmit: true,\n    });\n  }\n\n  get title() {\n    return game.i18n.localize(\"PF1.DamageType\");\n  }\n\n  get id() {\n    return `damage-types-${this.object.id}-${this.path.replaceAll(\".\", \"_\")}`;\n  }\n\n  get damageCategorySortOrder() {\n    return [\"physical\", \"energy\", \"misc\"];\n  }\n\n  async getData() {\n    const damageTypes = pf1.registry.damageTypes\n      .filter((damageType) => !damageType.isModifier)\n      .map((dt) => ({ ...dt, id: dt.id, enabled: this.damage.values.includes(dt.id) }));\n\n    const sortOrder = this.damageCategorySortOrder;\n\n    const context = {\n      damage: this.damage,\n      damageTypes,\n      damageModifiers: pf1.registry.damageTypes\n        .filter((o) => o.isModifier)\n        .map((dm) => ({ ...dm, id: dm.id, enabled: this.damage.values.includes(dm.id) })),\n      // Damage type categories\n      damageCategories: damageTypes\n        .reduce((cur, o) => {\n          let categoryObj = cur.find((o2) => o2.key === o.category);\n          if (!categoryObj) {\n            categoryObj = { key: o.category, label: `PF1.DamageTypeCategory.${o.category}`, types: [] };\n            cur.push(categoryObj);\n          }\n          categoryObj.types.push(o);\n          return cur;\n        }, [])\n        .sort((a, b) => {\n          const idxA = sortOrder.indexOf(a.key);\n          const idxB = sortOrder.indexOf(b.key);\n          if (idxA === -1 && idxB >= 0) return 1;\n          if (idxB === -1 && idxA >= 0) return -1;\n          if (idxA > idxB) return 1;\n          if (idxA < idxB) return -1;\n          return 0;\n        }),\n    };\n\n    return context;\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    html.find(`.damage-type`).on(\"click\", this._toggleDamageType.bind(this));\n    html.find(`*[name]`).on(\"change\", this._onChangeData.bind(this));\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onChangeData(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n    const dataPath = elem.name;\n\n    let value = elem.value;\n    if (elem.type === \"checkbox\") value = elem.checked;\n\n    switch (elem.dataset.dtype) {\n      case \"Boolean\":\n        value = Boolean(value);\n        break;\n      case \"Number\":\n        value = Number(value);\n        break;\n    }\n\n    foundry.utils.setProperty(this.damage, dataPath, value);\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _toggleDamageType(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const dt = a.dataset.id;\n\n    if (this.damage.values.includes(dt)) this.damage.values.splice(this.damage.values.indexOf(dt), 1);\n    else this.damage.values.push(dt);\n    this.render();\n  }\n\n  /**\n   * @override\n   * @param {Event} event\n   * @param {object} formData\n   */\n  async _updateObject(event, formData) {\n    return this.object.update({ [this.path]: this.damage });\n  }\n}\n\n/**\n * @typedef {object} DamageTypes\n * @property {string[]} values - Damage type IDs\n * @property {string} custom - Semicolon deliminated list of custom damage type.\n */\n","import { damageTypes } from \"module/registry/damage-types.mjs\";\nimport { materialTypes } from \"module/registry/material-types.mjs\";\nimport { DamageTypeSelector } from \"./damage-type-selector.mjs\";\nimport { naturalSort } from \"@utils\";\n\n/**\n * Extend the FormApplication to handle creating, removing, and editing\n * and Actor's Damage Reduction and Energy Resistances.\n *\n */\nexport class ActorResistanceSelector extends FormApplication {\n  /** @override */\n  constructor(...args) {\n    super(...args);\n\n    /** Basic properties for handling operations */\n    // Prepare data and convert it into format compatible with the editor\n    this.isDR = this.options.isDR === true;\n\n    /** Working copy of our trait's data */\n    const resistances = foundry.utils.deepClone(foundry.utils.getProperty(this.object, this.attribute) ?? {});\n\n    /**\n     * Custom user input for damage sources\n     *\n     * @property\n     * @type {string}\n     */\n    this.custom = resistances.custom;\n\n    /**\n     * Original copy of the trait's entries\n     *\n     * @property\n     * @type {Object<string, any>}\n     */\n    this.originalEntries = resistances.value;\n    this.entries = resistances.value;\n\n    /** Processing Damage sources */\n    const damageOBJ = naturalSort([...pf1.registry.damageTypes], \"name\").filter((dType) => !dType.isModifier);\n    const damages = {};\n\n    // Loop through the registry to filter not-applicable damage sources\n    Object.values(damageOBJ)\n      .sort()\n      .forEach((dType) => {\n        // If we are looking for DR, we want to exclude types that are energy or not untyped\n        if ((dType.category === \"energy\" || dType.category === \"misc\") && this.isDR) {\n          return;\n        }\n\n        // If we are looking for ERES, we want to exclude types that are physical or untyped\n        if ((dType.category === \"physical\" || (dType.category === \"misc\" && dType.id === \"untyped\")) && !this.isDR) {\n          return;\n        }\n\n        damages[dType.id] = dType.name;\n      });\n\n    if (this.isDR) {\n      this.options.id = \"damage-resistance-selector\";\n\n      Object.keys(pf1.config.damageResistances).forEach((dType) => {\n        damages[dType] = pf1.config.damageResistances[dType];\n      });\n\n      naturalSort([...pf1.registry.materialTypes], \"name\").forEach((material) => {\n        if (\n          material.dr &&\n          !material.treatedAs &&\n          (material.allowed.lightBlade ||\n            material.allowed.oneHandBlade ||\n            material.allowed.twoHandBlade ||\n            material.allowed.rangedWeapon)\n        ) {\n          damages[material.id] = material.shortName || material.name;\n        }\n      });\n    }\n\n    /**\n     * A list of key-value pairs for dropdown damage types\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this.damages = damages;\n\n    /**\n     * A dropdown list of combination types for multiple damage types\n     *\n     * @property\n     * @type {Object<boolean, string>}\n     */\n    this.operators = {\n      true: \"PF1.Application.DamageResistanceSelector.CombinationOr\",\n      false: \"PF1.Application.DamageResistanceSelector.CombinationAnd\",\n    };\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: \"energy-resistance-selector\",\n      classes: [\"pf1\", \"resistance\"],\n      template: \"systems/pf1/templates/apps/damage-resistance-selector.hbs\",\n      height: \"auto\",\n      closeOnSubmit: true,\n      submitOnClose: false,\n    });\n  }\n\n  /** @override */\n  get title() {\n    return game.i18n.localize(\"PF1.Application.DamageResistanceSelector.\" + (this.isDR ? \"DR\" : \"ER\") + \"Title\");\n  }\n\n  get attribute() {\n    return this.options.name;\n  }\n\n  get fields() {\n    return this.options.fields.split(\";\");\n  }\n\n  get dtypes() {\n    return this.options.dtypes.split(\";\");\n  }\n\n  get dataCount() {\n    return this.fields.length;\n  }\n\n  /**\n   * Fetches simple data for the interface\n   *\n   */\n  getData() {\n    return {\n      custom: this.custom,\n      damages: this.damages,\n      operators: this.operators,\n      entries: this.entries,\n      fields: this.fields,\n      dtypes: this.dtypes,\n      isDR: this.isDR,\n    };\n  }\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    html.find(\".resistance-control\").click(this._onResistanceControl.bind(this));\n\n    html.find(\"tr td input\").change(this._onResistanceChange.bind(this));\n    html.find(\"tr td select\").change(this._onResistanceChange.bind(this));\n    html.find(\"input[name=custom]\").change(this._onResistanceCustomChange.bind(this));\n  }\n\n  /**\n   * Updates the actor with the new resistances\n   *\n   * @override\n   * @param {Event} event\n   * @param {any} formData\n   * @returns  The updated actor\n   */\n  async _updateObject(event, formData) {\n    const updateData = {};\n\n    const entries = this.entries.map((value) => {\n      // Ensure no matter what, we have values\n      value.types[0] ??= \"\";\n      value.types[1] ??= \"\";\n\n      if (value.types[0] === \"\" && value.types[1] !== \"\") {\n        value.types[0] = value.types[1];\n        value.types[1] = \"\";\n      }\n      if (value.types[0] === value.types[1]) {\n        value.types[1] = \"\";\n      }\n\n      // Convert from string key to boolean value\n      value.operator = String(value.operator).toLowerCase() === \"true\";\n      return value;\n    });\n\n    updateData[this.attribute + \".value\"] = entries;\n    updateData[this.attribute + \".custom\"] = this.custom;\n\n    return this.object.update(updateData);\n  }\n\n  /**\n   * A trigger for an operation to add or delete a resistance entry\n   *\n   * @param {Event} event - The action and associated data that triggered the operation\n   * @returns A call to render (refresh) the UI\n   */\n  async _onResistanceControl(event) {\n    event.preventDefault();\n    const target = event.currentTarget;\n\n    // Add a new blank entry\n    if (target.classList.contains(\"add-resistance\")) {\n      const obj = {\n        amount: 0,\n        types: [this.isDR ? \"\" : \"fire\", \"\"],\n        operator: true,\n      };\n\n      this.entries.push(obj);\n\n      return this.render();\n    }\n\n    // Delete an existign entry instead\n    if (target.classList.contains(\"delete-resistance\")) {\n      const tr = target.closest(\"tr\");\n      const index = parseInt(tr.dataset.index);\n      this.entries.splice(index, 1);\n      return this.render();\n    }\n  }\n\n  /**\n   * A triggered operation when any inputs or dropdowns are interacted\n   * with to save the data from UI\n   *\n   * @param {Event} event\n   */\n  async _onResistanceChange(event) {\n    const target = event.currentTarget;\n\n    const tr = target.closest(\"tr.resistance\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = target.dataset.index;\n    const value = target.value;\n    let updateValue = null;\n\n    // Sanity-check our updated value\n    if (target.dataset.dtype === \"Number\") {\n      let val = parseFloat(value);\n      if (isNaN(val)) val = 0;\n      updateValue = Math.floor(val * 100) / 100;\n    } else if (target.dataset.dtype === \"Boolean\") updateValue = value === \"true\";\n    else updateValue = value;\n\n    // Process the value into the types array or assign to an entry property\n    switch (index2) {\n      case \"types0\":\n        this.entries[index].types[0] = updateValue;\n        break;\n      case \"types1\":\n        this.entries[index].types[1] = updateValue;\n        break;\n      default:\n        this.entries[index][index2] = updateValue;\n        break;\n    }\n  }\n\n  /**\n   * A triggered operation when the user modifies the custom input section\n   *\n   * @param {Event} event\n   */\n  async _onResistanceCustomChange(event) {\n    const target = event.currentTarget;\n\n    this.custom = target.value;\n  }\n}\n","export class ActorRestDialog extends DocumentSheet {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return foundry.utils.mergeObject(options, {\n      classes: [\"pf1\", \"actor-rest\"],\n      template: \"systems/pf1/templates/apps/actor-rest.hbs\",\n      width: 500,\n      sheetConfig: false,\n      closeOnSubmit: true,\n    });\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the special traits selection window to include the Actor name\n   *\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Rest\")}: ${this.actor.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the Actor using the configured options\n   * Remove/unset any flags which are no longer configured\n   *\n   * @param event\n   * @param formData\n   */\n  async _updateObject(event, formData) {\n    this.actor.performRest(formData);\n  }\n}\n","export class PointBuyCalculator extends DocumentSheet {\n  constructor(...args) {\n    super(...args);\n\n    const actorAbl = this.actor.system.abilities;\n\n    this.abilities = [];\n    for (const [k, name] of Object.entries(pf1.config.abilities)) {\n      this.abilities.push({\n        key: k,\n        name: name,\n        value: actorAbl[k]?.value ?? 10,\n      });\n    }\n\n    const ablValues = Object.keys(pf1.config.abilityCost).map((i) => Number(i));\n    this.min = Math.min(...ablValues);\n    this.max = Math.max(...ablValues);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"pointbuy-calculator\"],\n      template: \"systems/pf1/templates/apps/point-buy-calculator.hbs\",\n      width: 320,\n      height: \"auto\",\n      sheetConfig: false,\n      closeOnSubmit: false,\n      submitOnClose: false,\n    });\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.Application.PointBuy.Title\")}: ${this.object.name}`;\n  }\n\n  get actor() {\n    return this.document;\n  }\n\n  getData() {\n    const usedPoints = this.getSpentPoints();\n\n    const pointBuy = pf1.config.pointBuy;\n    const limitsArr = Object.entries(pointBuy).map(([key, ldata]) => ({ ...ldata, key }));\n    limitsArr.sort((a, b) => a.points - b.points);\n\n    // Find most relevant category\n    let closest = limitsArr[0].key;\n    for (const l of limitsArr) {\n      const prev = pointBuy[closest].points;\n      if (prev < usedPoints) closest = l.key;\n    }\n\n    return {\n      abilities: this.abilities,\n      points: usedPoints,\n      limits: limitsArr,\n      closest,\n      invalidPoints: pointBuy[closest].points !== usedPoints,\n    };\n  }\n\n  getSpentPoints() {\n    let result = 0;\n\n    for (const a of this.abilities) {\n      result += pf1.config.abilityCost[a.value];\n    }\n\n    return result;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".control\").click(this._onAbilityControl.bind(this));\n  }\n\n  _onAbilityControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const ablKey = a.closest(\".ability\").dataset.ability;\n    const abl = this.abilities.find((o) => o.key === ablKey);\n\n    if (a.classList.contains(\"add\")) {\n      abl.value = Math.min(this.max, abl.value + 1);\n    } else if (a.classList.contains(\"subtract\")) {\n      abl.value = Math.max(this.min, abl.value - 1);\n    }\n    this.render();\n  }\n\n  _updateObject() {\n    const updateData = {};\n    for (const a of this.abilities) {\n      updateData[`system.abilities.${a.key}.value`] = a.value;\n    }\n    this.actor.update(updateData);\n\n    this.close();\n  }\n}\n","export class Widget_ItemPicker {\n  constructor(callback, { items, columns = 3 } = {}) {\n    /**\n     * @property\n     * The HTML element that represents this widget.\n     */\n    this.element = null;\n\n    /**\n     * @property\n     * The callback to fire if an item is clicked.\n     */\n    this.callback = callback;\n\n    /**\n     * @typedef Widget_ItemPicker_Item\n     * @type {object}\n     * @property {string} value\n     * @property {string} label\n     */\n    /**\n     * @property\n     * @type Widget_ItemPicker_Item[]\n     * The items in this widget.\n     */\n    this._items = items;\n\n    /**\n     * @property\n     * @type {number}\n     * The maximum amount of columns shown.\n     */\n    this.columns = columns;\n  }\n\n  render(parentElem) {\n    // Generate widget\n    const rootElem = $($.parseHTML('<div class=\"widget item-picker\"></div>'));\n    // Add rows\n    let rowElem;\n    for (let a = 0; a < this._items.length; a++) {\n      const item = this._items[a];\n      if (a % this.columns === 0) {\n        rowElem = $($.parseHTML('<div class=\"row\"></div>'));\n        rootElem.append(rowElem);\n      }\n\n      const itemElem = $($.parseHTML(`<div class=\"item\" value=\"${item.value}\">${item.label}</div>`));\n      const widthRate = Math.floor(10000 / this.columns) / 100;\n      itemElem.css(\"flex\", `0 0 calc(${widthRate}% - 4px)`);\n      rowElem.append(itemElem);\n    }\n\n    // Replace parent element\n    if (!(parentElem instanceof jQuery)) parentElem = $(parentElem);\n    rootElem.css(\"position\", \"absolute\");\n    rootElem.css(\"left\", `${parentElem[0].offsetLeft}px`);\n    rootElem.css(\"position\", `${parentElem[0].offsetBottom}px`);\n    parentElem.parent().append(rootElem);\n\n    this.element = rootElem;\n\n    window.setTimeout(() => {\n      this.activateListeners(rootElem);\n    }, 10);\n  }\n\n  activateListeners(html) {\n    // Click item callback\n    html.find(\".item\").click(this._onClickItem.bind(this));\n\n    // Cancel widget\n    this._cancelCallback = this._onCancel.bind(this);\n    document.addEventListener(\"click\", this._cancelCallback);\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    const target = event.target;\n    let node = target;\n    if (node === this.element[0]) return;\n    while (node.parentNode) {\n      if (node === this.element[0]) return;\n      node = node.parentNode;\n    }\n\n    this.cancel();\n  }\n\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    this.callback($(a).attr(\"value\"));\n  }\n\n  cancel() {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    this.element.remove();\n  }\n}\n","/**\n * Level-up and class addition handler.\n */\nexport class LevelUpForm extends FormApplication {\n  /**\n   * @internal\n   * @type {ActorPF}\n   */\n  actor;\n\n  /**\n   * Relevant token if any.\n   *\n   * @internal\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * Temporary clone of the actor for seeing the results of various modifications with.\n   *\n   * @internal\n   * @type {ActorPF}\n   */\n  simulacra;\n\n  /**\n   * Temporary clone of the class to simulate changes.\n   *\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  mold;\n\n  config = {\n    health: { manual: null, type: null, value: 0 },\n    fcb: { choice: \"none\", unavailable: false, available: true },\n    visibility: null,\n    feats: 0,\n    abilityScore: {\n      new: 0,\n      used: 0,\n      get available() {\n        return this.new - this.used;\n      },\n    },\n  };\n\n  static ICONS = {\n    fcb: {\n      none: \"\",\n      hp: \"systems/pf1/icons/skills/green_19.jpg\",\n      skill: \"systems/pf1/icons/items/inventory/dice.jpg\",\n      alt: \"systems/pf1/icons/skills/affliction_22.jpg\",\n    },\n    health: {\n      auto: \"\",\n      manual: \"systems/pf1/icons/skills/green_19.jpg\",\n      roll: \"systems/pf1/icons/items/inventory/dice.jpg\",\n    },\n  };\n\n  useBackgroundSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n  /**\n   * @internal\n   * @param {Actor} actor\n   * @param {Item} item\n   * @param {object} options\n   */\n  constructor(actor, item = null, options = {}) {\n    super(item, options);\n\n    if (item?.type !== \"class\") throw new Error(\"Can not level-up non-class items.\");\n\n    this.actor = actor ?? item?.actor ?? options.actor;\n\n    if (!this.actor) throw new Error(\"LevelUpForm needs an actor\");\n\n    this.token = this.actor?.token ?? options.token;\n\n    delete this.options.actor;\n    delete this.options.token;\n\n    this.config.isMythic = item.subType === \"mythic\";\n\n    this.config.level = {\n      old: item.system.level,\n      new: item.system.level + 1,\n      levelUp: item.system.level > 0,\n      hd: {\n        old: this.actor.system.attributes.hd.total,\n        new: null,\n      },\n    };\n\n    const config = this.config;\n    this.config.abilityScore.upgrades = Object.fromEntries(\n      Object.entries(pf1.config.abilities).map(([key, label]) => [\n        key,\n        {\n          ...this.actor.system.abilities[key],\n          key,\n          label,\n          added: 0,\n          bonus: 0,\n          get isEnhanced() {\n            return this.total !== this.base;\n          },\n          get isNull() {\n            return this.base === null;\n          },\n          get isValid() {\n            return !this.isNull;\n          },\n          get isAvailable() {\n            return this.isValid && config.abilityScore.available > 0;\n          },\n          get isModified() {\n            return this.added != 0;\n          },\n        },\n      ])\n    );\n\n    // By default hide NPCs for GMs\n    if (!this.actor.hasPlayerOwner) this.config.visibility = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    this._initData();\n    this._initChoices();\n  }\n\n  /**\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  get item() {\n    return this.object;\n  }\n\n  set item(cls) {\n    this.object = cls;\n  }\n\n  get id() {\n    const parent = this.actor.uuid.replaceAll(\".\", \"-\");\n    const tag = this.item.system.tag || pf1.utils.createTag(this.item.name);\n    return `level-up-${parent}-class-${tag}`;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"level-up\"],\n      template: \"systems/pf1/templates/apps/level-up.hbs\",\n      scrollY: [\"section\"],\n      width: 820,\n      height: \"auto\",\n      submitOnChange: true,\n      submitOnClose: false,\n      closeOnSubmit: false,\n      resizable: true,\n    });\n  }\n\n  get title() {\n    if (this.isLevelUp)\n      return game.i18n.format(\"PF1.LevelUp.Increase\", { class: this.item.name }) + ` – ${this.actor.name}`;\n    else return game.i18n.format(\"PF1.LevelUp.Add\", { class: this.item.name }) + ` – ${this.actor.name}`;\n  }\n\n  get isLevelUp() {\n    return this.item.system.level > 0;\n  }\n\n  get isNewClass() {\n    return !this.isLevelUp;\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {Item} item - Class item\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item|null|undefined>} - Updated class item if updated or null if process was cancelled. Undefined if this re-opened existing dialog.\n   */\n  static async increaseLevel(actor, item, { token } = {}) {\n    const app = Object.values(actor.apps).find((o) => o instanceof LevelUpForm && o._element && o.item === item);\n\n    if (app) app.render(true, { focus: true });\n    else return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {object} itemData - Class item data\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item|null>}\n   */\n  static async addClassWizard(actor, itemData, { token } = {}) {\n    // Add class item\n    const item = new Item.implementation(itemData, { parent: actor });\n    // Alter initial data\n    item.updateSource({ system: { hp: 0, level: 0 } });\n    item.reset();\n\n    // Add level up form for new class\n    return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  _prepareAssociations() {\n    if (this.config.associations) return;\n\n    const newLevel = this.config.level.new;\n\n    const assocs =\n      this.item.system.links?.classAssociations\n        ?.filter((a) => a.level === newLevel)\n        ?.map((a) => ({ ...fromUuidSync(a.uuid || \"\"), uuid: a.uuid })) ?? [];\n\n    this.config.associations = assocs;\n  }\n\n  async getData() {\n    const hpOptions = game.settings.get(\"pf1\", \"healthConfig\").getClassHD(this.item);\n\n    const itemData = this.item.toObject();\n\n    const fcb = this.config.fcb;\n    fcb.hp = itemData.system.fc?.hp?.value || 0;\n    fcb.skill = itemData.system.fc?.skill?.value || 0;\n    fcb.alt = itemData.system.fc?.alt?.value || 0;\n\n    const result = {\n      ...this.config,\n      item: itemData,\n      document: this.item,\n      actor: this.actor,\n      config: pf1.config,\n      labels: {\n        fcb: {\n          skill: \"PF1.LevelUp.FC.Skill.Label\",\n          hp: \"PF1.LevelUp.FC.HP.Label\",\n          none: \"PF1.LevelUp.FC.None.Label\",\n          alt: \"PF1.LevelUp.FC.Alt.Label\",\n        },\n      },\n      fcb,\n      abilityScore: this.config.abilityScore,\n      icons: this.constructor.ICONS,\n      visibilityOptions: pf1.const.messageVisibility,\n      useBackgroundSkills: this.useBackgroundSkills,\n    };\n\n    // Disallow self roll for non-GMs.\n    if (!game.user.isGM) delete result.visibilityOptions.selfroll;\n\n    result.health.rate = Math.round(hpOptions.rate * 100);\n\n    const hd = this.config.level.hd.total;\n    const tier = this.config.level.tier.total;\n\n    result.abilityScore.new = 0;\n    if (this.config.isMythic) {\n      result.abilityScore.new = pf1.config.tierAbilityScores[tier] ?? 0;\n    } else {\n      result.abilityScore.new = pf1.config.levelAbilityScores[hd] ?? 0;\n    }\n\n    result.health.value = result.health.delta;\n    switch (result.health.type) {\n      case \"manual\":\n        result.health.value += result.health.raw;\n        break;\n      case \"auto\":\n        result.health.value = result.health.raw;\n        break;\n      case \"roll\":\n        result.health.value = result.health.raw;\n        break;\n    }\n\n    result.skills.delta.ranks = result.skills.delta.adv;\n\n    // Apply FCB\n    result.health.bonus = 0;\n    switch (result.fcb.choice) {\n      case \"hp\":\n        result.health.value += 1;\n        result.health.bonus += 1;\n        break;\n      case \"skill\":\n        result.skills.delta.ranks += 1;\n        break;\n    }\n\n    // Apply abl mod\n    //result.health.value += result.health.ability.mod;\n\n    // Next ability score\n    result.abilityScore.next = this._getNextAbilityScoreLandmark();\n\n    result.ready = this.isReady();\n\n    return result;\n  }\n\n  /**\n   * Determine if this level-up is finalized.\n   *\n   * @returns {boolean}\n   */\n  isReady() {\n    if (!this.config.health.type) return false;\n    return this.config.abilityScore.available == 0;\n  }\n\n  /**\n   * Get level at which next ability score is gained.\n   *\n   * @internal\n   * @returns {number|null}\n   */\n  _getNextAbilityScoreLandmark() {\n    // Progression table\n    const table = this.config.isMythic ? pf1.config.tierAbilityScores : pf1.config.levelAbilityScores;\n\n    // HD or tier\n    const hdt = this.config.isMythic ? this.config.level.tier.total : this.config.level.hd.total;\n\n    const current = table[hdt] ?? 0;\n    if (current > 0) return null;\n\n    // Next ability score\n    const gains = Object.entries(table)\n      .map(([level, gained]) => Number(level))\n      .filter((level) => level > hdt);\n\n    return gains[0] ?? null;\n  }\n\n  /**\n   * Default health selection if auto health is not used.\n   *\n   * @internal\n   * @returns {string}\n   */\n  _getDefaultHealthOption() {\n    if (this.item.subType === \"mythic\") return \"static\";\n    if (this.config.health.auto) return \"auto\";\n    if (this.config.health.maximized) return \"max\";\n    return \"roll\";\n  }\n\n  /**\n   * Default hit points.\n   *\n   * @internal\n   * @returns {number}\n   */\n  _getDefaultHitPoints() {\n    return Math.ceil(1 + (this.item.system.hd - 1) / 2);\n  }\n\n  _prepareHealthData() {\n    const hpConf = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConf.getClassHD(this.item);\n    const { auto, rate } = clsConf;\n\n    this.config.health.auto = auto;\n    this.config.health.manual ??= this._getDefaultHitPoints();\n    this.config.health.hitDie = this.item.system.hd || 8;\n\n    let delta = 0;\n    if (this.config.isMythic) {\n      delta = this.item.system.hd;\n    }\n    // Calculate auto health\n    else if (auto) {\n      const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[hpConf.rounding];\n      const dieHealth = 1 + (this.item.system.hd - 1) * rate;\n      // Continuous\n      if (hpConf.continuous) {\n        const { new: newHD, old: oldHD } = this.config.level.hd;\n        const newHP = newHD + round(newHD * dieHealth);\n        const oldHP = oldHD + round(oldHD * dieHealth);\n        delta = newHP - oldHP;\n      }\n      // Discrete\n      else {\n        delta = round(dieHealth);\n      }\n    }\n    // Manual health\n    else {\n      delta += this.config.health.manual;\n    }\n\n    this.config.health.delta = delta;\n\n    // Con mod\n    const hpAbl = this.simulacra.system.attributes?.hpAbility;\n    const hpMod = this.simulacra.system.abilities[hpAbl]?.mod ?? 0;\n    this.config.health.ability = { key: hpAbl, mod: hpMod };\n  }\n\n  _initData() {\n    this._prepareAssociations();\n\n    const cfg = this.config;\n\n    cfg.fcb.available = this.isFavouredClass();\n    cfg.fcb.unavailable = !cfg.fcb.available;\n\n    // Create temporary actor to get correct values for the new level\n    if (!this.simulacra) {\n      const actorData = this.actor.toObject();\n      const id = this.item.id ?? \"MOLD000000000000\";\n      // New items don't yet exist on actor, so we add simulation of one to the simulacra\n      if (!this.item.id) {\n        const itemData = this.item.toObject();\n        itemData._id = id;\n        actorData.items.push(itemData);\n      }\n      this.simulacra = new Actor.implementation(actorData);\n      this.mold = this.simulacra.items.get(id);\n    }\n\n    // Determine differences between current and new level\n    this.oldLevel ??= this.getLevelData(cfg.level.old);\n    const newLevel = this.getLevelData(cfg.level.new);\n    this.newLevel = newLevel;\n    cfg.level.hd = {\n      new: newLevel.hd,\n      old: this.oldLevel.hd,\n      total: newLevel.totalHD,\n    };\n    cfg.level.tier = {\n      new: newLevel.mythicTier,\n      old: this.oldLevel.mythicTier,\n      total: newLevel.totalMythicTier,\n    };\n    cfg.level.feats = newLevel.feats - this.oldLevel.feats;\n    // Saves\n    const oldSaves = this.actor.system.attributes?.savingThrows;\n    if (oldSaves) {\n      const newSaves = this.simulacra.system.attributes?.savingThrows;\n      cfg.level.fort = newSaves.fort.total - oldSaves.fort.total;\n      cfg.level.ref = newSaves.ref.total - oldSaves.ref.total;\n      cfg.level.will = newSaves.will.total - oldSaves.will.total;\n    }\n    cfg.level.bab = this.simulacra.system.attributes?.bab?.total - this.actor.system.attributes?.bab?.total;\n\n    cfg.health.raw = newLevel.hp - this.oldLevel.hp;\n\n    cfg.skills = {\n      new: newLevel.skills,\n      old: this.oldLevel.skills,\n    };\n\n    cfg.skills.delta = {\n      adv: cfg.skills.new.value - cfg.skills.old.value,\n      bg: cfg.skills.new.bg - cfg.skills.old.bg,\n    };\n    cfg.level.skills = cfg.skills.delta.adv + cfg.skills.delta.bg;\n\n    this._prepareHealthData();\n  }\n\n  getLevelData(level) {\n    const tempActor = this.simulacra;\n    const cls = this.mold;\n    cls.updateSource({ \"system.level\": level });\n    tempActor.reset();\n\n    let rollData = {};\n\n    const isMindless = tempActor.system.abilities?.int?.value === null;\n\n    // Rank counting\n    let advSkillRanks = 0;\n    let bgSkillRanks = 0;\n\n    const intMod = !isMindless ? tempActor.system.abilities?.int?.mod ?? 0 : 0;\n\n    tempActor.itemTypes.class\n      .filter((cls) => cls.subType !== \"mythic\")\n      .forEach((cls) => {\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        if (perLevel > 0) advSkillRanks += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (this.useBackgroundSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) bgSkillRanks += bgranks;\n        }\n      });\n\n    if (tempActor.system.details?.bonusSkillRankFormula) {\n      rollData = tempActor.getRollData();\n      const roll = Roll.defaultImplementation.safeRollSync(tempActor.system.details.bonusSkillRankFormula, rollData);\n      if (roll.err) console.error(`An error occurred in the Bonus Skill Rank formula of actor ${tempActor.name}.`);\n      advSkillRanks += roll.total || 0;\n    }\n\n    advSkillRanks += tempActor.system.details?.skills?.bonus || 0;\n\n    const feats = tempActor.getFeatCount().max;\n\n    return {\n      skills: { value: advSkillRanks, bg: bgSkillRanks },\n      feats,\n      hd: cls.hitDice,\n      totalHD: tempActor.system.attributes.hd.total,\n      mythicTier: cls.mythicTier,\n      totalMythicTier: tempActor.system.details.mythicTier,\n      hp: tempActor.system.attributes.hp.max,\n      bab: cls.system.babBase,\n      fort: cls.system.savingThrows?.fort?.base || 0,\n      ref: cls.system.savingThrows?.ref?.base || 0,\n      will: cls.system.savingThrows?.will?.base || 0,\n    };\n  }\n\n  /**\n   * @returns {boolean} Whether this form's associated class is a favoured class.\n   * @todo Add better logic for determining this <26-01-22, Furyspark>\n   */\n  isFavouredClass() {\n    return pf1.config.favoredClassTypes.includes(this.item.subType);\n  }\n\n  async _updateObject(event, formData) {\n    const mhp = this.config.health.manual;\n\n    foundry.utils.mergeObject(this.config, foundry.utils.expandObject(formData));\n\n    if (mhp !== this.config.health.manual) {\n      this._prepareHealthData();\n      // Assume adjusting manual health means user wants to use it\n      this.config.health.type = \"manual\";\n    }\n\n    return this.render();\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".ability-scores .ability-score .operator\").on(\"click\", this._onClickAbilityScoreOperator.bind(this));\n\n    // Allow opening class association items for inspection\n    html.find(\".item-list .item\").on(\"click\", this._openItemSheet.bind(this));\n\n    // Save button\n    html.find('button[data-action=\"commit\"]').on(\"click\", this._onCommit.bind(this));\n\n    // Manual/raw button\n    html.find('button[data-action=\"skip\"]').on(\"click\", this._onSkip.bind(this));\n  }\n\n  async _openItemSheet(event) {\n    const el = event.currentTarget;\n    const uuid = el.dataset.itemUuid;\n    const item = await fromUuid(uuid);\n    item.sheet.render(true, { focus: true });\n  }\n\n  _onClickAbilityScoreOperator(event) {\n    event.preventDefault();\n\n    const a = event.currentTarget;\n    const operator = a.dataset.operator;\n    const ablKey = a.closest(\".ability-score\").dataset.key;\n\n    // Determine how to adjust ability score\n    const add = this._adjustAbilityScore(ablKey, operator);\n    // Determine by how much\n    const value = this._adjustAbilityScoreValue(ablKey, add);\n\n    const abls = this.config.abilityScore;\n    const upgrades = abls.upgrades[ablKey];\n\n    const cost = this._adjustAbilityScoreCost(ablKey, value);\n\n    upgrades.value += value;\n    upgrades.added += cost;\n    abls.used += cost;\n\n    this.simulacra.updateSource({ system: { abilities: { [ablKey]: { value: upgrades.value } } } });\n\n    // Cross-pollinate new data\n    mergeObject(upgrades, this.simulacra.system.abilities[ablKey]);\n    this._initData();\n\n    this.render();\n  }\n\n  /**\n   * @internal\n   * @param {string} key - Ability score key\n   * @param {string} op - Operator clicked\n   * @returns {-1|0|1} - Direction of adjustment\n   */\n  _adjustAbilityScore(key, op = null) {\n    switch (op) {\n      case \"add\":\n        return 1;\n      default:\n        return 0;\n      case \"subtract\":\n        return -1;\n    }\n  }\n\n  /**\n   * Determine actual ability score adjustment value.\n   *\n   * By default 1 for normal level-ups, 2 for mythic tiers.\n   *\n   * Uses {@link pf1.config.levelAbilityScoreMult} and {@link pf1.config.tierAbilityScoreMult} as multipliers.\n   *\n   * @param {string} key\n   * @param {number} value\n   * @returns {number}\n   */\n  _adjustAbilityScoreValue(key, value) {\n    return value * (this.config.isMythic ? pf1.config.tierAbilityScoreMult : pf1.config.levelAbilityScoreMult);\n  }\n\n  /**\n   * Return cost of the adjustment.\n   *\n   * For homebrew support.\n   *\n   * @param {string} key\n   * @param {number} value\n   * @returns {number}\n   */\n  _adjustAbilityScoreCost(key, value) {\n    return value;\n  }\n\n  _initChoices() {\n    this._initFCBChoices();\n    this._initHPChoices();\n  }\n\n  _initFCBChoices() {\n    if (!this.config.fcb.available) return;\n\n    // Pre-select highest FCB\n    const { hp, skill, alt } = this.item.system.fc;\n    const fcb = [\n      { id: \"hp\", value: hp?.value || 0 },\n      { id: \"skill\", value: skill?.value || 0 },\n      { id: \"alt\", value: alt?.value || 0 },\n    ].sort((a, b) => b.value - a.value);\n\n    const highest = fcb[0];\n    if (highest.value > 0) this.config.fcb.choice = highest.id;\n  }\n\n  _initHPChoices() {\n    this.config.health.type = this._getDefaultHealthOption();\n\n    if (this.config.isMythic) return;\n\n    const hpConf = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConf.getClassHD(this.item);\n\n    if (clsConf.maximized) {\n      const maxHDlimit = hpConf.maximized;\n\n      const maximized = this.actor.itemTypes.class.reduce((maximized, cls) => {\n        if (!hpConf.getClassHD(this.item).maximized) return maximized;\n        return maximized + cls.hitDice;\n      }, 0);\n\n      const maxLeft = hpConf.maximized - maximized;\n      this.config.health.maximized = Math.max(0, maxLeft);\n\n      // Maximize auto health, too.\n      if (maxLeft > 0) {\n        this.config.health.delta = this.config.health.hitDie;\n        this.config.health.type = \"max\";\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  async close(options) {\n    this.resolve?.(null);\n    return super.close(options);\n  }\n\n  /**\n   * Get effective health roll formula.\n   *\n   * @internal\n   * @param {string} type\n   * @returns {string}\n   */\n  _getHealthFormula(type) {\n    const dieSize = this.item.system.hd;\n    switch (type) {\n      case \"static\":\n        return `${dieSize}`;\n      default:\n        return `1d${dieSize}`;\n    }\n  }\n\n  /**\n   * Spoof roll, for maximized, auto and manual health.\n   *\n   * @internal\n   * @param {Roll} roll\n   * @param {number} value\n   * @returns {Roll}\n   */\n  _spoofHealthRoll(roll, value) {\n    const data = roll.toJSON();\n    data.total = value;\n    data.terms[0].results[0].result = value;\n    return Roll.defaultImplementation.fromData(data);\n  }\n\n  /**\n   * Generate roll instance for the health gain.\n   *\n   * @internal\n   * @param {string} type\n   * @param {string} formula\n   * @returns {Roll}\n   */\n  _getHealthRoll(type, formula) {\n    const roll = Roll.defaultImplementation.safeRollAsync(formula);\n    switch (type) {\n      case \"auto\":\n      case \"max\":\n        return this._spoofHealthRoll(roll, this.config.health.delta);\n      case \"manual\":\n        return this._spoofHealthRoll(roll, this.config.health.manual);\n      default:\n        return roll;\n    }\n  }\n\n  /**\n   * Commit level-up\n   *\n   * @internal\n   * @param {Event} event\n   */\n  async _onCommit(event) {\n    this._disableSheet();\n\n    const cfg = this.config;\n    const itemData = this.item.toObject().system;\n    const updateData = {};\n\n    const newLevel = itemData.level + 1;\n    const cardData = {\n      isMythic: this.config.isMythic,\n      level: {\n        previous: itemData.level,\n        new: newLevel,\n      },\n      newFeatures: this.config.associations,\n      hp: {},\n    };\n\n    const formula = this._getHealthFormula(cfg.health.type);\n    const roll = this._getHealthRoll(cfg.health.type, formula);\n\n    const labels = {\n      manual: \"PF1.LevelUp.Chat.Health.Manual\",\n      roll: \"PF1.LevelUp.Chat.Health.Roll\",\n      max: \"PF1.LevelUp.Chat.Health.Auto\",\n      auto: \"PF1.LevelUp.Chat.Health.Auto\",\n      static: \"PF1.LevelUp.Chat.Health.Static\",\n    };\n\n    cardData.hp = {\n      label: labels[cfg.health.type],\n      roll: roll,\n      add: roll.toAnchor().outerHTML,\n    };\n\n    const hpValue = roll.total || 0;\n    updateData.hp = (itemData.hp || 0) + hpValue;\n\n    // Apply FCB\n    if (cfg.fcb.choice in itemData.fc) {\n      const key = cfg.fcb.choice;\n      const value = itemData.fc?.[key]?.value ?? 0;\n      foundry.utils.setProperty(updateData, `fc.${key}.value`, value + 1);\n\n      const fcKey = { hp: \"HP\", skill: \"Skill\", alt: \"Alt\" }[key];\n      cardData.fc = { type: key, label: `PF1.FavouredClassBonus.${fcKey}` };\n    }\n\n    // Gather information\n    const oldFeatCount = this.actor.getFeatCount();\n\n    const itemUpdates = [],\n      newItems = [];\n\n    // Apply ability score changes\n    const ablUpdate = this._updateAbilityScore();\n    if (ablUpdate) {\n      if (ablUpdate.update) itemUpdates.push(ablUpdate.itemData);\n      else newItems.push(ablUpdate.itemData);\n\n      cardData.ability = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n        if (added == 0) return rv;\n        rv[key] = added;\n        return rv;\n      }, {});\n    }\n\n    updateData.level = newLevel;\n    let cls = this.item;\n    // Update existing class item\n    if (cls.actor && cls.id) {\n      itemUpdates.unshift({ system: updateData, _id: cls.id });\n    }\n    // Create new class item\n    else {\n      cls.updateSource({ system: updateData });\n      newItems.unshift(cls.toObject());\n    }\n\n    // Add items\n    if (newItems.length) {\n      await this.actor.createEmbeddedDocuments(\"Item\", newItems, { render: itemUpdates.length == 0 });\n    }\n\n    if (itemUpdates.length) {\n      const newItems = await this.actor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n      cls = newItems.find((i) => i.type === \"class\");\n      if (cls) this.item = cls;\n    }\n\n    // Prepare remaining chat card info\n\n    // Add extra info (new feats, skill ranks, etc.)\n    const ex = {};\n    cardData.extra = ex;\n\n    // Show new feat count\n    const featCount = this.actor.getFeatCount();\n    featCount.new = Math.max(0, featCount.max - oldFeatCount.max);\n    ex.feats = featCount;\n    ex.enabled = featCount.new > 0;\n\n    // Create chat message\n    await this.createChatMessage(cardData);\n\n    // Resolve promise and close interface\n    this.resolve?.(cls);\n    this.close();\n  }\n\n  async _onSkip(event) {\n    event.preventDefault();\n\n    this._disableSheet();\n\n    const updateData = { system: { level: this.config.level.new } };\n\n    let cls = this.item;\n\n    // Old class\n    if (cls.id && cls.actor === this.actor) {\n      await cls.update(updateData);\n    }\n    // New class item\n    else {\n      cls.updateSource(updateData);\n      cls = await Item.implementation.create(cls.toObject(), { parent: this.actor });\n    }\n\n    // Open class sheet for manual adjustment\n    cls.sheet.render(true, { focus: true });\n\n    this.resolve?.(null);\n    this.close();\n  }\n\n  // Disable all buttons and inputs and set progress indicator\n  _disableSheet() {\n    const html = this.element[0];\n    const form = html.querySelector(\"form\");\n    form.style.cursor = \"progress\";\n    form.querySelectorAll(\"button,input,select\").forEach((button) => {\n      button.disabled = true;\n      button.style.cursor = \"progress\";\n    });\n  }\n\n  _updateAbilityScore() {\n    // No ability score upgrades this level\n    if (!this.config.abilityScore.upgrades) return;\n\n    const choices = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n      if (added == 0) return rv;\n      rv[key] = added;\n      return rv;\n    }, {});\n\n    if (Object.keys(choices).length === 0) return;\n\n    const result = { choices };\n\n    const item = this.actor.itemTypes.feat.find((o) => o.getFlag(\"pf1\", \"levelUp\") === true);\n\n    // Add level up ability score feature if it doesn't exist yet\n    if (!item) {\n      let itemData = pf1.config.levelAbilityScoreFeature;\n      itemData = foundry.utils.mergeObject(\n        itemData,\n        {\n          system: {\n            changes: Object.entries(choices).reduce((cur, [target, formula]) => {\n              const change = new pf1.components.ItemChange({\n                target: target,\n                formula: `${formula}`,\n                type: \"untypedPerm\",\n              }).toObject();\n\n              cur.push(change);\n              return cur;\n            }, []),\n          },\n          flags: {\n            pf1: {\n              levelUp: true,\n            },\n          },\n        },\n        { inplace: false }\n      );\n\n      return { itemData, update: false };\n    }\n    // If a level up ability score feature already exists, update it\n    else {\n      const changes = item.toObject().system.changes ?? [];\n      for (const [target, formula] of Object.entries(choices)) {\n        const change = changes.find((o) => o.target === target);\n\n        // Update previous change\n        if (change) {\n          const prevValue = parseInt(change.formula);\n          if (!Number.isNaN(prevValue)) {\n            const newValue = prevValue + formula;\n            change.formula = `${newValue}`;\n            continue;\n          }\n        }\n\n        // Add new change\n        changes.push(\n          new pf1.components.ItemChange({\n            target: target,\n            formula: `${formula}`,\n            type: \"untypedPerm\",\n          }).toObject()\n        );\n      }\n\n      return { itemData: { \"system.changes\": changes, _id: item.id }, update: true };\n    }\n  }\n\n  async createChatMessage(cardData) {\n    const templateData = {\n      ...cardData,\n      config: pf1.config,\n      item: this.item,\n      actor: this.actor,\n    };\n\n    const rolls = cardData.hp?.roll ? [cardData.hp.roll] : [];\n\n    const messageData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/level-up.hbs\", templateData),\n      type: CONST.CHAT_MESSAGE_TYPES.OOC,\n      speaker: ChatMessage.getSpeaker({ actor: this.actor, token: this.token }),\n      rolls,\n      flags: {\n        pf1: {\n          subject: { class: \"levelUp\" },\n        },\n      },\n    };\n\n    let rollMode = this.config.visibility || game.settings.get(\"core\", \"rollMode\");\n    // Prevent self message from non-GMs.\n    if (!game.user.isGM && rollMode === CONST.DICE_ROLL_MODES.SELF) rollMode = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    ChatMessage.implementation.applyRollMode(messageData, rollMode); // rollMode here sometimes has no effect?\n    return ChatMessage.create(messageData, { rollMode }); // rollMode here has no effect?\n  }\n}\n","export class CurrencyTransfer extends FormApplication {\n  constructor(\n    source = { actor: null, container: null, amount: {}, alt: false },\n    dest = { actor: null, container: null, amount: {}, alt: false },\n    options = {}\n  ) {\n    super(options);\n\n    if (source.actor) {\n      if (typeof source.actor === \"string\") source.actor = game.actors.get(source.actor);\n      if (source.actor.type == \"npc\") source.alt = false;\n    }\n    if (source.container) {\n      source.alt = false;\n      if (typeof source.container === \"string\")\n        source.container = source.actor ? source.actor.items.get(source.container) : game.items.get(source.container);\n    }\n    if (dest.actor) {\n      if (typeof dest.actor === \"string\") dest.actor = game.actors.get(dest.actor);\n      if (dest.actor.type == \"npc\") dest.alt = false;\n      else if (dest.actor === source.actor && !source.container && !dest.container) dest.alt = !source.alt;\n    }\n    if (dest.container) {\n      if (typeof dest.container === \"string\")\n        dest.container = dest.actor ? dest.actor.items.get(dest.container) : game.items.get(dest.container);\n    }\n\n    // Currency checks\n    if (source.container) {\n      source.amount = foundry.utils.mergeObject(source.container.system.currency, source.amount ?? {});\n    } else if (source.actor) {\n      source.amount = foundry.utils.mergeObject(\n        source.alt ? source.actor.system.altCurrency : source.actor.system.currency,\n        source.amount ?? {}\n      );\n    } else if (game.user.isGM) {\n      source.amount = foundry.utils.mergeObject({ pp: \"∞\", gp: \"∞\", sp: \"∞\", cp: \"∞\" }, source.amount ?? {});\n    } else {\n      ui.notification.warning(\"Cannot use Infinite currency transfer as non-gm.\");\n      return undefined;\n    }\n\n    if (!dest.actor && !dest.container) return undefined;\n\n    this.source = source;\n    this.dest = dest;\n  }\n\n  get title() {\n    let title;\n    if (!this.source.actor) {\n      if (this.source.container) title = this.source.container.name + \" \";\n      else title = \"∞ \";\n    } else {\n      title = this.source.actor.name + \" \";\n      if (this.source.container) title += `(${this.source.container.name}) `;\n    }\n    title += \"➤ \";\n    if (this.source.actor == this.dest.actor && (this.source.alt || this.dest.alt))\n      title += this.dest.alt ? game.i18n.localize(\"PF1.Currency.Weightless\") : game.i18n.localize(\"PF1.Currency.Label\");\n    else {\n      if (!this.dest.actor) title += this.dest.container.name;\n      else {\n        title += this.dest.actor.name;\n        if (this.dest.container) title += ` (${this.dest.container.name})`;\n      }\n    }\n    return title;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"currency-transfer\"],\n      template: \"systems/pf1/templates/apps/currency-transfer.hbs\",\n      width: 380,\n      height: 235,\n    });\n  }\n\n  /**\n   * Order of coin types, descending in value\n   *\n   * @type {CoinType[]}\n   */\n  static get order() {\n    return [\"pp\", \"gp\", \"sp\", \"cp\"]; // Object conversion ordering cannot be trusted in js\n  }\n\n  activateListeners(html) {\n    html.find(\"button.cur-range\").click(this._curRange.bind(this));\n\n    html.find(\"input\").on(\"input\", this._calcTotal.bind(this));\n    $(html.find(\"input\")[0]).trigger(\"input\");\n  }\n\n  _updateObject(event, formData) {\n    this.dest.amount = {\n      pp: formData.pp ?? 0,\n      gp: formData.gp ?? 0,\n      sp: formData.sp ?? 0,\n      cp: formData.cp ?? 0,\n    };\n    this.constructor.transfer(\n      this.source.container ? this.source.container : this.source.actor,\n      this.dest.container ? this.dest.container : this.dest.actor,\n      this.dest.amount,\n      this.source.alt,\n      this.dest.alt,\n      2\n    );\n  }\n\n  getData(_options = {}) {\n    return {\n      source: this.source,\n      dest: this.dest,\n      options: this.options,\n      title: this.title,\n      total:\n        this.source.amount.gp === \"∞\"\n          ? \"∞\"\n          : this.constructor.order.reduce((acc, c, idx) => acc + this.source.amount[c] * 10 ** (1 - idx), 0),\n    };\n  }\n\n  _curRange(ev) {\n    ev.preventDefault();\n    const button = ev.target.closest(\"button\");\n    const formField = button.closest(\".form-fields\");\n    const min = button.classList.contains(\"down\");\n    const input = formField.querySelector(\"input\");\n\n    if (min) input.value = \"\";\n    else input.value = formField.querySelector(\"span\").textContent;\n    $(input).trigger(\"input\");\n  }\n\n  _calcTotal(ev) {\n    const form = ev.target.closest(\".currency-transfer\");\n    const amounts = Object.fromEntries(\n      [...form.querySelectorAll(\"input\")].map((o) => [o.name, parseInt(o.value || 0)])\n    );\n    const value = this.constructor.order.reduce((acc, c, idx) => acc + amounts[c] * 10 ** (1 - idx), 0);\n\n    form.querySelector(\".currency-total .form-fields label\").textContent = Math.round(value * 100) / 100 + \" gp\";\n  }\n\n  async close(...args) {\n    super.close(...args);\n  }\n\n  static _failed(i18nKey) {\n    return void ui.notifications.error(\n      game.i18n.localize(\"PF1.Application.CurrencyTrancer.Failed\") + game.i18n.localize(i18nKey)\n    );\n  }\n\n  static async _directoryDrop(docDestId, event) {\n    event.preventDefault();\n\n    // try to extract the data\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"Currency\") return;\n\n    const destDoc = event.currentTarget.classList.contains(\"item\")\n      ? game.items.get(docDestId)\n      : game.actors.get(docDestId);\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    if (data.currency && sourceActor) {\n      return new CurrencyTransfer(\n        { actor: sourceActor, container: data.containerId, alt: data.alt },\n        {\n          actor: destDoc?.actor ?? destDoc,\n          container: destDoc.system.type === \"container\" ? destDoc.id : null,\n          amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n        }\n      ).render(true);\n    }\n  }\n\n  /**\n   * Transfer an amount of currency to a valid document\n   *\n   * @param {Document} sourceDoc ActorPF or ItemPF with currency\n   * @param {Document} destDoc ActorPF or ItemPF with currency\n   * @param {object|number} amount currency object containing transferred amount. Undefined keys will be assumed to be zero. Providing just a number will assume just gold\n   * @param {boolean} sourceAlt Use alt currency on source\n   * @param {boolean} destAlt Use alt currency on destination\n   * @param {number} [allowConversion=false] Attempts to make change with sourceDoc's currency limit\n   * @returns {boolean|object} false if failed, object containing amount transferred on success\n   */\n  static async transfer(sourceDoc, destDoc, amount, sourceAlt = false, destAlt = false, allowConversion = false) {\n    if ((!sourceDoc && !game.user.isGM) || !destDoc || !amount) return false;\n\n    if (typeof amount !== \"object\") amount = { gp: parseInt(amount) };\n\n    this.order.forEach((c) => (amount[c] = amount[c] ?? 0));\n    if (!Object.values(amount).find((a) => a > 0))\n      return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    let sourceCurrency = foundry.utils.deepClone(\n      sourceAlt ? sourceDoc?.system.altCurrency : sourceDoc?.system.currency\n    );\n    const destCurrency = foundry.utils.deepClone(destAlt ? destDoc.system.altCurrency : destDoc.system.currency);\n    if ((!sourceCurrency && !game.user.isGM) || !destCurrency) return false;\n    const originalSource = Object.assign(Object.fromEntries(this.order.map((o) => [o, Infinity])), sourceCurrency);\n\n    const totalAmount = this.order.reduce((acc, c, idx) => acc + amount[c] * 10 ** (1 - idx), 0);\n    const totalSource = this.order.reduce((acc, c, idx) => acc + sourceCurrency[c] * 10 ** (1 - idx), 0);\n\n    if (totalAmount > totalSource) return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    if (sourceCurrency) {\n      this.order.some((a) => {\n        const newSource = sourceCurrency[a] - amount[a];\n\n        if (newSource < 0 && allowConversion) {\n          amount = this.convert(originalSource, totalAmount, allowConversion);\n          sourceCurrency = Object.fromEntries(this.order.map((o) => [o, originalSource[o] - amount[o]]));\n          return true;\n        } else sourceCurrency[a] = newSource;\n      });\n    }\n\n    if (!amount || Object.values(sourceCurrency).find((c) => c < 0)) return false;\n\n    if (!sourceDoc.isOwner || !destDoc.isOwner) {\n      if (!game.users.find((o) => o.active && o.isGM))\n        return this._failed(\"PF1.Application.CurrencyTransfer.GMRequired\"), false;\n\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"currencyTransfer\",\n        data: {\n          sourceActor: sourceDoc.actor?.uuid ?? sourceDoc.uuid,\n          destActor: destDoc.actor?.uuid ?? destDoc.uuid,\n          sourceContainer: sourceDoc.type === \"container\" ? sourceDoc.id : \"\",\n          destContainer: destDoc.type === \"container\" ? destDoc.id : \"\",\n          sourceAlt: sourceAlt,\n          destAlt: destAlt,\n          amount: amount,\n        },\n      });\n      return amount;\n    }\n\n    this.order.forEach((c) => (destCurrency[c] += amount[c]));\n    if (sourceDoc === destDoc)\n      return sourceDoc.update({\n        \"system.altCurrency\": sourceAlt ? sourceCurrency : destCurrency,\n        \"system.currency\": destAlt ? sourceCurrency : destCurrency,\n      });\n    if (sourceAlt) sourceDoc.update({ \"system.altCurrency\": sourceCurrency });\n    else sourceDoc.update({ \"system.currency\": sourceCurrency });\n    if (destAlt) destDoc.update({ \"system.altCurrency\": destCurrency });\n    else destDoc.update({ \"system.currency\": destCurrency });\n    return amount;\n  }\n\n  /**\n   * Convert totalAmount to a currency object containing\n   *\n   * @param {object} limit currency object containing max number of coins. Falsey values will assume infinity\n   * @param {number|object} totalAmount currency as gold pieces. If provided as a currency object, will convert to gold\n   * @returns {boolean|object} false if failed, currency object containing new amounts on conversion success\n   */\n  static convert(limit, totalAmount) {\n    if (!limit) limit = Object.fromEntries(this.order.map((o) => [o, Infinity]));\n    else limit = Object.assign({}, limit);\n    if (typeof totalAmount !== \"number\")\n      totalAmount = this.order.reduce((acc, cur, idx) => acc + totalAmount?.[cur] * 10 ** (1 - idx));\n    if (!totalAmount) return false;\n    const amount = {};\n    totalAmount =\n      this.order.reduce((acc, cur, idx) => {\n        const minRequired = Math.min(limit[cur], Math.floor((acc % 10000) / 10 ** (3 - idx))), //Start from left to allow clumping\n          inCopper = minRequired * 10 ** (3 - idx);\n        amount[cur] = minRequired;\n        limit[cur] -= minRequired;\n        return acc - inCopper;\n      }, totalAmount * 100) / 100; //Operate in copper pieces to avoid floating point errors\n    if (totalAmount < 0) return false;\n    return amount;\n  }\n}\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { ActorResistanceSelector } from \"@app/damage-resistance-selector.mjs\";\nimport { ActorRestDialog } from \"./actor-rest.mjs\";\nimport { CR, adjustNumberByStringCommand, openJournal, enrichHTMLUnrolledAsync, naturalSort } from \"@utils\";\nimport { PointBuyCalculator } from \"@app/point-buy-calculator.mjs\";\nimport { Widget_ItemPicker } from \"@app/item-picker.mjs\";\nimport { getSkipActionPrompt } from \"../../documents/settings.mjs\";\nimport { ItemPF } from \"@item/item-pf.mjs\";\nimport { applyAccessibilitySettings } from \"@utils/chat.mjs\";\nimport { LevelUpForm } from \"@app/level-up.mjs\";\nimport { CurrencyTransfer } from \"@app/currency-transfer.mjs\";\nimport { getHighestChanges } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Extend the basic ActorSheet class to do all the PF things!\n * This sheet is an Abstract layer which is not used.\n *\n * @type {ActorSheet}\n */\nexport class ActorSheetPF extends ActorSheet {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * Track the set of item filters which are applied\n     *\n     * @type {Set}\n     */\n    this._filters = {\n      sections: {},\n      search: {},\n    };\n\n    /** Item search */\n    this.searchCompositioning = false; // for IME\n    this.searchRefresh = true; // Lock out same term search unless sheet also refreshes\n    this.searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n    this.searchDelayEvent = null; // setTimeout id\n    this.effectiveSearch = {}; // prevent searching the same thing\n\n    /**\n     * Track item updates from the actor sheet.\n     *\n     * @property\n     * @private\n     * @type {object[]}\n     */\n    this._itemUpdates = [];\n\n    /**\n     * Track hidden elements of the sheet.\n     *\n     * @property\n     */\n    this._hiddenElems = {};\n\n    /**\n     * @type {boolean} Whether the skills are currently locked.\n     * @property\n     * @private\n     */\n    this._skillsLocked = true;\n\n    /**\n     * @type {string[]} IDs of expanded items.\n     * @private\n     */\n    this._expandedItems = [];\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"actor\"],\n      scrollY: [\n        \".combat-attacks\",\n        \".item-groups-list\",\n        \".skills-list\",\n        \".traits\",\n        \".actor-notes\",\n        \".editor-content[data-edit='system.details.biography.value']\",\n      ],\n      dragDrop: [\n        { dragSelector: \".item[data-item-id]\" },\n        { dragSelector: \".currency .denomination\" },\n        { dragSelector: \"li.skill[data-skill]\" },\n        { dragSelector: \".saving-throw[data-savingthrow]\" },\n        { dragSelector: \".attribute[data-attribute]\" },\n        { dragSelector: \".attribute[data-attack]\" },\n        { dragSelector: \"li.generic-defenses[data-drag]\" },\n        { dragSelector: \".ability-scores .ability[data-ability]\" },\n        { dragSelector: \".spellcasting-concentration[data-drag]\" },\n        { dragSelector: \".spellcasting-cl\" },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"summary\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='skillset']\",\n          contentSelector: \"section.skillset-body\",\n          initial: \"adventure\",\n          group: \"skills\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='spellbooks']\",\n          contentSelector: \"section.spellbooks-body\",\n          initial: \"primary\",\n          group: \"spellbooks\",\n        },\n      ],\n    };\n  }\n\n  get currentPrimaryTab() {\n    return this._tabs.find((t) => t.group === \"primary\")?.active || null;\n  }\n\n  get currentSpellbookKey() {\n    return this._tabs.find((t) => t.group === \"spellbooks\")?.active || \"primary\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.actor.isOwner;\n\n    const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n\n    const context = {\n      actor: this.actor,\n      document: this.actor,\n      effects: this.actor.effects,\n      options: this.options,\n      owner: isOwner,\n      itemTypes: this.actor.itemTypes,\n      limited: this.actor.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      isCharacter: this.actor.type === \"character\",\n      hasHD: true,\n      config: pf1.config,\n      isGM: game.user.isGM,\n      race: this.actor.race != null ? this.actor.race.toObject() : null,\n      usesAnySpellbook: Object.values(this.actor.system.attributes.spells.spellbooks).some((book) => book.inUse),\n      sourceData: {},\n      skillsLocked: this._skillsLocked,\n      units: {\n        weight:\n          pf1.utils.getWeightSystem() === \"metric\" ? game.i18n.localize(\"PF1.Kgs\") : game.i18n.localize(\"PF1.Lbs\"),\n        distance: {\n          tactical: isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft,\n          overland: isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi,\n        },\n      },\n      unchainedActions: game.settings.get(\"pf1\", \"unchainedActionEconomy\"),\n    };\n\n    Object.values(context.itemTypes).forEach((items) => items.sort((a, b) => (a.sort ?? 0) - (b.sort ?? 0)));\n\n    const rollData = this.actor.getRollData();\n    context.rollData = rollData;\n    context.system = foundry.utils.deepClone(this.actor.system);\n\n    context.inCharacterGeneration = this.inCharacterGeneration;\n\n    context.hasProficiencies = context.isCharacter || game.settings.get(\"pf1\", \"npcProficiencies\");\n\n    // BAB iteratives\n    if (!context.unchainedActions) {\n      const bab = context.rollData.attributes?.bab?.total;\n      if (bab > 0) {\n        const numAttacks = 1 + RollPF.safeRollSync(pf1.config.iterativeExtraAttacks, { bab }).total || 0;\n        const iters = Array.fromRange(numAttacks).map(\n          (attackCount) => bab + RollPF.safeRollSync(pf1.config.iterativeAttackModifier, { attackCount }).total\n        );\n        context.iteratives = `+${iters.join(\" / +\")}`;\n      }\n    }\n\n    // Show whether the item has currency\n    context.hasCurrency = Object.values(this.actor.system.currency).some((o) => o > 0);\n    context.hasAltCurrency = Object.values(this.actor.system.altCurrency).some((o) => o > 0);\n\n    // Enrich descriptions\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      async: true,\n      relativeTo: this.actor,\n    };\n    const bio = context.system.details?.biography?.value;\n    const pBio = bio ? enrichHTMLUnrolledAsync(bio, enrichHTMLOptions) : Promise.resolve();\n    pBio.then((html) => (context.biographyHTML = html));\n    const notes = context.system.details?.notes?.value;\n    const pNotes = notes ? enrichHTMLUnrolledAsync(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pBio, pNotes]);\n\n    // The Actor and its Items\n    context.token = this.token;\n\n    context.items = this.actor.items.map((item) => this._prepareItem(item));\n    context.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    context.labels = this.actor.getLabels();\n    context.filters = this._filters;\n\n    // Generic melee and ranged attack bonuses, only present for sheet.\n    {\n      const attributes = context.system.attributes,\n        abilities = context.system.abilities,\n        sizeModifier = pf1.config.sizeMods[context.system.traits.size],\n        baseBonus = attributes.attack.shared + attributes.attack.general + sizeModifier,\n        meleeAbility = abilities[attributes.attack.meleeAbility]?.mod ?? 0,\n        rangedAbility = abilities[attributes.attack.rangedAbility]?.mod ?? 0;\n\n      context.genericAttacks = {\n        melee: {\n          ability: attributes.attack.meleeAbility,\n          abilityMod: meleeAbility,\n          modifier: baseBonus + attributes.attack.melee + meleeAbility,\n        },\n        ranged: {\n          ability: attributes.attack.rangedAbility,\n          abilityMod: rangedAbility,\n          modifier: baseBonus + attributes.attack.ranged + rangedAbility,\n        },\n      };\n    }\n\n    // Add inventory value\n    {\n      const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true });\n      const totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n      context.labels.totalValue = game.i18n.format(\"PF1.TotalItemValue\", totalValue);\n    }\n\n    // Ability Scores\n    for (const [a, abl] of Object.entries(context.system.abilities)) {\n      abl.label = pf1.config.abilities[a];\n      abl.totalLabel = abl.total == null ? \"-\" : abl.total;\n    }\n\n    // Armor Class\n    for (const [a, ac] of Object.entries(context.system.attributes.ac)) {\n      ac.label = pf1.config.ac[a];\n    }\n\n    // Saving Throws\n    for (const [a, savingThrow] of Object.entries(context.system.attributes.savingThrows)) {\n      savingThrow.label = pf1.config.savingThrows[a];\n    }\n\n    // Update skill labels\n    for (const [skillId, skill] of Object.entries(context.system.skills ?? {})) {\n      skill.key = skillId;\n      skill.path = skillId;\n      skill.skillId = skillId;\n      skill.label = pf1.config.skills[skillId] || skill.name;\n      skill.arbitrary = pf1.config.arbitrarySkills.includes(skillId);\n      skill.compendiumEntry = pf1.config.skillCompendiumEntries[skillId] || skill.journal || null;\n      skill.untrained = skill.rt === true && !(skill.rank > 0);\n\n      if (skill.subSkills != null) {\n        for (const [subSkillId, subSkill] of Object.entries(skill.subSkills)) {\n          subSkill.key = `${skillId}.${subSkillId}`;\n          subSkill.path = `${skillId}.subSkills.${subSkillId}`;\n          subSkill.skillId = skillId;\n          subSkill.subSkillId = subSkillId;\n          subSkill.label ||= subSkill.name;\n          subSkill.compendiumEntry = subSkill.journal || null;\n          subSkill.untrained = subSkill.rt === true && !(subSkill.rank > 0);\n          subSkill.custom = true; // All subskills are custom\n        }\n      }\n    }\n\n    // Feat count\n    {\n      // Feat count\n      const feats = this.actor.getFeatCount();\n      // Additional values\n      feats.bonus = feats.formula + feats.changes;\n      feats.issues = 0;\n      if (feats.missing > 0 || feats.excess) feats.issues += 1;\n      if (feats.disabled > 0) feats.issues += 1;\n      context.featCount = feats;\n    }\n\n    // Update traits\n    this._prepareTraits(context.system.traits);\n    context.labels.senses = this._prepareSenseLabels();\n    context.dr = this.actor.parseResistances(\"dr\");\n    context.eres = this.actor.parseResistances(\"eres\");\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    // Prepare skillsets\n    this._prepareSkillsets(context);\n\n    this._prepareSkills(context, rollData);\n\n    // Fetch the game settings relevant to sheet rendering.\n    {\n      const actorType = { character: \"pc\", npc: \"npc\" }[this.actor.type];\n      context.healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n      context.useWoundsAndVigor = context.healthConfig.variants[actorType].useWoundsAndVigor;\n      context.useWoundThresholds = context.healthConfig.variants[actorType].useWoundThresholds > 0;\n\n      if (context.useWoundThresholds) {\n        context.woundThresholdOptions = {\n          \"-1\": \"PF1.Default\",\n          ...context.healthConfig.woundThresholdOptions,\n        };\n      }\n    }\n\n    // Determine hidden elements\n    this._prepareHiddenElements();\n    context.hiddenElems = this._hiddenElems;\n\n    // Create a table of magic items, only for GM\n    if (game.user.isGM) {\n      context.magicItems = {\n        identified: [],\n        unidentified: [],\n      };\n      this.actor.items\n        .filter((o) => {\n          if (!o.isPhysical) return false;\n          if (!o.system.carried) return false;\n          if (o.system.quantity === 0) return false;\n\n          const school = o.system.aura?.school;\n          const cl = o.system.cl;\n          return school?.length > 0 && cl > 0;\n        })\n        .forEach((item) => {\n          const itemData = {\n            name: item.name,\n            unidentifiedName: item.system.unidentified?.name,\n            img: item.img,\n            id: item.id,\n            cl: item.system.cl,\n            aura: {\n              strength: CONFIG.PF1.auraStrengths[item.auraStrength],\n              school: CONFIG.PF1.spellSchools[item.system.aura?.school] || item.system.aura?.school,\n            },\n            identifyDC: 15 + item.system.cl,\n            identified: item.system.identified === true,\n            quantity: item.system.quantity || 0,\n          };\n\n          if (itemData.identified) context.magicItems.identified.push(itemData);\n          else context.magicItems.unidentified.push(itemData);\n        });\n    }\n\n    // Prepare (interactive) labels\n    if (this.actor.itemTypes.class.length === 0) {\n      context.labels.firstClass = game.i18n\n        .format(\"PF1.Info_FirstClass\", {\n          html: `<a data-action=\"browse\" data-category=\"classes\" data-tooltip=\"PF1.BrowseClasses\">${game.i18n.localize(\n            \"PF1.Info_FirstClass_Compendium\"\n          )}</a>`,\n        })\n        .replace(/\\n+/, \"<br>\");\n    }\n\n    // Conditions\n    const conditions = this.actor.system.conditions;\n    // Get conditions that are inherited from items\n    const inheritedEffects = this.actor.appliedEffects.filter((ae) => ae.parent instanceof Item && ae.statuses.size);\n    const condImmunities = this.actor.getConditionImmunities();\n\n    context.conditions = naturalSort(\n      pf1.registry.conditions\n        .filter((cond) => cond.showInBuffsTab)\n        .map((cond) => ({\n          id: cond.id,\n          img: cond.texture,\n          immune: condImmunities.has(cond.id),\n          active: conditions[cond.id] ?? false,\n          items: new Set(inheritedEffects.filter((ae) => ae.statuses.has(cond.id)).map((ae) => ae.parent)),\n          get inherited() {\n            return this.items.size > 0;\n          },\n          label: cond.name,\n          compendium: cond.journal,\n        })),\n      \"label\"\n    );\n\n    // Return data to the sheet\n    return context;\n  }\n\n  /**\n   * Prepare item data for display.\n   *\n   * @protected\n   * @param {ItemPF} item - Original document\n   * @returns {object} - Data fed to the sheet\n   */\n  _prepareItem(item) {\n    const type = item.type;\n    const subType = item.subType;\n\n    const result = foundry.utils.deepClone(item.system);\n    result.document = item;\n    result.type = type;\n    result.id = item.id;\n    result.img = item.img;\n    result.isActive = item.isActive;\n    result.isPhysical = item.isPhysical ?? false;\n    result.isSingleUse = item.isSingleUse;\n    result.isCharged = item.isCharged;\n    result.hasResource = result.isCharged && !result.isSingleUse;\n    result.hasUses = result.uses?.max > 0;\n\n    const defaultAction = item.defaultAction;\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    result.labels = item.getLabels({ actionId: defaultAction?.id, rollData });\n    result.hasAction =\n      item.hasAction || item.getScriptCalls(\"use\").length > 0 || item.getScriptCalls(\"postUse\").length > 0;\n    if (defaultAction) {\n      result.hasAttack = defaultAction.hasAttack;\n      result.hasMultiAttack = defaultAction.hasMultiAttack;\n      result.hasDamage = defaultAction.hasDamage;\n      result.hasRange = defaultAction.hasRange;\n      result.hasEffect = defaultAction.hasEffect;\n      if (this._canShowRange(item)) {\n        result.range = foundry.utils.mergeObject(\n          defaultAction?.data?.range ?? {},\n          {\n            min: defaultAction?.getRange({ type: \"min\", rollData }),\n            max: defaultAction?.getRange({ type: \"max\", rollData }),\n          },\n          { inplace: false }\n        );\n      }\n\n      if (result.hasAttack) {\n        const attacks = defaultAction\n          .getAttacks({ full: true, resolve: true, conditionals: true, bonuses: true, rollData })\n          .map((atk) => atk.bonus);\n        result.attackArray = attacks;\n        const highest = Math.max(...attacks); // Highest bonus, with assumption the first might not be that.\n        result.attackSummary = `${attacks.length} (${highest < 0 ? highest : `+${highest}`}${\n          attacks.length > 1 ? \"/…\" : \"\"\n        })`;\n      }\n    }\n\n    result.sort = item.sort;\n    result.showUnidentifiedData = item.showUnidentifiedData;\n    result.name = item.name; // Copy name over from item to handle identified state correctly\n\n    result.isEmpty = false;\n    if (result.isPhysical) {\n      result.quantity ||= 0;\n      result.isStack = result.quantity > 1;\n      result.destroyed = result.hp?.value <= 0;\n      result.isEmpty = result.quantity == 0;\n      result.isBroken = item.isBroken;\n      result.disabled ||= result.destroyed;\n    }\n\n    result.uncharged = false;\n    if (result.isActive && result.isCharged && !result.isSingleUse) {\n      // TODO: Do charge test in action selection instead of here\n      //const smallestUsage = Math.min(...item.actions.map((a) => a.getChargeCost()));\n      //const itemCharges = result.uses?.value != null ? result.uses.value : 1;\n      //if (itemCharges < smallestUsage) result.empty = true;\n    }\n\n    result.disabled = result.destroyed || result.uncharged || (!result.isActive && !result.isEmpty);\n\n    if (result.isPhysical) {\n      // Do not count unequipped physical items as disabled\n      if (item.system.equipped === false) result.disabled = false;\n      // Do not count unimplanted implants as disabled\n      else if (item.system.implanted === false) result.disabled = false;\n    }\n\n    result.typeLabel = game.i18n.localize(`PF1.Subtypes.Item.${type}.${subType}.Single`);\n\n    if (item.type === \"class\") {\n      if ([\"mythic\", \"racial\"].includes(item.subType)) {\n        result.xpUnbound = true;\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Determine if the item can have its range shown on this sheet.\n   *\n   * @protected\n   * @param {Item} item\n   * @returns {boolean}\n   */\n  _canShowRange(item) {\n    return item.type === \"attack\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Determine if this actor is in character generation state.\n   *\n   * @private\n   * @returns {boolean} True if character generation guides are desirable.\n   */\n  get inCharacterGeneration() {\n    return (\n      this.actor.system.attributes.hd.total <= 1 ||\n      Object.values(this.actor.system.abilities).every((abl) => abl.value === 10)\n    );\n  }\n\n  _prepareHiddenElements() {\n    // Hide spellbook info\n    const spellbooks = this.actor.system.attributes?.spells?.spellbooks ?? {};\n    for (const k of Object.keys(spellbooks)) {\n      const key = `spellbook-info_${k}`;\n      if (this._hiddenElems[key] == null) this._hiddenElems[key] = true;\n    }\n  }\n\n  _prepareTraits(traits) {\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n    const map = {\n      // \"dr\": PF1.damageTypes,\n      di: damageTypes,\n      dv: damageTypes,\n      ci: pf1.config.conditionTypes,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n    };\n    for (const [t, choices] of Object.entries(map)) {\n      const trait = traits[t];\n      if (!trait) continue;\n      let values = [];\n      // Prefer total over value for dynamically collected proficiencies\n      if ([\"armorProf\", \"weaponProf\", \"languages\"].includes(t)) {\n        values = trait.total ?? trait.value;\n      } else if (trait.value) {\n        values = trait.value instanceof Array ? trait.value : [trait.value];\n      }\n      trait.selected = values.reduce((obj, t) => {\n        obj[t] = choices[t] || t;\n        return obj;\n      }, {});\n\n      const custom = new Set();\n      // Prefer total over value for dynamically collected proficiencies\n      const customSource = trait.customTotal ? trait.customTotal : trait.custom;\n      if (customSource?.length) {\n        customSource.forEach((c, i) => (trait.selected[`custom${i + 1}`] = c));\n      }\n\n      trait.cssClass = !foundry.utils.isEmpty(trait.selected) ? \"\" : \"inactive\";\n    }\n  }\n\n  _prepareSenseLabels() {\n    const result = {};\n\n    const senses = this.actor.system.traits.senses ?? {};\n\n    for (const [key, value] of Object.entries(senses)) {\n      if (value === 0 || value === false) continue;\n      else if (key === \"ll\" && senses[key].enabled) {\n        result[key] = pf1.config.senses[key];\n      } else if (key === \"custom\") {\n        if (value.length) {\n          value\n            .split(pf1.config.re.traitSeparator)\n            .map((c) => c.trim())\n            .filter((c) => c)\n            .forEach((svalue, idx) => (result[`custom${idx + 1}`] = svalue));\n        }\n      } else if (value === true) {\n        result[key] = pf1.config.senses[key];\n      } else if (value > 0) {\n        const converted = pf1.utils.convertDistance(value);\n        result[key] = `${pf1.config.senses[key]} ${converted[0]} ${converted[1]}`;\n      }\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Insert a spell into the spellbook object when rendering the character sheet\n   *\n   * @param {object} data     The Actor data being prepared\n   * @param {Array} spells    The spell data being prepared\n   * @param {string} bookKey  The key of the spellbook being prepared\n   * @private\n   */\n  _prepareSpellbook(data, spells, bookKey) {\n    const editable = this.isEditable;\n    const book = this.actor.system.attributes.spells.spellbooks[bookKey];\n\n    const min = book.hasCantrips ? 0 : 1;\n    let max = 9;\n    if (book.autoSpellLevelCalculation) {\n      const cl = book.cl.autoSpellLevelTotal;\n\n      const castsPerDay =\n        pf1.config.casterProgression.castsPerDay[book.spellPreparationMode]?.[book.casterType]?.[cl - 1];\n      // Check against undefined protects against bad CL modifications.\n      max = castsPerDay !== undefined ? castsPerDay.length - 1 : 0;\n    } else {\n      if (book.casterType === \"low\") max = 4;\n      else if (book.casterType === \"med\") max = 6;\n    }\n\n    // Reduce spells to the nested spellbook structure\n    const spellbook = [];\n    for (let level = 0; level < 10; level++) {\n      const spellLevel = book.spells?.[`spell${level}`];\n      if (!spellLevel) {\n        console.error(`Bad data for spell level ${level} in spellbook \"${bookKey}\" for actor \"${this.actor.name}\"`);\n        continue;\n      }\n\n      const valid = !isNaN(spellLevel.max);\n\n      spellbook[level] = {\n        ...pf1.config.sheetSections.spells.spell,\n        id: `level-${level}`,\n        level,\n        valid,\n        usesSlots: true,\n        spontaneous: book.spontaneous,\n        canPrepare: data.actor.type === \"character\",\n        label: pf1.config.spellLevels[level],\n        items: [],\n        uses: spellLevel.value || 0,\n        hasIssues: spellLevel.hasIssues,\n        lowAbilityScore: spellLevel.lowAbilityScore,\n        lowLevel: spellLevel.lowLevel,\n        known: spellLevel.known,\n        preparation: spellLevel.preparation,\n        slots: spellLevel.slots,\n        invalidSlots: spellLevel.invalidSlots,\n        mismatchSlots: spellLevel.mismatchSlots,\n        invalidKnown: spellLevel.invalidKnown,\n        mismatchKnown: spellLevel.mismatchKnown,\n        domain: spellLevel.domain,\n        data: spellLevel,\n        isSchool: book.isSchool,\n      };\n    }\n\n    spells.forEach((spell) => {\n      const lvl = spell.level ?? min;\n      spellbook[lvl]?.items.push(spell);\n    });\n\n    for (let a = 0; a < 10; a++) {\n      if (spellbook[a]?.items.length === 0 && (a > max || a < min)) {\n        delete spellbook[a];\n      }\n    }\n\n    return spellbook;\n  }\n\n  /**\n   * Prepare adventure/background skill distinction if needed.\n   *\n   * @internal\n   * @param {object} context\n   */\n  _prepareSkillsets(context) {\n    const skills = context.system.skills;\n\n    const sets = {\n      all: { skills: {} },\n      adventure: { skills: {} },\n      background: { skills: {} },\n    };\n\n    // sort skills by label\n    const keys = Object.keys(skills).sort(function (a, b) {\n      if (skills[a].custom && !skills[b].custom) return 1;\n      if (!skills[a].custom && skills[b].custom) return -1;\n      return (\"\" + skills[a].label).localeCompare(skills[b].label);\n    });\n\n    keys.forEach((a) => {\n      const skl = skills[a];\n      // Include all but Lore and Artistry in all\n      if (!pf1.config.backgroundOnlySkills.includes(a)) sets.all.skills[a] = skl;\n      if (skl.background) sets.background.skills[a] = skl;\n      else sets.adventure.skills[a] = skl;\n    });\n\n    context.skillsets = sets;\n  }\n\n  /**\n   * Calculate used and available skill ranks.\n   *\n   * @internal\n   * @param {object} context\n   * @param {object} rollData\n   */\n  _prepareSkills(context, rollData) {\n    context.useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n    const abilities = context.system.abilities;\n\n    const isMindless = abilities?.int?.value === null;\n    const intMod = isMindless ? 0 : abilities?.int?.mod ?? 0;\n\n    // Rank counting\n    const skillRanks = { allowed: 0, used: 0, bgAllowed: 0, bgUsed: 0, sentToBG: 0 };\n\n    // Count used skill ranks\n    for (const skl of Object.values(context.rollData.skills)) {\n      if (skl.subSkills != null) {\n        for (const subSkl of Object.values(skl.subSkills)) {\n          if (context.useBGSkills && skl.background) {\n            skillRanks.bgUsed += subSkl.rank;\n          } else {\n            skillRanks.used += subSkl.rank;\n          }\n        }\n      } else if (context.useBGSkills && skl.background) {\n        skillRanks.bgUsed += skl.rank;\n      } else {\n        skillRanks.used += skl.rank;\n      }\n    }\n\n    // Allowed skill ranks from HD, classes, intelligence, FCB, etc.\n    this.actor.itemTypes.class\n      .filter((cls) => cls.system.subType !== \"mythic\")\n      .forEach((cls) => {\n        // Favoured Class Bonus\n        if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n          skillRanks.allowed += cls.system.fc?.skill?.value || 0;\n        }\n\n        // Mindless get nothing else\n        if (isMindless) return;\n\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        // Int from HD still applies even if skills per level is zero.\n        skillRanks.allowed += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (context.useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) skillRanks.bgAllowed += bgranks;\n        }\n      });\n\n    // Calculate from changes\n    skillRanks.allowed += this.actor.system.details?.skills?.bonus || 0;\n\n    // Adventure skills transferred to background skills\n    if (context.useBGSkills && skillRanks.bgUsed > skillRanks.bgAllowed) {\n      skillRanks.sentToBG = skillRanks.bgUsed - skillRanks.bgAllowed;\n      skillRanks.allowed -= skillRanks.sentToBG;\n      skillRanks.bgAllowed += skillRanks.sentToBG;\n    }\n\n    context.skillRanks = skillRanks;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Compute the level and percentage of encumbrance for an Actor.\n   *\n   * @returns {object}               An object describing the character's encumbrance level\n   * @private\n   */\n  _computeEncumbrance() {\n    const system = this.actor.system;\n    const carriedWeight = system.attributes.encumbrance.carriedWeight;\n    const load = {\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n    };\n    const usystem = pf1.utils.getWeightSystem();\n    const carryLabel =\n      usystem === \"metric\"\n        ? game.i18n.format(\"PF1.CarryLabelKg\", { kg: carriedWeight })\n        : game.i18n.format(\"PF1.CarryLabel\", { lbs: carriedWeight });\n\n    const enc = {\n      pct: {\n        light: Math.clamped((carriedWeight * 100) / load.light, 0, 99.5),\n        medium: Math.clamped(((carriedWeight - load.light) * 100) / (load.medium - load.light), 0, 99.5),\n        heavy: Math.clamped(((carriedWeight - load.medium) * 100) / (load.heavy - load.medium), 0, 99.5),\n      },\n      encumbered: {\n        light: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.medium,\n        medium: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy,\n        heavy: system.attributes.encumbrance.carriedWeight >= system.attributes.encumbrance.levels.heavy,\n      },\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n      aboveHead: system.attributes.encumbrance.levels.heavy,\n      offGround: system.attributes.encumbrance.levels.heavy * 2,\n      dragPush: system.attributes.encumbrance.levels.heavy * 5,\n      value: system.attributes.encumbrance.carriedWeight,\n      carryLabel: carryLabel,\n    };\n\n    return enc;\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery} html The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Tooltips\n    html[0].addEventListener(\"pointermove\", (ev) => this._moveTooltips(ev), { passive: true });\n\n    // Activate Item Filters\n    const filterLists = html.find(\".filter-list\");\n    filterLists.each(this._initializeFilterItemList.bind(this));\n    filterLists.on(\"click\", \".filter-item\", this._onToggleFilter.bind(this));\n\n    // Search boxes\n    {\n      const sb = html.find(\".search-input\");\n      sb.on(\"change input\", this._searchFilterChange.bind(this));\n      sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n      this.searchRefresh = true;\n      // Filter tabs on followup refreshes\n      sb.each(function () {\n        if (this.value.length > 0) $(this).change();\n      });\n    }\n\n    // Item summaries\n    html.find(\".item .item-name\").click((event) => this._onItemSummary(event));\n\n    // Allow opening items even if the sheet isn't editable.\n\n    // General items\n    html.find(\".item-edit\").on(\"click\", this._onItemEdit.bind(this));\n    // General items (right click)\n    html.find(\".item .item-name\").contextmenu(this._onItemEdit.bind(this));\n    // Quick items (right click)\n    html.find(\".quick-actions li\").contextmenu(this._onItemEdit.bind(this));\n    // Race item special right-click handler\n    html.find(\".race.item\").contextmenu(this._onItemEdit.bind(this));\n\n    // Spellbook config toggle\n    html.find(\"a.hide-show\").click(this._hideShowElement.bind(this));\n\n    // Open skill compendium entry\n    html.find(\"a.compendium-entry\").click(this._onOpenCompendiumEntry.bind(this));\n\n    // Open compendium browser\n    html.find('a[data-action=\"browse\"]').click(this._onOpenCompendiumBrowser.bind(this));\n\n    html\n      // \"pointerenter\" would be better, but Foundry tooltip behaves unpredictably with it.\n      .on(\"pointerover\", \"[data-tooltip-extended]\", this._activateExtendedTooltip.bind(this))\n      .on(\"pointerleave\", \"[data-tooltip-extended]\", () => game.tooltip.deactivate());\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      html.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add general text box (span) handler\n    html.find(\"span.text-box.direct\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Click to change text input\n    html.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n    html\n      .find('*[data-action=\"input-text\"].wheel-change')\n      .on(\"wheel\", (event) => this._onInputText(event.originalEvent));\n\n    // Select the whole text on click\n    html.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Abilities, Skills, Defenses and Traits\n    /* -------------------------------------------- */\n\n    // Ability Checks\n    html.find(\".ability-name\").click(this._onRollAbilityTest.bind(this));\n\n    // BAB Check\n    html.find(\".attribute.bab .rollable\").click(this._onRollBAB.bind(this));\n\n    // Generic attack weapon and CMB checks\n    html.find(\".attribute.attack .rollable\").click(this._onRollAttack.bind(this));\n\n    // Initiative Check\n    html.find(\".attribute.initiative .rollable\").click(this._onRollInitiative.bind(this));\n\n    // Saving Throw\n    html.find(\".saving-throw .rollable\").click(this._onRollSavingThrow.bind(this));\n\n    // Adjust skill rank\n    html.find(\"span.text-box.skill-rank\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Add arbitrary skill\n    html.find(\".skills .skill.arbitrary .skill-create\").click((ev) => this._onArbitrarySkillCreate(ev));\n\n    // Add custom skill\n    html.find(\".skills .controls > .skill-create\").click((ev) => this._onSkillCreate(ev));\n\n    // Edit skill\n    html.find(\".skills .skill > .controls > .skill-edit\").on(\"click\", (ev) => this._onSkillEdit(ev));\n    // Delete custom skill\n    html.find(\".skills .skill > .controls > .skill-delete\").click((ev) => this._onSkillDelete(ev));\n\n    // Item Action control\n    html.find(\".item-actions a.item-action\").click(this._itemActivationControl.bind(this));\n\n    // Roll Skill Checks\n    html.find(\".tab.skills .skill > .action.roll\").click(this._onRollSkillCheck.bind(this));\n\n    // Trait Selector\n    html.find(\".trait-selector\").click(this._onTraitSelector.bind(this));\n\n    // Resistance Selector\n    html.find(\".resistance-selector\").click(this._onResistanceSelector.bind(this));\n\n    // Display defenses\n    html.find(\".generic-defenses .rollable\").click((ev) => {\n      this.actor.displayDefenseCard({ token: this.token });\n    });\n\n    // Rest\n    html.find(\".rest\").click(this._onRest.bind(this));\n\n    // Point Buy Calculator\n    html.find(\"button.pointbuy-calculator\").click(this._onPointBuyCalculator.bind(this));\n\n    // Alignment\n    html.find(\".control.alignment\").click(this._onControlAlignment.bind(this));\n\n    // Edit senses\n    html.find(\".senses-selector\").on(\"click\", this._onSensesSelector.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(\".item-create\").on(\"click\", (ev) => this._onItemCreate(ev));\n    html.find(\".item-delete\").on(\"click\", this._onItemDelete.bind(this));\n    html.find(\".item-give\").on(\"click\", this._onItemGive.bind(this));\n    html.find(\".item-split:not(.disabled)\").on(\"click\", this._onItemSplit.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").click((event) => this._onItemRoll(event));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick (un)equip item\n    html.find(\"a.item-control.item-equip\").click((ev) => {\n      this._quickEquipItem(ev);\n    });\n\n    // Quick carry item\n    html.find(\"a.item-control.item-carry\").click((ev) => {\n      this._quickCarryItem(ev);\n    });\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Quick toggle item property\n    html.find(\"a.item-control.item-toggle-prepared\").click(this._itemPreparedToggle.bind(this));\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick Action\n    html.find(\".quick-actions li\").click(this._quickAction.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Set item charges\n    html\n      .find(\".inventory-body .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setFeatUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setFeatUses.bind(this));\n      });\n\n    // Set attack charges\n    html\n      .find(\".attacks-body .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setFeatUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setFeatUses.bind(this));\n      });\n\n    // Dynamic tooltips\n\n    // Weight details tooltip\n    html[0].querySelectorAll(\".item-list .item[data-item-id] .item-detail.item-weight\").forEach((el) => {\n      el.addEventListener(\n        \"pointerenter\",\n        (ev) => {\n          const el0 = ev.currentTarget;\n          const item = this.actor.items.get(el0.closest(\"[data-item-id]\").dataset.itemId);\n          const weight = item?.system.weight?.converted;\n\n          if (weight && weight.total > 0) {\n            const contents = [];\n            const quantity = item.system.quantity || 0;\n            contents.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: weight.value }));\n            if (quantity > 1)\n              contents.push(\n                game.i18n.format(\"PF1.StackDetails.Stack\", { value: Math.floor(weight.value * 100 * quantity) / 100 })\n              );\n            if (weight.contents > 0) {\n              contents.push(game.i18n.format(\"PF1.StackDetails.Contents\", { value: weight.contents }));\n              contents.push(game.i18n.format(\"PF1.StackDetails.Total\", { value: weight.total }));\n            }\n\n            game.tooltip.activate(el0, {\n              text: contents.join(\"<br>\"),\n              direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n              cssClass: \"pf1\",\n            });\n          }\n        },\n        { passive: true }\n      );\n      el.addEventListener(\"pointerleave\", () => game.tooltip.deactivate(), { passive: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Feats\n    /* -------------------------------------------- */\n\n    html\n      .find(\".feats-body .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setFeatUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setFeatUses.bind(this));\n      });\n\n    /* -------------------------------------------- */\n    /*  Classes\n    /* -------------------------------------------- */\n\n    // Level Up\n    html.find(\".level-up\").click(this._onLevelUp.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Spells\n    /* -------------------------------------------- */\n\n    // Set specific spell's (max) uses\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='amount']\")\n      .on(\"wheel\", this._setSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setSpellUses.bind(this));\n      });\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='max']\")\n      .on(\"wheel\", this._setMaxSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setMaxSpellUses.bind(this));\n      });\n\n    // Set spell level uses for spontaneous spellbooks\n    html\n      .find(\".spell-uses .spell-slots.spontaneous span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n    // Set base amount of spell uses for a given spell level\n    html.find(\".spell-uses .spell-max span.text-box\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Set spell point amount\n    html\n      .find(\".spell-points-current .value span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n\n    html.find(\".spellcasting-concentration.rollable\").click(this._onRollConcentration.bind(this));\n\n    html.find(\".spellcasting-cl.rollable\").click(this._onRollCL.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Buffs\n    /* -------------------------------------------- */\n\n    html\n      .find(\".item-detail.item-active input[type='checkbox']\")\n      .off(\"change\")\n      .on(\"change\", this._setItemActive.bind(this));\n\n    html\n      .find(\".item-detail.item-level span.text-box\")\n      .on(\"wheel\", this._setBuffLevel.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setBuffLevel.bind(this));\n      });\n\n    // Toggle condition\n    html.find(\".condition .checkbox\").click(this._onToggleCondition.bind(this));\n    html.find(\".condition .checkbox\").on(\"contextmenu\", this._onEditCondition.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Skills\n    /* -------------------------------------------- */\n\n    html.find(\".skill-lock-button\").on(\"click\", this._onToggleSkillLock.bind(this));\n  }\n\n  /**\n   * Handle extended tooltip on hover activation.\n   *\n   * Async to reduce UX impact.\n   *\n   * @private\n   * @param {Event} event\n   */\n  async _activateExtendedTooltip(event) {\n    const el = event.currentTarget;\n    const id = el.dataset.tooltipExtended;\n    if (!id) return;\n\n    const context = { actor: this.actor, bonusTypes: pf1.config.bonusTypes, config: pf1.config };\n    this._getTooltipContext(id, context);\n\n    context.sources = context.sources?.filter((list) => list.sources?.length > 0);\n\n    if (\n      !(\n        context.header ||\n        context?.paths?.length > 0 ||\n        context?.sources?.length > 0 ||\n        context?.details?.length > 0 ||\n        context?.notes?.length > 0\n      )\n    )\n      return;\n\n    for (const src of context.sources) {\n      src.sources = src.sources.map((s) => ({\n        ...s,\n        type: s.type || pf1.config.bonusTypes[s.modifier || \"untyped\"] || s.modifier,\n      }));\n    }\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = renderCachedTemplate(\"systems/pf1/templates/extended-tooltip.hbs\", context);\n\n    Hooks.callAll(\"renderPF1ExtendedTooltip\", this, id, template);\n\n    game.tooltip.activate(el, {\n      content: template.content,\n      cssClass: \"pf1 extended\",\n      direction: el.dataset.tooltipDirection || undefined,\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   */\n  _getTooltipContext(fullId, context) {\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._rollData ??= actor.getRollData();\n        return this._rollData;\n      },\n    };\n\n    const getSource = (path) => this.actor.sourceDetails[path];\n\n    const getNotes = (context, all = true) => {\n      const noteObjs = actor.getContextNotes(context, all);\n      return actor.formatContextNotes(noteObjs, lazy.rollData, { roll: false });\n    };\n\n    const damageTypes = (d) =>\n      [\n        ...(d.values?.map((dv) => pf1.registry.damageTypes.get(dv)?.name || dv) ?? []),\n        ...(d.custom\n          ?.split(\";\")\n          .map((dv) => dv?.trim())\n          .filter((dv) => !!dv) ?? []),\n      ].flat();\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"level\": {\n        const hd = lazy.rollData.attributes?.hd?.total ?? NaN;\n        if (hd > 0) {\n          paths.push({ path: \"@attributes.hd.total\", value: hd });\n          const mythic = lazy.rollData.details?.mythicTier ?? NaN;\n          if (mythic > 0) {\n            paths.push({ path: \"@details.mythicTier\", value: mythic });\n          }\n        }\n        const level = lazy.rollData.details?.level?.value ?? NaN;\n        if (level) {\n          paths.push({ path: \"@details.level.value\", value: lazy.rollData.details?.level?.value ?? NaN });\n        }\n        const cr = lazy.rollData.details?.cr?.total ?? NaN;\n        if (cr > 0) paths.push({ path: \"@details.cr.total\", value: CR.fromNumber(cr) });\n        break;\n      }\n      case \"hit-points\": {\n        const hp = system.attributes.hp;\n        paths.push(\n          { path: \"@attributes.hp.value\", value: hp.value },\n          { path: \"@attributes.hp.offset\", value: hp.offset },\n          { path: \"@attributes.hp.max\", value: hp.max },\n          { path: \"@attributes.hp.temp\", value: hp.temp },\n          { path: \"@attributes.hp.nonlethal\", value: hp.nonlethal }\n        );\n        if (hp.base) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.hp.base\", value: hp.base });\n        }\n\n        sources.push({ sources: getSource(\"system.attributes.hp.max\"), untyped: true });\n        break;\n      }\n      case \"vigor\": {\n        // Wounds & Vigor\n        const vigor = system.attributes.vigor;\n        paths.push(\n          { path: \"@attributes.vigor.value\", value: vigor.value },\n          { path: \"@attributes.vigor.offset\", value: vigor.offset },\n          { path: \"@attributes.vigor.temp\", value: vigor.temp },\n          { path: \"@attributes.vigor.max\", value: vigor.max }\n        );\n        if (vigor.base) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.vigor.base\", value: vigor.base });\n        }\n\n        sources.push({\n          sources: getSource(\"system.attributes.vigor.max\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"wounds\": {\n        // Wounds & Vigor\n        const wounds = system.attributes.wounds;\n        paths.push(\n          { path: \"@attributes.wounds.value\", value: wounds.value },\n          { path: \"@attributes.wounds.offset\", value: wounds.offset },\n          { path: \"@attributes.wounds.max\", value: wounds.max },\n          { path: \"@attributes.wounds.threshold\", value: wounds.threshold }\n        );\n        if (wounds.base) {\n          // npc lite sheet forced max\n          paths.push({ path: \"@attributes.wounds.base\", value: wounds.base });\n        }\n\n        sources.push({\n          sources: getSource(\"system.attributes.wounds.max\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"speed\": {\n        const mode = detail;\n\n        sources.push(\n          { sources: getSource(`system.attributes.speed.${mode}.base`) },\n          { sources: getSource(`system.attributes.speed.${mode}.total`) }\n        );\n\n        // Add base speed\n        const speed = system.attributes.speed[mode];\n        const [tD] = pf1.utils.convertDistance(speed.total);\n        const [tB] = pf1.utils.convertDistance(speed.base);\n        const [tR] = pf1.utils.convertDistance(speed.unhindered);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push(\n          { path: `@attributes.speed.${mode}.total`, value: tD, unit: tU },\n          { path: `@attributes.speed.${mode}.base`, value: tB, unit: tU },\n          { path: `@attributes.speed.${mode}.unhindered`, value: tR, unit: tU }\n        );\n        // Add overland speed\n        const [oD] = pf1.utils.convertDistance(speed.overland);\n        const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n        paths.push({ path: `@attributes.speed.${mode}.overland`, value: oD, unit: oU });\n\n        notes = [...getNotes(`${mode}Speed`), ...getNotes(\"allSpeeds\")];\n        break;\n      }\n      case \"flyManeuverability\":\n        paths.push({\n          path: \"@attributes.speed.fly.maneuverability\",\n          value: system.attributes.speed.fly.maneuverability,\n        });\n        break;\n      case \"ac\": {\n        const ac = system.attributes.ac[detail];\n        if (!ac) return;\n        paths.push({ path: `@attributes.ac.${detail}.total`, value: ac.total });\n        if (ac.value) {\n          // lite sheet forced value\n          paths.push({ path: `@attributes.ac.${detail}.value`, value: ac.value });\n        }\n        paths.push(\n          { path: \"@armor.type\", value: lazy.rollData.armor?.type },\n          { path: \"@shield.type\", value: lazy.rollData.shield?.type }\n        );\n        sources.push({\n          sources: getSource(`system.attributes.ac.${detail}.total`),\n        });\n\n        notes = getNotes(\"misc.ac\");\n        break;\n      }\n      case \"cmd\":\n        paths.push({\n          path: `@attributes.cmd.${detail}`,\n          value: system.attributes.cmd[detail],\n        });\n\n        sources.push({\n          sources: getSource(`system.attributes.cmd.${detail}`),\n        });\n\n        notes = getNotes(`misc.cmd`);\n        break;\n      case \"save\": {\n        const save = system.attributes.savingThrows[detail];\n        if (!save) return;\n        paths.push({\n          path: `@attributes.savingThrows.${detail}.total`,\n          value: save.total,\n        });\n        if (save.base) {\n          // npc lite sheet forced value\n          paths.push({ path: `@attributes.savingThrows.${detail}.base`, value: save.base });\n        }\n\n        sources.push({\n          sources: getSource(`system.attributes.savingThrows.${detail}.total`),\n        });\n\n        notes = getNotes(`savingThrow.${detail}`);\n        break;\n      }\n      case \"sr\":\n        paths.push({\n          path: \"@attributes.sr.total\",\n          value: system.attributes.sr.total,\n        });\n\n        sources.push({\n          sources: getSource(\"system.attributes.sr.total\"),\n          untyped: true,\n        });\n\n        notes = getNotes(\"misc.sr\");\n        break;\n      case \"bab\": {\n        const bab = system.attributes.bab;\n        paths.push({\n          path: \"@attributes.bab.total\",\n          value: bab.total,\n        });\n\n        // lite sheet forced value\n        if (bab.value) {\n          paths.push({ path: \"@attributes.bab.value\", value: bab.value });\n        }\n\n        sources.push({\n          sources: getSource(\"system.attributes.bab.total\"),\n          untyped: true,\n        });\n        break;\n      }\n      case \"cmb\":\n        paths.push({\n          path: \"@attributes.cmb.total\",\n          value: system.attributes.cmb.total,\n          // omit: + @attributes.attack.shared\n          // omit: + @attributes.attack.general\n        });\n\n        if (system.traits.size !== \"med\") {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.Size\"), value: pf1.config.sizeSpecialMods[system.traits.size] }],\n          });\n        }\n\n        if (system.attributes.cmbAbility) {\n          sources.push({\n            sources: [\n              {\n                name: pf1.config.abilities[system.attributes.cmbAbility],\n                value: system.abilities[system.attributes.cmbAbility]?.mod,\n              },\n            ],\n          });\n        }\n\n        sources.push(\n          { sources: getSource(\"system.attributes.attack.general\") },\n          { sources: getSource(\"system.attributes.cmb.bonus\") },\n          { sources: getSource(\"system.attributes.attack.shared\") }\n        );\n\n        notes = [...getNotes(\"attacks.attack\"), ...getNotes(\"attacks.melee\"), ...getNotes(\"misc.cmb\")];\n        break;\n      case \"init\": {\n        const init = system.attributes.init;\n        paths.push({ path: \"@attributes.init.total\", value: init.total });\n        if (init.value) {\n          // npc lite sheet forced value\n          paths.push({ path: \"@attributes.init.value\", value: init.value });\n        }\n\n        sources.push({\n          sources: getSource(\"system.attributes.init.total\"),\n        });\n\n        notes = getNotes(\"misc.init\");\n        break;\n      }\n      case \"abilityScore\": {\n        const abl = detail;\n        const ability = system.abilities[detail] ?? {};\n        paths.push(\n          { path: `@abilities.${abl}.total`, value: ability.total, sign: false },\n          { path: `@abilities.${abl}.value`, value: ability.value, sign: false },\n          { path: `@abilities.${abl}.mod`, value: ability.mod },\n          { path: `@abilities.${abl}.damage`, value: ability.damage, sign: false },\n          { path: `@abilities.${abl}.drain`, value: ability.drain, sign: false },\n          { path: `@abilities.${abl}.undrained`, value: ability.undrained, sign: false },\n          { path: `@abilities.${abl}.penalty`, value: ability.penalty, sign: false },\n          { path: `@abilities.${abl}.base`, value: ability.base, sign: false },\n          { path: `@abilities.${abl}.baseMod`, value: ability.baseMod }\n        );\n\n        sources.push(\n          { sources: getSource(`system.abilities.${abl}.total`) },\n          { sources: getSource(`system.abilities.${abl}.penalty`) },\n          {\n            label: game.i18n.localize(\"PF1.ModifierOnly\"),\n            sources: getSource(`system.abilities.${abl}.mod`),\n          },\n          {\n            label: game.i18n.localize(\"PF1.CheckOnly\"),\n            sources: getSource(`system.abilities.${abl}.checkMod`),\n          }\n        );\n\n        notes = getNotes(`abilityChecks.${abl}`);\n        break;\n      }\n      case \"acp\":\n        paths.push(\n          {\n            path: \"@attributes.acp.total\",\n            value: system.attributes.acp.total,\n          },\n          {\n            path: \"@attributes.acp.skill\",\n            value: system.attributes.acp.skill,\n          },\n          {\n            path: \"@attributes.acp.encumbrance\",\n            value: system.attributes.acp.encumbrance,\n          },\n          {\n            path: \"@attributes.acp.gear\",\n            value: system.attributes.acp.gear,\n          }\n        );\n\n        sources.push(\n          {\n            sources: getSource(\"system.attributes.acp.total\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: getSource(\"system.attributes.acp.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: getSource(\"system.attributes.acp.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      case \"max-dex\": {\n        const mdex = system.attributes.maxDexBonus;\n        paths.push({\n          path: \"@attributes.maxDexBonus\",\n          value: Number.isFinite(mdex) ? mdex : \"null\",\n        });\n\n        sources.push(\n          {\n            sources: getSource(\"system.attributes.maxDexBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: getSource(\"system.attributes.mDex.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: getSource(\"system.attributes.mDex.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      }\n      case \"asf\": {\n        // TODO: Make ASF proper change target\n        const asfSources = [];\n        this.actor.itemTypes.equipment\n          .filter((item) => item.isActive)\n          .reduce((cur, item) => {\n            const itemASF = item.system.spellFailure || 0;\n            if (itemASF > 0) asfSources.push({ name: item.name, value: `${itemASF}%` });\n            return cur + itemASF;\n          }, 0);\n\n        if (asfSources.length) {\n          sources.push({ sources: asfSources, untyped: true });\n        }\n        break;\n      }\n      case \"implants\": {\n        const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n        paths.push(\n          { path: \"@abilities.int.total\", value: lazy.rollData.abilities.int.total },\n          { path: \"@abilities.con.total\", value: lazy.rollData.abilities.con.total }\n        );\n        sources.push({\n          untyped: true,\n          sources: cybertech.map((item) => ({\n            name: item.name,\n            value: item.system.implant,\n          })),\n        });\n        break;\n      }\n      case \"size\":\n        paths.push({ path: \"@traits.size\", value: system.traits.size }, { path: \"@size\", value: lazy.rollData.size });\n        break;\n      case \"stature\":\n        paths.push({ path: \"@traits.stature\", value: system.traits.stature });\n        break;\n      case \"aura\":\n        paths.push({ path: \"@traits.aura.custom\", empty: true });\n        break;\n      case \"fastHeal\":\n        paths.push({ path: \"@traits.fastHealing\", empty: true });\n        break;\n      case \"regen\":\n        paths.push({ path: \"@traits.regen\", empty: true });\n        break;\n      case \"conditionResistance\":\n        paths.push({ path: \"@traits.cres\", empty: true });\n        break;\n      case \"conditionImmunity\":\n        paths.push({ path: \"@traits.ci.value\", empty: true }, { path: \"@traits.ci.custom\", empty: true });\n        break;\n      case \"energyResistance\":\n        paths.push({ path: \"@traits.eres.total\", empty: true });\n        break;\n      case \"hardness\":\n        paths.push({ path: \"@traits.hardness\", empty: true });\n        break;\n      case \"damageReduction\":\n        paths.push({ path: \"@traits.dr.total\", empty: true });\n        break;\n      case \"damageImmunity\":\n        paths.push({ path: \"@traits.di.value\", empty: true }, { path: \"@traits.di.custom\", empty: true });\n        break;\n      case \"damageVulnerability\":\n        paths.push({ path: \"@traits.dv.value\", empty: true }, { path: \"@traits.dv.custom\", empty: true });\n        break;\n      case \"proficiency\":\n        switch (detail) {\n          case \"language\":\n            paths.push({ path: \"@traits.languages.total\", empty: true });\n            sources.push({ sources: getSource(\"system.traits.languages\"), left: true, untyped: true });\n            break;\n          case \"weapon\":\n            paths.push({ path: \"@traits.weaponProf.total\", empty: true });\n            sources.push({ sources: getSource(\"system.traits.weaponProf\"), left: true, untyped: true });\n            break;\n          case \"armor\":\n            paths.push({ path: \"@traits.armorProf.total\", empty: true });\n            sources.push({ sources: getSource(\"system.traits.armorProf\"), left: true, untyped: true });\n            break;\n        }\n        break;\n      case \"quadruped\": {\n        paths.push({ path: \"@attributes.quadruped\", value: String(system.attributes.quadruped) });\n        const race = this.actor.race;\n        if (race) {\n          sources.push({\n            untyped: true,\n            sources: [{ name: race.name, value: race.system.quadruped ?? false, isBoolean: true }],\n          });\n        }\n        break;\n      }\n      case \"negativeLevels\":\n        paths.push({ path: \"@attributes.energyDrain\", value: system.attributes.energyDrain, signed: false });\n        break;\n      case \"item\": {\n        const [itemId, target] = detail.split(\".\");\n        const item = this.actor.items.get(itemId);\n        if (!item) return;\n        switch (target) {\n          case \"level\":\n            paths.push({\n              path: `@classes.${item.system.tag}.level`,\n              value: lazy.rollData.classes[item.system.tag].level,\n            });\n            if (item.subType === \"mythic\") {\n              paths.push({\n                path: `@classes.${item.system.tag}.mythicTier`,\n                value: lazy.rollData.classes[item.system.tag].mythicTier,\n              });\n            } else {\n              paths.push({\n                path: `@classes.${item.system.tag}.unlevel`,\n                value: lazy.rollData.classes[item.system.tag].unlevel,\n              });\n            }\n            break;\n          case \"resources\": {\n            if (item.isCharged && item.system.uses?.max > 0) {\n              paths.push(\n                { path: `@resources.${item.system.tag}.value`, value: item.system.uses?.value },\n                { path: `@resources.${item.system.tag}.max`, value: item.system.uses?.max }\n              );\n            }\n            break;\n          }\n          case \"attacks\": {\n            const action = item.defaultAction;\n            const attacks =\n              action\n                ?.getAttacks({ full: true, resolve: true, conditionals: true, bonuses: true })\n                ?.map((atk) => atk.bonus) ?? [];\n\n            if (attacks.length == 0) return;\n\n            const formatter = new Intl.NumberFormat(undefined, { signDisplay: \"always\" });\n            header = attacks.map((n) => formatter.format(n)).join(\"/\");\n\n            sources.push({\n              sources: item.attackSources,\n            });\n            break;\n          }\n          case \"damage\": {\n            const action = item.defaultAction;\n            if (!action?.hasDamage) return;\n\n            const actionData = action.data;\n            const rollData = action.getRollData();\n\n            const dmgformula = pf1.utils.formula.actionDamage(action, { strict: false });\n\n            //header = dmgformula; // No different than on sheet\n\n            const dmgSources = [];\n\n            subHeader = game.i18n.localize(\"PF1.Details\");\n\n            const damage = action.data.damage;\n            for (const { formula, type } of damage.parts ?? []) {\n              dmgSources.push({\n                name: formula,\n                value: pf1.utils.formula.simplify(formula, rollData, { strict: false }),\n                type: damageTypes(type).join(\", \"),\n                //unvalued: true,\n              });\n            }\n            for (const { formula, type } of damage.nonCritParts ?? []) {\n              dmgSources.push({\n                name: formula,\n                value: pf1.utils.formula.simplify(formula, rollData, { strict: false }),\n                type: damageTypes(type).join(\", \"),\n                //unvalued: true,\n              });\n            }\n\n            const held = rollData.action?.held || rollData.item?.held || \"normal\";\n\n            const abl = actionData.ability?.damage;\n            if (abl) {\n              const max = actionData.ability?.max ?? Infinity;\n              const mod = Math.min(rollData.abilities[abl]?.mod ?? 0, max);\n              const mult = actionData.ability?.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n              dmgSources.push({\n                value: mod >= 0 ? Math.floor(mod * mult) : mod,\n                type: pf1.config.abilities[abl],\n              });\n            }\n\n            sources.push({ sources: dmgSources });\n\n            sources.push({\n              sources: action.allDamageSources.map((s) => ({\n                name: s.flavor,\n                ...s,\n                type: pf1.config.bonusTypes[s.type] || s.type,\n              })),\n            });\n\n            const hasOptionalConditionals = action?.data.conditionals.find((c) => !c.default);\n            if (hasOptionalConditionals) {\n              // <span class=\"span3\">+ {{localize \"PF1.Conditionals\"}}</span>\n            }\n\n            if (damage.critParts?.length) {\n              // <span class=\"span3\">+ {{localize \"PF1.OnCritBonusFormula\"}}</span>\n            }\n            break;\n          }\n          case \"range\": {\n            const action = item.defaultAction;\n            if (!action?.hasRange) return;\n\n            const maxIncr = action.data.range?.maxIncrements ?? 1;\n            if (maxIncr <= 1) return;\n\n            details.push({\n              key: game.i18n.localize(\"PF1.MaximumRangeIncrements\"),\n              value: action.data.range.maxIncrements,\n              left: true,\n            });\n\n            const rollData = action.getRollData();\n            const range = {\n              ...(action.data.range ?? {}),\n              min: action.getRange({ type: \"min\", rollData }),\n              max: action.getRange({ type: \"max\", rollData }),\n            };\n\n            const u = pf1.utils.convertDistance(0, \"ft\")[1];\n            const mu = pf1.utils.convertDistance(0, range.units)[1];\n\n            details.push({\n              key: game.i18n.localize(\"PF1.Range\"),\n              value: `${range.min} ${u} – ${range.max} ${mu}`,\n              left: true,\n            });\n            break;\n          }\n          default:\n            throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n        }\n        break;\n      }\n      case \"carryCapacity\":\n        paths.push(\n          { path: \"@attributes.encumbrance.level\", value: system.attributes.encumbrance.level },\n          { path: \"@details.carryCapacity.bonus.total\", value: system.details.carryCapacity.bonus.total },\n          { path: \"@details.carryCapacity.multiplier.total\", value: system.details.carryCapacity.multiplier.total }\n        );\n\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryStrength\"),\n          sources: getSource(\"system.details.carryCapacity.bonus.total\"),\n        });\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryMultiplier\"),\n          sources: getSource(\"system.details.carryCapacity.multiplier.total\"),\n        });\n        break;\n      case \"feats\": {\n        const feats = this.actor.getFeatCount();\n\n        if (feats.levels > 0) {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.FromLevels\"), value: feats.levels }],\n            untyped: true,\n          });\n        }\n        if (feats.mythic > 0) {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.FromMythic\"), value: feats.mythic }],\n            untyped: true,\n          });\n        }\n\n        // Generate fake sources\n        const featSources = [];\n        // TODO: Move this to the real source info generation\n        this.actor.changes\n          .filter((c) => c.target === \"bonusFeats\")\n          .forEach((c) => {\n            if (c.parent || c.flavor) {\n              featSources.push({\n                name: c.parent?.name ?? c.flavor,\n                value: c.value,\n              });\n            }\n          });\n\n        if (feats.formula !== 0) {\n          featSources.push({\n            name: game.i18n.localize(\"PF1.BonusFeatFormula\"),\n            value: feats.formula,\n          });\n        }\n        sources.push({ sources: featSources, untyped: true });\n        break;\n      }\n      case \"skills\": {\n        const useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n        const isMindless = system.abilities?.int?.value === null;\n\n        const skillSources = [];\n        const isBG = detail === \"background\";\n\n        let bgAllowed = 0;\n\n        this.actor.itemTypes.class\n          .filter((cls) => cls.system.subType !== \"mythic\")\n          .forEach((cls) => {\n            // Favoured Class Bonus\n            // Apply FCB regardless if mindless if user applied such\n            if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n              const fcSkills = cls.system.fc?.skill?.value || 0;\n              if (fcSkills > 0 && !isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: cls.name }),\n                  value: fcSkills,\n                  untyped: true,\n                });\n              }\n            }\n\n            // Mindless get nothing else\n            if (isMindless) return;\n\n            const hd = cls.hitDice;\n            if (hd === 0) return;\n\n            // Background skills\n            if (useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n              const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n              bgAllowed += bgranks;\n              if (bgranks > 0 && isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                  value: bgranks,\n                  untyped: true,\n                });\n              }\n            }\n\n            if (!isBG) {\n              const perLevel = cls.system.skillsPerLevel || 0;\n              skillSources.push({\n                name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                value: perLevel * hd,\n                untyped: true,\n              });\n            }\n          });\n\n        // Ability ability score\n        if (!isBG && !isMindless) {\n          const intMod = system.abilities?.int?.mod;\n          if (intMod !== 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.AbilityInt\"),\n              value: intMod * system.attributes?.hd?.total,\n            });\n          }\n        }\n\n        // Count transfers for background skills\n        if (useBGSkills) {\n          let bgUsed = 0;\n\n          // Count used skill ranks\n          for (const skl of Object.values(lazy.rollData.skills)) {\n            if (skl.subSkills) {\n              for (const subSkl of Object.values(skl.subSkills)) {\n                if (skl.background) {\n                  bgUsed += subSkl.rank;\n                }\n              }\n            } else if (skl.background) {\n              bgUsed += skl.rank;\n            }\n          }\n\n          // Adventure skills transferred to background skills\n          const sentToBG = bgUsed - bgAllowed;\n          if (sentToBG > 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.Transferred\"),\n              value: isBG ? sentToBG : -sentToBG,\n            });\n          }\n        }\n\n        sources.push(\n          {\n            sources: getSource(\"system.details.skills.bonus\"),\n            untyped: true,\n          },\n          {\n            sources: skillSources,\n            untyped: true,\n          }\n        );\n        break;\n      }\n      case \"skill\": {\n        const fullSkillId = detail,\n          skillIdParts = fullSkillId.split(\".\"),\n          mainId = skillIdParts.shift(),\n          subSkillId = skillIdParts.pop(),\n          skill = this.actor.getSkillInfo(fullSkillId, { rollData: lazy.rollData });\n\n        header = `<code>${skill.id}</code>`;\n\n        const path = subSkillId ? `${mainId}.subSkills.${subSkillId}` : mainId;\n\n        paths.push(\n          { path: `@skills.${path}.mod`, value: skill.mod },\n          { path: `@skills.${path}.rank`, value: skill.rank }\n        );\n\n        const acp = system.attributes?.acp?.skill || 0;\n\n        const skillSources = [];\n        // Add skill rank source\n        if (skill.rank > 0) {\n          skillSources.push({ name: game.i18n.localize(\"PF1.SkillRankPlural\"), value: skill.rank });\n\n          // Add class skill bonus source\n          if (skill.cs) {\n            skillSources.push({ name: game.i18n.localize(\"PF1.CSTooltip\"), value: pf1.config.classSkillBonus });\n          }\n        }\n\n        // Add ACP source\n        if (skill.acp && acp > 0) {\n          skillSources.push({ name: game.i18n.localize(\"PF1.ACPLong\"), value: -acp });\n        }\n\n        // Add ability modifier source\n        if (skill.ability) {\n          skillSources.push({\n            name: pf1.config.abilities[skill.ability],\n            value: lazy.rollData.abilities[skill.ability]?.mod ?? 0,\n          });\n        }\n\n        sources.push({ sources: skillSources }, { sources: getSource(`system.skills.${path}.mod`) });\n\n        notes = getNotes(`skill.${fullSkillId}`);\n        if (subSkillId) notes.push(...getNotes(`skill.${mainId}`, false));\n        break;\n      }\n      case \"spellbook\": {\n        const [bookId, target, subTarget] = detail.split(\".\");\n        const spellbook = system.attributes?.spells?.spellbooks?.[bookId];\n        switch (target) {\n          case \"class\": {\n            paths.push(\n              { path: \"@cl\", value: spellbook.cl.total },\n              { path: `@spells.${bookId}.cl.total`, value: spellbook.cl.total }\n            );\n\n            let cls;\n            // TODO: get proper spellbook roll data\n            if (spellbook.class === \"_hd\") cls = { level: lazy.rollData.attributes?.hd?.total };\n            cls = lazy.rollData.classes?.[spellbook.class];\n            if (cls) paths.push({ path: \"@class.level\", value: cls.level });\n\n            sources.push({\n              sources: getSource(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n            });\n            break;\n          }\n          case \"ability\": {\n            const ablMod = lazy.rollData.abilities[spellbook.ability]?.mod;\n            paths.push(\n              {\n                path: `@spells.${bookId}.abilityMod`,\n                value: ablMod,\n              },\n              {\n                path: \"@ablMod\",\n                value: ablMod,\n              }\n            );\n            break;\n          }\n          case \"level\":\n            paths.push({\n              path: `@spells.${bookId}.cl.total`,\n              value: spellbook.cl?.total,\n            });\n            sources.push({\n              sources: getSource(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n              untyped: true,\n            });\n            break;\n          case \"concentration\": {\n            paths.push({\n              path: `@spells.${bookId}.concentration.total`,\n              value: spellbook.concentration?.total,\n            });\n            sources.push({\n              sources: getSource(`system.attributes.spells.spellbooks.${bookId}.concentration.total`),\n              untyped: true,\n            });\n            break;\n          }\n          case \"range\": {\n            const unit = subTarget;\n            paths.push({\n              path: `@spells.${bookId}.range.${unit}`,\n              value: spellbook.range?.[unit],\n              unit:\n                pf1.utils.getDistanceSystem() === \"metric\"\n                  ? pf1.config.measureUnitsShort.m\n                  : pf1.config.measureUnitsShort.ft,\n            });\n            break;\n          }\n          case \"spellPoints\":\n            paths.push(\n              { path: `@spells.${bookId}.spellPoints.value`, value: spellbook.spellPoints.value },\n              { path: `@spells.${bookId}.spellPoints.max`, value: spellbook.spellPoints.max }\n            );\n\n            break;\n        }\n        break;\n      }\n      case \"spell\": {\n        const [itemId, target] = detail.split(\".\");\n        const item = this.actor.items.get(itemId);\n        switch (target) {\n          case \"material\": {\n            const materials = item.system.materials ?? {};\n            if (materials.focus) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.focus.Label\"),\n                value: materials.focus,\n              });\n            }\n            if (materials.value) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.material.Label\"),\n                value: materials.value,\n              });\n            }\n            break;\n          }\n          case \"school\": {\n            if (item.system.subschool) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SubSchool\"),\n                value: item.system.subschool,\n              });\n            }\n\n            if (item.system.descriptors?.total?.size) {\n              details.push({\n                key: game.i18n.localize(\"PF1.DescriptorPlural\"),\n                value: Array.from(item.system.descriptors?.total).join(\", \"),\n              });\n            }\n\n            const action = item.defaultAction;\n\n            if (action?.hasDamage) {\n              const types = action.data.damage?.parts?.map((d) => d.type).map(damageTypes) ?? [];\n\n              if (types.length) {\n                details.push({\n                  key: game.i18n.localize(\"PF1.Damage\"),\n                  value: types.join(\", \"),\n                });\n              }\n            }\n            break;\n          }\n        }\n        break;\n      }\n      // Generics\n      case \"generic\": {\n        const [target, subTarget] = detail.split(\".\");\n        switch (target) {\n          case \"attack\": {\n            paths.push(\n              { path: \"@attributes.attack.shared\", value: system.attributes.attack.shared },\n              { path: \"@attributes.attack.general\", value: system.attributes.attack.general },\n              { path: `@attributes.attack.${subTarget}`, value: system.attributes.attack[subTarget] }\n            );\n\n            const abl = system.attributes.attack[`${subTarget}Ability`];\n\n            sources.push(\n              { sources: getSource(\"system.attributes.attack.shared\") },\n              {\n                sources: [\n                  {\n                    name: pf1.config.abilities[abl] || abl,\n                    value: lazy.rollData.abilities[abl]?.mod,\n                  },\n                ],\n              }\n            );\n\n            if (system.traits.size !== \"med\") {\n              sources.push({\n                sources: [\n                  {\n                    name: game.i18n.localize(\"PF1.Size\"),\n                    value: pf1.config.sizeMods[system.traits.size],\n                  },\n                ],\n              });\n            }\n\n            sources.push({ sources: getSource(\"system.attributes.attack.general\") });\n            sources.push({ sources: getSource(`system.attributes.attack.${subTarget}`) });\n\n            notes = [...getNotes(\"attacks.attack\"), ...getNotes(`attacks.${subTarget}`)];\n\n            break;\n          }\n        }\n        break;\n      }\n      default:\n        throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @protected\n   * @param {Event} event - Triggering event\n   * @param {Function} callback - Submission handler\n   */\n  _onSpanTextInput(event, callback) {\n    const el = event.target;\n    const parent = el.parentElement;\n\n    const isNumber = el.dataset.dtype === \"Number\" || el.type === \"number\";\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(\"INPUT\");\n    newEl.type = \"text\";\n    if (el.dataset?.dtype) {\n      newEl.dataset.dtype = el.dataset.dtype;\n      if (isNumber) newEl.size = 12; // HTML defaults to 20\n    }\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n    const name = el.getAttribute(\"name\"); // span has no .name attribute even if name=\"\" is used\n\n    let prevValue = 0,\n      maxValue;\n\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.actor, name) || 0;\n      if (name.endsWith(\".value\") && !noCap && isNumber) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.actor, maxName);\n      }\n    } else {\n      if (!el.classList.contains(\"placeholder\")) {\n        prevValue = isNumber ? parseFloat(el.innerText || \"0\") : el.innerText || \"\";\n      }\n    }\n\n    // Add constraints if they exist\n    if (el.dataset.min) newEl.min = el.dataset.min;\n    if (el.dataset.step) newEl.step = el.dataset.step;\n    if (el.dataset.max) newEl.max = el.dataset.max;\n\n    // Set value of new input element\n    newEl.value = `${prevValue || 0}`;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = isNumber ? parseFloat(el.dataset.clearValue || \"0\") : \"\";\n\n    // Replace span with input element\n    parent.replaceChild(newEl, el);\n\n    let changed;\n    newEl.addEventListener(\n      \"change\",\n      (event) => {\n        event.preventDefault();\n        event.stopPropagation(); // Prevent Foundry acting on this\n        changed = true;\n\n        let newValue;\n        if (allowRelative) {\n          newValue = adjustNumberByStringCommand(prevValue, newEl.value, maxValue, clearValue);\n          newEl.value = newValue;\n        } else {\n          newValue = parseFloat(newEl.value || \"0\");\n        }\n\n        // Reset if nothing changed\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n        // Pass it to callback\n        else {\n          newEl.readOnly = true;\n          callback.call(this, event, el);\n        }\n      },\n      { once: true }\n    );\n\n    newEl.addEventListener(\n      \"focusout\",\n      (event) => {\n        if (changed) return;\n\n        const newValue = parseFloat(newEl.value || \"0\");\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n      },\n      { passive: true, once: true }\n    );\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  /**\n   * @protected\n   * @param {Event} event\n   */\n  _moveTooltips(event) {\n    let elem = event.target;\n    if (!elem.matches(\".tooltip\")) elem = elem.closest(\".tooltip\");\n    if (elem) {\n      const tip = elem.querySelector(\".tooltipcontent\");\n      if (tip) {\n        const x = event.clientX;\n        const y = event.clientY + 24;\n        tip.style.cssText += `left:${x}px;top:${y}px;`;\n      }\n    }\n  }\n\n  _onDragSkillStart(event) {\n    const elem = event.currentTarget;\n    const skillElem = elem.closest(\".skill\");\n    const mainSkill = skillElem.dataset.skill;\n    const subSkill = skillElem.dataset.subSkill;\n\n    const result = {\n      type: \"skill\",\n      uuid: this.actor.uuid,\n      skill: subSkill ? `${mainSkill}.${subSkill}` : mainSkill,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * @param {DragEvent} event\n   * @param {\"bab\"|\"cmb\"|\"defenses\"|\"concentration\"|\"cl\"|\"initiative\"|\"abilityScore\"|\"attack\"} type\n   * @param {string} [subType] Type specific subtype\n   */\n  _onDragMiscStart(event, type, subType) {\n    const result = {\n      type: type,\n      uuid: this.actor.uuid,\n    };\n\n    switch (type) {\n      case \"bab\":\n      case \"cmb\":\n      case \"initiative\":\n      case \"defenses\":\n        // No special handling\n        break;\n      case \"concentration\":\n      case \"cl\": {\n        const elem = event.currentTarget.closest(\".tab.spellbook-group\");\n        result.bookId = elem.dataset.tab;\n        break;\n      }\n      case \"abilityScore\":\n        result.ability = subType;\n        break;\n      case \"attack\":\n        result.attack = subType;\n        break;\n      default:\n        throw new Error(`Unrecognized drag source: ${type}`);\n    }\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  _onDragSaveStart(event, type) {\n    const result = {\n      type: \"save\",\n      save: type,\n      uuid: this.actor.uuid,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * Initialize Item list filters by activating the set of filters which are currently applied\n   *\n   * @private\n   * @param _i\n   * @param {Element} ul\n   */\n  _initializeFilterItemList(_i, ul) {\n    const filters = ul.querySelectorAll(\".filter-item\");\n    for (const li of filters) {\n      const set = (this._filters.sections[li.dataset.category] ??= new Set());\n      if (set.has(li.dataset.filter)) li.classList.add(\"active\");\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  async _onRest(event) {\n    event.preventDefault();\n\n    const skipDialog = pf1.documents.settings.getSkipActionPrompt();\n    if (skipDialog) {\n      const button = event.currentTarget;\n      button.disabled = true;\n      try {\n        await this.actor.performRest({ verbose: true });\n      } finally {\n        button.disabled = false;\n      }\n    } else {\n      const app = Object.values(this.actor.apps).find((o) => {\n        return o instanceof ActorRestDialog && o._element;\n      });\n      if (app) app.render(true, { focus: true });\n      else new ActorRestDialog(this.actor).render(true);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemRoll(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item == null) return;\n    return item.displayCard(undefined, { token: this.token });\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setFeatUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.uses.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _setSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.value ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.preparation.value\", value);\n    if (prevValue < value) {\n      const maxValue = item.system.preparation.max ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(maxValue, value));\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n  _setMaxSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.max ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(0, value));\n    if (prevValue > value) {\n      const curValue = item.system.preparation.value ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.value\", Math.min(curValue, value));\n    }\n    if (value < 0) {\n      el.tagName === \"INPUT\" ? (el.value = 0) : (el.innerText = 0);\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _adjustActorPropertyBySpan(event, oldEl) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    this._mouseWheelAdd(event, el);\n\n    // Get base value\n    const rawValue = el.tagName === \"INPUT\" ? el.value : el.innerText;\n    let value = el.dataset.dtype === \"String\" ? rawValue : Number(rawValue);\n\n    // Adjust value if needed\n    const name = el.getAttribute(\"name\"); // .name is not available on non-inputs\n    if (name.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.value$/)) {\n      if (Number.isNaN(parseInt(value))) value = null;\n      else value = parseInt(value);\n    }\n\n    // Add constraints if any\n    if (el.min) value = Math.max(Number(el.min), value);\n    if (el.max) value = Math.min(Number(el.max), value);\n    if (el.step) value = value.toNearest(Number(el.step));\n\n    let updateData;\n    if (name) {\n      if (value === getProperty(this.actor, name)) {\n        // Restore input\n        if (oldEl) el.parentElement.replaceChild(oldEl, el);\n        return;\n      }\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (event) => this._updateObject(event, this._getSubmitData(updateData)), {\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  _setBuffLevel(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    this.setItemUpdate(item.id, \"system.level\", value);\n\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _hideShowElement(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const target = this.element.find(`.${a.dataset.for}`);\n\n    if (target.hasClass(\"hidden\")) {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-down\").addClass(\"fa-arrow-circle-up\");\n      target.removeClass(\"hidden\");\n      target.hide();\n      target.slideDown(200);\n\n      this._hiddenElems[a.dataset.for] = false;\n    } else {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-up\").addClass(\"fa-arrow-circle-down\");\n      target.slideUp(200, () => target.addClass(\"hidden\"));\n\n      this._hiddenElems[a.dataset.for] = true;\n    }\n  }\n\n  _onToggleCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n\n    const immunities = this.actor.getConditionImmunities();\n\n    if (immunities.has(conditionId)) {\n      if (!this.actor.hasCondition(conditionId)) {\n        return void ui.notifications.warn(\n          game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n            name: this.actor.name,\n            condition: pf1.registry.conditions.get(conditionId)?.name || conditionId,\n          })\n        );\n      }\n    }\n\n    this.actor.toggleCondition(conditionId);\n  }\n\n  async _onEditCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n    const cond = pf1.registry.conditions.get(conditionId);\n    if (!cond) throw new Error(`Invalid condition ID: ${conditionId}`);\n\n    const immunities = this.actor.getConditionImmunities();\n\n    if (immunities.has(conditionId)) {\n      if (!this.actor.hasCondition(conditionId)) {\n        return void ui.notifications.warn(\n          game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n            name: this.actor.name,\n            condition: pf1.registry.conditions.get(conditionId)?.name || conditionId,\n          })\n        );\n      }\n    }\n\n    let ae;\n\n    if (this.actor.statuses.has(conditionId)) {\n      const relevantAEs = [];\n      for (const ae of this.actor.allApplicableEffects()) {\n        if (!ae.active) continue;\n        if (ae.statuses.has(conditionId)) relevantAEs.push(ae);\n      }\n\n      // TODO: Add selector and remove this error message\n      if (relevantAEs.length > 1) {\n        return void ui.notifications.warn(\"PF1.Error.TooManyConditionSources\", { localize: true });\n      }\n\n      ae = relevantAEs[0];\n    }\n\n    const { bottom, left } = a.getBoundingClientRect();\n\n    const rounds = await pf1.utils.dialog.getNumber({\n      title: cond.name + \" – \" + game.i18n.localize(\"PF1.Duration\"),\n      initial: Math.floor((ae?.duration?.seconds ?? 0) / CONFIG.time.roundTime),\n      hint: game.i18n.localize(\"PF1.Time.Period.round.Label\"),\n      min: 0,\n      step: 1,\n      dialog: {\n        top: bottom + 20,\n        left: left - 20,\n      },\n    });\n\n    if (Number.isNaN(rounds)) return;\n\n    const updatedata = { \"duration.seconds\": rounds * CONFIG.time.roundTime };\n    if (ae) ae.update(updatedata);\n    else this.actor.setCondition(conditionId, updatedata);\n  }\n\n  /**\n   * Toggle skill lock.\n   *\n   * @param {MouseEvent} event\n   */\n  _onToggleSkillLock(event) {\n    event.preventDefault();\n    this._skillsLocked = !this._skillsLocked;\n\n    const target = event.currentTarget;\n    target.classList.toggle(\"unlocked\", !this._skillsLocked);\n\n    const tab = target.closest(\".tab\");\n    tab.classList.toggle(\"locked\", this._skillsLocked);\n\n    tab.querySelectorAll(\".lockable\").forEach((el) => {\n      if ([\"INPUT\", \"SELECT\"].includes(el.tagName)) {\n        el.disabled = this._skillsLocked;\n      } else {\n        el.classList.toggle(\"hide-contents\", this._skillsLocked);\n      }\n    });\n  }\n\n  /**\n   * Handle opening a compendium browser\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onOpenCompendiumBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const category = a.dataset.category;\n\n    pf1.applications.compendiums[category].render(true, { focus: true });\n  }\n\n  /**\n   * Handle opening a skill's compendium entry\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  async _onOpenCompendiumEntry(event) {\n    const uuid = event.currentTarget.dataset.compendiumEntry;\n\n    openJournal(uuid);\n  }\n\n  _onRollConcentration(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.actor.rollConcentration(spellbookKey, { token: this.token });\n  }\n\n  _onRollCL(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.actor.rollCL(spellbookKey, { token: this.token });\n  }\n\n  _setItemActive(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const state = el.checked;\n    const itemId = el.closest(\".item\").dataset.itemId;\n\n    this.actor.items.get(itemId).setActive(state);\n  }\n\n  _onLevelUp(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    return LevelUpForm.increaseLevel(this.actor, item, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   * @private\n   */\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this.openItemSummary(li);\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @param {JQuery<HTMLElement>} elem - The element to open. Likely will have the `item` class in CSS.\n   * @param {boolean} [instant=false] - Whether to instantly show the expansion (true), or animate it (false)\n   */\n  async openItemSummary(elem, { instant = false, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    const { description, properties } = await item.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    this._expandedItems = this._expandedItems.filter((o) => o !== itemId);\n    if (elem.classList.contains(\"expanded\")) {\n      const summary = elem.querySelector(\".item-summary\");\n      if (instant) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: description || game.i18n.localize(\"PF1.NoDescription\"),\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      content = await TextEditor.enrichHTML(content, { rollData, async: true, secrets: this.actor.isOwner });\n\n      const div = $(content);\n\n      if (instant) elem.append(...div);\n      else {\n        div.hide();\n        elem.append(...div);\n        div.slideDown(200);\n      }\n      this._expandedItems.push(itemId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onInputText(event) {\n    event.preventDefault();\n    const elem = event.target;\n\n    if (!elem || elem?.disabled) return;\n\n    elem.readOnly = false;\n    const value = foundry.utils.getProperty(this.actor, elem.name);\n\n    const origValue = elem.value;\n    elem.value = value;\n\n    let changed = false;\n\n    const wheelEvent = event instanceof WheelEvent;\n    if (wheelEvent) {\n      this._mouseWheelAdd(event, elem);\n    } else {\n      elem.select();\n    }\n\n    const handler = (event) => {\n      // Clear selection if any\n      const s = document.getSelection();\n      if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n\n      if (wheelEvent) elem.removeEventListener(\"pointerout\", handler);\n      else {\n        elem.removeEventListener(\"focusout\", handler);\n        elem.removeEventListener(\"keydown\", keyHandler);\n      }\n      elem.removeEventListener(\"click\", handler);\n\n      changed ||= `${value}` !== elem.value;\n\n      if (changed) {\n        this._onSubmit(event);\n      } else {\n        elem.readOnly = true;\n        elem.value = origValue;\n      }\n    };\n    const keyHandler = (event) => {\n      if (event.key === \"Enter\") {\n        changed = true;\n        handler.call(this, event);\n      }\n    };\n\n    if (wheelEvent) {\n      elem.addEventListener(\"pointerout\", handler, { passive: true });\n      changed = true;\n    } else {\n      elem.addEventListener(\"focusout\", handler, { passive: true });\n      elem.addEventListener(\"keydown\", keyHandler, { passive: true });\n    }\n    elem.addEventListener(\"click\", handler, { passive: true });\n  }\n\n  /* -------------------------------------------- */\n\n  async _onArbitrarySkillCreate(event) {\n    event.preventDefault();\n    const skillId = $(event.currentTarget).parents(\".skill\").attr(\"data-skill\");\n    const mainSkillData = this.actor.system.skills[skillId];\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: mainSkillData.ability,\n      rank: 0,\n      rt: mainSkillData.rt,\n      cs: mainSkillData.cs,\n      acp: mainSkillData.acp,\n    };\n\n    // Get tag\n    let count = 1;\n    let tag = `${skillId}${count}`;\n    while (mainSkillData.subSkills[tag] != null) {\n      count++;\n      tag = `${skillId}${count}`;\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${skillId}.subSkills.${tag}`] = skillData;\n    await this.actor.update(updateData);\n\n    return this._editSkill(skillId, tag);\n  }\n\n  async _onSkillCreate(event) {\n    event.preventDefault();\n    const isBackground = $(event.currentTarget).parents(\".skills-list\").attr(\"data-background\") === \"true\";\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: \"int\",\n      rank: 0,\n      mod: 0,\n      rt: false,\n      cs: false,\n      acp: false,\n      background: isBackground,\n      custom: true,\n    };\n\n    const baseName = skillData.name || \"skill\";\n    const baseTag = pf1.utils.createTag(baseName, { allowUnderScore: false });\n    let tag = baseTag;\n    let count = 1;\n    while (this.actor.system.skills[tag] != null) {\n      count++;\n      tag = baseTag + count.toString();\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${tag}`] = skillData;\n    await this.actor.update(updateData);\n\n    return this._editSkill(tag);\n  }\n\n  /**\n   * Opens a dialog to edit a skill.\n   *\n   * @param {string} skillId - The id of the skill in question.\n   * @param {string} [subSkillId] - The id of the subskill, if appropriate.\n   * @returns {Promise.<void>}\n   */\n  _editSkill(skillId, subSkillId) {\n    return new Promise((resolve) => {\n      const app = new pf1.applications.SkillEditor(this.actor, skillId, subSkillId);\n      app.addCallback(resolve);\n      app.render(true);\n    });\n  }\n\n  _onSkillEdit(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n\n    return this._editSkill(mainSkillId, subSkillId);\n  }\n\n  _onSkillDelete(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n    const skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n\n    const info = this.actor.getSkillInfo(skillId);\n\n    const deleteSkill = () => {\n      const updateData = {};\n      // Delete subskill\n      if (subSkillId) updateData[`system.skills.${mainSkillId}.subSkills.-=${subSkillId}`] = null;\n      // Delete main skill\n      else updateData[`system.skills.-=${mainSkillId}`] = null;\n      this.actor.update(updateData);\n    };\n\n    if (getSkipActionPrompt()) {\n      deleteSkill();\n    } else {\n      Dialog.confirm({\n        title: game.i18n.format(\"PF1.DeleteSkillTitle\", { name: info.fullName }),\n        content: `<p>${game.i18n.localize(\"PF1.DeleteSkillConfirmation\")}</p>`,\n        yes: () => deleteSkill(),\n        rejectClose: true,\n      });\n    }\n  }\n\n  async _onPointBuyCalculator(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.actor.apps).find((o) => {\n      return o instanceof PointBuyCalculator && o._element;\n    });\n    if (app) app.render(true, { focus: true });\n    else new PointBuyCalculator(this.actor).render(true);\n  }\n\n  async _onSensesSelector(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.actor.apps).find((o) => {\n      return o instanceof pf1.applications.SensesSelector && o._element;\n    });\n    if (app) app.render(true, { focus: true });\n    else new pf1.applications.SensesSelector(this.actor).render(true);\n  }\n\n  async _onControlAlignment(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const items = Object.entries(pf1.config.alignmentsShort).map(([value, label]) => ({ value, label }));\n    const w = new Widget_ItemPicker(\n      (alignment) => {\n        this.actor.update({ \"system.details.alignment\": alignment });\n      },\n      { items, columns: 3 }\n    );\n    w.render($(a));\n  }\n\n  /**\n   * Activate an item from item control button.\n   *\n   * @param {MouseEvent} event Click event\n   */\n  _itemActivationControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    item.use({ ev: event, token: this.token });\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n\n    if (item.type === \"container\") newQuantity = Math.min(newQuantity, 1);\n\n    item.update({ \"system.quantity\": newQuantity });\n  }\n\n  async _quickEquipItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    item.setActive(!item.activeState);\n  }\n\n  async _quickCarryItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.carried\": !item.system.carried });\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.identified\": !item.system.identified });\n    }\n  }\n\n  async _itemPreparedToggle(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    const property = el.dataset.name;\n\n    const updateData = { system: {} };\n    foundry.utils.setProperty(updateData.system, property, foundry.utils.getProperty(item.system, property) ? 0 : 1);\n    item.update(updateData);\n  }\n\n  _prepareDuplicateItem(itemData, { rename = true } = {}) {\n    delete itemData._id;\n\n    delete itemData.system.links?.children;\n    delete itemData.system.links?.charges;\n\n    itemData.sort = itemData.sort + 1_000;\n\n    if (rename) {\n      // BUG: If unidentified item has same name, it won't be matched or modified\n      const searchUnusedName = (name) => {\n        let iter = 1;\n        let newName;\n        do {\n          iter += 1;\n          newName = `${name} (${iter})`;\n        } while (this.actor.items.getName(newName));\n        return newName;\n      };\n\n      // Eliminate previous iterator\n      itemData.name = itemData.name.replace(/\\s+\\(\\d+\\)$/, \"\");\n\n      itemData.name = searchUnusedName(itemData.name);\n    }\n\n    // TODO: itemData.system.unidentified?.name;\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    const itemData = item.toObject();\n\n    this._prepareDuplicateItem(itemData);\n\n    const items = await this.actor.createEmbeddedDocuments(\"Item\", [itemData]);\n    // Open sheet for new item\n    items?.forEach((item) => item.sheet.render(true));\n  }\n\n  _quickAction(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    if (!item) return;\n\n    return item.use({ token: this.token });\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n    const category = a.dataset.category;\n\n    this.actor.convertCurrency(category, currencyType);\n  }\n\n  /**\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onItemCreate(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const [categoryId, sectionId] = el.dataset.create?.split(\".\") ?? [];\n    const createData = foundry.utils.deepClone(pf1.config.sheetSections[categoryId]?.[sectionId]?.create);\n    if (!createData) throw new Error(`No creation data found for \"${categoryId}.${sectionId}\"`);\n    const type = createData.type || el.dataset.type;\n    const subType = createData.system?.subType;\n    const typeName = game.i18n.localize(\n      subType ? `PF1.Subtypes.Item.${type}.${subType}.Single` : CONFIG.Item.typeLabels[type]\n    );\n\n    const newItem = new Item.implementation({ name: game.i18n.format(\"PF1.NewItem\", { type: typeName }), type });\n    newItem.updateSource(createData);\n\n    // Add type specific data\n    if (type === \"spell\") {\n      newItem.updateSource({\n        system: {\n          level: parseInt(el.dataset.level),\n          spellbook: el.dataset.book,\n        },\n      });\n    }\n\n    this._sortNewItem(newItem);\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => pf1.utils.isItemSameSubGroup(newItem, oldItem))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      // Ensure no duplicate names occur\n      const baseName = newItem.name;\n      let newName = baseName;\n      let i = 2;\n      const names = new Set(oldItems.map((i) => i.name));\n      while (names.has(newName)) {\n        newName = `${baseName} (${i++})`;\n      }\n\n      if (newName !== newItem.name) newItem.updateSource({ name: newName });\n    }\n\n    return this.actor.createEmbeddedDocuments(\"Item\", [newItem.toObject()], { renderSheet: true });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle editing an existing Owned Item for the Actor\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.actor.items.get(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true });\n  }\n\n  /**\n   * Handle deleting an existing Owned Item for the Actor\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.actor.items.get(li.dataset.itemId);\n\n    if (getSkipActionPrompt()) {\n      item.delete();\n    } else {\n      button.disabled = true;\n\n      const msg = `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`;\n      Dialog.confirm({\n        title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }),\n        content: msg,\n        yes: () => {\n          item.delete();\n          button.disabled = false;\n        },\n        no: () => (button.disabled = false),\n        rejectClose: true,\n      }).then(null, () => (button.disabled = false));\n    }\n  }\n\n  async _onItemGive(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const targets = game.actors.filter(\n      (a) => a !== this.actor && a.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED)\n    );\n    if (targets.length === 0) ui.notifications.warn(\"PF1.Error.NoGiftTargets\", { localize: true });\n\n    const targetActorId = await pf1.utils.dialog.getActor({\n      title: game.i18n.localize(\"PF1.GiveItemToActor\"),\n      actors: targets,\n    });\n\n    const target = game.actors.get(targetActorId);\n    if (!target) throw new Error(`Invalid actor ID as gift target: \"${targetActorId}\"`);\n\n    if (target.isOwner) {\n      const itemData = item.toObject();\n      delete itemData.system?.links?.children;\n      const docs = await target.createEmbeddedDocuments(\"Item\", [itemData]);\n      // Delete only if item was successfully created\n      if (docs.length > 0) await item.delete();\n    } else {\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"giveItem\",\n        targetActor: target.uuid,\n        item: item.uuid,\n      });\n      // Deleting will be performed on the gm side as well to prevent race conditions\n    }\n  }\n\n  async _onItemSplit(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const quantity = item.system.quantity;\n    if (quantity < 2) throw new Error(\"Can't split stack with less than 2 items\");\n\n    const options = {\n      total: quantity,\n      title: game.i18n.format(\"PF1.Dialog.SplitItem.Title\", { name: item.name }),\n    };\n\n    const result = await pf1.applications.SplitStack.wait(options);\n    if (!result) return;\n\n    const [keep, split] = result;\n\n    const itemData = item.toObject();\n    itemData.system.quantity = split;\n\n    this._prepareDuplicateItem(itemData, { rename: false });\n\n    await Item.implementation.createDocuments([itemData], { parent: this.actor });\n    await item.update({ \"system.quantity\": keep });\n  }\n\n  /**\n   * Handle rolling an Ability check, either a test or a saving throw\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onRollAbilityTest(event) {\n    event.preventDefault();\n    const ability = event.currentTarget.closest(\".ability\").dataset.ability;\n    this.actor.rollAbilityTest(ability, { token: this.token });\n  }\n\n  _onRollBAB(event) {\n    event.preventDefault();\n    this.actor.rollBAB({ token: this.token });\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onRollAttack(event) {\n    event.preventDefault();\n    /** @type {HTMLElement} */\n    let el = event.target;\n    if (!el.classList.contains(\"rollable\")) el = el.closest(\".rollable\");\n\n    const maneuver = el.dataset.type !== \"weapon\";\n    const ranged = el.dataset.ranged === \"true\";\n\n    this.actor.rollAttack({ maneuver, ranged, token: this.token });\n  }\n\n  _onRollInitiative(event) {\n    event.preventDefault();\n    this.actor.rollInitiative({\n      createCombatants: true,\n      rerollInitiative: game.user.isGM,\n      token: this.token,\n    });\n  }\n\n  _onRollSavingThrow(event) {\n    event.preventDefault();\n    const savingThrow = event.currentTarget.closest(\".saving-throw\").dataset.savingthrow;\n    this.actor.rollSavingThrow(savingThrow, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) throw new Error(`Section \"${section.path}\" lacks filters`);\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items\n   *\n   * @param data\n   * @private\n   */\n  _prepareItems(data) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Partition items by category\n    const [items, spells, other] = data.items.reduce(\n      (arr, item) => {\n        if (item.type === \"spell\") arr[1].push(item);\n        else if (item.isPhysical) arr[0].push(item);\n        else arr[2].push(item);\n        return arr;\n      },\n      [[], [], []]\n    );\n\n    // Organize Spellbook\n    let hasASF = false;\n    let hasSpellbooks = false;\n    const spellbookSections = {};\n    const spellbooks = data.system.attributes.spells.spellbooks;\n    for (const [bookId, spellbook] of Object.entries(spellbooks)) {\n      // Required for spellbook selection in settings\n      spellbookSections[bookId] = { ...spellbook };\n      // The rest are unnecssary processing if spellbook is not enabled\n      if (!spellbook.inUse) continue;\n      hasSpellbooks = true;\n      const book = spellbookSections[bookId];\n      const spellbookSpells = spells.filter((obj) => obj.spellbook === bookId);\n      book.sections = this._prepareSpellbook(data, spellbookSpells, bookId);\n      book.prepared = spellbookSpells.filter(\n        (obj) => obj.preparation.mode === \"prepared\" && obj.preparation.prepared\n      ).length;\n      book.rollData = data.rollData.spells[bookId];\n      book.classId = spellbook.class;\n      book.class = data.rollData.classes[spellbook.class];\n      if (spellbook.arcaneSpellFailure) hasASF = true;\n    }\n\n    if (hasASF) {\n      // TODO: Make ASF proper change target\n      const asf = this.actor.itemTypes.equipment\n        .filter((item) => item.isActive)\n        .reduce((cur, item) => {\n          const itemASF = item.system.spellFailure || 0;\n          return cur + itemASF;\n        }, 0);\n\n      data.asf = {\n        total: asf,\n      };\n    }\n\n    // Class selection list, only used by spellbooks\n    if (hasSpellbooks) {\n      const lang = game.settings.get(\"core\", \"language\");\n      const allClasses = this.actor.itemTypes.class\n        .map((cls) => [cls.system.tag, cls.name])\n        .sort(([_0, a], [_1, b]) => a.localeCompare(b, lang));\n      allClasses.unshift([\"_hd\", game.i18n.localize(\"PF1.HitDie\")]);\n      data.classList = Object.fromEntries(allClasses);\n    }\n\n    // Implant capacity\n    const ct = game.settings.get(\"pf1\", \"cybertech\");\n    // All implanted cybertech applies, even disabled as long as they're implanted\n    const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n    if (ct || cybertech.length) {\n      const load = cybertech.reduce((total, item) => total + (item.system.implant || 0), 0);\n      const abilities = this.actor.system.abilities ?? {};\n      data.implants = {\n        load,\n        max: Math.min(abilities.int?.total, abilities.con?.total),\n      };\n    }\n\n    // Organize Inventory\n    for (const i of items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Remove implant section if cybertech is disabled and no implants are present\n    if (!ct && this.actor.itemTypes.implant.length === 0) {\n      inventory.findSplice((cat) => cat.id === \"implants\");\n    }\n\n    // Organize Features\n    const featureSections = Object.values(pf1.config.sheetSections.features)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const ablType = i.abilityType;\n      i.typelabel = pf1.config.abilityTypes[ablType]?.short || pf1.config.abilityTypes.na.short;\n\n      const section = featureSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    if (this.actor.itemTypes.feat.length) {\n      const section = featureSections.find((f) => f.path === \"features.feat\");\n      section.issues = {\n        found: data.featCount?.issues > 0,\n        missing: data.featCount?.missing || 0,\n        excess: data.featCount?.excess || 0,\n        get discrepancy() {\n          return Math.abs(this.missing - this.excess);\n        },\n      };\n    }\n\n    // Buffs\n    const buffSections = Object.values(pf1.config.sheetSections.buffs)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of other) {\n      const section = buffSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Attacks\n    const attackSections = Object.values(pf1.config.sheetSections.combat)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // TODO: Support weapons in combat tab\n    for (const i of other) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Classes\n    const classSections = Object.values(pf1.config.sheetSections.classes)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const section = classSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    const categories = [\n      { key: \"inventory\", sections: inventory },\n      { key: \"features\", sections: featureSections },\n      { key: \"buffs\", sections: buffSections },\n      { key: \"attacks\", sections: attackSections },\n    ];\n\n    for (const [bookId, sb] of Object.entries(spellbookSections)) {\n      if (!sb.inUse) continue;\n      if (!sb.sections) console.warn(bookId, sb);\n      categories.push({ key: `spellbook-${bookId}`, sections: sb.sections });\n    }\n\n    for (const { key, sections } of categories) {\n      const set = this._filters.sections[key];\n      for (const section of sections) {\n        if (!section) continue;\n        section._hidden = set?.size > 0 && !set.has(section.id);\n      }\n    }\n\n    // Assign and return\n    data.inventory = inventory;\n    data.spellbookData = spellbookSections;\n    data.features = featureSections;\n    data.buffs = buffSections;\n    data.attacks = attackSections;\n    data.classes = classSections;\n    data.quickActions = this.actor.getQuickActions();\n  }\n\n  /**\n   * Handle rolling a Skill check\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onRollSkillCheck(event) {\n    event.preventDefault();\n    const el = event.target;\n    const skill = el.dataset.skill;\n    const subSkill = el.dataset.subSkill;\n    const skillId = subSkill ? `${skill}.${subSkill}` : skill;\n\n    this.actor.rollSkill(skillId, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle toggling of filters to display a different set of owned items\n   *\n   * @param {Event} event     The click event which triggered the toggle\n   * @private\n   */\n  _onToggleFilter(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget;\n    const { category, filter } = li.dataset;\n    const set = (this._filters.sections[category] ??= new Set());\n    const filterCount = set.size;\n\n    const tabLikeFilters = game.settings.get(\"pf1\", \"invertSectionFilterShiftBehaviour\")\n      ? !event.shiftKey\n      : event.shiftKey;\n\n    if (tabLikeFilters) {\n      for (const f of Array.from(set)) {\n        if (f !== filter) {\n          set.delete(f);\n        }\n      }\n    }\n\n    if (set.has(filter)) set.delete(filter);\n    else set.add(filter);\n    this.render();\n  }\n\n  _searchFilterCommit(event) {\n    const actor = this.actor;\n    const search = this._filters.search[event.target.dataset.category].toLowerCase();\n    const category = event.target.dataset.category;\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch[category] === search && !this.searchRefresh) return;\n    this.effectiveSearch[category] = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = actor.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const category = event.target.dataset.category;\n    const changed = this._filters.search[category] !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this._filters.search[category] = search;\n\n    if (event.type === \"input\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const label = a.parentElement.querySelector(\"label\");\n    const choices =\n      a.dataset.options in pf1.registry ? pf1.registry[a.dataset.options].getLabels() : pf1.config[a.dataset.options];\n\n    const path = a.dataset.for;\n\n    const { value: keys } = foundry.utils.getProperty(this.actor, path) ?? {};\n    // Display invalid choices\n    if (Array.isArray(keys)) {\n      for (const key of keys) {\n        if (!(key in choices)) {\n          choices[key] = key;\n        }\n      }\n    }\n\n    const options = {\n      name: path,\n      title: label.innerText,\n      subject: a.dataset.options,\n      choices,\n    };\n\n    let app = Object.values(this.actor.apps).find(\n      (app) => app instanceof ActorTraitSelector && app.options.name === options.name\n    );\n    app ??= new ActorTraitSelector(this.actor, options);\n    app.render(true, { focus: true });\n  }\n\n  /**\n   * Handle spawning the ActorResistanceSelector application which allows a number entry of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onResistanceSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const options = {\n      name: a.dataset.for,\n      title: a.innerText,\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n      width: a.dataset.options === \"dr\" ? 575 : 450,\n      isDR: a.dataset.options === \"dr\" ? true : false,\n    };\n\n    const app = Object.values(this.actor.apps).find((o) => {\n      return o instanceof ActorResistanceSelector && o.options.name === options.name && o._element;\n    });\n    if (app) app.render(true, { focus: true });\n    else new ActorResistanceSelector(this.actor, options).render(true);\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  async _render(...args) {\n    // Trick to avoid error on elements with changing name\n    let focus = this.element.find(\":focus\");\n    focus = focus.length ? focus[0] : null;\n    if (focus?.name?.match(/^system\\.skills\\.(?:[a-zA-Z0-9]*)\\.name$/)) focus.blur();\n\n    const result = await super._render(...args);\n\n    // Create placeholders\n    this._createPlaceholders(this.element);\n\n    // Apply accessibility settings\n    applyAccessibilitySettings(this, this.element, {}, game.settings.get(\"pf1\", \"accessibilityConfig\"));\n\n    return result;\n  }\n\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n\n    // Re-open item summaries\n    for (const itemId of this._expandedItems) {\n      // Only display summaries of items that are still present\n      if (this.actor.items.has(itemId)) {\n        const elem = html.find(`.item-list>.item[data-item-id=\"${itemId}\"]`)[0];\n        if (elem) this.openItemSummary(elem, { instant: true });\n      } else {\n        // Delete itemIds belonging to items no longer found in the actor\n        this._expandedItems.findSplice((o) => o === itemId);\n      }\n    }\n\n    return html;\n  }\n\n  async _onSubmit(event, { updateData = null, preventClose = false, preventRender = false } = {}) {\n    event.preventDefault();\n\n    if (this._itemUpdates?.length) preventRender = true;\n\n    await super._onSubmit(event, { updateData, preventClose, preventRender });\n\n    // Update items\n    await this._updateItems();\n  }\n\n  async _updateItems() {\n    const promises = [];\n\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const item = this.actor.items.get(d._id);\n      if (!item) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      delete d._id;\n      await item.update(d);\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    const { currency, amount, containerId, alt } = data;\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: containerId, alt },\n      { actor: this.actor, amount: Object.fromEntries([[currency, parseInt(amount)]]) }\n    ).render(true);\n  }\n\n  /**\n   * @override\n   */\n  async _onDropItem(event, data) {\n    if (!this.actor.isOwner) return void ui.notifications.warn(\"PF1.Error.NoActorPermission\", { localize: true });\n\n    const sourceItem = await Item.implementation.fromDropData(data);\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n    const sameActor = sourceItem.actor === this.actor && !data.containerId;\n\n    const itemData = game.items.fromCompendium(sourceItem, {\n      clearFolder: true,\n      keepId: sameActor,\n      clearSort: !sameActor,\n    });\n\n    // Handle item sorting within the same actor\n    if (sameActor) return this._onSortItem(event, itemData);\n\n    // Make item unidentified if ALT is held\n    if (sourceItem.isPhysical) {\n      if (game.user.isGM && event.altKey) {\n        itemData.system.identified = false;\n      }\n    }\n\n    // Create the owned item\n    this._alterDropItemData(itemData, sourceItem);\n    const rv = await this._onDropItemCreate(itemData);\n\n    // Remove from container if item was successfully created\n    if (data.containerId && rv?.length && sourceActor === this.actor) {\n      const container = this.actor.allItems.find((o) => o.id === data.containerId);\n      if (container) container.deleteContainerContent(data.itemId);\n    }\n\n    return rv;\n  }\n\n  /**\n   * @internal\n   * @param {object} data - Item data\n   * @param {pf1.documents.item.ItemPF} source - Source item\n   */\n  _alterDropItemData(data, source) {\n    // Identify source location\n    const fromCompendium = !!source.pack;\n    const fromActor = !!source.parent;\n    const fromItemsDir = !fromCompendium && !fromActor && !!source.id;\n\n    // Items for NPC should be unidentified by default\n    if (\n      this.actor.type === \"npc\" &&\n      source.isPhysical &&\n      fromCompendium &&\n      // We need to check if the item either have Caster Level beyond 0 or it's a drug or poison\n      (source.system?.cl > 0 || [\"drug\", \"poison\"].includes(source.system.subType))\n    ) {\n      data.system.identified = false;\n    }\n\n    // Set spellbook to currently viewed one\n    if (data.type === \"spell\") {\n      data.system.spellbook = this.currentSpellbookKey;\n    }\n\n    // Apply actor size to physical items, assuming they're appropriately sized for them\n    // But do so only when the drop originates from compendium or items directory\n    if (source.isPhysical) {\n      if (fromCompendium || fromItemsDir) {\n        data.system.size = this.actor.system.traits?.size || \"med\";\n      }\n    }\n  }\n\n  /**\n   * Sort item at the bottom of the list instead of seemingly random position\n   *\n   * @private\n   * @param {ItemPF} item - Temporary item to do sorting on.\n   */\n  _sortNewItem(item) {\n    const type = item.type;\n\n    const isClass = type === \"class\";\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => (isClass ? true : pf1.utils.isItemSameSubGroup(item, oldItem)))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      item.updateSource({\n        sort: oldItems[0].sort + CONST.SORT_INTEGER_DENSITY,\n      });\n    }\n  }\n\n  async _onDropItemCreate(itemData) {\n    const itemDatas = itemData instanceof Array ? itemData : [itemData];\n\n    const creationData = [];\n    for (const itemData of itemDatas) {\n      delete itemData._id;\n\n      // Assign associated class if actor has only one class\n      if (itemData.type === \"feat\" && itemData.system?.subType === \"classFeat\") {\n        // Available classes ordered by level\n        const classes = [...this.actor.itemTypes.class].sort((a, b) => (b.system.level || 0) - (a.system.level || 0));\n        if (classes.length === 0) {\n          // Nothing to do\n        }\n        // Only one choice\n        else if (classes.length === 1) {\n          itemData.system.class = classes[0].system.tag;\n        }\n        // Query which class to associate with\n        else {\n          const options = {\n            actor: this.actor,\n            empty: true,\n            items: classes,\n            selected: classes[0]?._id,\n          };\n\n          const appOptions = {\n            title: `${game.i18n.format(\"PF1.SelectSpecific\", {\n              specifier: game.i18n.localize(\"TYPES.Item.class\"),\n            })} - ${itemData.name} - ${this.actor.name}`,\n          };\n\n          const clsId = await pf1.applications.ItemSelector.wait(options, appOptions);\n          if (clsId) {\n            const cls = this.actor.items.get(clsId);\n            itemData.system.class = cls.system.tag;\n          }\n          // TODO: Cancel if dialog was closed or no class was selected?\n        }\n      }\n\n      // Import spell as consumable\n      if (itemData.type === \"spell\" && this.currentPrimaryTab !== \"spellbook\") {\n        const spells = this.actor.system.attributes?.spells ?? {};\n        const spellType = spells.spellbooks?.[this.currentSpellbookKey]?.kind || \"arcane\";\n\n        const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n          spellType,\n          actor: this.actor,\n          allowSpell: spells.usedSpellbooks?.length > 0,\n        });\n\n        if (resultData) {\n          creationData.push(resultData);\n          continue;\n        } else if (resultData === null) continue;\n        // else continue with regular spell creation\n      }\n\n      const newItem = new Item.implementation(itemData);\n      this._sortNewItem(newItem);\n\n      // Choose how to import class\n      if (itemData.type === \"class\") {\n        if (!(event && event.shiftKey)) {\n          // Set new class to be always level 1\n          newItem.updateSource({ system: { level: 1 } });\n\n          const cls = await LevelUpForm.addClassWizard(this.actor, newItem.toObject(), { token: this.token });\n          if (cls && itemDatas.length === 1) this._focusTabByItem(cls);\n          continue;\n        }\n      }\n\n      creationData.push(newItem.toObject());\n    }\n\n    if (creationData.length === 1) this._focusTabByItem(creationData[0]);\n\n    return this.actor.createEmbeddedDocuments(\"Item\", creationData);\n  }\n\n  /**\n   * Focuses certain tab based on provided item.\n   *\n   * @internal\n   * @param {*} item\n   */\n  _focusTabByItem(item) {\n    let tabId;\n    switch (item.type) {\n      case \"race\":\n      case \"class\":\n        tabId = \"summary\";\n        break;\n      case \"spell\":\n        tabId = \"spellbook\";\n        break;\n      case \"buff\":\n        tabId = \"buffs\";\n        break;\n      case \"feat\":\n        tabId = \"feats\";\n        break;\n      case \"weapon\":\n      case \"equipment\":\n      case \"consumable\":\n      case \"loot\":\n      case \"container\":\n        tabId = \"inventory\";\n        break;\n      case \"attack\":\n        tabId = \"combat\";\n        break;\n    }\n\n    if (tabId) this.activateTab(tabId, \"primary\");\n  }\n\n  /**\n   * Allow drag start always.\n   * Foundry blocks this if sheet is not editable, which blocks copying items.\n   *\n   * @override\n   * @param {string} selector Selector string\n   */\n  _canDragStart(selector) {\n    // Conditionally block currency transfer\n    if (selector.includes(\".denomination\")) return this.isEditable;\n    return true;\n  }\n\n  _onDragStart(event) {\n    const elem = event.target;\n    if (elem.classList.contains(\"denomination\")) {\n      const isAlt = elem.classList.contains(\"alt-currency\");\n      const denomination = elem.dataset.denomination;\n      const currency = isAlt ? this.actor.system.altCurrency : this.actor.system.currency;\n      const dragData = {\n        actorUuid: this.actor.uuid,\n        type: \"Currency\",\n        alt: isAlt,\n        currency: denomination,\n        amount: currency[denomination],\n      };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    } else if (elem.dataset?.skill) {\n      this._onDragSkillStart(event);\n    } else if (elem.dataset?.attribute) {\n      this._onDragMiscStart(event, elem.dataset.attribute);\n    } else if (elem.dataset?.drag) {\n      this._onDragMiscStart(event, elem.dataset.drag);\n    } else if (elem.dataset?.savingthrow) {\n      this._onDragSaveStart(event, elem.dataset.savingthrow);\n    } else if (elem.dataset?.ability) {\n      this._onDragMiscStart(event, \"abilityScore\", elem.dataset.ability);\n    } else if (elem.dataset?.attack) {\n      this._onDragMiscStart(event, \"attack\", elem.dataset.attack);\n    } else {\n      super._onDragStart(event);\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n\n  _updateObject(event, formData) {\n    // Translate CR\n    const cr = formData[\"system.details.cr.base\"];\n    if (typeof cr === \"string\") formData[\"system.details.cr.base\"] = CR.fromString(cr);\n\n    // Update from elements with 'data-name'\n    {\n      const elems = this.element.find(\"*[data-name]\");\n      const changedData = {};\n      for (const el of elems) {\n        const name = el.dataset.name;\n        let value;\n        if (el.nodeName === \"INPUT\") value = el.value;\n        else if (el.nodeName === \"SELECT\") value = el.options[el.selectedIndex].value;\n\n        if (el.dataset.dtype === \"Number\") value = Number(value);\n        else if (el.dataset.dtype === \"Boolean\") value = Boolean(value);\n\n        if (foundry.utils.getProperty(this.actor.system, name) !== value) {\n          changedData[name] = value;\n        }\n      }\n\n      for (const [k, v] of Object.entries(changedData)) {\n        formData[k] = v;\n      }\n    }\n\n    this.searchRefresh = true;\n\n    return super._updateObject(event, formData);\n  }\n\n  calculateTotalItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.actor.items.filter((item) => item.isPhysical && item.system.price != null);\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: 1, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  calculateSellItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.actor.items.filter((o) => o.system.price != null);\n    const sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\") || 0.5;\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: sellMultiplier, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  _createPlaceholders(html) {\n    const elems = html.find(\"span[data-placeholder]\");\n    for (const el of elems) {\n      if (!el.innerText) {\n        el.classList.add(\"placeholder\");\n        el.innerText = el.dataset.placeholder;\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {HTMLElement} form\n   */\n  _disableFields(form) {\n    super._disableFields(form);\n\n    // Ensure search inputs are always functional\n    for (const el of form.getElementsByTagName(\"INPUT\")) {\n      if (el.type === \"search\") el.disabled = false;\n    }\n  }\n}\n","/**\n * Default dead sheet when no other exist.\n */\nexport class ActorSheetPFBasic extends ActorSheet {}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\nimport { LevelUpForm } from \"../level-up.mjs\";\n\n/**\n * An Actor sheet for player character type actors in the PF system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFCharacter extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"character\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/character-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const data = await super.getData();\n    const xpSettings = game.settings.get(\"pf1\", \"experienceConfig\");\n\n    // Experience Tracking\n    data.disableExperience = xpSettings.disable;\n    data.showXpBar = !xpSettings.disable;\n    if (!xpSettings.disable) {\n      data.minimumExperience = this.actor.getLevelExp(Math.max(0, (this.actor.system.details.level.value ?? 0) - 1), {\n        rollData: data.rollData,\n      });\n    }\n\n    data.hasClasses = this.actor.itemTypes.class.length > 0;\n\n    const hpSettings = game.settings.get(\"pf1\", \"healthConfig\");\n    data.woundThresholds = hpSettings.variants.pc;\n\n    // Add level up buttons to classes\n    if (xpSettings.disable !== true && data.hasClasses) {\n      const xp = this.actor.system.details?.xp;\n      if (xp && xp.value >= xp.max) {\n        data.levelUp = true;\n\n        // Max level check\n        const xpTrack = xpSettings.track;\n        if ([\"fast\", \"medium\", \"slow\"].includes(xpTrack)) {\n          const level = this.actor.system.details.level.value;\n          const levels = pf1.config.CHARACTER_EXP_LEVELS[xpTrack];\n          if (level >= levels.length) {\n            data.levelUp = false;\n          }\n        }\n      }\n    } else {\n      data.levelUp = true;\n    }\n\n    // Return data for rendering\n    return data;\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\nimport { CR } from \"../../utils/lib.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\n/**\n * An Actor sheet for NPC type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFNPC extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"npc\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet.hbs\";\n  }\n\n  // static get name() {\n  //   return game.i18n.localize(\"PF1.ActorSheetPFNPC\");\n  // }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const data = await super.getData();\n\n    // Challenge Rating\n    data.labels.cr = CR.fromNumber(this.actor.system.details?.cr?.total ?? 0);\n\n    const hpSettings = game.settings.get(\"pf1\", \"healthConfig\");\n    data.woundThresholds = hpSettings.variants.npc;\n\n    data.levelUp = true;\n\n    return data;\n  }\n\n  /* -------------------------------------------- */\n  /*  Object Updates                              */\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Adjust CR\n    html.find(\"span.text-box.cr-input\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustCR.bind(this));\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  async _adjustCR(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const value = CR.fromString(el.tagName === \"INPUT\" ? el.value : el.innerText);\n    const name = el.getAttribute(\"name\");\n    let updateData;\n    if (name) {\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (ev) => this._updateObject(event, this._getSubmitData(updateData)), {\n        //passive: true, // Causes Foundry to error\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLite extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"lite\"],\n      width: 440,\n      height: 640,\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\", group: \"primary\" },\n      ],\n    };\n  }\n\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet-lite.hbs\";\n  }\n\n  async getData() {\n    const context = await super.getData();\n    context.hasHD = false;\n    return context;\n  }\n\n  _prepareItems(data) {\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of data.items) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    data.attacks = attackSections;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLoot extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"loot\"],\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"inventory\", group: \"primary\" },\n      ],\n      width: 620,\n      height: 420,\n    };\n  }\n\n  get template() {\n    return \"systems/pf1/templates/actors/npc-sheet-loot.hbs\";\n  }\n\n  get currentPrimaryTab() {\n    return \"inventory\";\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return \"gp\";\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    data.isLootSheet = true;\n    data.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    data.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    data.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n\n    // Set labels\n    if (!data.labels) data.labels = {};\n    data.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", data.totalValue);\n    data.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", data.sellValue);\n\n    // Alter inventory columns\n    for (const section of data.inventory) {\n      section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n    }\n\n    data.labels.currency = `PF1.Currency.Inline.${this.itemValueDenomination}`;\n\n    return data;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareItem(item) {\n    const result = super._prepareItem(item);\n\n    if (item.isPhysical) {\n      result.price = item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) / 100;\n    }\n\n    return result;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\nimport { CR } from \"@utils/lib.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFHaunt extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"haunt\"],\n      width: 820,\n      height: 700,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/haunt-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const data = {\n      owner: isOwner,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      system: this.document.system,\n      hasHD: false,\n    };\n\n    // Challenge Rating\n    data.labels = {\n      cr: CR.fromNumber(data.system.details.cr.total),\n    };\n\n    const notes = data.system.details?.notes?.value ?? \"\";\n    data.notesHTML = notes\n      ? await TextEditor.enrichHTML(notes, {\n          secrets: isOwner,\n          rollData: data.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // The Actor and its Items\n    data.actor = this.actor;\n    data.token = this.token;\n    data.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(data);\n\n    return data;\n  }\n\n  /**\n   * @private\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   */\n  _getTooltipContext(fullId, context) {\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._rollData ??= actor.getRollData();\n        return this._rollData;\n      },\n    };\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"cl\":\n        paths.push({ path: \"@details.cl\", value: lazy.rollData.details.cl }, { path: \"@cl\", value: lazy.rollData.cl });\n        break;\n      case \"health\":\n        paths.push(\n          { path: \"@attributes.hp.value\", value: lazy.rollData.attributes.hp.value },\n          { path: \"@attributes.hp.max\", value: lazy.rollData.attributes.hp.max }\n        );\n        break;\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\nimport { CR } from \"@utils/lib.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFTrap extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"trap\"],\n      width: 500,\n      height: 560,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/trap-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const data = {\n      owner: isOwner,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      system: this.document.system,\n      hasHD: false,\n    };\n\n    // Challenge Rating\n    data.labels = {\n      cr: CR.fromNumber(data.system.details.cr.total),\n    };\n\n    const notes = data.system.details?.notes?.value ?? \"\";\n    data.notesHTML = notes\n      ? await TextEditor.enrichHTML(notes, {\n          secrets: isOwner,\n          rollData: data.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // The Actor and its Items\n    data.actor = this.actor;\n    data.token = this.token;\n    data.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(data);\n\n    return data;\n  }\n\n  /**\n   * @private\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   */\n  _getTooltipContext(fullId, context) {\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._rollData ??= actor.getRollData();\n        return this._rollData;\n      },\n    };\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"detect\":\n        paths.push({ path: \"@details.perception\", value: lazy.rollData.details.perception });\n        break;\n      case \"disarm\":\n        paths.push({ path: \"@details.disarm\", value: lazy.rollData.details.disarm });\n        break;\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFVehicle extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"vehicle\"],\n      width: 680,\n      height: 680,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/vehicle-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      system: this.actor.system,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      labels: {\n        currency: `PF1.Currency.Inline.${this.itemValueDenomination}`,\n      },\n      isLootSheet: true, // inventory include unwanted data otherwise\n    };\n\n    context.system = foundry.utils.deepClone(this.document.system);\n\n    context.vehicleSizes = Object.fromEntries(\n      Object.entries(pf1.config.vehicles.size).map(([key, data]) => [key, data.label])\n    );\n\n    const notes = context.system.details?.notes?.value ?? \"\";\n    context.notesHTML = notes\n      ? await TextEditor.enrichHTML(notes, {\n          secrets: isOwner,\n          rollData: context.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    //context.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n    context.hasCurrency = true; // Never fade currency field for this\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    context.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    context.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n    context.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", context.sellValue);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    return context;\n  }\n\n  /**\n   * @private\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   */\n  _getTooltipContext(fullId, context) {\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._rollData ??= actor.getRollData();\n        return this._rollData;\n      },\n    };\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"hp\":\n        paths.push(\n          { path: \"@attributes.hp.value\", value: lazy.rollData.attributes.hp.value },\n          { path: \"@attributes.hp.max\", value: lazy.rollData.attributes.hp.max }\n        );\n        break;\n      case \"ac\":\n        paths.push({ path: \"@attributes.ac.normal.total\", value: lazy.rollData.attributes.ac.normal.total });\n        break;\n      default:\n        return super._getTooltipContext(fullId, context);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const attacks = context.items.filter((i) => i.type === \"attack\");\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Alter inventory columns\n    for (const section of inventory) {\n      section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n    }\n\n    const items = context.items.filter((i) => i.isPhysical);\n\n    // Organize Inventory\n    for (const i of items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    context.inventory = inventory;\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return \"gp\";\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    const convertibleKeys = [\"maxSpeed\", \"acceleration\"];\n    for (const key of convertibleKeys) {\n      const value = formData.system.details[key];\n      if (Number.isFinite(value)) {\n        formData.system.details[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n}\n","export class SpeedEditor extends DocumentSheet {\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      classes: [\"pf1\", \"speed-editor\"],\n      template: \"systems/pf1/templates/apps/speed-editor.hbs\",\n      width: 320,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n    };\n  }\n\n  get id() {\n    return `${this.object.uuid}-movement-editor`;\n  }\n\n  get title() {\n    const actor = this.document.actor;\n    let title = `${game.i18n.localize(\"PF1.Movement.Label\")}: ${this.document.name}`;\n    if (actor) title += ` — ${actor.name}`;\n    return title;\n  }\n\n  static get movementKeys() {\n    return [\"land\", \"swim\", \"fly\", \"climb\", \"burrow\"];\n  }\n\n  async getData() {\n    const itemData = this.document.system;\n    const context = {\n      system: itemData,\n      speeds: {},\n      units: game.i18n.localize(\n        pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n      ),\n      flyManeuverability: {\n        clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n        poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n        average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n        good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n        perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n      },\n    };\n\n    this.constructor.movementKeys.forEach((key) => {\n      let value = itemData.speeds?.[key];\n      if (value > 0) value = pf1.utils.convertDistance(value)[0];\n      context.speeds[key] = value;\n    });\n\n    context.speeds.flyManeuverability = itemData.speeds.flyManeuverability || \"average\";\n\n    return context;\n  }\n\n  async _updateObject(event, formData) {\n    // Convert data back\n    for (const [key, value] of Object.entries(formData)) {\n      if (Number.isNumeric(value)) {\n        formData[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n}\n","/**\n * @typedef {object} Widget_CategorizedItemPicker~Item\n * @property {string} key - The key of the item.\n * @property {string} [label] - The label of the item.\n * @property {string} [icon] - The icon of the item.\n */\n\n/**\n * @typedef {object} Widget_CategorizedItemPicker~Category\n * @property {string} key - The key of the category.\n * @property {string} label - The label of the category.\n * @property {Widget_CategorizedItemPicker~Item[]} items - All the items associated with this category.\n */\n\n/**\n * Item picker widget.\n */\nexport class Widget_CategorizedItemPicker extends Application {\n  constructor(options, categories, callback, selected) {\n    const classes = options.classes;\n    delete options.classes;\n\n    super(options);\n\n    /**\n     * Objects containing category and item data.\n     *\n     * @type {Widget_CategorizedItemPicker~Category[]}\n     */\n    this.categories = categories;\n\n    /**\n     * Previously selected category and item\n     *\n     * @type {object}\n     * @property {string} category Selected category.\n     * @property {string} item Selected item in that category.\n     */\n    this.selected = selected;\n\n    /**\n     * Callback fired when an item has been selected.\n     *\n     * @type {Function}\n     */\n    this.callback = callback;\n\n    /**\n     * Track hidden elements of the sheet.\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this._hiddenElems = {};\n\n    if (classes?.length) {\n      this.options.classes.push(...classes);\n    }\n  }\n\n  get template() {\n    return \"systems/pf1/templates/widgets/categorized-item-picker.hbs\";\n  }\n\n  getData(options) {\n    const context = super.getData(options);\n\n    context.categories = this.categories;\n    context.items = [];\n\n    for (const cat of this.categories) {\n      cat.hidden = cat.validity.item === false;\n      if (cat.hidden) continue;\n\n      for (const item of cat.items) {\n        if (item.validity.item === false) continue;\n\n        // Mark items as invalid if the category is invalid\n        if (!cat.validity.valid) {\n          item.validity.category = false;\n          item.validity.valid = false;\n        }\n\n        context.items.push({\n          category: cat.key,\n          ...item,\n        });\n      }\n\n      // Has any valid choices\n      cat.hasChoices = context.items.some((i) => i.category === cat.key && i.validity.valid);\n      cat.hasVisibleChoices = context.items.some((i) => i.category === cat.key && i.validity.item !== false);\n    }\n\n    context.categories = context.categories.filter((cat) => !cat.hidden && cat.hasVisibleChoices);\n\n    return context;\n  }\n\n  activateListeners(html) {\n    // Click an item\n    html.find(\".item\").click(this._onClickItem.bind(this));\n\n    // Expand/minimize category\n    html.find(\".category a\").click(this._onClickCategory.bind(this));\n\n    // Pre-select old category\n    if (this.selected?.category) {\n      html.find(`.category a[data-category=\"${this.selected.category}\"]`).click();\n      if (this.selected?.item) {\n        html\n          .find(`.item[data-category=\"${this.selected.category}\"][data-value=\"${this.selected.item}\"]`)\n          .first()\n          .addClass(\"pre-select\");\n      }\n    }\n\n    // Cancel widget\n    window.setTimeout(() => {\n      if (this._cancelCallback) document.removeEventListener(\"click\", this._cancelCallback);\n      this._cancelCallback = this._onCancel.bind(this);\n      document.addEventListener(\"click\", this._cancelCallback);\n    }, 10);\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      width: 480,\n      height: 480,\n      classes: [...options.classes, \"pf1\", \"categorized-item-picker\"],\n    };\n  }\n\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const result = a.dataset.value;\n    this.callback(result);\n    this.close();\n  }\n\n  _onClickCategory(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const html = $(this.element);\n\n    // Deactivate all categories\n    html.find(\".item-picker-categories\").children().removeClass(\"active\");\n\n    // Activate clicked category\n    $(a).closest(\".category\").addClass(\"active\");\n\n    // Hide all items\n    html.find(\".item-picker-items\").children().addClass(\"hidden\");\n\n    // Show items\n    html.find(`.item-picker-items .item[data-category=\"${a.dataset.category}\"]`).removeClass(\"hidden\");\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    let node = event.target;\n    if (node === this.element[0]) return;\n    while (node.parentNode) {\n      if (node === this.element[0]) return;\n      node = node.parentNode;\n    }\n\n    this.close();\n  }\n\n  async close(...args) {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    return super.close(...args);\n  }\n}\n\nHooks.on(\"renderWidget_CategorizedItemPicker\", (app, html, data) => {\n  html.find(\".pre-select\")[0]?.scrollIntoView({ block: \"nearest\" });\n});\n","import {\n  adjustNumberByStringCommand,\n  getBuffTargetDictionary,\n  getBuffTargets,\n  enrichHTMLUnrolledAsync,\n  naturalSort,\n} from \"@utils\";\nimport { ItemPF } from \"@item/item-pf.mjs\";\nimport { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { SpeedEditor } from \"@app/speed-editor.mjs\";\nimport { Widget_CategorizedItemPicker } from \"@app/categorized-item-picker.mjs\";\nimport { getSkipActionPrompt } from \"../../documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Override and extend the core ItemSheet implementation to handle game system specific item types\n *\n * @type {ItemSheet}\n */\nexport class ItemSheetPF extends ItemSheet {\n  constructor(...args) {\n    super(...args);\n\n    // Add item type to selectors\n    this.options.classes.push(`type-${this.item.type}`);\n\n    this.items = [];\n\n    /**\n     * Track action updates from the item sheet.\n     *\n     * @property\n     * @private\n     * @type {object[]}\n     */\n    this._actionUpdates = [];\n\n    // Activate more reasonable default links sub-tab per item type.\n    // Related core issue: https://github.com/foundryvtt/foundryvtt/issues/9748\n    const links = this._tabs.find((t) => t.group === \"links\");\n    if (this.item.type === \"class\") {\n      links.active = \"classAssociations\";\n    } else if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      links.active = \"charges\";\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 620,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [\".tab\", \".buff-flags\", \".editor-content\"],\n      dragDrop: [\n        {\n          dragSelector: \"li.action-part\",\n          dropSelector: \".tab.details\",\n        },\n        {\n          dragSelector: \".tab.changes li.change\",\n          dropSelector: null,\n        },\n        {\n          dragSelector: \".tab.links .item-name\",\n          dropSelector: \".tab.links .tab[data-group='links']\",\n        },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='links']\",\n          contentSelector: \"section.links-body\",\n          initial: \"children\",\n          group: \"links\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='description']\",\n          contentSelector: \"section.description-body\",\n          initial: \"identified\",\n          group: \"description\",\n        },\n      ],\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string}\n   */\n  get template() {\n    const path = \"systems/pf1/templates/items\";\n    return `${path}/${this.item.type}.hbs`;\n  }\n\n  get title() {\n    const actor = this.actor;\n    if (actor) return `${super.title} – ${actor.name}`;\n    return super.title;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const lang = game.settings.get(\"core\", \"language\");\n\n    /** @type {ItemPF} */\n    const item = this.item,\n      itemData = item.system;\n\n    const actor = item.actor,\n      actorData = actor?.system;\n\n    const defaultAction = item.defaultAction;\n\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    const context = {\n      cssClass: this.isEditable ? \"editable\" : \"locked\",\n      item,\n      document: item, // Reference used by unknown data\n      name: item.name,\n      system: itemData,\n      itemType: game.i18n.localize(CONFIG.Item.typeLabels[item.type]),\n      rollData,\n      config: pf1.config,\n      owned: !!actor,\n      owner: item.isOwner,\n      editable: this.isEditable,\n      isGM: game.user.isGM,\n      labels: item.getLabels({ rollData }),\n      canClassLink: pf1.config.classAssociations.includes(item.type) && !!rollData.classes,\n      inContainer: item.inContainer ?? false,\n      // Include raw tag data (from source to not get autofilled tag)\n      tag: this.item._source.system.tag,\n    };\n\n    // Item type identifiers\n    const isPhysical = item.isPhysical;\n    const isWeapon = item.type === \"weapon\";\n    const isAttack = item.type === \"attack\";\n    const isWeaponLike = isAttack && item.subType === \"weapon\";\n    const isNaturalAttack = isAttack && itemData.subType === \"natural\";\n    const isClass = item.type === \"class\";\n    const isSpell = item.type === \"spell\";\n    const isImplant = item.type === \"implant\";\n    const isEquipment = item.type === \"equipment\";\n\n    context.isPhysical = isPhysical;\n    context.isWeapon = isWeapon;\n    context.isAttack = isAttack;\n    context.isWeaponLike = isWeaponLike;\n    context.isNaturalAttack = isNaturalAttack;\n    context.isClass = isClass;\n    context.isSpell = isSpell;\n    context.isImplant = isImplant;\n    context.isEquipment = isEquipment;\n\n    if (context.canClassLink) {\n      context.hasClassLink = !!item.system.class;\n      context.classes = {};\n      for (const [classTag, classData] of Object.entries(rollData.classes)) {\n        context.classes[classTag] = classData.name;\n      }\n    }\n\n    // Include sub-items\n    context.items = item.items?.map((i) => i.toObject()) ?? [];\n\n    // Add hit die size options for classes\n    if (isClass) {\n      context.hitDieSizes = context.config.hitDieSizes.reduce((all, size) => {\n        all[size] = game.i18n.format(\"PF1.DieSize\", { size });\n        return all;\n      }, {});\n\n      context.isMythic = this.item.subType === \"mythic\";\n\n      if (item.system.wealth) {\n        const context = { formula: item.system.wealth, item: this.item };\n        const max = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          maximize: true,\n        })?.total;\n        const min = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          minimize: true,\n        })?.total;\n        if (max > 0) {\n          context.wealth ??= {};\n          context.wealth.average = (max + min) / 2;\n        }\n      }\n    }\n\n    if (item.links.charges) context.inheritCharges = item.links.charges;\n    context.isCharged = ![\"single\", \"\", undefined].includes(itemData.uses?.per);\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n\n    context.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.limitedUsePeriods.single;\n    context.isRechargeable = pf1.config.limitedUsePeriodOrder.includes(itemData.uses?.per);\n\n    context.isActivatable = ![\"race\", \"class\", \"container\", \"loot\"].includes(item.type);\n    context.hasAction = item.hasAction;\n    context.hasAttack = item.hasAttack;\n    context.hasDamage = item.hasDamage;\n    context.showBothDescriptions = context.isGM && context.isPhysical;\n    context.showUnidentifiedData = item.showUnidentifiedData;\n    context.showIdentified = !item.showUnidentifiedData;\n    context.showIdentifiedData = context.showIdentified;\n    if (context.showIdentified && context.isPhysical) context.showBothDescriptions = true;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n    // Identification information\n    context.identify ??= {};\n    context.identify.dc = 0;\n    const auraStrength = rollData.item.auraStrength;\n    if (auraStrength) {\n      context.aura = {\n        strength: auraStrength,\n        strengthLabel: pf1.config.auraStrengths[auraStrength],\n        school:\n          pf1.config.spellSchools[itemData.aura.school] || itemData.aura.school || game.i18n.localize(\"PF1.Unknown\"),\n      };\n\n      context.identify.dc = 15 + rollData.item.cl;\n      context.identify.curse = context.identify.dc + 10;\n    }\n\n    // Add spellcasting configuration\n    if (isClass) {\n      context.casting = {\n        types: pf1.config.spellcasting.type,\n        spells: pf1.config.spellcasting.spells,\n        progression: {\n          high: \"PF1.High\",\n          med: \"PF1.Medium\",\n          low: \"PF1.Low\",\n        },\n      };\n\n      if (!item.actor) context.hasSpellbook = true; // Not true, but avoids unwanted behaviour.\n      else {\n        context.hasSpellbook = Object.values(rollData.spells ?? {}).find(\n          (book) => !!book.class && book.class === itemData.tag && book.inUse\n        );\n      }\n    }\n\n    /** @type {DescriptionAttribute[]} */\n    context.descriptionAttributes = [];\n\n    // Override description attributes\n    if (context.isPhysical) {\n      // Add quantity\n      context.descriptionAttributes.push({\n        isNumber: true,\n        name: \"system.quantity\",\n        label: game.i18n.localize(\"PF1.Quantity\"),\n        value: itemData.quantity || 0,\n        decimals: 0,\n        id: \"data-quantity\",\n        constraints: {\n          min: 0,\n          step: 1,\n        },\n      });\n\n      // Add weight\n      context.descriptionAttributes.push({\n        isNumber: true,\n        name: \"system.weight.value\",\n        label: game.i18n.localize(\"PF1.Weight\"),\n        value: itemData.weight.converted.total,\n        fakeValue: true,\n        inputValue: itemData.weight.converted.value,\n        decimals: 2,\n        tooltip: \"weight\",\n        id: \"data-weight-value\",\n        constraints: {\n          min: 0,\n          step: 0.01,\n        },\n      });\n\n      // Add price\n      if (context.isGM) {\n        context.descriptionAttributes.push(\n          {\n            isNumber: true,\n            name: \"system.price\",\n            label: game.i18n.localize(\"PF1.Price\"),\n            value: item.getValue({ sellValue: 1 }),\n            decimals: 2,\n            tooltip: \"price\",\n            id: \"data-price\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            isNumber: true,\n            name: \"system.unidentified.price\",\n            label: game.i18n.localize(\"PF1.UnidentifiedPriceShort\"),\n            value: item.getValue({ sellValue: 1, forceUnidentified: true }),\n            decimals: 2,\n            id: \"data-unidentifiedPrice\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          }\n        );\n      } else if (context.showUnidentifiedData) {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          name: \"system.unidentified.price\",\n          fakeName: true,\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: 2,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      } else {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          name: \"system.price\",\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: 2,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      }\n\n      // Add hit points\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRange: true,\n          label: game.i18n.localize(\"PF1.HPShort\"),\n          value: {\n            name: \"system.hp.value\",\n            value: itemData.hp?.value || 0,\n            constraints: {\n              step: 1,\n              max: itemData.hp?.max || 0,\n            },\n          },\n          max: {\n            name: \"system.hp.max\",\n            value: itemData.hp?.max || 0,\n            constraints: {\n              min: 0,\n              step: 1,\n            },\n          },\n        });\n\n        // Add hardness\n        context.descriptionAttributes.push({\n          isNumber: true,\n          label: game.i18n.localize(\"PF1.Hardness\"),\n          name: \"system.hardness\",\n          decimals: 0,\n          value: itemData.hardness || 0,\n          constraints: {\n            min: 0,\n            step: 1,\n          },\n        });\n      }\n\n      let disableEquipping = false;\n      if (item.inContainer) {\n        if (item.canEquip === false) disableEquipping = true;\n        else if (context.isImplant) disableEquipping = true;\n      }\n\n      // Add equipped/implanted flag\n      if (context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.implanted\",\n          label: game.i18n.localize(\"PF1.Implanted\"),\n          value: itemData.implanted,\n          disabled: disableEquipping,\n        });\n      } else {\n        // Certain loot types don't have equipped\n        if (item.type === \"loot\" && pf1.config.unequippableLoot.includes(this.item.subType)) disableEquipping = true;\n\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.equipped\",\n          label: game.i18n.localize(\"PF1.Equipped\"),\n          value: itemData.equipped,\n          disabled: disableEquipping,\n        });\n      }\n\n      // Add carried flag\n      context.descriptionAttributes.push({\n        isBoolean: true,\n        name: \"system.carried\",\n        label: game.i18n.localize(\"PF1.Carried\"),\n        value: itemData.carried || item.system.implanted || false,\n        disabled: item.inContainer || item.system.implanted || false,\n      });\n    }\n\n    if (context.isPhysical || item.isQuasiPhysical) {\n      // Add broken flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.broken\",\n          label: game.i18n.localize(\"PF1.Broken\"),\n          value: itemData.broken,\n          disabled: context.isNaturalAttack,\n        });\n      }\n\n      // Add masterwork flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.masterwork\",\n          label: game.i18n.localize(\"PF1.Masterwork\"),\n          value: itemData.masterwork,\n          disabled: context.isNaturalAttack,\n        });\n      }\n    }\n\n    if (context.isPhysical) {\n      // Add identified flag for GM\n      if (game.user.isGM) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.identified\",\n          label: game.i18n.localize(\"PF1.Identified\"),\n          value: itemData.identified ?? true,\n          disabled: !game.user.isGM,\n        });\n      }\n    }\n\n    // Prepare feat specific stuff\n    if (item.type === \"feat\") {\n      context.isClassFeature = itemData.subType === \"classFeat\";\n      context.isTemplate = itemData.subType === \"template\";\n\n      context.abilityTypes = Object.fromEntries(\n        Object.entries(pf1.config.abilityTypes).map(([key, { short, long }]) => [key, `${long} (${short})`])\n      );\n    }\n\n    // Add skill list to items that support them\n    // TODO: Make this ask the item itself if they have class skills\n    if (itemData.classSkills || [\"class\", \"feat\", \"race\"].includes(item.type)) {\n      const classSkills = itemData.classSkills ?? {};\n      // Get all skills\n      const skills = foundry.utils.mergeObject(pf1.config.skills, actorData?.skills ?? {}, { inplace: false });\n      // Build skill context\n      context.skills = Object.entries(skills)\n        .map(([skillId, skilldata]) => ({\n          ...skilldata,\n          key: skillId,\n          name: pf1.config.skills[skillId] || skilldata.name,\n          isCS: classSkills[skillId] === true,\n        }))\n        .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    // Prepare attack-specific stuff\n    if (isAttack) {\n      const wtype = (isWeaponLike ? itemData.weapon?.type : null) || \"all\";\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(itemData.alignments);\n    }\n\n    const material = isEquipment ? this.item.system.armor?.material : this.item.system.material;\n    if (material?.addon?.length) {\n      context.materialAddons =\n        material.addon.reduce((obj, v) => {\n          obj[v] = true;\n          return obj;\n        }, {}) ?? {};\n    }\n\n    // Prepare weapon specific stuff\n    if (isWeapon) {\n      context.isRanged = itemData.weaponSubtype === \"ranged\" || itemData.properties?.[\"thr\"] === true;\n    }\n\n    // Prepare categories for weapons\n    if (isWeaponLike) {\n      itemData.weapon ??= {};\n      itemData.weapon.category ||= \"simple\";\n      itemData.weapon.type ||= \"1h\";\n\n      context.isRanged = itemData.weapon.type === \"ranged\";\n    }\n\n    if (isWeapon || isWeaponLike) {\n      context.weaponCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.weaponTypes)) {\n        context.weaponCategories.types[k] = v._label;\n      }\n      let type;\n      if (isWeapon) type = itemData.subType;\n      else if (isWeaponLike) type = itemData.weapon?.category;\n\n      if (type in pf1.config.weaponTypes) {\n        for (const [k, v] of Object.entries(pf1.config.weaponTypes[type])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.weaponCategories.subTypes[k] = v;\n        }\n      }\n    }\n\n    if (isWeapon) {\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(itemData.alignments);\n    }\n\n    // Prepare equipment specific stuff\n    if (isEquipment) {\n      // Prepare categories for equipment\n      context.equipmentCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.equipmentTypes)) {\n        context.equipmentCategories.types[k] = v._label;\n      }\n      const subType = itemData.subType;\n      if (subType in pf1.config.equipmentTypes) {\n        for (const [k, v] of Object.entries(pf1.config.equipmentTypes[subType])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.equipmentCategories.subTypes[k] = v;\n        }\n      }\n\n      // Prepare slots for equipment\n      context.equipmentSlots = pf1.config.equipmentSlots.wondrous;\n\n      // Whether the current equipment type has multiple slots\n      context.hasMultipleSlots = item.hasSlots;\n\n      context.hasSubCategory = [\"armor\", \"shield\"].includes(subType);\n\n      // Prepare materials where they're needed.\n      if ([\"armor\", \"shield\"].includes(item.subType)) {\n        context.materialCategories = this._prepareMaterialsAndAddons(item);\n      }\n    }\n\n    if (isImplant) {\n      context.subTypes = pf1.config.implantTypes;\n\n      context.isCybertech = item.subType === \"cybertech\";\n      if (context.isCybertech) context.slots = pf1.config.implantSlots.cybertech;\n    }\n\n    let topDescription;\n\n    // Prepare spell specific stuff\n    if (context.isSpell) {\n      let spellbook = null;\n      if (actor) {\n        const bookId = itemData.spellbook;\n        spellbook = actorData?.attributes.spells?.spellbooks[bookId];\n      }\n\n      context.isSpontaneousLike = spellbook?.spontaneous || spellbook?.spellPoints?.useSystem || false;\n      context.isPreparedSpell = !context.isSpontaneousLike;\n      context.usesSpellpoints = spellbook != null ? spellbook.spellPoints?.useSystem ?? false : false;\n      context.isAtWill = itemData.atWill;\n      context.spellbooks = actorData?.attributes.spells.spellbooks ?? {};\n      context.spellbookChoices = Object.fromEntries(\n        Object.entries(context.spellbooks)\n          .filter(([_, { inUse }]) => inUse)\n          .map(([key, { label }]) => [key, label])\n          .sort(([_0, n0], [_1, n1]) => n0.localeCompare(n1, lang))\n      );\n\n      topDescription = renderCachedTemplate(\n        \"systems/pf1/templates/internal/spell-description.hbs\",\n        item.getDescriptionData({ rollData })\n      );\n\n      // Reverse mapping of pf1.config.divineFocus for readability\n      const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n      itemData.components ??= {};\n      const df = itemData.components.divineFocus;\n      // Force intrinsic DF components\n      if (df === dfVariants.MDF) itemData.components.material = true;\n      if (df === dfVariants.FDF) itemData.components.focus = true;\n\n      // Generate component list according to spellbook\n      const c = { ...itemData.components };\n      context.components = c;\n      if (spellbook) {\n        const isDivine = spellbook.kind === \"divine\";\n        if (isDivine) {\n          if (df === dfVariants.FDF) c.focus = false;\n          if (df === dfVariants.MDF) c.material = false;\n        } else {\n          c.divineFocus = false;\n        }\n      }\n\n      // Material for spells to emulate\n      context.materialCategories = this._prepareMaterialsAndAddons(item);\n\n      context.alignmentTypes = this._prepareAlignments(itemData.alignments);\n    }\n\n    if (this.item.type === \"buff\") {\n      context.noDurationTiming = !itemData.duration.units || itemData.duration.units === \"turn\";\n    }\n\n    // Prepare class specific stuff\n    if (isClass) {\n      context.isMythicPath = itemData.subType === \"mythic\";\n\n      for (const [a, s] of Object.entries(itemData.savingThrows)) {\n        s.label = pf1.config.savingThrows[a];\n      }\n      for (const [a, s] of Object.entries(itemData.fc)) {\n        s.label = pf1.config.favouredClassBonuses[a];\n      }\n\n      context.isBaselikeClass = pf1.config.favoredClassTypes.includes(itemData.subType);\n      context.isRacialHD = itemData.subType === \"racial\";\n      context.isNPCClass = itemData.subType === \"npc\";\n      context.isPCClass = !context.isNPCClass && !context.isRacialHD;\n\n      const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n      context.healthConfig = healthConfig.getClassHD(this.item);\n    }\n\n    if (item.type === \"consumable\") {\n      context.hasSpellType = [\"potion\", \"scroll\", \"wand\", \"staff\"].includes(item.subType);\n    }\n\n    // Prepare ammunition\n    context.canUseAmmo = !context.isNaturalAttack && item.type !== \"spell\";\n    if (context.canUseAmmo && item.system.ammo?.type) {\n      context.defaultAmmo = actor?.items.get(item.getFlag(\"pf1\", \"defaultAmmo\"));\n      if (context.defaultAmmo) {\n        context.invalidDefaultAmmo = context.defaultAmmo.system.extraType !== item.system.ammo.type;\n      }\n    }\n\n    // Prepare {value: [], custom: []} objects\n    const profs = {\n      armorProf: pf1.config.armorProficiencies,\n      descriptors: pf1.config.spellDescriptors,\n      languages: pf1.config.languages,\n      weaponGroups: pf1.config.weaponGroups,\n      weaponProf: pf1.config.weaponProficiencies,\n    };\n\n    for (const [t, choices] of Object.entries(profs)) {\n      if (!itemData[t]) continue;\n\n      const trait = foundry.utils.deepClone(itemData[t]);\n      context[t] = trait;\n\n      let values = [];\n      if (trait.value) {\n        values = trait.value instanceof Array ? trait.value : [trait.value];\n      }\n      trait.selected = values.reduce((obj, t) => {\n        obj[t] = choices[t];\n        return obj;\n      }, {});\n\n      // Add custom entry\n      if (trait.custom?.length) {\n        trait.custom.forEach((c, i) => (trait.selected[`custom${i + 1}`] = c));\n      }\n      trait.active = !foundry.utils.isEmpty(trait.selected);\n    }\n\n    // Prepare stuff for changes\n    if (item.changes?.size) {\n      const buffTargets = getBuffTargets(\"buffs\", { actor, item });\n      let showPriority = false;\n      context.changes =\n        item.changes?.map((/** @type {ItemChange} */ ch) => {\n          const target = buffTargets[ch.target];\n          const typeLabel = pf1.config.bonusTypes[ch.type];\n          const chData = {\n            change: ch,\n            isValid: !!target,\n            label: target?.label ?? ch.target,\n            isDeferred: ch.isDeferred,\n            isAdd: ch.operator === \"add\",\n            isSet: ch.operator === \"set\",\n            ...ch,\n            isValidType: !!typeLabel,\n            typeLabel: typeLabel || ch.type,\n            id: ch.id,\n          };\n          chData.priority ||= 0;\n          if (chData.priority != 0) showPriority = true;\n          return chData;\n        }) ?? [];\n\n      context.changePriority = showPriority;\n    }\n\n    // Prepare stuff for items with context notes\n    if (itemData.contextNotes) {\n      // TODO: Remove .toObject() and move the supporting data to the datamodel\n      context.contextNotes = itemData.contextNotes.map((cn) => cn.toObject());\n      const noteTargets = getBuffTargets(\"contextNotes\", { actor, item });\n      context.contextNotes.forEach((n) => {\n        const target = noteTargets[n.target];\n        n.isValid = !!target;\n        n.label = target?.label ?? n.target;\n      });\n    }\n\n    // Prepare condition display\n    context.conditions = item.effects\n      .filter((e) => !e.disabled && e.statuses.size)\n      .map((e) => Array.from(e.statuses))\n      .flat()\n      .map((s) => pf1.registry.conditions.get(s)?.name || s);\n\n    if (item.system.conditions?.all?.size) {\n      context.system.conditions.selected = item.system.conditions?.all?.map(\n        (c) => pf1.registry.conditions.get(c)?.name || c\n      );\n\n      context.conditions = context.conditions.concat(Array.from(context.system.conditions.selected));\n    }\n\n    context.conditions = new Set(context.conditions.sort((a, b) => a.localeCompare(b)));\n\n    // Add distance units\n    context.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    if (item.type !== \"spell\") {\n      for (const d of [\"close\", \"medium\", \"long\"]) {\n        delete context.distanceUnits[d];\n      }\n    }\n\n    // Parse notes\n    if (itemData.attackNotes) {\n      const value = itemData.attackNotes;\n      foundry.utils.setProperty(context, \"notes.attack\", value);\n    }\n\n    // Add item flags\n    this._prepareItemFlags(context);\n\n    // Add actions\n    context.actions = this.item.actions;\n\n    context.distanceUnit = game.i18n.localize(\n      pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n    );\n\n    // Prepare speeds\n    if (item.type === \"race\") {\n      context.speeds = [];\n      for (const key of [\"land\", \"fly\", \"swim\", \"climb\", \"burrow\"]) {\n        const value = item.system.speeds?.[key] ?? 0;\n        if (value == 0) continue;\n        let descriptor;\n        if (key === \"fly\") {\n          const fm = item.system.speeds.flyManeuverability || \"average\";\n          descriptor = `PF1.Movement.FlyManeuverability.Quality.${fm}`;\n        }\n        context.speeds.push({\n          value: pf1.utils.convertDistance(value)[0],\n          mode: key,\n          label: `PF1.Movement.Mode.${key}`,\n          descriptor,\n        });\n      }\n    }\n\n    // Content source, fill in from registry\n    if (context.showIdentifiedData) {\n      this._prepareContentSource(context);\n    }\n\n    // Trailing async awaits to ensure they're all awaited in one go instead of sequentially\n\n    // Add descriptions\n    const description = context.showIdentified ? this.item.getDescription({ rollData, header: false }) : null;\n\n    context.descriptionHTML = {\n      identified: null,\n      unidentified: null,\n    };\n    const enrichOptions = {\n      secrets: context.owner,\n      rollData: rollData,\n      async: true,\n      relativeTo: this.actor,\n    };\n    const pIdentDesc = description ? enrichHTMLUnrolledAsync(description, enrichOptions) : Promise.resolve();\n    pIdentDesc.then((html) => (context.descriptionHTML.identified = html));\n    const unidentDesc = itemData.description?.unidentified;\n    const pUnidentDesc = unidentDesc ? enrichHTMLUnrolledAsync(unidentDesc, enrichOptions) : Promise.resolve();\n    pUnidentDesc.then((html) => (context.descriptionHTML.unidentified = html));\n\n    const pTopDesc = topDescription\n      ? TextEditor.enrichHTML(topDescription, {\n          rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : Promise.resolve();\n    pTopDesc.then((html) => (context.topDescription = html));\n\n    // Add script calls\n    const pScripts = this._prepareScriptCalls(context);\n\n    // Add links\n    const pLinks = this._prepareLinks(context);\n\n    await Promise.all([pIdentDesc, pUnidentDesc, pTopDesc, pScripts, pLinks]);\n\n    return context;\n  }\n\n  _prepareContentSource(context) {\n    const sources = this._getContentSources();\n    if (sources.length == 0) return;\n\n    const main = this._selectContentSource(sources);\n\n    context.bookSources = {\n      all: sources,\n      main,\n    };\n\n    if (sources.length > 1) {\n      context.bookSources.extras = sources.filter((s) => s !== main);\n    }\n  }\n\n  _selectContentSource(sources) {\n    if (sources?.length === 0) return null;\n\n    sources.sort((a, b) => b.datestamp - a.datestamp);\n\n    return sources[0];\n  }\n\n  _getContentSources() {\n    const sources = this.item.system.sources ?? [];\n\n    return sources.map((source) => {\n      const registry = pf1.registry.sources.get(source?.id) ?? {};\n      const { publisher, date, abbr, name, edition } = registry;\n\n      return {\n        publisher,\n        date,\n        abbr,\n        name,\n        edition,\n        ...source,\n        title: source.title || registry.name,\n        registry,\n        datestamp: Date.parse(source.date || registry.date),\n      };\n    });\n  }\n\n  _prepareMaterialsAndAddons(item) {\n    const materialList = {};\n    const addonList = [];\n    const basicList = {};\n\n    naturalSort([...pf1.registry.materialTypes], \"name\").forEach((material) => {\n      if (material.basic) {\n        // Filter basic materials\n        basicList[material.id] = material.name;\n      } else {\n        const isAllowed = material.isAllowed(item);\n        if (!isAllowed) return;\n\n        if (!material.addon) {\n          materialList[material.id] = material.name;\n        } else {\n          addonList.push({ key: material.id, name: material.name });\n        }\n      }\n    });\n\n    return {\n      materials: materialList,\n      addons: addonList,\n      basics: basicList,\n    };\n  }\n\n  _prepareAlignments(alignments) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: foundry.utils.deepClone(alignments),\n    };\n  }\n\n  _prepareLinks(context) {\n    context.links = {\n      list: [],\n    };\n\n    // Add charges link type\n    if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      context.links.list.push({\n        id: \"charges\",\n        label: game.i18n.localize(\"PF1.LinkTypeCharges\"),\n        help: game.i18n.localize(\"PF1.LinkHelpCharges\"),\n        items: [],\n      });\n    }\n\n    // Add class associations\n    if (context.isClass) {\n      context.links.list.push({\n        id: \"classAssociations\",\n        label: game.i18n.localize(\"PF1.LinkTypeClassAssociations\"),\n        help: game.i18n.localize(\"PF1.LinkHelpClassAssociations\"),\n        fields: {\n          level: {\n            type: \"Number\",\n            label: game.i18n.localize(\"PF1.Level\"),\n          },\n        },\n        items: [],\n      });\n    }\n\n    // Add children link type\n    context.links.list.push({\n      id: \"children\",\n      label: game.i18n.localize(\"PF1.LinkTypeChildren\"),\n      help: game.i18n.localize(\"PF1.LinkHelpChildren\"),\n      items: [],\n    });\n\n    context.links.list.push({\n      id: \"supplements\",\n      label: game.i18n.localize(\"PF1.LinkTypeSupplements\"),\n      help: game.i18n.localize(\"PF1.LinkHelpSupplements\"),\n      fields: {\n        /*\n        // TODO: Add child link creation toggle\n        asChild: {\n          type: \"Boolean\",\n          label: game.i18n.localize(\"PF1.AsChild\"),\n        },\n        */\n      },\n      items: [],\n    });\n\n    // Post process data\n    const item = this.item,\n      actor = item.actor;\n    for (const links of context.links.list) {\n      const items = item.system.links?.[links.id] || [];\n      for (let index = 0; index < items.length; index++) {\n        const linkData = foundry.utils.deepClone(items[index]);\n        linkData.index = index; // Record index so sorted lists maintain data cohesion\n\n        const linkedItem = fromUuidSync(linkData.uuid, { relative: actor });\n        if (!linkedItem) linkData.broken = true;\n        linkData.img = linkedItem?.img || Item.implementation.getDefaultArtwork(linkedItem);\n\n        // Fill in name if it's not in the local data\n        linkData.name ||= linkedItem?.name;\n\n        // Add item to stack\n        links.items.push(linkData);\n      }\n    }\n  }\n\n  _prepareItemFlags(context) {\n    const flags = context.system.flags ?? {};\n    context.flags ??= {};\n    context.flags.boolean = flags.boolean ?? {};\n    context.flags.dictionary = flags.dictionary ?? {};\n  }\n\n  async _prepareScriptCalls(context) {\n    context.scriptCalls = null;\n\n    const categories = pf1.registry.scriptCalls.filter((category) => {\n      if (!category.itemTypes.includes(this.item.type)) return false;\n      return !(category.hidden === true && !game.user.isGM);\n    });\n    // Don't show the Script Calls section if there are no categories for this item type\n    if (!categories.length) return;\n\n    context.scriptCalls = {};\n\n    // Iterate over all script calls, and adjust data\n    const scriptCalls = this.item.scriptCalls ?? [];\n\n    // Create categories, and assign items to them\n    for (const { id, name, info } of categories) {\n      context.scriptCalls[id] = {\n        name,\n        tooltip: info,\n        items: scriptCalls.filter((sc) => sc.category === id && !sc.hide),\n        dataset: {\n          category: id,\n        },\n      };\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Form Submission                             */\n  /* -------------------------------------------- */\n\n  /**\n   * Extend the parent class _updateObject method to ensure that damage ends up in an Array\n   *\n   * @param event\n   * @param formData\n   * @private\n   */\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    const system = formData.system;\n    const links = system.links;\n\n    if (links) {\n      const oldLinks = this.item.system?.links ?? {};\n      // Handle links arrays\n      for (const [linkType, typedLinks] of Object.entries(links)) {\n        if (Array.isArray(typedLinks)) continue; // Already handled by something else\n\n        // Maintain array and merge new data in\n        links[linkType] = foundry.utils.deepClone(oldLinks[linkType] ?? []);\n        for (const [index, linkData] of Object.entries(typedLinks)) {\n          links[linkType][index] = foundry.utils.mergeObject(links[linkType][index] ?? {}, linkData);\n        }\n      }\n    }\n\n    // Ensure values are stored as lbs\n    if (system.weight) {\n      if (system.weight?.value !== undefined) {\n        const wmult = this.item.getWeightMultiplier();\n        system.weight.value = pf1.utils.convertWeightBack(system.weight.value / wmult);\n      }\n      if (system.weight.reduction?.value !== undefined) {\n        system.weight.reduction.value = pf1.utils.convertWeightBack(system.weight.reduction.value);\n      }\n    }\n\n    // Change currencies with relative values\n    // @TODO: Create a common relative input handler.\n    const relativeKeys = [\"currency.pp\", \"currency.gp\", \"currency.sp\", \"currency.cp\"];\n    for (const key of relativeKeys) {\n      const value = foundry.utils.getProperty(system, key);\n      if (typeof value !== \"string\") continue;\n\n      // Add or subtract values\n      let newValue;\n      if (value.match(/(\\+|-)(\\d+)/)) {\n        const operator = RegExp.$1;\n        let value = parseInt(RegExp.$2);\n        if (operator === \"-\") value = -value;\n        const originalValue = foundry.utils.getProperty(this.item.system, key);\n        newValue = originalValue + value;\n      } else if (value.match(/^[0-9]+$/)) {\n        newValue = parseInt(value);\n      } else if (value === \"\") {\n        newValue = 0;\n      } else {\n        // Invalid strings\n        newValue = 0;\n        // Trigger warning for bad value\n        if (event.target.name === `system.${key}`) {\n          event.target.setCustomValidity(game.i18n.localize(\"PF1.Warning.InvalidInput\"));\n        }\n      }\n\n      foundry.utils.setProperty(system, key, Math.max(0, newValue));\n    }\n\n    // Adjust Material Addons\n    // The available addons can change depending in the chosen material,\n    // so we need to get the values to build the addons on the item.\n    const material = this.item.type === \"equipment\" ? system.armor?.material : system.material;\n    if (material?.addon) {\n      // Convert to array\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    // Update the Item\n    return super._updateObject(event, formData);\n  }\n\n  /* -------------------------------------------- */\n\n  _onHoverTooltip(event) {\n    const type = event.target.dataset.tooltipType;\n    const content = [];\n    switch (type) {\n      case \"weight\":\n        this._onHoverWeightTooltip(event, content);\n        break;\n      case \"price\":\n        this._onHoverPriceTooltip(event, content);\n        break;\n    }\n    return content.join(\"<br>\");\n  }\n\n  _onHoverWeightTooltip(event, content) {\n    const unit = game.i18n.localize(pf1.utils.getWeightSystem() === \"metric\" ? \"PF1.Kgs\" : \"PF1.Lbs\");\n    // TODO: better i18n support\n    const mValue = `${this.item.system.weight.converted.value} ${unit}`;\n\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: mValue }));\n  }\n\n  _onHoverPriceTooltip(event, content) {\n    const cp = this.item.getValue({ sellValue: 1, single: true, inLowestDenomination: true });\n    const c = pf1.utils.currency.split(cp);\n    const inline = [];\n    Object.entries(c).forEach(([key, value]) => {\n      if (value > 0) inline.push(game.i18n.format(`PF1.Currency.Inline.${key}`, { value }));\n    });\n\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: inline.join(\", \") }));\n  }\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula || \"0\");\n      await roll.evaluate();\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.classList.add(\"invalid\");\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    // Formulas not meant for checks or other rolls must be deterministic\n    // TODO: Make this selection better\n    if (!el.classList.contains(\"roll\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeDeterministic\";\n        el.classList.add(\"invalid\");\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  /**\n   * Activate listeners for interactive item sheet events\n   *\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    const hasActor = !!this.actor;\n\n    if (this.item.isPhysical) {\n      html.find(\".details-tooptip\").each((i, el) => {\n        el.addEventListener(\n          \"pointermove\",\n          (ev) => {\n            const content = this._onHoverTooltip(ev);\n            if (content) {\n              game.tooltip.activate(el, {\n                text: content,\n                direction: TooltipManager.TOOLTIP_DIRECTIONS.RIGHT,\n                cssClass: \"pf1\",\n              });\n            }\n          },\n          { passive: true }\n        );\n        el.addEventListener(\"pointerleave\", (ev) => game.tooltip.deactivate(), { passive: true });\n      });\n    }\n\n    // Tooltips\n    html.mousemove((ev) => this._moveTooltips(ev));\n\n    // Action interactions\n    html\n      .find(\".actions .item-list .item .item-name\")\n      // Edit action\n      .on(\"contextmenu\", this._onActionEdit.bind(this))\n      // Action summaries\n      .on(\"click\", this._onActionSummary.bind(this));\n\n    // Action control\n    html.find(\".actions .action-controls a\").on(\"click\", this._onActionControl.bind(this));\n\n    // Open help browser\n    html.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n\n    // Open entry/trait editor/viewer\n    html.find(\".entry-selector\").click(this._onEntrySelector.bind(this));\n    html.find(\".trait-selector\").click(this._onTraitSelector.bind(this));\n\n    // Content source editor\n    html\n      .find(\".content-source .control a.edit\")\n      .click(() => pf1.applications.ContentSourceEditor.open(this.item, { editable: this.isEditable }));\n\n    // Mark proficiency in indeterminate state if not forced but actor has it.\n    if (\n      hasActor &&\n      this.item.system.proficient !== true &&\n      [\"weapon\", \"equipment\", \"attack\"].includes(this.item.type)\n    ) {\n      if (this.item.isProficient) {\n        const proficiency = html.find(\"input[name='system.proficient']\")[0];\n        if (proficiency) proficiency.indeterminate = true;\n      }\n    }\n\n    // Mark broken in indeterminate state if it's automatically designated broken but not explicitly\n    if (this.item.isPhysical) {\n      if (this.item.isBroken && this.item.system.broken !== true) {\n        const broken = html.find(\"input[name='system.broken']\")[0];\n        if (broken) {\n          broken.indeterminate = true;\n          broken.dataset.tooltip = \"PF1.AutoBroken\";\n        }\n      }\n    }\n\n    // Allow editing and viewing visible scripts\n    html.find(\".script-calls .item-list .item\").contextmenu(this._onScriptCallEdit.bind(this));\n    html.find(\".script-calls .item-control\").click(this._onScriptCallControl.bind(this));\n\n    // Add warning about formulas\n    html.find(\"input.formula\").each(async (_, el) => this._validateFormula(el));\n\n    // Linked item clicks\n    html\n      .find(\".tab[data-tab='links'] .links-item .item-name .source-item\")\n      .on(\"click\", this._openLinkedItem.bind(this));\n\n    html.find('a[data-action=\"browse\"]').click(this._onOpenCompendiumBrowser.bind(this));\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      html.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add drop handler to textareas and text inputs\n    html.find(\"textarea, input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Create new change\n    html.find(\".tab.changes .controls a.add-change\").click(this._onCreateChange.bind(this));\n\n    // Changes\n    html[0].querySelectorAll(\".tab.changes .changes .change[data-change-id]\").forEach((el) => {\n      // Sticky tooltip cotrols\n      el.querySelector(\".controls a.menu\").addEventListener(\"pointerenter\", this._onOpenChangeMenu.bind(this), {\n        passive: true,\n      });\n      // Right click open change editor\n      el.addEventListener(\"contextmenu\", this._onEditChange.bind(this));\n    });\n\n    // Modify note changes\n    html.find(\".context-note-control\").click(this._onNoteControl.bind(this));\n    html.find(\".context-note .context-note-target\").click(this._onNoteTargetControl.bind(this));\n\n    // Create attack\n    if ([\"weapon\"].includes(this.item.type)) {\n      html.find(\"button[name='create-attack']\").click(this._createAttack.bind(this));\n    }\n\n    // Create spellbook\n    if (this.item.type === \"class\") {\n      html.find(\"button[name='create-spellbook']\").click(this._createSpellbook.bind(this));\n    }\n\n    // Effect notes and footnotes\n    html.find(\".card-notes .controls a\").click(this._onCardNoteControl.bind(this));\n\n    // Listen to field entries\n    html.find(\".item-selector\").click(this._onItemSelector.bind(this));\n\n    html.find(\".link-control\").click(this._onLinkControl.bind(this));\n\n    // Click to change text input\n    html.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n\n    // Select the whole text on click\n    html.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    html.find(\".speed-editor\").click(this._onSpeedEdit.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Actions\n    /* -------------------------------------------- */\n\n    // Modify action charges\n    html\n      .find(\".action-parts .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setActionUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setActionUses.bind(this));\n      });\n\n    // Open charge source with right click\n    html.find(\".item-link[data-item-id]\").on(\"contextmenu\", (event) => {\n      event.preventDefault();\n      const itemId = event.currentTarget.dataset.itemId;\n      const item = this.actor.items.get(itemId);\n      item?.sheet.render(true, { focus: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Script Calls\n    /* -------------------------------------------- */\n\n    html.find(\".script-calls .item-list[data-category]\").on(\"drop\", this._onScriptCallDrop.bind(this));\n  }\n\n  _onSpanTextInput(event, callback = null) {\n    const el = event.currentTarget;\n    const parent = el.parentElement;\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(`INPUT`);\n    newEl.type = \"text\";\n    if (el.dataset?.dtype) newEl.dataset.dtype = el.dataset.dtype;\n\n    // Set value of new input element\n    let prevValue = el.innerText;\n    if (el.classList.contains(\"placeholder\")) prevValue = \"\";\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n\n    const name = el.getAttribute(\"name\");\n    let maxValue;\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.item, name) ?? \"\";\n      if (typeof prevValue !== \"string\") prevValue = prevValue.toString();\n\n      if (name.endsWith(\".value\") && !noCap) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.item, maxName);\n      }\n    }\n    newEl.value = prevValue;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    // Replace span with input element\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = parseFloat(el.dataset.clearValue || \"0\");\n    parent.replaceChild(newEl, el);\n    let changed = false;\n    newEl.addEventListener(\"keypress\", (event) => {\n      if (event.key !== \"Enter\") return;\n      changed = true;\n      if (allowRelative) {\n        const number = adjustNumberByStringCommand(parseFloat(prevValue), newEl.value, maxValue, clearValue);\n        newEl.value = number;\n      }\n\n      if (newEl.value.toString() === prevValue.toString()) {\n        this.render();\n      } else if (typeof callback === \"function\") {\n        callback.call(this, event);\n      }\n    });\n    newEl.addEventListener(\"focusout\", (event) => {\n      if (!changed) {\n        changed = true;\n        if (allowRelative && parseFloat(prevValue) !== parseFloat(newEl.value)) {\n          const number = adjustNumberByStringCommand(parseFloat(prevValue), newEl.value, maxValue, clearValue);\n          newEl.value = number;\n        }\n\n        if (newEl.value.toString() === prevValue.toString()) {\n          this.render();\n        } else if (typeof callback === \"function\") {\n          callback.call(this, event);\n        }\n      }\n    });\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setActionUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const actionId = el.closest(\".item[data-action-id]\").dataset.actionId;\n    const action = this.item.actions.get(actionId);\n\n    this._mouseWheelAdd(event, el);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setActionUpdate(action.id, \"uses.self.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateActions(), { passive: true, once: true });\n    } else this._updateActions();\n  }\n\n  setActionUpdate(id, key, value) {\n    let obj = this._actionUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._actionUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  async _updateActions() {\n    const promises = [];\n\n    const updates = this._actionUpdates;\n    this._actionUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const action = this.item.actions.get(d._id);\n      if (!action) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      await action.update(d);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  _onOpenCompendiumBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const category = a.dataset.category;\n\n    pf1.applications.compendiums[category].render(true, { focus: true });\n  }\n\n  async _onScriptCallControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const script = this.item.scriptCalls ? this.item.scriptCalls.get(a.closest(\".item\")?.dataset.itemId) : null;\n    const group = a.closest(\".item-list\");\n    const category = group.dataset.category;\n\n    // Create item\n    if (a.classList.contains(\"item-create\")) {\n      await this._onSubmit(event, { preventRender: true });\n      const newScripts = await pf1.components.ItemScriptCall.create([{ category, type: \"script\" }], {\n        parent: this.item,\n      });\n      newScripts?.forEach((script) => script.edit());\n      return;\n    }\n    // Delete item\n    else if (script && a.classList.contains(\"item-delete\")) {\n      const list = (this.item.system.scriptCalls || []).filter((o) => o._id !== script.id);\n      const updateData = { \"system.scriptCalls\": list };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Edit item\n    else if (script && a.classList.contains(\"item-edit\")) {\n      script.edit();\n    }\n    // Toggle hidden\n    else if (script && a.classList.contains(\"item-hide\")) {\n      await this._onSubmit(event, { preventRender: true });\n      script.update({ hidden: !script.hidden });\n    }\n  }\n\n  _onScriptCallEdit(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    /** @type {pf1.components.ItemScriptCall} */\n    const script = this.item.scriptCalls?.get(el.dataset.itemId);\n    script?.edit({ editable: this.isEditable });\n  }\n\n  /**\n   * @protected\n   * @param {Event} event\n   */\n  _moveTooltips(event) {\n    let elem = event.target;\n    if (!elem.matches(\".tooltip\")) elem = elem.closest(\".tooltip\");\n    if (elem) {\n      const tip = elem.querySelector(\".tooltipcontent\");\n      if (tip) {\n        const x = event.clientX;\n        const y = event.clientY + 24;\n        tip.style.cssText += `left:${x}px;top:${y}px;`;\n      }\n    }\n  }\n\n  /**\n   * Handle dropping content-linkable data to `<textarea>` or text `<input>`\n   *\n   * @internal\n   * @param {DragEvent} event\n   */\n  async _onTextAreaDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n    if (!link) return void ui.notifications.warn(\"PF1.Error.InvalidContentLinkDrop\", { localize: true });\n\n    // Insert link\n    // TODO: Replace painted text if any\n    elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n    return this._onSubmit(event); // Save\n  }\n\n  async _onScriptCallDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const { uuid, type } = eventData;\n    if (type !== \"Macro\") return;\n\n    // Submit data\n    if (uuid) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const elem = event.currentTarget;\n      const category = elem.dataset.category;\n      const list = this.item.system.scriptCalls ?? [];\n      return pf1.components.ItemScriptCall.create([{ type: \"macro\", value: uuid, category, name: \"\", img: \"\" }], {\n        parent: this.item,\n      });\n    }\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /**\n   * By default, returns true only for GM\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const elem = event.target;\n\n    // Drag action\n    const actionId = elem.dataset.actionId;\n    if (actionId) {\n      const action = this.item.actions.get(actionId);\n      const obj = { type: \"action\", uuid: this.item.uuid, actionId: action.id, data: action.data };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag Change\n    const changeId = elem.dataset.changeId;\n    if (changeId) {\n      const ch = this.item.changes.get(changeId);\n      const obj = { type: \"pf1Change\", data: ch.data, changeId, uuid: this.item.uuid };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag link\n    if (elem.matches(\".links-item .item-name\")) {\n      const el = elem.closest(\"[data-uuid]\");\n      const type = el.closest(\"[data-tab]\")?.dataset.tab;\n      let uuid = el.dataset.uuid;\n      if (type === \"children\") {\n        // Transform relative UUID into absolute\n        uuid = fromUuidSync(uuid, { relative: this.actor })?.uuid;\n      }\n      const index = Number(el.dataset.index);\n      const link = this.item.system.links?.[type]?.[index];\n      const obj = { type: \"Item\", uuid, pf1Link: {} };\n      if (link) obj.pf1Link.level = link.level;\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n  }\n\n  /**\n   * Allow non-GM to drag&drop actions and items (for containers) to this sheet.\n   *\n   * @override\n   * @protected\n   */\n  _canDragDrop() {\n    return this.isEditable;\n  }\n\n  /**\n   * @internal\n   * @param {DragEvent} event\n   */\n  async _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!this.isEditable) return;\n\n    const data = TextEditor.getDragEventData(event);\n    const { type, uuid } = data;\n    /** @type {ItemPF} */\n    const item = this.item;\n\n    const srcItem = uuid ? await fromUuid(uuid) : null;\n\n    switch (type) {\n      // Handle actions\n      case \"action\": {\n        const actionId = data.actionId;\n        // Re-order\n        if (srcItem === item) {\n          const targetActionID = event.target?.closest(\".item[data-action-id]\")?.dataset?.actionId;\n          const prevActions = foundry.utils.deepClone(item.toObject().system.actions);\n\n          let targetIdx;\n          if (!targetActionID) targetIdx = prevActions.length - 1;\n          else targetIdx = prevActions.indexOf(prevActions.find((o) => o._id === targetActionID));\n          const srcIdx = prevActions.indexOf(prevActions.find((o) => o._id === actionId));\n\n          const [actionData] = prevActions.splice(srcIdx, 1);\n          prevActions.splice(targetIdx, 0, actionData);\n          await this.item.update({ \"system.actions\": prevActions });\n        }\n        // Add to another item\n        else {\n          const prevActions = foundry.utils.deepClone(item.toObject().system.actions ?? []);\n          data.data._id = foundry.utils.randomID(16);\n          prevActions.splice(prevActions.length, 0, data.data);\n          await this.item.update({ \"system.actions\": prevActions });\n        }\n        break;\n      }\n      case \"pf1Change\": {\n        const chData = data.data;\n        // Sort in same item\n        if (srcItem === item) {\n          const el = event.target.matches(\"li.change\") ? event.target : event.target.closest(\"li.change\");\n          if (!el) return;\n          const targetChangeId = el.dataset.changeId;\n          if (chData._id === targetChangeId) {\n            // Dropped onto self, ignore.\n          } else {\n            // Re-arrange\n            /** @type {Array<object>} */\n            const changes = item.toObject().system.changes ?? [];\n            const removed = changes.findSplice((c) => c._id === chData._id);\n            if (!removed) return;\n            const idx = changes.findIndex((c) => c._id === targetChangeId);\n            if (idx >= 0) {\n              changes.splice(idx, 0, removed);\n              return item.update({ \"system.changes\": changes });\n            }\n          }\n        }\n        // Duplicate\n        else {\n          delete chData._id;\n          this.activateTab(\"changes\", \"primary\");\n          return pf1.components.ItemChange.create([chData], { parent: item });\n        }\n        break;\n      }\n      case \"Item\": {\n        // Add drop handler to link tabs\n        const linksTab = event.target.closest(\".tab.links .tab[data-group='links']\");\n        if (linksTab) {\n          this._onLinksDrop(event, data);\n        }\n        break;\n      }\n      case \"pf1ContentSourceEntry\": {\n        const src = data.data;\n        const origin = await fromUuid(data.uuid);\n        if (!origin) return;\n        if (origin === this.item) return; // From same item\n\n        const sources = this.item.toObject().system.sources ?? [];\n\n        // Disallow same ID source copy\n        if (src.id && sources.some((osrc) => (src.id ? osrc.id === src.id : osrc.title === src.title))) {\n          ui.notifications.warn(\"PF1.ContentSource.Errors.DuplicateID\", { localize: true });\n          return;\n        }\n\n        sources.push(src);\n        await this.item.update({ \"system.sources\": sources });\n        if (!event.shiftKey) {\n          pf1.applications.ContentSourceEditor.open(this.item);\n          // TODO: Activate desired tab.\n        }\n        break;\n      }\n    }\n  }\n\n  async _onLinksDrop(event, data) {\n    const elem = event.target;\n    let linkType = elem.closest(\"[data-tab]\").dataset.tab;\n\n    // Default selection for dropping on tab instead of body\n    if (linkType === \"links\") linkType = \"children\";\n\n    // Try to extract the data\n    if (!data.type) throw new Error(\"Invalid drop data received\");\n\n    const targetItem = await fromUuid(data.uuid);\n    if (!targetItem || !(targetItem instanceof Item))\n      throw new Error(`UUID did not resolve to valid item: ${data.uuid}`);\n\n    let dataType,\n      itemLink = data.uuid;\n    // Case 1 - Import from a Compendium pack\n    if (targetItem.pack) {\n      dataType = \"compendium\";\n    }\n    // Case 2 - Import from same actor\n    else if (targetItem.actor === this.item.actor) {\n      dataType = \"data\";\n      itemLink = targetItem.getRelativeUUID(this.actor);\n    }\n\n    // Case 3 - Import from World Document\n    else {\n      dataType = \"world\";\n    }\n\n    // Add extra data\n    const extraData = {};\n    switch (linkType) {\n      case \"classAssociations\": {\n        const level = data.pf1Link?.level;\n        if (Number.isNumeric(level)) extraData.level = level;\n        break;\n      }\n    }\n\n    await this.item.createItemLink(linkType, dataType, targetItem, itemLink, extraData);\n  }\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: game.i18n.localize(a.dataset.title),\n      subject: a.dataset.options,\n      choices: pf1.config[a.dataset.options],\n    };\n\n    switch (a.dataset.options) {\n      case \"conditions\": {\n        options.choices = pf1.registry.conditions.getLabels();\n        break;\n      }\n    }\n\n    new ActorTraitSelector(this.item, options).render(true);\n  }\n\n  _onSpeedEdit(event) {\n    event.preventDefault();\n\n    let app = Object.values(ui.windows).find(\n      (oldApp) => oldApp instanceof SpeedEditor && oldApp.document === this.item\n    );\n    app ??= new SpeedEditor(this.item);\n    app.render(true, { focus: true });\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   * @private\n   */\n  async _onActionSummary(event) {\n    event.preventDefault();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    // Check whether pseudo-item belongs to another collection\n    const action = this.item.actions.get(li.dataset.actionId);\n\n    const rollData = action.getRollData();\n\n    // For actions (embedded into a parent item), show only the action's summary instead of a complete one\n    const { actionDescription, properties } = await action.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    if (li.classList.contains(\"expanded\")) {\n      const summary = li.querySelector(\".item-summary\");\n      $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: actionDescription || game.i18n.localize(\"PF1.NoDescription\"),\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      content = await TextEditor.enrichHTML(content, { rollData, async: true, secrets: this.item.isOwner });\n\n      const div = $(content);\n      div.hide();\n      li.append(...div);\n      div.slideDown(200);\n    }\n    li.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Open linked item sheet.\n   *\n   * @param {Event} event\n   */\n  async _openLinkedItem(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".links-item[data-uuid],.links-item[data-item-id]\");\n    const { uuid } = el.dataset;\n\n    const item = await fromUuid(uuid, { relative: this.actor });\n    item.sheet.render(true, { focus: true });\n  }\n\n  async _onActionControl(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const a = event.currentTarget;\n\n    const getUniqueActionName = (baseName) => {\n      baseName = baseName.replace(/\\s*\\(\\d+\\)$/, \"\"); // Strip existing number\n      let name = baseName;\n      const names = new Set(this.item.actions?.map((act) => act.name) ?? []);\n      let iter = 1;\n      // Find unique name\n      while (names.has(name)) name = `${baseName} (${iter++})`;\n      return name;\n    };\n\n    // Edit action\n    if (a.classList.contains(\"edit-action\")) {\n      return this._onActionEdit(event);\n    }\n    // Add action\n    else if (a.classList.contains(\"add-action\")) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const baseName = [\"weapon\", \"attack\"].includes(this.item.type)\n        ? game.i18n.localize(\"PF1.Attack\")\n        : game.i18n.localize(\"PF1.Use\");\n\n      const newActionData = {\n        name: getUniqueActionName(baseName),\n      };\n\n      const newActions = await pf1.components.ItemAction.create([newActionData], { parent: this.item });\n      newActions.forEach((action) => action.sheet.render(true));\n      return;\n    }\n    // Remove action\n    else if (a.classList.contains(\"delete-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const action = this.item.actions.get(li.dataset.actionId);\n\n      const confirmed = getSkipActionPrompt()\n        ? true\n        : await Dialog.confirm({\n            title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: action.name }),\n            content: `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`,\n            yes: () => true,\n            no: () => false,\n            close: () => false,\n            rejectClose: false,\n          });\n\n      if (confirmed === true) {\n        await this._onSubmit(event, { preventRender: true });\n        action.delete();\n      }\n    }\n    // Duplicate action\n    else if (a.classList.contains(\"duplicate-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const actions = this.item.toObject().system.actions ?? [];\n      const action = foundry.utils.deepClone(actions.find((act) => act._id === li.dataset.actionId) ?? {});\n      action.name = getUniqueActionName(action.name);\n      action._id = foundry.utils.randomID(16);\n      actions.push(action);\n      const updateData = { \"system.actions\": actions };\n      await this._updateObject(event, this._getSubmitData(updateData));\n      this.item.actions.get(action._id)?.sheet.render(true);\n    }\n  }\n\n  async _onActionEdit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    this.item.actions.get(li.dataset.actionId).sheet.render(true);\n  }\n\n  async _onOpenChangeMenu(event) {\n    const el = event.target;\n\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n\n    const content = document.createElement(\"div\");\n    content.innerHTML = await renderTemplate(\"systems/pf1/templates/items/parts/item-change-tooltip.hbs\", { changeId });\n\n    content.querySelector(\".duplicate\").addEventListener(\"click\", (ev) => this._onDuplicateChange(ev, el));\n    content.querySelector(\".delete\").addEventListener(\"click\", (ev) => this._onDeleteChange(ev, el));\n    content.querySelector(\".edit\").addEventListener(\"click\", (ev) => this._onEditChange(ev, el, true));\n\n    await game.tooltip.activate(el, {\n      content,\n      locked: true,\n      direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n      cssClass: \"pf1 change-menu\",\n    });\n  }\n\n  /**\n   * @internal\n   * @param {Event} event - Click event\n   * @param {boolean} [tooltip] - Is this event from locked tooltip?\n   */\n  _onEditChange(event, tooltip = false) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.closest(\"[data-change-id]\").dataset.changeId;\n    const change = this.item.changes.get(changeId);\n    if (change) {\n      if (tooltip) game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      return void pf1.applications.ChangeEditor.wait(change);\n    }\n  }\n\n  _onDuplicateChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n    const changes = this.item.toObject().system.changes ?? [];\n    const old = changes.find((c) => c._id === changeId);\n    if (old) {\n      game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      delete old._id;\n      return pf1.components.ItemChange.create([old], { parent: this.item });\n    }\n  }\n\n  _onDeleteChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n    this.item.changes.get(changeId)?.delete();\n  }\n\n  async _onCreateChange(event) {\n    event.preventDefault();\n\n    const [change] = await pf1.components.ItemChange.create([{ modifier: \"untyped\" }], { parent: this.item });\n    if (change) pf1.applications.ChangeEditor.wait(change);\n  }\n\n  async _onNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Add new note\n    if (a.classList.contains(\"add-note\")) {\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.push(new pf1.components.ContextNote().toObject());\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a note\n    if (a.classList.contains(\"delete-note\")) {\n      const li = a.closest(\".context-note\");\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.splice(Number(li.dataset.note), 1);\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  _onNoteTargetControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Prepare categories and changes to display\n    const li = a.closest(\".context-note\");\n    const noteIndex = Number(li.dataset.note);\n    const note = this.item.system.contextNotes[noteIndex];\n    const categories = getBuffTargetDictionary(\"contextNotes\", { actor: this.item.actor, item: this.item });\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    const part1 = note?.target?.split(\".\")[0];\n    const category = pf1.config.contextNoteTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { title: \"PF1.Application.ContextNoteTargetSelector.Title\" },\n      categories,\n      (key) => {\n        if (key) {\n          const updateData = {};\n          updateData[`system.contextNotes.${noteIndex}.target`] = key;\n          this.item.update(updateData);\n        }\n      },\n      { category, item: note?.target }\n    );\n    w.render(true);\n  }\n\n  async _onLinkControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Delete link\n    if (a.classList.contains(\"delete-link\")) {\n      const { type, uuid, index } = a.dataset;\n      const links = this.item.toObject().system.links?.[type] ?? [];\n\n      const deleted = links.splice(Number(index), 1);\n\n      // Sanity check: Should happen only if update sneaks in between render and click\n      if (deleted.uuid && deleted.uuid !== uuid) throw new Error(\"Link deletion UUID mismatch\");\n\n      // Call hook for deleting a link\n      Hooks.callAll(\"pf1DeleteItemLink\", this.item, deleted, type);\n\n      const updateData = { \"system.links\": { [type]: links } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onInputText(event) {\n    event.preventDefault();\n\n    /** @type {HTMLElement} */\n    const elem = event.target;\n\n    elem.readOnly = false;\n\n    // Get and set real value\n    const { inputValue } = elem.dataset;\n    let origValue = inputValue ?? foundry.utils.getProperty(this.item, elem.name);\n    const displayValue = elem.value;\n    elem.value = origValue;\n    elem.select();\n\n    // Restore old display on unfocus if nothing was changed\n    elem.addEventListener(\n      \"blur\",\n      () => {\n        if (typeof origValue === \"number\") origValue = origValue.toString();\n        if (origValue === elem.value) {\n          elem.readOnly = true;\n          elem.value = displayValue;\n        }\n\n        // Clear selection\n        const s = document.getSelection();\n        if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n      },\n      { once: true, passive: true }\n    );\n  }\n\n  async _createAttack(event) {\n    if (!this.actor) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n\n    await this._onSubmit(event, { preventRender: true });\n\n    const sourceItem = this.item;\n\n    const attackItem = pf1.documents.item.ItemAttackPF.fromItem(sourceItem);\n\n    // Show in quickbar only if if the original item is there\n    attackItem.system.showInQuickbar = sourceItem.system.showInQuickbar;\n\n    // Create attack\n    const newItem = await Item.implementation.create(attackItem, { parent: this.actor });\n    if (!newItem) throw new Error(\"Failed to create attack from weapon\");\n\n    // Disable quick use of weapon\n    await sourceItem.update({ \"system.showInQuickbar\": false });\n\n    // Create link\n    await sourceItem.createItemLink(\"children\", \"data\", newItem, newItem.getRelativeUUID(this.actor));\n\n    // Notify user\n    ui.notifications.info(game.i18n.format(\"PF1.NotificationCreatedAttack\", { item: sourceItem.name }));\n  }\n\n  async _createSpellbook(event) {\n    event.preventDefault();\n    if (this.item.actor == null) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n    await this._onSubmit(event, { preventRender: true });\n\n    await this.item.actor.createSpellbook({ ...this.item.system.casting, class: this.item.system.tag });\n\n    // HACK: The above does not re-render the item sheet for some reason\n    this.render();\n  }\n\n  _onEntrySelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: a.dataset.title,\n      flag: a.dataset.flag === \"true\",\n      boolean: a.dataset.boolean === \"true\",\n      flat: a.dataset.flat === \"true\",\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n    };\n\n    pf1.applications.EntrySelector.open(this.item, options);\n  }\n\n  async _onItemSelector(event) {\n    event.preventDefault();\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n    // This functionm should never be called without an actor\n    if (!this.actor) throw new Error(\"No actor to find items from.\");\n\n    const { type, subType, kind, empty, selected, label, name } = event.currentTarget.dataset;\n\n    const filter = (item) => {\n      if (type && item.type !== type) return false;\n      if (subType && item.subType !== subType) return false;\n      if (subType === \"ammo\" && kind) {\n        if (item.system.extraType !== kind) return false;\n      }\n      return true;\n    };\n\n    const options = {\n      actor: this.actor,\n      empty: empty === \"true\" || empty !== \"false\",\n      filter,\n      selected,\n    };\n\n    const appOptions = {\n      title: `${game.i18n.format(\"PF1.SelectSpecific\", { specifier: game.i18n.localize(label) })} - ${this.actor.name}`,\n      id: `${this.item.uuid}-item-selector`,\n    };\n\n    const item = await pf1.applications.ItemSelector.wait(options, appOptions);\n    if (item === null) return;\n\n    this.item.update({ [name]: item });\n  }\n\n  /**\n   * Control effect notes and footnotes\n   *\n   * @internal\n   * @param {Event} event\n   * @returns\n   */\n  async _onCardNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const name = a.dataset.name;\n    const action = a.dataset.action;\n\n    const notes = foundry.utils.getProperty(this.item.toObject(), name) ?? [];\n\n    switch (action) {\n      case \"add\": {\n        notes.push(\"\");\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      case \"delete\": {\n        notes.splice(Number(a.dataset.index), 1);\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n}\n\n/**\n * @typedef {object} DescriptionAttribute\n * @property {string} name - Data path to which the input will be written\n * @property {boolean} [fakeName] - Is player lied to about what they're editing. Unused.\n * @property {string} id\n * @property {boolean} [isNumber] - Whether the input is a number (text input)\n * @property {boolean} [isBoolean] - Whether the input is a boolean (checkbox)\n * @property {boolean} [isRange] - Whether this is a dual input for a value and a maximum value\n * @property {string} label - The label for the input\n * @property {string | boolean | number | {value: string | number, name: string}} value - The value that is show in the sidebar.\n *   Ranges require an object with `value` and `name` properties.\n * @property {{value: string | number, name: string}} [max] - Maximum value for a range input\n * @property {number} [decimals] - Number of decimals to display for `number`s\n * @property {boolean} [fakeValue] - Is {@link DescriptionAttribute#inputValue} actually used.\n * @property {string} [inputValue] - Value that will appear in the input field when it is edited,\n *                                   overriding the default value retrieved from the item data\n *                                   using {@link DescriptionAttribute#name}\n */\n","import { ItemSheetPF } from \"./item-sheet.mjs\";\nimport { getSkipActionPrompt } from \"../../documents/settings.mjs\";\nimport { CurrencyTransfer } from \"../currency-transfer.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\nexport class ItemSheetPF_Container extends ItemSheetPF {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * @type {string[]} IDs of expanded items.\n     * @private\n     */\n    this._expandedItems = [];\n\n    /**\n     * Track the set of item filters which are applied\n     *\n     * @type {Set}\n     */\n    this._filters = {\n      search: { container: \"\" },\n    };\n\n    /** Item search */\n    this.searchCompositioning = false; // for IME\n    this.searchRefresh = true; // Lock out same term search unless sheet also refreshes\n    this.searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n    this.searchDelayEvent = null; // setTimeout id\n    this.effectiveSearch = \"\"; // prevent searching the same thing\n\n    /**\n     * Track item updates from the actor sheet.\n     *\n     * @type {object[]}\n     */\n    this._itemUpdates = [];\n\n    /**\n     * Override item sheet initial tab.\n     * Assumes first tab definitionis the main tab.\n     */\n    this.options.tabs[0].initial = \"contents\"; // Doesn't actually do anything\n    this._tabs[0].active = \"contents\"; // Actual override\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 800,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [\".item-groups-list\"],\n      dragDrop: [\n        { dragSelector: \"li.item[data-item-id]\", dropSelector: '.tab[data-tab=\"contents\"]' },\n        { dragSelector: \"label.denomination\" },\n      ],\n    });\n  }\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string}\n   */\n  get template() {\n    return \"systems/pf1/templates/items/container.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const context = await super.getData();\n\n    context.units = {\n      weight: pf1.utils.getWeightSystem() === \"metric\" ? game.i18n.localize(\"PF1.Kgs\") : game.i18n.localize(\"PF1.Lbs\"),\n    };\n\n    // Add filters\n    context.filters = this._filters;\n\n    // Show whether the item has currency\n    context.hasCurrency = Object.values(this.item.system.currency).some((o) => o > 0);\n\n    // Prepare inventory\n    this._prepareContents(context);\n\n    // Get contents weight\n    const usystem = pf1.utils.getWeightSystem();\n    context.weight = {\n      contents: this.item.system.weight.converted.contents,\n      units: usystem === \"metric\" ? game.i18n.localize(\"PF1.Kgs\") : game.i18n.localize(\"PF1.Lbs\"),\n    };\n\n    // Get contents value\n    const coinage = pf1.utils.currency.merge(this.item.system.currency);\n\n    const cpValue =\n      this.item.getValue({ recursive: true, sellValue: 1, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) -\n      coinage;\n    const cpSellValue =\n      this.item.getValue({ recursive: true, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, inLowestDenomination: true }) -\n      coinage;\n\n    context.totalValue = pf1.utils.currency.split(cpValue, { pad: true });\n    context.sellValue = pf1.utils.currency.split(cpSellValue, { pad: true });\n    context.currency = pf1.utils.currency.split(coinage, { pad: true });\n\n    // Set value labels\n    context.labels ??= {};\n    context.labels.totalValue = game.i18n.format(\"PF1.SplitValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.SplitValue\", context.sellValue);\n    context.labels.currency = game.i18n.format(\"PF1.SplitValue\", context.currency);\n\n    return context;\n  }\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) throw new Error(`Section \"${section.path}\" lacks filters`);\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  _prepareContents(context) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // The item's items\n    context.items = this.item.items.map((/** @type {pf1.documents.item.ItemPhysicalPF} */ item) => {\n      const itemData = item.system;\n      const i = { ...item };\n      i.id = item.id; // Alias\n      i.name = item.name;\n      i.img ||= item.getDefaultArtwork();\n      i.subType = item.subType;\n      i.document = item;\n      i.labels = item.getLabels();\n      i.isCharged = !item.isSingleUse && item.isCharged;\n      i.charges = i.isCharged ? item.charges : Infinity;\n      i.hasAttack = item.hasAttack;\n      i.hasDamage = item.hasDamage;\n      i.hasAction = item.hasAction || item.isCharged;\n      i.showUnidentifiedData = item.showUnidentifiedData;\n\n      i.hasUses = item.system.uses?.max > 0;\n      //i.price = item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) / 100;\n\n      i.quantity = itemData.quantity || 0;\n      i.isStack = i.quantity > 1;\n      i.destroyed = itemData.hp?.value <= 0;\n      i.isEmpty = i.quantity <= 0;\n      i.isBroken = item.isBroken;\n\n      i.price = item.getValue({ single: true, recursive: false, sellValue: 1 });\n\n      if (!i.isEmpty && i.isCharged) {\n        if (i.charges <= 0) i.isEmpty = true;\n      }\n\n      i.disabled = i.isEmpty || i.destroyed || false;\n\n      return i;\n    }, []);\n\n    context.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Organize Inventory\n    for (const i of context.items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(`Could not find section for item \"${i.name}\"`, i);\n      }\n    }\n\n    context.inventory = inventory;\n  }\n\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n\n    // Re-open item summaries\n    for (const itemId of this._expandedItems) {\n      // Only display summaries of items that are still present\n      if (this.document.items.has(itemId)) {\n        const elem = html.find(`.item-list>.item[data-item-id=\"${itemId}\"]`)[0];\n        if (elem) this._openItemSummary(elem, { animation: false });\n      } else {\n        // Delete itemIds belonging to items no longer found in the actor\n        this._expandedItems.findSplice((o) => o === itemId);\n      }\n    }\n\n    return html;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(`.tab[data-tab=\"contents\"] .item-create`).click((ev) => this._onItemCreate(ev));\n    html.find(`.tab[data-tab=\"contents\"] .item-edit`).click(this._onItemEdit.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-delete`).click(this._onItemDelete.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-take`).click(this._onItemTake.bind(this));\n\n    html\n      .find(\".item .item-name\")\n      // Quick edit item\n      .contextmenu(this._onItemEdit.bind(this))\n      // Open item summary\n      .click(this._onItemSummary.bind(this));\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick Item Action control\n    html.find(\".item-actions a\").click((ev) => this._quickItemActionControl(ev));\n\n    // Set item uses\n    html\n      .find(\".item-detail.item-uses input[type='text']:not(:disabled)\")\n      .off(\"change\")\n      .change(this._setItemUses.bind(this))\n      .on(\"wheel\", this._setItemUses.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").click((event) => this._onItemRoll(event));\n\n    // Search box\n    const sb = html.find(\".search-input\");\n    sb.on(\"keyup change\", this._searchFilterChange.bind(this));\n    sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n    this.searchRefresh = true;\n    // Filter following refresh\n    sb.each(function () {\n      if (this.value.length > 0) $(this).change();\n    });\n  }\n\n  _onItemCreate(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const [categoryId, sectionId] = el.dataset.create?.split(\".\") ?? [];\n    const createData = foundry.utils.deepClone(pf1.config.sheetSections[categoryId]?.[sectionId]?.create);\n    if (!createData) throw new Error(`No creation data found for \"${categoryId}.${sectionId}\"`);\n    const type = createData.type || el.dataset.type;\n    const subType = createData.system?.subType;\n    const typeName = game.i18n.localize(\n      subType ? `PF1.Subtypes.Item.${type}.${subType}.Single` : CONFIG.Item.typeLabels[type]\n    );\n\n    const newItem = new Item.implementation({ name: game.i18n.format(\"PF1.NewItem\", { type: typeName }), type });\n    newItem.updateSource(createData);\n\n    // Get old items of same general category\n    const oldItems = this.items\n      .filter((oldItem) => pf1.utils.isItemSameSubGroup(newItem, oldItem))\n      .sort((a, b) => (b.sort || 0) - (a.sort || 0));\n\n    if (oldItems.length) {\n      // Ensure no duplicate names occur\n      const baseName = newItem.name;\n      let newName = baseName;\n      let i = 2;\n      const names = new Set(oldItems.map((i) => i.name));\n      while (names.has(newName)) {\n        newName = `${baseName} (${i++})`;\n      }\n\n      if (newName !== newItem.name) newItem.updateSource({ name: newName });\n    }\n\n    // Add to the end of the list of old items\n    const sort = oldItems.reduce((max, i) => Math.max(max, i.sort || 0), 0) + CONST.SORT_INTEGER_DENSITY;\n    newItem.updateSource({ sort });\n\n    return this.item.createContainerContent(newItem.toObject(), { renderSheet: true });\n  }\n\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.items.get(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true, editable: this.isEditable });\n  }\n\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this._openItemSummary(li);\n  }\n\n  /**\n   * @internal\n   * @param {Element} elem\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.animation=true]\n   * @param {object} [options.rollData]\n   */\n  async _openItemSummary(elem, { animation = true, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    const { description, properties } = await item.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    this._expandedItems = this._expandedItems.filter((o) => o !== itemId);\n    if (elem.classList.contains(\"expanded\")) {\n      const summary = elem.querySelector(\".item-summary\");\n      if (!animation) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: description || game.i18n.localize(\"PF1.NoDescription\"),\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      content = await TextEditor.enrichHTML(content, { rollData, async: true, secrets: this.document.isOwner });\n\n      const div = $(content);\n\n      if (!animation) elem.append(...div);\n      else {\n        div.hide();\n        elem.append(...div);\n        div.slideDown(200);\n      }\n      this._expandedItems.push(itemId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    if (getSkipActionPrompt()) {\n      this.item.deleteContainerContent(li.dataset.itemId);\n    } else {\n      button.disabled = true;\n\n      const item = this.document.items.get(li.dataset.itemId);\n\n      const msg = `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`;\n      Dialog.confirm({\n        title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }),\n        content: msg,\n        yes: () => {\n          this.item.deleteContainerContent(li.dataset.itemId);\n          button.disabled = false;\n        },\n        no: () => (button.disabled = false),\n        rejectClose: true,\n      }).then(null, () => (button.disabled = false));\n    }\n  }\n\n  async _onItemTake(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.items.get(li.dataset.itemId);\n\n    if (this.actor) {\n      await this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()]);\n      await this.item.deleteContainerContent(item._id);\n    }\n  }\n\n  _onDragStart(event) {\n    // Create drag data for an owned item\n    const elem = event.currentTarget;\n    let dragData;\n    if (elem.classList.contains(\"denomination\")) {\n      if (!this.item.testUserPermission(game.user, 3)) return;\n      dragData = {\n        type: \"Currency\",\n        alt: elem.classList.contains(\"alt-currency\"),\n        currency: [...elem.classList].find((o) => /[pgsc]p/.test(o)),\n        containerId: this.item.id,\n        amount: parseInt(elem.nextElementSibling.textContent || elem.nextElementSibling.value),\n      };\n    } else {\n      const item = this.item.items.get(elem.dataset.itemId);\n      dragData = {\n        type: \"Item\",\n        data: item.toObject(),\n        containerId: this.item.id,\n      };\n      dragData.itemId = item.id;\n    }\n\n    // Add actor to drag data\n    dragData.actorUuid = this.item.actor?.uuid;\n\n    // Set data transfer\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Try to extract the data\n    const data = TextEditor.getDragEventData(event);\n\n    const item = this.item;\n\n    // Handle the drop with a Hooked function\n    const allowed = Hooks.call(\"pf1DropContainerSheetData\", item, this, data);\n    if (allowed === false) return;\n\n    // Handle different data types\n    switch (data.type) {\n      case \"Item\":\n        return this._onDropItem(event, data);\n      case \"Currency\": {\n        return this._onDropCurrency(event, data);\n      }\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: data.containerId, alt: data.alt },\n      {\n        actor: this.actor,\n        container: this.item.id,\n        amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n      }\n    ).render(true);\n  }\n\n  async _onDropItem(event, data) {\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n\n    const { actorUuid, containerId } = data;\n    const droppedItem = await Item.implementation.fromDropData(data);\n    let sourceActor = actorUuid ? await fromUuid(actorUuid) : null;\n    sourceActor ??= droppedItem.actor;\n\n    if (droppedItem === this.item || droppedItem === this.item.rootItem)\n      throw new Error(\"Can not place item into itself\");\n\n    const sameActor = sourceActor && sourceActor === this.item.actor;\n\n    const itemData = game.items.fromCompendium(droppedItem, {\n      clearFolder: true,\n      keepId: sameActor,\n      clearSort: !sameActor,\n    });\n\n    // Sort item\n    if (sameActor && containerId === this.item.id) {\n      return this._onSortItem(event, itemData);\n    }\n\n    // Create consumable from spell\n    if (itemData.type === \"spell\") {\n      const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n        allowSpell: false,\n        actor: this.item.actor,\n      });\n      if (resultData) return this.item.createContainerContent(resultData);\n      else return false;\n    }\n\n    // Create or transfer item\n    if (droppedItem.isPhysical) {\n      await this.item.createContainerContent(itemData);\n      // TODO: Verify item was created so we don't delete source item without reason\n\n      if (sameActor) {\n        if (containerId) {\n          sourceActor.containerItems\n            .find((i) => i.id === data.itemId && i.parentItem?.id === containerId)\n            ?.parentItem.deleteContainerContent(data.itemId);\n        } else {\n          sourceActor.items.get(droppedItem.id)?.delete();\n        }\n      }\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n\n    const isIdentified = item.system.identified;\n    if (isIdentified !== undefined) {\n      return item.update({ \"system.identified\": !isIdentified });\n    }\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const itemId = $(a).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n    const itemData = item.toObject();\n\n    delete itemData.system?.links?.children;\n    delete itemData.system?.links?.charges;\n\n    delete itemData._id;\n    itemData.name = `${itemData.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    if (item.isPhysical && !item.system.identified) {\n      itemData.system.unidentified.name = `${item.system.unidentified.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    }\n    if (itemData.system.links?.children) delete itemData.system.links.children;\n\n    return this.item.createContainerContent(itemData);\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n    if (item.type === \"container\" && newQuantity > 1) newQuantity = 1;\n    return item.update({ \"system.quantity\": newQuantity });\n  }\n\n  /**\n   * Handles click events to trigger the use of an item.\n   *\n   * @protected\n   * @param {MouseEvent} event - The originating click event\n   */\n  _quickItemActionControl(event) {\n    event.preventDefault();\n    const itemId = $(event.currentTarget).closest(\".item\").attr(\"data-item-id\");\n    const item = this.item.items.get(itemId);\n    item.use({ ev: event });\n  }\n\n  async _setItemUses(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.item.items.get(itemId);\n\n    this._mouseWheelAdd(event.originalEvent, el);\n\n    const value = Number(el.value);\n    this.setItemUpdate(item._id, \"system.uses.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _updateItems() {\n    const promises = [];\n\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    for (const data of updates) {\n      const item = this.item.items.get(data._id);\n      if (!item) continue;\n\n      delete data._id;\n      if (item.testUserPermission(game.user, \"OWNER\")) promises.push(item.update(data));\n    }\n\n    return Promise.all(promises);\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  _mouseWheelAdd(event, el) {\n    if (event && event instanceof WheelEvent) {\n      const value = parseFloat(el.value);\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(event.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n      el.value = value + amount * increase;\n    }\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n\n    this.item.convertCurrency(currencyType);\n  }\n\n  /**\n   * @override\n   */\n  _onSortItem(event, itemData) {\n    const items = this.document.items;\n\n    // Get the drag source and its siblings\n    const source = items.get(itemData._id);\n\n    // Get the drop target\n    const dropTarget = event.target.closest(\".item\");\n    const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n    const target = items.get(targetId);\n\n    // Don't sort on yourself\n    if (targetId === source.id) return;\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings = [];\n    for (const el of dropTarget.parentElement.children) {\n      const siblingId = el.dataset.itemId;\n      if (siblingId && siblingId !== source.id) {\n        const item = items.get(el.dataset.itemId);\n        // Only take same typed siblings\n        if (item.type !== source.type) continue;\n        siblings.push(item);\n      }\n    }\n\n    // Don't sort if target has no siblings\n    if (siblings.length == 0) return;\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort(source, { target, siblings });\n    const updateData = sortUpdates.map((u) => {\n      const update = u.update;\n      update._id = u.target._id;\n      return update;\n    });\n\n    // Perform the update\n    return this.item.updateContainerContents(updateData);\n  }\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemRoll(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.item.items.get(itemId);\n\n    if (item == null) return;\n    return item.displayCard();\n  }\n\n  /** Item Search */\n\n  _searchFilterCommit(event) {\n    const container = this.item;\n    const search = this._filters.search.container.toLowerCase();\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch === search && !this.searchRefresh) return;\n\n    this.effectiveSearch = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = container.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const changed = this._filters.search.container !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    this._filters.search.container = search;\n\n    if (event.type === \"keyup\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else this._searchFilterCommit(event);\n  }\n}\n","/**\n * Derivate of Foundry's Item.createDialog() functionality.\n */\nexport class ItemCreateDialog extends FormApplication {\n  /**\n   * @param {object} [data] - Initial item data\n   * @param {object} [options] - Optional configuration\n   * @param {Function} [options.resolve] - Resolve callback\n   * @param {*} [options.pack=null] - Pack reference given to Item.create()\n   * @param {*} [options.parent=null] - Parent reference given to Item.create()\n   * @param {object} [options.options] - FormApplication options\n   */\n  constructor(data = {}, { resolve, pack = null, parent = null, options = {} } = {}) {\n    super(data, options);\n\n    this.resolve = resolve;\n    this.pack = pack;\n    this.parent = parent;\n\n    this._updateCreationData(data);\n  }\n\n  get title() {\n    return game.i18n.format(\"DOCUMENT.Create\", { type: game.i18n.localize(\"DOCUMENT.Item\") });\n  }\n\n  get template() {\n    return \"systems/pf1/templates/widgets/item-create.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      closeOnSubmit: false,\n      submitOnChange: true,\n      submitOnClose: false,\n      height: \"auto\",\n      classes: [...options.classes, \"pf1\", \"create-document\", \"create-item\"],\n    };\n  }\n\n  get initialData() {\n    return this.object;\n  }\n\n  /** @type {object} */\n  createData = {};\n\n  getSubtypes(type) {\n    switch (type) {\n      case \"class\":\n        return pf1.config.classTypes;\n      case \"race\":\n        return null;\n      case \"attack\":\n        return pf1.config.attackTypes;\n      case \"feat\":\n        return pf1.config.featTypes;\n      case \"weapon\":\n        return Object.entries(pf1.config.weaponTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"equipment\":\n        return Object.entries(pf1.config.equipmentTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"consumable\":\n        return pf1.config.consumableTypes;\n      case \"loot\":\n        return pf1.config.lootTypes;\n      case \"spell\":\n        return null;\n      case \"buff\":\n        return pf1.config.buffTypes;\n      case \"implant\":\n        return pf1.config.implantTypes;\n      case \"container\":\n        return null;\n      default:\n        return null;\n    }\n  }\n\n  getData() {\n    const lang = game.settings.get(\"core\", \"language\");\n\n    let collection;\n    if (!this.parent) {\n      if (this.pack) collection = game.packs.get(this.pack);\n      else collection = game.items;\n    }\n\n    // TODO: Visualize folder tree better\n    const folders = Object.fromEntries(\n      (collection?._formatFolderSelectOptions() ?? []).map(({ id, name }) => [id, name])\n    );\n\n    const createData = this.createData;\n\n    let subtypes = this.getSubtypes(createData.type);\n    if (!subtypes && createData.system?.subType !== undefined) delete createData.system.subType;\n    if (subtypes) {\n      subtypes = Object.fromEntries(\n        Object.entries(subtypes).sort(([key0, label0], [key1, label1]) => label0.localeCompare(label1, lang))\n      );\n    }\n\n    const types = Object.fromEntries(\n      Object.entries(CONFIG.Item.typeLabels).sort(([key0, label0], [key1, label1]) =>\n        label0.localeCompare(label1, lang)\n      )\n    );\n    delete types.base; // base is Foundry's unusable default\n\n    return {\n      folders,\n      name: createData.name,\n      defaultName: Item.implementation.defaultName(),\n      folder: createData.folder,\n      hasFolders: Object.keys(folders).length > 0,\n      type: createData.type,\n      types,\n      subtype: createData.system?.subType || null,\n      subtypes,\n    };\n  }\n\n  /**\n   * @param {JQuery} jq jQuery HTML instance\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    this.form.querySelector(\"button.create-document\").addEventListener(\"click\", this._createItem.bind(this));\n  }\n\n  _updateObject(event, formData) {\n    const data = foundry.utils.expandObject(formData);\n\n    this._updateCreationData(data);\n\n    this.render();\n  }\n\n  _updateCreationData(data = {}) {\n    // Fill in default type if missing\n    data.type ||= CONFIG.Item.defaultType || game.documentTypes.Item[1];\n\n    this.createData = foundry.utils.mergeObject(this.initialData, data, { inplace: false });\n    this.createData.system ??= {};\n\n    // Clean up data\n    if (!data.folder && !this.initialData.folder) delete this.createData.folder;\n\n    const subtypes = this.getSubtypes(this.createData.type);\n    if (!subtypes) delete this.createData.system.subType;\n\n    return this.createData;\n  }\n\n  /**\n   * @param {Event} event\n   */\n  async _createItem(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    await this.submit({ preventRender: true });\n\n    let createData = this._updateCreationData(this.createData);\n    createData.name ||= Item.implementation.defaultName();\n    createData = new Item.implementation(createData).toObject();\n\n    const options = {};\n    if (this.pack) options.pack = this.pack;\n    if (this.parent) options.parent = this.parent;\n    options.renderSheet = true;\n\n    const promise = Item.implementation.create(createData, options);\n\n    this.resolve?.(promise);\n    this.close();\n  }\n\n  close(options = {}) {\n    this.resolve?.(null);\n    return super.close(options);\n  }\n\n  /**\n   * Wait for dialog to the resolved.\n   *\n   * @param {object} [data] Initial data to pass to the constructor.\n   * @param {object} [options] Options to pass to the constructor.\n   * @returns {Promise<Item|null>} Created item or null.\n   */\n  static waitPrompt(data, options = {}) {\n    return new Promise((resolve) => {\n      options.resolve = resolve;\n      new this(data, options).render(true, { focus: true });\n    });\n  }\n}\n","import { naturalSort } from \"@utils\";\n\nexport class ItemActionSheet extends FormApplication {\n  constructor(...args) {\n    super(...args);\n\n    this.item.apps[this.appId] = this;\n    this.action.apps[this.appId] = this;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      template: \"systems/pf1/templates/apps/item-action.hbs\",\n      classes: [...options.classes, \"pf1\", \"sheet\", \"action\", \"item-action\"],\n      width: 580,\n      height: 720,\n      closeOnSubmit: false,\n      submitOnClose: true,\n      submitOnChange: true,\n      resizable: true,\n      scrollY: [\".tab\"],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n      ],\n      dragDrop: [\n        {\n          dragSelector: \"li.conditional\",\n          dropSelector: 'div[data-tab=\"conditionals\"]',\n        },\n      ],\n    };\n  }\n\n  get title() {\n    return `${this.item.name}: ${this.action.name}`;\n  }\n\n  get id() {\n    return `item-${this.item.uuid.replaceAll(\".\", \"-\")}-action-${this.action.id}`;\n  }\n\n  /** @type {ItemAction} */\n  get action() {\n    return this.object;\n  }\n\n  /** @type {ItemPF} */\n  get item() {\n    return this.action.item;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.item.actor;\n  }\n\n  async getData() {\n    const action = this.action;\n    const item = this.item;\n    const actor = this.actor;\n\n    const context = {\n      config: pf1.config,\n      editable: this.isEditable,\n      cssClass: this.isEditable ? \"editable\" : \"locked\",\n      user: game.user,\n      action,\n      item,\n      actor,\n      img: action.img,\n      tag: pf1.utils.createTag(action.name), // Tag placeholder\n      damageTypes: pf1.registry.damageTypes.toObject(),\n      rollData: action.getRollData(),\n    };\n\n    context.data = foundry.utils.mergeObject(action.constructor.defaultData, foundry.utils.deepClone(action.data), {\n      inplace: false,\n    });\n\n    // Action Details\n    context.hasAttack = action.hasAttack;\n    context.actionType = context.data.actionType;\n    context.isHealing = context.actionType === \"heal\";\n    context.hasDamage = action.hasDamage;\n    context.isCombatManeuver = action.isCombatManeuver;\n    context.canCrit = action.hasAttack && action.data.ability?.critMult > 1;\n    // Can have crit and non-crit damage, or simply show them if they've been defined.\n    context.hasCritDamage = context.canCrit || context.data.damage?.critParts?.length > 0;\n    context.hasNonCritDamage = context.canCrit || context.data.damage?.nonCritParts?.length > 0;\n\n    context.isCharged = action.isCharged;\n    context.isSelfCharged = action.isSelfCharged;\n    const chargedUsePeriods = new Set([...Object.keys(pf1.config.limitedUsePeriods), \"charges\"]);\n    chargedUsePeriods.delete(\"single\"); // Single is special\n    context.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.limitedUsePeriods.single;\n    context.showMaxChargeFormula = chargedUsePeriods.has(context.data.uses.self.per);\n    if (action.hasRange) {\n      context.canInputRange = [\"ft\", \"mi\", \"spec\"].includes(context.data.range.units);\n      context.canInputMinRange = [\"ft\", \"mi\", \"spec\"].includes(context.data.range.minUnits);\n    }\n\n    context.canInputDuration = ![\"\", \"turn\", \"inst\", \"perm\", \"seeText\"].includes(context.data.duration?.units || \"\");\n\n    // Action Details\n    context.itemName = item.name;\n    context.itemEnh = item.system.enh || 0;\n    context.isSpell = item.type === \"spell\";\n    context.usesSpellPoints = item.spellbook?.spellPoints.useSystem;\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n    context.owned = actor != null;\n    context.parentOwned = actor != null;\n    context.owner = item.isOwner;\n    context.isGM = game.user.isGM;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n    context.activation = action.activation;\n    context.hasActivationType = context.activation.type;\n    context.abilityActivationTypes = context.unchainedActionEconomy\n      ? pf1.config.abilityActivationTypes_unchained\n      : pf1.config.abilityActivationTypes;\n\n    // Add description\n    const description = context.data.description;\n    context.descriptionHTML = description\n      ? await TextEditor.enrichHTML(description, {\n          secrets: context.owner,\n          rollData: context.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // Show additional ranged properties\n    context.showMaxRangeIncrements = context.data.range.units === \"ft\";\n\n    // Prepare attack specific stuff\n    if (item.type === \"attack\") {\n      context.isWeaponAttack = item.system.subType === \"weapon\";\n      context.isNaturalAttack = item.system.subType === \"natural\";\n    }\n\n    context.canUseAmmo = context.isNaturalAttack !== true;\n    context.usesAmmo = !!action.ammoType;\n    context.inheritedAmmoType = item?.system.ammo?.type;\n\n    if (context.usesAmmo) {\n      context.inheritedMisfire = item?.system.ammo?.misfire ?? null;\n    }\n\n    if (context.canUseAmmo) {\n      context.ammoTypes = {\n        none: game.i18n.localize(\"PF1.None\"),\n        \"\": game.i18n.format(\"PF1.InheritAs\", { inherited: pf1.config.ammoTypes[context.inheritedAmmoType] }),\n        ...pf1.config.ammoTypes,\n      };\n      if (!context.inheritedAmmoType) delete context.ammoTypes[\"\"];\n    }\n\n    // Add distance units\n    context.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    if (item.type !== \"spell\") {\n      for (const d of [\"close\", \"medium\", \"long\"]) {\n        delete context.distanceUnits[d];\n      }\n    }\n    // Set whether to show minimum range input\n    context.minRangeAvailable = [\"reach\", \"ft\", \"mi\", \"seeText\"].includes(context.data.range.units);\n\n    // Prepare stuff for actions with conditionals\n    if (context.data.conditionals) {\n      for (const conditional of context.data.conditionals) {\n        for (const modifier of conditional.modifiers) {\n          modifier.targets = action.getConditionalTargets();\n          modifier.subTargets = action.getConditionalSubTargets(modifier.target);\n          modifier.conditionalModifierTypes = action.getConditionalModifierTypes(modifier.target);\n          modifier.conditionalCritical = action.getConditionalCritical(modifier.target);\n        }\n      }\n    }\n\n    // Add materials and addons\n    context.materialCategories = this._prepareMaterialsAndAddons();\n\n    context.materialAddons =\n      this.action.addonMaterial.reduce((obj, v) => {\n        obj[v] = true;\n        return obj;\n      }, {}) ?? {};\n\n    // Can hold (attacks & weapons only and only if they have attack rolls)\n    context.canHold = action.hasAttack;\n    // Inherited held option's name if any\n    context.inheritedHeld =\n      context.canHold && [\"attack\", \"weapon\"].includes(item.type)\n        ? pf1.config.weaponHoldTypes[context.item.system.held]\n        : null;\n\n    // Add alignments\n    context.alignmentTypes = this._prepareAlignments(this.action.alignments);\n    this.alignments = context.alignmentTypes?.values; // Use a deep clone we've already made to track our progress.\n\n    // Ability damage multiplier from held\n    const held = context.rollData.action.held || context.rollData.item.held || \"normal\";\n    context.heldAbilityMultiplier = pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n\n    // Power attack multiplier if inherited\n    context.paMultiplier = action.getPowerAttackMult({ rollData: context.rollData });\n\n    // Prepare attack configuration\n    context.extraAttacksTypes = Object.fromEntries([\n      ...Object.entries(pf1.config.extraAttacks).map(([key, { label }]) => [key, label]),\n    ]);\n\n    context.extraAttacksConfig = { ...pf1.config.extraAttacks[action.data.extraAttacks?.type] };\n    context.extraAttacksConfig.allowCustom = context.extraAttacksConfig.manual || context.extraAttacksConfig.formula;\n\n    return context;\n  }\n\n  _prepareMaterialsAndAddons() {\n    const materialList = {};\n    const addonList = [];\n    naturalSort([...pf1.registry.materialTypes], \"name\").forEach((material) => {\n      if (\n        material.allowed.lightBlade ||\n        material.allowed.oneHandBlade ||\n        material.allowed.twoHandBlade ||\n        material.allowed.rangedWeapon\n      ) {\n        if (!material.addon && !material.basic) {\n          materialList[material.id] = material.name;\n        } else if (material.addon && material.isValidAddon(this.action.normalMaterial)) {\n          addonList.push({ key: material.id, name: material.name });\n        }\n      }\n    });\n\n    return {\n      materials: materialList,\n      addons: addonList,\n    };\n  }\n\n  _prepareAlignments(alignments = {}) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: alignments,\n    };\n  }\n\n  /**\n   * Copy from core DocumentSheet#isEditable\n   */\n  get isEditable() {\n    const parentItem = this.item;\n    let editable = this.options.editable && parentItem.isOwner;\n    if (parentItem.pack) {\n      const pack = game.packs.get(parentItem.pack);\n      if (pack.locked) editable = false;\n    }\n    return editable;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    if (!this.isEditable) return;\n\n    // Modify action image\n    html.find(\"img[data-edit]\").click((ev) => this._onEditImage(ev));\n\n    // Add drop handler to textareas\n    html.find(\"textarea, .card-notes input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Modify attack formula\n    html.find(\".attack-control\").click(this._onAttackControl.bind(this));\n\n    // Modify damage formula\n    html.find(\".damage-control\").click(this._onDamageControl.bind(this));\n    html.find(\".damage-type-visual\").on(\"click\", this._onClickDamageType.bind(this));\n\n    // Note control\n    html.find(\".card-notes .controls a\").click(this._onNoteEntryControl.bind(this));\n\n    // Modify conditionals\n    html.find(\".conditional-control\").click(this._onConditionalControl.bind(this));\n\n    // Handle Alignment tristate checkboxes\n    html.find(\".alignmentCheckbox\").on(\"change\", (event) => {\n      this._onAlignmentChecked(event);\n    });\n\n    const alignmentItems = $(\".alignmentCheckbox.actionCheckbox\").each((index, item) => {\n      const type = $(item).attr(\"data-type\");\n      if (!(this.alignments[type] || this.alignments[type] === false)) {\n        item.indeterminate = true;\n      }\n    });\n  }\n\n  _onDragStart(event) {\n    const elem = event.currentTarget;\n\n    // Drag conditional\n    if (elem.dataset?.conditional) {\n      const conditional = this.action.conditionals.get(elem.dataset?.conditional);\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(conditional.data));\n    }\n  }\n\n  /**\n   * Foundry defauts to isGM check.\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return this.isEditable;\n  }\n\n  /**\n   * Foundry defauts to isGM check.\n   *\n   * @override\n   */\n  _canDragDrop(selector) {\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const data = TextEditor.getDragEventData(event);\n    let type;\n    // Surface-level check for conditional\n    if (data.default != null && typeof data.name === \"string\" && Array.isArray(data.modifiers)) type = \"conditional\";\n\n    const action = this.action;\n    // Handle conditionals\n    if (type === \"conditional\") {\n      // Check targets and other fields for valid values, reset if necessary\n      for (const modifier of data.modifiers) {\n        if (!Object.keys(action.getConditionalTargets()).includes(modifier.target)) modifier.target = \"\";\n        let keys;\n        for (let [k, v] of Object.entries(modifier)) {\n          switch (k) {\n            case \"subTarget\":\n              keys = Object.keys(action.getConditionalSubTargets(modifier.target));\n              break;\n            case \"type\":\n              keys = Object.keys(action.getConditionalModifierTypes(modifier.target));\n              break;\n            case \"critical\":\n              keys = Object.keys(action.getConditionalCritical(modifier.target));\n              break;\n          }\n          if (!keys?.includes(v)) v = keys?.[0] ?? \"\";\n        }\n      }\n\n      // Renew conditional ID\n      data._id = foundry.utils.randomID(16);\n\n      // Append conditional\n      const conditionals = foundry.utils.deepClone(action.data.conditionals || []);\n      conditionals.push(data);\n      await this.action.update({ conditionals });\n    }\n  }\n\n  async _onNoteEntryControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const key = a.dataset.name;\n\n    switch (a.dataset.action) {\n      // Add\n      case \"add\": {\n        const notes = foundry.utils.deepClone(foundry.utils.getProperty(this.action.data, key) ?? []);\n        notes.push(\"\");\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      // Delete\n      case \"delete\": {\n        const index = Number(a.dataset.index);\n        const notes = foundry.utils.deepClone(foundry.utils.getProperty(this.action.data, key));\n        notes.splice(index, 1);\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  async _onConditionalControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    await this._onSubmit(event, { preventRender: true }); // Submit any unsaved changes\n\n    // Add new conditional\n    if (a.classList.contains(\"add-conditional\")) {\n      return pf1.components.ItemConditional.create([{}], { parent: this.action });\n    }\n    // Remove a conditional\n    else if (a.classList.contains(\"delete-conditional\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      return conditional.delete();\n    }\n    // Add a new conditional modifier\n    else if (a.classList.contains(\"add-conditional-modifier\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      return pf1.components.ItemConditionalModifier.create([{}], { parent: conditional });\n    }\n    // Remove a conditional modifier\n    else if (a.classList.contains(\"delete-conditional-modifier\")) {\n      const li = a.closest(\".conditional-modifier\");\n      const conditional = this.action.conditionals.get(li.dataset.conditional);\n      const modifier = conditional.modifiers.get(li.dataset.modifier);\n      return modifier.delete();\n    }\n  }\n\n  /**\n   * Add or remove a damage part from the damage formula\n   *\n   * @param {Event} event     The original click event\n   * @returns {Promise}\n   * @private\n   */\n  async _onDamageControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const list = a.closest(\".damage\");\n    const path = list.dataset.key || \"damage.parts\";\n    const k2 = path.split(\".\").slice(0, -1).join(\".\");\n    const k3 = path.split(\".\").slice(-1).join(\".\");\n\n    // Add new damage component\n    if (a.classList.contains(\"add-damage\")) {\n      // Get initial data\n      const damageTypeBase = pf1.components.ItemAction.defaultDamageType;\n      const initialData = {\n        formula: \"\",\n        type: damageTypeBase,\n      };\n\n      // Add data\n      const damage = foundry.utils.getProperty(this.action.data, k2);\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      damageParts.push(initialData);\n      const updateData = { [path]: damageParts };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a damage component\n    else if (a.classList.contains(\"delete-damage\")) {\n      const li = a.closest(\".damage-part\");\n      const damage = foundry.utils.deepClone(foundry.utils.getProperty(this.action.data, k2));\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      if (damageParts.length) {\n        damageParts.splice(Number(li.dataset.damagePart), 1);\n        const updateData = { [path]: damageParts };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  async _onClickDamageType(event) {\n    event.preventDefault();\n    const clickedElement = event.currentTarget;\n\n    // Check for normal damage part\n    const damageIndex = clickedElement.closest(\".damage-part\")?.dataset.damagePart;\n    const damagePart = clickedElement.closest(\".damage\")?.dataset.key;\n    if (damageIndex != null && damagePart != null) {\n      const app = new pf1.applications.DamageTypeSelector(\n        this.action,\n        `${damagePart}.${damageIndex}.type`,\n        foundry.utils.getProperty(this.action.data, damagePart)[damageIndex].type\n      );\n      return app.render(true);\n    }\n\n    // Check for conditional\n    const conditionalElement = clickedElement.closest(\".conditional\");\n    const modifierElement = clickedElement.closest(\".conditional-modifier\");\n    if (conditionalElement && modifierElement) {\n      const conditional = this.action.conditionals.get(conditionalElement.dataset.conditional);\n      const modifier = conditional.modifiers.get(modifierElement.dataset.modifier);\n      const app = new pf1.applications.DamageTypeSelector(modifier, \"damageType\", modifier.data.damageType);\n      return app.render(true);\n    }\n  }\n\n  async _onAttackControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const manualExtraAttacks = foundry.utils.deepClone(this.action.data.extraAttacks?.manual ?? []);\n\n    // Add new attack component\n    if (a.classList.contains(\"add-attack\")) {\n      manualExtraAttacks.push({ formula: \"\", name: \"\" });\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove an attack component\n    else if (a.classList.contains(\"delete-attack\")) {\n      const li = a.closest(\".attack-part\");\n      manualExtraAttacks.splice(Number(li.dataset.attackPart), 1);\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Clone of item/actor sheet image editor callback.\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onEditImage(event) {\n    const attr = event.currentTarget.dataset.edit;\n    const current = foundry.utils.getProperty(this.action.data, attr);\n    const fp = new FilePicker({\n      type: \"image\",\n      current,\n      callback: (path) => this.action.update({ img: path }),\n      top: this.position.top + 40,\n      left: this.position.left + 10,\n    });\n    fp.browse();\n  }\n\n  async _onTextAreaDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n\n    // Insert link\n    if (link) {\n      elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n      return this._onSubmit(event); // Save\n    }\n  }\n\n  async _onAlignmentChecked(event) {\n    const el = event.target;\n    const previousValue = this.alignments[el.dataset.type];\n\n    // Move from one phase to the next in our tristate checkbox\n    el.checked = previousValue === false;\n    el.indeterminate = previousValue === true;\n\n    if (el.checked) {\n      this.alignments[el.dataset.type] = true;\n    } else if (el.indeterminate) {\n      this.alignments[el.dataset.type] = null;\n    } else {\n      this.alignments[el.dataset.type] = false;\n    }\n  }\n\n  async _updateObject(event, formData) {\n    // Handle conditionals array\n    const conditionalData = foundry.utils.deepClone(this.action.data.conditionals);\n    Object.entries(formData)\n      .filter((o) => o[0].startsWith(\"conditionals\"))\n      .forEach((o) => {\n        let reResult;\n        // Handle conditional modifier\n        if ((reResult = o[0].match(/^conditionals.([0-9]+).modifiers.([0-9]+).(.+)$/))) {\n          const conditionalIdx = parseInt(reResult[1]);\n          const modifierIdx = parseInt(reResult[2]);\n          const conditional =\n            conditionalData[conditionalIdx] ?? foundry.utils.deepClone(this.action.data.conditionals[conditionalIdx]);\n          const path = reResult[3];\n          foundry.utils.setProperty(conditional.modifiers[modifierIdx], path, o[1]);\n        }\n        // Handle conditional\n        else if ((reResult = o[0].match(/^conditionals.([0-9]+).(.+)$/))) {\n          const conditionalIdx = parseInt(reResult[1]);\n          const conditional =\n            conditionalData[conditionalIdx] ?? foundry.utils.deepClone(this.action.data.conditionals[conditionalIdx]);\n          const path = reResult[2];\n          foundry.utils.setProperty(conditional, path, o[1]);\n        }\n      });\n    formData[\"conditionals\"] = conditionalData;\n\n    formData = foundry.utils.expandObject(formData);\n\n    // Adjust Material Addons object to array\n    const material = formData.material;\n    if (material?.addon) {\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    if (formData.alignments) {\n      // Adjust Alignment Types (this is necessary to handle null values for inheritance)\n      for (const [key, value] of Object.entries(this.alignments)) {\n        formData.alignments[key] = value;\n      }\n    }\n\n    // Uniform style for\n    if (formData.measureTemplate) {\n      if (formData.measureTemplate.color) {\n        const c = Color.fromString(formData.measureTemplate.color);\n        if (Number.isFinite(Number(c))) formData.measureTemplate.color = c.toString();\n        else console.warn(\"Invalid color provided to template\", formData.measureTemplate.color, this.action);\n      }\n    }\n\n    // Do not add image if it's same as parent item\n    if (formData.img === this.item?.img) delete formData.img;\n\n    return this.action.update(formData);\n  }\n\n  async close(options) {\n    delete this.item.apps[this.appId];\n    delete this.action.apps[this.appId];\n    if (this.action._sheet === this) this.action._sheet = null;\n    return super.close(options);\n  }\n}\n","import * as baseFilter from \"./base.mjs\";\nimport { naturalSort } from \"@utils\";\nimport fuzzysort from \"fuzzysort\";\n\nexport class CheckboxFilter extends baseFilter.BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\";\n\n  /**\n   * The minimum number of choices that must be present before the filter will show a search box.\n   * Booleans can be used to override this check.\n   *\n   * @type {number | boolean}\n   */\n  static MIN_SEARCH_CHOICES = 10;\n\n  /**\n   * The boolean operator used to combine choices of this filter.\n   * If \"OR\", an entry will be included if at least one active choice matches.\n   * If \"AND\", an entry will only be included if all active choices match.\n   *\n   * @type {BooleanOperator}\n   */\n  booleanOperator = BOOLEAN_OPERATOR.NONE;\n\n  /**\n   * A string used to determine which choices are shown.\n   *\n   * @type {string}\n   * @private\n   */\n  _choiceQuery = \"\";\n\n  constructor(...args) {\n    super(...args);\n    this._debouncedFilterChoices = foundry.utils.debounce(this._onCustomSearchFilter, 100);\n  }\n\n  /**\n   * Generate a {@link Collection} of {@link FilterChoice}s from a {@link CONFIG} object.\n   *\n   * @param {Record<string, string> | Record<string, Record<string, string>>} configObject - The object to generate choices from; can be a Record<string, string> or\n   * @param {object} [options={}] - Options determining how the choices are generated.\n   * @param {string} [options.labelKey=\"_label\"] - The key to use to determine the label if the configObject is a Record<string, object>; will be ignored if the configObject is a Record<string, string>.\n   * @param {boolean} [options.innerSet=false] - Whether choices should be generated from direct properties of the configObject, or from the properties of the inner objects.\n   * @returns {Collection<FilterChoice>} - A Collection of {@link FilterChoice}s\n   */\n  static getChoicesFromConfig(configObject, { labelKey = \"_label\", innerSet = false } = {}) {\n    /** @type {Collection<FilterChoice>} */\n    const choices = new foundry.utils.Collection();\n    for (const [key, value] of Object.entries(configObject)) {\n      if (innerSet) {\n        for (const [innerKey, innerValue] of Object.entries(value)) {\n          if (innerKey === labelKey) continue;\n          choices.set(innerKey, { key: innerKey, label: innerValue });\n        }\n      } else {\n        if (typeof value === \"object\" && value[labelKey]) {\n          choices.set(key, { key, label: value[labelKey] });\n        } else if (typeof value === \"string\") {\n          choices.set(key, { key, label: value });\n        }\n      }\n    }\n    return choices;\n  }\n\n  /**\n   * Whether this filter provides controls in addition to its choices.\n   *\n   * @type {boolean}\n   */\n  get hasControls() {\n    return this.booleanOperator !== BOOLEAN_OPERATOR.NONE || this.choices.size >= this.constructor.MIN_SEARCH_CHOICES;\n  }\n\n  get hasSearch() {\n    if (this.choices.size >= this.constructor.MIN_SEARCH_CHOICES) return true;\n    return this.constructor.MIN_SEARCH_CHOICES ?? false;\n  }\n\n  /** @inheritDoc */\n  setup() {\n    super.setup();\n    this.prepareBooleanOperator();\n  }\n\n  /**\n   * Prepare the boolean operator for this filter.\n   */\n  prepareBooleanOperator() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    // Find the first entry that has data in the field and use its data\n    let fieldData;\n    entries.find((entry) => {\n      return (fieldData = foundry.utils.getProperty(entry, this.constructor.indexField));\n    });\n    if ([\"Array\", \"Object\"].includes(foundry.utils.getType(fieldData))) this.booleanOperator = BOOLEAN_OPERATOR.AND;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const observedValues = new Set(\n      entries.flatMap((entry) => {\n        const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n        if (Array.isArray(data)) {\n          if (data.length === 0) return [];\n          else return data;\n        }\n        if (typeof data === \"object\" && data !== null) {\n          const keys = Object.keys(data);\n          if (keys.length === 0) return [];\n          else return keys;\n        }\n        if (data == null) return [];\n        if (typeof data === \"string\" && data.trim() === \"\") return [];\n        return [data];\n      })\n    );\n    this.choices = new foundry.utils.Collection(\n      naturalSort(\n        [...observedValues].map((value) => ({ key: value, label: game.i18n.localize(`${value}`) })),\n        \"label\"\n      ).map((choice) => [`${choice.key}`, choice])\n    );\n  }\n\n  /**\n   * Toggle the active state of a choice, or set it to a specific state.\n   *\n   * @param {string} key - The key of the choice to toggle\n   * @param {boolean | null} [state=null] - The state to set the choice to. If null, the choice will be toggled.\n   * @returns {boolean} - The new state of the choice\n   * @throws {Error} - If the choice does not exist in this filter\n   */\n  toggleChoice(key, state = null) {\n    const choice = this.choices?.get(key);\n    if (!choice) throw new Error(`Choice ${key} does not exist in this filter.`);\n    if (state === null) choice.active = !choice.active;\n    else choice.active = state;\n    return choice.active;\n  }\n\n  /** @inheritDoc */\n  reset() {\n    super.reset();\n    this.prepareBooleanOperator();\n    this._choiceQuery = \"\";\n    this.choices?.forEach((choice) => (choice.active = false));\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const activeChoices = this.choices.filter((choice) => choice.active);\n    // If no choices are active, this filter applies no conditions\n    if (activeChoices.length === 0) return true;\n\n    // If the filter is active, but the entry does not match the filter's types, the entry cannot match\n    const types = this.constructor.handledTypes;\n    if (types.size && !types.has(entry.type)) return false;\n\n    /** @type {string | string[] | Record<string, boolean>} */\n    const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    if (Array.isArray(data)) {\n      return activeChoices[testMethod]((choice) => data.includes(choice.key));\n    } else if (typeof data === \"object\" && data !== null) {\n      return activeChoices[testMethod]((choice) => choice.key in data && data[choice.key] !== false);\n    } else {\n      return activeChoices.some((choice) => {\n        return data == choice.key;\n      });\n    }\n  }\n\n  /** @inheritDoc */\n  getData() {\n    return {\n      ...super.getData(),\n      hasControls: this.hasControls,\n      boolean: this.booleanOperator,\n      hasSearch: this.choices.size > this.constructor.MIN_SEARCH_CHOICES,\n      choiceQuery: this._choiceQuery,\n    };\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    this._onCustomSearchFilter(null, html);\n    html.querySelector(\"button.boolean\")?.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      if (this.booleanOperator === BOOLEAN_OPERATOR.OR) this.booleanOperator = BOOLEAN_OPERATOR.AND;\n      else this.booleanOperator = BOOLEAN_OPERATOR.OR;\n      this.compendiumBrowser.render();\n    });\n    html\n      .querySelector(\"input[name=choice-query]\")\n      ?.addEventListener(\"input\", (event) => this._debouncedFilterChoices(event, html));\n    html.addEventListener(\"change\", (event) => {\n      if (event.target.type === \"checkbox\") {\n        const checkbox = event.target;\n        const choiceKey = /filter.\\w*.choice.(?<choice>.*)/.exec(checkbox.name)?.groups?.choice;\n        if (choiceKey) {\n          this.toggleChoice(choiceKey, checkbox.checked);\n          this.compendiumBrowser.render();\n        }\n      }\n    });\n  }\n\n  /**\n   * Filter this filter's choices based on a string query.\n   *\n   * @protected\n   * @param {Event} event - The originating input event\n   * @param {HTMLElement} html - The rendered HTML of this filter\n   */\n  _onCustomSearchFilter(event, html) {\n    if (event) {\n      event.preventDefault();\n      this._choiceQuery = SearchFilter.cleanQuery(event.target.value);\n    }\n\n    const matchingChoices = fuzzysort\n      .go(this._choiceQuery, this.choices.contents, {\n        key: \"label\",\n        threshold: -10000,\n      })\n      .map((result) => `${result.obj.key}`);\n    const choiceSet = new Set(matchingChoices);\n\n    for (const li of html.querySelectorAll(\"li.filter-choice\")) {\n      const choiceKey = li.dataset.choice;\n      if (choiceKey) {\n        if (choiceSet.has(choiceKey) || !this._choiceQuery) li.classList.remove(\"hidden\");\n        else li.classList.add(\"hidden\");\n      }\n    }\n    if (this._choiceQuery && matchingChoices.length === 0)\n      html.querySelector(\"span.no-choices\")?.classList.remove(\"hidden\");\n    else html.querySelector(\"span.no-choices\")?.classList.add(\"hidden\");\n  }\n}\n\n/** @typedef {typeof BOOLEAN_OPERATOR[keyof typeof BOOLEAN_OPERATOR]} BooleanOperator */\n/**\n * States for the boolean operator of a filter.\n */\nexport const BOOLEAN_OPERATOR = /** @type {const} */ ({\n  AND: \"AND\",\n  OR: \"OR\",\n  NONE: false,\n});\n","import { BaseFilter } from \"./base.mjs\";\n\n/**\n * A filter that allows the user to input a minimum and maximum value.\n */\nexport class NumberRangeFilter extends BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/minmax-filter.hbs\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    const inputs = [\n      { key: \"min\", label: \"PF1.Minimum\", placeholder: \"0\" },\n      { key: \"max\", label: \"PF1.Maximum\", placeholder: \"∞\" },\n    ];\n    this.choices = new foundry.utils.Collection(\n      inputs.map((input) => [input.key, { ...input, label: game.i18n.localize(input.label) }])\n    );\n  }\n\n  /** @inheritDoc */\n  reset() {\n    this.choices.forEach((choice) => {\n      choice.value = null;\n      choice.active = false;\n    });\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    html.addEventListener(\"change\", (event) => {\n      const input = event.target;\n      const value = input.value;\n      const key = input.name.split(\"choice.\").pop();\n      const choice = this.choices.get(key);\n      if (choice) {\n        choice.value = Number(value) || null;\n        choice.active = Boolean(value);\n      }\n      this.compendiumBrowser.render();\n    });\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField) ?? 0;\n    const min = this.choices.get(\"min\").value ?? 0;\n    const max = this.choices.get(\"max\").value ?? Number.POSITIVE_INFINITY;\n    if (value < min) return false;\n    if (value > max) return false;\n    return true;\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { NumberRangeFilter } from \"./number-range.mjs\";\n\nexport class ItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static indexField = \"type\";\n  static types = [\"weapon\", \"equipment\", \"consumable\", \"container\", \"loot\", \"implant\"];\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection(\n      [\n        { key: \"weapon\", label: game.i18n.localize(\"TYPES.Item.weapon\") },\n        { key: \"equipment\", label: game.i18n.localize(\"TYPES.Item.equipment\") },\n        { key: \"consumable\", label: game.i18n.localize(\"TYPES.Item.consumable\") },\n        { key: \"container\", label: game.i18n.localize(\"TYPES.Item.container\") },\n        { key: \"loot\", label: game.i18n.localize(\"PF1.Misc\") },\n        { key: \"implant\", label: game.i18n.localize(\"TYPES.Item.implant\") },\n      ].map((choice) => [choice.key, choice])\n    );\n  }\n}\n\nexport class WeaponTypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponType\";\n  static indexField = \"system.subType\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes);\n  }\n}\n\nexport class WeaponSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponSubtype\";\n  static indexField = \"system.weaponSubtype\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes, { innerSet: true });\n  }\n}\n\nexport class WeaponPropertyFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponProperties\";\n  static indexField = \"system.properties\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponProperties);\n  }\n}\n\nexport class WeaponGroupFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponGroups\";\n  static indexField = \"system.weaponGroups.value\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponGroups);\n  }\n}\n\nexport class EquipmentTypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentType\";\n  static indexField = \"system.subType\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes);\n  }\n}\n\nexport class EquipmentSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentSubtype\";\n  static indexField = \"system.equipmentSubtype\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes, { innerSet: true });\n  }\n}\n\nexport class ItemSlotFilter extends CheckboxFilter {\n  static label = \"PF1.Slot\";\n  static indexField = \"system.slot\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentSlots, { innerSet: true });\n  }\n}\n\nexport class ConsumableTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ConsumableType\";\n  static indexField = \"system.subType\";\n  static type = \"consumable\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.consumableTypes);\n  }\n}\n\nexport class MiscItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Misc\";\n  static indexField = \"system.subType\";\n  static type = \"loot\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.lootTypes);\n  }\n}\n\nexport class ItemPriceFilter extends NumberRangeFilter {\n  static label = \"PF1.Price\";\n  static indexField = \"system.price\";\n}\n\nexport class ItemCasterLevelFilter extends NumberRangeFilter {\n  static label = \"PF1.CasterLevel\";\n  static indexField = \"system.cl\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { naturalSort } from \"@utils\";\n\nexport class PackFilter extends CheckboxFilter {\n  static label = \"PF1.Compendium\";\n  static indexField = \"__pack\";\n\n  /** @override */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const usedPacks = this.compendiumBrowser?.packs\n      ?.filter((pack) => entries.some((entry) => entry.__pack === pack.collection))\n      .map((pack) => ({ key: pack.collection, label: pack.metadata.label }));\n    const orderedPacks = naturalSort(usedPacks, \"label\").map((pack) => [pack.key, pack]);\n    this.choices = new foundry.utils.Collection(orderedPacks);\n  }\n}\n\nexport class TagFilter extends CheckboxFilter {\n  static label = \"PF1.Tags\";\n  static indexField = \"system.tags\";\n}\n","import { BOOLEAN_OPERATOR, CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class SpellSchoolFilter extends CheckboxFilter {\n  static label = \"PF1.SpellSchool\";\n  static indexField = \"system.school\";\n  static type = \"spell\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.spellSchools);\n  }\n}\n\nexport class SpellSubSchoolFilter extends CheckboxFilter {\n  static label = \"PF1.SubSchool\";\n  static indexField = \"system.subschool\";\n  static type = \"spell\";\n}\n\nexport class SpellDescriptorFilter extends CheckboxFilter {\n  static label = \"PF1.Descriptor\";\n  static indexField = \"system.descriptors\";\n  static type = \"spell\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    super.prepareChoices();\n    const choices = this.choices;\n\n    // this changes the value (the UI visible choice) to the translation from the config for pre-defined descriptors\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.spellDescriptors);\n    configChoices.forEach((choice) => {\n      choices.set(choice.key, choice);\n    });\n    this.choices = choices;\n  }\n}\n\nexport class SpellLearnedByClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static indexField = \"system.learnedAt.class\";\n  static type = \"spell\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    super.prepareChoices();\n    const choices = this.choices;\n\n    // Display human readable name instead of the class identifier\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.classNames);\n    for (const choice of configChoices) {\n      if (choices.has(choice.key)) {\n        choices.set(choice.key, choice);\n      }\n    }\n\n    this.choices = choices;\n  }\n}\n\nexport class SpellLearnedByDomainFilter extends CheckboxFilter {\n  static label = \"PF1.Domain\";\n  static indexField = \"system.learnedAt.domain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedBySubdomainFilter extends CheckboxFilter {\n  static label = \"PF1.SubDomain\";\n  static indexField = \"system.learnedAt.subDomain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedByBloodlineFilter extends CheckboxFilter {\n  static label = \"PF1.Bloodline\";\n  static indexField = \"system.learnedAt.bloodline\";\n  static type = \"spell\";\n}\n\nexport class SpellLevelFilter extends CheckboxFilter {\n  static label = \"PF1.SpellLevel\";\n  static indexField = \"system.level\";\n  static type = \"spell\";\n\n  /** @override */\n  prepareChoices() {\n    const choices = this.constructor.getChoicesFromConfig(pf1.config.spellLevels);\n    choices.forEach((choice) => {\n      choice.key = Number(choice.key);\n    });\n    this.choices = choices;\n  }\n\n  /** @override */\n  applyFilter(entry) {\n    const activeLearnedAtFilters = this.compendiumBrowser.filters.filter(\n      (filter) => filter.active && filter.constructor.indexField.startsWith(\"system.learnedAt.\")\n    );\n\n    // Fall back to checking whether _anything_ can learn the spell at that level\n    if (activeLearnedAtFilters.length === 0) return super.applyFilter(entry);\n\n    // Otherwise, check whether active filters match the spell's learnedAt\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    const activeLevelChoices = this.choices.filter((choice) => choice.active);\n\n    // Require either any of the active filters to match if OR, or all filters to return a match if AND\n    return activeLearnedAtFilters[testMethod]((filter) => {\n      /** @type {Record<string, number>} */\n      const learnedAt = foundry.utils.getProperty(entry, filter.constructor.indexField) ?? {};\n      const activeLearnedAtChoices = filter.choices.filter((choice) => choice.active);\n      // Require either one of the classes etc. to match if OR, or all classes etc. to match if AND\n      return activeLearnedAtChoices[testMethod]((learnedAtChoice) => {\n        const learnedAtLevel = learnedAt[learnedAtChoice.key];\n        return activeLevelChoices[testMethod]((levelChoice) => levelChoice.key === learnedAtLevel);\n      });\n    });\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class FeatTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"feat\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.featTypes);\n  }\n}\n\nexport class FeatClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static type = \"feat\";\n  static indexField = \"system.associations.classes\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class ClassTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ClassType\";\n  static type = \"class\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classTypes);\n  }\n}\n\nexport class ClassHitDieFilter extends CheckboxFilter {\n  static label = \"PF1.HitDie\";\n  static type = \"class\";\n  static indexField = \"system.hd\";\n}\n\nexport class ClassBaseAttackBonusFilter extends CheckboxFilter {\n  static label = \"PF1.BAB\";\n  static type = \"class\";\n  static indexField = \"system.bab\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classBAB);\n  }\n}\n\nexport class ClassSkillPointsFilter extends CheckboxFilter {\n  static label = \"PF1.SkillsPerLevel\";\n  static type = \"class\";\n  static indexField = \"system.skillsPerLevel\";\n}\n\nclass ClassSavingThrowFilter extends CheckboxFilter {\n  static type = \"class\";\n  static savingThrow = \"\";\n  static get label() {\n    return pf1.config.savingThrows[this.savingThrow] ?? \"\";\n  }\n  static get indexField() {\n    return `system.savingThrows.${this.savingThrow}.value`;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classSavingThrows);\n    this.choices.set(\"none\", { label: game.i18n.localize(\"PF1.None\"), key: \"none\" });\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const result = super.applyFilter(entry);\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField);\n    const noneFilterResult = this.choices.get(\"none\").active && value === \"\";\n    return result || noneFilterResult;\n  }\n}\n\nexport class ClassFortitudeFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"fort\";\n}\n\nexport class ClassReflexFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"ref\";\n}\n\nexport class ClassWillFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"will\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class CreatureTypeFilter extends CheckboxFilter {\n  static label = \"PF1.CreatureType\";\n  static type = \"race\";\n  static indexField = \"system.creatureType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.creatureTypes);\n  }\n}\n\nexport class CreatureSubTypeFilter extends CheckboxFilter {\n  static label = \"PF1.RaceSubtypePlural\";\n  static type = \"race\";\n  static indexField = \"system.subTypes\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class BuffTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"buff\";\n  static indexField = \"system.subType\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.buffTypes);\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { CR } from \"@utils\";\n\nexport class CreatureCRFilter extends CheckboxFilter {\n  static label = \"PF1.ChallengeRatingShort\";\n  static indexField = \"system.details.cr.base\";\n  static types = [\"character\", \"npc\"];\n\n  /** @override */\n  prepareChoices() {\n    super.prepareChoices();\n    const choices = this.choices.contents\n      .map((choice) => Number(choice.key))\n      .sort((a, b) => a - b)\n      .map((cr) => {\n        const label = CR.fromNumber(cr);\n        return [cr.toString(), { key: cr, label: label }];\n      });\n    this.choices = new foundry.utils.Collection(choices);\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as buffFilters from \"./filters/buff.mjs\";\n\nexport class BuffBrowser extends CompendiumBrowser {\n  static documentName = \"Item\";\n  static typeName = \"PF1.Buffs\";\n  static filterClasses = [commonFilters.PackFilter, buffFilters.BuffTypeFilter, commonFilters.TagFilter];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as classFilters from \"./filters/class.mjs\";\n\nexport class ClassBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Classes\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    classFilters.ClassTypeFilter,\n    classFilters.ClassHitDieFilter,\n    classFilters.ClassBaseAttackBonusFilter,\n    classFilters.ClassSkillPointsFilter,\n    classFilters.ClassFortitudeFilter,\n    classFilters.ClassReflexFilter,\n    classFilters.ClassWillFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport { PackFilter } from \"./filters/common.mjs\";\nimport * as creatureFilters from \"./filters/creature.mjs\";\n\nexport class CreatureBrowser extends CompendiumBrowser {\n  static documentName = \"Actor\";\n  static typeName = \"PF1.Creatures\";\n  static filterClasses = [PackFilter, creatureFilters.CreatureCRFilter];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as featFilter from \"./filters/feat.mjs\";\n\nexport class FeatBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Feats\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    featFilter.FeatTypeFilter,\n    featFilter.FeatClassFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as itemFilters from \"./filters/item.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\n\nexport class ItemBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Items\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    itemFilters.ItemTypeFilter,\n    itemFilters.WeaponTypeFilter,\n    itemFilters.WeaponSubtypeFilter,\n    itemFilters.WeaponPropertyFilter,\n    itemFilters.WeaponGroupFilter,\n    itemFilters.EquipmentTypeFilter,\n    itemFilters.EquipmentSubtypeFilter,\n    itemFilters.ItemSlotFilter,\n    itemFilters.ConsumableTypeFilter,\n    itemFilters.MiscItemTypeFilter,\n    itemFilters.ItemPriceFilter,\n    itemFilters.ItemCasterLevelFilter,\n    commonFilters.TagFilter,\n  ];\n\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n\n    // Remove equipmentSubtype if the item subtype should not have one\n    const { subType, equipmentSubtype } = result.system;\n    if (subType) {\n      const equipmentSubtypes = Object.keys(pf1.config.equipmentTypes[subType] ?? {}).filter((o) => !o.startsWith(\"_\"));\n      if (equipmentSubtypes.length === 0) {\n        // Clear equipmentSubtype if subType has no equipmentSubtypes\n        result.system.equipmentSubtype = \"\";\n      } else if (!equipmentSubtypes.includes(equipmentSubtype)) {\n        // Default to first equipmentSubtype if current equipmentSubtype is invalid\n        result.system.equipmentSubtype = equipmentSubtypes.at(0);\n      }\n    }\n\n    return result;\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as raceFilters from \"./filters/race.mjs\";\n\nexport class RaceBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Races\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    raceFilters.CreatureTypeFilter,\n    raceFilters.CreatureSubTypeFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as spellFilter from \"./filters/spell.mjs\";\n\nexport class SpellBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Spells\";\n  static types = [\"spell\"];\n  static filterClasses = [\n    commonFilters.PackFilter,\n    spellFilter.SpellSchoolFilter,\n    spellFilter.SpellSubSchoolFilter,\n    spellFilter.SpellDescriptorFilter,\n    spellFilter.SpellLearnedByClassFilter,\n    spellFilter.SpellLearnedByDomainFilter,\n    spellFilter.SpellLearnedBySubdomainFilter,\n    spellFilter.SpellLearnedByBloodlineFilter,\n    spellFilter.SpellLevelFilter,\n    commonFilters.TagFilter,\n  ];\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n    // HACK: This transforms the string into an array.\n    // Tt's completely hardcoded for English; should be replaced with proper AI word recognition :)\n    {\n      result.system.subschool =\n        entry.system.subschool\n          ?.split(/,|\\bor\\b/)\n          .map((type) => {\n            /** @type {string} */\n            let typeString = type.trim();\n            if (typeString.includes(\"see text\")) return \"see text\";\n            if (typeString.startsWith(\"or\")) typeString = typeString.replace(\"or\").trim();\n            return typeString;\n          })\n          .filter((typeString) => typeString.length) ?? [];\n    }\n\n    {\n      const value = entry.system.descriptors?.value ?? [];\n      const custom = (entry.system.descriptors?.custom ?? [])\n        .flatMap((c) =>\n          c?.split(/,|\\bor\\b/).map((type) => {\n            /** @type {string} */\n            let typeString = type.trim();\n            if (typeString.includes(\"see text\")) return \"see text\";\n            if (typeString.startsWith(\"or\")) typeString = typeString.replace(\"or\").trim();\n            return typeString;\n          })\n        )\n        .filter((typeString) => typeString?.length);\n      const values = [...value, ...custom].map((descriptor) => {\n        const entries = Object.entries(pf1.config.spellDescriptors);\n        const match = entries.find(([k, v]) => k === descriptor || v === descriptor);\n        return match?.[0] ?? descriptor;\n      });\n      result.system.descriptors = [...new Set(values)];\n    }\n\n    /** @type {Record<string, Record<string, number>>} */\n    const learnedAtData = entry.system.learnedAt ?? {};\n    const learnedAtLevels = Object.values(learnedAtData)\n      .map((learnedAtSource) => Object.values(learnedAtSource))\n      .flat();\n    if (entry.system.level) learnedAtLevels.push(entry.system.level);\n    // NOTE: This results in `level` being a number[] instead of a number like in the source data.\n    result.system.level = [...new Set(learnedAtLevels)];\n\n    return result;\n  }\n}\n","import { getSkipActionPrompt } from \"../documents/settings.mjs\";\n\nexport class ActionSelector extends Application {\n  /**\n   * @param {ItemPF} item - The item for which to choose an attack\n   * @param {object} [options={}] - Application options\n   * @param {object} [useOptions={}] - Use options\n   */\n  constructor(item, options = {}, useOptions = {}) {\n    super(options);\n\n    this.useOptions = useOptions;\n    this.item = item;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      template: \"systems/pf1/templates/apps/action-select.hbs\",\n      classes: [...options.classes, \"pf1\", \"action-selector\"],\n      width: 400,\n    };\n  }\n\n  get title() {\n    return game.i18n.format(\"PF1.Application.ActionSelector.Title\", {\n      actor: this.item.actor.name ?? \"\",\n      item: this.item.name,\n    });\n  }\n\n  async getData() {\n    const result = await super.getData();\n\n    result.item = this.item.toObject();\n    result.actions = this.item.actions;\n\n    return result;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".action\").on(\"click\", this._onClickAction.bind(this));\n  }\n\n  _onClickAction(event) {\n    event.preventDefault();\n\n    const actionId = event.currentTarget.dataset?.action;\n    const result = this.item.use({ ...this.useOptions, actionId, skipDialog: getSkipActionPrompt() });\n    this.resolve?.(result);\n    this.close();\n  }\n\n  close(...args) {\n    this.resolve?.();\n    super.close(...args);\n  }\n\n  /**\n   * @param {ItemPF} item\n   * @param {object} options\n   * @param {object} renderOptions - Options passed to application rendering\n   * @returns {Promise<ChatMessage|object|undefined>} - Result of ItemPF.use() for selected action\n   */\n  static async open(item, options = {}, renderOptions = {}) {\n    return new Promise((resolve) => {\n      const selector = new this(item, undefined, options);\n      selector.resolve = resolve;\n      selector.render(true, { focus: true, ...renderOptions });\n    });\n  }\n}\n","import { ActionUse, ActionUseAttack } from \"../action-use/action-use.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\nexport class AttackDialog extends Application {\n  /**\n   * @param {pf1.actionUse.ActionUse} actionUse\n   * @param {object} appOptions\n   */\n  constructor(actionUse, appOptions = {}) {\n    super(appOptions);\n\n    this.actionUse = actionUse;\n    this.object = actionUse.action;\n\n    const action = actionUse.action;\n    const item = actionUse.item;\n    const shared = actionUse.shared;\n    this.shared = shared;\n\n    this.useOptions = shared.useOptions ?? {};\n\n    this.rollData = shared.rollData;\n\n    this.initAmmoUsage();\n    this.initAttacks();\n\n    this.base = {\n      cl: this.rollData.cl ?? 0,\n      sl: this.rollData.sl ?? 0,\n    };\n\n    const isNaturalAttack = action.item.subType === \"natural\",\n      isPrimaryAttack = isNaturalAttack ? action.data.naturalAttack.primaryAttack !== false : true;\n\n    const useOptions = this.useOptions;\n\n    this.flags = {\n      \"power-attack\": useOptions.powerAttack ?? false,\n      \"primary-attack\": useOptions.primaryAttack ?? isPrimaryAttack,\n      \"cl-check\": useOptions.clCheck ?? item?.system.clCheck === true,\n      \"measure-template\": useOptions.measureTemplate ?? true,\n      \"haste-attack\": useOptions.haste,\n      manyshot: useOptions.manyshot,\n      \"rapid-shot\": useOptions.rapidShot,\n    };\n\n    let damageMult = this.damageMult;\n    if (useOptions.abilityMult != null) damageMult = useOptions.abilityMult;\n\n    this.attributes = {\n      d20: this.rollData.d20 ?? \"\",\n      \"attack-bonus\": \"\",\n      \"damage-bonus\": \"\",\n      \"cl-offset\": \"0\",\n      \"sl-offset\": \"0\",\n      rollMode: shared.rollMode || game.settings.get(\"core\", \"rollMode\"),\n      \"damage-ability-multiplier\": damageMult,\n      held: useOptions.held || this.rollData.action?.held || this.rollData.item?.held || \"normal\",\n    };\n\n    this.conditionals = {};\n    action.conditionals?.contents.forEach((conditional, idx) => {\n      this.conditionals[`conditional.${idx}`] = conditional.data.default === true;\n    });\n\n    if (useOptions.haste) this._toggleExtraAttack(\"haste-attack\", true);\n    if (useOptions.manyshot) this._toggleExtraAttack(\"manyshot\", true);\n    if (useOptions.rapidShot) this._toggleExtraAttack(\"rapid-shot\", true);\n\n    // Callback for AttackDialog.show()\n    this.resolve = null;\n  }\n\n  get damageMult() {\n    const rollData = this.rollData;\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n    let damageMult = rollData.action?.ability?.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n\n    const isPrimaryAttack = this.flags[\"primary-attack\"];\n    if (!isPrimaryAttack) {\n      damageMult = rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n    }\n\n    return damageMult;\n  }\n\n  /** @type {pf1.components.ItemAction} */\n  get action() {\n    return this.object;\n  }\n\n  get title() {\n    const action = this.action,\n      item = action.item,\n      actor = action.actor;\n\n    if (actor) return `${action.name} (${item.name}) – ${actor.name}`;\n    return `${action.name} (${item.name})`;\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      template: \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n      classes: [\"pf1\", \"attack-dialog\"],\n      width: 440,\n      height: \"auto\",\n      closeOnSubmit: true,\n      sheetConfig: false,\n      submitOnChange: false,\n      submitOnClose: false,\n    };\n  }\n\n  getData() {\n    const action = this.action,\n      item = action.item;\n\n    const context = {\n      data: this.rollData,\n      item,\n      action,\n      config: pf1.config,\n      rollMode: game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n      hasAttack: action.hasAttack,\n      hasDamage: action.hasDamage,\n      hasDamageAbility: action.data.ability?.damage ?? \"\" !== \"\",\n      isNaturalAttack: item.system.subType === \"natural\",\n      isWeaponAttack: item.system.subType === \"weapon\",\n      isRanged: action.isRanged,\n      isMeleeWeaponAttackAction: action.data.actionType === \"mwak\",\n      isRangedWeaponAttackAction: action.isRanged && !action.isCombatManeuver,\n      isAttack: item.type === \"attack\",\n      isWeapon: item.type === \"weapon\",\n      isSpell: item.type === \"spell\",\n      isFeat: item.type === \"feat\",\n      isHealing: action.isHealing,\n      hasTemplate: action.hasTemplate,\n      attacks: this.attacks,\n      flags: this.flags,\n      attributes: this.attributes,\n      conditionals: this.conditionals,\n      usesAmmo: !!this.action.ammoType,\n      ammo: this.actionUse.getAmmo(),\n    };\n\n    // Determine if power attack mode should be displayed\n    context.canConfigureHeld =\n      context.flags[\"power-attack\"] &&\n      !context.isRanged &&\n      (context.isAttack || context.isWeapon) &&\n      !context.isNaturalAttack;\n\n    if (!Number.isFinite(action.data.ability?.damageMult)) {\n      context.canConfigureHeld = true;\n    }\n\n    return context;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Form changing\n    html.find(`.flags input[type=\"checkbox\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input.attribute`).on(\"change\", this._onChangeAttribute.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"concentration\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"cl-check\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"measure-template\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`select`).on(\"change\", this._onSelectChange.bind(this));\n    html.find(`.conditionals input[type=\"checkbox\"]`).on(\"change\", this._onToggleConditional.bind(this));\n\n    // Dropdown menu\n    html.find(\".ammo-select\").on(\"click\", this._onAmmoSelectClick.bind(this));\n    html.find(\".ammo-select .ammo-item .controls a\").on(\"click\", this._onAmmoControlClick.bind(this));\n    html.find(\".ammo-select .ammo-item\").on(\"click\", this._onAmmoClick.bind(this));\n    html.on(\"click\", this._unfocusElements.bind(this));\n\n    // Button hover\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerenter\", this._hideExtraAttacks.bind(this));\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerleave\", this._showExtraAttacks.bind(this));\n\n    // Button press\n    html.find(`button[name=\"attack_single\"]`).on(\"click\", (ev) => this.resolveAttack(ev, false));\n    html.find(`button[name=\"attack_full\"]`).on(\"click\", (ev) => this.resolveAttack(ev, true));\n  }\n\n  _onSelectChange(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.options[elem.selectedIndex].value;\n    this.render();\n  }\n\n  _hideExtraAttacks(event) {\n    const elems = this.element.find(\".attacks .attack\").filter((index, elem) => parseInt(elem.dataset.index) > 0);\n    elems.addClass(\"disabled\");\n  }\n\n  _showExtraAttacks(event) {\n    this.element.find(\".attacks .attack\").removeClass(\"disabled\");\n  }\n\n  /**\n   * @internal\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.render=true] - Call render\n   * @param {Event} event\n   */\n  _onToggleFlag(event) {\n    if (event?.cancelable) event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.flags[elem.name] = elem.checked === true;\n\n    // Add or remove haste, rapid-shot or manyshot attack\n    switch (elem.name) {\n      case \"haste-attack\":\n      case \"rapid-shot\":\n      case \"manyshot\": {\n        this._toggleExtraAttack(elem.name, elem.checked);\n        break;\n      }\n      case \"primary-attack\":\n        // Update damage mult to match primary/secondary default\n        this.attributes[\"damage-ability-multiplier\"] = this.damageMult;\n        break;\n    }\n\n    this.render();\n  }\n\n  _toggleExtraAttack(type, enabled = true) {\n    if (enabled) {\n      const translationString = {\n        \"haste-attack\": \"PF1.Haste\",\n        \"rapid-shot\": \"PF1.RapidShot\",\n        manyshot: \"PF1.Manyshot\",\n      };\n\n      // Correlate manyshot with the first attack, add the others at the end\n      const place = type === \"manyshot\" ? 1 : this.attacks.length;\n\n      this.attacks.splice(\n        place,\n        0,\n        new ActionUseAttack(game.i18n.localize(translationString[type]), \"\", null, { abstract: true, type })\n      );\n      this.setAttackAmmo(place, this.action.item.getFlag(\"pf1\", \"defaultAmmo\"));\n    } else {\n      this.attacks.findSplice((o) => o.type === type);\n    }\n  }\n\n  _onToggleConditional(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.conditionals[elem.name] = elem.checked === true;\n    this.render();\n  }\n\n  _onAmmoSelectClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const listElem = elem.querySelector(\"ul\");\n\n    // Filter to NOT act when clicking on the list child element\n    if (!event.target.closest(\"ul\")) {\n      // Set classes for CSS\n      listElem.classList.toggle(\"open\");\n      const isOpen = listElem.classList.contains(\"open\");\n      if (isOpen) elem.classList.add(\"focus\");\n      else elem.classList.remove(\"focus\");\n    }\n  }\n\n  _onAmmoClick(event) {\n    const elem = event.target;\n    // Don't do anything if this click was actually on its controls\n    if (elem.closest(\".controls\") && !elem.classList.contains(\"controls\")) return;\n\n    event.preventDefault();\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    const attackIndex = parseInt(elem.closest(\".attack\").dataset.index);\n\n    // Set ammo\n    this.setAttackAmmo(attackIndex, ammoId === \"null\" ? null : ammoId);\n    this.render();\n  }\n\n  async _onAmmoControlClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    switch (elem.dataset.type) {\n      case \"set-default\":\n        if (ammoId === \"null\") await this.action.item.unsetFlag(\"pf1\", \"defaultAmmo\");\n        else await this.action.item.setFlag(\"pf1\", \"defaultAmmo\", ammoId);\n        // Apply CSS class, since we can't do a render in here and keep the dropdown menu open\n        elem\n          .closest(\"ul\")\n          .querySelectorAll(\".ammo-item\")\n          .forEach((o) => o.classList.remove(\"default\"));\n        if (ammoId !== \"null\") elem.closest(\".ammo-item\").classList.add(\"default\");\n        break;\n      case \"set-all\":\n        for (let a = 0; a < this.attacks.length; a++) {\n          this.setAttackAmmo(a, ammoId);\n        }\n        this.render();\n    }\n  }\n\n  _unfocusElements(event) {\n    // Close ammo select\n    if (this.element[0].querySelector(\".ammo-select\") != null && !event.target.closest(\".ammo-select\")) {\n      const elem = this.element[0].querySelector(\".ammo-select\");\n      elem.classList.remove(\"focus\");\n      elem.querySelector(\"ul\").classList.remove(\"open\");\n    }\n  }\n\n  _onChangeAttribute(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.value;\n\n    // Also change roll data, if appropriate\n    switch (elem.name) {\n      case \"cl-offset\":\n        this.rollData.cl = this.base.cl + parseInt(elem.value);\n        break;\n      case \"sl-offset\":\n        this.rollData.sl = this.base.sl + parseInt(elem.value);\n        break;\n      case \"damage-ability-multiplier\":\n        foundry.utils.setProperty(this.rollData, \"action.ability.damageMult\", elem.value);\n        break;\n      case \"held\":\n        foundry.utils.setProperty(this.rollData, \"action.held\", elem.value);\n        break;\n    }\n\n    this.render();\n  }\n\n  initAttacks() {\n    this.attacks = this.shared.attacks;\n\n    for (const atk of this.attacks) {\n      atk.attackBonusTotal = RollPF.safeRollAsync(atk.attackBonus, this.rollData).total ?? 0;\n    }\n\n    // Set ammo usage\n    if (this.action.ammoType) {\n      const ammoId = this.action.item.getFlag(\"pf1\", \"defaultAmmo\");\n      if (ammoId != null) {\n        for (let a = 0; a < this.attacks.length; a++) {\n          this.setAttackAmmo(a, ammoId);\n        }\n      }\n    }\n  }\n\n  // Initializes ammo usage, which helps avoid being able to overuse ammo\n  initAmmoUsage() {\n    this.ammoUsage = this.actionUse.getAmmo().reduce((cur, o) => {\n      cur[o.id] = {\n        quantity: o.quantity,\n        used: 0,\n      };\n\n      return cur;\n    }, {});\n  }\n\n  setAttackAmmo(attackIndex, ammoId = null) {\n    if (!this.action.ammoType) return;\n\n    const atk = this.attacks[attackIndex];\n    const curAmmo = atk.ammo?.id;\n    const ammoItem = this.action.actor?.items.get(ammoId) ?? null;\n    const abundant = ammoItem?.system.abundant ?? false;\n\n    // Check if ammo exists\n    if (ammoId && this.ammoUsage[ammoId] == null) ammoId = null;\n\n    if (!ammoId) {\n      atk.ammo = null;\n      // Remove from ammo usage tracker\n      if (curAmmo != null) {\n        this.ammoUsage[curAmmo].used--;\n      }\n      return;\n    }\n\n    // Don't allow overusage\n    if (!abundant && this.ammoUsage[ammoId].used >= this.ammoUsage[ammoId].quantity) return;\n\n    atk.ammo = this.actionUse.getAmmo().find((o) => o.id === ammoId);\n\n    // Add to ammo usage tracker\n    if (curAmmo) this.ammoUsage[curAmmo].used--;\n    this.ammoUsage[ammoId].used++;\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   * @param {boolean} fullAttack\n   */\n  resolveAttack(event, fullAttack = true) {\n    event.preventDefault();\n\n    const form = new FormDataExtended(this.element.find(\"form\")[0]).object;\n    form.fullAttack = fullAttack;\n\n    this.resolve(form);\n    this.close();\n  }\n\n  async close(options = {}) {\n    this.resolve(null);\n    return super.close(options);\n  }\n\n  /**\n   * @returns {Promise<object|null>} - Attack configuration object or null if rejected\n   */\n  show() {\n    return new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.render(true);\n    });\n  }\n}\n","import { SemanticVersion } from \"../utils/semver.mjs\";\n\n/**\n * Changelog Dialog\n */\nexport class ChangeLogWindow extends FormApplication {\n  /**\n   * @param {boolean} lastVersion - Display only latest version, legacy versions are to be omitted.\n   * @param {boolean} autoDisplay - Is the dialog being shown without prompting?\n   */\n  constructor(lastVersion = false, autoDisplay = false) {\n    super({}, {});\n\n    this.lastVersion = lastVersion;\n    this.autoDisplay = autoDisplay;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      id: \"changelog\",\n      classes: [...options.classes, \"pf1\", \"changelog\"],\n      template: \"systems/pf1/templates/apps/changelog.hbs\",\n      tabs: [\n        {\n          initial: \"latest\",\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.content\",\n          group: \"primary\",\n        },\n      ],\n      width: 500,\n      height: 680,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    };\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.Title\")} ~ ${game.i18n.localize(\"PF1.Application.Changelog.Title\")}`;\n  }\n\n  _cache;\n\n  async getData() {\n    const context = await super.getData();\n\n    context.dontShowAgain = game.settings.get(\"pf1\", \"dontShowChangelog\");\n    context.autoDisplay = this.autoDisplay;\n    context.lastVersion = this.lastVersion;\n\n    if (!this._cache) {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"systems/pf1/CHANGELOG.md\");\n\n      const promise = new Promise((resolve) => {\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            this._cache = this._processChangelog(xhr.response);\n          } else {\n            context.error = {\n              number: xhr.status,\n              message: xhr.statusText,\n              url: xhr.responseURL,\n            };\n          }\n          resolve();\n        };\n      });\n      xhr.send(null);\n\n      await promise;\n    }\n\n    context.changelog = this._cache;\n    context.link = game.system.changelog;\n\n    return context;\n  }\n\n  /**\n   * @internal\n   * @param {string} md\n   * @returns {string}\n   */\n  _processChangelog(md) {\n    const converter = new showdown.Converter();\n\n    const latestVersion = SemanticVersion.fromString(game.system.version);\n    const latestMajor = latestVersion.major;\n    const latest = [];\n    const major = [];\n    const majorPatches = [];\n    const legacy = [];\n\n    let currentVersion = null;\n\n    const lines = md.split(/[\\n\\r]+/);\n\n    for (const line of lines) {\n      if (/^#\\s/.test(line)) continue; // Ignore H1\n\n      if (line.match(/##\\s+([0-9]+\\.[0-9]+(\\.[0-9]+)?)/)) {\n        currentVersion = SemanticVersion.fromString(RegExp.$1);\n        if (currentVersion.major === latestMajor) {\n          majorPatches.push(currentVersion);\n        }\n      }\n\n      // Skip lines not assoociated with any version\n      if (!currentVersion) continue;\n      // Split other lines to appropriate pools\n      if (currentVersion.isSame(latestVersion)) latest.push(line);\n      else if (currentVersion.major === latestMajor) major.push(line);\n      else if (!this.lastVersion) legacy.push(line);\n    }\n\n    return {\n      version: latestVersion,\n      latest: {\n        content: converter.makeHtml(latest.join(\"\\n\")),\n      },\n      major: {\n        patches: majorPatches,\n        content: major.length ? converter.makeHtml(major.join(\"\\n\")) : null,\n      },\n      legacy: {\n        content: legacy.length ? converter.makeHtml(legacy.join(\"\\n\")) : null,\n      },\n    };\n  }\n\n  async _updateObject(event, formData) {\n    if (formData.dontShowAgain != null) {\n      await game.settings.set(\"pf1\", \"dontShowChangelog\", formData.dontShowAgain);\n    }\n  }\n}\n","export class EntrySelector extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    if (options.title) this.subtitle = game.i18n.localize(options.title);\n\n    // Prepare data and convert it into format compatible with the editor\n    this.isFlag = this.options.flag === true;\n    this.isBoolean = this.options.boolean === true;\n    this.isFlat = this.options.flat === true;\n    const data = foundry.utils.deepClone(\n      foundry.utils.getProperty(this.object, this.attribute) ?? (this.isFlag ? {} : [])\n    );\n\n    this.originalEntries = data;\n    this.entries = this.isFlag ? (this.isBoolean ? Object.keys(data).map((d) => [d]) : Object.entries(data)) : data;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"entry\"],\n      template: \"systems/pf1/templates/apps/entry-selector.hbs\",\n      width: 320,\n      height: \"auto\",\n      closeOnSubmit: true,\n      submitOnClose: false,\n      submitOnChange: false,\n    };\n  }\n\n  get id() {\n    // BUG?: Hypothetical: Behaves poorly on container items?\n    return `entry-selector-item-${this.object.uuid}-${this.options.name}`;\n  }\n\n  get title() {\n    const item = this.object;\n    const actor = item.actor;\n    const title = this.subtitle ?? game.i18n.localize(\"PF1.Application.EntrySelector.Title\");\n    if (item) {\n      if (actor) {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleOwned\", {\n          item: item.name,\n          actor: actor.name,\n          title,\n        });\n      } else {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleIsolated\", { item: item.name, title });\n      }\n    } else {\n      return title;\n    }\n  }\n\n  get attribute() {\n    return this.options.name;\n  }\n\n  get fields() {\n    return this.options.fields.split(\";\");\n  }\n\n  get dtypes() {\n    return this.options.dtypes.split(\";\");\n  }\n\n  get dataCount() {\n    return this.fields.length;\n  }\n\n  getData() {\n    const entries = this.entries.map((entry) =>\n      this.isFlat ? [entry, this.dtypes[entry]] : entry.map((o2, a) => [o2, this.dtypes[a]])\n    );\n\n    return {\n      entries: entries,\n      fields: this.fields,\n      isFlat: this.isFlat,\n    };\n  }\n\n  activateListeners(html) {\n    if (!this.isEditable) return;\n\n    html.find(\".entry-control\").click(this._onEntryControl.bind(this));\n\n    html.find('tr td input[type=\"text\"]').change(this._onEntryChange.bind(this));\n  }\n\n  async _updateObject(event, formData) {\n    const updateData = {};\n\n    if (this.isFlag) {\n      // Convert editor data for flags\n      const newKeys = new Set(); // Needed for deletion detection\n      const entries = this.entries.forEach(([key, value]) => {\n        newKeys.add(key);\n        updateData[`${this.attribute}.${key}`] = this.isBoolean ? true : value;\n      });\n      // Handle deletions\n      const oldKeys = Object.keys(this.originalEntries);\n      oldKeys.forEach((key) => {\n        if (!newKeys.has(key)) updateData[`${this.attribute}.-=${key}`] = null;\n      });\n    } else {\n      updateData[this.attribute] = this.entries;\n    }\n\n    return this.object.update(updateData);\n  }\n\n  async _onEntryControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    if (a.classList.contains(\"add-entry\")) {\n      if (this.isFlat) {\n        const dataType = this.dtypes[a];\n        if (dataType === \"Number\") this.entries.push(0);\n        else this.entries.push(\"\");\n      } else {\n        const obj = [];\n        for (let a = 0; a < this.dataCount; a++) {\n          const dataType = this.dtypes[a];\n          if (dataType === \"Number\") obj.push(0);\n          else obj.push(\"\");\n        }\n        this.entries.push(obj);\n      }\n      return this.render();\n    }\n\n    if (a.classList.contains(\"delete-entry\")) {\n      const tr = a.closest(\"tr\");\n      const index = parseInt(tr.dataset.index);\n      this.entries.splice(index, 1);\n      return this.render();\n    }\n  }\n\n  async _onEntryChange(event) {\n    const a = event.currentTarget;\n\n    const tr = a.closest(\"tr.entry\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = parseInt(a.dataset.index);\n    const value = a.value;\n\n    if (a.dataset.dtype === \"Number\") {\n      let v = parseFloat(value);\n      if (isNaN(v)) v = 0;\n      if (this.isFlat) this.entries[index] = Math.floor(v * 100) / 100;\n      else this.entries[index][index2] = Math.floor(v * 100) / 100;\n    } else {\n      if (this.isFlat) this.entries[index] = value;\n      else this.entries[index][index2] = value;\n    }\n  }\n\n  /**\n   * Opens selector for chosen with with options or re-opens previously open app if such is found.\n   *\n   * @param {Item} item Item passed to constructor\n   * @param {object} options Options passed to constructor\n   */\n  static open(item, options) {\n    const app = new this(item, options);\n\n    const old = Object.values(ui.windows).find((oldApp) => oldApp instanceof this && oldApp.id === app.id);\n    if (old) old.render(false, { focus: true });\n    else app.render(true, { focus: true });\n  }\n}\n","/**\n * Item choice dialog.\n */\nexport class ItemSelector extends FormApplication {\n  constructor({ actor, items, filter, empty = true, selected = null } = {}, options) {\n    super(actor, options);\n\n    this.empty = empty;\n    this.selected = selected || \"\";\n    this.filterFunc = filter;\n    this.items = items ?? actor?.items;\n\n    if (!this.items) throw new Error(\"No items list provided.\");\n  }\n\n  get title() {\n    return this.options.title || game.i18n.localize(\"PF1.Application.ItemSelector.Title\");\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/item-select.hbs\";\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      classes: [\"pf1\", \"item-selector\"],\n      scrollY: [\".item-list\"],\n      height: \"auto\",\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      resizable: true,\n    };\n  }\n\n  getData() {\n    if (this.actor) this.items = this.actor.items;\n\n    const items = this.filterFunc ? this.items.filter(this.filterFunc) : [...this.items];\n    if (this.empty) {\n      items.unshift({\n        id: \"\",\n        img: \"icons/svg/cancel.svg\",\n        name: game.i18n.localize(\"PF1.None\"),\n      });\n    }\n\n    return {\n      empty: this.empty,\n      selected: this.selected || \"\",\n      items,\n    };\n  }\n\n  close(...args) {\n    super.close(...args);\n    this.resolve?.(null);\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const button = jq[0].querySelector(\"button.commit-select\");\n    if (button) {\n      button.addEventListener(\"click\", this._onSaveSelection.bind(this));\n    }\n  }\n\n  _onSaveSelection(event) {\n    this.resolve?.(this.selected || \"\");\n    this.close();\n  }\n\n  _updateObject(event, formData) {\n    this.selected = formData.selected;\n    this.render();\n  }\n\n  /**\n   * Render item selector and wait for it to resolve.\n   *\n   * @param {object} options - Options\n   * @param {Actor} [options.actor] - Actor to find items from.\n   * @param {Item[]} [options.items] - Items list. Used only if actor is undefined.\n   * @param {Function} options.filter - Filter function\n   * @param {boolean} [options.empty=true] - Allow empty selection.\n   * @param {string} [options.selected=null] - Already selected item ID.\n   * @param {object} [renderOptions] - Render options\n   * @param {object} [appOptions] - Application options\n   * @returns {Promise<string|null>} - Item ID or null if cancelled.\n   */\n  static wait({ actor, items, filter, empty = true, selected = null } = {}, appOptions, renderOptions) {\n    const old = Object.values(ui.windows).find(\n      (app) => app instanceof pf1.applications.ItemSelector && app.id === appOptions.id\n    );\n    if (old) {\n      old.render(false, { focus: true });\n      return null;\n    }\n\n    return new Promise((resolve) => {\n      const app = new this({ actor, items, filter, empty, selected }, appOptions);\n      app.resolve = resolve;\n      app.render(true, renderOptions);\n    });\n  }\n}\n","/**\n * An {@link Application} displaying documentation for the Pathfinder 1e system within Foundry.\n *\n * @augments Application\n */\nexport class HelpBrowserPF extends Application {\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _backwardHistory = [];\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _forwardHistory = [];\n  /**\n   * The currently shown entry.\n   *\n   * @type {HistoryEntry}\n   * @private\n   */\n  _currentPage = { url: \"Help/Home\" };\n\n  /**\n   * The Markdown converter for this application.\n   *\n   * @type {showdown.Converter}\n   * @private\n   */\n  #converter;\n\n  /** @inheritdoc */\n  constructor(...args) {\n    super(...args);\n\n    this.#converter = new showdown.Converter({\n      extensions: [HelpBrowserPF.defaultExtensions],\n      noHeaderId: false,\n      ghCompatibleHeaderId: true,\n      prefixHeaderId: \"pf1-help-browser-\",\n    });\n  }\n\n  /** @inheritdoc */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"help-browser\"],\n      template: \"systems/pf1/templates/apps/help-browser.hbs\",\n      width: 620,\n      height: 600,\n      resizable: true,\n      id: \"pf1-help-browser\",\n    });\n  }\n\n  /** @inheritdoc */\n  get title() {\n    return game.i18n.localize(\"PF1.Help.Label\");\n  }\n\n  /**\n   * The URL of the page currently displayed\n   *\n   * @type {string}\n   */\n  get currentUrl() {\n    return this._currentPage.url;\n  }\n\n  /** @override */\n  async getData() {\n    const data = await super.getData();\n\n    data.hasHistoryBack = this._backwardHistory.length > 0;\n    data.hasHistoryForward = this._forwardHistory.length > 0;\n\n    // Get markdown string from localisation, and parse it\n    data.pageContent = this.#converter.makeHtml(game.i18n.localize(`PF1.${this.currentUrl}`));\n    data.url = this.currentUrl.slugify({ strict: true });\n\n    return data;\n  }\n\n  /**\n   * Opens a specific page in the help browser.\n   *\n   * @param {string} url - The help URL to open\n   */\n  openUrl(url) {\n    // Remove leading `/`, which are okay in the wiki, but not present in localisation files\n    if (url.startsWith(\"/\")) url = url.slice(1);\n    let header;\n    // Extract header from URL\n    [url, header] = url.split(\"#\");\n    if (this.currentUrl && url !== this.currentUrl) {\n      // Add new page to history\n      this._backwardHistory.push(this.getCurrentHistoryObject());\n      this._forwardHistory.splice(0, this._forwardHistory.length);\n    }\n    this._currentPage = { url };\n    this.render(true, { header: header });\n  }\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    await super._render(force, options);\n    const contentElement = this.element.find(\".content\")[0];\n\n    if (this._currentPage.scrollTop) {\n      // Dirty timeout to wait for loading of images with unknown height\n      setTimeout(() => {\n        contentElement.scrollTop = this._currentPage.scrollTop;\n      }, 0);\n    } else if (options.header) {\n      const headerElement = document.getElementById(`pf1-help-browser-${options.header}`);\n      if (headerElement) {\n        setTimeout(() => {\n          headerElement.scrollIntoView({ block: \"start\" });\n        }, 0);\n      }\n    }\n  }\n\n  /**\n   * Returns a {@link HistoryEntry} containing a snapshot of the currently rendered state.\n   *\n   * @returns {HistoryEntry} The current state\n   */\n  getCurrentHistoryObject() {\n    const elem = this.element.find(\".content\")[0];\n    const scrollTop = elem?.scrollTop ?? 0;\n    return {\n      url: this.currentUrl,\n      scrollTop: scrollTop,\n    };\n  }\n\n  /** Go back one page in history. */\n  backInHistory() {\n    if (!this._backwardHistory.length) return;\n    this._forwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._backwardHistory.pop();\n    this.render();\n  }\n\n  /** Go forward one page in history. */\n  forwardInHistory() {\n    if (!this._forwardHistory.length) return;\n    this._backwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._forwardHistory.pop();\n    this.render();\n  }\n\n  /** @param {JQuery<HTMLElement>} html - This application's HTML element */\n  activateListeners(html) {\n    // Remove href attributes to avoid actual browser page changes\n    const links = html.find(\"a[href]\");\n    for (const l of links) {\n      const href = l.getAttribute(\"href\");\n      if (!href.startsWith(\"Help\")) {\n        l.addEventListener(\"contextmenu\", (event) => {\n          event.stopImmediatePropagation();\n        });\n        continue;\n      }\n      l.removeAttribute(\"href\");\n      // Store target in dataset\n      l.dataset.url = href;\n    }\n    html.on(\"click\", \"a\", (event) => {\n      event.preventDefault();\n      const url = event.currentTarget.dataset.url;\n      if (url) this.openUrl(url);\n    });\n\n    // History buttons\n    html.find(\".history-back\").on(\"click\", this.backInHistory.bind(this));\n    html.find(\".history-forward\").on(\"click\", this.forwardInHistory.bind(this));\n    html.find(\".history-home\").on(\"click\", () => this.openUrl(\"Help/Home\"));\n  }\n\n  /**\n   * Extensions for the Markdown converter used by the help browser.\n   *\n   * @type {showdown.ShowdownExtension[]}\n   */\n  static get defaultExtensions() {\n    return [\n      // Replace image paths from the wiki with localised paths available in the current Foundry context\n      {\n        type: \"output\",\n        regex: /<img.*?src=\"(.+?)\".*?>/g,\n        replace: function (match, src, _offset, _string) {\n          const foundrySrc = game.i18n.localize(`PF1.${src.startsWith(\"/\") ? src.slice(1) : src}`);\n          return match.replace(src, foundry.utils.getRoute(`systems/pf1/${foundrySrc}`));\n        },\n      },\n    ];\n  }\n}\n\n/**\n * The singleton instance of the {@link HelpBrowserPF} available at runtime.\n */\nexport const helpBrowser = new HelpBrowserPF();\n\n/**\n * @typedef {object} HistoryEntry\n * @property {string} url - URL of this history entry\n * @property {number} [scrollTop] - Scroll position of this history entry\n */\n","export class ScriptEditor extends FormApplication {\n  constructor(options = {}) {\n    super(options);\n\n    this.command = options.command || \"\";\n    this.name = options.name || null;\n\n    this.parent = options.parent;\n    this.script = options.script;\n\n    // Add editor title\n    if (this.name) this.options.title = this.parent ? `${this.parent.name}: ${this.name}` : this.name;\n    else this.options.title = this.parent?.name ?? game.i18n.localize(\"PF1.Unknown\");\n\n    this._promises = {\n      submit: [],\n    };\n  }\n\n  get id() {\n    return `script-call-${this.parent.uuid.replaceAll(\".\", \"-\")}-id-${this.script}`;\n  }\n\n  get isEditable() {\n    const item = this.parent;\n    let editable = this.options.editable && item.isOwner;\n    if (item.pack && game.packs.get(item.pack)?.locked) editable = false;\n    return editable;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"script-editor\"],\n      template: \"systems/pf1/templates/apps/script-editor.hbs\",\n      width: 640,\n      height: 560,\n    });\n  }\n\n  getData() {\n    const data = {};\n\n    data.command = this.command || \"\";\n    data.name = this.name;\n\n    return data;\n  }\n\n  awaitResult() {\n    let callback;\n    const promise = new Promise((resolve) => {\n      callback = resolve;\n    });\n    this._promises.submit.push({ callback, promise, resolved: false });\n    return promise;\n  }\n\n  activateListeners(html) {\n    // Open help browser\n    html.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  _updateObject(event, formData) {\n    this.command = formData[\"command\"];\n    this.name = formData[\"name\"] || null;\n\n    const result = {\n      command: this.command,\n      name: this.name,\n    };\n\n    this.resolvePromises(\"submit\", result);\n  }\n\n  resolvePromises(type, result) {\n    for (const p of this._promises[type]) {\n      if (!p.resolved) {\n        p.callback(result);\n        p.resolved = true;\n      }\n    }\n  }\n\n  async close(...args) {\n    super.close(...args);\n\n    this.resolvePromises(\"submit\", null);\n  }\n}\n","export class SensesSelector extends DocumentSheet {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return foundry.utils.mergeObject(options, {\n      classes: [\"pf1\", \"senses-selector\"],\n      template: \"systems/pf1/templates/apps/senses-selector.hbs\",\n      width: 500,\n      closeOnSubmit: true,\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the special traits selection window to include the Actor name\n   *\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Senses\")}: ${this.object.name}`;\n  }\n\n  /**\n   * Returns which keys to convert in distance or weight\n   */\n  static get convertKeys() {\n    return {\n      dv: \"distance\",\n      ts: \"distance\",\n      bse: \"distance\",\n      bs: \"distance\",\n      sc: \"distance\",\n      tr: \"distance\",\n    };\n  }\n\n  async getData() {\n    const actor = this.document;\n\n    const senses = foundry.utils.deepClone(actor.system.traits?.senses ?? {});\n    for (const [key, type] of Object.entries(this.constructor.convertKeys)) {\n      const value = senses[key];\n      if (type === \"distance\" && value > 0) {\n        senses[key] = pf1.utils.convertDistance(value)[0];\n      }\n    }\n\n    const isMetric = pf1.utils.getDistanceSystem() !== \"imperial\";\n\n    return {\n      noSystemVision:\n        !game.settings.get(\"pf1\", \"systemVision\") ||\n        (actor.token?.getFlag(\"pf1\", \"customVisionRules\") ??\n          actor.prototypeToken?.getFlag(\"pf1\", \"customVisionRules\")) ||\n        false,\n      senses,\n      isMetric,\n      gridUnits: isMetric ? game.i18n.localize(\"PF1.Distance.mShort\") : game.i18n.localize(\"PF1.Distance.ftShort\"),\n    };\n  }\n\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    const senses = formData.system.traits.senses;\n\n    // Convert data back\n    Object.entries(this.constructor.convertKeys).forEach(([key, type]) => {\n      const value = senses[key];\n      if (value > 0 && type === \"distance\") {\n        senses[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    });\n\n    // Delete undefined or disabled senses\n    // But only for linked actor since otherwise you can not override them to be disabled\n    if (!this.document.isToken) {\n      for (const [key, value] of Object.entries(senses)) {\n        if (!value) {\n          delete senses[key];\n          senses[`-=${key}`] = null;\n        }\n      }\n    }\n\n    // Update document\n    return super._updateObject(event, formData);\n  }\n}\n","import { openJournal } from \"../utils/lib.mjs\";\n\nexport class SkillEditor extends DocumentSheet {\n  constructor(actor, skillId, subSkillId, options = {}) {\n    super(actor, options);\n    this.skillId = skillId;\n    this.subSkillId = subSkillId;\n\n    this._callbacks = [];\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      width: 380,\n      template: \"systems/pf1/templates/apps/skill-editor.hbs\",\n      dragDrop: [{ dragSelector: null, dropSelector: \"*\" }],\n      classes: [...options.classes, \"pf1\", \"skill-editor\"],\n      sheetConfig: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      submitOnClose: false,\n    };\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.EditSkill\")}: ${this.skillName} – ${this.actor.name}`;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.document;\n  }\n\n  /** @type {boolean} */\n  get isSubSkill() {\n    return !!this.subSkillId;\n  }\n\n  /** @type {boolean} */\n  get isStaticSkill() {\n    return pf1.config.skills[this.skillId] != null && !this.isSubSkill;\n  }\n\n  /** @type {object} */\n  get skill() {\n    if (this.isSubSkill) return this.actor.system.skills[this.skillId]?.subSkills[this.subSkillId];\n    return this.actor.system.skills[this.skillId];\n  }\n\n  /** @type {string} */\n  get skillName() {\n    return this.isStaticSkill ? pf1.config.skills[this.skillId] : this.skill.name;\n  }\n\n  /** @type {string} */\n  get skillTag() {\n    if (this.isStaticSkill) return this.skillId;\n    return this.isSubSkill ? this.subSkillId : this.skillId;\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    // Configuration\n    data.config = pf1.config;\n\n    // Skill data\n    data.skill = foundry.utils.mergeObject(\n      this.skill,\n      {\n        skillId: this.skillId,\n        subSkillId: this.subSkillId,\n        isSubSkill: this.isSubSkill,\n        name: this.skillName,\n        static: this.isStaticSkill,\n        tag: this.skillTag,\n      },\n      { inplace: false }\n    );\n\n    // Actor data\n    data.actorData = this.actor.toObject();\n\n    // Referenced documents\n    try {\n      const document = await fromUuid(data.skill.journal);\n      data.journal = document.toObject();\n      data.journal.uuid = data.skill.journal;\n      data.journal.documentType = document instanceof JournalEntryPage ? \"JournalEntryPage\" : \"JournalEntry\";\n    } catch (err) {\n      data.journal = null;\n    }\n\n    return data;\n  }\n\n  addCallback(fn) {\n    this._callbacks.push(fn);\n  }\n\n  async _updateObject(event, formData) {\n    event.preventDefault();\n\n    // Setup base update data\n    const updateData = { system: { skills: {} } };\n    const skillCoreUpdateData = updateData.system.skills;\n\n    formData = foundry.utils.expandObject(formData);\n    // Forcibly slugify provided tag to ensure it is not invalid (e.g. contain periods)\n    const tag = pf1.utils.createTag(formData.tag, { allowUpperCase: true, camelCase: false });\n    const newData = formData.skill;\n\n    // Track old IDs for rename related data deletion\n    const oldSubSkillId = this.subSkillId,\n      oldSkillId = this.skillId;\n\n    // Preserve some data\n    if (newData.journal === undefined) newData.journal ??= this.skill.journal;\n    if (newData.custom === undefined) newData.custom ??= this.skill.custom;\n\n    if (!this.isStaticSkill) {\n      newData.background ??= this.skill.background;\n    }\n\n    // Basic sanity check\n    if (!this.isStaticSkill && !tag) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.EmptySkillTag\"));\n    }\n\n    const subSkillId = this.isSubSkill ? tag : null;\n    const skillId = !this.isSubSkill ? tag : this.skillId;\n\n    // Detect skill ID conflicts\n    const tagChanged = this.isSubSkill ? tag !== this.subSkillId : tag !== this.skillId;\n    if (tagChanged) {\n      const skillsData = this.isSubSkill ? this.actor.system.skills[skillId].subSkills : this.actor.system.skills;\n      if (tag in skillsData) {\n        const msgOpts = { tag: this.isSubSkill ? `${this.skillId}.${tag}` : tag };\n        return void ui.notifications.error(game.i18n.format(\"PF1.Error.SkillTagAlreadyExists\", msgOpts));\n      }\n    }\n\n    // Change application's id by tag\n    if (tag) {\n      if (this.isSubSkill) this.subSkillId = tag;\n      else this.skillId = tag;\n    }\n\n    if (this.isSubSkill) {\n      skillCoreUpdateData[skillId] = { subSkills: { [subSkillId]: newData } };\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[skillId].subSkills[`-=${oldSubSkillId}`] = null;\n    } else {\n      skillCoreUpdateData[skillId] = newData;\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[`-=${oldSkillId}`] = null;\n    }\n\n    return this.actor.update(updateData);\n  }\n\n  async close(...args) {\n    await super.close(...args);\n\n    this._callbacks.forEach((fn) => fn());\n  }\n\n  /**\n   * @override\n   */\n  _canDragDrop() {\n    // Allow non-GM to drop links as appropriate.\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    // Retrieve the dropped Journal Entry Page\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"JournalEntryPage\" && data.type !== \"JournalEntry\") return;\n    const document = await CONFIG[data.type].documentClass.implementation.fromDropData(data);\n    if (!document) return;\n\n    this._updateObject(event, this._getSubmitData({ \"skill.journal\": document.uuid }));\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Open compendium page\n    html.find(\".compendium-page\").on(\"click\", this._openCompendiumEntry.bind(this));\n    html.find(\".compendium-controls a\").on(\"click\", this._onCompendiumControls.bind(this));\n\n    // Submit\n    html.find(`button[type=\"submit\"]`).on(\"click\", (event) => {\n      event.preventDefault();\n      const valid = this.element[0].querySelector(\"form\").reportValidity();\n      if (valid) this.close({ submit: true });\n    });\n  }\n\n  async _openCompendiumEntry(event) {\n    event.preventDefault();\n    const elem = event.currentTarget.closest(\".compendium-entry\");\n\n    openJournal(elem.dataset.compendiumEntry);\n  }\n\n  async _onCompendiumControls(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n\n    if (elem.classList.contains(\"delete\")) {\n      return this._updateObject(event, this._getSubmitData({ \"skill.journal\": null }));\n    }\n  }\n}\n","export class ContentSourceEditor extends DocumentSheet {\n  get title() {\n    const label = game.i18n.format(\"PF1.ContentSource.Title\", { name: this.document.name });\n    const actor = this.document.actor;\n    if (actor) return label + ` – ${actor.name}`;\n    return label;\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/content-source-editor.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      tabs: [\n        {\n          contentSelector: \"section.tabs\",\n          navSelector: \"nav.tabs[data-group='sources']\",\n          group: \"sources\",\n        },\n      ],\n      dragDrop: [{ dragSelector: \"nav.tabs .source\", dropSelector: null }],\n      width: 540,\n      height: \"auto\",\n      resizable: true,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n      sheetConfig: false,\n      classes: [...options.classes, \"pf1\", \"content-source-editor\"],\n    };\n  }\n\n  /**\n   * @internal\n   * @override\n   * @returns {object}\n   */\n  getData() {\n    let canAdd = true;\n\n    let sources = this.document.system.sources ?? [];\n\n    // Prevent adding new sources if there's already an empty source\n    if (sources.some((src) => Object.keys(src).length === 0)) canAdd = false;\n\n    // Shallow clone sources for extra data\n    sources = sources.map((src) => {\n      const registry = pf1.registry.sources.get(src.id);\n      return {\n        ...src,\n        registry,\n      };\n    });\n\n    // Add default entry for editing when no entries exist\n    if (sources.length === 0) {\n      sources.push({ stub: true });\n      canAdd = false;\n    }\n\n    return {\n      sources,\n      registry: pf1.registry.sources,\n      uuid: this.document.uuid,\n      canAdd,\n    };\n  }\n\n  _getHeaderButtons() {\n    // HACK: Do not display import button\n    return super._getHeaderButtons().filter((b) => b.class !== \"import\");\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onAction(event) {\n    event.preventDefault();\n\n    const el = event.target;\n\n    if (el.classList.contains(\"disabled\")) return;\n\n    switch (el.dataset.action) {\n      case \"add\": {\n        this.form.disabled = true;\n        const sources = this.document.system.sources ?? [];\n        await this.document.update({ \"system.sources\": [...sources, {}] });\n        // Activate the newly created source tab\n        this.activateTab(`source-${sources.length}`);\n        break;\n      }\n      case \"delete\": {\n        const idx = Number(el.dataset.index);\n        if (Number.isFinite(idx) && idx >= 0) {\n          const src = this.document.system.sources[idx];\n          if (!src) return void this.render();\n          const name =\n            src.title || pf1.registry.sources.get(src.id)?.name || game.i18n.localize(\"PF1.ContentSource.NewEntry\");\n\n          const confirm = await Dialog.prompt({\n            title: game.i18n.format(\"PF1.ContentSource.DelTitle\", { entry: name }),\n            content: game.i18n.format(\"PF1.ContentSource.DelEntryDesc\", { entry: name }),\n            callback: () => true,\n            close: () => false,\n            rejectClose: false,\n          });\n\n          if (confirm !== true) return;\n\n          this.form.disabled = true;\n          const updated = await this.document.update({\n            \"system.sources\": this.document.system.sources.filter((_, sidx) => sidx !== idx),\n          });\n          if (!updated) this.render();\n        }\n        break;\n      }\n      default:\n        console.warn(\"Unrecognized action:\", el.dataset.action, el);\n        break;\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragStart(selector) {\n    if (this.document.inContainer) return false;\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragDrop(selector) {\n    if (this.document.inContainer) return false;\n    return this.isEditable;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const el = event.currentTarget;\n\n    const index = Number(el.dataset.index);\n    const src = this.document.system.sources?.[index];\n\n    if (!src) return false;\n\n    // Set drag data\n    const dragData = {\n      type: \"pf1ContentSourceEntry\",\n      uuid: this.document.uuid,\n      index,\n      data: {\n        ...src,\n      },\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  async _onDrop(event) {\n    const dropData = TextEditor.getDragEventData(event);\n\n    switch (dropData.type) {\n      case \"pf1ContentSourceEntry\":\n        this._onDropContentSource(event, dropData);\n        break;\n    }\n  }\n\n  /**\n   * Handle content source drop\n   *\n   * @remarks\n   * - Does not work correctly when dealing with\n   * @internal\n   * @param {DragEvent} event\n   * @param {object} dropData\n   */\n  async _onDropContentSource(event, dropData) {\n    let el = event.target;\n    if (el.dataset.index === undefined) el = el.closest(\".source[data-index]\");\n    let dropIndex = Number(el?.dataset.index);\n\n    this.form.disabled = true;\n\n    const src = dropData.data;\n    const origin = fromUuidSync(dropData.uuid);\n    if (!origin) return;\n\n    // Sort\n    if (origin === this.document) {\n      if (!Number.isFinite(dropIndex) || dropIndex < 0) return;\n      if (dropIndex === dropData.index) return;\n      const sources = this.document.toObject().system.sources ?? [];\n      const [moved] = sources.splice(dropData.index, 1);\n      sources.splice(dropIndex, 0, moved);\n      this.document.update({ \"system.sources\": sources });\n    }\n    // Copy\n    else {\n      const sources = this.document.toObject().system.sources ?? [];\n\n      // Disallow same ID source copy\n      if (src.id && sources.some((osrc) => osrc.id === src.id)) return; // TODO: Add error notification?\n\n      // If dropped in odd location, add as last\n      if (!Number.isFinite(dropIndex)) dropIndex = sources.length;\n      sources.splice(dropIndex, 0, src);\n      this.document.update({ \"system.sources\": sources });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    this.form\n      .querySelectorAll(\"header .control\")\n      .forEach((el) => el.addEventListener(\"click\", this._onAction.bind(this)));\n  }\n\n  /**\n   * Open editor application for defined document.\n   *\n   * @param {Actor|Item} document Item or Actor reference\n   * @returns {ContentSourceEditor} Reference to opened application.\n   */\n  static open(document) {\n    const app =\n      Object.values(ui.windows).find((app) => app instanceof this && app.object === document) ?? new this(document);\n    app.render(true, { focus: true });\n    return app;\n  }\n\n  _updateObject(event, updateData) {\n    updateData = foundry.utils.expandObject(updateData);\n\n    updateData.system.sources = Object.values(updateData.system.sources);\n\n    const sources = updateData.system.sources;\n    for (const source of sources) {\n      // Remove empty data\n      let empty = true;\n      for (const [key, value] of Object.entries(source)) {\n        if (value === null || value === \"\") {\n          delete source[key];\n        } else empty = false;\n      }\n\n      const registry = pf1.registry.sources.get(source.id);\n\n      // Empty data that is auto-filled from registry\n      if (registry) {\n        delete source.title;\n        delete source.publisher;\n      }\n\n      // Mark as empty for followup removal\n      if (empty) source.empty = true;\n    }\n\n    updateData.system.sources = updateData.system.sources.filter((s) => s.empty !== true);\n\n    return this.document.update(updateData);\n  }\n}\n","export class ExperienceDistributor extends FormApplication {\n  /**\n   * @type {number} - Bonus XP granted\n   */\n  _bonusXP = 0;\n\n  /**\n   * @type {XPDistributorActor[]} - Special actor data array\n   */\n  _actors = [];\n\n  /**\n   * @param {ActorPF[]} [actors] - Actors to add to this distributor.\n   * @param {object} [options] - Options for this application.\n   */\n  constructor(actors = [], options = {}) {\n    super(undefined, options);\n    this._actors = actors.map((o) => this.constructor.getActorData(o)).filter((o) => o != null);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"xp-distributor\"],\n      title: game.i18n.localize(\"PF1.Application.XPDistributor.Title\"),\n      template: \"systems/pf1/templates/apps/xp-distributor.hbs\",\n      dragDrop: [{ dragSelector: null, dropSelector: \"form\" }],\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: false,\n      width: 430,\n      height: 794,\n      resizable: true,\n      scrollY: [\".selectors\"],\n    });\n  }\n\n  getData() {\n    return {\n      // Add combatants\n      actors: {\n        characters: this.getCharacters(),\n        npcs: this.getNPCs(),\n      },\n\n      // Add labels\n      xp: {\n        total: this.getTotalExperience(),\n        split: this.getSplitExperience(),\n      },\n\n      bonusXP: this._bonusXP,\n    };\n  }\n\n  getCharacters() {\n    return this._actors.filter((o) => !o.isNPC);\n  }\n\n  getNPCs() {\n    return this._actors.filter((o) => o.isNPC);\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const html = this.form;\n\n    const addListener = (query, ev, callback) =>\n      html.querySelectorAll(query).forEach((elem) => elem.addEventListener(ev, callback));\n\n    addListener(\".character-selector .actor, .npc-selector .actor\", \"click\", this._onClickActor.bind(this));\n\n    addListener(\".bonus-xp input\", \"change\", (event) => {\n      event.preventDefault();\n\n      this._bonusXP = parseInt(event.currentTarget.value);\n      if (isNaN(this._bonusXP)) this._bonusXP = 0;\n\n      this.render();\n    });\n\n    addListener(\"button.cancel\", \"click\", this._onCancel.bind(this));\n    addListener(\"button[data-reward]\", \"click\", this._onSubmit.bind(this));\n  }\n\n  async _onDrop(event) {\n    event.preventDefault();\n    const data = TextEditor.getDragEventData(event);\n\n    if (data.type !== \"Actor\") return;\n\n    // Add actor\n    const actor = await pf1.documents.actor.ActorPF.fromDropData(data);\n\n    // Prevent duplicate characters (not NPCs)\n    if (actor.type !== \"character\" || this._actors.find((o) => o.actor === actor) == null) {\n      // Add actor to list\n      const actorData = this.constructor.getActorData(actor);\n      actorData.selected = true;\n      this._actors.push(actorData);\n\n      this.render();\n    }\n  }\n\n  _onClickActor(event) {\n    event.preventDefault();\n\n    const el = event.currentTarget;\n    const actorID = el.dataset.id;\n    const actor = this._actors.find((o) => o.id === actorID);\n\n    if (!actor) return;\n\n    if (actor.selected) {\n      actor.selected = false;\n      el.classList.remove(\"toggled\");\n    } else {\n      actor.selected = true;\n      el.classList.add(\"toggled\");\n    }\n\n    this.render();\n  }\n\n  async _onSubmit(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    const splitEvently = button.dataset.reward === \"split\";\n\n    const value = splitEvently ? this.getSplitExperience() : this.getTotalExperience();\n\n    if (value > 0) {\n      const characters = this.getCharacters().filter((o) => o.selected);\n\n      for (const actorData of characters) {\n        const result = { value };\n        Hooks.callAll(\"pf1GainXp\", actorData.actor, result);\n        actorData.value = Math.floor(result.value);\n      }\n\n      const updates = characters\n        .filter((o) => o.value > 0 && Number.isSafeInteger(o.value))\n        .map((o) => ({\n          _id: o.actor.id,\n          \"system.details.xp.value\": o.actor.system.details.xp.value + o.value,\n        }));\n\n      Actor.implementation.updateDocuments(updates);\n    }\n\n    this.close();\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    this.close();\n  }\n\n  /**\n   * Total experience the encounter is worth, including regular XP reward and bonus XP.\n   *\n   * @returns {number} - Total value\n   */\n  getTotalExperience() {\n    const npcs = this.getNPCs().filter((o) => o.selected);\n    return npcs.reduce((cur, o) => cur + o.xp, this._bonusXP);\n  }\n\n  /**\n   * Split experience, as split across all characters.\n   *\n   * @returns {number} - Reward value\n   */\n  getSplitExperience() {\n    const characters = this.getCharacters().filter((o) => o.selected);\n    if (characters.length == 0) return 0;\n\n    const xp = this.getTotalExperience();\n\n    return Math.floor(xp / characters.length);\n  }\n\n  /**\n   * @protected\n   * @param {Actor} actor\n   * @returns {XPDistributorActor}\n   */\n  static getActorData(actor) {\n    if (!(actor instanceof Actor)) return null;\n\n    const xp = actor.system.details?.xp?.value ?? 0;\n\n    return {\n      id: foundry.utils.randomID(16),\n      isNPC: actor.type !== \"character\",\n      actor,\n      selected: this._shouldActorBeSelected(actor),\n      xp,\n      xpString: xp.toLocaleString(),\n    };\n  }\n\n  /**\n   * Should the actor be selected by default.\n   *\n   * @param {Actor} actor\n   * @returns {boolean}\n   */\n  static _shouldActorBeSelected(actor) {\n    const isPC = actor.type === \"character\";\n    if (isPC) return true;\n\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const actorType = { character: \"pc\", npc: \"npc\" }[actor.type];\n    const useWoundsAndVigor = healthConfig.variants[actorType]?.useWoundsAndVigor ?? false;\n\n    if (useWoundsAndVigor) {\n      return actor.system.attributes?.wounds?.value <= 0;\n    } else {\n      return actor.system.attributes?.hp?.value < 0;\n    }\n  }\n\n  /**\n   * Open XP distributor dialog based on passed combat instance.\n   *\n   * @param {Combat} combat - Combat instance\n   * @returns {ExperienceDistributor} - Application instance\n   */\n  static fromCombat(combat) {\n    const app = new this(combat.combatants.map((c) => c.actor));\n\n    if (app.getCharacters().length > 0) {\n      app.render(true);\n    } else {\n      app.close();\n    }\n\n    return app;\n  }\n}\n\n/**\n * @typedef {object} XPDistributorActor\n * @property {string} id - Internal reference ID\n * @property {ActorPF} actor - Actor instance\n * @property {boolean} isNPC - Is this an NPC?\n * @property {boolean} selected - Is the actor selected\n * @property {number} xp\n * @property {string} xpString\n */\n","import { getBuffTargetDictionary, getBuffTargets } from \"@utils\";\nimport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\n\n/**\n * Change Editor\n *\n * @since PF1 v10\n */\nexport class ChangeEditor extends ItemSheet {\n  /** @type {ItemChange} */\n  change;\n\n  constructor(change, options) {\n    super(change.parent, options);\n    this.change = change;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"change-editor\"],\n      template: \"systems/pf1/templates/apps/change-editor.hbs\",\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n      sheetConfig: false,\n      width: 460,\n      height: \"auto\",\n    };\n  }\n\n  /**\n   * @remarks Remove all header buttons except for close\n   * @override\n   */\n  _getHeaderButtons() {\n    return super._getHeaderButtons().filter((b) => b.class === \"close\");\n  }\n\n  /**\n   * Replace ID link creation.\n   *\n   * Synchronized with Foundry v11.315\n   *\n   * @override\n   */\n  _createDocumentIdLink(html) {\n    const title = html.find(\".window-title\");\n    const label = game.i18n.localize(\"PF1.Change\");\n    const idLink = document.createElement(\"a\");\n    idLink.classList.add(\"document-id-link\");\n    idLink.setAttribute(\"alt\", game.i18n.localize(\"PF1.Application.ChangeEditor.CopyId\"));\n    idLink.dataset.tooltip = `${label}: ${this.change.id}`;\n    idLink.dataset.tooltipDirection = \"UP\";\n    idLink.innerHTML = '<i class=\"fa-solid fa-passport\"></i>';\n    idLink.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      game.clipboard.copyPlainText(this.item.id);\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"id\", id: this.change.id }));\n    });\n    title.append(idLink);\n  }\n\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.ChangeEditor.Label\");\n    title += \": \" + this.item.name;\n    if (this.actor) title += \" – \" + this.actor.name;\n    return title;\n  }\n\n  get id() {\n    return super.id + \"-Change-\" + this.change.id;\n  }\n\n  getData() {\n    const change = this.change,\n      actor = this.actor,\n      item = this.item;\n\n    const buffTargets = getBuffTargets(\"buffs\", { actor, item });\n    const target = buffTargets[change.target];\n\n    const context = {\n      config: pf1.config,\n      actor,\n      item,\n      change,\n      isAdd: change.operator === \"add\",\n      isSet: change.operator === \"set\",\n      isValid: !!target,\n      isValidType: !!pf1.config.bonusTypes[change.type],\n      isValidOp: [\"add\", \"set\"].includes(change.operator),\n      isDeferred: change.isDeferred,\n      label: target?.label || change.target,\n    };\n\n    return context;\n  }\n\n  _onChangeTargetControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Prepare categories and changes to display\n    const categories = getBuffTargetDictionary(\"buffs\", { actor: this.item.actor, item: this.item });\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    const part1 = this.change?.target?.split(\".\")[0];\n    const category = pf1.config.buffTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { title: \"PF1.Application.ChangeTargetSelector.Title\", classes: [\"change-target-selector\"] },\n      categories,\n      (key) => {\n        if (key) {\n          this.change.update({ target: key });\n        }\n      },\n      { category, item: this.change?.target }\n    );\n    w.render(true);\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula);\n      await roll.evaluate();\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    // Deterministic formulas must be deterministic\n    if (el.classList.contains(\"deterministic\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.WarningFormulaMustBeDeterministic\";\n        el.setCustomValidity(game.i18n.localize(\"PF1.WarningFormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Modify changes\n    html.find(\".target .change-target\").click(this._onChangeTargetControl.bind(this));\n\n    // Open help browser\n    html.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n\n    // Add warning about formulas\n    html.find(\"input.formula\").each(async (_, el) => this._validateFormula(el));\n\n    this.form.reportValidity();\n  }\n\n  /**\n   * @param {ItemChange} change - Change to modify\n   * @param {object} options - Application options\n   * @returns {Promise<void|ChangeEditor>} - Promise that resolves when the app is closed. Returns application instance if no new instance was created.\n   */\n  static async wait(change, options) {\n    const old = Object.values(ui.windows).find((app) => app.change === change && app instanceof this);\n    if (old) {\n      old.render(true, { focus: true });\n      return old;\n    }\n\n    return new Promise((resolve) => {\n      const app = new this(change, options);\n      app.resolve = resolve;\n      app.render(true, { focus: true });\n    });\n  }\n\n  /**\n   * @override\n   * @param {Event} event\n   * @param {object} formData\n   */\n  _updateObject(event, formData) {\n    //if (!this.form.checkValidity()) return;\n    const updateData = foundry.utils.expandObject(formData).change;\n    this.change.update(updateData);\n  }\n}\n","export class ItemDirectoryPF extends ItemDirectory {\n  /**\n   * Enrich default options for detecting identified/unidentified name changes\n   *\n   * @override\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.renderUpdateKeys.push(\"system.unidentified.name\", \"system.identified\");\n    return options;\n  }\n\n  /**\n   * Override Foundry's render to catch unidentified name changes (Foundry's \"k in d\" doesn't work).\n   *\n   * @override\n   */\n  async _render(force = false, context = {}) {\n    // Only re-render the sidebar directory for certain types of updates\n    const { action, data, documentType } = context;\n    if (action && ![\"create\", \"update\", \"delete\"].includes(action)) return this;\n    if (\n      documentType !== \"Folder\" &&\n      action === \"update\" &&\n      !data.some((d) => this.options.renderUpdateKeys.some((k) => foundry.utils.getProperty(d, k) !== undefined))\n    )\n      return;\n\n    // Re-build the tree and render\n    this.initialize();\n    // Skip ItemDirectory & SidebarDirectory _render, both of which use k in d culling\n    return SidebarTab.prototype._render.call(this, force, context);\n  }\n}\n","export class Troubleshooter extends Application {\n  // Are packs to be unlocked?\n  unlock = false;\n\n  // Migration state\n  migrating = { world: false, modules: false };\n\n  get title() {\n    return game.i18n.localize(\"PF1.Troubleshooter.Title\");\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/troubleshooter.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"troubleshooter\"],\n      id: \"pf1-troubleshooter\",\n      width: 460,\n    };\n  }\n\n  getData() {\n    return {\n      isGM: game.user.isGM,\n      unlockPacks: this.unlock,\n      migrating: this.migrating,\n      links: {\n        help: `<a data-action='help'>${game.i18n.localize(\"PF1.Troubleshooter.Steps.HelpLink\")}</a>`,\n        report: `<a href=\"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues\">${game.i18n.localize(\n          \"PF1.Troubleshooter.Steps.ReportLinkText\"\n        )}</a>`,\n        foundry: {\n          kb: `<a href=\"https://foundryvtt.com/kb/\">${game.i18n.localize(\"PF1.Troubleshooter.Steps.FoundryLink\")}</a>`,\n          discord: `<a href=\"https://discord.gg/foundryvtt\">Foundry VTT</a>`,\n          channel: \"#pf1\",\n        },\n        faq: \"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/wikis/FAQs\",\n        helpmodule: `<a href=\"https://foundryvtt.com/packages/find-the-culprit\">Find the Culprit</a>`,\n      },\n    };\n  }\n\n  /**\n   * @param {Event} event\n   */\n  async _runMigration(event) {\n    const unlock = this.unlock ?? false;\n\n    /** @type {Element} */\n    const el = event.target;\n    if (el.disabled) return;\n\n    el.classList.remove(\"finished\");\n    el.disabled = true;\n    el.classList.add(\"active\");\n\n    const target = el.dataset.target;\n    const top = el.closest(\".window-content\").getBoundingClientRect().top + 20;\n\n    switch (target) {\n      case \"world\":\n        this.migrating.world = true;\n        await pf1.migrations.migrateWorld({ unlock, dialog: { top } });\n        this.migrating.world = false;\n        break;\n      case \"modules\":\n        this.migrating.modules = true;\n        await pf1.migrations.migrateModules({ unlock, dialog: { top } });\n        this.migrating.modules = false;\n        break;\n      default:\n        throw new Error(`Unrecognized migration target: \"${target}\"`);\n    }\n\n    this.element[0].querySelector(\"form\").classList.remove(\"migrating\");\n    el.disabled = false;\n    el.classList.remove(\"active\");\n    el.classList.add(\"finished\");\n  }\n\n  _openHelp(event) {\n    pf1.applications.helpBrowser.openUrl(\"Help/Home\");\n  }\n\n  /**\n   * @param {JQuery} jq\n   * @override\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const [html] = jq;\n\n    const migrationButtons = html.querySelectorAll(\"button[data-action='migrate']\");\n\n    for (const button of migrationButtons) {\n      button.addEventListener(\"click\", this._runMigration.bind(this));\n    }\n\n    // React to external migration to minimal degree\n    if (pf1.migrations.isMigrating) {\n      this.migrating.world = true;\n      this.migrating.modules = true;\n      for (const button of migrationButtons) {\n        button.disabled = true;\n        button.classList.add(\"active\");\n      }\n\n      Hooks.once(\"pf1MigrationFinished\", () => {\n        for (const button of migrationButtons) {\n          button.disabled = false;\n          this.migrating.world = false;\n          this.migrating.modules = false;\n        }\n      });\n    }\n\n    html\n      .querySelector(\"input[name='unlock']\")\n      .addEventListener(\"change\", (event) => (this.unlock = event.target.checked));\n\n    html.querySelector(\"a[data-action='help']\").addEventListener(\"click\", this._openHelp.bind(this));\n  }\n\n  static open() {\n    new Troubleshooter().render(true, { focus: true });\n  }\n}\n","/**\n * Actor choice dialog.\n */\nexport class ActorSelector extends FormApplication {\n  static searchOptions = {\n    delay: 250,\n    value: \"\",\n    event: null,\n    compositioning: false,\n    effectiveSearch: \"\",\n  };\n\n  constructor(\n    {\n      actors,\n      filter,\n      disableUnowned = true,\n      ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED,\n      selected = null,\n      showUnowned = true,\n    } = {},\n    options\n  ) {\n    super({}, options);\n\n    this.actors = actors ?? [...game.actors];\n    this.disableUnowned = disableUnowned;\n    this.filterFunc = filter;\n    this.ownership = ownership;\n    this.search = { ...ActorSelector.searchOptions };\n    this.selected = selected || \"\";\n    this.showUnowned = showUnowned;\n\n    if (!this.actors) throw new Error(\"No actors list provided.\");\n  }\n\n  get title() {\n    return this.options.title || game.i18n.localize(\"PF1.Application.ActorSelector.Title\");\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/actor-select.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"actor-selector\"],\n      scrollY: [\".actor-list\"],\n      height: \"auto\",\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      resizable: true,\n    };\n  }\n\n  getData() {\n    const gmActive = !!game.users.activeGM;\n    let actorList = this.filterFunc ? this.actors.filter(this.filterFunc) : [...this.actors];\n\n    // Filter the list by the search term as well.\n    if (this.search.value) {\n      actorList = actorList.filter((actor) => actor.name.toLowerCase().includes(this.search.value.toLowerCase()));\n    }\n\n    // Make sure the list is sorted alphabetically\n    actorList.sort((a, b) => a.name.localeCompare(b.name));\n\n    // Prepare the data separately for owned and unowned actors.\n    const ownedActors = actorList\n      .filter((actor) => actor.isOwner)\n      .map((actor) => {\n        return {\n          id: actor.id,\n          name: actor.name,\n          img: actor.img,\n          isDisabled: false,\n        };\n      });\n\n    const unownedActors = actorList\n      .filter((actor) => !actor.isOwner && actor.testUserPermission(game.user, this.ownership))\n      .map((actor) => {\n        return {\n          id: actor.id,\n          name: actor.name,\n          img: actor.img,\n          isDisabled: !gmActive && this.disableUnowned,\n        };\n      });\n\n    return {\n      selected: this.selected || \"\",\n      ownedActors,\n      unownedActors,\n      showUnowned: game.user.isGM ? false : this.showUnowned,\n      searchTerm: this.search.value,\n    };\n  }\n\n  close(...args) {\n    super.close(...args);\n    this.resolve?.(null);\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const button = jq[0].querySelector(\"button.commit-select\");\n\n    button.addEventListener(\"click\", this._onSaveSelection.bind(this));\n\n    const sb = jq.find(\".search-input\");\n    sb.on(\"keyup change\", this._searchFilterChange.bind(this));\n    sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n  }\n\n  _onSaveSelection(_event) {\n    this.resolve?.(this.selected || \"\");\n    this.close();\n  }\n\n  _updateObject(_event, formData) {\n    this.selected = formData.selected;\n    this.render();\n  }\n\n  /**\n   *  Process the search input and filter the actor list(s) on the fly.\n   *\n   * @param {Event} event - The triggering event\n   * @returns {void}\n   */\n  _searchFilterCommit(event) {\n    const searchTerm = this.search.value.toLowerCase();\n\n    // Skip if the search term is the same as the last one\n    if (this.search.effectiveSearch === searchTerm) return;\n    this.search.effectiveSearch = searchTerm;\n    this.render(true);\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.search.compositioning = event.type === \"compositionstart\";\n  }\n\n  /**\n   * Update the search term and set a timeout to commit the search.\n   *\n   * @param {Event} event - The triggering event\n   * @returns {void}\n   */\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const searchTerm = event.target.value;\n    const changed = this.search.value !== searchTerm;\n\n    if (this.search.compositioning || changed) clearTimeout(this.search.event); // reset\n    if (this.search.compositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this.search.value = searchTerm;\n\n    if (event.type === \"keyup\") {\n      // Delay search\n      if (changed) this.search.event = setTimeout(() => this._searchFilterCommit(event), this.search.delay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /**\n   * Render actor selector and wait for it to resolve.\n   *\n   * @param {object} options - Options\n   * @param {Actor[]} [options.actors] - The actors list to choose from.\n   * @param {boolean} [options.disableUnowned=true] - Disable interactions with unowned actors.\n   * @param {Function} options.filter - Filter function\n   * @param {*} options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED - Minimum Ownership level\n   * @param {string} [options.selected=null] - Already selected actor ID.\n   * @param {boolean} [options.showUnowned=true] - Whether to show unowned actors.\n   * @param {object} [renderOptions] - Render options\n   * @param {object} [appOptions] - Application options\n   * @param options.ownership\n   * @returns {Promise<string|null>} - Actor ID or null if cancelled.\n   */\n  static wait(\n    {\n      actors,\n      filter,\n      disableUnowned = true,\n      ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED,\n      selected = null,\n      showUnowned = true,\n    } = {},\n    appOptions,\n    renderOptions\n  ) {\n    return new Promise((resolve) => {\n      const app = new this({ actors, filter, disableUnowned, ownership, selected, showUnowned }, appOptions);\n      app.resolve = resolve;\n      app.render(true, renderOptions);\n    });\n  }\n}\n","/**\n * Stack splitting dialog\n *\n * @example\n * ```js\n * const result = await pf1.applications.SplitStack.wait({ title: \"My Stuff\", initial: 50, total: 100 });\n * if (!result) throw new Error(\"Fsck!\");\n * const [keep,split] = result;\n * console.log(`I keep ${keep} and you get ${split}`);\n * ```\n */\nexport class SplitStack extends Dialog {\n  /**\n   * Wait for user interaction to finish.\n   *\n   * @param {object} options - Options\n   * @param {string} [options.title] - Dialog title\n   * @param {number} options.initial - Initial value\n   * @param {number} options.total - Total value to split.\n   * @param {number} [options.step] - Value stepping.\n   * @param {string[]} [options.css] - Optional CSS selectors to add to the dialog.\n   * @param {object} renderOptions - Render options to pass to Dialog\n   * @returns {number[]|null} - Number tuple, to keep and to split values. Null if cancelled.\n   */\n  static async wait({ title, initial = 1, step = 1, total, css = [] } = {}, renderOptions = {}) {\n    // Can't split\n    if (total <= 1) return null;\n    // Only one answer\n    if (total == 2) return [1, 1];\n\n    step ||= 1;\n    initial = Math.clamped(initial || 0, 1, total);\n    const max = total - 1;\n\n    const content = await renderTemplate(\"systems/pf1/templates/apps/split-stack.hbs\", {\n      initial,\n      keep: total - initial,\n      max,\n    });\n\n    return super.wait(\n      {\n        title,\n        content,\n        buttons: {\n          split: {\n            // icon: `<i class=\"fas fa-people-arrows></i>`,\n            label: game.i18n.localize(\"PF1.Split\"),\n            callback: async ([html]) => {\n              const splitValue = Math.clamped(html.querySelector(`input.split`).valueAsNumber, 1, max);\n              if (Number.isNumeric(splitValue)) {\n                return [Math.max(1, total - splitValue), splitValue];\n              }\n              return null;\n            },\n          },\n        },\n        render: ([html]) => {\n          const slider = html.querySelector(\"input.slider\");\n          const oldstack = html.querySelector(\"input.left\");\n          const newstack = html.querySelector(\"input.split\");\n          slider.addEventListener(\n            \"input\",\n            (ev) => {\n              const newval = ev.target.valueAsNumber;\n              newstack.value = newval;\n              oldstack.value = total - newval;\n            },\n            { passive: true }\n          );\n          newstack.addEventListener(\n            \"input\",\n            (ev) => {\n              let newval = ev.target.valueAsNumber;\n              if (newval > max) {\n                newstack.value = max;\n                newval = max;\n              } else if (newval < 1) {\n                newstack.value = 1;\n                newval = 1;\n              }\n              slider.value = newval;\n              oldstack.value = total - newval;\n            },\n            { passive: true }\n          );\n          oldstack.addEventListener(\"input\", (ev) => {\n            let newval = total - ev.target.valueAsNumber;\n            if (newval > total) {\n              oldstack.value = max;\n              newval = 1;\n            } else if (newval < 1) {\n              oldstack.value = 1;\n              newval = max;\n            }\n            newstack.value = newval;\n            slider.value = newval;\n          });\n        },\n        close: () => null,\n        default: \"split\",\n      },\n      {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"split-stack\", ...css],\n      },\n      renderOptions\n    );\n  }\n}\n","/**\n * The various {@link Application}s used by the Pathfinder 1e system.\n *\n * @module\n */\n\nimport { CompendiumBrowser } from \"./compendium-browser/compendium-browser.mjs\";\n\nexport * as actor from \"./actor/_module.mjs\";\nexport * as item from \"./item/_module.mjs\";\nexport * as component from \"./component/_module.mjs\";\nexport * as settings from \"./settings/_module.mjs\";\nexport * as compendiumBrowser from \"./compendium-browser/_module.mjs\";\n\nexport { ActionSelector } from \"./action-selector.mjs\";\nexport { AttackDialog } from \"./attack-dialog.mjs\";\nexport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\nexport { ChangeLogWindow } from \"./change-log.mjs\";\nexport { CurrencyTransfer } from \"./currency-transfer.mjs\";\nexport { DamageTypeSelector } from \"./damage-type-selector.mjs\";\nexport { EntrySelector } from \"./entry-selector.mjs\";\nexport { ItemSelector } from \"./item-selector.mjs\";\nexport { HelpBrowserPF } from \"./help-browser.mjs\";\nexport { Widget_ItemPicker } from \"./item-picker.mjs\";\nexport { LevelUpForm } from \"./level-up.mjs\";\nexport { PointBuyCalculator } from \"./point-buy-calculator.mjs\";\nexport { ScriptEditor } from \"./script-editor.mjs\";\nexport { SensesSelector } from \"./senses-selector.mjs\";\nexport { SkillEditor } from \"./skill-editor.mjs\";\nexport { ContentSourceEditor } from \"./content-source-editor.mjs\";\nexport { TooltipPF } from \"./tooltip.mjs\";\nexport { ActorTraitSelector } from \"./trait-selector.mjs\";\nexport { VisionSharingSheet } from \"./vision-sharing.mjs\";\nexport { ExperienceDistributor } from \"./xp-distributor.mjs\";\nexport { ChangeEditor } from \"./change-editor.mjs\";\n\nexport { ItemDirectoryPF } from \"./sidebar/items-directory.mjs\";\nexport { Troubleshooter } from \"./troubleshooter.mjs\";\n\nexport { ActorSelector } from \"./actor-selector.mjs\";\nexport { SplitStack } from \"./split-stack.mjs\";\n\n/**\n * {@link CompendiumBrowser}s for the various compendiums.\n *\n * @type {Record<string, CompendiumBrowser>}\n */\nexport const compendiums = {};\nexport { helpBrowser } from \"./help-browser.mjs\";\n","export class ActiveEffectPF extends ActiveEffect {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Record current initiative\n    // But only if the current actor is in combat\n    const combat = actor.getCombatants()[0]?.combat;\n    if (combat) {\n      // Set flag only if it doesn't exist in the data already\n      if (this.getFlag(\"pf1\", \"initiative\") === undefined) {\n        this.updateSource({ \"flags.pf1.initiative\": combat.initiative });\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (userId !== game.user.id) return;\n\n    if (this.parent instanceof Actor) return;\n\n    if (!this.isTracker) return;\n\n    if (!this.isSuppressed && !this.parent.isActive) {\n      this.parent.setActive(true, { pf1: { reason: \"effect-creation\" } });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context\n   * @param {string} userId - Triggering user\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (userId !== game.user.id) return;\n\n    if (this.parent instanceof Actor) return;\n    if (!this.isTracker) return;\n\n    // Disable associated buff if found\n    if (context.pf1?.delete !== this.parent.uuid && this.parent.isActive) {\n      context.pf1 ??= {};\n      context.pf1.startTime = this.duration.startTime;\n      this.parent.setActive(false, context);\n    }\n  }\n\n  /**\n   * @override\n   * @type {boolean}\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (game.user.id !== userId) return;\n\n    if (this.isSuppressed) return;\n\n    if (changed.disabled !== undefined) {\n      if (this.parent instanceof Item) {\n        this.parent.setActive?.(!this.disabled, context);\n      }\n    }\n  }\n\n  /**\n   * @type {Actor|null} Parent actor or null.\n   */\n  get actor() {\n    const parent = this.parent;\n    if (parent instanceof Actor) return parent;\n    else return parent?.actor || null;\n  }\n\n  /**\n   * @remarks BUG: Foundry v11 and older controls visibility through this.\n   * @override\n   * @type {boolean}\n   */\n  get isTemporary() {\n    // Allow overlays to always show, no matter what else\n    if (this.statuses.size && this.getFlag(\"core\", \"overlay\")) return true;\n\n    // Hide everything told to hide\n    if (this.getFlag(\"pf1\", \"show\") === false) return false;\n\n    // Hide buffs if buff hiding option is enabled\n    const isTracker = this.isTracker;\n    if (isTracker) {\n      // Hide based on parent item hide toggle\n      if (this.parent?.system?.hideFromToken) return false;\n      // Hide based on global setting\n      if (game.settings.get(\"pf1\", \"hideTokenConditions\")) return false;\n    }\n\n    return isTracker || super.isTemporary;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 to deal with problems of isTemporary.\n   *\n   * @internal\n   */\n  get _hasDuration() {\n    const duration = this.duration.seconds ?? (this.duration.rounds || this.duration.turns);\n    // Allow zero for single-turn duration effects to register correctly.\n    return Number.isFinite(duration) && duration >= 0;\n  }\n\n  /** @type {number|undefined} - Initiative counter if this effect started during combat */\n  get initiative() {\n    return this.getFlag(\"pf1\", \"initiative\");\n  }\n\n  /** @type {boolean} - Is this tracking buff active state and duration? */\n  get isTracker() {\n    return this.getFlag(\"pf1\", \"tracker\") ?? false;\n  }\n\n  get isSuppressed() {\n    if (this.parent instanceof Item) return this.parent?.isActive === false;\n    return false;\n  }\n}\n","import { ActorPF } from \"./actor/actor-pf.mjs\";\nimport { getSkipActionPrompt } from \"./settings.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n/* -------------------------------------------- */\n\n/**\n * @internal\n * @param {string} combatantId - Combatant ID\n */\nasync function duplicateCombatantInitiativeDialog(combatantId) {\n  /** @type {CombatantPF} */\n  const combatant = game.combat.combatants.get(combatantId);\n  if (!combatant) return void ui.notifications.warn(game.i18n.localize(\"PF1.Warning.NoCombatantFound\"));\n\n  const offset = await pf1.utils.dialog.getNumber({\n    title: `${game.i18n.localize(\"PF1.DuplicateInitiative\")}: ${combatant.name}`,\n    label: game.i18n.localize(\"PF1.InitiativeOffset\"),\n    initial: 0,\n    classes: [\"duplicate-initiative\"],\n  });\n\n  if (!Number.isFinite(offset)) return; // Cancelled\n\n  return combatant.duplicateWithData({ initiative: (combatant.initiative ?? 0) + offset });\n}\n\n// Deprecated\nexport const duplicateCombatantInitiative = function (combat, combatant, initiative) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.documents.duplicateCombatantInitiative() is deprecated in favor of CombatantPF.duplicateWithData()\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n  return combatant.duplicateWithData({ initiative });\n};\n\nHooks.on(\"getCombatTrackerEntryContext\", function addCombatTrackerContextOptions(html, menuItems) {\n  menuItems.push({\n    name: \"PF1.DuplicateInitiative\",\n    icon: '<i class=\"fas fa-dice-d20\"></i>',\n    callback: ([li]) => duplicateCombatantInitiativeDialog(li.dataset.combatantId),\n  });\n});\n\nexport class CombatPF extends Combat {\n  /**\n   * @override\n   * @param {string[]} ids Combatant IDs to roll initiative for.\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.bonus=null] - Formula for bonus to initiative\n   * @param {string} [options.rollMode] - Roll mode override\n   * @param {boolean} [options.skipDialog=null] - Skip roll dialog\n   */\n  async rollInitiative(\n    ids,\n    { formula = null, d20, bonus = null, rollMode, updateTurn = true, messageOptions = {}, skipDialog = null } = {}\n  ) {\n    skipDialog ??= getSkipActionPrompt();\n    // Structure input data\n    ids = Array.isArray(ids) ? ids : [ids];\n\n    const currentId = this.combatant?.id;\n\n    const firstCombatant = this.combatants.get(ids[0]);\n    const rollerName =\n      (ids.length > 1 ? firstCombatant?.actor?.name : firstCombatant?.token?.name) ?? firstCombatant?.name;\n\n    // Show initiative dialog\n    if (!skipDialog) {\n      const dialogData = await Combat.implementation.showInitiativeDialog({\n        d20,\n        bonus,\n        rollMode,\n        name: rollerName,\n      });\n      rollMode = dialogData.rollMode;\n      bonus = dialogData.bonus || \"\";\n      d20 = dialogData.d20;\n      if (dialogData.stop) return this;\n    }\n\n    // Iterate over Combatants, performing an initiative roll for each\n    const [updates, messages] = await ids.reduce(\n      async (results, id, i) => {\n        const result = await results;\n        const [updates, messages] = result;\n\n        // Get Combatant data (non-strictly)\n        /** @type {CombatantPF} */\n        const combatant = this.combatants.get(id);\n        if (!combatant?.isOwner) return results;\n\n        // Produce an initiative roll for the Combatant\n        const roll = combatant.getInitiativeRoll(formula, d20, bonus);\n        roll.options.flavor = game.i18n.localize(\"PF1.Initiative\");\n        await roll.evaluate();\n        updates.push({ _id: id, initiative: roll.total });\n\n        // Produce an initiative roll for the Combatant\n        const isHidden = combatant.token?.hidden || combatant.hidden;\n        if (isHidden) rollMode = messageOptions.rollMode ?? \"gmroll\";\n\n        if (roll.err) ui.notifications.warn(roll.err.message);\n\n        const [notes, notesHTML] = combatant.actor?.getInitiativeContextNotes?.() ?? [];\n\n        // Create card template data\n        const templateData = {\n          formula: roll.formula,\n          tooltip: await roll.getTooltip(),\n          total: roll.total,\n          extraText: notesHTML,\n        };\n\n        // Ensure roll mode is not lost\n        if (rollMode) messageOptions.rollMode = rollMode;\n\n        // Create base chat card data\n        let chatData = {\n          speaker: ChatMessage.getSpeaker({\n            actor: combatant.actor,\n            token: combatant.token,\n            alias: combatant.name,\n          }),\n          ...messageOptions,\n        };\n\n        // Mimic core Foundry data\n        foundry.utils.setProperty(chatData, \"flags.core.initiativeRoll\", true);\n\n        // Generate message proper via D20RollPF\n        chatData = await roll.toMessage(chatData, {\n          create: false,\n          rollMode,\n          subject: { core: \"init\" },\n          chatTemplateData: templateData,\n        });\n\n        if (i > 0) chatData.sound = null; // Only play 1 sound for the whole set\n        messages.push(chatData);\n\n        // Return the Roll and the chat data\n        return results;\n      },\n      [[], []]\n    );\n    if (!updates.length) return this;\n\n    // Update multiple combatants\n    await this.updateEmbeddedDocuments(\"Combatant\", updates);\n\n    // Ensure the turn order remains with the same combatant\n    if (updateTurn && currentId) await this.update({ turn: this.turns.findIndex((t) => t.id === currentId) });\n\n    // Create multiple chat messages\n    const chatMessages = await ChatMessage.implementation.create(messages, { rollMode });\n    return { combat: this, messages: chatMessages };\n  }\n\n  /**\n   * @param {object} options\n   * @param {string} options.d20 Formula override\n   * @param {string} options.bonus Bonus formula override\n   * @param {string} options.name Name of the roller\n   * @returns {object}\n   */\n  static async showInitiativeDialog({ d20 = null, bonus = null, name } = {}) {\n    const rollMode = game.settings.get(\"core\", \"rollMode\");\n\n    const template = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n    const dialogData = { d20, bonus, rollMode, rollModes: CONFIG.Dice.rollModes };\n\n    // Show dialog\n    // TODO: Use D20RollPF's prompt instead\n    return Dialog.wait(\n      {\n        title: game.i18n.format(\"PF1.InitiativeCheck\", { name }),\n        content: await renderTemplate(template, dialogData),\n        buttons: {\n          normal: {\n            label: game.i18n.localize(\"PF1.Roll\"),\n            callback: (html) => new FormDataExtended(html.querySelector(\"form\")).object,\n          },\n        },\n        default: \"normal\",\n        close: (html) => ({ stop: true }),\n      },\n      {\n        subject: { core: \"init\" },\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"roll-prompt\", \"roll-initiative\"],\n        jQuery: false,\n      },\n      {\n        focus: true,\n      }\n    );\n  }\n\n  /**\n   * @override\n   * @param {object} data Update data\n   * @param {options} options Context options\n   * @param {string} userId Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (changed.turn !== undefined || changed.round !== undefined) {\n      // Cache current world time here since actual time update can happen at random time in the future due to async code.\n      context.pf1 ??= {};\n      context.pf1.worldTime = game.time.worldTime;\n      this._onNewTurn(changed, context, userId);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (\"turn\" in changed || \"round\" in changed) {\n      // Record origin turn and round\n      context.pf1 ??= {};\n      context.pf1.from = { turn: this.turn, round: this.round };\n    }\n  }\n\n  /**\n   * New turn handling.\n   *\n   * @param changed\n   * @param context\n   * @param userId\n   * @private\n   */\n  async _onNewTurn(changed, context, userId) {\n    if (!this._isForwardTime(changed, context)) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n\n    if (context.pf1?.from) {\n      const skipped = this._detectSkippedTurns(context.pf1.from, context);\n\n      if (game.users.activeGM?.isSelf) {\n        this._handleSkippedTurns(skipped, context);\n      }\n\n      const previous = this.turns.at(this.turn - 1);\n      if (!skipped.has(previous)) this._processEndTurn(context.pf1?.from, context);\n    }\n\n    this._processTurnStart(changed, context, userId);\n\n    this._processInitiative(context);\n  }\n\n  _isForwardTime(changed, context) {\n    // Non-UI turn progression does not have context.direction present to detect this otherwise\n    const t0 = context.pf1.from.turn,\n      r0 = context.pf1.from.round,\n      t1 = changed.turn ?? t0,\n      r1 = changed.round ?? r0,\n      rd = r1 - r0, // round delta\n      td = t1 - t0; // turn delta\n\n    if (rd < 0) return false;\n    else if (rd == 0 && td <= 0) return false;\n    return true;\n  }\n\n  /**\n   * Determine skipped turns\n   *\n   * @internal\n   * @param {object} from\n   * @param {number} from.turn From turn\n   * @param {number} from.round From round\n   * @param {object} context - Update context\n   * @returns {Set<Combatant>} - Set of combatant IDs whose turn was skipped\n   */\n  _detectSkippedTurns({ turn, round } = {}, context) {\n    const roundChange = this.round !== round;\n\n    const skipped = new Set();\n\n    // No combatants skipped\n    if (!roundChange && turn + 1 === this.turn) return skipped;\n\n    // Determine skipped combatants\n    for (const [index, combatant] of this.turns.entries()) {\n      // Seeking first, not actually skipped\n      if (!roundChange && index <= turn) continue;\n      // Skipped\n      else if (index < this.turn) skipped.add(combatant);\n      // Skipped (usually via nextRound)\n      else if (roundChange && index > turn) skipped.add(combatant);\n    }\n\n    Hooks.callAll(\"pf1CombatTurnSkip\", this, skipped, context);\n\n    return skipped;\n  }\n\n  /**\n   * Handle effects of skipped turns.\n   *\n   * @internal\n   * @param {Set<Combatant>} skipped - Combatant IDs of those whose turn was skipped.\n   * @param {object} context - Combat update context\n   */\n  _handleSkippedTurns(skipped, context) {\n    const currentTurn = this.turn;\n    const event = \"turnEnd\";\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    // Expire effects for skipped combatants\n    for (const combatant of skipped) {\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      // Adjust expiration time for those who come after in initiative (their expiration was for previous round)\n      const turn = this.turns.findIndex((c) => c === combatant);\n      const turnTimeOffset = timeOffset + (turn > currentTurn) ? -CONFIG.time.roundTime : 0;\n\n      actor.expireActiveEffects?.({ timeOffset: timeOffset + turnTimeOffset, worldTime, combat: this, event });\n    }\n  }\n\n  /**\n   * Handle end of turn\n   *\n   * @internal\n   * @param {object} originTime\n   * @param {number} originTime.turn - Turn that ended\n   * @param {number} originTime.round - Round on which the turn ended\n   * @param {object} context\n   */\n  async _processEndTurn({ turn, round } = {}, context = {}) {\n    const previous = this.turns.at(turn);\n    const actor = previous.actor;\n    if (!actor) return;\n\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    try {\n      await actor.expireActiveEffects?.({\n        combat: this,\n        worldTime,\n        timeOffset,\n        event: \"turnEnd\",\n      });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process current combatant: expire active effects & buffs.\n   *\n   * @param {object} changed Update data\n   * @param {options} context Context options\n   * @param {string} userId Triggering user ID\n   */\n  async _processTurnStart(changed, context, userId) {\n    const actor = this.combatant?.actor;\n    if (!actor) return;\n\n    // Attempt to perform expiration on owning active user\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n\n    try {\n      await actor.expireActiveEffects?.({\n        combat: this,\n        worldTime,\n        timeOffset,\n        event: \"turnStart\",\n      });\n    } catch (error) {\n      console.error(error, actor);\n    }\n\n    try {\n      await actor.rechargeItems?.({ period: \"round\", exact: true });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process end of durations based on initiative.\n   *\n   * Only active GM processes these to avoid conflicts and logic bloat.\n   *\n   * @internal\n   * @param {object} [context] - Update context\n   */\n  _processInitiative(context = {}) {\n    if (!game.users.activeGM?.isSelf) return;\n\n    const worldTime = context.pf1?.worldTime ?? game.time.worldTime;\n    const timeOffset = context.advanceTime ?? 0;\n\n    const initiative = this.initiative;\n    for (const combatant of this.combatants) {\n      if (combatant.isDefeated) continue;\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      actor.expireActiveEffects?.({ combat: this, initiative, timeOffset, worldTime });\n    }\n  }\n\n  _onDelete(options, userId) {\n    super._onDelete(options, userId);\n\n    if (game.user.id !== userId) return;\n\n    // Show experience distributor after combat\n    if (!this.started) return;\n    const xpCfg = game.settings.get(\"pf1\", \"experienceConfig\");\n    if (xpCfg.disable) return;\n\n    const openUI = xpCfg.openDistributor;\n    const skipPrompt = pf1.documents.settings.getSkipActionPrompt();\n    if (openUI ^ skipPrompt) {\n      pf1.applications.ExperienceDistributor.fromCombat(this);\n    }\n  }\n\n  /**\n   * Get current initiative.\n   *\n   * @type {number|undefined}\n   */\n  get initiative() {\n    return this.combatant?.initiative;\n  }\n}\n","import { RollPF } from \"module/dice/roll.mjs\";\n\n/**\n * Combatant extension.\n */\nexport class CombatantPF extends Combatant {\n  /**\n   * Combat tracker resource update.\n   * Required to deal with 0 values disappearing with core implementation\n   *\n   * Synchronized with Foundry 10.291\n   *\n   * @override\n   * @returns {*} Resource value.\n   */\n  updateResource() {\n    if (!this.actor || !this.combat) return (this.resource = null);\n    return (this.resource = foundry.utils.getProperty(this.actor.system, this.parent.settings.resource) ?? null);\n  }\n\n  /**\n   * Duplicate combatant with added data.\n   *\n   * @param {object} data - Override data\n   * @param {object} context - Creation context\n   * @returns {Promise<Combatant>} - Created combatant\n   */\n  duplicateWithData(data = {}, context = {}) {\n    console.debug(\"Duplicating combatant:\", this);\n    context.parent ??= this.combat;\n    return this.constructor.create(foundry.utils.mergeObject(this.toObject(), data), context);\n  }\n\n  /**\n   * Get unevaluated initiative roll instance.\n   *\n   * @override\n   * @param {string} [formula] Initiative formula override\n   * @param {string} [d20=null] D20 override\n   * @param {number} [bonus=null] Bonus to initiative\n   * @returns {pf1.dice.D20RollPF} Initiative roll instance\n   *\n   * Synchronized with Foundry VTT 10.291\n   */\n  getInitiativeRoll(formula, d20 = null, bonus = null) {\n    formula ||= this._getInitiativeFormula(d20);\n    const rollData = this.actor?.getRollData() || {};\n    if (bonus) {\n      rollData.bonus = bonus;\n      formula += \" + @bonus\";\n    }\n\n    return new pf1.dice.D20RollPF(formula, rollData);\n  }\n\n  /**\n   * Override the default Initiative formula to customize special behaviors of the game system.\n   * Apply tiebreaker if desired\n   * See Combat._getInitiativeFormula for more detail.\n   *\n   * @override\n   * @param {string} [d20=pf1.dice.D20RollPF.standardRoll] Default check roll\n   * @returns {string} Initiative formula\n   */\n  _getInitiativeFormula(d20) {\n    d20 ||= pf1.dice.D20RollPF.standardRoll;\n    const defaultParts = [d20, `@attributes.init.total[${game.i18n.localize(\"PF1.Initiative\")}]`];\n    const actor = this.actor;\n    if (actor && game.settings.get(\"pf1\", \"initiativeTiebreaker\"))\n      defaultParts.push(`(@attributes.init.total / 100)[${game.i18n.localize(\"PF1.Tiebreaker\")}]`);\n    const parts = CONFIG.Combat.initiative.formula ? CONFIG.Combat.initiative.formula.split(/\\s*\\+\\s*/) : defaultParts;\n    if (!actor) return parts[0] || \"0\";\n    return parts.filter((p) => !!p).join(\" + \");\n  }\n}\n","/**\n * Transforms a key input into an array of objects for the keybinding API\n *\n * @param {string} key - A key string\n * @returns {{\"key\": string}[]} Keybinding objects\n */\nconst getLeftRight = (key) => [`${key}Left`, `${key}Right`].map((k) => ({ key: k }));\n\nconst SHIFT_KEYS = getLeftRight(\"Shift\");\nconst CTRL_KEYS = getLeftRight(\"Control\");\n\n/**\n * Registers the system's keybindings\n *\n * @internal\n */\nexport const registerSystemControls = () => {\n  game.keybindings.register(\"pf1\", \"skipConfirmPrompt\", {\n    name: \"PF1.KEYBINDINGS.SkipConfirmPrompt.Name\",\n    uneditable: SHIFT_KEYS,\n    onDown: () => {\n      pf1.skipConfirmPrompt = true;\n    },\n    onUp: () => {\n      pf1.skipConfirmPrompt = false;\n    },\n  });\n\n  game.keybindings.register(\"pf1\", \"forceShowItem\", {\n    name: \"PF1.KEYBINDINGS.ForceShowItem.Name\",\n    hint: \"PF1.KEYBINDINGS.ForceShowItem.Hint\",\n    uneditable: CTRL_KEYS,\n    onDown: () => {\n      pf1.forceShowItem = true;\n    },\n    onUp: () => {\n      pf1.forceShowItem = false;\n    },\n  });\n\n  game.keybindings.register(\"pf1\", \"hideTokenTooltip\", {\n    name: \"PF1.KEYBINDINGS.HideTokenTooltip.Name\",\n    hint: \"PF1.KEYBINDINGS.HideTokenTooltip.Hint\",\n    uneditable: CTRL_KEYS,\n    onDown: () => pf1.documents.controls._hideTokenTooltip(true),\n    onUp: () => pf1.documents.controls._hideTokenTooltip(false),\n  });\n\n  game.keybindings.register(\"pf1\", \"hideTokenTooltipGMInfo\", {\n    name: \"PF1.KEYBINDINGS.HideTokenTooltipGMInfo.Name\",\n    uneditable: SHIFT_KEYS,\n    restricted: true,\n    onDown: () => pf1.documents.controls._hideTokenTooltipGMInfo(true),\n    onUp: () => pf1.documents.controls._hideTokenTooltipGMInfo(false),\n  });\n\n  game.keybindings.register(\"pf1\", \"stickyTokenTooltip\", {\n    name: \"PF1.KEYBINDINGS.StickyTokenTooltip.Name\",\n    hint: \"PF1.KEYBINDINGS.StickyTokenTooltip.Hint\",\n    onDown: () => pf1.documents.controls._stickyTokenTooltip(true),\n    onUp: () => pf1.documents.controls._stickyTokenTooltip(false),\n  });\n};\n\n/**\n * Toggle the display of GM/Player info in the token tooltip\n *\n * @internal\n * @param {boolean} keyDown - Whether the key is pressed down\n * @returns {Promise<void>|void} A Promise that is resolved when the tooltip render handling is done\n */\nexport const _hideTokenTooltipGMInfo = (keyDown) => {\n  if (!pf1.tooltip) return;\n  pf1.tooltip.forceHideGMInfo = keyDown;\n  pf1.tooltip.refresh();\n};\n\n/**\n * @internal\n * @param {*} stickify\n */\nexport const _stickyTokenTooltip = (stickify) => {\n  if (!pf1.tooltip) return;\n  pf1.tooltip.sticky = stickify;\n};\n\n/**\n * Toggle the display of the token tooltip\n *\n * @internal\n * @param {boolean} keyDown - Whether the key is pressed down\n * @returns {Promise<void>|void} A Promise that is resolved when the tooltip render handling is done\n */\nexport const _hideTokenTooltip = (keyDown) => {\n  if (!pf1.tooltip) return;\n  if (game.settings.get(\"pf1\", \"tooltipConfig\")?.hideWithoutKey === true) pf1.tooltip.forceHide = !keyDown;\n  else pf1.tooltip.forceHide = keyDown;\n  pf1.tooltip.refresh();\n};\n","export class TokenDocumentPF extends TokenDocument {\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    this._preCreateSetSize();\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.recursive === false) return;\n\n    const flags = changed.flags?.pf1;\n    if (flags) {\n      // Delete flags instead of turning them false\n      const deleteFlags = [\"staticSize\", \"disableLowLight\", \"customVisionRules\"];\n      for (const flag of deleteFlags) {\n        if (flags[flag] === false) {\n          flags[`-=${flag}`] = null;\n          delete flags[flag];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle actor size during token creation.\n   */\n  _preCreateSetSize() {\n    if (!this.actor) return;\n\n    // Apply token size\n    if (this.getFlag(\"pf1\", \"staticSize\")) return;\n    const sizeConf = pf1.config.tokenSizes[this.actor.system.traits?.size];\n    if (!sizeConf) return;\n\n    this.updateSource({\n      width: sizeConf.w,\n      height: sizeConf.h,\n      texture: {\n        scaleX: sizeConf.scale * this.actor.prototypeToken.texture.scaleX,\n        scaleY: sizeConf.scale * this.actor.prototypeToken.texture.scaleY,\n      },\n    });\n  }\n\n  static getTrackedAttributes(data, path = []) {\n    const attr = super.getTrackedAttributes(data, path);\n\n    // BUG: This causes these keys to be duplicated in default token config\n    if (path[0] === \"attributes\") {\n      if (path.length === 1) {\n        attr.value.push(\n          [\"attributes\", \"hp\", \"temp\"],\n          [\"attributes\", \"hp\", \"nonlethal\"],\n          [\"attributes\", \"vigor\", \"temp\"]\n        );\n      }\n    }\n\n    // If data is missing entirely, AC will not be listed but the others will\n    if (!data) {\n      attr.value.push([\"attributes\", \"ac\", \"normal\", \"total\"]);\n    }\n\n    return attr;\n  }\n\n  /**\n   * Hijack Token health bar rendering to include temporary and temp-max health in the bar display\n   *\n   * @param barName\n   * @param root0\n   * @param root0.alternative\n   */\n  getBarAttribute(barName, { alternative = null } = {}) {\n    let data;\n    try {\n      data = super.getBarAttribute(barName, { alternative: alternative });\n    } catch (e) {\n      data = null;\n    }\n\n    // Make resources editable\n    if (data?.attribute.startsWith(\"resources.\")) data.editable = true;\n\n    const offsetAttributes = [\"attributes.hp\", \"attributes.wounds\", \"attributes.vigor\"];\n    if (offsetAttributes.includes(data?.attribute)) {\n      // Add temp HP on top\n      const temp = foundry.utils.getProperty(this.actor?.system, data.attribute + \".temp\") || 0;\n      data.value += temp;\n      // Allow editing\n      data.editable = true;\n    }\n\n    return data;\n  }\n\n  prepareBaseData() {\n    this._syncSenses();\n\n    super.prepareBaseData();\n  }\n\n  /**\n   * Synchronize senses from actor.\n   */\n  _syncSenses() {\n    if (!this.actor) return;\n    if (!game.settings.get(\"pf1\", \"systemVision\")) return;\n    if (this.getFlag(\"pf1\", \"customVisionRules\")) return;\n\n    this.detectionModes = [];\n\n    if (!this.sight.enabled) return;\n\n    // Get base range from source data\n    const baseRange = this._source.sight.range;\n\n    this.detectionModes = [];\n\n    this.sight.visionMode = \"basic\";\n\n    // Basic detection\n    const basicMode = { id: DetectionMode.BASIC_MODE_ID, enabled: true, range: baseRange };\n    this.detectionModes.push(basicMode);\n\n    const senses = this.actor?.system?.traits?.senses ?? {};\n\n    const convertDistance = (d) => pf1.utils.convertDistance(d)[0];\n\n    // Darkvision\n    const darkvision = senses.dv ?? 0;\n    if (darkvision > 0) {\n      this.sight.visionMode = \"darkvision\";\n      // Upgrade basic mode range if greater\n      basicMode.range = Math.max(baseRange, convertDistance(darkvision));\n    }\n\n    // -----------------------\n\n    // See invisibility\n    if (senses.si) {\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: basicMode.range });\n    }\n\n    // True seeing\n    const trueseeing = senses.tr ?? 0;\n    if (trueseeing > 0) {\n      // Add normal vision within range of true seeing\n      const trr = convertDistance(trueseeing);\n      basicMode.range = Math.max(trr, basicMode.range);\n      if (trueseeing > darkvision) this.sight.visionMode = \"basic\";\n\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: trr, limited: true });\n    }\n\n    this.sight.range = Math.max(baseRange, basicMode.range);\n\n    // Tremor sense\n    if (senses.ts) {\n      this.detectionModes.push({ id: \"feelTremor\", enabled: true, range: convertDistance(senses.ts) });\n    }\n\n    // Blind sense\n    if (senses.bse) {\n      this.detectionModes.push({ id: \"blindSense\", enabled: true, range: convertDistance(senses.bse) });\n    }\n\n    // Blind sight\n    if (senses.bs) {\n      this.detectionModes.push({ id: \"blindSight\", enabled: true, range: convertDistance(senses.bs) });\n    }\n\n    // Sort detection modes\n    this.detectionModes.sort(this.constructor._sortDetectionModes);\n\n    // Update vision advanced fields with current mode's defaults\n    const visionDefaults = CONFIG.Canvas.visionModes[this.sight.visionMode]?.vision?.defaults || {};\n    for (const fieldName of [\"attenuation\", \"brightness\", \"saturation\", \"contrast\"]) {\n      if (fieldName in visionDefaults) {\n        this.sight[fieldName] = visionDefaults[fieldName];\n      }\n    }\n  }\n\n  static _sortDetectionModes(a, b) {\n    if (a.id === DetectionMode.BASIC_MODE_ID) return -1;\n    if (b.id === DetectionMode.BASIC_MODE_ID) return 1;\n\n    const src = { a: CONFIG.Canvas.detectionModes[a.id], b: CONFIG.Canvas.detectionModes[b.id] };\n    return (src.a?.constructor.PRIORITY ?? 0) - (src.b?.constructor.PRIORITY ?? 0);\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\n\n/**\n * Basic actor with no built-in functionality.\n *\n * @deprecated Obsolete with Foundry v11\n */\nexport class BasicActorPF extends ActorBasePF {\n  constructor(...args) {\n    super(...args);\n\n    foundry.utils.logCompatibilityWarning(\n      `Basic actor type is obsolete with Foundry v11. Actor \"${this.uuid}\" will become nonfunctional in the future.`,\n      {\n        since: \"PF1 v9\",\n        until: \"PF1 v11\",\n      }\n    );\n  }\n\n  _resetInherentTotals() {}\n\n  _setSourceDetails() {}\n\n  prepareBaseData() {}\n\n  prepareDerivedData() {}\n\n  applyActiveEffects() {}\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\nexport class ActorCharacterPF extends ActorPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    // Link token data by default\n    if (data.prototypeToken?.actorLink === undefined) {\n      tokenUpdate.actorLink = true;\n    }\n\n    // Enable vision by default\n    if (game.settings.get(\"pf1\", \"characterVision\") && data.prototypeToken?.sight?.enabled === undefined) {\n      tokenUpdate.sight = { enabled: true };\n    }\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"pcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Update experience\n    this._updateExp(changed);\n  }\n\n  /**\n   * Handle relative XP change and constrain it to appropriate minimum value.\n   *\n   * @protected\n   * @param {object} changed\n   */\n  _updateExp(changed) {\n    const xpData = changed.system.details?.xp;\n\n    if (xpData?.value === 0) {\n      // Reset XP to minimum possible\n      const level =\n        this.itemTypes.class?.filter((o) => o.subType !== \"mythic\").reduce((cur, o) => cur + o.system.level, 0) ?? 0;\n\n      xpData.value = level > 0 ? this.getLevelExp(level - 1) : 0;\n    }\n  }\n\n  /**\n   * Amount of experience required to gain next level at specific character level.\n   *\n   * @example\n   * getLevelExp(1) // -> 3000, the XP needed for level 2\n   *\n   * @param {number} level - Desired level to level-up.\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {number} - The XP required for next level.\n   * @throws {Error} - If invalid level is provided.\n   */\n  getLevelExp(level, { rollData = null } = {}) {\n    if (!Number.isInteger(level) || !(level >= 0)) throw new Error(`Level \"${level}\" must be zero or greater integer.`);\n    if (level === 0) return 0; // Explicit case for absolute minimum.\n\n    const config = game.settings.get(\"pf1\", \"experienceConfig\");\n    const track = config.track;\n\n    // Preset experience tracks\n    if ([\"fast\", \"medium\", \"slow\"].includes(track)) {\n      const levels = pf1.config.CHARACTER_EXP_LEVELS[track];\n      // Normal levels\n      if (level < levels.length) return levels[level];\n      // Otherwise return last possible\n      else return levels.at(-1);\n    }\n\n    // Custom formula experience track\n    let totalXP = 0;\n    if (config.custom.formula.length > 0) {\n      rollData ??= this.getRollData();\n      for (let a = 0; a < level; a++) {\n        rollData.level = a + 1;\n        const roll = RollPF.safeRollSync(config.custom.formula, rollData);\n        totalXP += roll.total;\n      }\n      delete rollData.level; // Cleanup\n    }\n\n    return totalXP;\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const actorData = this.system;\n\n    actorData.details ??= {};\n\n    // Prepare experience data\n    const level = actorData.details.level?.value || 1;\n\n    actorData.details.xp ??= {};\n\n    const maxExp = this.getLevelExp(level);\n    actorData.details.xp.max = maxExp;\n\n    // Experience bar\n    const curXp = actorData.details.xp.value;\n    // Maxed out XP needs no math\n    if (curXp >= maxExp) {\n      actorData.details.xp.pct = 100;\n    } else {\n      const prior = this.getLevelExp(level - 1 || 0);\n      actorData.details.xp.pct = ((Math.clamped(curXp, prior, maxExp) - prior) / (maxExp - prior)) * 100;\n    }\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\nexport class ActorNPCPF extends ActorPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"npcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n    this.system.details.cr.total = this.getCR();\n  }\n\n  prepareSpecificDerivedData() {\n    super.prepareSpecificDerivedData();\n\n    this._prepareCR();\n  }\n\n  _prepareCR() {\n    // Reset CR\n    foundry.utils.setProperty(this.system, \"details.cr.total\", this.getCR());\n\n    // Reset experience value\n    let newXP = 0;\n    try {\n      const crTotal = this.system.details?.cr?.total || 0;\n      newXP = this.getCRExp(crTotal);\n    } catch (e) {\n      newXP = this.getCRExp(1);\n    }\n    foundry.utils.setProperty(this.system, \"details.xp.value\", newXP);\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasArmorProficiency(item) {\n    // Assume NPCs to be proficient with their armor\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasArmorProficiency(item) : true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasWeaponProficiency(item, options = {}) {\n    // Assume NPCs to be proficient with their weapon\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasWeaponProficiency(item, options) : true;\n  }\n\n  /**\n   * Get challegne rating.\n   * Applies CR offset modifications from templates.\n   *\n   * @returns {number}\n   */\n  getCR() {\n    const base = this.system.details?.cr?.base ?? 0;\n\n    // Gather CR from templates\n    const templates = this.itemTypes.feat.filter((item) => item.subType === \"template\" && item.isActive);\n\n    return templates.reduce((cur, item) => {\n      const crOffset = item.system.crOffset;\n      if (crOffset) {\n        cur += RollPF.safeRollSync(crOffset, item.getRollData()).total;\n      }\n      return cur;\n    }, base);\n  }\n\n  /**\n   * Return the amount of experience granted by killing a creature of a certain CR.\n   *\n   * @param {number} cr - The creature's challenge rating\n   * @returns {number|null} - The amount of experience granted per kill. Or null if the CR was invalid.\n   */\n  getCRExp(cr) {\n    if (cr < 1.0) return Math.floor(Math.max(400 * cr, 0));\n    return pf1.config.CR_EXP_LEVELS[cr] || null;\n  }\n}\n","import { ActorNPCPF } from \"./actor-npc.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorHauntPF extends ActorNPCPF {\n  prepareBaseData() {\n    // Forced deletion to ensure rolldata gets refreshed.\n    delete this._rollData;\n\n    // Needed for getRollData and ActorPF, but useless for the actor\n    this.system.abilities = {\n      str: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n\n    this.system.skills ??= {};\n    this.sourceDetails = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    this.system.details.cr.total = this.system.details.cr.base;\n    this.system.attributes.init.total = this.system.attributes.init.value;\n\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    this._prepareCR();\n\n    this.prepareHealth();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update item resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    this._initialized = true;\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter(\n      (item) =>\n        item.isActive &&\n        (item.system.changes?.length > 0 || Object.values(item.system.changeFlags ?? {}).some((v) => !!v))\n    );\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Caster Level\n    result.cl = result.details.cl;\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Set size index\n    const sizeChart = Object.keys(pf1.config.sizeChart);\n    result.size = sizeChart.indexOf(result.traits.size);\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = pf1.documents.actor.ActorPF.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Haunts don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    this._rollData = result;\n    return result;\n  }\n}\n","import { ActorNPCPF } from \"./actor-npc.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorTrapPF extends ActorNPCPF {\n  prepareBaseData() {\n    // Forced deletion to ensure rolldata gets refreshed.\n    delete this._rollData;\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    this.system.traits = { size: \"med\" };\n\n    this.system.abilities = {\n      str: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.system.attributes = {\n      attack: { general: 0, shared: 0 },\n      woundThresholds: {},\n    };\n\n    this.system.skills ??= {};\n    this.sourceDetails = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n  }\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    this.system.details.cr.total = this.system.details.cr.base;\n\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    this._prepareCR();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update item resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    this._initialized = true;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _resetInherentTotals() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _setSourceDetails() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter(\n      (item) =>\n        item.isActive &&\n        (item.system.changes?.length > 0 || Object.values(item.system.changeFlags ?? {}).some((v) => !!v))\n    );\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Spoof size as Medium instead of letting it fail to Fine\n    result.size = 4;\n    // Spoof range as medium tall creature\n    result.range = pf1.documents.actor.ActorPF.getReach();\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    this._rollData = result;\n    return result;\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorVehiclePF extends ActorPF {\n  prepareBaseData() {\n    // Forced deletion to ensure rolldata gets refreshed.\n    delete this._rollData;\n\n    this._resetInherentTotals();\n\n    this.sourceInfo = {};\n    this.changeFlags = {};\n    this.system.resources ??= {};\n\n    // Add base initiative\n    this.system.attributes.init.total = this.system.attributes.init.value;\n    this.system.attributes.cmd.total = 10;\n    this.system.attributes.ac.normal.total = this.system.attributes.ac.normal.base;\n    this.system.attributes.savingThrows.save.total = this.system.attributes.savingThrows.save.base;\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n    this.system.attributes.woundThresholds ??= {};\n    this.system.skills ??= {};\n    this.system.attributes.speed ??= {};\n    this.system.attributes.cmb ??= {};\n\n    const strValue = this.system.abilities.str.value;\n    this.system.abilities = {\n      str: {\n        value: strValue,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.system.attributes.cmbAbility = \"str\";\n\n    this.sourceDetails = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n  }\n\n  _getInherentTotalsKeys() {\n    return {\n      \"attributes.hp.max\": this.system.attributes?.hp?.base ?? 0,\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n    };\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   */\n  _getBaseValueFillKeys() {\n    return [{ parent: \"abilities.str\", key: \"base\", value: 0 }];\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    this.prepareHealth();\n    this._computeEncumbrance();\n\n    this.prepareCMB();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update item resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    this._initialized = true;\n\n    this._setSourceDetails();\n  }\n\n  /**\n   * @override\n   */\n  prepareCMB() {\n    const base = this.system.abilities.str.value || 0,\n      size = this.system.traits.size || \"med\",\n      szCMBMod = pf1.config.sizeSpecialMods[size] ?? 0;\n\n    this.system.attributes.cmb.total = base + szCMBMod;\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * Skips addDefaultChanges() step\n   *\n   * @override\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter(\n      (item) =>\n        item.isActive &&\n        (item.system.changes?.length > 0 || Object.values(item.system.changeFlags ?? {}).some((v) => !!v))\n    );\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    changes.push(\n      // CMB\n      new pf1.components.ItemChange({\n        formula: \"@abilities.str.value\",\n        operator: \"add\",\n        target: \"cmb\",\n        type: \"base\",\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      }),\n      // CMD\n      new pf1.components.ItemChange({\n        formula: \"@attributes.cmd.value\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"base\",\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      })\n    );\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n      /* ----------------------------- */\n\n    // Set size index\n    const sizeChart = Object.keys(pf1.config.sizeChart);\n    result.size = sizeChart.indexOf(result.traits.size);\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = pf1.documents.actor.ActorPF.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Traps don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    this._rollData = result;\n    return result;\n  }\n\n  /**\n   * @remarks - Vehicles don't have weightless currency\n   * @override\n   * @inheritDoc\n   */\n  getTotalCurrency({ inLowestDenomination = true } = {}) {\n    const total = this.getCurrency(\"currency\", { inLowestDenomination: true });\n    return inLowestDenomination ? total : total / 100;\n  }\n}\n","import { RollPF } from \"module/dice/roll.mjs\";\nimport { openJournal } from \"@utils\";\n\n/**\n * Basic item filter function for {@link findItem}\n *\n * @internal\n * @param {Item|object} item - Item or index entry to match\n * @param {object} query - Query data\n * @returns {boolean}\n */\nexport function matchItem(item, query) {\n  const { name, type } = query;\n  return item.name === name && (type ? item.type === type : true);\n}\n\n/**\n * Find item based on basic criteria.\n *\n * @internal\n * @param {string} name - Item name to search for\n * @param {object} [options] - Additional options\n * @param {string} [options.type] - Document type, such as \"buff\"\n * @returns {string|null} - Most appropriate matching item's UUID\n */\nexport async function findItem(name, { type } = {}) {\n  // Items directory has priority\n  const item = game.items.find((i) => pf1.chat.enrichers.matchItem(i, { name, type }));\n  if (item) return item.uuid;\n\n  const packTypePriority = {\n    items: 1_000,\n    world: 2_000,\n    module: 3_000,\n    system: 4_000,\n  };\n\n  // Sort packs by above criteria\n  const packs = [...game.packs]\n    .map((p) => ({\n      pack: p,\n      visible: p.visible ?? true,\n      disabled: p.config.pf1?.disabled ?? false,\n      sort: packTypePriority[p.metadata.packageType],\n    }))\n    .filter((p) => !p.disabled && p.visible && p.pack.metadata.type === \"Item\")\n    .sort((a, b) => a.sort - b.sort);\n\n  for (const { pack } of packs) {\n    if (!pack.indexed) await pack.getIndex();\n    const item = pack.index.find((i) => pf1.chat.enrichers.matchItem(i, { name, type }));\n    if (item) return item.uuid;\n  }\n\n  return null;\n}\n\n/**\n * Helper class for making `CONFIG.TextEditor.enrichers` usage easier.\n */\nexport class PF1TextEnricher {\n  id;\n\n  pattern;\n\n  match;\n\n  enricher;\n\n  /**\n   * @abstract\n   * @param {Event} event Click event\n   * @param {HTMLElement} target Target element\n   */\n  click(event, target) {}\n\n  /**\n   * @abstract\n   * @param {Event} event Drag event\n   * @param {HTMLElement} target Target element\n   */\n  drag(event, target) {}\n\n  /**\n   * @param {string} id Unique identifier\n   * @param {RegExp} pattern Pattern for content matching.\n   * @param {Function} enricher Function for generating enrichted content.\n   * @param {object} [interaction] Additional interaction options\n   * @param {string[]} [interaction.match] CSS selectors for triggering click or drag handler\n   * @param {Function} [interaction.click] Click handler\n   * @param {Function} [interaction.drag] Drag handler\n   */\n  constructor(id, pattern, enricher, { click, drag } = {}) {\n    if (!(pattern instanceof RegExp)) throw new Error(\"TextEnricher pattern must be a regular expression\");\n    if (!pattern.global) throw new Error(\"TextEnricher pattern must be global\");\n    this.id = id;\n    this.pattern = pattern;\n    this.enricher = enricher.bind(this);\n    if (click) this.click = click;\n    if (drag) this.drag = drag;\n  }\n}\n\n/**\n * @param {Element} el\n * @param {string} icon\n */\nfunction setIcon(el, icon) {\n  const i = document.createElement(\"i\");\n  i.classList.add(...icon.split(\" \"));\n  el.prepend(i, \" \");\n}\n\n/**\n * Parses duration string into distinct time and unit.\n *\n * @param {string} duration\n */\nfunction parseDuration(duration) {\n  const re = /(?<time>\\d+)(?<unit>\\w+)?/.exec(duration);\n  if (!re) return [];\n  let { time, unit } = re.groups;\n\n  unit = (() => {\n    switch (unit?.[0]) {\n      case \"r\":\n        return game.i18n.localize(\"PF1.Time.Period.round.Label\");\n      case undefined:\n      case \"s\":\n        return game.i18n.localize(\"PF1.Time.Period.second.Label\");\n      case \"h\":\n        return game.i18n.localize(\"PF1.Time.Period.hour.Label\");\n      case \"m\":\n        return game.i18n.localize(\"PF1.Time.Period.minute.Label\");\n      default:\n        return null;\n    }\n  })();\n\n  return [parseInt(time), unit];\n}\n\n/**\n * Create enriched element for interaction.\n *\n * @param {object} config - Element configuration\n * @param {string} [config.label] - Prefix label for the element\n * @param {string} [config.icon] - Font Awesome icon classes\n * @param {boolean} [config.click=false] - Is this a clickable element?\n * @param {boolean} [config.drag=false] - Is this draggable element?\n * @param {string} config.handler - {@link PF1TextEnricher} ID\n * @param {Record<string,string>} [config.options] - Addional options set as dataset elements.\n * @param {boolean} [config.broken=false] - Is this broken?\n * @returns {HTMLElement} - The element.\n */\nexport function createElement({ label, icon, click = false, drag = false, handler, options, broken = false } = {}) {\n  const a = document.createElement(\"a\");\n  if (click || drag) a.classList.add(\"pf1-link\");\n  else a.classList.add(\"pf1-info\");\n  if (click) a.classList.add(\"button\");\n  if (drag) {\n    a.classList.add(\"content\");\n    a.draggable = true;\n  }\n  if (icon) setIcon(a, icon);\n\n  if (label) a.append(label, \": \");\n  if (handler) a.dataset.handler = handler;\n\n  if (broken) a.classList.add(\"broken\");\n\n  setElementOptions(a, options);\n\n  return a;\n}\n\n/**\n * Get cards speaker\n *\n * @param {Element} target\n * @returns {Actor|undefined}\n */\nfunction getSpeaker(target) {\n  const messageId = target.closest(\"[data-message-id]\")?.dataset.messageId;\n  const message = game.messages.get(messageId);\n  if (!message) return;\n  return ChatMessage.getSpeakerActor(message.speaker);\n}\n\n/**\n * Get sheet actor\n *\n * @param {Element} target\n * @returns {Actor|undefined}\n */\nfunction getSheetActor(target) {\n  const appId = target.closest(\".app[data-appid]\")?.dataset.appid;\n  return ui.windows[appId]?.actor;\n}\n\n/**\n * Get relevant actors based on the enriched element data.\n *\n * @param {HTMLElement} button - Clicked element.\n * @returns {ActorPF[]} - Relevant actors\n */\nexport function getRelevantActors(button) {\n  const actors = [];\n\n  const as = button.dataset.as;\n  const asSpeaker = button.dataset.speaker || as === \"speaker\";\n  const asSheet = as === \"sheet\";\n  const auto = [\"auto\", \"context\"].includes(as);\n\n  // Speaker\n  if (asSpeaker || auto) {\n    const actor = getSpeaker(button);\n    if (actor) actors.push(actor);\n  }\n  if (asSheet || auto) {\n    const actor = getSheetActor(button);\n    if (actor) actors.push(actor);\n  }\n\n  if (!as) {\n    // Controlled tokens\n    if (canvas.tokens.controlled.length) {\n      const tokenActors = canvas.tokens.controlled.map((t) => t.actor);\n      for (const actor of tokenActors) {\n        if (actor) actors.push(actor);\n      }\n    }\n    // Configured character\n    else {\n      const actor = game.user.character;\n      if (actor) actors.push(actor);\n    }\n  }\n\n  if (actors.length == 0) {\n    ui.notifications.error(game.i18n.localize(\"PF1.EnrichedText.Errors.NoActors\"));\n    throw new Error(\"No valid actors found.\");\n  }\n\n  return actors;\n}\n\n/**\n * Add tooltip to enriched element.\n *\n * @param {Element} el Target element\n */\nexport function generateTooltip(el) {\n  const { roll, formula, bonus, speaker, name, level } = el.dataset;\n\n  const tooltip = [];\n  if (name) tooltip.push(name);\n  if (roll) {\n    if (/d\\d+/.test(roll)) tooltip.push(game.i18n.localize(\"PF1.Roll\") + `: ${roll}`);\n    else tooltip.push(game.i18n.format(\"PF1.TakeX\", { number: roll }));\n  } else if (formula) {\n    tooltip.push(formula);\n  }\n  if (level) tooltip.push(game.i18n.localize(\"PF1.Level\") + `: ${level}`);\n  if (bonus) tooltip.push(game.i18n.localize(\"PF1.Bonus\") + `: ${bonus}`);\n  if (speaker) tooltip.push(game.i18n.localize(\"PF1.EnrichedText.AsSpeaker\"));\n\n  el.dataset.tooltip = tooltip.join(\"<br>\");\n}\n\n/**\n * Break down options string into dataset properties.\n *\n * @internal\n * @param {Element} el Target element\n * @param {string} options Options string\n */\nexport function setElementOptions(el, options) {\n  if (options) {\n    for (const option of options.split(\";\")) {\n      const [key, value] = option.split(\"=\", 2);\n      el.dataset[key] = value ?? true;\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSave(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { roll, bonus, type } = target.dataset;\n  if (!type) throw new Error(\"No save type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSavingThrow(type, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAbility(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { ability, bonus, roll } = target.dataset;\n  if (!ability) throw new Error(\"No ability check type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollAbilityTest(ability, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} _event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onDraw(_event, target) {\n  const { ident } = target.dataset;\n  if (!ident) throw new Error(\"No roll table defined\");\n\n  const table = await fromUuid(ident);\n  if (!table) throw new Error(`Roll table not found for \"${ident}\"`);\n  await table.draw({ roll: true, displayChat: true });\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSkill(event, target) {\n  // Add additional options\n  const options = {};\n  const { skill, bonus, roll, info } = target.dataset;\n  if (!skill) throw new Error(\"No skill key defined\");\n\n  if (info) {\n    const journal = pf1.config.skillCompendiumEntries[skill];\n    if (!journal) throw new Error(`Journal entry not found for skill \"${skill}\"`);\n    return void openJournal(journal);\n  }\n\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  const actors = getRelevantActors(target);\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSkill(skill, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onUse(event, target) {\n  // Add additional options\n  const options = {};\n  const { type, item: itemName, action: actionIdent, speaker } = target.dataset;\n  if (!itemName) throw new Error(\"No item name defined\");\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    const item = actor.items.find((item) => {\n      if (type && item.type !== type) return false;\n      return item.name.localeCompare(itemName, undefined, { usage: \"search\" }) == 0;\n    });\n\n    if (!item) {\n      const msg = game.i18n.format(\"PF1.Warning.NoItemOnActor\", { actor: actor.name, item: itemName });\n      ui.notifications.warn(msg, { console: false });\n      console.warn(\"PF1 | @Use |\", msg, actor);\n      continue;\n    }\n\n    let itemAction;\n    if (actionIdent) {\n      const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionIdent);\n      const { actionTag, actionId } = re?.groups ?? {};\n      const actionName = !actionTag && !actionId ? actionIdent : null;\n      itemAction = item.actions.find((act) => {\n        if (actionId) return act.id === actionId;\n        if (actionTag) return act.data.tag === actionTag;\n        return act.name.localeCompare(actionName, undefined, { usage: \"search\" }) == 0;\n      });\n\n      if (!itemAction) {\n        const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, action: actionIdent });\n        ui.notifications.warn(msg, { console: false });\n        console.warn(\"PF1 | @Use |\", msg, actor);\n        continue;\n      }\n\n      itemAction.use();\n    } else {\n      item.use();\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAction(event, target) {\n  // Add additional options\n  const options = {};\n  const { action: actionIdent } = target.dataset;\n\n  const msgId = target.closest(\".chat-message[data-message-id]\")?.dataset.messageId;\n  const msg = game.messages.get(msgId);\n  const item = msg.itemSource;\n\n  if (!item) {\n    const warn = game.i18n.format(\"PF1.EnrichedText.Errors.NoItemInMessage\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.warn(\"PF1 | @Action |\", warn, msg);\n  }\n\n  const actor = item.actor;\n\n  const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionIdent);\n  const { actionTag, actionId } = re?.groups ?? {};\n  const actionName = !actionTag && !actionId ? actionIdent : null;\n\n  const action = item.actions.find((act) => {\n    if (actionId) return act.id === actionId;\n    if (actionTag) return act.data.tag === actionTag;\n    return act.name.localeCompare(actionName, undefined, { usage: \"search\" }) == 0;\n  });\n\n  if (!action) {\n    const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, actor: actor.name });\n    ui.notifications.warn(msg, { console: false });\n    return void console.warn(\"PF1 | @Action |\", msg, actor);\n  }\n\n  action.use();\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onHealth(event, target) {\n  const { command, formula, speaker, nonlethal, vars, dual } = target.dataset;\n\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  if (nonlethal) options.asNonlethal = true;\n  if (dual) options.dualHeal = true;\n\n  const targetRolldata = vars === \"target\";\n\n  let rollData;\n  if (!targetRolldata) rollData = getSpeaker(target)?.getRollData();\n\n  for (const actor of actors) {\n    if (targetRolldata) rollData = actor.getRollData();\n    let value = await RollPF.safeRollAsync(formula, rollData).total;\n    if (command === \"heal\") value = -value;\n    actor.applyDamage(value, { ...options, event, element: target });\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onBrowse(event, target) {\n  const { category, options } = target.dataset;\n\n  // TODO: Configure browser filters with options.\n  // TODO: Find closest browser via Sørensen–Dice coefficient or something.\n\n  const browser = pf1.applications.compendiums[category];\n  if (browser) browser.render(true, { focus: true });\n  else ui.notifications.error(game.i18n.format(\"PF1.EnrichedText.Errors.BrowserNotFound\", { category }));\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onCondition(event, target) {\n  const { condition, toggle, remove, duration, options, info } = target.dataset;\n\n  /*\n  if (duration) {\n    const [time, unit] = parseDuration(duration);\n  }\n  */\n\n  if (info) {\n    const journal = pf1.registry.conditions.get(condition)?.journal;\n    if (!journal) throw new Error(`Journal entry not found for condition \"${condition}\"`);\n    return void openJournal(journal);\n  }\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    if (toggle) {\n      actor.toggleCondition(condition);\n    } else {\n      actor.setCondition(condition, !remove);\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onApply(event, target) {\n  const { uuid, level } = target.dataset;\n\n  const actors = getRelevantActors(target);\n  if (actors.length == 0) return;\n\n  const item = await fromUuid(uuid);\n  if (!item) {\n    const warn = game.i18n.localize(\"PF1.EnrichedText.Errors.ItemNotFound\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.error(\"PF1 | @Apply |\", warn, uuid);\n  }\n\n  // TODO: Support more types (race, class, and few others should never be here)\n  if (item.type !== \"buff\") {\n    return void ui.notifications.error(\n      game.i18n.format(\"PF1.EnrichedText.Errors.UnsupportedItemType\", { type: item.type })\n    );\n  }\n\n  // Prepare item\n  const itemData = game.items.fromCompendium(item, { clearFolder: true });\n\n  itemData.system.active = true;\n  if (level !== undefined) {\n    itemData.system.level = Number(level);\n  }\n\n  // Apply\n  for (const actor of actors) {\n    // Activate existing item with same sourceId\n    const old = actor.itemTypes[item.type].find((i) => i.getFlag(\"core\", \"sourceId\") === uuid);\n    if (old) {\n      const activationData = { system: { active: true } };\n      if (level !== undefined) activationData.system.level = level;\n      old.update(activationData);\n    }\n    // Add new\n    else {\n      Item.implementation.create(itemData, { parent: actor });\n    }\n  }\n}\n\n/**\n * Text enrichers\n */\nexport const enrichers = [\n  // @Apply\n  new PF1TextEnricher(\n    \"apply\",\n    /@Apply\\[(?<ident>.*?)(?:;(?<options>.*?))?\\](?:\\{(?<label>.*?)})?/g,\n    async (match, _options) => {\n      const { ident, options, label } = match.groups;\n\n      const item = fromUuidSync(ident) ?? fromUuidSync(await findItem(ident, { type: \"buff\" }));\n\n      if (!item) console.warn(\"PF1 | @Apply | Could not find item\", ident);\n\n      const broken = !item;\n\n      const a = createElement({ label, click: true, handler: \"apply\", options, broken });\n\n      if (item) {\n        a.dataset.name = `${game.i18n.localize(\"DOCUMENT.Item\")}: ${item.name}`;\n        a.dataset.uuid = item.uuid;\n        a.append(item.name);\n\n        generateTooltip(a);\n      } else {\n        a.replaceChildren(ident);\n      }\n\n      setIcon(a, \"fa-solid fa-angles-right\");\n\n      return a;\n    },\n    {\n      click: onApply,\n    }\n  ),\n  // @Save\n  new PF1TextEnricher(\n    \"save\",\n    /@Save\\[(?<save>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, { rollData } = {}) => {\n      const { save, options, label } = match.groups;\n      const a = createElement({ label, click: true, handler: \"save\", options });\n      const name = CONFIG.PF1.savingThrows[save];\n\n      let dc = a.dataset.dc;\n\n      // DC is not simple value\n      // For supporting things like: @Save[ref;dc=15+@attributes.hd.total + 2]\n      if (!/^\\d+$/.test(dc)) {\n        a.dataset.formula = dc;\n        const roll = RollPF.safeRollSync(dc, rollData, { formula: dc }, {}, { minimize: true });\n        dc = roll.total;\n      }\n\n      const title = dc !== undefined ? game.i18n.format(\"PF1.SavingThrowButtonLabel\", { type: name, dc }) : name;\n      a.append(title);\n      a.dataset.type = save;\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-shield-halved\");\n\n      return a;\n    },\n    {\n      click: onSave,\n    }\n  ),\n  // @Ability\n  new PF1TextEnricher(\n    \"ability\",\n    /@Ability\\[(?<ability>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { ability, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"ability\", options });\n      const title = CONFIG.PF1.abilities[ability] ?? ability;\n      a.dataset.ability = ability;\n      a.append(title);\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-brain\");\n\n      return a;\n    },\n    {\n      click: onAbility,\n    }\n  ),\n  // @Skill\n  new PF1TextEnricher(\n    \"skill\",\n    /@Skill\\[(?<skill>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { skill, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"skill\", options });\n      const title = CONFIG.PF1.skills[skill] ?? skill;\n      a.dataset.skill = skill;\n\n      if (a.dataset.info) {\n        const compendium = pf1.config.skillCompendiumEntries[skill];\n        if (!compendium) return;\n        setIcon(a, \"fa-solid fa-book\");\n      } else {\n        setIcon(a, \"fa-solid fa-hands-clapping\");\n      }\n\n      a.append(title);\n\n      generateTooltip(a);\n\n      return a;\n    },\n    {\n      click: onSkill,\n    }\n  ),\n  // @Use\n  new PF1TextEnricher(\n    \"use\",\n    /@Use\\[(?<item>.*?)(?:#(?<action>.*?))?(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n\n    (match, _options) => {\n      const { item, action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"use\", options });\n      a.append(item?.trim());\n      a.dataset.item = item?.trim();\n      if (action) {\n        const displayAction = action.replace(/^(id|tag):\\s*/, \"\")?.trim();\n        // TODO: pretty print action name if speaker option is enabled\n        a.append(` (${displayAction})`);\n        a.dataset.action = action?.trim();\n      }\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onUse,\n    }\n  ),\n  // @Action\n  new PF1TextEnricher(\n    \"action\",\n    /@Action\\[(?<action>.*?)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"action\", options });\n      // TODO: Pretty print the action name, especially if speaker option is enabled\n      a.append(action);\n      a.dataset.speaker = true;\n      a.dataset.action = action?.trim();\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onAction,\n    }\n  ),\n  // @Heal & @Damage\n  new PF1TextEnricher(\n    \"health\",\n    /@(?<command>Heal|Damage)\\[(?<formula>.*?)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { command, formula, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"health\", options });\n      a.dataset.command = command.toLowerCase();\n      a.dataset.formula = formula;\n\n      a.append(\n        game.i18n.format(`PF1.EnrichedText.Health.${command}`, {\n          value: label || formula,\n          NL: a.dataset.nonlethal ? game.i18n.localize(\"PF1.EnrichedText.Health.NL\") : \"\",\n        })\n      );\n\n      generateTooltip(a);\n\n      if (a.dataset.command === \"heal\") setIcon(a, \"fa-solid fa-heart-pulse\");\n      else setIcon(a, \"fa-solid fa-heart-crack\");\n\n      return a;\n    },\n    {\n      click: onHealth,\n    }\n  ),\n  // @Browse\n  new PF1TextEnricher(\n    \"browse\",\n    /@Browse\\[(?<category>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { category, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"browse\", options });\n\n      a.dataset.category = category;\n\n      let mainlabel;\n      const browser = pf1.applications.compendiums[category];\n      // BUG: Fails on world load\n      if (!browser) {\n        setIcon(a, \"fa-solid fa-link-slash\");\n        a.classList.add(\"invalid\");\n        mainlabel = category;\n      } else {\n        setIcon(a, \"fa-solid fa-book\");\n        mainlabel = game.i18n.localize(browser.constructor.typeName);\n      }\n\n      mainlabel = game.i18n.format(\"PF1.EnrichedText.Browse\", { value: mainlabel });\n\n      if (label) a.append(label);\n      else a.append(mainlabel);\n\n      generateTooltip(a);\n\n      if (label) a.dataset.tooltip = mainlabel;\n      if (!browser) {\n        if (label) a.dataset.tooltip += \"<br>\";\n        a.dataset.tooltip +=\n          game.i18n.localize(\"PF1.EnrichedText.Error\") +\n          \": \" +\n          game.i18n.localize(\"PF1.EnrichedText.Errors.NoCategory\");\n      }\n\n      return a;\n    },\n    {\n      click: onBrowse,\n    }\n  ),\n  // Weight\n  new PF1TextEnricher(\"weight\", /@Weight\\[(?<formula>.+?)(?:;(?<options>.*?))?\\]/g, (match, rollData) => {\n    const { formula, options } = match.groups;\n\n    const a = createElement({ options });\n\n    const isDual = !!a.dataset.dual;\n\n    const re = /^(?<value>.+?)\\s*(?<unit>lbs|kg)?$/.exec(formula);\n    const { value, unit } = re?.groups ?? {};\n    if (unit === \"kg\") {\n      a.dataset.metric = \"true\";\n      delete a.dataset.imperial;\n    } else if (unit === \"lbs\") {\n      a.dataset.imperial = \"true\";\n      delete a.dataset.metric;\n    }\n\n    const sourceMetric = !!a.dataset.metric;\n    const sourceImperial = !sourceMetric;\n\n    const total = RollPF.safeRollSync(value || \"0\", rollData).total;\n\n    let lbs = total,\n      kg = total;\n\n    if (sourceImperial) kg = pf1.utils.swapWeight(total, \"lbs\");\n    if (sourceMetric) lbs = pf1.utils.swapWeight(total, \"kg\");\n\n    const kgl = `${pf1.utils.limitPrecision(kg, 3)} ${game.i18n.localize(\"PF1.Kgs\")}`;\n    const lbsl = `${pf1.utils.limitPrecision(lbs, 3)} ${game.i18n.localize(\"PF1.Lbs\")}`;\n\n    const isMetric = pf1.utils.getWeightSystem() == \"metric\";\n\n    let label;\n    if (isDual) {\n      if (isMetric) label = `${kgl} (${lbsl})`;\n      else label = `${lbsl} (${kgl})`;\n    } else if (isMetric) label = kgl;\n    else label = lbsl;\n\n    a.textContent = label;\n\n    return a;\n  }),\n  // Distance\n  new PF1TextEnricher(\"distance\", /@Distance\\[(?<formula>.+?)(?:;(?<options>.*?))?\\]/g, (match, rollData) => {\n    const { formula, options } = match.groups;\n\n    const a = createElement({ options });\n\n    const isDual = !!a.dataset.dual;\n\n    const re = /^(?<value>.+?)\\s*(?<unit>ft|m)?$/.exec(formula);\n    const { value, unit } = re?.groups ?? {};\n    if (unit === \"m\") {\n      a.dataset.metric = \"true\";\n      delete a.dataset.imperial;\n    } else if (unit === \"ft\") {\n      a.dataset.imperial = \"true\";\n      delete a.dataset.metric;\n    }\n\n    const sourceMetric = !!a.dataset.metric;\n    const sourceImperial = !sourceMetric;\n\n    const total = RollPF.safeRollSync(value || \"0\", rollData).total;\n    let ft = total,\n      m = total;\n\n    if (sourceImperial) m = pf1.utils.swapDistance(total, \"ft\");\n    if (sourceMetric) ft = pf1.utils.swapDistance(total, \"m\");\n\n    const ml = `${pf1.utils.limitPrecision(m, 3)} ${pf1.config.measureUnitsShort.m}`;\n    const ftl = `${pf1.utils.limitPrecision(ft, 3)} ${pf1.config.measureUnitsShort.ft}`;\n\n    const isMetric = pf1.utils.getDistanceSystem() == \"metric\";\n\n    let label;\n    if (isDual) {\n      if (isMetric) label = `${ml} (${ftl})`;\n      else label = `${ftl} (${ml})`;\n    } else if (isMetric) label = ml;\n    else label = ftl;\n\n    a.textContent = label;\n\n    a.dataset.tooltip = formula;\n\n    return a;\n  }),\n  // @Condition\n  new PF1TextEnricher(\n    \"condition\",\n    /@Condition\\[(?<condition>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { condition, options, label } = match.groups;\n\n      // TODO: Find closest condition via Sørensen–Dice coefficient or something.\n      const cond = pf1.registry.conditions.get(condition);\n      const text = label || cond?.name || condition;\n\n      const broken = !cond;\n\n      const a = createElement({ click: true, handler: \"condition\", options, broken });\n      if (!cond) a.classList.add(\"broken\");\n\n      a.dataset.condition = condition;\n\n      if (a.dataset.disable) a.dataset.remove = true;\n\n      if (a.dataset.info) {\n        setIcon(a, \"fa-solid fa-book\");\n        if (!cond?.journal) a.classList.add(\"broken\");\n      } else if (a.dataset.remove) {\n        setIcon(a, \"fa-solid fa-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Remove\", { value: text });\n      } else if (a.dataset.toggle) {\n        setIcon(a, \"fa-solid fa-plus-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Toggle\", { value: text });\n      } else {\n        setIcon(a, \"fa-solid fa-plus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Add\", { value: text });\n      }\n\n      /*\n      if (a.dataset.duration) {\n        const [time, unit] = parseDuration(a.dataset.duration);\n        // TODO: i18n\n        const unitLabel = unit;\n        a.dataset.tooltip +=\n          \"<br>\" + game.i18n.format(\"PF1.EnrichedText.Condition.Duration\", { unit: unitLabel, period: time });\n      }\n      */\n\n      a.append(text);\n\n      return a;\n    },\n    {\n      click: onCondition,\n    }\n  ),\n  // @Draw\n  new PF1TextEnricher(\n    \"draw\",\n    /@Draw\\[(?<ident>.*?)\\](?:\\{(?<label>.*?)\\})?/g,\n    /**\n     * @param {any} match\n     * @param {unknown} _options\n     * @returns\n     */\n    async (match, _options) => {\n      const { ident, label } = match.groups;\n\n      const table = fromUuidSync(ident) || game.tables.getName(ident);\n\n      if (!table) console.warn(\"PF1 | @Draw | Could not find roll table\", ident);\n\n      const broken = !table;\n\n      const a = createElement({ click: true, handler: \"draw\", broken });\n\n      if (table) {\n        a.dataset.name = `${game.i18n.localize(\"DOCUMENT.RollTable\")}: ${table.name}`;\n        a.dataset.ident = table.uuid;\n\n        a.append(label || table.name);\n\n        generateTooltip(a);\n      } else {\n        a.replaceChildren(ident);\n      }\n\n      setIcon(a, \"fas fa-th-list\");\n\n      return a;\n    },\n    {\n      click: onDraw,\n    }\n  ),\n];\n\n/**\n * Register in setup phase so modules can alter the enrichers before they're registered\n * ... and become largely immutable without deeper modification.\n * Otherwise this could be done in init phase.\n */\nHooks.once(\"setup\", () => {\n  CONFIG.TextEditor.enrichers.push(...enrichers);\n});\n\n/**\n * Proxy click and drag events to the enrichers\n *\n * @param {JQuery<MouseEvent>} event Click event\n * @param click\n */\nconst onEnrichedInteraction = (event, click = true) => {\n  const target = event.currentTarget,\n    handler = target.dataset.handler,\n    enricher = enrichers.find((e) => e.id === handler);\n\n  if (!enricher) throw new Error(`Relevant enricher not found: ${handler}`);\n\n  if (target.classList.contains(\"broken\")) return;\n\n  event.stopPropagation();\n  event.preventDefault();\n\n  if (click) enricher.click(event, target);\n  else enricher.drag(event, target);\n};\n\n// Register click & drag handlers\nHooks.once(\"ready\", () => {\n  // Mimic Foundry listener handling for simplicity\n  // TODO: Use plain DOM instead\n  const body = $(\"body\");\n  body.on(\"click\", \"a.pf1-link.button\", (event) => onEnrichedInteraction(event, true));\n  //body.on(\"drag\", \"a.pf1-link.content\", (event) => onEnrichedInteraction(event, false));\n});\n","import { measureDistance } from \"../utils/lib.mjs\";\n\nconst withinAngle = (min, max, value) => {\n  min = Math.normalizeDegrees(min);\n  max = Math.normalizeDegrees(max);\n  value = Math.normalizeDegrees(value);\n\n  if (min < max) return value >= min && value <= max;\n  return value >= min || value <= max;\n};\n\n/**\n * @param {Point} point\n * @param {Rectangle} rect\n * @returns {boolean}\n */\nconst withinRect = (point, rect) => {\n  return point.x >= rect.x && point.x < rect.x + rect.width && point.y >= rect.y && point.y < rect.y + rect.height;\n};\n\n/**\n * Applies patches to core functions to integrate Pathfinder specific measurements.\n *\n * Replacement for `CONFIG.Canvas.layers.templates.layerClass`\n */\nexport class TemplateLayerPF extends TemplateLayer {\n  /**\n   * Foundry does not allow snapping template drag.\n   *\n   * @override\n   * @param {Event} event\n   */\n  _onDragLeftMove(event) {\n    if (!game.settings.get(\"pf1\", \"measureStyle\")) return super._onDragLeftMove(event);\n\n    const interaction = event.interactionData;\n    const { destination, layerDragState, preview, origin } = interaction;\n    if (layerDragState === 0) return;\n\n    // Snap the destination to the grid\n    const snapToGrid = !event.shiftKey;\n    if (snapToGrid) {\n      interaction.destination = canvas.grid.getSnappedPosition(destination.x, destination.y, this.gridPrecision);\n    }\n\n    // Compute the ray\n    const ray = new Ray(origin, destination);\n    const dist = canvas.dimensions.distance;\n    const ratio = canvas.dimensions.size / dist;\n\n    // Update the preview object\n    const baseDistance = ray.distance / ratio;\n    preview.document.distance = baseDistance;\n\n    const baseDirection = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n    preview.document.direction = baseDirection;\n\n    if (snapToGrid) {\n      switch (preview.document.t) {\n        case \"cone\": {\n          const halfAngle = CONFIG.MeasuredTemplate.defaults.angle / 2;\n          preview.document.direction = Math.floor((baseDirection + halfAngle / 2) / halfAngle) * halfAngle;\n          break;\n        }\n      }\n    }\n\n    preview.renderFlags.set({ refreshShape: true });\n\n    // Confirm the creation state\n    interaction.layerDragState = 2;\n  }\n}\n\nexport class MeasuredTemplatePF extends MeasuredTemplate {\n  /**\n   * @deprecated\n   */\n  getHighlightedSquares() {\n    foundry.utils.logCompatibilityWarning(\n      \"MeasuredTemplatePF.getHighlightedSquares() deprecated in favor of MeasuredTemplate._getGridHighlightPositions()\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n    return this._getGridHighlightPositions();\n  }\n\n  /**\n   * Get highlighted square coordinates.\n   *\n   * Supports only circle, cone and ray templates.\n   *\n   * @protected\n   * @override\n   * @returns {Point[]} - Array of grid coordinates\n   */\n  _getGridHighlightPositions() {\n    const templateType = this.document.t;\n    if (!this.ray || !game.settings.get(\"pf1\", \"measureStyle\") || ![\"circle\", \"cone\", \"ray\"].includes(templateType)) {\n      return super._getGridHighlightPositions();\n    }\n\n    const isCone = templateType === \"cone\",\n      isRay = templateType === \"ray\";\n\n    const grid = canvas.grid,\n      // Size of each cell in pixels\n      gridSizePxBase = canvas.dimensions.size,\n      // Offset for uneven grids\n      gridSizePxOffset = gridSizePxBase % 2,\n      // Final grid size\n      gridSizePx = gridSizePxBase + gridSizePxOffset,\n      gridSizeUnits = canvas.dimensions.distance; // feet, meters, etc.\n\n    const { direction, angle: docAngle, distance } = this.document;\n    // If angle is 0, swap to default angle. Constrain it to 359 degrees, too. Angle of 360 is same as 0 for Foundry.\n    const angle = Math.min(Math.abs(docAngle || CONFIG.MeasuredTemplate.defaults.angle), 359);\n\n    // Parse rays as per Bresenham's algorithm\n    if (isRay) {\n      const result = [];\n\n      const line = (x0, y0, x1, y1) => {\n        x0 = Math.floor(x0 / gridSizePx);\n        x1 = Math.floor(x1 / gridSizePx);\n        y0 = Math.floor(y0 / gridSizePx);\n        y1 = Math.floor(y1 / gridSizePx);\n\n        const dx = Math.abs(x1 - x0);\n        const dy = Math.abs(y1 - y0);\n        const sx = x0 < x1 ? 1 : -1;\n        const sy = y0 < y1 ? 1 : -1;\n        let err = dx - dy;\n\n        while (!(x0 === x1 && y0 === y1)) {\n          result.push({ x: x0 * gridSizePx, y: y0 * gridSizePx });\n          const e2 = err << 1;\n          if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n          }\n          if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n          }\n        }\n      };\n\n      // Extend ray by half a square for better highlight calculation\n      const ray = Ray.fromAngle(this.ray.A.x, this.ray.A.y, this.ray.angle, this.ray.distance + gridSizePx / 2);\n\n      // Get resulting squares\n      line(ray.A.x, ray.A.y, ray.B.x, ray.B.y);\n\n      return result;\n    }\n\n    // Get number of rows and columns\n    const nr = Math.ceil((distance * 1.5) / gridSizeUnits / (gridSizePx / grid.h)),\n      nc = Math.ceil((distance * 1.5) / gridSizeUnits / (gridSizePx / grid.w));\n\n    // Get the center of the grid position occupied by the template\n    const { x, y } = this.document;\n\n    const [cx, cy] = grid.getCenter(x, y),\n      [col0, row0] = grid.grid.getGridPositionFromPixels(cx, cy),\n      minAngle = Math.normalizeDegrees(direction - angle / 2),\n      maxAngle = Math.normalizeDegrees(direction + angle / 2);\n\n    // Origin offset multiplier\n    const offsetMult = { x: 0, y: 0 };\n    // Offset measurement for cones\n    // Offset is to ensure that cones only start measuring from cell borders, as in https://www.d20pfsrd.com/magic/#Aiming_a_Spell\n    if (isCone) {\n      // Degrees anticlockwise from pointing right. In 45-degree increments from 0 to 360\n      const dir = (direction >= 0 ? 360 - direction : -direction) % 360;\n      // If we're not on a border for X, offset by 0.5 or -0.5 to the border of the cell in the direction we're looking on X axis\n      // /2 turns from 1/0/-1 to 0.5/0/-0.5\n      offsetMult.x = x % gridSizePxBase != 0 ? Math.sign(Math.round(Math.cos(Math.toRadians(dir)))) / 2 : 0;\n      // Same for Y, but cos Y goes down on screens, we invert\n      offsetMult.y = y % gridSizePxBase != 0 ? -Math.sign(Math.round(Math.sin(Math.toRadians(dir)))) / 2 : 0;\n    }\n\n    // Determine point of origin\n    const origin = {\n      x: x + offsetMult.x * gridSizePxBase,\n      y: y + offsetMult.y * gridSizePxBase,\n    };\n\n    const result = [];\n    for (let a = -nc; a < nc; a++) {\n      for (let b = -nr; b < nr; b++) {\n        // Position of cell's top-left corner, in pixels\n        const [gx, gy] = canvas.grid.grid.getPixelsFromGridPosition(col0 + a, row0 + b);\n\n        // Determine point we're measuring the distance to - always in the center of a grid square\n        const destination = { x: gx + gridSizePx * 0.5, y: gy + gridSizePx * 0.5 };\n\n        const ray = new Ray(origin, destination);\n        if (isCone && ray.distance > 0) {\n          const rayAngle = Math.normalizeDegrees(ray.angle / (Math.PI / 180));\n          if (!withinAngle(minAngle, maxAngle, rayAngle)) {\n            continue;\n          }\n        }\n\n        // Check distance, add 1 pixel to avoid rounding issues\n        const cdistance = measureDistance(origin, destination, { ray });\n        if (cdistance <= distance + 1) {\n          result.push({ x: gx, y: gy });\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Determine tokens residing within the template bounds, based on either grid higlight logic or token center.\n   *\n   * @public\n   * @returns {Promise<Token[]>} Tokens sufficiently within the template.\n   */\n  async getTokensWithin() {\n    const shape = this.document.t,\n      dimensions = this.scene.dimensions,\n      gridSizePx = dimensions.size,\n      gridSizeUnits = dimensions.distance;\n\n    const getCenter = () => {\n      if (shape !== \"rect\") return this.center;\n      // Hack: Fix for Foundry bug where .center for rectangle template returns top-left corner instead.\n      return {\n        x: this.x + this.width / 2,\n        y: this.y + this.height / 2,\n      };\n    };\n\n    // Ensure shape and related data exists (e.g. this.ray) for getHighlightedSquares to work correctly.\n    // this.width, this.height, etc. are wrong without this\n    if (!this.shape) {\n      this._applyRenderFlags({ refreshShape: true });\n      // HACK: Wait for next tick, the template won't be finalized by Foundry until then.\n      // Likely breaks with Foundry v12 with newer PIXI version\n      await new Promise((resolve) => canvas.app.ticker.addOnce(() => resolve()), undefined, PIXI.UPDATE_PRIORITY.LOW);\n    }\n\n    const tCenter = getCenter();\n\n    const { distance, angle, direction } = this.document;\n\n    // Max distance from template center, +1 cell for proper detection, and +1 pixel for uneven grids and rounding protection\n    const maxDistance = Math.max(this.height, this.width) + gridSizePx + 1;\n    // Get tokens within max potential distance from the template\n    const relevantTokens = new Set(\n      canvas.tokens.placeables.filter((t) => new Ray(t.center, tCenter).distance - t.sizeErrorMargin <= maxDistance)\n    );\n\n    const results = new Set();\n\n    const isLargeToken = (t) => t.document.width > 1 || t.document.height > 1;\n\n    const withinCircle = (target) => {\n      const ray = new Ray(tCenter, target);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include this token if its center is within template radius\n      return raySceneLength <= distance + 1;\n    };\n\n    const withinCone = (target, minAngle, maxAngle) => {\n      const ray = new Ray(tCenter, target);\n      const rayAngle = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n      const rayWithinAngle = withinAngle(minAngle, maxAngle, rayAngle);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include token if its within template distance and within the cone's angle\n      return rayWithinAngle && raySceneLength <= distance + 1;\n    };\n\n    // Rectangle has same handling everywhere\n    if (shape === \"rect\") {\n      const rect = {\n        x: this.x,\n        y: this.y,\n        width: this.shape.width,\n        height: this.shape.height,\n      };\n\n      for (const t of relevantTokens) {\n        if (isLargeToken(t)) {\n          const cells = t.getOccupiedCells({ center: true });\n          if (cells.some((c) => withinRect(c, rect))) results.add(t);\n        } else {\n          if (withinRect(t.center, rect)) results.add(t);\n        }\n      }\n    }\n    // Special handling for gridless\n    else if (canvas.grid.type === CONST.GRID_TYPES.GRIDLESS && [\"circle\", \"cone\"].includes(shape)) {\n      // Pre-calc cone data\n      let minAngle, maxAngle;\n      if (shape === \"cone\") {\n        minAngle = Math.normalizeDegrees(direction - angle / 2);\n        maxAngle = Math.normalizeDegrees(direction + angle / 2);\n      }\n\n      // TODO: Test against vision points and ensure ~third of them are inside the template instead.\n      for (const t of relevantTokens) {\n        const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n        switch (shape) {\n          case \"circle\": {\n            if (cells.some((c) => withinCircle(c))) results.add(t);\n            break;\n          }\n          case \"cone\": {\n            if (cells.some((c) => withinCone(c, minAngle, maxAngle))) results.add(t);\n            break;\n          }\n        }\n      }\n    }\n    // Non-gridless\n    else {\n      const mapCoordsToCell = ({ x, y }) => ({ x, y, width: gridSizePx, height: gridSizePx });\n\n      const highlightSquares = this._getGridHighlightPositions().map(mapCoordsToCell);\n      for (const cell of highlightSquares) {\n        for (const t of relevantTokens) {\n          const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n          if (cells.some((tc) => withinRect(tc, cell))) {\n            results.add(t);\n            relevantTokens.delete(t);\n          }\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  // Highlight grid in PF1 style\n  highlightGrid() {\n    if (\n      !game.settings.get(\"pf1\", \"measureStyle\") ||\n      ![\"circle\", \"cone\", \"ray\"].includes(this.document.t) ||\n      canvas.grid.type !== CONST.GRID_TYPES.SQUARE\n    )\n      return super.highlightGrid();\n\n    const grid = canvas.grid,\n      bc = this.borderColor,\n      fc = this.fillColor;\n\n    // Only highlight for objects which have a defined shape\n    if (!this.id || !this.shape) return;\n\n    // Clear existing highlight\n    const hl = this.getHighlightLayer();\n    hl.clear();\n    if (!this.isVisible) return;\n\n    // Get grid squares to highlight\n    const highlightSquares = this._getGridHighlightPositions();\n    for (const s of highlightSquares) {\n      grid.grid.highlightGridPosition(hl, { x: s.x, y: s.y, color: fc, border: bc });\n    }\n  }\n\n  getHighlightLayer() {\n    return canvas.grid.getHighlightLayer(this.highlightId);\n  }\n\n  /**\n   * Return origin item if any.\n   *\n   * @type {Item|pf1.components.ItemAction|null}\n   */\n  get origin() {\n    const { uuid, action: actionId } = this.document.getFlag(\"pf1\", \"origin\") ?? {};\n    if (!uuid) return null;\n    const item = fromUuidSync(uuid);\n    const action = item?.actions?.get(actionId);\n    return action ?? item ?? null;\n  }\n}\n","import { convertDistance, measureDistance, calculateRangeFormula } from \"../utils/lib.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\nconst rangeColor = {\n  fill: Color.from(\"#FF0000\"),\n  border: Color.from(\"#FF0000\").multiply(0.9),\n};\nconst reachColor = {\n  fill: Color.from(\"#FFFF00\"),\n  border: Color.from(\"#FFFF00\").multiply(0.9),\n};\n\nclass SquareHighlight {\n  constructor(origin, fillColor = 0x00ff00, borderColor = 0x000000) {\n    this.origin = origin;\n    this.borderColor = borderColor;\n    this.fillColor = fillColor;\n    this._squares = [];\n\n    this._id = foundry.utils.randomID();\n\n    canvas.grid.addHighlightLayer(`AttackHighlight.${this._id}`);\n  }\n\n  addSquare(x, y) {\n    this._squares.push({ x: x, y: y });\n  }\n\n  clear() {\n    const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n    if (!hl) return;\n    hl.clear();\n  }\n\n  render() {\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n\n    this.clear();\n\n    // Highlight squares\n    for (const s of this._squares) {\n      const x = Math.floor(this.origin.x - s.x) * gridSize;\n      const y = Math.floor(this.origin.y - s.y) * gridSize;\n      grid.grid.highlightGridPosition(hl, { x: x, y: y, border: this.borderColor, color: this.fillColor });\n    }\n  }\n}\n\n/**\n * Calculates the attack for a token's attack.\n */\nclass AttackHighlightBase {\n  /** @abstract */\n  clearHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n  /** @abstract */\n  renderHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @abstract\n   * @returns {boolean}\n   */\n  get isValid() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    const attack = action?.item;\n    if (!action || !token || !attack) throw new Error(\"Invalid arguments.\");\n  }\n}\n\nclass GridlessHighlight extends AttackHighlightBase {\n  /** @type {number[]|undefined} */\n  #rangeStops;\n\n  /** @override */\n  get isValid() {\n    return (this.#rangeStops?.length ?? 0) >= 2;\n  }\n\n  /** @type {{x: number, y: number} | undefined} */\n  #center;\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    this.#center = {\n      x: Math.floor(token.x + (tw * gridSize) / 2),\n      y: Math.floor(token.y + (th * gridSize) / 2),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.data.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const rangeMeasurements = [minRange || 0, r];\n\n    if (rangeKey === \"ft\") {\n      // Add range increments\n      const rangeIncrements = action.data.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        rangeMeasurements.push((a + 1) * r);\n      }\n    }\n\n    this.#rangeStops = rangeMeasurements.map((r) => {\n      const tokenOffset = r === 0 ? 0 : (tw * gridSize) / 2;\n      return (r * canvas.dimensions.size) / canvas.dimensions.distance + tokenOffset;\n    });\n\n    this._id = foundry.utils.randomID();\n    canvas.grid.addHighlightLayer(`AttackHighlight.${this._id}`);\n  }\n\n  clearHighlight() {\n    if (this.isValid) {\n      const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n      if (!hl) return;\n      hl.removeChildren();\n      this.#rangeStops = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.isValid) {\n      const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n      if (!hl) return;\n      hl.clear();\n\n      const { x, y } = this.#center;\n\n      const circle = new PIXI.Graphics();\n\n      const stops = /** @type {!number[]} */ (this.#rangeStops);\n      for (let i = stops.length - 1; i > 0; i--) {\n        const outer = stops[i];\n        const inner = stops[i - 1];\n\n        const color = [rangeColor, reachColor][(i + 1) % 2];\n\n        circle.beginFill(color.fill, 0.1);\n        circle.drawCircle(x, y, outer);\n\n        // if inner has a defined value and is not 0, then cut a hole for either the next increment or because it's the minimum range\n        if (inner) {\n          circle.beginHole();\n          circle.beginFill(reachColor.fill, 0.1);\n          circle.drawCircle(x, y, inner);\n          circle.endHole();\n        }\n      }\n      circle.endFill();\n\n      hl.addChild(circle);\n    }\n  }\n}\n\nclass SquareGridHighlight extends AttackHighlightBase {\n  /**\n   * @typedef {object} AttackReachHighlight\n   * An object containing highlights belonging to a specific attack\n   * @property {SquareHighlight} normal - Highlight for normal range\n   * @property {SquareHighlight[]} extra - Additional highlights\n   */\n\n  /** @type {AttackReachHighlight|undefined} */\n  #currentHighlight;\n\n  /** @override */\n  get isValid() {\n    return !!this.#currentHighlight;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    const origin = {\n      x: Math.floor((token.x + tw * gridSize - 0.5 * gridSize) / gridSize),\n      y: Math.floor((token.y + th * gridSize - 0.5 * gridSize) / gridSize),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.data.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n    const isFeet = rangeKey === \"ft\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const squares = {\n      normal: [],\n      reach: [],\n      extra: [],\n    };\n    const useReachRule = game.settings.get(\"pf1\", \"alternativeReachCornerRule\") !== true;\n\n    squares.normal = this.#getReachSquares(token, r, minRange, { useReachRule: isFeet ? true : useReachRule });\n\n    if (isFeet) {\n      // Add range increments\n      const ftDistance = convertDistance(r)[0];\n      const userLimit = game.settings.get(\"pf1\", \"performance\").reachLimit;\n      const maxSquareRange = Math.min(\n        userLimit, // arbitrary limit to enhance performance on large canvases\n        Math.max(\n          (canvas.dimensions.width / canvas.dimensions.size) * canvas.dimensions.distance,\n          (canvas.dimensions.height / canvas.dimensions.size) * canvas.dimensions.distance\n        ) + ftDistance\n      );\n      const rangeIncrements = action.data.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        if ((a + 1) * ftDistance <= maxSquareRange) {\n          squares.extra.push(this.#getReachSquares(token, (a + 1) * r, a * r, { useReachRule }));\n        }\n      }\n    }\n\n    const result = {\n      normal: new SquareHighlight(origin, rangeColor.fill, rangeColor.border),\n      extra: [],\n    };\n\n    for (const s of squares.normal) {\n      result.normal.addSquare(s[0], s[1]);\n    }\n\n    // Add extra range squares\n    for (let a = 0; a < squares.extra.length; a++) {\n      const squaresExtra = squares.extra[a];\n\n      const color = {\n        fill: a % 2 === 1 ? rangeColor.fill : reachColor.fill,\n        border: a % 2 === 1 ? rangeColor.border : reachColor.border,\n      };\n\n      const hl = new SquareHighlight(origin, color.fill, color.border);\n      for (const s of squaresExtra) {\n        hl.addSquare(s[0], s[1]);\n      }\n      result.extra.push(hl);\n    }\n\n    this.#currentHighlight = result;\n  }\n\n  /**\n   *\n   * @param {Token} token\n   * @param {number} range\n   * @param {number} minRange\n   * @param {object} options\n   * @returns {Array<Array<number,number>>} - Array of x,y coordinate tuples\n   */\n  #getReachSquares(token, range, minRange = 0, options) {\n    const result = [];\n    if (canvas.grid.type !== CONST.GRID_TYPES.SQUARE) return result;\n\n    range = convertDistance(range)[0];\n    if (typeof minRange === \"number\") minRange = convertDistance(minRange)[0];\n\n    // Initialize variables\n    const gridDist = canvas.scene.grid.distance;\n    const gridSize = canvas.grid.size;\n\n    // Determine token squares\n    const tokenSquares = [];\n    for (let a = 0; a < Math.floor(token.w / gridSize); a++) {\n      for (let b = 0; b < Math.floor(token.h / gridSize); b++) {\n        const x = Math.floor((token.x + gridSize * 0.5) / gridSize + a);\n        const y = Math.floor((token.y + gridSize * 0.5) / gridSize + b);\n        tokenSquares.push([x, y]);\n      }\n    }\n\n    // Determine token-based variables\n    const tokenRect = [\n      Math.floor((token.x + gridSize * 0.5) / gridSize),\n      Math.floor((token.y + gridSize * 0.5) / gridSize),\n      Math.floor(token.w / gridSize),\n      Math.floor(token.h / gridSize),\n    ];\n\n    // Create function to determine closest token square\n    const getClosestTokenSquare = function (pos) {\n      const lowest = { square: null, dist: null };\n      for (const s of tokenSquares) {\n        const dist = Math.sqrt((s[0] - pos[0]) ** 2 + (s[1] - pos[1]) ** 2);\n        if (lowest.dist == null || dist < lowest.dist) {\n          lowest.square = s;\n          lowest.dist = dist;\n        }\n      }\n\n      return lowest.square;\n    };\n\n    // Gather potential squares\n    const squareRange = Math.round(range / gridDist);\n    const wMax = squareRange * 2 + tokenRect[2];\n    const hMax = squareRange * 2 + tokenRect[3];\n    const tl = [tokenRect[0] - squareRange, tokenRect[1] - squareRange];\n    for (let a = tl[0]; a < tl[0] + wMax; a++) {\n      for (let b = tl[1]; b < tl[1] + hMax; b++) {\n        const closestSquare = getClosestTokenSquare([a, b]);\n\n        const offset = [a - tokenRect[0], b - tokenRect[1]];\n        if (\n          !(\n            a >= tokenRect[0] &&\n            a < tokenRect[0] + tokenRect[2] &&\n            b >= tokenRect[1] &&\n            b < tokenRect[1] + tokenRect[2] &&\n            minRange != null\n          ) &&\n          this.#shouldAddReachSquare([a, b], closestSquare, range, minRange, options)\n        ) {\n          result.push(offset);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  #shouldAddReachSquare(pos, closestTokenSquare, range, minRange, options = { useReachRule: false }) {\n    const gridSize = canvas.grid.size;\n    const p0 = { x: closestTokenSquare[0] * gridSize, y: closestTokenSquare[1] * gridSize };\n    const p1 = { x: pos[0] * gridSize, y: pos[1] * gridSize };\n\n    const dist = measureDistance(p0, p1);\n    const dist2 = options.useReachRule ? measureDistance(p0, p1, { diagonalRule: \"555\" }) : null;\n    const reachRuleRange = convertDistance(10)[0];\n    if (dist > range) {\n      // Special rule for 10-ft. reach\n      if (!(options.useReachRule && range === reachRuleRange)) {\n        return false;\n      }\n    }\n\n    if (minRange != null && dist <= minRange) {\n      return false;\n    }\n\n    // Special rule for minimum ranges >= 10-ft.\n    if (options.useReachRule && minRange >= reachRuleRange && dist2 <= reachRuleRange) {\n      return false;\n    }\n\n    return true;\n  }\n\n  clearHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.clear();\n      for (const h of this.#currentHighlight.extra) {\n        h.clear();\n      }\n      this.#currentHighlight = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.render();\n      for (const h of this.#currentHighlight.extra) {\n        h.render();\n      }\n    }\n  }\n}\n\n/** @type {AttackHighlightbase|undefined} */\nlet attackReachHighlight;\n\n/**\n * Calculates and renders the {@link AttackReachHighlight} for a token's attack.\n * If a highlight already exists, it will be removed.\n *\n * @param {Token} token - The token to calculate the attack reach for\n * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n */\nexport const showAttackReach = (token, action) => {\n  // Clear previous highlight\n  clearHighlight();\n\n  const cls = canvas.grid.type === CONST.GRID_TYPES.SQUARE ? SquareGridHighlight : GridlessHighlight;\n\n  try {\n    const highlight = new cls(token, action);\n\n    // If a highlight could be created, make it the current highlight and render it\n    if (!highlight.isValid) return;\n    attackReachHighlight = highlight;\n    attackReachHighlight.renderHighlight();\n  } catch {\n    // no action, token, or item to use to render the highlight\n  }\n};\n\nexport const clearHighlight = () => {\n  attackReachHighlight?.clearHighlight();\n  attackReachHighlight = undefined;\n};\n\n/**\n * Returns a token belonging to either an actor's UUID or a token's UUID\n *\n * @async\n * @param {string} uuid - UUID of an actor or token\n * @returns {Promise<Token|null|undefined>} A Token, if one can be found\n */\nconst _getTokenByUuid = async function (uuid) {\n  if (!uuid) return;\n  /** @type {TokenDocument | Actor} */\n  const actor = await fromUuid(uuid);\n  if (actor instanceof TokenDocument) return actor.object;\n  return actor?.token ?? (actor != null ? canvas.tokens.placeables.find((o) => o.actor === actor) : null);\n};\n\n/**\n * Add listeners on the {@link ChatLog}'s HTML element, checking for hover events involving\n * chat cards' range element using event delegation.\n *\n * @param {JQuery<HTMLElement>} html - The chat log\n */\nexport function addReachListeners(html) {\n  html.on(\"pointerenter\", \".card-range\", _onMouseEnterReach);\n  html.on(\"pointerleave\", \".card-range\", _onMouseLeaveReach);\n}\n\n/**\n * Handle display of reach when a chat card's reach element is hovered\n *\n * @param {JQuery.MouseEnterEvent<HTMLElement>} event - A `mouseEnter` event\n */\nconst _onMouseEnterReach = (event) => {\n  event.preventDefault();\n  if (game.settings.get(\"pf1\", \"performance\").reachLimit < 10) return;\n\n  const reachElement = event.currentTarget;\n  const card = reachElement.closest(\".chat-card\");\n  const { tokenUuid, actionId, itemId } = card.dataset;\n  if (!(itemId && actionId && tokenUuid)) return;\n\n  _getTokenByUuid(tokenUuid).then((token) => {\n    if (!token) return;\n\n    const item = token.actor.allItems.find((item) => item.id === itemId);\n    const action = item?.actions.get(actionId);\n    if (!action) return;\n\n    showAttackReach(token, action);\n  });\n};\n\n/**\n * Handle clearing of reach highlights created by {@link _onMouseEnterReach}\n *\n * @param {JQuery.MouseLeaveEvent} event - A `mouseLeave` event\n */\nconst _onMouseLeaveReach = (event) => {\n  event.preventDefault();\n  clearHighlight();\n};\n","export class TokenPF extends Token {\n  /**\n   * Synced with Foundry 11.315\n   *\n   * @override\n   * @param {string|object} effect\n   * @param {object} options\n   * @param {boolean} [options.active] - Force active state\n   * @param {boolean} [options.overlay=false] - Overlay effect\n   * @returns {boolean} - was it applied or removed\n   */\n  async toggleEffect(effect, { active, overlay = false, interaction = true } = {}) {\n    const effectId = typeof effect === \"string\" ? effect : effect?.id;\n    if (this.actor) {\n      const buff = this.actor.items.get(effectId);\n      if (buff) {\n        foundry.utils.logCompatibilityWarning(\"Toggling buffs via TokenPF.toggleEffect() is deprecated.\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n\n        await buff.setActive(active ?? !buff.isActive);\n        return buff.isActive;\n      }\n    }\n\n    if (this.actor && pf1.registry.conditions.has(effectId) && typeof this.actor.toggleCondition === \"function\") {\n      const enable = active ?? !this.actor.hasCondition(effectId);\n      if (enable && this.actor.getConditionImmunities().has(effectId)) {\n        if (interaction) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.ImmuneToCondition\", {\n              name: this.actor.name,\n              condition: pf1.registry.conditions.get(effectId)?.name || effectId,\n            })\n          );\n        }\n        return false;\n      }\n\n      const extraData = overlay ? { flags: { core: { overlay: true } } } : undefined;\n\n      let rv;\n      if (active === undefined) rv = await this.actor.toggleCondition(effectId, extraData);\n      else {\n        if (active && overlay) active = extraData; // Support right click\n        rv = await this.actor.setCondition(effectId, active);\n      }\n      return rv[effectId];\n    } else {\n      return super.toggleEffect(effect, { active, overlay });\n    }\n  }\n\n  get actorVision() {\n    const ll = this.actor.system.traits?.senses?.ll ?? {};\n    return {\n      lowLight: ll.enabled,\n      lowLightMultiplier: ll.multiplier?.dim,\n      lowLightMultiplierBright: ll.multiplier?.bright,\n    };\n  }\n\n  get disableLowLight() {\n    return this.document.getFlag(\"pf1\", \"disableLowLight\") === true;\n  }\n\n  /**\n   * Synced with Foundry v11.315\n   *\n   * @override\n   * @since PF1 v10\n   */\n  _isVisionSource() {\n    if (!canvas.effects.visibility.tokenVision || !this.hasSight) return false;\n\n    // Only display hidden tokens for the GM\n    const isGM = game.user.isGM;\n    if (this.document.hidden && !isGM) return false;\n\n    // Always display controlled tokens which have vision\n    if (this.controlled) return true;\n\n    // Otherwise, vision is ignored for GM users\n    if (isGM) return false;\n\n    // Vision sharing\n    if (this.actor?.sharesVision) return true;\n\n    // If a non-GM user controls no other tokens with sight, display sight\n    const guarantee = game.settings.get(\"pf1\", \"guaranteedVision\");\n    const canObserve = this.actor?.testUserPermission(game.user, guarantee) ?? false;\n    if (!canObserve) return false;\n    const others = this.layer.controlled.filter((t) => !t.document.hidden && t.hasSight);\n    return !others.length;\n  }\n\n  /**\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The number to boost the bar by, if any.\n   * @protected\n   */\n  _getBarBoost(data) {\n    if (data.attribute === \"attributes.hp\") return { value: this.actor.system.attributes.hp.temp, color: 0xc0d6e4 };\n    if (data.attribute === \"attributes.vigor\")\n      return { value: this.actor.system.attributes.vigor.temp, color: 0xc0d6e4 };\n    return null;\n  }\n\n  /**\n   * Determines the length of the underline (bottom half-height bar overlay) on a token bar.\n   *\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The value of the bar underline, if any.\n   * @protected\n   */\n  _getBarUnderline(data) {\n    if (data.attribute === \"attributes.hp\")\n      return { value: this.actor.system.attributes.hp.nonlethal, color: 0x7d2828 };\n    return null;\n  }\n\n  /**\n   * Draw a single resource bar, given provided data.\n   *\n   * @param {number} number       The Bar number>\n   * @param {PIXI.Graphics} bar   The Bar container.\n   * @param {object} data         Resource data for this bar.\n   * @protected\n   */\n  _drawBar(number, bar, data) {\n    // Get boost value (such as temporary hit points\n    const boost = this._getBarBoost(data);\n    const underline = this._getBarUnderline(data);\n    const boostlessMax = data.max;\n\n    const val = Number(data.value);\n    data.max = Math.max(data.max, (boost?.value ?? 0) + val);\n    const pct = Math.clamped(val, 0, data.max) / data.max;\n    const boostlessPct = Math.clamped(val, 0, boostlessMax) / boostlessMax;\n\n    // Determine sizing\n    let h = Math.max(canvas.dimensions.size / 12, 8);\n    const w = this.w;\n    const bs = Math.clamped(h / 8, 1, 2);\n    if (this.document.height >= 2) h *= 1.6; // Enlarge the bar for large tokens\n\n    // Determine the color to use\n    const blk = 0x000000;\n    let color;\n    if (number === 0) color = Color.fromRGBvalues(1 - boostlessPct / 2, boostlessPct, 0);\n    else color = Color.fromRGBvalues(0.5 * boostlessPct, 0.7 * boostlessPct, 0.5 + boostlessPct / 2);\n\n    // Draw the bar\n    bar.clear();\n    // Draw background of bar\n    bar.beginFill(blk, 0.5).lineStyle(bs, blk, 1.0).drawRoundedRect(0, 0, this.w, h, 3);\n    // Draw bar boost\n    if (boost?.value > 0) {\n      const pct = Math.clamped(val + boost.value, 0, data.max) / data.max;\n      bar\n        .beginFill(boost.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, 0, pct * w, h, 2);\n    }\n\n    // Draw normal value\n    bar\n      .beginFill(color, 1.0)\n      .lineStyle(bs, blk, 1.0)\n      .drawRoundedRect(0, 0, pct * w, h, 2);\n    // Draw bar underline\n    if (underline?.value > 0) {\n      const pct = Math.clamped(underline.value, 0, data.max) / data.max;\n      bar\n        .beginFill(underline.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, h / 2, pct * w, h / 2, 2);\n    }\n\n    // Set position\n    const posY = number === 0 ? this.h - h : 0;\n    bar.position.set(0, posY);\n  }\n\n  /**\n   * Returns error margin, in pixels, for measuring to and from token center.\n   *\n   * Defined as larger of half the token's width and height.\n   *\n   * @type {number}\n   */\n  get sizeErrorMargin() {\n    return Math.max(this.w / 2, this.h / 2);\n  }\n\n  /**\n   * Return coordinates of cells the token occupies.\n   *\n   * Bug: Does not work with hex grid.\n   * Bug: Does not account for rotation.\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.center=false] - Return cell centers instead of origins\n   * @returns {Point[]} - Occupied cell coordinates.\n   */\n  getOccupiedCells({ center = false } = {}) {\n    const doc = this.document;\n    const gridSizePx = this.scene.grid.size ?? 1;\n    const { x, y, width, height } = doc;\n\n    // Offset for returning cell center\n    const offset = center ? gridSizePx / 2 : 0;\n\n    const squares = [];\n\n    const wr = width - 1,\n      hr = height - 1;\n\n    for (let x0 = 0; x0 <= wr; x0++) {\n      for (let y0 = 0; y0 <= hr; y0++) {\n        squares.push({ x: x + x0 * gridSizePx + offset, y: y + y0 * gridSizePx + offset });\n      }\n    }\n\n    return squares;\n  }\n\n  /**\n   * @type {boolean} - Is this token a square?\n   */\n  get isSquare() {\n    return this.document.width === this.document.height;\n  }\n}\n","import { clearHighlight, showAttackReach } from \"./attack-reach.mjs\";\nimport { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\nexport class TokenQuickActions {\n  /**\n   * Add quick action buttons to token HUD.\n   *\n   * @param {TokenHUD} app\n   * @param {JQuery} html\n   */\n  static async addQuickActions(app, html) {\n    const token = app.object;\n    const actor = token.actor;\n\n    const quickActions = actor?.getQuickActions?.();\n    if (!quickActions?.length) return;\n\n    const templateData = {\n      actions: quickActions,\n    };\n\n    const div = document.createElement(\"div\");\n    div.innerHTML = renderCachedTemplate(\"systems/pf1/templates/hud/quick-actions.hbs\", templateData);\n\n    this.activateElementListeners(div.firstChild, actor, token);\n\n    html[0].querySelector(\".col.middle\").after(div.firstChild);\n  }\n\n  /**\n   * Add listeners to token HUD quick action element.\n   *\n   * @param {Element} el Quick action element\n   * @param {Actor} actor - Associated actor\n   * @param {Token} token - Associated token\n   */\n  static activateElementListeners(el, actor, token) {\n    el.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      const itemId = event.target.dataset.itemId;\n      const item = actor.items.get(itemId);\n      if (!event.ctrlKey) {\n        item.use({ ev: event, token: token.document, skipDialog: getSkipActionPrompt() });\n      } else {\n        item.displayCard({ token: token.document });\n      }\n    });\n\n    el.addEventListener(\"contextmenu\", (event) => {\n      event.preventDefault();\n      const itemId = event.target.dataset.itemId;\n      const item = actor.items.get(itemId);\n      item.sheet.render(true, { focus: true });\n    });\n\n    // Reach highlight on mouse hover\n    if (game.settings.get(\"pf1\", \"performance\").reachLimit >= 10) {\n      el.querySelectorAll(\".token-quick-action\").forEach((el) => {\n        const itemId = el.dataset.itemId;\n        const item = actor.items.get(itemId);\n        const action = item.defaultAction;\n        el.addEventListener(\"pointerenter\", () => showAttackReach(token, action), { passive: true });\n        el.addEventListener(\"pointerleave\", () => clearHighlight(), { passive: true });\n      });\n    }\n  }\n}\n","/**\n * See invisibility detection mode with respect to sight (light & darkvision)\n */\nexport class DetectionModeInvisibilityPF extends DetectionModeInvisibility {\n  static ID = \"seeInvisibility\";\n  static LABEL = \"PF1.Sense.seeInvis\";\n  static PRIORITY = 100000;\n\n  /**\n   * Copy of DetectionModeBasicSight._testPoint instead of the one inherited from DetectionMode.\n   *\n   * Allows seeing invisible in lit areas.\n   *\n   * @override\n   */\n  _testPoint(visionSource, mode, target, test) {\n    // Blocked by walls\n    if (!this._testLOS(visionSource, mode, target, test)) return false;\n    // Otherwise allowed within range\n    if (this._testRange(visionSource, mode, target, test)) return true;\n\n    // If limited (e.g. true seeing), do not care about other light sources beyond range\n    if (mode.limited) return false;\n\n    // Allowed outside of range if lit\n    const { x, y } = test.point;\n    for (const lightSource of canvas.effects.lightSources.values()) {\n      if (!lightSource.active) continue;\n      if (lightSource.shape.contains(x, y)) return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Blindsense\n */\nexport class DetectionModeBlindSensePF extends DetectionMode {\n  static ID = \"blindSense\";\n  static LABEL = \"PF1.Sense.blindsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200100;\n\n  constructor(data = {}, ...args) {\n    data.walls = true;\n    super(data, ...args);\n  }\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: this.ID === \"blindSense\",\n    }));\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    return true;\n  }\n}\n\n/**\n * Blindsight\n */\nexport class DetectionModeBlindSightPF extends DetectionModeBlindSensePF {\n  static ID = \"blindSight\";\n  static LABEL = \"PF1.Sense.blindsight\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200000;\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: false,\n    }));\n  }\n}\n\n/**\n * Tremorsense\n *\n * Unlike base implementation, does not block with walls.\n */\nexport class DetectionModeTremorPF extends DetectionModeTremor {\n  static ID = \"feelTremor\";\n  static LABEL = \"PF1.Sense.tremorsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.MOVE;\n  static PRIORITY = 201000;\n\n  constructor(data = {}, ...args) {\n    data.walls = false;\n    super(data, ...args);\n  }\n}\n","/**\n * Rules accurate darkvision override.\n *\n * @remarks\n * Compared to example implementation, this does not turn dim light into bright.\n */\nexport const darkvision = (() => {\n  const data = CONFIG.Canvas.visionModes.darkvision.toObject();\n  delete data.lighting.levels[VisionMode.LIGHTING_LEVELS.DIM];\n  return new VisionMode(data);\n})();\n","import { MeasuredTemplatePF } from \"./measure.mjs\";\nimport { throttle } from \"@utils\";\n\n/**\n * A helper class for building MeasuredTemplates for PF1 spells and abilities\n *\n * @augments {MeasuredTemplate}\n */\nexport class AbilityTemplate extends MeasuredTemplatePF {\n  /**\n   * Preview movement and rotation re-render throttle time in milliseconds.\n   *\n   * @private\n   */\n  static RENDER_THROTTLE = 30;\n\n  /**\n   * A factory method to create an AbilityTemplate instance using provided data\n   *\n   * @param {object} data - Data used to create the template\n   * @param {\"cone\" | \"circle\" | \"rect\" | \"ray\"} data.type - The type of template\n   * @param {number} data.distance - The distance/size of the template\n   * @param {string} [data.texture=null] - Path to template texture\n   * @param {string} [data.color=game.user.color] - Template color\n   * @param {object} [data.flags] - Additional flags stored on the template\n   * @returns {AbilityTemplate|null} - The template object, or null if the data does not produce a template\n   */\n  static fromData(data) {\n    const type = data.type;\n    const distance = data.distance;\n    const flags = data.flags;\n    if (!type) return null;\n    if (!distance) return null;\n    if (!canvas.scene) return null;\n    if (![\"cone\", \"circle\", \"rect\", \"ray\"].includes(type)) return null;\n\n    // Prepare template data\n    const templateData = {\n      t: type,\n      distance: distance || 5,\n      direction: 0,\n      x: 0,\n      y: 0,\n      flags,\n      fillColor: data.color ? data.color : game.user.color,\n      texture: data.texture ? data.texture : null,\n      _id: foundry.utils.randomID(16),\n    };\n\n    // Additional type-specific data\n    switch (type) {\n      case \"cone\":\n        if (game.settings.get(\"pf1\", \"measureStyle\") === true)\n          templateData.angle = CONFIG.MeasuredTemplate.defaults.angle;\n        else templateData.angle = CONFIG.MeasuredTemplate.defaults.originalAngle;\n        break;\n      case \"rect\":\n        templateData.distance = Math.sqrt(Math.pow(distance, 2) + Math.pow(distance, 2));\n        templateData.direction = 45;\n        break;\n      case \"ray\":\n        templateData.width = CONFIG.MeasuredTemplate.defaults.width;\n        break;\n      default:\n        break;\n    }\n\n    // Return the template constructed from the item data\n    const cls = CONFIG.MeasuredTemplate.documentClass;\n    const template = new cls(templateData, { parent: canvas.scene });\n    const object = new this(template);\n    return object;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Creates a preview of the spell template\n   *\n   * @param {Event} event   The initiating click event\n   */\n  async drawPreview(event) {\n    const initialLayer = canvas.activeLayer;\n    await this.draw();\n    this.active = true;\n    this.layer.activate();\n    this.layer.preview.addChild(this);\n    return this.activatePreviewListeners(initialLayer);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Activate listeners for the template preview\n   *\n   * @param {CanvasLayer} initialLayer  The initially active CanvasLayer to re-activate after the workflow is complete\n   * @returns {Promise<object>} Returns result object\n   */\n  activatePreviewListeners(initialLayer) {\n    return new Promise((resolve) => {\n      const handlers = {};\n\n      const pfStyle = game.settings.get(\"pf1\", \"measureStyle\") === true;\n\n      const _clear = () => {\n        if (this.destroyed) return;\n        this.destroy();\n      };\n\n      const throttleRefresh = throttle(() => {\n        this.refresh();\n        canvas.app.render();\n      }, this.constructor.RENDER_THROTTLE);\n\n      // Update placement (mouse-move)\n      handlers.mm = (event) => {\n        event.stopPropagation();\n        const center = event.data.getLocalPosition(this.layer);\n        const pos = canvas.grid.getSnappedPosition(center.x, center.y, 2);\n        this.document.x = pos.x;\n        this.document.y = pos.y;\n        throttleRefresh();\n      };\n\n      // Cancel the workflow (right-click)\n      handlers.rc = (event, canResolve = true) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.layer.preview.removeChildren();\n        canvas.stage.off(\"pointermove\", handlers.mm);\n        canvas.stage.off(\"pointerdown\", handlers.lc);\n        canvas.app.view.removeEventListener(\"contextmenu\", handlers.rc);\n        canvas.app.view.removeEventListener(\"wheel\", handlers.mw);\n        // Clear highlight\n        this.active = false;\n        const hl = canvas.grid.getHighlightLayer(this.highlightId);\n        hl.clear();\n        _clear();\n\n        initialLayer.activate();\n        if (canResolve) resolve({ result: false });\n      };\n\n      // Confirm the workflow (left-click)\n      handlers.lc = async (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        handlers.rc(event, false);\n\n        // Create the template\n        const result = {\n          result: this.document.distance != 0, // Only if template size is creater than 0\n          place: async () => {\n            const [doc] = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [\n              this.document.toObject(false),\n            ]);\n            this.document = doc;\n            return doc;\n          },\n          delete: () => {\n            return this.document.delete();\n          },\n        };\n        _clear();\n        resolve(result);\n      };\n\n      // Rotate the template by 3 degree increments (mouse-wheel)\n      handlers.mw = (event) => {\n        event.preventDefault(); // Prevent browser zoom\n        event.stopPropagation(); // Prevent other handlers\n\n        let delta, snap;\n        if (event.ctrlKey) {\n          delta = canvas.dimensions.distance * -Math.sign(event.deltaY);\n          this.document.distance += delta;\n          if (this.document.distance < 0) this.document.distance = 0;\n        } else {\n          if (pfStyle && this.document.t === \"cone\") {\n            delta = 90;\n            snap = event.shiftKey ? delta : 45;\n          } else {\n            delta = canvas.grid.type > CONST.GRID_TYPES.SQUARE ? 30 : 15;\n            snap = event.shiftKey ? delta : 5;\n          }\n          if (this.document.t === \"rect\") {\n            snap = Math.sqrt(Math.pow(5, 2) + Math.pow(5, 2));\n            this.document.distance += snap * -Math.sign(event.deltaY);\n          } else {\n            this.document.direction += snap * Math.sign(event.deltaY);\n          }\n        }\n\n        throttleRefresh();\n      };\n\n      // Activate listeners\n      if (this.controlIcon) this.controlIcon.removeAllListeners();\n      canvas.stage.on(\"pointermove\", handlers.mm);\n      canvas.stage.on(\"pointerdown\", handlers.lc);\n      canvas.app.view.addEventListener(\"contextmenu\", handlers.rc);\n      canvas.app.view.addEventListener(\"wheel\", handlers.mw);\n      this.hitArea = new PIXI.Polygon([]);\n    });\n  }\n\n  refresh() {\n    if (!this.template) return;\n    if (!canvas.scene) return;\n\n    return super.refresh();\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\n\n/**\n * Base term to identify function terms.\n */\nexport class FunctionTerm extends RollTerm {\n  constructor({ terms = [], options = {}, maxArgs } = {}) {\n    super({ options });\n\n    this.terms = terms.map((t) => {\n      if (t instanceof RollTerm) return t;\n      if (t.class) return RollTerm.fromData(t);\n      return t;\n    });\n\n    // Cap arguments\n    if (maxArgs > 0 && this.terms.length > maxArgs) this.terms = this.terms.slice(0, maxArgs);\n  }\n\n  isIntermediate = false;\n\n  /**\n   * Function parameters\n   *\n   * @type {RollTerm[]}\n   */\n  terms = [];\n\n  static parseArgs(args) {\n    return args.map((t) => {\n      if (t instanceof RollTerm) return t;\n\n      const ts = RollPF.parse(t);\n      if (ts.length > 1) return ParentheticalTerm.fromTerms(ts);\n      else return ts[0];\n    });\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\"];\n\n  /**\n   * Determine if the string term expression is identifier for this function.\n   *\n   * @param {string} expression String identifier from StringTerm.term\n   * @returns {boolean}\n   */\n  static matchTerm(expression) {\n    return false;\n  }\n\n  /**\n   * @type {string} - Simpler formula representation of the result if possible.\n   */\n  get simplify() {\n    return this.formula;\n  }\n\n  /**\n   * @type {true} Simple method of checking this is a FunctionTerm\n   */\n  static get isFunction() {\n    return true;\n  }\n}\n","/**\n * Actual string to be passed to functions.\n *\n * Meant to remain a string instead of being parsed more by Foundry.\n */\nexport class RealStringTerm extends StringTerm {\n  constructor({ term = null, options = {} } = {}) {\n    super({ options });\n    this.term = /^(\\\\?[\"'])(?<str>.*)\\1$/.exec(term)?.groups.str ?? term;\n    if (typeof this.term !== \"string\") throw new Error(`RealStringTerm can only accept strings, received: \"${term}\"`);\n    this._evaluated = true;\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"term\"];\n\n  /**\n   * False expression to allow Roll.validate() passing when it includes this terms.\n   */\n  get expression() {\n    return this.term;\n  }\n\n  get formula() {\n    return `\"${this.term}\"`;\n  }\n\n  static matchTerm(expression) {\n    return /^(\\\\?[\"']).*\\1$/.test(expression);\n  }\n}\n","export class BooleanTerm extends RollTerm {\n  constructor({ term = true, options = {} } = {}) {\n    super({ options });\n    if (![\"true\", \"false\", true, false].includes(term))\n      throw new Error(`BooleanTerm can only be \"true\" or \"false\", received: ${term}`);\n    this.term = term === \"true\" || term === true;\n    this._evaluated = true;\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"term\"];\n\n  get total() {\n    return this.term ? 1 : 0;\n  }\n\n  get expression() {\n    return this.term;\n  }\n\n  get formula() {\n    return this.term.toString();\n  }\n\n  static matchTerm(expression) {\n    return [\"true\", \"false\"].includes(expression);\n  }\n}\n","export class NullTerm extends RollTerm {\n  constructor({ options = {} } = {}) {\n    super({ options });\n    this._evaluated = true;\n  }\n\n  get expression() {\n    return null;\n  }\n\n  get formula() {\n    return \"null\";\n  }\n\n  static matchTerm(expression) {\n    return expression === \"null\";\n  }\n}\n","export class UndefinedTerm extends RollTerm {\n  constructor({ options = {} } = {}) {\n    super({ options });\n    this._evaluated = true;\n  }\n\n  get expression() {\n    return undefined;\n  }\n\n  get formula() {\n    return \"undefined\";\n  }\n\n  static matchTerm(expression) {\n    return expression === \"undefined\";\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * RollTerm for ifelse(condition, if-true, if-false) function.\n *\n * Defaults:\n * - True: 1\n * - False: 0\n *\n * @example\n * ifelse(true) // => 1\n * ifelse(3 > 6, 100, 5) // => 5\n * ifelse(@boo == 2, 10) // => 0\n */\nexport class IfElseTerm extends FunctionTerm {\n  constructor({ terms = [], options }) {\n    super({ options });\n\n    // Help fromData functionality to get things right\n    if (terms) {\n      if (terms[0] instanceof RollTerm) this.terms = terms;\n      else if (typeof terms[0] === \"string\") {\n        this.terms = terms.reduce((all, t) => {\n          if (!t) {\n            all.push(t);\n            return all;\n          }\n          const ts = Roll.parse(t);\n          if (ts.length > 1) all.push(ParentheticalTerm.fromTerms(ts));\n          else all.push(ts[0]);\n          return all;\n        }, []);\n      } else {\n        try {\n          this.terms = terms.map((t) => (t ? RollTerm.fromData(t) : null));\n        } catch (err) {\n          console.error({ terms }, err);\n        }\n      }\n    }\n\n    // Scrap excess arguments\n    if (this.terms.length > 3) this.terms = this.terms.slice(0, 3);\n  }\n\n  terms = [];\n\n  isIntermediate = false;\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\"];\n  static MODIFIERS = {};\n\n  get total() {\n    const [condition, ifTrue, ifFalse] = this.terms;\n    const state = !!condition.total;\n    const term = state ? ifTrue : ifFalse;\n    if (term) return term.total;\n    return state ? 1 : 0;\n  }\n\n  /**\n   * @type {Die[]}\n   */\n  get dice() {\n    return this.terms.reduce((dice, t) => {\n      if (t instanceof DiceTerm) dice.push(t);\n      else if (t instanceof PoolTerm) dice = dice.concat(t.dice);\n      return dice;\n    }, []);\n  }\n\n  /**\n   * @override\n   * @type {string} - Simpler representation of the result.\n   */\n  get simplify() {\n    const [condition, ifTrue, ifFalse] = this.terms;\n    const state = !!condition.total;\n    const term = state ? ifTrue : ifFalse;\n    if (term) return term.formula;\n    return state ? \"1\" : \"0\";\n  }\n\n  /**\n   * @type {string}\n   */\n  get expression() {\n    const terms = [this.terms[0].formula, this.terms[1]?.formula || \"1\", this.terms[2]?.formula || \"0\"];\n    // Omit default behaviour values\n    if (terms[2] === \"0\") {\n      terms.pop();\n      if (terms[1] === \"1\") terms.pop();\n    }\n    return `ifelse(${terms.join(\", \")})`;\n  }\n\n  get isDeterministic() {\n    return !this.terms.some((t) => !t.isDeterministic);\n  }\n\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        term.evaluate(rollOpts);\n      }\n    }\n\n    const [condition, ifTrue, ifFalse] = this.terms;\n\n    const state = !!condition.total;\n    const term = (state ? ifTrue : ifFalse) ?? new NumericTerm({ number: state ? 1 : 0 });\n\n    // Copy flavor to active term\n    if (this.flavor) term.options.flavor = this.flavor;\n\n    // Omit unmatched result from stored data\n    this.terms = [condition, state ? ifTrue : null, state ? null : ifFalse];\n\n    return this;\n  }\n\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    return this._evaluateSync({ minimize, maximize });\n  }\n\n  static matchTerm(expression) {\n    return expression === \"ifelse\";\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { IfElseTerm } from \"./ifelse-term.mjs\";\n\n/**\n * RollTerm for if(condition, if-true) function.\n *\n * @inheritdoc\n * @example\n * if(true, 5) // => 5\n * if(3 > 2) // => 1\n * if(1 > 3) // => 0\n */\nexport class IfTerm extends IfElseTerm {\n  constructor({ terms = [], roll, options }) {\n    super({ terms, roll, options });\n\n    if (this.terms.length > 2) this.terms = this.terms.slice(0, 2);\n  }\n\n  get expression() {\n    const terms = [this.terms[0].formula];\n    const ifTrue = this.terms[1]?.formula || \"1\";\n    // Omit default behaviour value\n    if (ifTrue !== \"1\") terms.push(ifTrue);\n\n    return `if(${terms.join(\", \")})`;\n  }\n\n  get isDeterministic() {\n    return !this.terms.some((t) => !t.isDeterministic);\n  }\n\n  static matchTerm(expression) {\n    return expression === \"if\";\n  }\n}\n","import { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * lookup(search, ...values)\n *\n * Seach is evaluated to a number which is used as zero-based offset to values array, returning the value at evaluated offset.\n *\n * If index goes out of bounds, first value is used as fallback.\n *\n * Usage:\n * - For bounding lookups, use min(), max() and clamped() functions as appropriate.\n * - You may add +1 to your formula to use the first value as explicit error fallback.\n *\n * @example\n * lookup(2, 0, 10, 20, 30) // => 20\n * lookup(500, -100, 10, 20) // => -100\n */\nexport class LookupTerm extends FunctionTerm {\n  constructor({ terms = [], search, result, options = {} } = {}) {\n    super({ terms, options });\n\n    this.search = search;\n    this.result = result;\n\n    // Less than 3 arguments is meaningless as it always has same result, or lacks even default result\n    if (this.terms.length < 3) throw new Error(`LookupTerm requires minimum of 3 arguments`);\n  }\n\n  result = null;\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\", \"search\", \"result\"];\n\n  get expression() {\n    return `lookup(${this.terms.map((t) => (t instanceof ParentheticalTerm ? t.term : t.expression)).join(\", \")})`;\n  }\n\n  get formula() {\n    return `lookup(${this.terms.map((t) => t.formula).join(\", \")})${this.flavor ? `[${this.flavor}]` : \"\"}`;\n  }\n\n  get total() {\n    const search = this.terms[0];\n    if (!search) return undefined;\n\n    let offset = search.total;\n    if (!this.terms[1 + offset]) offset = 0;\n    return this.terms[1 + offset]?.total;\n  }\n\n  get dice() {\n    const term = this.lookupResult;\n    if (!term) return [];\n\n    const roll = Roll.defaultImplementation.fromTerms(term);\n    return roll.dice ?? [];\n  }\n\n  get lookupResult() {\n    const search = this.terms[0];\n    if (!search) return undefined;\n    let offset = search.total;\n\n    // Reset offset if invalid\n    if (offset < 0) offset = 0;\n    else if (this.terms.length < offset + 1) offset = 0;\n\n    return this.terms[1 + offset];\n  }\n\n  get simplify() {\n    return this.lookupResult.formula;\n  }\n\n  get isDeterministic() {\n    return this.terms[0]?.isDeterministic && this.lookupResult?.isDeterministic;\n  }\n\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n    const evalOffset = (i) => {\n      const term = this.terms[i];\n      if (!term._evaluated) term.evaluate(rollOpts);\n    };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    evalOffset(0);\n\n    const search = this.terms[0];\n    const searchRoll = Roll.defaultImplementation.fromTerms([search]);\n    if (!searchRoll._evaluated) searchRoll.evaluate(rollOpts);\n    let offset = Math.max(0, searchRoll.total);\n    if (!this.terms[1 + offset]) offset = 0;\n\n    evalOffset(offset);\n\n    if (this.flavor) this.result.terms[1 + offset].options.flavor = this.flavor;\n\n    this.result ??= Roll.defaultImplementation.fromTerms(this.terms);\n\n    return this;\n  }\n\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize };\n    const evalOffset = async (i) => {\n      const term = this.terms[i];\n      if (!term._evaluated) await term.evaluate(rollOpts);\n    };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          await term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    await evalOffset(0);\n\n    const search = this.terms[0];\n    this.search ??= Roll.defaultImplementation.fromTerms([search]);\n    if (!this.search._evaluated) await this.search.evaluate(rollOpts);\n    let offset = Math.max(0, this.search.total);\n    if (!this.terms[1 + offset]) offset = 0;\n\n    await evalOffset(offset);\n\n    if (this.flavor) this.terms[1 + offset].options.flavor ??= this.flavor;\n\n    return this;\n  }\n\n  get hasNumericTooltip() {\n    const term = this.lookupResult;\n    return term?.isDeterministic ?? true;\n  }\n\n  /**\n   * Get tooltip data for the result.\n   *\n   * @override\n   */\n  getTooltipData() {\n    const term = this.lookupResult;\n    if (!term) return;\n    const roll = Roll.defaultImplementation.fromTerms([term]);\n    return {\n      total: roll.total,\n      flavor: term.options.flavor ?? game.i18n.localize(\"PF1.Undefined\"),\n    };\n  }\n\n  static matchTerm(expression) {\n    return expression === \"lookup\";\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * RollTerm for sizeReach() function\n *\n * @todo Remove roll from serialized data.\n */\nexport class SizeReachTerm extends FunctionTerm {\n  constructor({ terms = [], options = {} } = {}) {\n    super({ terms, options, maxArgs: 3 });\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\", \"roll\"];\n  static MODIFIERS = {};\n\n  /** @type {number|undefined} */\n  get total() {\n    return this.roll?.total;\n  }\n\n  /** @type {Die[]|undefined} */\n  get dice() {\n    return this.roll?.dice;\n  }\n\n  get expression() {\n    return `sizeReach(${this.terms.map((t) => t.formula).join(\", \")})`;\n  }\n\n  get formula() {\n    return `sizeReach(${this.terms.map((t) => t.formula).join(\", \")})`;\n  }\n\n  /** @type {string|undefined} */\n  get simplify() {\n    return this.roll?.formula;\n  }\n\n  /**\n   * The dice inside this term are valid for inclusion with parent.\n   */\n  get inheritDice() {\n    return this.roll?.dice.length > 0;\n  }\n\n  /** @override */\n  get isDeterministic() {\n    return !this.terms.some((t) => !t.isDeterministic);\n  }\n\n  /** @override */\n  static get isFunction() {\n    return true;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        term.evaluate(rollOpts);\n      }\n    }\n\n    const noRoll = !this.roll;\n    // Map terms to sizeRoll params\n    const sizeDice = noRoll ? pf1.utils.roll.sizeReach(...this.terms.map((r) => r.total)) : null;\n    if (sizeDice && this.flavor) sizeDice[0].options.flavor = this.flavor;\n    // Generate final roll\n    const roll = noRoll ? RollPF.fromTerms(sizeDice) : this.roll;\n    // Copy flavor\n    if (this.flavor) roll.options.flavor = this.flavor;\n\n    this.roll = roll._evaluated ? roll : roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  /** @inheritDoc */\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          await term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        await term.evaluate(rollOpts);\n      }\n    }\n\n    const noRoll = !this.roll;\n    // Map terms to sizeRoll params\n    const reach = noRoll ? pf1.utils.roll.sizeReach(...this.terms.map((r) => r.total)) : null;\n    if (reach && this.flavor) reach[0].options.flavor = this.flavor;\n    // Generate final roll\n    const roll = noRoll ? RollPF.fromTerms(reach) : this.roll;\n    // Copy flavor\n    if (this.flavor) roll.options.flavor = this.flavor;\n\n    this.roll = roll._evaluated ? roll : await roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  static matchTerm(expression) {\n    return expression === \"sizeReach\";\n  }\n\n  get hasNumericTooltip() {\n    return this.roll?.dice.length === 0;\n  }\n\n  getTooltipData() {\n    this.roll.getTooltipData();\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * RollTerm for sizeRoll() function\n */\nexport class SizeRollTerm extends FunctionTerm {\n  constructor({ terms = [], roll, options = {} } = {}) {\n    super({ terms, options, maxArgs: 4 });\n\n    this.roll = roll ? (roll instanceof Roll ? roll : Roll.fromData(roll)) : undefined;\n  }\n\n  roll = null;\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\", \"roll\"];\n\n  /** @type {number|undefined} */\n  get total() {\n    return this.roll.total;\n  }\n\n  /** @type {Die[]} */\n  get dice() {\n    return this.roll?.dice ?? [];\n  }\n\n  get expression() {\n    return `sizeRoll(${this.terms.map((t) => t.formula).join(\", \")})`;\n  }\n\n  /**\n   * The dice inside this term are valid for inclusion with parent.\n   */\n  get inheritDice() {\n    return true;\n  }\n\n  /**\n   * @override\n   * @type {string} - Simpler representation of the result (e.g. 3d6 instead of sizeRoll(3, 6)).\n   */\n  get simplify() {\n    return this.roll?.formula;\n  }\n\n  /** @override */\n  get isDeterministic() {\n    return false;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        term.evaluate(rollOpts);\n      }\n    }\n\n    if (!this.roll) {\n      // Map terms to sizeRoll params\n      const sizeDice = pf1.utils.roll.sizeRoll(...this.terms.map((r) => r.total));\n      if (sizeDice && this.flavor) sizeDice[0].options.flavor = this.flavor;\n      // Generate final roll\n      this.roll = RollPF.fromTerms(sizeDice);\n    }\n\n    // Copy flavor\n    if (this.flavor) this.roll.options.flavor ??= this.flavor;\n\n    if (!this.roll._evaluated) this.roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  /** @inheritDoc */\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          await term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        await term.evaluate(rollOpts);\n      }\n    }\n\n    if (!this.roll) {\n      // Map terms to sizeRoll params\n      const sizeDice = pf1.utils.roll.sizeRoll(...this.terms.map((r) => r.total));\n      if (sizeDice && this.flavor) sizeDice[0].options.flavor = this.flavor;\n      // Generate final roll\n      this.roll = RollPF.fromTerms(sizeDice);\n    }\n\n    // Copy flavor\n    if (this.flavor) this.roll.options.flavor ??= this.flavor;\n\n    if (!this.roll._evaluated) await this.roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  static matchTerm(expression) {\n    return expression === \"sizeRoll\";\n  }\n\n  getTooltipData() {\n    return this.roll.getTooltipData();\n  }\n}\n","/**\n * @property {string} text - Note contents\n * @property {string} subTaget - Note subject\n */\nexport class ContextNote extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      text: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n      target: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n    };\n  }\n\n  get subTarget() {\n    foundry.utils.logCompatibilityWarning(\"ContextNote.subTarget is deprecated in favor of ContextNote.target\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.target;\n  }\n\n  static migrateData(source) {\n    if (source.subTarget) {\n      // Transfer a special tuple format target\n      if (source.target === \"spell\" && source.subTarget === \"effect\") {\n        source.target = \"spellEffect\";\n      }\n      // Otherwise transfer subtarget to target\n      else {\n        source.target = source.subTarget;\n      }\n    }\n  }\n}\n","import { keepUpdateArray } from \"../utils/lib.mjs\";\n\n/**\n * Conditional modifier bundle.\n */\nexport class ItemConditional {\n  constructor(data, parent) {\n    this.data = data;\n    this.parent = parent;\n\n    this.prepareData();\n  }\n\n  /**\n   * Create new conditional\n   *\n   * @param {object|object[]} data - Data to create conditional(s) from.\n   * @param {object} context - Context data\n   * @param {ItemAction} context.parent Parent action to add the conditional to.\n   * @returns {ItemConditional[]} - Created conditionals\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (!Array.isArray(data)) data = [data];\n\n    if (parent instanceof pf1.components.ItemAction) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newConditionalData = foundry.utils.deepClone(parent.data.conditionals || []);\n      newConditionalData.push(...data);\n\n      // Update parent\n      await parent.update({ conditionals: newConditionalData });\n\n      // Return results\n      return data.map((o) => parent.conditionals.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      default: false,\n      name: \"\",\n      modifiers: [],\n    };\n  }\n\n  /** @type {string} */\n  get id() {\n    return this.data._id;\n  }\n\n  /** @type {string} */\n  get name() {\n    return this.data.name;\n  }\n\n  /**\n   * @internal\n   */\n  prepareData() {\n    // Update modifiers\n    if (this.data.modifiers instanceof Array) {\n      this.modifiers = this._prepareModifiers(this.data.modifiers);\n    }\n  }\n\n  /**\n   * @internal\n   * @param modifiers\n   * @returns {Collection<string,ItemConditionalModifier>}\n   */\n  _prepareModifiers(modifiers) {\n    const prior = this.modifiers;\n    const collection = new Collection();\n    for (const o of modifiers) {\n      let modifier = null;\n      if (prior && prior.has(o._id)) {\n        modifier = prior.get(o._id);\n        modifier.data = o;\n        modifier.prepareData();\n      } else modifier = new pf1.components.ItemConditionalModifier(o, this);\n      collection.set(o._id || modifier.data._id, modifier);\n    }\n    return collection;\n  }\n\n  /**\n   * Update conditional\n   *\n   * @param {object} updateData\n   * @param {object} options\n   */\n  async update(updateData, options = {}) {\n    const idx = this.parent.data.conditionals.indexOf(this.data);\n    const prevData = foundry.utils.deepClone(this.data);\n    const newUpdateData = foundry.utils.mergeObject(prevData, updateData);\n\n    // Make sure modifiers remain in an array\n    keepUpdateArray(this.data, newUpdateData, \"modifiers\");\n\n    if (options.dryRun) return newUpdateData;\n    await this.parent.update({ [`conditionals.${idx}`]: newUpdateData });\n  }\n\n  async delete() {\n    const conditionals = foundry.utils.deepClone(this.parent.data.conditionals);\n    conditionals.findSplice((c) => c._id === this.id);\n    return this.parent.update({ conditionals });\n  }\n}\n\n/**\n * Individual modifier in a conditional bundle.\n */\nexport class ItemConditionalModifier {\n  /**\n   * @param {object} data\n   * @param {ItemConditional} parent\n   */\n  constructor(data, parent) {\n    this.data = data;\n    this.parent = parent;\n\n    this.prepareData();\n  }\n\n  /**\n   * Create conditional modifier\n   *\n   * @param {object} data - Creation data\n   * @param {object} context\n   * @param {ItemConditional} context.parent - Parent conditional\n   * @returns\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (!Array.isArray(data)) data = [data];\n\n    if (parent instanceof pf1.components.ItemConditional) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newConditionalModifierData = foundry.utils.deepClone(parent.data.modifiers || []);\n      newConditionalModifierData.push(...data);\n\n      // Update parent\n      await parent.update({ modifiers: newConditionalModifierData });\n\n      // Return results\n      return data.map((o) => parent.modifiers.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      formula: \"\",\n      target: \"\",\n      subTarget: \"\",\n      type: \"\",\n      damageType: pf1.components.ItemAction.defaultDamageType,\n      critical: \"\",\n    };\n  }\n\n  /** @type {string} */\n  get id() {\n    return this.data._id;\n  }\n\n  /**\n   * @internal\n   */\n  prepareData() {}\n\n  /**\n   * Update modifier\n   *\n   * @param {object} updateData\n   * @param {object} [options]\n   * @returns - Updated action\n   */\n  async update(updateData, options = {}) {\n    const idx = this.parent.data.modifiers.indexOf(this.data);\n    const prevData = foundry.utils.deepClone(this.data);\n    const newUpdateData = foundry.utils.flattenObject(foundry.utils.mergeObject(prevData, updateData));\n\n    if (options.dryRun) return newUpdateData;\n    await this.parent.update({ [`modifiers.${idx}`]: foundry.utils.expandObject(newUpdateData) });\n  }\n\n  /**\n   * Delete this individual modifier.\n   *\n   * @returns - Updated action\n   */\n  async delete() {\n    const idx = this.parent.data.modifiers.indexOf(this.data);\n    if (idx < 0) throw new Error(`Modifier not found in parent ${this.parent.name}`);\n\n    const modifiers = foundry.utils.duplicate(this.parent.data.modifiers);\n    modifiers.splice(idx, 1);\n    return this.parent.update({ modifiers });\n  }\n}\n","/**\n * Script Call\n */\nexport class ItemScriptCall {\n  constructor(data, parent) {\n    this.data = foundry.utils.mergeObject(this.constructor.defaultData, data);\n    this.parent = parent;\n\n    this.prepareData();\n  }\n\n  prepareData() {\n    if (this.type === \"macro\") {\n      const macro = fromUuidSync(this.value);\n      this.data.name = macro?.name || `${game.i18n.localize(\"PF1.Unknown\")} (${game.i18n.localize(\"DOCUMENT.Macro\")})`;\n      this.data.img = macro?.img || \"icons/svg/hazard.svg\";\n    }\n  }\n\n  /**\n   * Creates a script call.\n   *\n   * @param {object[]} data - Data to initialize the script call(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the script call within.\n   * @returns The resulting script calls, or an empty array if nothing was created.\n   */\n  static async create(data, context) {\n    const { parent } = context;\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newScriptCallData = parent.toObject().system.scriptCalls || [];\n      newScriptCallData.push(...data);\n\n      // Update parent\n      await parent.update({ \"system.scriptCalls\": newScriptCallData });\n\n      // Return results\n      return data.map((o) => parent.scriptCalls.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      name: game.i18n.localize(\"PF1.ScriptCalls.NewName\"),\n      img: \"icons/svg/dice-target.svg\",\n      type: \"script\",\n      value: \"\",\n      category: \"\",\n      hidden: false,\n    };\n  }\n\n  /** @type {string} */\n  get id() {\n    return this.data._id;\n  }\n\n  /** @type {string} */\n  get type() {\n    return this.data.type;\n  }\n\n  /** @type {string} */\n  get value() {\n    return this.data.value;\n  }\n\n  /** @type {string} */\n  get category() {\n    return this.data.category;\n  }\n\n  /** @type {string} */\n  get name() {\n    return this.data.name;\n  }\n\n  /** @type {string} */\n  get img() {\n    return this.data.img;\n  }\n\n  /** @type {boolean} */\n  get hidden() {\n    return this.data.hidden;\n  }\n\n  /** @type {boolean} */\n  get hide() {\n    return this.hidden && !game.user.isGM;\n  }\n\n  /**\n   * @deprecated\n   * @returns {string}\n   */\n  async getScriptBody() {\n    foundry.utils.logCompatibilityWarning(\"ItemScriptCall.getScriptBody() has been deprecated with no replacement.\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    return this.type === \"script\" ? this.value : (await fromUuid(this.value))?.command ?? \"\";\n  }\n\n  /**\n   * Get macro delegate for executing this script call with.\n   *\n   * @returns {Macro}\n   */\n  async getDelegate() {\n    if (this.type === \"script\") {\n      return new Macro({\n        type: \"script\",\n        command: this.value,\n        name: this.name,\n      });\n    } else {\n      return fromUuid(this.value);\n    }\n  }\n\n  async update(data, options = {}) {\n    if (this.parent != null) {\n      const rawChange = this.parent.system.scriptCalls.find((o) => o._id === this.id);\n      const idx = this.parent.system.scriptCalls.indexOf(rawChange);\n      if (idx >= 0) {\n        data = Object.entries(data).reduce((cur, o) => {\n          cur[`system.scriptCalls.${idx}.${o[0]}`] = o[1];\n          return cur;\n        }, {});\n        return this.parent.update(data, options);\n      }\n    }\n  }\n\n  // Opens up the editor for this script call\n  async edit({ editable = true } = {}) {\n    // For Macros\n    if (this.type === \"macro\") {\n      const macro = await fromUuid(this.value);\n      if (!macro) return void ui.notifications.error(game.i18n.format(\"PF1.Error.NoMacroID\", { id: this.value }));\n\n      macro.sheet.render(true, { focus: true, editable });\n    }\n    // For regular script calls\n    else {\n      const scriptEditor = new pf1.applications.ScriptEditor({\n        command: this.value,\n        name: this.name,\n        parent: this.parent,\n        script: this.id,\n        scriptCall: true,\n      }).render(true, { editable });\n\n      const result = await scriptEditor.awaitResult();\n      if (result) {\n        return this.update({ value: result.command, name: result.name });\n      }\n    }\n  }\n\n  /**\n   * Executes the script.\n   *\n   * @param {object} shared - An object passed between script calls, and which is passed back as a result of ItemPF.executeScriptCalls.\n   * @param {Object<string, object>} extraParams - A dictionary containing extra parameters to pass on to the call.\n   * @returns {*} - Script return value if any\n   */\n  async execute(shared, extraParams = {}) {\n    // Add variables to the evaluation scope\n    const item = this.parent;\n    const actor = item.actor;\n    const action = shared.action ?? null;\n    const token = actor?.token?.object ?? actor?.getActiveTokens(false, false)[0];\n\n    const scm = await this.getDelegate();\n    if (!scm) return;\n\n    // Create temporary macro for handling execution context and other utility\n    return scm.execute({ item, actor, token, shared, action, ...extraParams });\n  }\n}\n","import { convertDistance, calculateRange, fractionalToString } from \"../lib.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\n/**\n * @internal\n */\nexport const registerHandlebarsHelpers = function () {\n  Handlebars.registerHelper(\"convertDistance\", (value, type) =>\n    Number.isFinite(value) ? convertDistance(value, typeof type === \"string\" ? type : undefined)[0] : value\n  );\n  Handlebars.registerHelper(\"distanceUnit\", (type) => {\n    foundry.utils.logCompatibilityWarning(`distanceUnit HBS helper is deprecated with no replacement.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    const u = convertDistance(0, type)[1];\n    return pf1.config.measureUnitsShort[u] || u;\n  });\n\n  Handlebars.registerHelper(\"actionRange\", (action, rollData) => {\n    if (!action?.hasRange) return null;\n\n    const range = action.data.range.value;\n    const rangeType = action.data.range.units;\n\n    if (!rangeType) return null;\n    if (rangeType === \"spec\") return null; // Special is its own thing\n\n    const [rng, unit] = calculateRange(range, rangeType, rollData);\n    return `${rng} ${unit}`;\n  });\n\n  /**\n   * @param {ItemAction} action\n   * @param {object} [_rollData] - Deprecated\n   * @param {object} [options]\n   */\n  function actionDamage(action, _rollData, options) {\n    if (!action.hasDamage) return null;\n    return pf1.utils.formula.actionDamage(action, { simplify: options?.hash?.combine ?? true });\n  }\n\n  Handlebars.registerHelper(\"actionDamage\", actionDamage);\n\n  Handlebars.registerHelper(\"damageTypes\", (typeInfo) => {\n    foundry.utils.logCompatibilityWarning(`damageTypes HBS helper is deprecated with no replacement.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    const rv = [];\n    const { custom, values } = typeInfo;\n    if (custom) rv.push(custom);\n    values.forEach((dtId) => rv.push(game.i18n.localize(pf1.registry.damageTypes.get(dtId)?.name ?? \"PF1.Undefined\")));\n    return rv.join(\", \");\n  });\n\n  Handlebars.registerHelper(\"actionAttacks\", (action) => {\n    foundry.utils.logCompatibilityWarning(`actionAttacks HBS helper is deprecated with no replacement.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    const attacks = action.getAttacks({ full: true, bonuses: true, conditionals: true }).map((atk) => atk.attackBonus);\n    const highest = Math.max(...attacks); // Highest bonus, with assumption the first might not be that.\n    return `${attacks.length} (${highest < 0 ? highest : `+${highest}`}${attacks.length > 1 ? \"/…\" : \"\"})`;\n  });\n\n  /**\n   * Fetches ability mod value based on ability key.\n   * Avoids contaminating rollData or item data with excess strings.\n   *\n   * @deprecated Remove for v10\n   */\n  Handlebars.registerHelper(\"abilityMod\", (abl, rollData, multiplier) => {\n    return Math.floor(rollData.abilities[abl]?.mod * multiplier ?? 1);\n  });\n\n  Handlebars.registerHelper(\"json-string\", (obj) => {\n    return new Handlebars.SafeString(escape(JSON.stringify(obj)));\n  });\n\n  // Alt numberFormat helper\n  Handlebars.registerHelper(\"numberFormatAlt\", (number, { hash } = {}) => {\n    if (hash.fraction) return fractionalToString(number);\n    else return pf1.utils.limitPrecision(number, hash.decimals);\n  });\n\n  Handlebars.registerHelper(\"isNumber\", (number) => {\n    return Number.isFinite(number);\n  });\n};\n","import { ItemSelector } from \"module/applications/item-selector.mjs\";\nimport { ActorSelector } from \"module/applications/actor-selector.mjs\";\n\n/**\n * @deprecated - Use {@link pf1.utils.dialog.getNumber} instead\n * @param options\n * @param options.title\n * @param options.initial\n * @param options.min\n * @param options.max\n */\nexport async function dialogGetNumber({\n  title = \"Input Number\",\n  initial = null,\n  min = Number.NEGATIVE_INFINITY,\n  max = Number.POSITIVE_INFINITY,\n} = {}) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.dialog.dialogGetNumber is deprecated in favor of pf1.utils.dialog.getNumber\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n\n  let num = await pf1.utils.dialog.getNumber({ title, initial, min, max });\n  // match old return type and value\n  if (Number.isNaN(num)) num = initial;\n  return `${num}`;\n}\n\n/**\n * @deprecated - Use {@link pf1.utils.dialog.getActor} instead\n * @param title\n * @param actors\n * @returns {Promise<{type: string, id: string}>}\n */\nexport async function dialogGetActor(title = \"\", actors = []) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.dialog.dialogGetActor is deprecated in favor of pf1.utils.dialog.getActor\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n\n  const actorId = await pf1.utils.dialog.getActor({ actors: actors, title: title });\n  return { type: \"actor\", id: actorId };\n}\n\n/**\n * Choose actor from list.\n *\n * This is simplified interface to {@link pf1.applications.ActorSelector}\n *\n * @param {object} options - Options\n * @param {Function<Actor>} [options.filter] - Filtering callback function.\n * @param {Actor[]} [options.actors] - Actor list to choose from.\n * @param {string} [options.title] - Dialog title\n * @param {boolean} [options.disableUnowned=true] - Disable interactions with unowned actors.\n * @param {string} [options.selected] - Already selected actor ID.\n * @param {*} [options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED] - Minimum Ownership level\n * @param {boolean} [options.showUnowned=true] - Whether to show unowned actors.\n * @param {object} [options.appOptions={}] - Application options\n * @param {object} [options.renderOptions={}] - Render options\n * @returns {Promise<string|null>} - Actor ID or null if cancelled.\n */\nexport async function getActor({\n  filter,\n  actors,\n  title,\n  disableUnowned,\n  ownership,\n  selected,\n  showUnowned,\n  appOptions = {},\n  renderOptions = {},\n} = {}) {\n  const filterFunc = (actor) => {\n    return filter?.(actor) ?? true;\n  };\n\n  const options = {\n    actors,\n    disableUnowned,\n    filter: filterFunc,\n    ownership,\n    selected,\n    showUnowned,\n  };\n\n  appOptions.title = title;\n\n  return ActorSelector.wait(options, appOptions, renderOptions);\n}\n\n/**\n * Choose item from actor.\n *\n * This is simplified interface to {@link pf1.applications.ItemSelector}\n *\n * @param {object} options - Options\n * @param {boolean} [options.empty=true] - Allow empty selection.\n * @param {string} [options.type] - Basic filter for item type.\n * @param {string} [options.subType] - Basic filter for item subtype.\n * @param {Function<Item>} [options.filter] - Filtering callback function.\n * @param {Actor} [options.actor] - Actor from which to get items from.\n * @param {Item[]} [options.items] - Item list to get item from. Used only if actor is undefined.\n * @param {string} [options.title] - Dialog title\n * @param {object} [options.appOptions={}] - Application options\n * @param {object} [options.renderOptions={}] - Render options\n * @returns {Promise<Item|null>} - Chosen item or null.\n */\nexport async function getItem({\n  empty = true,\n  type,\n  subType,\n  filter,\n  actor,\n  items,\n  title,\n  appOptions = {},\n  renderOptions = {},\n} = {}) {\n  if (!type && !subType && !filter) throw new Error(\"Insufficient filter rules provided.\");\n\n  const filterFunc = (item) => {\n    if (type && item.type !== type) return false;\n    if (subType && item.subType !== subType) return false;\n    return filter?.(item) ?? true;\n  };\n\n  const options = {\n    actor,\n    items,\n    empty,\n    filter: filterFunc,\n  };\n\n  // Provide nice basic title\n  if (!title && !filter && type) {\n    if (subType) title = pf1.config[`${type}Types`]?.[subType];\n    else title = game.i18n.localize(CONFIG.Item.typeLabels[type]);\n    if (title) title = game.i18n.format(\"PF1.SelectSpecific\", { specifier: title });\n  }\n\n  appOptions.title = title;\n\n  return ItemSelector.wait(options, appOptions, renderOptions);\n}\n\n/**\n * Query for a number from current user.\n *\n * @example\n * const num = await pf1.utils.dialog.getNumber({\n *   placeholder: \"NaN\",\n *   hint: \"Amazing\",\n *   label: \"Gimme a number\",\n * });\n *\n * @param {object} [options={}] Additional options\n * @param {number} [options.min=null] Minimum value\n * @param {number} [options.max=null] Maximum value\n * @param {number} [options.step] Value stepping\n * @param {string} [options.title] Dialog title\n * @param {string} [options.label] A label preceding the number input.\n * @param {string} [options.hint] A hint displayed under the input.\n * @param {number} [options.initial] Initial value\n * @param {string} [options.placeholder] Placeholder value or description.\n * @param {string[]} [options.classes=[]] CSS classes to add.\n * @param {Function} [options.render] Render callback.\n * @param {object} [options.dialog={}] Additional dialog options.\n * @returns {Promise<number>} Provided value\n */\nexport async function getNumber({\n  title,\n  label,\n  hint,\n  initial,\n  placeholder,\n  min,\n  max,\n  step,\n  classes = [],\n  render,\n  dialog: dialogOptions = {},\n} = {}) {\n  const templateData = { value: initial, min, max, step, placeholder, label, hint };\n  const content = await renderTemplate(\"systems/pf1/templates/apps/get-number.hbs\", templateData);\n\n  return Dialog.wait(\n    {\n      title: title || game.i18n.localize(\"PF1.Application.GetNumber.Title\"),\n      content,\n      buttons: {\n        confirm: {\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: game.i18n.localize(\"PF1.Application.GetNumber.Confirm\"),\n          callback: (html) => html.querySelector(\"input[name='number']\").valueAsNumber,\n        },\n      },\n      default: \"confirm\",\n      render,\n      close: () => NaN,\n    },\n    {\n      jQuery: false,\n      classes: [...Dialog.defaultOptions.classes, \"pf1\", \"get-number\", ...classes],\n    },\n    {\n      focus: true,\n      width: 260,\n      ...dialogOptions,\n    }\n  );\n}\n","/**\n * Split copper currency into multiple currencies favoring the one with highest rates.\n *\n * @param {number} cp - Copper\n * @param {object} [options] - Additional options\n * @param {CoinType[]} [options.omit=[]] - Omit these types from the result. Baseline currency can not be omitted.\n * @param {boolean} [options.pad=true] - Pad return value by including zeroed currencies\n * @param {boolean} [options.standard=true] - If true, no coinage of greater value than the {@link pf1.config.currency.standard standard currency} is included.\n * @returns {Record<CoinType,number>} The various currencies.\n */\nexport function split(cp, { omit = [], standard = true, pad = true } = {}) {\n  const rates = Object.entries(pf1.config.currency.rate)\n    .filter(([key]) => !omit.includes(key))\n    .sort((a, b) => b[1] - a[1]);\n\n  const currencies = {};\n\n  const maxRate = standard ? pf1.config.currency.rate[pf1.config.currency.standard] ?? 1 : Infinity;\n\n  for (const [key, rate] of rates) {\n    if (rate > maxRate) {\n      if (pad) currencies[key] = 0;\n      continue;\n    }\n\n    const value = Math.floor(cp / rate);\n    if (value != 0 || pad) {\n      currencies[key] = value;\n      cp -= value * rate;\n    }\n  }\n\n  if (cp != 0 || pad) {\n    currencies[pf1.config.currency.base] = cp;\n  }\n\n  return currencies;\n}\n\n/**\n * Merges provided currencies into specified type.\n *\n * @param {object} currency - Currency object with keys according to {@link pf1.config.currencies}\n * @param {CoinType} [type] - Return coinage, defaults to {@link pf1.config.currency.base baseline currency}.\n * @returns {number} - Merged currency\n */\nexport function merge({ ...currency } = {}, type) {\n  const { rate: rates, base } = pf1.config.currency;\n  type ||= pf1.config.currency.base;\n\n  let copper = 0;\n  for (let [type, value] of Object.entries(currency)) {\n    value ??= 0;\n    if (!Number.isFinite(value)) throw new Error(`Invalid currency value \"${value}\" for type \"${type}\"`);\n    if (value == 0) continue;\n    const rate = rates[type];\n    if (rate) {\n      copper += value * rate;\n    } else {\n      if (type === base) copper += value;\n      else throw new Error(`Invalid currency type: \"${type}\"`);\n    }\n  }\n\n  if (type === base) return copper;\n  return copper / rates[type];\n}\n\n/**\n * Convert given amount of copper to some other currency, excess is placed on less valuable coinage.\n *\n * @param {number} cp - Copper quantity\n * @param {CoinType} [target] - Target unit. Defaults to {@link pf1.config.currency.standard standard currency}.\n * @param {object} [options] - Additional options\n * @param {boolean} [options.pad] - Pad return value by including zeroed currencies\n * @returns {Record<CoinType,number>} - Resulting conversion\n */\nexport function convert(cp, target, { pad = true } = {}) {\n  target ||= pf1.config.currency.standard;\n  if (!Number.isFinite(cp) || !(cp >= 0)) throw new Error(`Invalid copper quantity: ${cp}`);\n\n  const { base, rate } = pf1.config.currency;\n  const rates = Object.entries(rate).sort((a, b) => b[1] - a[1]);\n\n  const maxRate = rate[target] ?? 1;\n\n  const currencies = {};\n  for (const [key, rate] of rates) {\n    if (rate > maxRate) {\n      if (pad) currencies[key] = 0;\n      continue;\n    }\n\n    const value = Math.floor(cp / rate);\n    if (value !== 0 || pad) {\n      currencies[key] = value;\n      cp -= value * rate;\n    }\n  }\n\n  if (cp != 0 || pad) {\n    currencies[base] = cp;\n  }\n\n  return currencies;\n}\n","/**\n * @internal\n * @typedef {RollTerm|FormulaPart} AnyTerm\n */\n\n/**\n * Removes flairs from a formula.\n *\n * @param {string} formula Formula\n * @returns {string} Stripped formula\n */\nexport const unflair = (formula) => formula.replace(/\\[[^\\]]*]/g, \"\");\n\n/**\n * Compress basic math and space in produced formula.\n *\n * @param {string} formula - Formula to compress\n * @returns {string} - Compressed formula\n */\nexport const compress = (formula) =>\n  formula\n    .replace(/\\s+/g, \"\") // remove whitespaces\n    .replace(/\\+-/g, \"-\") // + -n = -n\n    .replace(/--/g, \"+\") // - -n = +n\n    .replace(/-\\+/g, \"-\") // - +n = -n\n    .replace(/\\+\\++/g, \"+\"); // + +n = +n\n\n/**\n * @param {AnyTerm} t\n * @returns {boolean}\n */\nconst isSimpleTerm = (t) => t instanceof NumericTerm || t?.simple || false;\n\nclass FormulaPart {\n  /** @type {AnyChunk[]} */\n  terms = [];\n  simple = false;\n\n  constructor(terms = [], simple = false) {\n    this.terms = terms.filter((t) => !!t);\n    this.simple = simple;\n  }\n\n  get isDeterministic() {\n    return this.terms.every((t) => t.isDeterministic);\n  }\n\n  get formula() {\n    const f = this.terms\n      .map((t) => {\n        if (t.constructor.isFunction) return `${t.simplify}`;\n        else if (t.isDeterministic) return `${t.total}`;\n        else return t.formula;\n      })\n      .join(\"\");\n\n    const roll = Roll.create(f);\n    if (roll.isDeterministic) return roll.evaluate({ async: false }).total.toString();\n    else return f;\n  }\n\n  get total() {\n    const roll = Roll.create(this.formula);\n    roll.evaluate({ async: false });\n    return roll.total;\n  }\n}\n\n/**\n * Combine [\"-\", term] into single {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms\n */\nfunction negativeTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof OperatorTerm && term.operator === \"-\") {\n      // Add preceding + if operators are fully consumed\n      if (!(nterms.at(-1) instanceof OperatorTerm)) {\n        const nt = new OperatorTerm({ operator: \"+\" });\n        nt.evaluate({ async: false });\n        nterms.push(nt);\n      }\n      nterms.push(new FormulaPart([term, terms.shift()], true));\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n *\n * @param {AnyTerm[]} terms\n */\nfunction stringTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof StringTerm) {\n      // Partial dice terms combine left\n      if (/^d\\d/.test(term.expression)) {\n        nterms.push(new FormulaPart([nterms.pop(), term]));\n      }\n      // Rest combine right\n      else {\n        nterms.push(new FormulaPart([term, terms.shift()]));\n      }\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n * Combine [term, operator, term] cases into singular {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms - Terms to combine\n * @param {string[]} operators - Operators to look for\n * @param {boolean} simpleOnly - Only combine simple terms\n * @returns {AnyTerm[]} - Product\n */\nfunction triTermOps(terms, operators, simpleOnly = false) {\n  const eterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof OperatorTerm && operators.includes(term.operator)) {\n      // Only combine simple terms\n      if (simpleOnly && !(isSimpleTerm(eterms.at(-1)) && isSimpleTerm(terms[0]))) {\n        // Fall through\n      }\n      // Combine all\n      else {\n        const left = eterms.pop(),\n          right = terms.shift();\n        eterms.push(new FormulaPart([left, term, right], isSimpleTerm(left) && isSimpleTerm(right)));\n        continue;\n      }\n    }\n    eterms.push(term);\n  }\n\n  return eterms;\n}\n\n/**\n * Ternary wrapper\n */\nclass TernaryTerm {\n  /** @type {RollTerm|FormulaPart}  */\n  condition;\n  /** @type {RollTerm|FormulaPart}  */\n  ifTrue;\n  /** @type {RollTerm|FormulaPart}  */\n  ifFalse;\n\n  constructor(condition, ifTrue, ifFalse) {\n    if (!(condition instanceof FormulaPart))\n      condition = new FormulaPart(Array.isArray(condition) ? condition : [condition]);\n    this.condition = condition;\n\n    if (!(ifTrue instanceof FormulaPart)) ifTrue = new FormulaPart(Array.isArray(ifTrue) ? ifTrue : [ifTrue]);\n    this.ifTrue = ifTrue;\n\n    if (!(ifFalse instanceof FormulaPart)) ifFalse = new FormulaPart(Array.isArray(ifFalse) ? ifFalse : [ifFalse]);\n    this.ifFalse = ifFalse;\n  }\n\n  get isDeterministic() {\n    return Roll.create(this.formula).isDeterministic;\n  }\n\n  get formula() {\n    if (this.condition.isDeterministic) {\n      if (this.condition.total) {\n        return this.ifTrue.formula;\n      } else {\n        return this.ifFalse.formula;\n      }\n    } else return [this.condition.formula, \"?\", this.ifTrue.formula, \":\", this.ifFalse.formula].join(\" \");\n  }\n\n  get total() {\n    return Roll.create(this.formula).evaluate({ async: false }).total;\n  }\n}\n\n/**\n * Convert ternaries into {@link TernaryTerm}s\n *\n * @param {AnyTerm[]} terms - Terms to look ternaries from.\n * @returns {AnyTerm[]} - Product\n */\nfunction ternaryTerms(terms) {\n  const tterms = [];\n  while (terms.length) {\n    let term = terms.shift();\n    if (term instanceof OperatorTerm && term.operator === \"?\") {\n      const cond = tterms.pop();\n      const ifTrue = [];\n      while (terms.length) {\n        term = terms.shift();\n        const endTern = term instanceof OperatorTerm && term.operator === \":\";\n        if (endTern) break;\n        ifTrue.push(term);\n      }\n      const ifFalse = terms.shift();\n      tterms.push(new TernaryTerm(cond, ifTrue, ifFalse));\n    } else tterms.push(term);\n  }\n  return tterms;\n}\n\n/**\n * Simplifies formula to very basic level.\n *\n * @param {string} formula - Formula\n * @param {object} [rollData={}] - Roll data\n * @param {object} [options] - Additional options\n * @param {boolean} [options.strict] - Attempt to return something even slightly valid even with bad formulas\n * @returns {string} - Simpler formula\n * @throws {Error} - On invalid formula\n */\nexport function simplify(formula, rollData = {}, { strict = true } = {}) {\n  formula = compress(Roll.replaceFormulaData(unflair(formula), rollData, { missing: 0 }));\n\n  // Produce nicer formula\n  formula = Roll.defaultImplementation\n    .parse(formula)\n    .map((t) => {\n      if (t instanceof ParentheticalTerm) {\n        t.evaluate();\n        const v = t.total;\n        return v >= 0 ? `${t.total}` : `(${t.total})`;\n      }\n      return t.formula;\n    })\n    .join(\"\");\n\n  const roll = new Roll.defaultImplementation(formula);\n\n  // Evaluate\n  // TODO: v12 this needs to call .evaluateSync()\n  try {\n    roll.evaluate({ async: false, minimize: true });\n  } catch (err) {\n    if (strict) throw err;\n    else return compress(formula);\n  }\n  // Old evaluation, fails with parenthetical terms followed by d6 or the like\n  //terms.forEach((term) => term.evaluate({ async: false, minimize: true }));\n  let terms = roll.terms;\n\n  // Negatives (combine - with the following term)\n  terms = negativeTerms(terms);\n\n  // PEMDAS\n  // Foundry doesn't support juxtaposition so it's not handled here\n\n  // Exponents\n  terms = triTermOps(terms, [\"**\"]);\n  // Multiply/Divide\n  terms = triTermOps(terms, [\"/\", \"*\"]);\n  // Conditionals\n  terms = triTermOps(terms, [\"==\", \"===\", \">\", \">=\", \"<\", \"<=\", \"!=\", \"!==\"]);\n  // Plus/Minus\n  terms = triTermOps(terms, [\"+\", \"-\"], true);\n  // String terms\n  terms = stringTerms(terms);\n  // Ternaries\n  terms = ternaryTerms(terms);\n\n  // Make final pass\n  const final = new FormulaPart(terms);\n\n  return final.formula.replace(/ \\+ 0\\b/g, \"\");\n}\n\n/**\n * Get action's damage formula.\n *\n * @internal\n * @param {ItemAction} action\n * @param {object} [options] - Additional options\n * @param {boolean} [options.simplify] - Simplify and compress the resulting formula before returning.\n * @param {boolean} [options.strict] - Strict option to pass to {@link pf1.utils.formula.simplify simplify}.\n * @returns {string}\n */\nexport function actionDamage(action, { simplify = true, strict = true } = {}) {\n  const actor = action.actor,\n    item = action.item,\n    actorData = actor?.system,\n    actionData = action.data;\n\n  const parts = [];\n\n  const lazy = {\n    _rollData: null,\n    get rollData() {\n      this._rollData ??= action.getRollData();\n      return this._rollData;\n    },\n  };\n\n  const handleFormula = (formula, change) => {\n    try {\n      switch (typeof formula) {\n        case \"string\": {\n          // Ensure @item.level and similar gets parsed correctly\n          const rd = formula.indexOf(\"@\") >= 0 ? change?.parent?.getRollData() ?? lazy.rollData : {};\n          if (formula != 0) {\n            const newformula = pf1.utils.formula.simplify(formula, rd, { strict });\n            if (newformula != 0) parts.push(newformula);\n          }\n          break;\n        }\n        case \"number\":\n          if (formula != 0) parts.push(`${formula}`);\n          break;\n      }\n    } catch (err) {\n      console.error(`Action damage formula parsing error with \"${formula}\"`, err, action);\n      parts.push(\"NaN\");\n    }\n  };\n\n  const handleParts = (parts) => parts.forEach(({ formula }) => handleFormula(formula));\n\n  // Normal damage parts\n  handleParts(actionData.damage.parts);\n\n  const isNatural = action.item.subType === \"natural\";\n\n  // Include ability score only if the string isn't too long yet\n  const dmgAbl = actionData.ability.damage;\n  if (dmgAbl) {\n    const ablMax = actionData.ability?.max ?? Infinity;\n    const dmgAblBaseMod = Math.min(actorData?.abilities[dmgAbl]?.mod ?? 0, ablMax);\n    const held = action.data?.held || item?.system.held || \"normal\";\n    let ablDmgMult =\n      actionData.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    if (isNatural && !(actionData.naturalAttack?.primaryAttack ?? true)) {\n      ablDmgMult = actionData.naturalAttack?.secondary?.damageMult ?? 0.5;\n    }\n\n    const dmgAblMod = dmgAblBaseMod >= 0 ? Math.floor(dmgAblBaseMod * ablDmgMult) : dmgAblBaseMod;\n    if (dmgAblMod != 0) parts.push(dmgAblMod);\n  }\n\n  // Include damage parts that don't happen on crits\n  handleParts(actionData.damage.nonCritParts);\n\n  // Include general sources. Item enhancement bonus is among these.\n  action.allDamageSources.forEach((s) => handleFormula(s.formula, s));\n\n  // Something probably went wrong\n  // Early exit from invalid formulas\n  if (parts.length === 0 || parts.some((p) => p === \"NaN\")) {\n    console.warn(\"Action damage resulted in invalid formula:\", parts.join(\" + \"), action);\n    return \"NaN\";\n  }\n\n  const semiFinal = pf1.utils.formula.compress(parts.join(\"+\"));\n  if (!simplify) return semiFinal;\n\n  // Simplification turns 1d12+1d8+6-8+3-2 into 1d12+1d8-1\n  try {\n    const rollData = semiFinal.indexOf(\"@\") >= 0 ? lazy.rollData : undefined;\n    const final = pf1.utils.formula.simplify(semiFinal, rollData, { strict });\n    return pf1.utils.formula.compress(final);\n  } catch (err) {\n    console.error(\"Invalid action damage formula:\", parts.join(\" + \"), action, err);\n    return \"NaN\";\n  }\n}\n","/**\n * Returns the result of a roll of die, which changes based on different sizes.\n *\n * Applies size change damage progression as per Paizo's FAQ entry for it.\n *\n * @see https://paizo.com/paizo/faq/v5748nruor1fm#v5748eaic9t3f\n *\n * @param {number} origCount - The original number of die to roll.\n * @param {number} origSides - The original number of sides per die to roll.\n * @param {string|number} [targetSize=\"M\"] - The target size to change the die to.\n *   Can be a string of values \"F\", \"D\", \"T\", \"S\", \"M\", \"L\", \"H\", \"G\" or \"C\" for the different sizes.\n *   Can also be a number in the range of 0 to 8, where 4 is Medium.\n * @param {string|number} [initialSize=\"M\"] - The initial size of the creature. See targetSize above.\n * @returns {Die[]|NumericTerm[]} The resulting die roll.\n */\nexport function sizeRoll(origCount, origSides, targetSize = \"M\", initialSize = \"M\") {\n  // Return NaN from invalid input\n  if (!Number.isFinite(origCount) || !Number.isFinite(origSides)) {\n    return [new NumericTerm({ number: NaN })];\n  }\n\n  const _getSizeIndex = function (size) {\n    if (typeof size === \"string\") return Object.values(pf1.config.sizeChart).indexOf(size.toUpperCase());\n    return size;\n  };\n  targetSize = _getSizeIndex(targetSize);\n  initialSize = _getSizeIndex(initialSize);\n\n  // Do no conversion if no size change is occurring\n  if (targetSize === initialSize) {\n    // Special case for 1d1\n    if (origCount === 1 && origSides === 1) return [new NumericTerm({ number: 1 })];\n    return [new Die({ number: origCount, faces: origSides })];\n  }\n\n  // Special rules\n  // \"If the die type is not referenced on this chart\"\n  if (origCount > 1) {\n    // D10\n    if (origSides === 10) {\n      if (targetSize < initialSize) {\n        initialSize--;\n      } else {\n        origCount *= 2;\n        initialSize++;\n      }\n      origSides = 8;\n    }\n    // D4\n    else if (origSides === 4) {\n      // 2d4=1d8, 3d4=2d6, 4d4=2d8, 5d4=3d6, 6d4=3d8, etc...\n      origSides = origCount % 2 == 0 ? 8 : 6;\n      origCount = Math.floor((origCount + 1) / 2);\n    }\n  }\n\n  // D12\n  // Each d12 counts as 2d6\n  if (origSides === 12) {\n    origCount *= 2;\n    origSides = 6;\n  }\n\n  // Get initial die type\n  let currentDie = `${origCount}d${origSides}`;\n  const c = pf1.config.sizeDie;\n\n  // \"If the exact number of original dice is not found on this chart...\"\n  if (c.indexOf(currentDie) === -1 && [6, 8].includes(origSides)) {\n    // Xd6: \"find the next lowest number of d6 on the chart and use that number of d8 as the original damage value\"\n    let shifted;\n    const fc = c.map((d) => d.split(\"d\").map((n) => Number(n)));\n    if (origSides === 6) {\n      shifted = fc.filter(([c, s]) => c < origCount && s === origSides).at(-1);\n    }\n    // Xd8: \"find the next highest number of d8 on the chart and use that number of d6 as the original damage value\"\n    else if (origSides === 8) {\n      shifted = fc.filter(([c, s]) => c > origCount && s === origSides).at(0);\n    } else {\n      // Paizo has not provided instructions how to resolve this\n    }\n\n    if (shifted) {\n      const [count, sides] = shifted;\n      // Swap d6 to d8 and vice versa\n      const newSides = sides === 6 ? 8 : 6;\n      currentDie = `${count}d${newSides}`;\n    }\n  }\n\n  // Pick an index from the chart\n  let index = c.indexOf(currentDie);\n  if (index === -1 && currentDie === \"1d1\") index = 0;\n  let formula = currentDie;\n  // If found, shift size\n  if (index >= 0) {\n    const d6Index = c.indexOf(\"1d6\");\n    const d8Index = c.indexOf(\"1d8\");\n    let sizeOffset = initialSize - targetSize;\n    let curSize = initialSize;\n\n    // When decreasing in size (e.g. from medium to small)\n    while (sizeOffset > 0) {\n      if (curSize <= 4 || index <= d8Index) {\n        index--;\n        sizeOffset--;\n        curSize--;\n      } else {\n        index -= 2;\n        sizeOffset--;\n        curSize--;\n      }\n    }\n    // When increasing in size (e.g. from medium to large)\n    while (sizeOffset < 0) {\n      if (curSize <= 3 || index <= d6Index) {\n        index++;\n        sizeOffset++;\n        curSize++;\n      } else {\n        index += 2;\n        sizeOffset++;\n        curSize++;\n      }\n    }\n\n    index = Math.max(0, Math.min(c.length - 1, index));\n    formula = c[index];\n  }\n\n  if (index === -1) {\n    ui.notifications.warn(game.i18n.format(\"PF1.Warning.NoSizeDie\", { fallback: currentDie, formula }));\n  }\n\n  const [number, faces] = formula.split(\"d\").map((n) => parseInt(n));\n  if (!faces || (number === 1 && faces === 1)) return [new NumericTerm({ number: number })];\n  return [new Die({ number: number, faces: faces })];\n}\n\n/**\n * Return reach information for defined size and stature.\n *\n * @param {string|number} [size=\"M\"] PF1.sizeChart key or offset\n * @param {boolean} [reach=false] Reach weapon\n * @param {\"tall\"|\"long\"} [stature=\"tall\"] Character stature\n * @returns {NumericTerm[]}\n */\nexport const sizeReach = function (size = \"M\", reach = false, stature = \"tall\") {\n  if (typeof size === \"number\") size = Object.values(pf1.config.sizeChart)[size];\n  size = Object.entries(pf1.config.sizeChart).find((o) => o[1] === size)[0];\n\n  return [\n    new NumericTerm({\n      number: pf1.documents.actor.ActorPF.getReach(size, stature)[reach ? \"reach\" : \"melee\"],\n    }),\n  ];\n};\n","/**\n * Condition/ status effects section\n */\nexport const getConditions = function () {\n  const core = CONFIG.statusEffects.filter((c) => c.id !== \"dead\");\n  let sys = pf1.registry.conditions.map((condition) => ({\n    id: condition.id,\n    name: condition.name,\n    icon: condition.texture,\n    // Compatibiliy shims with Foundry\n    get label() {\n      return this.name;\n    },\n    set label(name) {\n      this.name = name;\n    },\n  }));\n  if (game.settings.get(\"pf1\", \"coreEffects\")) sys.push(...core);\n\n  sys.sort((a, b) => a.label.localeCompare(b.label));\n\n  const deadCond = sys.findSplice((c) => c.id === \"dead\");\n  sys = [deadCond, ...sys];\n\n  return sys;\n};\n","/**\n * Add static data to roll data.\n *\n * @param {object} rollData\n */\nexport function addStatic(rollData) {\n  // @step (1.5m or 5ft) – the value here is always 5 since that's what all math use\n  rollData.step = 5;\n}\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single script call category/trigger.\n *\n * @group Script Call Categories\n */\nexport class ScriptCallCategory extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      itemTypes: new fields.ArrayField(new fields.StringField({})),\n      info: new fields.StringField({ required: true, blank: false, initial: \"\" }, { localize: true }),\n    };\n  }\n}\n\n/**\n * The singleton registry of script call categories/trigger events.\n * At runtime this registry is accessible as `pf1.registry.scriptCalls`.\n *\n * @group Script Call Categories\n * @see {@link Registry}\n * @see {@link ScriptCallCategory}\n * @augments {Registry<ScriptCallCategory>}\n */\nexport class ScriptCalls extends Registry {\n  /** @inheritdoc */\n  static model = ScriptCallCategory;\n\n  /** @inheritdoc */\n  static _defaultData = [\n    // Use\n    {\n      _id: \"use\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.Use.Name\",\n      info: \"PF1.ScriptCalls.Use.Info\",\n    },\n    // Post-Use\n    {\n      _id: \"postUse\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.PostUse.Name\",\n      info: \"PF1.ScriptCalls.PostUse.Info\",\n    },\n    // Equip\n    {\n      _id: \"equip\",\n      itemTypes: [\"weapon\", \"equipment\", \"loot\"],\n      name: \"PF1.ScriptCalls.Equip.Name\",\n      info: \"PF1.ScriptCalls.Equip.Info\",\n    },\n    // Implant\n    {\n      _id: \"implant\",\n      itemTypes: [\"implant\"],\n      name: \"PF1.ScriptCalls.Implant.Name\",\n      info: \"PF1.ScriptCalls.Implant.Info\",\n    },\n    // Toggle\n    {\n      _id: \"toggle\",\n      itemTypes: [\"buff\", \"feat\"],\n      name: \"PF1.ScriptCalls.Toggle.Name\",\n      info: \"PF1.ScriptCalls.Toggle.Info\",\n    },\n    // Change Quantity\n    {\n      _id: \"changeQuantity\",\n      itemTypes: [\"loot\", \"equipment\", \"weapon\", \"implant\", \"consumable\", \"container\"],\n      name: \"PF1.ScriptCalls.ChangeQuantity.Name\",\n      info: \"PF1.ScriptCalls.ChangeQuantity.Info\",\n    },\n    // Change Level\n    {\n      _id: \"changeLevel\",\n      itemTypes: [\"buff\", \"class\"],\n      name: \"PF1.ScriptCalls.ChangeLevel.Name\",\n      info: \"PF1.ScriptCalls.ChangeLevel.Info\",\n    },\n  ];\n}\n\n/**\n * {@inheritDoc ScriptCalls}\n *\n * @group Script Call Categories\n * @type {ScriptCalls}\n */\nexport let scriptCalls;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single condition entry in the {@link Condition} registry.\n *\n * @group Conditions\n */\nexport class Condition extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      texture: new fields.StringField({ required: true, initial: \"\" }),\n      track: new fields.StringField({\n        required: false,\n        blank: true,\n        initial: \"\",\n        choices: Conditions.TRACKS,\n      }),\n      mechanics: new fields.SchemaField(\n        {\n          changes: new fields.ArrayField(\n            new fields.SchemaField({\n              formula: new fields.StringField({ required: true }),\n              target: new fields.StringField({ required: true }),\n              type: new fields.StringField({ required: true }),\n              operator: new fields.StringField({ required: false, initial: undefined }),\n              priority: new fields.NumberField({ required: false, initial: undefined }),\n              continuous: new fields.BooleanField({ required: false, initial: undefined }),\n            })\n          ),\n          flags: new fields.ArrayField(new fields.StringField({})),\n        },\n        {\n          required: false,\n          nullable: true,\n          initial: null,\n        }\n      ),\n      journal: new fields.StringField({ nullable: true, blank: false, required: false }),\n      showInDefense: new fields.BooleanField({ required: false, initial: true }),\n      showInAction: new fields.BooleanField({ required: false, initial: true }),\n      showInBuffsTab: new fields.BooleanField({ required: false, initial: true }),\n    };\n  }\n}\n\n/**\n * The singleton registry of condition types.\n * At runtime this registry is accessible as `pf1.registry.conditions`.\n *\n * @group Conditions\n * @see {@link Registry}\n * @see {@link Condition}\n * @augments {Registry<Condition>}\n */\nexport class Conditions extends Registry {\n  /** @inheritdoc */\n  static model = Condition;\n\n  /**\n   * An array of allowed tracks of condition advancement.\n   */\n  static TRACKS = /** @type {const} */ ([\"dying\", \"fear\", \"lethargy\"]);\n\n  /**\n   * @internal\n   */\n  static SET_TO_ZERO = {\n    formula: 0,\n    type: \"untypedPerm\",\n    operator: \"set\",\n    priority: 1001,\n    continuous: true,\n  };\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"bleed\",\n      name: \"PF1.Condition.bleed\",\n      texture: \"systems/pf1/icons/conditions/bleed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.L6DTocj1PbOtuspU\",\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"blind\",\n      name: \"PF1.Condition.blind\",\n      texture: \"icons/svg/blind.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.A9KUpd2bsdZZsQqj\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n    },\n    {\n      _id: \"confused\",\n      name: \"PF1.Condition.confused\",\n      texture: \"systems/pf1/icons/conditions/confused.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.J2yma0xciBKRUh9t\",\n      showInDefense: false,\n    },\n    {\n      _id: \"cowering\",\n      name: \"PF1.Condition.cowering\",\n      texture: \"systems/pf1/icons/conditions/cowering.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eNW5geiJqrnAjjNu\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"dazed\",\n      name: \"PF1.Condition.dazed\",\n      texture: \"systems/pf1/icons/conditions/dazed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.2A6Gk60pLDKR2zT0\",\n      showInAction: false,\n    },\n    {\n      _id: \"dazzled\",\n      name: \"PF1.Condition.dazzled\",\n      texture: \"systems/pf1/icons/conditions/dazzled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.xHUnCadQ2qYsfvV0\",\n      mechanics: {\n        changes: [\n          {\n            formula: -1,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      showInDefense: false,\n      showInAction: false,\n    },\n    {\n      _id: \"dead\",\n      name: \"PF1.Condition.dead\",\n      texture: \"icons/svg/skull.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.YvycF7bsU1hPm4pX\",\n      track: \"dying\",\n      showInBuffsTab: false,\n    },\n    {\n      _id: \"deaf\",\n      name: \"PF1.Condition.deaf\",\n      texture: \"icons/svg/deaf.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.3uIamlB0L1UZUwoF\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"init\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      showInAction: false, // TODO: Add configuraton that this is to be true for spells only\n    },\n    {\n      _id: \"disabled\",\n      name: \"PF1.Condition.disabled\",\n      texture: \"systems/pf1/icons/conditions/disabled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.dtHHibCiKZzdjyvp\",\n      track: \"dying\",\n      showInDefense: false,\n    },\n    {\n      _id: \"dying\",\n      name: \"PF1.Condition.dying\",\n      texture: \"systems/pf1/icons/conditions/dying.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.zG6xEGMIerpbnND0\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      track: \"dying\",\n      showInDefense: false,\n    },\n    {\n      _id: \"entangled\",\n      name: \"PF1.Condition.entangled\",\n      texture: \"icons/svg/net.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.oxmugd8SoxVjvRRl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"exhausted\",\n      name: \"PF1.Condition.exhausted\",\n      texture: \"systems/pf1/icons/conditions/exhausted.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ITxxh53qgl74wWcE\",\n      mechanics: {\n        changes: [\n          {\n            formula: -6,\n            target: \"str\",\n            type: \"untyped\",\n          },\n          {\n            formula: -6,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n    },\n    {\n      _id: \"fatigued\",\n      name: \"PF1.Condition.fatigued\",\n      texture: \"icons/svg/unconscious.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.AVaxTNildXRzYnQm\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"str\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n    },\n    {\n      _id: \"flatFooted\",\n      name: \"PF1.Condition.flatFooted\",\n      texture: \"systems/pf1/icons/conditions/flat-footed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eSvkrrl3US7RJTai\",\n      mechanics: {\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"frightened\",\n      name: \"PF1.Condition.frightened\",\n      texture: \"systems/pf1/icons/conditions/frightened.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.uqpJ7ZMnWF5qjOTl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      showInAction: false,\n    },\n    {\n      _id: \"grappled\",\n      name: \"PF1.Condition.grappled\",\n      texture: \"systems/pf1/icons/conditions/grappled.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.i4gHNAVajJWs4cFI\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"helpless\",\n      name: \"PF1.Condition.helpless\",\n      texture: \"systems/pf1/icons/conditions/helpless.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.6dtCytJsNkO8Hwq4\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"incorporeal\",\n      name: \"PF1.Condition.incorporeal\",\n      texture: \"systems/pf1/icons/conditions/incorporeal.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.acqGBiMxTbXZ47zU\",\n      mechanics: {\n        changes: [\n          {\n            formula: 0,\n            target: \"nac\",\n            type: \"base\",\n            operator: \"set\",\n            priority: -10,\n          },\n          {\n            formula: \"max(1, @abilities.cha.mod)\",\n            operator: \"add\",\n            target: \"ac\",\n            type: \"deflection\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"invisible\",\n      name: \"PF1.Condition.invisible\",\n      texture: \"icons/svg/invisible.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.Wr2ZWUZcyVWQ4GtX\",\n      showInDefense: false,\n    },\n    {\n      _id: \"nauseated\",\n      name: \"PF1.Condition.nauseated\",\n      texture: \"systems/pf1/icons/conditions/nauseated.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ySiyyK1BMAyKPY4I\",\n    },\n    {\n      _id: \"panicked\",\n      name: \"PF1.Condition.panicked\",\n      texture: \"icons/svg/terror.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.nGTsTfpWcJTTU3rk\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n    },\n    {\n      _id: \"paralyzed\",\n      name: \"PF1.Condition.paralyzed\",\n      texture: \"systems/pf1/icons/conditions/paralyzed.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.24p2Koq4FFCLDKnj\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n          {\n            ...this.SET_TO_ZERO,\n            target: \"str\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"petrified\",\n      name: \"PF1.Condition.petrified\",\n      texture: \"systems/pf1/icons/conditions/petrified.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ayGQWwbrhAc99pkH\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"pinned\",\n      name: \"PF1.Condition.pinned\",\n      texture: \"systems/pf1/icons/conditions/pinned.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.poCq8gXdDi5leaMT\",\n      mechanics: {\n        changes: [\n          {\n            formula: \"min(0, @abilities.dex.mod)\",\n            target: \"dexMod\",\n            type: \"untyped\",\n            operator: \"set\",\n            priority: 1001,\n            continuous: true,\n          },\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"cmd\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"prone\",\n      name: \"PF1.Condition.prone\",\n      texture: \"icons/svg/falling.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.VbagnIPQS523dwxa\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"mattack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"shaken\",\n      name: \"PF1.Condition.shaken\",\n      texture: \"systems/pf1/icons/conditions/shaken.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.XxLUswkCuXnXmA5T\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"sickened\",\n      name: \"PF1.Condition.sickened\",\n      texture: \"systems/pf1/icons/conditions/sickened.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.7LwCMwrX3tchvrjW\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"wdamage\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"sleep\",\n      name: \"PF1.Condition.sleep\",\n      texture: \"icons/svg/sleep.svg\",\n      journal: null,\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"squeezing\",\n      name: \"PF1.Condition.squeezing\",\n      texture: \"systems/pf1/icons/conditions/squeezing.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.jzeZ0Uf31CAMZra9\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"stable\",\n      name: \"PF1.Condition.stable\",\n      texture: \"systems/pf1/icons/conditions/stable.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.krgVb43Vd62dqpYr\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      track: \"dying\",\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"staggered\",\n      name: \"PF1.Condition.staggered\",\n      texture: \"systems/pf1/icons/conditions/staggered.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.TTp8q9Vb2PNAujWu\",\n    },\n    {\n      _id: \"stunned\",\n      name: \"PF1.Condition.stunned\",\n      texture: \"icons/svg/stoned.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ZgsBPY0uVCVl6SGh\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"unconscious\",\n      name: \"PF1.Condition.unconscious\",\n      texture: \"systems/pf1/icons/conditions/unconscious.svg\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.kHwbZ38VHCa1wkUF\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n    },\n  ];\n\n  /**\n   * Get all conditions that have belong to a given track\n   *\n   * @param {string} track - The given track to check for\n   * @returns {string[]} - An array of all conditions in the given track\n   */\n  conditionsInTrack(track) {\n    return this.contents.filter((condition) => condition.track === track).map((condition) => condition.id);\n  }\n\n  /**\n   * Get all tracks and their conditions\n   *\n   * @returns {string[][]}\n   */\n  trackedConditions() {\n    return this.tracks.map((track) => this.conditionsInTrack(track));\n  }\n\n  /**\n   * The condition tracks\n   *\n   * @type {string[]}\n   */\n  get tracks() {\n    return this.constructor.TRACKS;\n  }\n}\n\n/**\n * {@inheritDoc Conditions}\n *\n * @group Conditions\n * @type {Conditions}\n */\nexport let conditions;\n","import { Registry } from \"./base-registry.mjs\";\nimport { RegistryEntry } from \"./base-registry.mjs\";\n\n// Notes\n// PPC = Player Companion\n// PRG is in rare cases used to refer to core rulebook, but also sometimes to refer to the game in its entirety\n// PCh = Pathfinder Chronicles\n\nclass URLField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (!/^https?:\\/\\/[\\w\\d.]+\\.\\w+/.test(value)) throw new Error(\"Must be a valid URL\");\n  }\n}\n\nclass DateField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (value && Number.isNaN(Date.parse(value))) {\n      throw new Error(\"Must be valid date in YYYY-MM-DD format.\");\n    }\n  }\n}\n\nexport class Source extends RegistryEntry {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    const optionalString = (options = {}) =>\n      new fields.StringField({ required: false, nullable: true, blank: true, initial: undefined, ...options });\n\n    return {\n      ...super.defineSchema(),\n      name: new fields.StringField({ nullable: false, blank: false, required: true }),\n      abbr: new fields.StringField({ nullable: false, blank: false, required: false, initial: undefined }), // Add constraints\n      date: new DateField({ required: false, nullable: true, blank: false, initial: undefined }),\n      pages: new fields.NumberField({\n        required: false,\n        integer: true,\n        min: 1,\n        initial: undefined,\n        label: \"Page count\",\n      }),\n      isbn: optionalString(), // TODO: Validate ISBN\n      publisher: new fields.StringField({ required: false, blank: false, nullable: false, initial: \"Paizo\" }), // Assume Paizo\n      level: new fields.NumberField({\n        required: false,\n        min: 1,\n        integer: true,\n        initial: undefined,\n        label: \"Starting level\",\n      }),\n      tieIn: optionalString(),\n      url: new URLField({ required: false, nullable: true, blank: true, initial: undefined }),\n      legacy: new fields.BooleanField({ required: false, initial: false, label: \"D&D 3.5 Material\" }),\n      type: optionalString({ choices: () => this.TYPES }),\n    };\n  }\n\n  /**\n   * An array of allowed types of sources.\n   *\n   * core: Core book\n   * companion: Player companion\n   * setting: Campaign setting book\n   * ap: Adventure path\n   * pg: Adventure path - player guide\n   * comic: Comic\n   * pfs: Pathfinder Society\n   * module: Module\n   */\n  static TYPES = /** @type {const} */ ([\"core\", \"setting\", \"ap\", \"module\", \"companion\", \"pg\", \"comic\", \"pfs\"]);\n}\n\nexport class Sources extends Registry {\n  /** @inheritdoc */\n  static model = Source;\n\n  /**\n   * Book type prefix\n   */\n  static PREFIXES = {\n    companion: \"PPC\", // Pathfinder Player Companion\n  };\n\n  static _defaultData = [\n    {\n      _id: \"PZO1110\",\n      name: \"Core Rulebook\",\n      abbr: \"CRB\",\n      date: \"2009-08-13\",\n      pages: 576,\n      isbn: \"978-1-60125-150-3\",\n      url: \"https://paizo.com/products/btpy88yj\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1114\",\n      name: \"GameMastery Guide\",\n      abbr: \"GMG\",\n      date: \"2010-06-23\",\n      pages: 320,\n      isbn: \"978-1-60125-217-3\",\n      url: \"https://paizo.com/products/btpy8ffn\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1112\",\n      name: \"Bestiary [1]\",\n      date: \"2009-10-21\",\n      pages: 320,\n      isbn: \"978-1-60125-183-1\",\n      url: \"https://paizo.com/products/btpy8auu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1116\",\n      name: \"Bestiary 2\",\n      date: \"2010-12-29\",\n      pages: 320,\n      isbn: \"978-1-60125-268-5\",\n      url: \"https://paizo.com/products/btpy8hif\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1120\",\n      name: \"Bestiary 3\",\n      date: \"2011-12-21\",\n      pages: 320,\n      isbn: \"978-1-60125-378-1\",\n      url: \"https://paizo.com/products/btpy8odu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1127\",\n      name: \"Bestiary 4\",\n      date: \"2013-10-30\",\n      pages: 320,\n      isbn: \"978-1-60125-575-4\",\n      url: \"https://paizo.com/products/btpy91ds\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1133\",\n      name: \"Bestiary 5\",\n      date: \"2015-11-18\",\n      pages: 320,\n      isbn: \"978-1-60125-792-5\",\n      url: \"https://paizo.com/products/btpy9g9x\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1137\",\n      name: \"Bestiary 6\",\n      date: \"2017-04-26\",\n      pages: 320,\n      isbn: \"978-1-60125-931-8\",\n      url: \"https://paizo.com/products/btpy9r1y\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1129\",\n      name: \"Advanced Class Guide\",\n      abbr: \"ACG\",\n      date: \"2015-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-671-3\",\n      url: \"https://paizo.com/products/btpy978v\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1115\",\n      name: \"Advanced Player's Guide\",\n      abbr: \"APG\",\n      date: \"2010-08-05\",\n      pages: 320,\n      isbn: \"978-1-60125-246-3\",\n      url: \"https://paizo.com/products/btpy8fo1\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1121\",\n      name: \"Advanced Race Guide\",\n      abbr: \"ARG\",\n      date: \"2012-06-20\",\n      pages: 256,\n      isbn: \"978-1-60125-390-3\",\n      url: \"https://paizo.com/products/btpy8rv2\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1138\",\n      name: \"Adventurer's Guide\",\n      date: \"2017-05-24\",\n      pages: 192,\n      isbn: \"978-1-60125-938-7\",\n      url: \"https://paizo.com/products/btpy9sjo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1128\",\n      name: \"Strategy Guide\",\n      date: \"2015-03-25\",\n      pages: 160,\n      isbn: \"978-1-60125-626-3\",\n      url: \"https://paizo.com/products/btpy99sk\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1132\",\n      name: \"Occult Adventures\",\n      abbr: \"OA\",\n      date: \"2015-07-29\",\n      pages: 272,\n      isbn: \"978-1-60125-762-8\",\n      url: \"https://paizo.com/products/btpy9egu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1131\",\n      name: \"Pathfinder Unchained\",\n      date: \"2015-04-29\",\n      pages: 256,\n      isbn: \"978-1-60125-715-4\",\n      url: \"https://paizo.com/products/btpy9c25\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1136\",\n      name: \"Villain Codex\",\n      date: \"2016-11-16\",\n      pages: 256,\n      isbn: \"978-1-60125-906-6\",\n      url: \"https://paizo.com/products/btpy9oo7\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1130\",\n      name: \"Monster Codex\",\n      abbr: \"MC\",\n      date: \"2014-10-22\",\n      pages: 256,\n      isbn: \"978-1-60125-686-7\",\n      url: \"https://paizo.com/products/btpy9926\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1135\",\n      name: \"Horror Adventures\",\n      date: \"2016-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-849-6\",\n      url: \"https://paizo.com/products/btpy9n5a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1126\",\n      name: \"Mythic Adventures\",\n      date: \"2013-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-549-5\",\n      url: \"https://paizo.com/products/btpy8ywe\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1124\",\n      name: \"NPC Codex\",\n      date: \"2012-11-21\",\n      pages: 320,\n      isbn: \"978-1-60125-467-2\",\n      url: \"https://paizo.com/products/btpy8v3a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1125\",\n      name: \"Ultimate Campaign\",\n      date: \"2013-05-29\",\n      pages: 256,\n      isbn: \"978-1-60125-498-6\",\n      url: \"https://paizo.com/products/btpy8x64\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1118\",\n      name: \"Ultimate Combat\",\n      abbr: \"UC\",\n      date: \"2011-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-359-0\",\n      url: \"https://paizo.com/products/btpy8mcz\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1123\",\n      name: \"Ultimate Equipment\",\n      abbr: \"UE\",\n      date: \"2012-08-16\",\n      pages: 400,\n      isbn: \"978-1-60125-449-8\",\n      url: \"https://paizo.com/products/btpy8tmc\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1134\",\n      name: \"Ultimate Intrigue\",\n      abbr: \"UI\",\n      date: \"2016-03-30\",\n      pages: 256,\n      isbn: \"978-1-60125-826-7\",\n      url: \"https://paizo.com/products/btpy9j6p\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1117\",\n      name: \"Ultimate Magic\",\n      abbr: \"UM\",\n      date: \"2011-05-08\",\n      pages: 256,\n      isbn: \"978-1-60125-299-9\",\n      url: \"https://paizo.com/products/btpy8k8r\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1139\",\n      name: \"Book of the Damned\",\n      date: \"2017-09-27\",\n      pages: 258,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9tok\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1140\",\n      name: \"Ultimate Wilderness\",\n      abbr: \"UW\",\n      date: \"2017-11-15\",\n      pages: 288,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9ujo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1141\",\n      name: \"Planar Adventures\",\n      abbr: \"PA\",\n      date: \"2018-06-27\",\n      pages: 192,\n      isbn: \"978-1-64078-044-6\",\n      url: \"https://paizo.com/products/btpya1am\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Player's Guide\",\n      date: \"2007-09-01\",\n      pages: 16,\n      isbn: \"978-1-60125-059-9\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8bd9\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9001\",\n      name: \"Rise of the Runelords #1: Burnt Offerings\",\n      abbr: \"RotR-1\",\n      date: \"2007-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-035-3\",\n      url: \"https://paizo.com/products/btpy7zkr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9002\",\n      name: \"Rise of the Runelords #2: The Skinsaw Murders\",\n      abbr: \"RotR-2\",\n      date: \"2007-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-037-7\",\n      url: \"https://paizo.com/products/btpy8029\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9003\",\n      name: \"Rise of the Runelords #3: The Hook Mountain Massacre\",\n      abbr: \"RotR-3\",\n      date: \"2007-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-038-4\",\n      url: \"https://paizo.com/products/btpy80e8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9004\",\n      name: \"Rise of the Runelords #4: Fortress of the Stone Giants\",\n      abbr: \"RotR-4\",\n      date: \"2007-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-039-1\",\n      url: \"https://paizo.com/products/btpy80hm\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9005\",\n      name: \"Rise of the Runelords #5: Sins of the Saviors\",\n      abbr: \"RotR-5\",\n      date: \"2007-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-040-7\",\n      url: \"https://paizo.com/products/btpy815p\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9006\",\n      name: \"Rise of the Runelords #6: Spires of Xin-Shalast\",\n      abbr: \"RotR-6\",\n      date: \"2008-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-041-4\",\n      url: \"https://paizo.com/products/btpy817c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-2S\",\n      name: \"Curse of the Crimson Throne Player's Guide\",\n      date: \"2008-02-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy806v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1021\",\n      name: \"Curse of the Crimson Throne\",\n      date: \"2016-10-01\",\n      pages: 480,\n      isbn: \"978-1-60125-890-8\",\n      url: \"https://paizo.com/products/btpy9nme\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9007\",\n      name: \"Curse of the Crimson Throne #1: Edge of Anarchy\",\n      abbr: \"CotCT-1\",\n      date: \"2008-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-088-9\",\n      url: \"https://paizo.com/products/btpy81xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9008\",\n      name: \"Curse of the Crimson Throne #2: Seven Days to the Grave\",\n      abbr: \"CotCT-2\",\n      date: \"2008-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-091-9\",\n      url: \"https://paizo.com/products/btpy82qy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9009\",\n      name: \"Curse of the Crimson Throne #3: Escape From Old Korvosa\",\n      abbr: \"CotCT-3\",\n      date: \"2008-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-092-6\",\n      url: \"https://paizo.com/products/btpy82t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9010\",\n      name: \"Curse of the Crimson Throne #4: A History of Ashes\",\n      abbr: \"CotCT-4\",\n      date: \"2008-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-093-3\",\n      url: \"https://paizo.com/products/btpy82u9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9011\",\n      name: \"Curse of the Crimson Throne #5: Skeletons of Scarwall\",\n      abbr: \"CotCT-5\",\n      date: \"2008-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-099-5\",\n      url: \"https://paizo.com/products/btpy83yw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9012\",\n      name: \"Curse of the Crimson Throne #6: Crown of Fangs\",\n      abbr: \"CotCT-6\",\n      date: \"2008-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-109-1\",\n      url: \"https://paizo.com/products/btpy84el\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9401\",\n      name: \"Second Darkness Player's Guide\",\n      date: \"2008-08-01\",\n      pages: 32,\n      isbn: \"978-1-60125-142-8\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy84en\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9013\",\n      name: \"Second Darkness #1: Shadow in the Sky\",\n      date: \"2008-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-115-2\",\n      url: \"https://paizo.com/products/btpy84em\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9014\",\n      name: \"Second Darkness #2: Children of the Void\",\n      date: \"2008-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-127-5\",\n      url: \"https://paizo.com/products/btpy85ed\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9015\",\n      name: \"Second Darkness #3: The Armageddon Echo\",\n      date: \"2008-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-128-2\",\n      url: \"https://paizo.com/products/btpy85ep\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9016\",\n      name: \"Second Darkness #4: Endless Night\",\n      date: \"2008-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-129-9\",\n      url: \"https://paizo.com/products/btpy85er\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9017\",\n      name: \"Second Darkness #5: A Memory of Darkness\",\n      date: \"2008-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-130-5\",\n      url: \"https://paizo.com/products/btpy86j6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9018\",\n      name: \"Second Darkness #6: Descent into Midnight\",\n      date: \"2009-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-131-2\",\n      url: \"https://paizo.com/products/btpy86v1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9404\",\n      name: \"Legacy of Fire Player's Guide\",\n      date: \"2009-03-01\",\n      pages: 32,\n      isbn: \"978-1-60125-168-8\",\n      tieIn: \"Legacy of Fire\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8737\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9019\",\n      name: \"Legacy of Fire #1: Howl of the Carrion King\",\n      abbr: \"LoF-1\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-159-6\",\n      url: \"https://paizo.com/products/btpy8735\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9020\",\n      name: \"Legacy of Fire #2: House of the Beast\",\n      abbr: \"LoF-2\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-160-2\",\n      url: \"https://paizo.com/products/btpy86xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9021\",\n      name: \"Legacy of Fire #3: The Jackal's Price\",\n      abbr: \"LoF-3\",\n      date: \"2009-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-161-9\",\n      url: \"https://paizo.com/products/btpy87uv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9022\",\n      name: \"Legacy of Fire #4: The End of Eternity\",\n      abbr: \"LoF-4\",\n      date: \"2009-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-173-2\",\n      url: \"https://paizo.com/products/btpy87ux\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9023\",\n      name: \"Legacy of Fire #5: The Impossible Eye\",\n      abbr: \"LoF-5\",\n      date: \"2009-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-179-4\",\n      url: \"https://paizo.com/products/btpy88tp\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9024\",\n      name: \"Legacy of Fire #6: The Final Wish\",\n      abbr: \"LoF-6\",\n      date: \"2009-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-185-5\",\n      url: \"https://paizo.com/products/btpy89a2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-5E\",\n      name: \"Council of Thieves Player's Guide\",\n      date: \"2009-08-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy89m7\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9025\",\n      name: \"Council of Thieves #1: The Bastards of Erebus\",\n      abbr: \"CoT-1\",\n      date: \"2009-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-190-9\",\n      url: \"https://paizo.com/products/btpy89a4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9026\",\n      name: \"Council of Thieves #2: The Sixfold Trial\",\n      abbr: \"CoT-2\",\n      date: \"2009-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-196-1\",\n      url: \"https://paizo.com/products/btpy89vw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9027\",\n      name: \"Council of Thieves #3: What Lies in Dust\",\n      abbr: \"CoT-3\",\n      date: \"2009-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-197-8\",\n      url: \"https://paizo.com/products/btpy8b8h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9028\",\n      name: \"Council of Thieves #4: The Infernal Syndrom\",\n      abbr: \"CoT-4\",\n      date: \"2009-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-198-5\",\n      url: \"https://paizo.com/products/btpy8b9h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9029\",\n      name: \"Council of Thieves #5: Mother of Flies\",\n      abbr: \"CoT-5\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-199-2\",\n      url: \"https://paizo.com/products/btpy8bc1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9030\",\n      name: \"Council of Thieves #6: The Twice-Damned Prince\",\n      abbr: \"CoT-6\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-226-5\",\n      url: \"https://paizo.com/products/btpy8d54\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-6E\",\n      name: \"Kingmaker Player's Guide\",\n      date: \"2010-03-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy8dqh\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9031\",\n      name: \"Kingmaker #1: Stolen Land\",\n      date: \"2010-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-229-6\",\n      url: \"https://paizo.com/products/btpy8dhc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9032\",\n      name: \"Kingmaker #2: Rivers Run Red\",\n      date: \"2010-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-233-3\",\n      url: \"https://paizo.com/products/btpy8dml\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9033\",\n      name: \"Kingmaker #3: The Varnhold Vanishing\",\n      date: \"2010-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-234-0\",\n      url: \"https://paizo.com/products/btpy8e7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9034\",\n      name: \"Kingmaker #4: Blood for Blood\",\n      date: \"2010-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-251-7\",\n      url: \"https://paizo.com/products/btpy8b7w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9035\",\n      name: \"Kingmaker #5: War of the River Kings\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-252-4\",\n      url: \"https://paizo.com/products/btpy8b7u\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9036\",\n      name: \"Kingmaker #6: Sound of a Thousand Screams\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-253-1\",\n      url: \"https://paizo.com/products/btpy8b7x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-7E\",\n      name: \"Serpent's Skull Player's Guide\",\n      date: \"2010-07-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy8g6d\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9037\",\n      name: \"Serpent's Skull #1: Soul for Smuggler's Shiv\",\n      date: \"2010-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-254-8\",\n      url: \"https://paizo.com/products/btpy8b7v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9038\",\n      name: \"Serpent's Skull #2: Racing to Ruin\",\n      date: \"2010-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-273-9\",\n      url: \"https://paizo.com/products/btpy8ddc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9039\",\n      name: \"Serpent's Skull #3: City of Seven Spears\",\n      date: \"2010-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-274-6\",\n      url: \"https://paizo.com/products/btpy8h6h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9040\",\n      name: \"Serpent's Skull #4: Vaults of Madness\",\n      date: \"2010-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-275-3\",\n      url: \"https://paizo.com/products/btpy8dde\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9041\",\n      name: \"Serpent's Skull #5: The Thousand Fangs Below\",\n      date: \"2011-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-276-0\",\n      url: \"https://paizo.com/products/btpy8ddf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9042\",\n      name: \"Serpent's Skull #6: Sanctum of the Serpent God\",\n      date: \"2011-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-307-1\",\n      url: \"https://paizo.com/products/btpy8g3i\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-8E\",\n      name: \"Carrion Crown Player's Guide\",\n      date: \"2011-03-01\",\n      pages: 15,\n      url: \"https://paizo.com/products/btpy8j0q\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9043\",\n      name: \"Carrion Crown #1: The Haunting of Harrowstone\",\n      abbr: \"CC-1\",\n      date: \"2011-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-308-8\",\n      url: \"https://paizo.com/products/btpy8g7a\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9044\",\n      name: \"Carrion Crown #2: Trial of the Beast\",\n      abbr: \"CC-2\",\n      date: \"2011-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-309-5\",\n      url: \"https://paizo.com/products/btpy8g7b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9045\",\n      name: \"Carrion Crown #3: Broken Moon\",\n      abbr: \"CC-3\",\n      date: \"2011-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-310-1\",\n      url: \"https://paizo.com/products/btpy8g7c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9046\",\n      name: \"Carrion Crown #4: Wake of the Watcher\",\n      abbr: \"CC-4\",\n      date: \"2011-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-311-8\",\n      url: \"https://paizo.com/products/btpy8g7d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9047\",\n      name: \"Carrion Crown #5: Ashes at Dawn\",\n      abbr: \"CC-5\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-312-5\",\n      url: \"https://paizo.com/products/btpy8g7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9048\",\n      name: \"Carrion Crown #6: Shadows of Gallowspire\",\n      abbr: \"CC-6\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-313-2\",\n      url: \"https://paizo.com/products/btpy8g7t\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-9E\",\n      name: \"Jade Regent Player's Guide\",\n      date: \"2011-07-27\",\n      pages: 28,\n      url: \"https://paizo.com/products/btpy8mh3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9049\",\n      name: \"Jade Regent #1: The Brinewall Legacy\",\n      date: \"2011-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-361-3\",\n      url: \"https://paizo.com/products/btpy8j35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9050\",\n      name: \"Jade Regent #2: Night of Frozen Shadows\",\n      date: \"2011-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-366-8\",\n      url: \"https://paizo.com/products/btpy8jrr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9051\",\n      name: \"Jade Regent #3: The Hungry Storm\",\n      date: \"2011-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-374-3\",\n      url: \"https://paizo.com/products/btpy8kgv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9052\",\n      name: \"Jade Regent #4: Forest of Spirits\",\n      date: \"2011-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-380-4\",\n      url: \"https://paizo.com/products/btpy8l2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9053\",\n      name: \"Jade Regent #5: Tide of Honor\",\n      date: \"2012-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-385-9\",\n      url: \"https://paizo.com/products/btpy8mh0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9054\",\n      name: \"Jade Regent #6: The Empty Throne\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-400-9\",\n      url: \"https://paizo.com/products/btpy8mh1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-10E\",\n      name: \"Skull and Shackles Player's Guide\",\n      date: \"2012-02-01\",\n      pages: 30,\n      url: \"https://paizo.com/products/btpy8rwc\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9055\",\n      name: \"Skull & Shackles #1: The Wormwood Mutiny\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-404-7\",\n      url: \"https://paizo.com/products/btpy8mh2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9056\",\n      name: \"Skull & Shackles #2: Raiders of the Fever Sea\",\n      date: \"2012-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-409-2\",\n      url: \"https://paizo.com/products/btpy8moe\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9057\",\n      name: \"Skull & Shackles #3: Tempest Rising\",\n      date: \"2012-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-413-9\",\n      url: \"https://paizo.com/products/btpy8mof\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9058\",\n      name: \"Skull & Shackles #4: Island of Empty Eyes\",\n      date: \"2012-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-416-0\",\n      url: \"https://paizo.com/products/btpy8mog\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9059\",\n      name: \"Skull & Shackles #5: The Price of Infamy\",\n      date: \"2012-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-421-4\",\n      url: \"https://paizo.com/products/btpy8moh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9060\",\n      name: \"Skull & Shackles #6: From Hell's Heart\",\n      date: \"2012-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-422-1\",\n      url: \"https://paizo.com/products/btpy8moi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Anniversary Edition Player's Guide\",\n      date: \"2012-07-01\",\n      pages: 17,\n      url: \"https://paizo.com/products/btpy8tgl\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1002\",\n      name: \"Rise of the Runelords Anniversary Edition\",\n      abbr: \"RotRAE\",\n      date: \"2012-07-01\",\n      pages: 432,\n      isbn: \"978-1-60125-436-8\",\n      url: \"https://paizo.com/products/btpy8tc0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-11E\",\n      name: \"Shattered Star Player's Guide\",\n      date: \"2012-08-01\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy8txj\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9061\",\n      name: \"Shattered Star #1: Shards of Sin\",\n      date: \"2012-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-452-8\",\n      url: \"https://paizo.com/products/btpy8tmh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9062\",\n      name: \"Shattered Star #2: Curse of the Lady's Light\",\n      date: \"2012-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-459-7\",\n      url: \"https://paizo.com/products/btpy8run\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9063\",\n      name: \"Shattered Star #3: The Asylum Stone\",\n      date: \"2012-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-469-6\",\n      url: \"https://paizo.com/products/btpy8sds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9064\",\n      name: \"Shattered Star #4: Beyond the Doomsday Door\",\n      date: \"2012-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-474-0\",\n      url: \"https://paizo.com/products/btpy8t35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9065\",\n      name: \"Shattered Star #5: Into the Nightmare Rift\",\n      date: \"2012-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-487-0\",\n      url: \"https://paizo.com/products/btpy8tdh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9066\",\n      name: \"Shattered Star #6: The Dead Heart of Xin\",\n      date: \"2013-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-491-7\",\n      url: \"https://paizo.com/products/btpy8tvr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-12E\",\n      name: \"Reign of Winter Player's Guide\",\n      date: \"2013-02-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy8x1t\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9067\",\n      name: \"Reign of Winter #1: The Snows of Summer\",\n      date: \"2013-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-492-4\",\n      url: \"https://paizo.com/products/btpy8ubg\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9068\",\n      name: \"Reign of Winter #2: The Shackled Hut\",\n      date: \"2013-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-493-1\",\n      url: \"https://paizo.com/products/btpy8uwz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9069\",\n      name: \"Reign of Winter #3: Maiden, Mother, Crone\",\n      date: \"2013-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-494-8\",\n      url: \"https://paizo.com/products/btpy8xbz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9070\",\n      name: \"Reign of Winter #4: The Frozen Stars\",\n      date: \"2013-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-495-5\",\n      url: \"https://paizo.com/products/btpy8vss\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9071\",\n      name: \"Reign of Winter #5: Rasputin Must Die!\",\n      date: \"2013-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-496-2\",\n      url: \"https://paizo.com/products/btpy8wbv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9072\",\n      name: \"Reign of Winter #6: The Witch Queen's Revenge\",\n      date: \"2013-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-497-9\",\n      url: \"https://paizo.com/products/btpy8wve\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-13E\",\n      name: \"Wrath of the Righteous Player's Guide\",\n      date: \"2013-08-09\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy919c\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9073\",\n      name: \"Wrath of the Righteous #1: The Worldwound Incursion\",\n      date: \"2013-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-553-2\",\n      url: \"https://paizo.com/products/btpy8x8e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9074\",\n      name: \"Wrath of the Righteous #2: Sword of Valor\",\n      date: \"2013-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-568-6\",\n      url: \"https://paizo.com/products/btpy8xsi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9075\",\n      name: \"Wrath of the Righteous #3: Demon's Heresy\",\n      date: \"2013-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-577-8\",\n      url: \"https://paizo.com/products/btpy8yor\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9076\",\n      name: \"Wrath of the Righteous #4: The Midnight Isles\",\n      date: \"2013-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-585-3\",\n      url: \"https://paizo.com/products/btpy8z6x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9077\",\n      name: \"Wrath of the Righteous #5: Herald of the Ivory Labyrinth\",\n      date: \"2014-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-586-0\",\n      url: \"https://paizo.com/products/btpy909v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9078\",\n      name: \"Wrath of the Righteous #6: City of Locusts\",\n      date: \"2014-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-587-7\",\n      url: \"https://paizo.com/products/btpy921g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-14E\",\n      name: \"Mummy's Mask Player's Guide\",\n      date: \"2014-03-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy94z3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9079\",\n      name: \"Mummy's Mask #1: The Half-Dead City\",\n      date: \"2014-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-588-4\",\n      url: \"https://paizo.com/products/btpy94qz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9080\",\n      name: \"Mummy's Mask #2: Empty Graves\",\n      date: \"2014-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-589-1\",\n      url: \"https://paizo.com/products/btpy94vv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9081\",\n      name: \"Mummy's Mask #3: Shifting Sands\",\n      date: \"2014-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-590-7\",\n      url: \"https://paizo.com/products/btpy94qb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9082\",\n      name: \"Mummy's Mask #4: Secrets of the Sphinx\",\n      date: \"2014-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-591-4\",\n      url: \"https://paizo.com/products/btpy9386\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9083\",\n      name: \"Mummy's Mask #5: The Slave Trenches of Hakotep\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-592-1\",\n      url: \"https://paizo.com/products/btpy97at\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9084\",\n      name: \"Mummy's Mask #6: Pyramid of the Sky Pharaoh\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-593-8\",\n      url: \"https://paizo.com/products/btpy97av\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-15E\",\n      name: \"Iron Gods Player's Guide\",\n      date: \"2014-08-05\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy98lf\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9085\",\n      name: \"Iron Gods #1: Fires of Creation\",\n      date: \"2014-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-673-7\",\n      url: \"https://paizo.com/products/btpy95br\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9086\",\n      name: \"Iron Gods #2: Lords of Rust\",\n      date: \"2014-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-678-2\",\n      url: \"https://paizo.com/products/btpy95bs\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9087\",\n      name: \"Iron Gods #3: The Choking Tower\",\n      date: \"2014-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-688-1\",\n      url: \"https://paizo.com/products/btpy95bt\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9088\",\n      name: \"Iron Gods #4: Valley of the Brain Collectors\",\n      date: \"2014-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-704-8\",\n      url: \"https://paizo.com/products/btpy95bu\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9089\",\n      name: \"Iron Gods #5: Palace of Fallen Stars\",\n      date: \"2014-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-711-6\",\n      url: \"https://paizo.com/products/btpy95bv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9090\",\n      name: \"Iron Gods #6: The Divinity Drive\",\n      date: \"2015-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-724-6\",\n      url: \"https://paizo.com/products/btpy95bw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-16E\",\n      name: \"Giantslayer Player's Guide\",\n      date: \"2015-01-25\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9bsv\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9091\",\n      name: \"Giantslayer #1: Battle of Bloodmarch Hill\",\n      date: \"2015-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-725-3\",\n      url: \"https://paizo.com/products/btpy96ps\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9092\",\n      name: \"Giantslayer #2: The Hill Giant's Pledge\",\n      date: \"2015-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-726-0\",\n      url: \"https://paizo.com/products/btpy98t4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9093\",\n      name: \"Giantslayer #3: Forge of the Giant God\",\n      date: \"2015-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-727-7\",\n      url: \"https://paizo.com/products/btpy98t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9094\",\n      name: \"Giantslayer #4: Ice Tomb of the Giant Queen\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-728-4\",\n      url: \"https://paizo.com/products/btpy98t6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9095\",\n      name: \"Giantslayer #5: Anvil of Fire\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-729-1\",\n      url: \"https://paizo.com/products/btpy98t7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9096\",\n      name: \"Giantslayer #6: Shadow of the Storm Tyrant\",\n      date: \"2015-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-730-7\",\n      url: \"https://paizo.com/products/btpy98t8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-17E\",\n      name: \"Hell's Rebels Player's Guide\",\n      date: \"2015-08-12\",\n      pages: 34,\n      url: \"https://paizo.com/products/btpy9g44\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9097\",\n      name: \"Hell's Rebels #1: In Hell's Bright Shadow\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-768-0\",\n      url: \"https://paizo.com/products/btpy98t9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9098\",\n      name: \"Hell's Rebels #2: Turn of the Torrent\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-784-0\",\n      url: \"https://paizo.com/products/btpy98ta\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9099\",\n      name: \"Hell's Rebels #3: Dance of the Damned\",\n      date: \"2015-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-788-8\",\n      url: \"https://paizo.com/products/btpy98tb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90100\",\n      name: \"Hell's Rebels #4: A Song of Silver\",\n      date: \"2015-12-01\",\n      pages: 128,\n      isbn: \"978-1-60125-795-6\",\n      url: \"https://paizo.com/products/btpy98tf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90101\",\n      name: \"Hell's Rebels #5: The Kintargo Contract\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-800-7\",\n      url: \"https://paizo.com/products/btpy98td\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90102\",\n      name: \"Hell's Rebels #6: Breaking the Bones of Hell\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-808-3\",\n      url: \"https://paizo.com/products/btpy9i8d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-18E\",\n      name: \"Hell's Vengeance Player's Guide\",\n      date: \"2016-02-25\",\n      pages: 20,\n      url: \"https://paizo.com/products/btpy9jva\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90103\",\n      name: \"Hell's Vengeance #1: The Hellfire Compact\",\n      date: \"2016-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-818-2\",\n      url: \"https://paizo.com/products/btpy9gds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90104\",\n      name: \"Hell's Vengeance #2: Wrath of Thrune\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-824-3\",\n      url: \"https://paizo.com/products/btpy9h32\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90105\",\n      name: \"Hell's Vengeance #3: The Inferno Gate\",\n      date: \"2016-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-827-4\",\n      url: \"https://paizo.com/products/btpy9hj9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90106\",\n      name: \"Hell's Vengeance #4: For Queen & Empire\",\n      date: \"2016-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-836-6\",\n      url: \"https://paizo.com/products/btpy9ics\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90107\",\n      name: \"Hell's Vengeance #5: Scourge of the Godclaw\",\n      date: \"2016-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-842-7\",\n      url: \"https://paizo.com/products/btpy9ips\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90108\",\n      name: \"Hell's Vengeance #6: Hell Comes to Westcrown\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-851-9\",\n      url: \"https://paizo.com/products/btpy9jd0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-19E\",\n      name: \"Strange Aeons Player's Guide\",\n      date: \"2016-08-17\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9nrw\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90109\",\n      name: \"Strange Aeons #1: In Search of Sanity\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-882-3\",\n      url: \"https://paizo.com/products/btpy9k5o\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90110\",\n      name: \"Strange Aeons #2: The Thrushmoor Terror\",\n      date: \"2016-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-892-2\",\n      url: \"https://paizo.com/products/btpy9l3g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90111\",\n      name: \"Strange Aeons #3: Dreams of the Yellow King\",\n      date: \"2016-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-899-1\",\n      url: \"https://paizo.com/products/btpy9mbj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90112\",\n      name: \"Strange Aeons #4: The Whisper Out of Time\",\n      date: \"2016-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-908-0\",\n      url: \"https://paizo.com/products/btpy9n12\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90113\",\n      name: \"Strange Aeons #5: What Grows Within\",\n      date: \"2017-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-913-4\",\n      url: \"https://paizo.com/products/btpy9nd3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90114\",\n      name: \"Strange Aeons #6: Black Stars Beckon\",\n      date: \"2017-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-919-6\",\n      url: \"https://paizo.com/products/btpy9nd9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-20E\",\n      name: \"Ironfang Invasion Player's Guide\",\n      date: \"2017-03-16\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9sc5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90115\",\n      name: \"Ironfang Invasion #1: Trail of the Hunted\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-926-4\",\n      url: \"https://paizo.com/products/btpy9npj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90116\",\n      name: \"Ironfang Invasion #2: Fangs of War\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-932-5\",\n      url: \"https://paizo.com/products/btpy9npk\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90117\",\n      name: \"Ironfang Invasion #3: Assault on Longshadow\",\n      date: \"2017-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-935-6\",\n      url: \"https://paizo.com/products/btpy9p1h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #4: Siege of Stone\",\n      date: \"2017-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-940-0\",\n      url: \"https://paizo.com/products/btpy9pn4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #5: Prisoners of the Blight\",\n      date: \"2017-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-943-1\",\n      url: \"https://paizo.com/products/btpy9npn\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90120\",\n      name: \"Ironfang Invasion #6: Vault of the Onyx Citadel\",\n      date: \"2017-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-952-3\",\n      url: \"https://paizo.com/products/btpy9pno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-21E\",\n      name: \"Ruins of Azlant Player's Guide\",\n      date: \"2017-08-03\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9uir\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90121\",\n      name: \"Ruins of Azlant #1: The Lost Outpost\",\n      date: \"2017-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-964-6\",\n      url: \"https://paizo.com/products/btpy9qya\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90122\",\n      name: \"Ruins of Azlant #2: Into the Shattered Continent\",\n      date: \"2017-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-972-1\",\n      url: \"https://paizo.com/products/btpy9uk0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90123\",\n      name: \"Ruins of Azlant #3: The Flooded Cathedral\",\n      date: \"2017-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-981-3\",\n      url: \"https://paizo.com/products/btpy9uk2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90124\",\n      name: \"Ruins of Azlant #4: City in the Deep\",\n      date: \"2017-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-988-2\",\n      url: \"https://paizo.com/products/btpy9x2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90125\",\n      name: \"Ruins of Azlant #5: Tower of the Drowned Dead\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-998-1\",\n      url: \"https://paizo.com/products/btpy9xa1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90126\",\n      name: \"Ruins of Azlant #6: Beyond the Veiled Past\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-009-5\",\n      url: \"https://paizo.com/products/btpy9xf0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-22E\",\n      name: \"War for the Crown Player's Guide\",\n      date: \"2018-03-22\",\n      pages: 18,\n      url: \"https://paizo.com/products/btpya08v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90127\",\n      name: \"War for the Crown #1: Crownfall\",\n      date: \"2018-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-015-6\",\n      url: \"https://paizo.com/products/btpy9zk7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90128\",\n      name: \"War for the Crown #2: Songbird, Scion, Saboteur\",\n      date: \"2018-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-025-5\",\n      url: \"https://paizo.com/products/btpya04x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90129\",\n      name: \"War for the Crown #3: The Twilight Child\",\n      date: \"2018-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-032-3\",\n      url: \"https://paizo.com/products/btpya0fi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90130\",\n      name: \"War for the Crown #4: City in the Lion's Eye\",\n      date: \"2018-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-037-8\",\n      url: \"https://paizo.com/products/btpy9wmy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90131\",\n      name: \"War for the Crown #5: The Reaper's Right Hand\",\n      date: \"2018-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-045-3\",\n      url: \"https://paizo.com/products/btpy9x04\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90132\",\n      name: \"War for the Crown #6: The Six-Legend Soul\",\n      date: \"2018-07-01\",\n      pages: 96,\n      isbn: \"978-1-64078-052-1\",\n      url: \"https://paizo.com/products/btpy9xdq\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-23E\",\n      name: \"Return of the Runelords Player's Guide\",\n      date: \"2018-09-05\",\n      pages: 14,\n      url: \"https://paizo.com/products/btq01su5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90133\",\n      name: \"Return of the Runelords #1: Secrets of Roderic's Cove\",\n      date: \"2018-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-062-0\",\n      url: \"https://paizo.com/products/btpy9y26\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90134\",\n      name: \"Return of the Runelords #2: It Came from Hollow Mountain\",\n      date: \"2018-09-01\",\n      pages: 96,\n      isbn: \"978-1-64078-070-5\",\n      url: \"https://paizo.com/products/btpy9z14\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90135\",\n      name: \"Return of the Runelords #3: Runeplague\",\n      date: \"2018-10-01\",\n      pages: 96,\n      isbn: \"978-1-64078-079-8\",\n      url: \"https://paizo.com/products/btpy9zsl\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90136\",\n      name: \"Return of the Runelords #4: Temple of the Peacock Spirit\",\n      date: \"2018-11-01\",\n      pages: 96,\n      isbn: \"978-1-64078-091-0\",\n      url: \"https://paizo.com/products/btpya0b5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90137\",\n      name: \"Return of the Runelords #5: The City Outside of Time\",\n      date: \"2018-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-098-9\",\n      url: \"https://paizo.com/products/btq01vak\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90138\",\n      name: \"Return of the Runelords #6: Rise of New Thassilon\",\n      date: \"2019-01-01\",\n      pages: 96,\n      isbn: \"978-1-64078-106-1\",\n      url: \"https://paizo.com/products/btq01w1w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-24E\",\n      name: \"Tyrant's Grasp Player's Guide\",\n      date: \"2019-02-08\",\n      pages: 9,\n      url: \"https://paizo.com/products/btq01xdp\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90139\",\n      name: \"Tyrant's Grasp #1: The Dead Roads\",\n      date: \"2019-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-111-5\",\n      url: \"https://paizo.com/products/btq01ws3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90140\",\n      name: \"Tyrant's Grasp #2: Eulogy for Roslar's Coffer\",\n      date: \"2019-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-119-1\",\n      url: \"https://paizo.com/products/btq01x4b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90141\",\n      name: \"Tyrant's Grasp #3: Last Watch\",\n      date: \"2019-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-126-9\",\n      url: \"https://paizo.com/products/btq01x4f\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90142\",\n      name: \"Tyrant's Grasp #4: Gardens of Gallowspire\",\n      date: \"2019-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-134-4\",\n      url: \"https://paizo.com/products/btq01xj6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90143\",\n      name: \"Tyrant's Grasp #5: Borne by the Sun's Grace\",\n      date: \"2019-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-140-5\",\n      url: \"https://paizo.com/products/btq01znj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90144\",\n      name: \"Tyrant's Grasp #6: Midwives to Death\",\n      date: \"2019-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-144-3\",\n      url: \"https://paizo.com/products/btq01zno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9500\",\n      name: \"Hollow's Last Hope\",\n      date: \"2007-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9501\",\n      name: \"Crown of the Kobold King\",\n      date: \"2007-06-01\",\n      pages: 32,\n      level: 2,\n      isbn: \"978-1-60125-048-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9502\",\n      name: \"Conquest of Bloodsworn Vale\",\n      date: \"2007-07-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-049-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9503\",\n      name: \"Seven Swords of Sin\",\n      date: \"2007-08-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-050-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9504\",\n      name: \"Gallery of Evil\",\n      date: \"2007-09-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-051-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9505\",\n      name: \"Entombed with the Pharaohs\",\n      date: \"2007-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-052-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-TC1\",\n      name: \"Into the Haunted Forest\",\n      date: \"2007-11-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-108-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9506\",\n      name: \"Carnival of Tears\",\n      date: \"2007-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-055-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9507\",\n      name: \"Guardians of Dragonfall\",\n      date: \"2007-12-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-056-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9508\",\n      name: \"Hangman's Noose\",\n      date: \"2008-01-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-073-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9509\",\n      name: \"Crucible of Chaos\",\n      date: \"2008-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-074-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9510\",\n      name: \"River into Darkness\",\n      date: \"2008-03-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-075-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9511\",\n      name: \"The Demon Within\",\n      date: \"2008-04-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-076-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9512\",\n      name: \"Flight of the Red Raven\",\n      date: \"2008-05-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-101-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-2\",\n      name: \"Revenge of the Kobold King\",\n      date: \"2008-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9513\",\n      name: \"Tower of the Last Baron\",\n      date: \"2008-06-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-102-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9514\",\n      name: \"Treasure of Chimera Cove\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-119-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9515\",\n      name: \"Hungry Are the Dead\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-120-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9516\",\n      name: \"The Pact Stone Pyramid\",\n      date: \"2008-11-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-145-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9517\",\n      name: \"Clash of the Kingslayers\",\n      date: \"2009-01-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-125-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9518\",\n      name: \"Blood of Dragonscar\",\n      date: \"2009-03-01\",\n      pages: 32,\n      level: 15,\n      isbn: \"978-1-60125-170-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9519\",\n      name: \"Beyond the Vault of Souls\",\n      date: \"2009-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-174-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9520NM\",\n      name: \"Crypt of the Everflame\",\n      date: \"2009-08-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-186-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9521\",\n      name: \"Carrion Hill\",\n      date: \"2009-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-206-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9522\",\n      name: \"Masks of the Living God\",\n      date: \"2009-12-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-207-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9523\",\n      name: \"Realm of the Fellnight Queen\",\n      date: \"2010-02-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-224-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9524\",\n      name: \"City of Golden Death\",\n      date: \"2010-04-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-225-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9525\",\n      name: \"From Shore to Sea\",\n      date: \"2010-06-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-257-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-4\",\n      name: \"Master of the Fallen Fortress\",\n      date: \"2010-06-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-365-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9526\",\n      name: \"Curse of the Riven Sky\",\n      date: \"2010-07-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-258-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9527\",\n      name: \"The Witchwar Legacy\",\n      date: \"2010-09-01\",\n      pages: 32,\n      level: 17,\n      isbn: \"978-1-60125-279-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9528\",\n      name: \"The Godsmouth Heresy\",\n      date: \"2010-12-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-280-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9529\",\n      name: \"Cult of the Ebon Destroyers\",\n      date: \"2011-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-317-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9530\",\n      name: \"Tomb of the Iron Medusa\",\n      date: \"2011-04-01\",\n      pages: 32,\n      level: 14,\n      isbn: \"978-1-60125-318-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9531\",\n      name: \"Academy of Secrets\",\n      date: \"2011-06-01\",\n      pages: 32,\n      level: 13,\n      isbn: \"978-1-60125-343-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-5\",\n      name: \"We Be Goblins!\",\n      date: \"2011-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9532\",\n      name: \"The Harrowing\",\n      date: \"2011-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-355-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9533\",\n      name: \"Feast of Ravenmoor\",\n      date: \"2011-09-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-367-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9534\",\n      name: \"The Ruby Phoenix Tournament\",\n      date: \"2012-01-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-381-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9535\",\n      name: \"The Midnight Mirror\",\n      date: \"2012-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-401-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9536\",\n      name: \"No Response from Deepmar\",\n      date: \"2012-05-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-410-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-6\",\n      name: \"Dawn of the Scarlet Sun\",\n      date: \"2012-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9537\",\n      name: \"The Moonscar\",\n      date: \"2012-08-01\",\n      pages: 32,\n      level: 16,\n      isbn: \"978-1-60125-426-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9538\",\n      name: \"Murder's Mark\",\n      date: \"2012-10-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-447-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9539\",\n      name: \"Broken Chains\",\n      date: \"2013-03-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-461-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9540\",\n      name: \"Fangwood Keep\",\n      date: \"2013-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-476-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9541\",\n      name: \"Doom Comes to Dustpawn\",\n      date: \"2013-05-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-504-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-7\",\n      name: \"We Be Goblins Too!\",\n      date: \"2013-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9542\",\n      name: \"The Dragon's Demand\",\n      date: \"2013-07-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-527-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9543\",\n      name: \"Wardens of the Reborn Forge\",\n      date: \"2013-12-01\",\n      pages: 64,\n      level: 12,\n      isbn: \"978-1-60125-555-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9544\",\n      name: \"Tears at Bitter Manor\",\n      date: \"2014-03-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-613-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-8\",\n      name: \"Risen from the Sands\",\n      date: \"2014-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9545\",\n      name: \"The Emerald Spire Superdungeon\",\n      date: \"2014-06-01\",\n      pages: 160,\n      level: 1,\n      isbn: \"978-1-60125-655-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9546\",\n      name: \"Plunder & Peril\",\n      date: \"2014-11-01\",\n      pages: 64,\n      level: 4,\n      isbn: \"978-1-60125-680-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9547\",\n      name: \"Daughters of Fury\",\n      date: \"2015-02-01\",\n      pages: 64,\n      level: 3,\n      isbn: \"978-1-60125-706-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-9\",\n      name: \"We Be Goblins Free!\",\n      date: \"2015-06-01\",\n      pages: 16,\n      level: 4,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9548\",\n      name: \"Feast of Dust\",\n      date: \"2015-11-01\",\n      pages: 64,\n      level: 11,\n      isbn: \"978-1-60125-735-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9549\",\n      name: \"The House on Hook Street\",\n      date: \"2015-12-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-790-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9550\",\n      name: \"Down the Blighted Path\",\n      date: \"2016-02-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-815-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9551\",\n      name: \"Ire of the Storm\",\n      date: \"2016-05-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-830-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-10\",\n      name: \"We B4 Goblins!\",\n      date: \"2016-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9552\",\n      name: \"Gallows of Madness\",\n      date: \"2016-08-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-854-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9553\",\n      name: \"Seers of the Drowned City\",\n      date: \"2016-11-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-902-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGENA001\",\n      name: \"Heroes for Highdelve\",\n      date: \"2017-08-01\",\n      pages: 20,\n      level: 1,\n      isbn: \"978-1-64078-002-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGAUNTLET\",\n      name: \"The Gauntlet\",\n      date: \"2018-05-01\",\n      pages: 16,\n      level: 8,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-12\",\n      name: \"We Be 5uper Goblins!\",\n      date: \"2018-06-01\",\n      pages: 16,\n      level: 6,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9554\",\n      name: \"Cradle of Night\",\n      date: \"2018-12-01\",\n      pages: 64,\n      level: 8,\n      isbn: \"978-1-60125-991-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-14\",\n      name: \"We Be Heroes?\",\n      date: \"2019-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9402\",\n      name: \"Elves of Golarion\",\n      date: \"2008-10-01\",\n      isbn: \"978-1-60125-143-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9403\",\n      name: \"Osirion, Land of Pharaohs\",\n      date: \"2008-12-01\",\n      isbn: \"978-1-60125-144-2\",\n      url: \"https://paizo.com/products/btpy86j7\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9405\",\n      name: \"Taldor, Echoes of Glory\",\n      date: \"2009-04-01\",\n      isbn: \"978-1-60125-169-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9406\",\n      name: \"Qadira, Gateway to the East\",\n      date: \"2009-06-01\",\n      isbn: \"978-1-60125-180-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9407\",\n      name: \"Cheliax, Empire of Devils\",\n      date: \"2009-08-01\",\n      isbn: \"978-1-60125-191-6\",\n      tieIn: \"Council of Thieves\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9408\",\n      name: \"Dwarves of Golarion\",\n      date: \"2009-12-01\",\n      isbn: \"978-1-60125-204-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9409\",\n      name: \"Andoran, Spirit of Liberty\",\n      date: \"2010-01-01\",\n      isbn: \"978-1-60125-205-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9410\",\n      name: \"Adventurer's Armory\",\n      abbr: \"AA\",\n      date: \"2010-04-01\",\n      isbn: \"978-1-60125-222-7\",\n      tieIn: \"Kingmaker\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9411\",\n      name: \"Gnomes of Golarion\",\n      date: \"2010-05-01\",\n      isbn: \"978-1-60125-223-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9412\",\n      name: \"Sargava, the Lost Colony\",\n      date: \"2010-06-01\",\n      isbn: \"978-1-60125-255-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9413\",\n      name: \"Orcs of Golarion\",\n      date: \"2010-08-01\",\n      isbn: \"978-1-60125-256-2\",\n      tieIn: \"Serpent's Skull\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9414\",\n      name: \"Inner Sea Primer\",\n      date: \"2010-11-01\",\n      isbn: \"978-1-60125-277-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9415\",\n      name: \"Halflings of Golarion\",\n      date: \"2011-01-01\",\n      isbn: \"978-1-60125-278-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9416\",\n      name: \"Faiths of Purity\",\n      date: \"2011-04-01\",\n      isbn: \"978-1-60125-314-9\",\n      tieIn: \"Carrion Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9417\",\n      name: \"Humans of Golarion\",\n      date: \"2011-06-01\",\n      isbn: \"978-1-60125-315-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9418\",\n      name: \"Faiths of Balance\",\n      date: \"2011-07-01\",\n      isbn: \"978-1-60125-316-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9419\",\n      name: \"Goblins of Golarion\",\n      date: \"2011-08-01\",\n      isbn: \"978-1-60125-362-0\",\n      tieIn: \"Jade Regent\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9420\",\n      name: \"Faiths of Corruption\",\n      date: \"2011-10-01\",\n      isbn: \"978-1-60125-375-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9421\",\n      name: \"Dragon Empires Primer\",\n      date: \"2012-01-01\",\n      isbn: \"978-1-60125-386-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9422\",\n      name: \"Pirates of the Inner Sea\",\n      abbr: \"PotIS\",\n      date: \"2012-02-01\",\n      isbn: \"978-1-60125-405-4\",\n      tieIn: \"Skull & Shackles\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9423\",\n      name: \"Blood of Fiends\",\n      date: \"2012-04-01\",\n      isbn: \"978-1-60125-423-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9424\",\n      name: \"Blood of Angels\",\n      date: \"2012-07-01\",\n      isbn: \"978-1-60125-438-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9425\",\n      name: \"Varisia, Birthplace of Legends\",\n      date: \"2012-08-02\",\n      isbn: \"978-1-60125-453-5\",\n      tieIn: \"Shattered Star\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9426\",\n      name: \"Knights of the Inner Sea\",\n      date: \"2012-09-01\",\n      isbn: \"978-1-60125-460-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9427\",\n      name: \"Blood of the Night\",\n      date: \"2012-12-06\",\n      isbn: \"978-1-60125-470-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9428\",\n      name: \"People of the North\",\n      date: \"2013-01-22\",\n      isbn: \"978-1-60125-475-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9429\",\n      name: \"Animal Archive\",\n      date: \"2013-02-13\",\n      isbn: \"978-1-60125-488-7\",\n      tieIn: \"Reign of Winter\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9430\",\n      name: \"Dungeoneer's Handbook\",\n      abbr: \"DHB\",\n      date: \"2013-03-08\",\n      isbn: \"978-1-60125-510-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9431\",\n      name: \"Champions of Purity\",\n      date: \"2013-04-16\",\n      isbn: \"978-1-60125-511-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9432\",\n      name: \"Kobolds of Golarion\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-512-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9433\",\n      name: \"Quests & Campaigns\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-513-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9434\",\n      name: \"Dragonslayer's Handbook\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-526-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9435\",\n      name: \"Pathfinder Society Primer\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-534-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9436\",\n      name: \"Faiths & Philosophies\",\n      date: \"2013-08-19\",\n      isbn: \"978-1-60125-543-3\",\n      tieIn: \"Wrath of the Righteous\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9437\",\n      name: \"Demon Hunter's Handbook\",\n      date: \"2013-08-17\",\n      isbn: \"978-1-60125-554-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9438\",\n      name: \"Mythic Origins\",\n      date: \"2013-09-25\",\n      isbn: \"978-1-60125-569-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9439\",\n      name: \"Blood of the Moon\",\n      date: \"2013-10-21\",\n      isbn: \"978-1-60125-578-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9440\",\n      name: \"Magical Marketplace\",\n      abbr: \"MM\",\n      date: \"2013-12-11\",\n      isbn: \"978-1-60125-600-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9441\",\n      name: \"People of the Sands\",\n      date: \"2014-01-09\",\n      isbn: \"978-1-60125-601-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9442\",\n      name: \"Bastards of Golarion\",\n      date: \"2014-02-06\",\n      isbn: \"978-1-60125-602-7\",\n      tieIn: \"Mummy's Mask\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9443\",\n      name: \"Champions of Balance\",\n      date: \"2014-03-25\",\n      isbn: \"978-1-60125-603-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9444\",\n      name: \"Undead Slayer's Handbook\",\n      abbr: \"USH\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-604-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9445\",\n      name: \"Alchemy Manual\",\n      abbr: \"AM\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-605-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9446\",\n      name: \"The Harrow Handbook\",\n      date: \"2014-05-28\",\n      isbn: \"978-1-60125-650-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9447\",\n      name: \"Blood of the Elements\",\n      date: \"2014-06-25\",\n      isbn: \"978-1-60125-654-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9448\",\n      name: \"People of the River\",\n      date: \"2014-07-25\",\n      isbn: \"978-1-60125-666-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9449\",\n      name: \"People of the Stars\",\n      date: \"2014-08-14\",\n      isbn: \"978-1-60125-674-4\",\n      tieIn: \"Iron Gods\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9450\",\n      name: \"Champions of Corruption\",\n      date: \"2014-09-10\",\n      isbn: \"978-1-60125-679-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9451\",\n      name: \"Advanced Class Origins\",\n      date: \"2014-10-22\",\n      isbn: \"978-1-60125-689-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9452\",\n      name: \"Ranged Tactics Toolbox\",\n      date: \"2014-11-24\",\n      isbn: \"978-1-60125-705-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9453\",\n      name: \"Giant Hunter's Handbook\",\n      date: \"2014-12-17\",\n      isbn: \"978-1-60125-712-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9454\",\n      name: \"Familiar Folio\",\n      abbr: \"FF\",\n      date: \"2015-01-28\",\n      isbn: \"978-1-60125-731-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9455\",\n      name: \"Melee Tactics Toolbox\",\n      date: \"2015-03-25\",\n      isbn: \"978-1-60125-732-1\",\n      tieIn: \"Giant Slayer\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9456\",\n      name: \"Heroes of the Wild\",\n      date: \"2015-04-29\",\n      isbn: \"978-1-60125-733-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9457\",\n      name: \"Cohorts and Companions\",\n      date: \"2015-05-27\",\n      isbn: \"978-1-60125-734-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9458\",\n      name: \"Monster Summoner's Handbook\",\n      date: \"2015-06-24\",\n      isbn: \"978-1-60125-758-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9459\",\n      name: \"Dirty Tactics Toolbox\",\n      date: \"2015-09-02\",\n      isbn: \"978-1-60125-763-5\",\n      tieIn: \"Hell's Rebels\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9460\",\n      name: \"Heroes of the Streets\",\n      date: \"2015-09-30\",\n      isbn: \"978-1-60125-769-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9461\",\n      name: \"Occult Origins\",\n      abbr: \"OO\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-785-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9462\",\n      name: \"Black Markets\",\n      abbr: \"BM\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-789-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9463\",\n      name: \"Weapon Master's Handbook\",\n      date: \"2015-11-18\",\n      isbn: \"978-1-60125-796-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9464\",\n      name: \"Agents of Evil\",\n      date: \"2015-12-16\",\n      isbn: \"978-1-60125-801-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9465\",\n      name: \"Arcane Anthology\",\n      abbr: \"AA\",\n      date: \"2016-01-27\",\n      isbn: \"978-1-60125-814-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9466\",\n      name: \"Blood of Shadows\",\n      date: \"2016-02-24\",\n      isbn: \"978-1-60125-820-5\",\n      tieIn: \"Hell's Vengeance\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9467\",\n      name: \"Armor Master's Handbook\",\n      date: \"2016-04-27\",\n      isbn: \"978-1-60125-829-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9468\",\n      name: \"Magic Tactics Toolbox\",\n      date: \"2016-05-25\",\n      isbn: \"978-1-60125-838-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9469\",\n      name: \"Spymaster's Handbook\",\n      date: \"2016-06-29\",\n      isbn: \"978-1-60125-844-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9470\",\n      name: \"Legacy of Dragons\",\n      date: \"2016-08-04\",\n      isbn: \"978-1-60125-853-3\",\n      tieIn: \"Strange Aeons\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9471\",\n      name: \"Haunted Heroes Handbook\",\n      date: \"2016-08-31\",\n      isbn: \"978-1-60125-884-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9472\",\n      name: \"Divine Anthology\",\n      date: \"2016-09-28\",\n      isbn: \"978-1-60125-894-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9473\",\n      name: \"Blood of the Beast\",\n      date: \"2016-11-16\",\n      isbn: \"978-1-60125-901-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9474\",\n      name: \"Paths of the Righteous\",\n      date: \"2016-12-14\",\n      isbn: \"978-1-60125-910-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9475\",\n      name: \"Healer's Handbook\",\n      abbr: \"HH\",\n      date: \"2017-01-25\",\n      isbn: \"978-1-60125-914-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9476\",\n      name: \"Heroes of the High Court\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-920-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9477\",\n      name: \"Psychic Anthology\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-928-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9478\",\n      name: \"Monster Hunter's Handbook\",\n      date: \"2017-03-29\",\n      isbn: \"978-1-60125-933-2\",\n      tieIn: \"Ironfang Invasion\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9479\",\n      name: \"Heroes of the Darklands\",\n      date: \"2017-04-26\",\n      isbn: \"978-1-60125-936-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9480\",\n      name: \"Legacy of the First World\",\n      date: \"2017-05-31\",\n      isbn: \"978-1-60125-941-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9481\",\n      name: \"Adventurer's Armory 2\",\n      abbr: \"AA2\",\n      date: \"2017-06-28\",\n      isbn: \"978-1-60125-945-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9482\",\n      name: \"Blood of the Sea\",\n      date: \"2017-07-26\",\n      isbn: \"978-1-60125-955-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9483\",\n      name: \"Elemental Master's Handbook\",\n      date: \"2017-08-17\",\n      isbn: \"978-1-60125-965-3\",\n      tieIn: \"Ruins of Azlant\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9484\",\n      name: \"Antihero's Handbook\",\n      date: \"2017-09-20\",\n      isbn: \"978-1-60125-973-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9485\",\n      name: \"Blood of the Coven\",\n      date: \"2017-10-18\",\n      isbn: \"978-1-60125-982-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9486\",\n      name: \"People of the Wastes\",\n      date: \"2017-11-15\",\n      isbn: \"978-1-60125-990-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9487\",\n      name: \"Potions & Poisons\",\n      abbr: \"P&P\",\n      date: \"2017-12-13\",\n      isbn: \"978-1-64078-000-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9488\",\n      name: \"Disciple's Doctrine\",\n      date: \"2018-01-31\",\n      isbn: \"978-1-64078-011-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9489\",\n      name: \"Merchant's Manifest\",\n      date: \"2018-03-28\",\n      isbn: \"978-1-64078-026-2\",\n      tieIn: \"War for the Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9490\",\n      name: \"Blood of the Ancients\",\n      date: \"2018-05-30\",\n      isbn: \"978-1-64078-038-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9491\",\n      name: \"Heroes from the Fringe\",\n      date: \"2018-08-29\",\n      isbn: \"978-1-64078-053-8\",\n      tieIn: \"Return of the Runelords\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9492\",\n      name: \"Plane-Hopper's Handbook\",\n      date: \"2018-09-19\",\n      isbn: \"978-1-64078-071-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9493\",\n      name: \"Martial Arts Handbook\",\n      date: \"2018-11-14\",\n      isbn: \"978-1-64078-092-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9494\",\n      name: \"Wilderness Origins\",\n      date: \"2019-01-30\",\n      isbn: \"978-1-64078-107-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9495\",\n      name: \"Heroes of Golarion\",\n      date: \"2019-03-27\",\n      isbn: \"978-1-64078-120-7\",\n      tieIn: \"Tyrant's Grasp\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9496\",\n      name: \"Chronicle of Legends\",\n      date: \"2019-05-29\",\n      isbn: \"978-1-64078-136-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO1106\",\n      name: \"Pathfinder Chronicles: Guide to Korvosa\",\n      date: \"2008-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-078-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1105\",\n      name: \"Pathfinder Chronicles: Gazetteer\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-077-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1107\",\n      name: \"Pathfinder Chronicles: Classic Monsters Revisited\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-079-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1108\",\n      name: \"Pathfinder Chronicles: Guide to Darkmoon Vale\",\n      date: \"2008-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-100-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1111\",\n      name: \"Pathfinder Chronicles: Campaign Setting\",\n      date: \"2008-08-01\",\n      pages: 256,\n      isbn: \"978-1-60125-112-1\",\n      url: \"https://paizo.com/products/btpy84eo\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9202\",\n      name: \"Pathfinder Chronicles: Gods and Magic\",\n      date: \"2008-10-01\",\n      pages: 32,\n      isbn: \"978-1-60125-139-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9204\",\n      name: \"Pathfinder Chronicles: Into the Darklands\",\n      date: \"2008-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-140-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9205\",\n      name: \"Pathfinder Chronicles: Guide to Absalom\",\n      date: \"2008-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-141-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9207\",\n      name: \"Pathfinder Chronicles: Dragons Revisited\",\n      date: \"2009-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-165-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9208\",\n      name: \"Pathfinder Chronicles: Dark Markets: A Guide to Katapesh\",\n      date: \"2009-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-166-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9209\",\n      name: \"Pathfinder Chronicles: The Great Beyond\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-167-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9210\",\n      name: \"Pathfinder Chronicles: Dungeon Denizens Revisited\",\n      abbr: \"DDR\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-172-5\",\n      type: \"setting\",\n      legacy: true,\n    },\n    {\n      _id: \"PZO9211\",\n      name: \"Pathfinder Chronicles: Seekers of Secrets\",\n      abbr: \"SoS\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9213\",\n      name: \"Pathfinder Chronicles: Princes of Darkness\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-189-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9214\",\n      name: \"Pathfinder Chronicles: Cities of Golarion\",\n      date: \"2009-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9216\",\n      name: \"Pathfinder Chronicles: Classic Horrors Revisited\",\n      date: \"2010-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-202-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9217E\",\n      name: \"Pathfinder Chronicles: Guide to the River Kingdoms\",\n      date: \"2010-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-203-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9219\",\n      name: \"Pathfinder Chronicles: NPC Guide\",\n      date: \"2010-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-219-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9220\",\n      name: \"Pathfinder Chronicles: Classic Treasures Revisited\",\n      date: \"2010-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-220-3\",\n      type: \"setting\",\n      url: \"https://paizo.com/products/btpy8dmn\",\n    },\n    {\n      _id: \"PZO9221\",\n      name: \"Pathfinder Chronicles: Faction Guide\",\n      abbr: \"FG\", //  PCh:FG\n      date: \"2010-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-221-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9222\",\n      name: \"Pathfinder Chronicles: Heart of the Jungle\",\n      date: \"2010-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-247-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9223\",\n      name: \"Pathfinder Chronicles: City of Strangers\",\n      date: \"2010-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-248-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9227\",\n      name: \"Misfit Monsters Redeemed\",\n      date: \"2010-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-270-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9225\",\n      name: \"Lords of Chaos\",\n      date: \"2010-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-250-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9229\",\n      name: \"Lost Cities of Golarion\",\n      date: \"2011-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-272-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9226\",\n      name: \"The Inner Sea World Guide\",\n      abbr: \"ISWG\",\n      date: \"2011-03-01\",\n      pages: 320,\n      isbn: \"978-1-60125-269-2\",\n      url: \"https://paizo.com/products/btpy8ief\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9231\",\n      name: \"Rule of Fear\",\n      date: \"2011-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-301-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9232\",\n      name: \"Rival Guide\",\n      date: \"2011-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-302-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9233\",\n      name: \"Undead Revisited\",\n      date: \"2011-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-303-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9234\",\n      name: \"Dungeons of Golarion\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-304-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9235\",\n      name: \"Pathfinder Society Field Guide\",\n      abbr: \"PSFG\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-305-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9237\",\n      name: \"Inner Sea Magic\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-360-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9238\",\n      name: \"Lands of the Linnorm Kings\",\n      date: \"2011-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-365-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9239\",\n      name: \"Horsemen of the Apocalypse\",\n      date: \"2011-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-373-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9240\",\n      name: \"Dragon Empires Gazetteer\",\n      date: \"2011-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-379-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9241\",\n      name: \"Mythical Monsters Revisited\",\n      date: \"2012-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-384-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9243\",\n      name: \"Distant Worlds\",\n      date: \"2012-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-403-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9244\",\n      name: \"Isles of the Shackles\",\n      date: \"2012-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-408-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9245\",\n      name: \"Giants Revisited\",\n      date: \"2012-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-412-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9246\",\n      name: \"Lost Kingdoms\",\n      date: \"2012-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-415-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9248\",\n      name: \"Magnimar, City of Monuments\",\n      date: \"2012-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-446-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9249\",\n      name: \"Paths of Prestige\",\n      date: \"2012-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-451-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9250\",\n      name: \"Artifacts & Legends\",\n      date: \"2012-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-458-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9251\",\n      name: \"Inner Sea Bestiary\",\n      abbr: \"ISB\",\n      date: \"2012-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-468-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9252\",\n      name: \"Mystery Monsters Revisited\",\n      date: \"2012-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-473-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9253\",\n      name: \"Irrisen, Land of Eternal Winter\",\n      date: \"2013-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-486-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9255\",\n      name: \"Chronicle of the Righteous\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-506-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9256\",\n      name: \"Fey Revisited\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-507-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9257\",\n      name: \"Castles of the Inner Sea\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-508-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9258\",\n      name: \"Dragons Unleashed\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-525-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9259\",\n      name: \"The Worldwound\",\n      date: \"2013-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-532-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9261\",\n      name: \"Demons Revisited\",\n      date: \"2013-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-552-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9262\",\n      name: \"Mythic Realms\",\n      date: \"2013-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-567-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9263\",\n      name: \"Towns of the Inner Sea\",\n      date: \"2013-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-576-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9264\",\n      name: \"Inner Sea NPC Codex\",\n      date: \"2013-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-594-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9265\",\n      name: \"Osirion, Legacy of Pharaohs\",\n      date: \"2014-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-595-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9267\",\n      name: \"Inner Sea Gods\",\n      abbr: \"ISG\",\n      date: \"2014-04-01\",\n      pages: 320,\n      isbn: \"978-1-60125-597-6\",\n      url: \"https://paizo.com/products/btpy94wj\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9268\",\n      name: \"Inner Sea Combat\",\n      abbr: \"ISC\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-598-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9269\",\n      name: \"Occult Mysteries\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-649-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9270\",\n      name: \"Numeria, Land of Fallen Stars\",\n      abbr: \"NLFS\",\n      date: \"2014-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-653-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9272\",\n      name: \"Technology Guide\",\n      abbr: \"TG\",\n      date: \"2014-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-672-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9273\",\n      name: \"Undead Unleashed\",\n      date: \"2014-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-677-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9274\",\n      name: \"Ships of the Inner Sea\",\n      date: \"2014-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-702-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9275\",\n      name: \"Lost Treasures\",\n      date: \"2014-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-703-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9276\",\n      name: \"Belkzen, Hold of the Orc Hordes\",\n      date: \"2015-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-710-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9278\",\n      name: \"Tombs of Golarion\",\n      date: \"2015-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-720-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9279\",\n      name: \"Andoran, Birthplace of Freedom\",\n      date: \"2015-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-721-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9283\",\n      name: \"Inner Sea Monster Codex\",\n      date: \"2015-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-752-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9281\",\n      name: \"Hell Unleashed\",\n      date: \"2015-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-757-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9284\",\n      name: \"Occult Bestiary\",\n      date: \"2015-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-767-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9280\",\n      name: \"Inner Sea Races\",\n      abbr: \"ISR\",\n      date: \"2015-09-01\",\n      pages: 256,\n      isbn: \"978-1-60125-722-2\",\n      url: \"https://paizo.com/products/btpy9g9v\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9285\",\n      name: \"Distant Shores\",\n      date: \"2015-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-787-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9286\",\n      name: \"Occult Realms\",\n      date: \"2015-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-794-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9287\",\n      name: \"Cheliax, The Infernal Empire\",\n      date: \"2015-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-799-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9289\",\n      name: \"Darklands Revisited\",\n      date: \"2016-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-819-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9290\",\n      name: \"Inner Sea Faiths\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-825-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9291\",\n      name: \"Heaven Unleashed\",\n      date: \"2016-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-828-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9292\",\n      name: \"Inner Sea Intrigue\",\n      date: \"2016-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-837-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9293\",\n      name: \"Path of the Hellknight\",\n      date: \"2016-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-843-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9295\",\n      name: \"Planes of Power\",\n      date: \"2016-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-883-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9296\",\n      name: \"Inner Sea Temples\",\n      date: \"2016-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-893-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9297\",\n      name: \"Horror Realms\",\n      date: \"2016-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-900-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9298\",\n      name: \"The First World, Realm of the Fey\",\n      date: \"2016-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-909-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9299\",\n      name: \"Qadira, Jewel of the East\",\n      date: \"2017-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-912-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92101\",\n      name: \"Lands of Conflict\",\n      date: \"2017-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-927-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92102\",\n      name: \"Aquatic Adventures\",\n      date: \"2017-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-944-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92105\",\n      name: \"Taldor, the First Empire\",\n      date: \"2017-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-999-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92107\",\n      name: \"Inner Sea Taverns\",\n      date: \"2018-02-01\",\n      pages: 64,\n      isbn: \"978-1-64078-016-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92108\",\n      name: \"Nidal, Land of Shadows\",\n      date: \"2018-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-033-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92109\",\n      name: \"Distant Realms\",\n      date: \"2018-06-01\",\n      pages: 64,\n      isbn: \"978-1-64078-046-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92111\",\n      name: \"Sandpoint, Light of the Lost Coast\",\n      date: \"2018-10-01\",\n      pages: 64,\n      isbn: \"978-1-64078-080-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92104\",\n      name: \"Construct Handbook\",\n      date: \"2018-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-989-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92112\",\n      name: \"Faiths of Golarion\",\n      date: \"2018-12-01\",\n      pages: 64,\n      isbn: \"978-1-64078-099-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92114\",\n      name: \"Concordance of Rivals\",\n      date: \"2019-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-127-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92116\",\n      name: \"Druma, Profit and Prophecy\",\n      date: \"2019-08-01\",\n      pages: 64,\n      isbn: \"978-1-64078-141-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"DYN0031-E\",\n      name: \"Worldscape #1\",\n      date: \"2016-10-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oco\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0032-E\",\n      name: \"Worldscape #2\",\n      date: \"2016-11-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oza\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0033-E\",\n      name: \"Worldscape #3\",\n      date: \"2016-12-21\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcq\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0034-E\",\n      name: \"Worldscape #4\",\n      date: \"2017-01-25\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcu\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0035-E\",\n      name: \"Worldscape #5\",\n      date: \"2017-02-22\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcy\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0036-E\",\n      name: \"Worldscape #6\",\n      date: \"2017-04-05\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9sgk\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0046-HC\",\n      name: \"Spiral of Bones\",\n      date: \"2019-02-09\",\n      pages: 136,\n      type: \"comic\",\n      isbn: \"978-1-5241-0738-3\",\n      url: \"https://paizo.com/products/btq01x8j\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0010-A\",\n      name: \"Pathfinder Comics #10\",\n      date: \"2013-10-23\",\n      pages: 32,\n      type: \"comic\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"PZOPSS0310E\",\n      name: \"Pathfinder Society Scenario #3–10: The Immortal Conundrum\",\n      date: \"2011-11-01\",\n      pages: 24,\n      type: \"pfs\",\n    },\n    {\n      _id: \"PZOPSS0000E\",\n      name: \"Pathfinder Society Roleplaying Guild Guide\",\n      date: \"2019-08-09\",\n      pages: 44,\n      type: \"pfs\",\n    },\n  ];\n}\n\n/**\n * @type {Sources}\n */\nexport let sources;\n","/**\n * Migation category tracker for @see {MigrationState}\n */\nexport class MigrationCategory {\n  state = null;\n\n  id = null;\n  label = null;\n  isNumber = false;\n  processed = null;\n  invalid = 0;\n  errors = [];\n  current = null;\n  total = null;\n  ignored = 0;\n  completed = false;\n\n  constructor(id, label, isNumber, state) {\n    this.state = state;\n    this.id = id;\n    this.label = game.i18n.localize(label);\n    this.isNumber = isNumber;\n    if (isNumber) {\n      this.total = 0;\n      this.processed = 0;\n    }\n  }\n\n  /**\n   * Signal that an entry has started processing.\n   *\n   * @param {any} entry - Whatever was started processing.\n   */\n  startEntry(entry) {\n    this.current = entry;\n    this.state.call(this, { entry, action: \"process\", actionState: \"start\", processing: this.processed + 1 });\n  }\n\n  /**\n   * Signal that an entry has finished processing.\n   *\n   * @param {any} entry - Whatever was finished processing with.\n   */\n  finishEntry(entry) {\n    this.current = null;\n    this.processed += 1;\n    this.state.call(this, { entry, action: \"process\", actionState: \"finish\", processed: this.processed });\n  }\n\n  recordError(entry, error) {\n    this.errors.push({ entry, error });\n  }\n\n  /**\n   * Signal that a specific entry was ignored.\n   *\n   * @param {any} entry - Whatever was ignored.\n   */\n  ignoreEntry(entry) {\n    this.ignored += 1;\n    this.state.call(this, { entry, action: \"ignore\" });\n  }\n\n  /**\n   * Add unspecific ignored entries.\n   *\n   * @param {number} ignored\n   */\n  addIgnored(ignored) {\n    this.ignored += ignored;\n    this.state.call(this, { action: \"info\", ignored, total: this.total, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of items in this category.\n   *\n   * @param {number} total\n   */\n  setTotal(total) {\n    this.total = total;\n    this.state.call(this, { action: \"info\", total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of invalid items in this category.\n   *\n   * @param {number} total\n   */\n  setInvalid(total) {\n    this.invalid = total;\n    this.state.call(this, { action: \"info\", total: this.total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  /**\n   * Signal the start of processing this category.\n   */\n  start() {\n    this.completed = false;\n    this.state.call(this, { action: \"start\" });\n  }\n\n  /**\n   * Signal the finishing of processing this category.\n   */\n  finish() {\n    this.completed = true;\n    this.state.call(this, { action: \"finish\" });\n  }\n\n  /**\n   * Return name of currently processed entry.\n   *\n   * @type {string|null} - Name of the entry, or null if no entry is being processed.\n   */\n  get currentName() {\n    const current = this.current;\n    if (!current) return null;\n\n    if (current instanceof foundry.abstract.Document) return current.name;\n    if (current instanceof CompendiumCollection) return current.metadata.label;\n    return null;\n  }\n\n  getInvalidEntries() {\n    let collection;\n    switch (this.id) {\n      case \"actors\":\n      case \"items\":\n      case \"scenes\":\n        collection = game[this.id];\n        break;\n      default:\n        return [];\n    }\n\n    const results = [];\n    for (const id of collection.invalidDocumentIds) {\n      results.push({ id, entry: collection.getInvalid(id) });\n    }\n\n    return results;\n  }\n\n  getErrorEntries() {\n    return this.errors;\n  }\n}\n","import { MigrationCategory } from \"./migration-category.mjs\";\n\n/**\n * State object for tracking migration progress.\n */\nexport class MigrationState {\n  /** @type {string} Display label */\n  label;\n\n  /**\n   * @type {Record<number, Function>}\n   */\n  callbacks = {};\n\n  /**\n   * @type {Record<string, MigrationCategory>}\n   */\n  categories = {};\n\n  completed = false;\n\n  /**\n   * @type {boolean} Compendium unlocking state.\n   */\n  unlock = false;\n\n  constructor(label) {\n    if (label) label = game.i18n.localize(label);\n    this.label = label;\n  }\n\n  /**\n   * @param {string} category\n   * @param {string} label\n   * @param {boolean} isNumber\n   * @returns {MigrationCategory}\n   */\n  createCategory(category, label, isNumber) {\n    const mc = new MigrationCategory(category, label, isNumber, this);\n    this.categories[category] = mc;\n    this.call(mc, { action: \"new\" });\n    return mc;\n  }\n\n  /**\n   * @param {MigrationCategory|MigrationState} category - Category or the overall state\n   * @param {object} info - Category or state specific data\n   */\n  call(category, info) {\n    for (const callback of Object.values(this.callbacks)) {\n      try {\n        callback(this, category, info);\n      } catch (err) {\n        console.error(err, callback);\n      }\n    }\n  }\n\n  start() {\n    this.completed = false;\n    this.call(this, { action: \"start\" });\n  }\n\n  finish() {\n    this.completed = true;\n    this.call(this, { action: \"finish\" });\n  }\n\n  get errors() {\n    return Object.values(this.categories).reduce((total, c) => total + c.errors.length, 0);\n  }\n\n  get invalid() {\n    return Object.values(this.categories).reduce((total, c) => total + c.invalid, 0);\n  }\n\n  get ignored() {\n    return Object.values(this.categories).reduce((total, c) => total + c.ignored, 0);\n  }\n}\n","export class MigrationIssuesDialog extends Dialog {\n  /**\n   * Present simple dialog with issues within a migration category.\n   *\n   * @param {MigrationCategory} category\n   */\n  static async open(category) {\n    const templateData = {\n      errors: category.getErrorEntries(),\n      invalid: category.getInvalidEntries(),\n    };\n\n    return this.prompt({\n      title: game.i18n.localize(\"PF1.Migration.Dialog.Issues\") + \" – \" + category.label,\n      content: await renderTemplate(\"systems/pf1/templates/apps/migration-issues.hbs\", templateData),\n      rejectClose: false,\n      options: {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"migration-issues\"],\n        jQuery: false,\n        width: 620,\n        height: \"auto\",\n      },\n    });\n  }\n\n  /**\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    // Copy ID/UUID to clipboard\n    jq.on(\"click\", \".issue .id a\", (ev) => {\n      const el = ev.target;\n      const { id, uuid } = el.dataset;\n      game.clipboard.copyPlainText(uuid || id);\n      const type = uuid ? \"UUID\" : \"ID\";\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label: \"\", type, id: uuid || id }));\n    });\n  }\n}\n","import { MigrationState } from \"../../migration/migration-state.mjs\";\nimport { MigrationIssuesDialog } from \"./migration-issues-dialog.mjs\";\n\nexport class MigrationDialog extends Application {\n  /**\n   * Migration state object.\n   *\n   * @type {MigrationState}\n   */\n  state;\n\n  constructor(state, options) {\n    super(options);\n\n    this.state = state;\n\n    this.autoClose = options.autoClose ?? false;\n\n    state.callbacks[this.appId] = this._onMigration.bind(this);\n  }\n\n  get title() {\n    const label = game.i18n.localize(\"PF1.Migration.Dialog.Title\");\n    if (this.state.label) return `${label}: ${this.state.label}`;\n    return label;\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/migration.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"migration\"],\n      width: \"auto\",\n      height: \"auto\",\n      top: 200,\n      resizable: true,\n    };\n  }\n\n  getData() {\n    return {\n      state: this.state,\n    };\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    if (this.state.completed && this.autoClose) {\n      setTimeout(() => this.close(), 2_000);\n    }\n\n    const html = jq[0];\n\n    html.querySelectorAll(\".value.has-details\").forEach((el) => {\n      el.addEventListener(\"click\", this._onClickForDetails.bind(this));\n    });\n  }\n\n  _onClickForDetails(event) {\n    event.preventDefault();\n\n    const el = event.target.closest(\".category\");\n    const categoryId = el.dataset.category;\n    const category = this.state.categories[categoryId];\n\n    MigrationIssuesDialog.open(category);\n  }\n\n  /**\n   * @param {MigrationCategory|MigrationState} state\n   * @param {object} info\n   */\n  _onMigration(state, info) {\n    // Queue render if already rendering\n    if (this._state === Application.RENDER_STATES.RENDERING) this._queueRender = true;\n    else this.render();\n  }\n\n  /**\n   * @override\n   */\n  async _render(...args) {\n    const rv = await super._render(...args);\n\n    // Handle queued render\n    if (this._queueRender) {\n      this._queueRender = false;\n      this.render();\n    }\n\n    return rv;\n  }\n\n  /**\n   * @override\n   * @param  {...any} args\n   * @returns\n   */\n  async close(...args) {\n    delete this.state.callbacks[this.appId];\n    return super.close(...args);\n  }\n\n  /**\n   * Initialize migration dialog and migration state tracker if necessary.\n   *\n   * @param {MigrationState} [state] - Existing state tracker if any\n   * @param {string} [label] - Label associated with the tracker\n   * @param {object} [dialogOptions={}] - Dialog options\n   * @returns {MigrationDialog} - Active state tracker\n   */\n  static initialize(state, label, dialogOptions = {}) {\n    state ??= new MigrationState(label);\n    state.label ||= label;\n\n    const app = new this(state, { autoClose: dialogOptions.autoClose ?? false });\n    app.render(true, dialogOptions);\n    return app;\n  }\n}\n","import { ItemPF } from \"./documents/item/item-pf.mjs\";\nimport { ItemChange } from \"./components/change.mjs\";\n\nimport { MigrationDialog } from \"./applications/migration/migration-dialog.mjs\";\nimport { MigrationState } from \"./migration/migration-state.mjs\";\n\n/**\n * Moved compendium content.\n */\nexport const moved = {\n  // Trapfinding (v10)\n  \"Compendium.pf1.class-abilities.OhHKCLQXoMlYNodk\": \"Compendium.pf1.class-abilities.Item.pEODJDoTk7uhCZY7\",\n  // Trap Sense (v10)\n  \"Compendium.pf1.class-abilities.fb00TzBa32sSisGb\": \"Compendium.pf1.class-abilities.Item.BoEkMviJrW0PKmhj\",\n  // Danger Sense (v10)\n  \"Compendium.pf1.class-abilities.4bcGnKYf9beV0nfa\": \"Compendium.pf1.class-abilities.Item.sTlu3zgAEDdJnER5\",\n  // Fast Movement (v10)\n  \"Compendium.pf1.class-abilities.dvQdP8QfrDA9Lxzk\": \"Compendium.pf1.class-abilities.Item.9EX00obqhGHcrOdp\",\n};\n\n/**\n * Material ID changes done with v10.5\n */\nconst materialChanges = {\n  nexavarianSteel: \"nexavaranSteel\",\n  alchemicalsilver: \"alchemicalSilver\",\n  angelskin: \"angelSkin\",\n  bloodcrystal: \"bloodCrystal\",\n  coldiron: \"coldIron\",\n  darkleafcloth: \"darkleafCloth\",\n  eelhide: \"eelHide\",\n  elysianbronze: \"elysianBronze\",\n  fireforgedsteel: \"fireForgedSteel\",\n  frostforgedsteel: \"frostForgedSteel\",\n  griffonmane: \"griffonMane\",\n  liquidglass: \"liquidGlass\",\n  livingsteel: \"livingSteel\",\n  singingsteel: \"singingSteel\",\n  spiresteel: \"spireSteel\",\n};\n\nconst marker = () => ({ pf1: { action: \"migration\" } });\n\n/**\n * An indicator for whether the system is currently migrating the world.\n *\n * @type {boolean}\n */\n// As the `pf1` global does not use this ES module but a cloned copy, this value\n// only exists for the documentation. Always use `pf1.migrations.isMigrating` instead!\nexport let isMigrating = false; // eslint-disable-line prefer-const -- pf1.migrations.isMigrating is changed at runtime\n\n/**\n * Initialize {@link MigrationState} and {@link MigrationDialog}\n *\n * @param {MigrationState} [state] - State tracker\n * @param {string} [label] - Label\n * @param {object} [dialog=null] - If falsy, disable dialog. Otherwise options for the dialog.\n * @returns {MigrationState} - Original state or newly initialized one.\n */\nfunction initializeStateAndDialog(state, label, dialog = null) {\n  state ??= new MigrationState(label);\n  if (dialog) MigrationDialog.initialize(state, label, dialog);\n  return state;\n}\n\n/**\n * Perform a system migration for the entire World,\n * applying migrations for Actors, Items, Scenes, Tokens and Compendium packs\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param {boolean} [options.systemPacks=false] - Migrate system packs.\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog={}] - Progress dialog options. Set to falsy to disable the dialog.\n * @returns {Promise<void>} - A Promise which resolves once the migration is completed\n */\nexport async function migrateWorld({ unlock = false, systemPacks = false, state, dialog = {} } = {}) {\n  const isGM = game.user.isGM;\n\n  // Deny migration if migration is in progress and there's an active GM,\n  // otherwise assume it's an error and allow migration to start anew.\n  // Don't check for the setting to avoid migration state getting stuck, only trust the in-memory state\n  if (pf1.migrations.isMigrating && game.users.activeGM) {\n    return void ui.notifications.error(game.i18n.localize(\"PF1.Migration.InProgress\"));\n  }\n\n  if (isGM) await game.settings.set(\"pf1\", \"migrating\", true);\n\n  pf1.migrations.isMigrating = true;\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"world\" });\n\n  state = initializeStateAndDialog(state, \"PF1.Migration.Category.World\", dialog);\n  state.unlock = unlock;\n\n  state.start();\n\n  const startMessage = game.i18n.format(\"PF1.Migration.Start\", { version: game.system.version });\n  const smsgId = ui.notifications.info(startMessage, { permanent: true, console: false });\n  console.log(\"PF1 | Migration | Starting...\");\n\n  if (isGM) {\n    await _migrateWorldSettings();\n  }\n\n  // Migrate World Actors\n  await migrateActors({ state, noHooks: true });\n\n  // Migrate World Items\n  await migrateItems({ state, noHooks: true });\n\n  // Migrate Actor Override Tokens\n  await migrateScenes({ state, noHooks: true });\n\n  if (isGM) {\n    // Migrate Compendium Packs\n    const packs = game.packs.filter((p) => {\n      const source = p.metadata.packageType;\n      // Ignore modules, adventures, etc.\n      if (![\"world\", \"system\"].includes(source)) return false;\n      // Ignore system packs unless configured to include them\n      if (source === \"system\" && !systemPacks) return false;\n      // Ignore unsupported pack types\n      return [\"Actor\", \"Item\", \"Scene\"].includes(p.metadata.type);\n    });\n\n    await migrateCompendiums(packs, { unlock, state, noHooks: true });\n  }\n\n  // Remove start message\n  ui.notifications.remove(smsgId);\n\n  // Remove migration notification\n  ui.notifications.info(game.i18n.format(\"PF1.Migration.End\", { version: game.system.version }), { console: false });\n  console.log(\"PF1 | Migration | Completed!\");\n\n  if (isGM) {\n    // Set the migration as complete\n    await game.settings.set(\"pf1\", \"systemMigrationVersion\", game.system.version);\n\n    await game.settings.set(\"pf1\", \"migrating\", false);\n  }\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"world\" });\n}\n\n/**\n * Migrate actors directory.\n *\n * @param {object} [options={}]\n * @param {MigrationState} [options.state]\n * @param {object} [options.dialog=null]\n * @param options.noHooks\n * @returns {Promise<void>}\n */\nexport async function migrateActors({ state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"actors\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Actors\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"actors\", \"PF1.Migration.Category.Actors\", true);\n\n  console.log(\"PF1 | Migration | Actors directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.actors.size);\n  tracker.setInvalid(game.actors.invalidDocumentIds.size);\n\n  for (const actor of game.actors) {\n    if (!actor.isOwner) {\n      tracker.ignoreEntry(actor);\n      continue;\n    }\n\n    tracker.startEntry(actor);\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), undefined, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Actor: ${actor.name} | Applying updates`);\n        await actor.update(updateData, marker());\n      }\n    } catch (err) {\n      tracker.recordError(actor, err);\n      console.error(`PF1 | Migration | Actor: ${actor.name} | Error`, err);\n    }\n    tracker.finishEntry(actor);\n  }\n\n  console.log(\"PF1 | Migration | Actors directory complete!\");\n  tracker.finish();\n  if (localState) state.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"actors\" });\n}\n\n/**\n * Migrate items directory.\n *\n * @param {object} [options={}]\n * @param {MigrationState} [options.state]\n * @param {object} [options.dialog=null]\n * @param options.noHooks\n * @returns {Promise<void>}\n */\nexport async function migrateItems({ state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"items\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Items\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"items\", \"PF1.Migration.Category.Items\", true);\n\n  console.log(\"PF1 | Migration | Items directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.items.size);\n  tracker.setInvalid(game.items.invalidDocumentIds.size);\n\n  for (const item of game.items) {\n    if (!item.isOwner) {\n      tracker.ignoreEntry(item);\n      continue;\n    }\n\n    tracker.startEntry(item);\n\n    try {\n      const updateData = await migrateItemData(item.toObject());\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Item: ${item.name} | Applying updates`);\n        await item.update(updateData, marker());\n      }\n    } catch (err) {\n      tracker.recordError(item, err);\n      console.error(`PF1 | Migration | Item: ${item.name} | Error`, err);\n    }\n    tracker.finishEntry(item);\n  }\n\n  tracker.finish();\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Items directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"items\" });\n}\n\n/**\n * Migrate all scenes.\n *\n * @see {@link migrateScene}\n *\n * @param {object} [options={}]\n * @param {MigrationState} [options.state]\n * @param options.noHooks\n * @param {object} [options.dialog=null]\n *\n * @returns {Promise<void>}\n */\nexport async function migrateScenes({ state, noHooks = false, dialog = null } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"scenes\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Scenes\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"scenes\", \"PF1.Migration.Category.Scenes\", true);\n\n  console.log(\"PF1 | Migration | Scene directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.scenes.size);\n  tracker.setInvalid(game.scenes.invalidDocumentIds.size);\n\n  for (const scene of game.scenes) {\n    tracker.startEntry(scene);\n    await migrateScene(scene, { state, tracker });\n    tracker.finishEntry(scene);\n  }\n\n  tracker.finish();\n\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Scene directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"scenes\" });\n}\n\n/**\n * Migrate compendiums.\n *\n * @see {@link migrateCompendium}\n *\n * @param {Array<string|WorldCollection>|null} [packIds=null] - Array of pack IDs or packs to migrate. If null, all packs will be migrated.\n * @param {object} [options={}] - Additional options to pass along.\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param options.noHooks\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog=null] - Display migration dialog. Falsy disables.\n * @returns {Promise<void>} - Promise that resolves once all migrations are complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendiums(\n  packIds = null,\n  { unlock = false, state, noHooks = false, dialog = null } = {}\n) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"packs\", packs: foundry.utils.deepClone(packIds) });\n\n  if (packIds === null) packIds = [...game.packs];\n\n  // Locally generated state tracker\n  const localState = !state;\n  if (dialog) state = initializeStateAndDialog(state, \"PF1.Migration.Category.Packs\", dialog);\n  if (state) state.unlock = unlock;\n\n  if (localState) state?.start();\n\n  const tracker = state?.createCategory(\"packs\", \"PF1.Migration.Category.Packs\", true);\n  tracker?.start();\n  tracker?.setTotal(packIds.length);\n\n  for (const pack of packIds) {\n    tracker?.startEntry(pack);\n\n    if (!unlock && pack.locked) tracker?.ignoreEntry(pack);\n\n    try {\n      await migrateCompendium(pack, { unlock, noHooks: true });\n    } catch (error) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error`, error);\n    }\n\n    tracker?.finishEntry(pack);\n  }\n\n  tracker?.finish();\n  if (localState) state?.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"packs\", packs: foundry.utils.deepClone(packIds) });\n}\n\n/**\n * Migrate system compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {MigrationState} [options.state]\n * @param {object} [options.dialog={}] - Migration dialog options. Falsy disables the dialog.\n * @returns {Promise<void>}\n */\nexport async function migrateSystem({ unlock = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"system\" });\n\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.System\", dialog);\n  state.unlock = unlock;\n\n  state.start();\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"system\");\n  await migrateCompendiums(packs, { unlock, state, dialog: false, noHooks: true });\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"system\" });\n}\n\n/**\n * Migrate module compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {object} [options.dialog={}] - Dialog options. Falsy disables the dialog.\n * @param {MigrationState} [options.state]\n * @returns {Promise<void>}\n */\nexport async function migrateModules({ unlock = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"modules\" });\n\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Modules\", dialog);\n  state.unlock = unlock;\n\n  state.start();\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"module\");\n  await migrateCompendiums(packs, { unlock, state, noHooks: true });\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"modules\" });\n}\n\n/* -------------------------------------------- */\n\n/**\n * Clear messages generated by pack.migrate()\n *\n * @internal\n * @param {string} marker - string to look for\n */\nfunction clearCoreMessages(marker) {\n  const testActiveMsg = (el, marker) => {\n    if (el instanceof jQuery) el = el[0];\n    return el.textContent.includes(marker);\n  };\n  // Queue has special objects\n  ui.notifications.queue = ui.notifications.queue.filter((msg) => !msg.message.includes(marker));\n  // Active has jQuery elements\n  ui.notifications.active = ui.notifications.active.filter((msg) => !testActiveMsg(msg));\n  ui.notifications.fetch();\n}\n\n/**\n * Apply migration rules to all Documents within a single Compendium pack\n *\n * @param {CompendiumCollection|string} pack - Compendium (or its ID) to migrate\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendium will be ignored.\n * @param options.noHooks\n * @returns {Promise<void>} - Promise that resolves once migration is complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendium(pack, { unlock = false, noHooks = false } = {}) {\n  if (typeof pack === \"string\") {\n    pack = game.packs.get(pack);\n    if (!pack) throw new Error(`Compendium \"${pack}\" not found.`);\n  }\n\n  if (pack.locked && !unlock) return;\n\n  const docType = pack.metadata.type;\n  if (![\"Actor\", \"Item\", \"Scene\"].includes(docType)) return;\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"pack\", collection: pack });\n\n  const wasLocked = pack.locked;\n  if (wasLocked) await pack.configure({ locked: false });\n\n  // Begin by requesting server-side data model migration and get the migrated content\n  await pack.migrate();\n  clearCoreMessages(`Compendium pack ${pack.collection}`);\n\n  // Iterate over compendium entries - applying fine-tuned migration functions\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Starting...`);\n\n  /** @type {Actor[]|Scene[]|Item[]} */\n  console.debug(`PF1 | Migration | Pack: ${pack.collection} | Requesting documents from server`);\n  const documents = await pack.getDocuments();\n\n  const updates = [];\n\n  console.debug(\n    `PF1 | Migration | Pack: ${pack.collection} | Building update data for ${documents.length} document(s)`\n  );\n  // Collect updates\n  for (const document of documents) {\n    try {\n      let updateData;\n      switch (docType) {\n        case \"Item\":\n          updateData = await migrateItemData(document.toObject(), undefined, { item: document });\n          break;\n        case \"Actor\":\n          updateData = await migrateActorData(document.toObject(), undefined, { actor: document });\n          break;\n        case \"Scene\": {\n          await migrateScene(document);\n          break;\n        }\n      }\n\n      if (updateData && !foundry.utils.isEmpty(updateData)) {\n        updateData._id = document.id;\n        updates.push(updateData);\n      }\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error!`, err);\n    }\n  }\n\n  if (updates.length) {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Applying update(s) to ${updates.length} document(s)`);\n    // Commit updates\n    try {\n      await getDocumentClass(docType).updateDocuments(updates, { pack: pack.collection, ...marker() });\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error:`, err);\n    }\n  } else {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | No updates needed`);\n  }\n\n  if (wasLocked) await pack.configure({ locked: true });\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"pack\", collection: pack });\n\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Migration complete!`);\n}\n\n/**\n * Migrates world settings.\n */\nasync function _migrateWorldSettings() {}\n\n/* -------------------------------------------- */\n/*  Document Type Migration Helpers               */\n/* -------------------------------------------- */\n\n/**\n * Migrate data in tokens that is no longer used.\n *\n * @param {object} tokenData Token data\n * @param {object} [options] - Additional options\n * @param {TokenDocument} [options.token] - Token document\n */\nexport async function migrateTokenData(tokenData, { token }) {\n  const flags = tokenData.flags?.pf1 ?? {};\n\n  const updateData = {};\n\n  // Remove obsolete flags\n  if (flags.lowLightVision !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVision\"] = null;\n  }\n  if (flags.lowLightVisionMultiplier !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplier\"] = null;\n  }\n  if (flags.lowLightVisionMultiplierBright !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplierBright\"] = null;\n  }\n\n  // Remove disabled but still in use flags\n  if (flags.disableLowLight === false) {\n    updateData[\"flags.pf1.-=disableLowLight\"] = null;\n  }\n  if (flags.staticSize === false) {\n    updateData[\"flags.pf1.-=staticSize\"] = null;\n  }\n  if (flags.customVisionRules === false) {\n    updateData[\"flags.pf1.-=customVisionRules\"] = null;\n  }\n\n  // Remove data from v9 vision handling\n  // Added with PF1 v9.4\n  if (!flags.customVisionRules) {\n    // Attempt to preserve vision range after migration\n    if (tokenData.sight.visionMode !== \"basic\") {\n      if (tokenData.sight.range !== 0) updateData[\"sight.range\"] = 0;\n      updateData[\"sight.visionMode\"] = \"basic\";\n    }\n    if (\"saturation\" in tokenData.sight) updateData[\"sight.-=saturation\"] = null;\n    if (\"brightness\" in tokenData.sight) updateData[\"sight.-=brightness\"] = null;\n    if (\"attenuation\" in tokenData.sight) updateData[\"sight.-=attenuation\"] = null;\n    if (\"contrast\" in tokenData.sight) updateData[\"sight.-=contrast\"] = null;\n    if (tokenData.detectionModes?.length) updateData[\"detectionModes\"] = [];\n  }\n\n  // Record migrated version\n  if (!foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return updateData;\n}\n\n/**\n * Migrate token.\n *\n * @param {TokenDocument} token - Token to migrate\n * @returns {Promise<TokenDocument|null>} - Promise to updated document,. or null if no update was done.\n */\nexport async function migrateToken(token) {\n  const tokenData = token.toObject();\n  const updateData = await migrateTokenData(tokenData, { token });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return token.update(foundry.utils.expandObject(updateData), marker());\n  }\n}\n\n/**\n * Migrate singular actor document.\n *\n * @param {Actor} actor - Actor to migrate.\n * @returns {Promise<Actor|null>}\n */\nexport async function migrateActor(actor) {\n  await migrateActiveEffectsToItems(actor);\n\n  const updateData = await migrateActorData(actor.toObject(), actor.token, { actor });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return actor.update(updateData, marker());\n  }\n\n  return null;\n}\n\n/**\n * Migrate active effects from actor to items that should own them instead.\n *\n * Added with PF1 v10\n *\n * @param {ActorPF} actor\n */\nexport async function migrateActiveEffectsToItems(actor) {\n  const p = [];\n  for (const buff of actor.itemTypes.buff) {\n    if (!buff.isActive) continue;\n    try {\n      const ae = buff.effect;\n      if (!ae) continue;\n      if (ae.parent === buff) continue; // Already migrated\n\n      const aeData = ae.toObject();\n      setProperty(aeData, \"flags.pf1.tracker\", true);\n      aeData.transfer = true;\n\n      const p0 = ActiveEffect.implementation.create(aeData, { parent: buff });\n      const p1 = ae.delete();\n      p.push(p0, p1);\n    } catch (err) {\n      console.error(\"PF1 | Migration | Failed to transition buff tracker to origin\", err);\n    }\n  }\n\n  await Promise.all(p);\n}\n\n/**\n * Migrate a single Actor document to incorporate latest data model changes\n * Return an Object of updateData to be applied\n *\n * @param {ActorData} actorData   The actor data to derive an update from\n * @param {TokenDocument} token\n * @param {object} [options] - Additional options\n * @param {Actor} [options.actor] - Associated actor document\n * @returns {object} - The updateData to apply\n */\nexport async function migrateActorData(actorData, token, { actor } = {}) {\n  // Ignore basic actor type\n  if (actorData.type === \"basic\") return {};\n  // Ignore module introduced types\n  if (!game.system.template.Actor.types.includes(actorData.type)) return {};\n\n  const updateData = {};\n\n  _migrateCharacterLevel(actorData, updateData);\n  _migrateActorEncumbrance(actorData, updateData);\n  _migrateActorNoteArrays(actorData, updateData);\n  _migrateActorSpeed(actorData, updateData);\n  _migrateActorSpellbookCL(actorData, updateData);\n  _migrateActorSpellbookSlots(actorData, updateData);\n  _migrateActorSpellbookPrep(actorData, updateData);\n  _migrateActorSpellbookKind(actorData, updateData, actor);\n  _migrateActorConcentration(actorData, updateData);\n  _migrateActorBaseStats(actorData, updateData);\n  _migrateUnusedActorCreatureType(actorData, updateData);\n  _migrateActorSpellbookDCFormula(actorData, updateData);\n  _migrateActorHPAbility(actorData, updateData);\n  _migrateActorCR(actorData, updateData);\n  _migrateAttackAbility(actorData, updateData);\n  _migrateActorDefenseAbility(actorData, updateData);\n  _migrateActorSpellbookUsage(actorData, updateData);\n  _migrateActorNullValues(actorData, updateData);\n  _migrateActorSpellbookDomainSlots(actorData, updateData);\n  _migrateActorStatures(actorData, updateData);\n  _migrateActorProficiencies(actorData, updateData, { actor });\n  _migrateActorInitAbility(actorData, updateData);\n  _migrateActorChangeRevamp(actorData, updateData);\n  _migrateActorCMBRevamp(actorData, updateData);\n  _migrateCarryBonus(actorData, updateData);\n  _migrateBuggedValues(actorData, updateData);\n  _migrateSpellbookUsage(actorData, updateData);\n  _migrateActorHP(actorData, updateData);\n  _migrateActorSenses(actorData, updateData, token);\n  _migrateActorInvaliddSkills(actorData, updateData);\n  _migrateActorSkillRanks(actorData, updateData);\n  _migrateActorSkillJournals(actorData, updateData);\n  _migrateActorSubskillData(actorData, updateData);\n  _migrateActorUnusedData(actorData, updateData);\n  _migrateActorDRandER(actorData, updateData);\n  _migrateActorTraitsCustomToArray(actorData, updateData);\n  _migrateActorFlags(actorData, updateData);\n\n  // Migrate Owned Items\n  const items = [];\n  for (const item of actorData.items ?? []) {\n    // Migrate the Owned Item\n    const itemData = item instanceof Item ? item.toObject() : item;\n    const itemDoc = actor?.items.get(itemData._id);\n    try {\n      const itemUpdate = await migrateItemData(itemData, actor, { item: itemDoc });\n\n      // Update the Owned Item\n      if (!foundry.utils.isEmpty(itemUpdate)) {\n        itemUpdate._id = itemData._id;\n        items.push(foundry.utils.expandObject(itemUpdate));\n      }\n    } catch (err) {\n      console.error(\n        `Error migrating Item \"${item.name}\" [${itemDoc?.uuid ?? itemData._id}] on actor \"${actorData.name}\" [${\n          actor?.uuid ?? actorData._id\n        }]`\n      );\n      throw new Error(`Item \"${item.name}\" [${itemData._id}] failed migration: ${err.message}`, { cause: err });\n    }\n  }\n  if (items.length > 0) updateData.items = items;\n\n  // Active Effects\n  await _migrateActorActiveEffects(actorData, updateData, actor);\n\n  // Record migrated version\n  if (!foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return foundry.utils.expandObject(updateData);\n}\n\n/* -------------------------------------------- */\n\n/**\n *  Migrate singular item document.\n *\n * @param {Item} item - Item document to update.\n * @returns {Promise<Item|null>} - Promise to updated item document, or null if no update was performed.\n */\nexport async function migrateItem(item) {\n  const updateData = await migrateItemData(item.toObject(), item.actor, { item });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return item.update(updateData, marker());\n  }\n  return null;\n}\n\n/**\n * Migrate a single Item document to incorporate latest data model changes\n *\n * @param {object} itemData    The item data to derive an update from\n * @param {Actor} actor - Parent actor document\n * @param {object} [options] - Additional options\n * @param {number} [options._depth=0] - Internal only. Recursion depth tracking.\n * @param {Item} [options.item] - Item document\n * @returns {object} - The updateData to apply\n */\nexport async function migrateItemData(itemData, actor = null, { item, _depth = 0 } = {}) {\n  const updateData = {};\n\n  // Migrate data to system\n  if (itemData.system == null && itemData.data != null) {\n    itemData = foundry.utils.deepClone(itemData);\n    itemData.system = itemData.data;\n    delete itemData.data;\n  }\n\n  // Ignore module introduced types\n  if (!game.system.template.Item.types.includes(itemData.type)) return {};\n\n  _migrateItemArrayTypes(itemData, updateData);\n  _migrateFlagsArrayToObject(itemData, updateData);\n  _migrateWeaponImprovised(itemData, updateData);\n  _migrateItemSpellDescription(itemData, updateData);\n  _migrateClassDynamics(itemData, updateData);\n  _migrateClassType(itemData, updateData);\n  _migrateClassCasting(itemData, updateData);\n  _migrateSpellDivineFocus(itemData, updateData);\n  _migrateWeaponCategories(itemData, updateData);\n  _migrateArmorCategories(itemData, updateData);\n  _migrateArmorMaxDex(itemData, updateData);\n  _migrateItemSize(itemData, updateData);\n  _migrateItemFeatAbilityTypes(itemData, updateData);\n  _migrateClassLevels(itemData, updateData);\n  _migrateSavingThrowTypes(itemData, updateData);\n  _migrateCR(itemData, updateData);\n  _migrateItemChanges(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemContextNotes(itemData, updateData);\n  _migrateEquipmentSize(itemData, updateData);\n  _migrateSpellCosts(itemData, updateData);\n  _migrateSpellPreparation(itemData, updateData, { item });\n  _migrateLootEquip(itemData, updateData);\n  _migrateItemLinks(itemData, updateData, { item, actor });\n  _migrateItemProficiencies(itemData, updateData);\n  _migrateItemNotes(itemData, updateData);\n  _migrateScriptCalls(itemData, updateData);\n  _migrateItemActions(itemData, updateData, actor);\n  _migrateItemChargeCost(itemData, updateData);\n  _migrateItemLimitedUses(itemData, updateData);\n  _migrateItemWeight(itemData, updateData);\n  _migrateItemHealth(itemData, updateData);\n  _migrateContainerReduction(itemData, updateData);\n  _migrateContainerPrice(itemData, updateData);\n  _migrateItemType(itemData, updateData);\n  _migrateItemLearnedAt(itemData, updateData);\n  _migrateItemTuples(itemData, updateData);\n  _migrateEquipmentCategories(itemData, updateData);\n  _migrateSpellDescriptors(itemData, updateData);\n  _migrateItemTraitsCustomToArray(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemMaterials(itemData, updateData);\n  _migrateItemUnusedData(itemData, updateData);\n\n  // Migrate action data\n  const alreadyHasActions = itemData.system.actions instanceof Array && itemData.system.actions.length > 0;\n  const itemActionData = alreadyHasActions ? itemData.system.actions : updateData[\"system.actions\"];\n  if (itemActionData instanceof Array) {\n    const newActionData = itemActionData.map((action) => migrateItemActionData(action, updateData, { itemData, item }));\n    // Update only if something changed. Bi-directional testing for detecting deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(itemActionData, newActionData)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newActionData, itemActionData))\n    ) {\n      updateData[\"system.actions\"] = newActionData;\n    }\n  }\n\n  // Migrate container .inventoryItems array to .items map\n  // Introduced with PF1 v10\n  if (itemData.system?.inventoryItems instanceof Array) {\n    updateData[\"system.items\"] = {};\n    for (const sitem of itemData.system.inventoryItems) {\n      sitem._id ||= foundry.utils.randomID(16);\n\n      // Deal with corrupt items or v9 or older items\n      sitem.system ??= {};\n      try {\n        if (\"data\" in sitem) {\n          sitem.system = foundry.utils.mergeObject(sitem.data, sitem.system, { inplace: false });\n          delete sitem.data;\n        }\n\n        const subItem = new Item.implementation(sitem);\n\n        const itemUpdateData = await migrateItemData(subItem.toObject(), actor, { _depth: _depth + 1 });\n        subItem.updateSource(itemUpdateData);\n\n        updateData[\"system.items\"][sitem._id] = subItem.toObject();\n      } catch (err) {\n        console.error(\"Failed to migrate container content:\", { item: sitem, parent: item, actor });\n      }\n    }\n\n    updateData[\"system.-=inventoryItems\"] = null;\n  }\n\n  // Migrate container items\n  const migrateContainerItems = async (items) => {\n    if (!items) return;\n    for (const [itemId, itemData] of Object.entries(items)) {\n      try {\n        // Basic validation\n        const subItem = new Item.implementation(itemData);\n\n        // Migrate\n        const subUpdate = await migrateItemData(subItem.toObject(), actor, { item: subItem, _depth: _depth + 1 });\n\n        if (!foundry.utils.isEmpty(subUpdate)) {\n          const diff = subItem.updateSource(subUpdate);\n          updateData[\"system.items\"] ??= {};\n          updateData[\"system.items\"][itemId] = diff;\n        }\n      } catch (err) {\n        console.error(\"PF1 | Migration | Error\", err, item);\n      }\n    }\n  };\n\n  await migrateContainerItems(itemData.system.items);\n\n  // Record migrated version\n  if (!foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  // Return the migrated update data\n  return updateData;\n}\n\n// Migrate empty action type to \"other\"\n// Added with PF1 v10\nconst _migrateActionType = (action, itemData) => {\n  action.actionType ||= \"other\";\n};\n\n// Added with PF1 v10\nconst _migrateActionLimitedUses = (action, itemData) => {\n  // Migrate unlimited to empty selection, as the two are identical in meaning\n  if (action.uses?.self?.per === \"unlimited\") {\n    delete action.uses.self.per;\n  }\n\n  // Only physical items can be single use\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (action.uses?.self?.per === \"single\") {\n      action.uses.self.per = \"charges\";\n      action.uses.self.maxFormula = \"1\";\n    }\n  }\n};\n\n/**\n * Older actors incorrectly has .range.value as number instead of string\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionRange = (action, itemData) => {\n  const range = action.range?.value;\n  if (range === null || range === \"\") {\n    delete action.range.value;\n  } else if (range !== undefined && typeof range !== \"string\") {\n    action.range.value = String(range);\n  }\n};\n\n/**\n * Migrates a single action within an item.\n *\n * @param {object} action - The action's data, which also serves as the update data to pass on.\n * @param {object} updateData - Item update data\n * @param {object} [options] - Additional options\n * @param {Item} [options.item=null] - Parent item document this action is in.\n * @param {object} options.itemData - Parent item data\n * @returns {object} The resulting action data.\n */\nexport const migrateItemActionData = function (action, updateData, { itemData, item = null } = {}) {\n  action = foundry.utils.mergeObject(pf1.components.ItemAction.defaultData, action);\n\n  _migrateActionType(action, itemData);\n  _migrateActionLimitedUses(action, itemData);\n  _migrateActionRange(action, itemData);\n  _migrateActionDamageParts(action, itemData);\n  _migrateUnchainedActionEconomy(action, itemData);\n  _migrateActionDamageType(action, itemData);\n  _migrateActionConditionals(action, itemData);\n  _migrateActionEnhOverride(action, itemData);\n  _migrateActionPrimaryAttack(action, itemData);\n  _migrateActionChargeUsage(action, itemData);\n  _migrateActionExtraAttacks(action, itemData);\n  _migrateActionAmmunitionUsage(action, itemData, updateData);\n  _migrateActionHarmlessSpell(action, itemData);\n  _migrateActionSpellArea(action, itemData);\n  _migrateActionTemplate(action, itemData);\n  _migrateActionDuration(action, itemData);\n  _migrateActionMaterials(action, itemData);\n  _migrateActionObsoleteTypes(action, itemData);\n  _migrateActionUnusedData(action, itemData);\n\n  // Return the migrated update data\n  return action;\n};\n\n/* -------------------------------------------- */\n\n/**\n * Migrate singular scene document.\n *\n * @param {Scene} scene - Scene document to update.\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @returns {Promise<void>}\n */\nexport async function migrateScene(scene, { state, tracker } = {}) {\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Starting...`);\n  try {\n    await migrateSceneTokens(scene, { state, tracker });\n    await migrateSceneActors(scene, { state, tracker });\n\n    // Mark last migrated version\n    if (game.user.isGM) await scene.setFlag(\"pf1\", \"migration\", game.system.version);\n  } catch (err) {\n    tracker?.recordError(scene, err);\n    console.error(`PF1 | Migration | Scene: ${scene.name} | Error`, err);\n  }\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Complete!`);\n}\n\n/**\n * Migrate a single Scene data object\n *\n * @deprecated\n */\nexport async function migrateSceneData() {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.migrations.migrateSceneData() is obsolete, please use pf1.migrations.migrateScene() instead\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n  return {};\n}\n\n/**\n * Migrate tokens in a single scene.\n *\n * @param {Scene} scene - The Scene to Update\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n */\nexport async function migrateSceneTokens(scene, { state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (!token.isOwner) continue;\n\n    try {\n      await migrateToken(token);\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/**\n * Migrate unlinked actors on a single scene.\n *\n * @param {Scene} scene - Scene to migrate actors in.\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @returns {Promise<void>}\n */\nexport async function migrateSceneActors(scene, { state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (token.isLinked) continue;\n    const actor = token.actor;\n    if (!actor?.isOwner) continue;\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), token, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        const items = updateData.items;\n        delete updateData.items;\n        const effects = updateData.effects;\n        delete updateData.effects;\n        if (!foundry.utils.isEmpty(updateData)) await actor.update(updateData, marker());\n        if (items?.length) await actor.updateEmbeddedDocuments(\"Item\", items, marker());\n        if (effects?.length) await actor.updateEmbeddedDocuments(\"ActiveEffect\", effects, marker());\n      }\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/* -------------------------------------------- */\n\nconst _migrateCharacterLevel = function (ent, updateData) {\n  const arr = [\"details.level.value\", \"details.level.min\", \"details.level.max\", \"details.mythicTier\"];\n\n  for (const k of arr) {\n    const value = foundry.utils.getProperty(ent.system, k);\n    if (value == null) {\n      updateData[\"system.\" + k] = 0;\n    }\n  }\n};\n\nconst _migrateActorEncumbrance = function (ent, updateData) {\n  const arr = {\n    \"system.attributes.encumbrance.level\": \"attributes.encumbrance.-=level\",\n    \"system.attributes.encumbrance.levels.light\": \"attributes.encumbrance.levels.-=light\",\n    \"system.attributes.encumbrance.levels.medium\": \"attributes.encumbrance.levels.-=medium\",\n    \"system.attributes.encumbrance.levels.heavy\": \"attributes.encumbrance.levels.-=heavy\",\n    \"system.attributes.encumbrance.levels.carry\": \"attributes.encumbrance.levels.-=carry\",\n    \"system.attributes.encumbrance.levels.drag\": \"attributes.encumbrance.levels.-=drag\",\n    \"system.attributes.encumbrance.carriedWeight\": \"attributes.encumbrance.-=carriedWeight\",\n  };\n  for (const [key, updateKey] of Object.entries(arr)) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (value !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  }\n};\n\n/**\n * Convert array based flags into object.\n *\n * @param ent\n * @param updateData\n */\nconst _migrateFlagsArrayToObject = function (ent, updateData) {\n  const flags = ent.system.flags;\n  if (!flags) return;\n  const bflags = flags.boolean,\n    dflags = flags.dictionary;\n\n  if (Array.isArray(bflags)) {\n    // Compatibility with old data: Convert old array into actual dictionary.\n    updateData[\"system.flags.boolean\"] = bflags.reduce((flags, flag) => {\n      flags[flag] = true;\n      return flags;\n    }, {});\n  }\n\n  if (Array.isArray(dflags)) {\n    updateData[\"system.flags.dictionary\"] = dflags.reduce((flags, [key, value]) => {\n      flags[key] = value;\n      return flags;\n    }, {});\n  }\n};\n\nconst _migrateActorNoteArrays = function (ent, updateData) {\n  const list = [\"system.attributes.acNotes\", \"system.attributes.cmdNotes\", \"system.attributes.srNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && value instanceof Array) {\n      updateData[k] = value.join(\"\\n\");\n    }\n  }\n};\n\nconst _migrateActorSpeed = function (ent, updateData) {\n  const arr = [\n    \"attributes.speed.land\",\n    \"attributes.speed.climb\",\n    \"attributes.speed.swim\",\n    \"attributes.speed.fly\",\n    \"attributes.speed.burrow\",\n  ];\n  for (const k of arr) {\n    let value = foundry.utils.getProperty(ent.system, k);\n    if (typeof value === \"string\") value = parseInt(value);\n    if (typeof value === \"number\") {\n      updateData[`system.${k}.base`] = value;\n    } else if (value === null) {\n      updateData[`system.${k}.base`] = 0;\n    } else if (value?.total !== undefined) {\n      // Delete derived data\n      updateData[`system.${k}.-=total`] = null;\n    }\n\n    // Add maneuverability\n    if (k === \"attributes.speed.fly\" && foundry.utils.getProperty(ent.system, `${k}.maneuverability`) === undefined) {\n      updateData[`system.${k}.maneuverability`] = \"average\";\n    }\n  }\n};\n\nconst _migrateActorSpellbookSlots = function (ent, updateData) {\n  for (const spellbookSlot of Object.keys(\n    foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (\n      foundry.utils.getProperty(ent.system, `attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`) == null\n    ) {\n      updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`] = true;\n    }\n\n    for (let a = 0; a < 10; a++) {\n      const baseKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.base`;\n      const maxKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.max`;\n      const base = foundry.utils.getProperty(ent, baseKey);\n      const max = foundry.utils.getProperty(ent, maxKey);\n\n      if (base === undefined) {\n        if (typeof max === \"number\" && max > 0) {\n          updateData[baseKey] = max.toString();\n        }\n      } else {\n        const newBase = parseInt(base);\n        if (newBase > 0) {\n          if (newBase !== base) updateData[baseKey] = newBase;\n        } else {\n          // Remove pointless default value not present in new actors either\n          updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.-=base`] = null;\n        }\n      }\n    }\n  }\n};\n\n// Remove inconsistently used .spontaneous permanently recorded boolean\n// Added with PF1 v10\nfunction _migrateActorSpellbookPrep(actorData, updateData) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    const wasSpontaneous = book.spontaneous;\n    if (wasSpontaneous === undefined) continue;\n\n    const usesAuto = book.autoSpellLevelCalculation ?? false;\n    const usesSpellpoints = book.spellPoints.useSystem === true;\n    if (!usesAuto && !usesSpellpoints) {\n      // Set prep type to match old spontaneous toggle\n      updateData[`system.attributes.spells.spellbooks.${bookId}.spellPreparationMode`] = wasSpontaneous\n        ? \"spontaneous\"\n        : \"prepared\";\n\n      // Set progression type to high to match old behaviour\n      updateData[`system.attributes.spells.spellbooks.${bookId}.casterType`] = \"high\";\n    }\n\n    updateData[`system.attributes.spells.spellbooks.${bookId}.-=spontaneous`] = null;\n  }\n}\n\n/**\n * Migrate spellbook kind (arcane, divine, psychic, ...)\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} actor - Actor document\n */\nfunction _migrateActorSpellbookKind(actorData, updateData, actor) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (book.kind === undefined && book.inUse) {\n      // Attempt to get data from class\n      const castingClass =\n        !!book.class && book.class !== \"_hd\" ? actor.itemTypes.class.find((i) => i.system.tag === book.class) : null;\n      let kind = castingClass?.system.casting?.spells;\n\n      if (!kind) {\n        // Attempt to determine kind without access to source class\n        kind = \"arcane\"; // Default to arcane if all else fails\n        if (book.arcaneSpellFailure) kind = \"arcane\";\n        else if (book.psychic) kind = \"psychic\";\n        else if (book.spellPreparationMode === \"prepared\" && book.ability === \"int\") kind = \"alchemy\";\n        else if (book.class !== \"_hd\") kind = \"divine\";\n      }\n\n      updateData[`system.attributes.spells.spellbooks.${bookId}.kind`] = kind;\n    }\n  }\n}\n\nconst _migrateActorBaseStats = function (ent, updateData) {\n  const keys = [\n    \"system.attributes.hp.base\",\n    \"system.attributes.hd.base\",\n    \"system.attributes.savingThrows.fort.value\",\n    \"system.attributes.savingThrows.ref.value\",\n    \"system.attributes.savingThrows.will.value\",\n  ];\n  for (const k of keys) {\n    if (\n      k === \"system.attributes.hp.base\" &&\n      !(foundry.utils.getProperty(ent, \"items\") || []).filter((o) => o.type === \"class\").length\n    )\n      continue;\n    if (foundry.utils.getProperty(ent, k) !== undefined) {\n      const kList = k.split(\".\");\n      kList[kList.length - 1] = `-=${kList[kList.length - 1]}`;\n      updateData[kList.join(\".\")] = null;\n    }\n  }\n};\n\nconst _migrateUnusedActorCreatureType = function (ent, updateData) {\n  const type = foundry.utils.getProperty(ent.system, \"attributes.creatureType\");\n  if (type != undefined) updateData[\"system.attributes.-=creatureType\"] = null;\n};\n\nconst _migrateActorSpellbookDCFormula = function (ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.baseDCFormula`;\n    const curFormula = foundry.utils.getProperty(ent, key);\n    if (!curFormula) updateData[key] = \"10 + @sl + @ablMod\";\n  }\n};\n\nconst _migrateActorSpellbookName = function (ent, updateData) {\n  const spellbooks = Object.entries(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const [bookId, book] of spellbooks) {\n    if (book.altName !== undefined) {\n      const key = `system.attributes.spells.spellbooks.${bookId}`;\n      updateData[`${key}.-=altName`] = null;\n      if (book.altName.length) updateData[`${key}.name`] = book.altName;\n    }\n  }\n};\n\nconst _migrateActorSpellbookCL = function (ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.cl`;\n    const curBase = parseInt(foundry.utils.getProperty(ent, key + \".base\"));\n    const curFormula = foundry.utils.getProperty(ent, key + \".formula\");\n    if (curBase > 0) {\n      if (curFormula.length > 0) updateData[`${key}.formula`] = curFormula + \" + \" + curBase;\n      else updateData[`${key}.formula`] = curFormula + curBase;\n      updateData[`${key}.base`] = 0;\n    }\n  }\n};\n\nconst _migrateActorConcentration = function (ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const k of spellbooks) {\n    // Delete unused .concentration from old actors\n    const key = `system.attributes.spells.spellbooks.${k}`;\n    const oldValue = foundry.utils.getProperty(ent, `${key}.concentration`);\n    const isString = typeof oldValue === \"string\";\n    if (Number.isFinite(oldValue) || isString) updateData[`${key}.-=concentration`] = null;\n    if (isString) {\n      // Assume erroneous bonus formula location and combine it with existing bonus formula.\n      const formulaKey = `${key}.concentrationFormula`;\n      const formula = [oldValue];\n      formula.push(foundry.utils.getProperty(ent, formulaKey) || \"\");\n      updateData[formulaKey] = formula.filter((f) => f !== 0 && f?.toString().trim().length).join(\" + \");\n    }\n  }\n};\n\nconst _migrateActorHPAbility = function (ent, updateData) {\n  // Set HP ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.hpAbility\") === undefined) {\n    updateData[\"system.attributes.hpAbility\"] = \"con\";\n  }\n\n  // Set Fortitude save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.fort.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.fort.ability\"] = \"con\";\n  }\n\n  // Set Reflex save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.ref.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.ref.ability\"] = \"dex\";\n  }\n\n  // Set Will save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.will.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.will.ability\"] = \"wis\";\n  }\n};\n\nconst _migrateItemArrayTypes = function (ent, updateData) {\n  const conditionals = ent.system.conditionals;\n  if (conditionals != null && !(conditionals instanceof Array)) {\n    updateData[\"system.conditionals\"] = [];\n  }\n\n  const contextNotes = ent.system.contextNotes;\n  if (contextNotes != null && !(contextNotes instanceof Array)) {\n    if (contextNotes instanceof Object) updateData[\"system.contextNotes\"] = Object.values(contextNotes);\n    else updateData[\"system.contextNotes\"] = [];\n  }\n};\n\nconst _migrateWeaponImprovised = function (ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  const value = foundry.utils.getProperty(ent.system, \"weaponType\");\n  if (value === \"improv\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.properties.imp\"] = true;\n  }\n};\n\n// Migrates the weird .shortDescription back to .description.value\n// Added with PF1 v10\nconst _migrateItemSpellDescription = function (itemData, updateData) {\n  if (itemData.type !== \"spell\") return;\n\n  if (itemData.system.shortDescription) {\n    updateData[\"system.-=shortDescription\"] = null;\n\n    // If description.value exists, it's the older oversized pre-rendered version that is unwanted\n    updateData[\"system.description.value\"] = itemData.system.shortDescription;\n  }\n};\n\nconst _migrateSpellDivineFocus = function (item, updateData) {\n  if (item.type !== \"spell\") return;\n\n  const df = foundry.utils.getProperty(item.system, \"components.divineFocus\");\n  if (typeof df === \"boolean\") updateData[\"system.components.divineFocus\"] = Number(df);\n};\n\nconst _migrateClassDynamics = function (ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  const bab = ent.system.bab;\n  if (typeof bab === \"number\") updateData[\"system.bab\"] = \"low\";\n\n  const stKeys = [\"system.savingThrows.fort.value\", \"system.savingThrows.ref.value\", \"system.savingThrows.will.value\"];\n  for (const key of stKeys) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (typeof value === \"number\") updateData[key] = \"low\";\n  }\n};\n\nconst _migrateClassType = function (ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  if (ent.system.classType !== undefined && ent.system.subType === undefined) {\n    updateData[\"system.subType\"] = \"base\";\n  }\n};\n\n// Added with PF1 v10\nfunction _migrateClassCasting(itemData, updateData) {\n  const casting = itemData.system?.casting;\n  if (!casting) return;\n\n  if (!casting.type) {\n    updateData[\"system.-=casting\"] = null;\n    return;\n  }\n\n  // domainSlots -> domain\n  if (casting.domainSlots !== undefined) {\n    updateData[\"system.casting.domain\"] = casting.domain ?? casting.domainSlots ?? 1;\n    updateData[\"system.casting.-=domainSlots\"] = null;\n  }\n}\n\nconst _migrateWeaponCategories = function (ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  // Change category\n  const type = ent.system.weaponType;\n  if (type === \"misc\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"other\";\n  } else if (type === \"splash\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"splash\";\n  }\n\n  const changeProp = [\"simple\", \"martial\", \"exotic\"].includes(type);\n  if (changeProp && ent.system.weaponSubtype == null) {\n    updateData[\"system.weaponSubtype\"] = \"1h\";\n  }\n\n  // Change light property\n  const lgt = foundry.utils.getProperty(ent.system, \"properties.lgt\");\n  if (lgt != null) {\n    updateData[\"system.properties.-=lgt\"] = null;\n    if (lgt === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"light\";\n    }\n  }\n\n  // Change two-handed property\n  const two = foundry.utils.getProperty(ent.system, \"properties.two\");\n  if (two != null) {\n    updateData[\"system.properties.-=two\"] = null;\n    if (two === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"2h\";\n    }\n  }\n\n  // Change melee property\n  const melee = foundry.utils.getProperty(ent.system, \"weaponData.isMelee\");\n  if (melee != null) {\n    updateData[\"system.weaponData.-=isMelee\"] = null;\n    if (melee === false && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"ranged\";\n    }\n  }\n};\n\nconst _migrateArmorCategories = function (ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const oldType = foundry.utils.getProperty(ent.system, \"armor.type\");\n  if (oldType == null) return;\n\n  if (oldType === \"clothing\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"clothing\";\n  } else if (oldType === \"shield\") {\n    updateData[\"system.equipmentType\"] = \"shield\";\n    updateData[\"system.equipmentSubtype\"] = \"lightShield\";\n  } else if (oldType === \"misc\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"wondrous\";\n  } else if ([\"light\", \"medium\", \"heavy\"].includes(oldType)) {\n    updateData[\"system.equipmentType\"] = \"armor\";\n    updateData[\"system.equipmentSubtype\"] = `${oldType}Armor`;\n  }\n\n  updateData[\"system.armor.-=type\"] = null;\n};\n\n/**\n * Convert string armor max dex to number.\n *\n * Introduced with PF1 v10\n *\n * @param item\n * @param updateData\n */\nconst _migrateArmorMaxDex = (item, updateData) => {\n  if (item.type !== \"equipment\") return;\n\n  let maxDex = item.system.armor?.dex;\n  // Skip valid states\n  if (maxDex === undefined || maxDex === null) return;\n  if (typeof maxDex === \"number\") return;\n\n  // Convert string to number\n  maxDex = parseInt(maxDex);\n  if (Number.isInteger(maxDex)) {\n    updateData[\"system.armor.dex\"] = maxDex;\n  }\n  // Assume corrupt value otherwise\n  else {\n    updateData[\"system.armor.-=dex\"] = null;\n  }\n};\n\nconst _migrateEquipmentCategories = (item, updateData) => {\n  if (item.type !== \"equipment\") return;\n\n  const subtype = updateData[\"system.subType\"] ?? item.system.subType;\n  if (subtype !== \"misc\") return;\n\n  switch (item.system.equipmentSubtype) {\n    case \"wondrous\":\n      updateData[\"system.subType\"] = \"wondrous\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"clothing\":\n      updateData[\"system.subType\"] = \"clothing\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"other\":\n      updateData[\"system.subType\"] = \"other\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n  }\n};\n\nconst _migrateSpellDescriptors = (item, updateData) => {\n  if (item.type !== \"spell\" || item.system.types === undefined) return;\n\n  const current = item.system.types\n    .split(\",\")\n    .flatMap((x) => x.split(\";\"))\n    .filter((x) => x)\n    .map((x) => x.trim());\n\n  const value = [];\n  const custom = [];\n  const entries = Object.entries(pf1.config.spellDescriptors);\n  current.forEach((c) => {\n    const exists = entries.find(([k, v]) => c.toLowerCase() === k.toLowerCase() || c.toLowerCase() === v.toLowerCase());\n    if (exists) {\n      value.push(exists[0]);\n    } else {\n      custom.push(c);\n    }\n  });\n\n  updateData[\"system.-=types\"] = null;\n  updateData[\"system.descriptors.value\"] = value;\n  updateData[\"system.descriptors.custom\"] = custom.join(\"; \");\n};\n\nconst _migrateItemSize = function (ent, updateData) {\n  // Convert custom sizing in weapons\n  if (ent.type === \"weapon\") {\n    const wdSize = foundry.utils.getProperty(ent.system, \"weaponData.size\");\n    if (wdSize) {\n      // Move old\n      updateData[\"system.size\"] = wdSize;\n      updateData[\"system.weaponData.-=size\"] = null;\n      return;\n    }\n  }\n\n  const oldSize = ent.system.size;\n  if ([\"spell\", \"class\", \"buff\", \"feat\"].includes(ent.type)) {\n    // Remove size from abstract items\n    if (oldSize !== undefined) {\n      updateData[\"system.-=size\"] = null;\n    }\n  } else {\n    // Add default size to everything else if not present\n    if (oldSize === undefined) {\n      updateData[\"system.size\"] = \"med\";\n    }\n  }\n};\n\nconst _migrateItemFeatAbilityTypes = function (itemData, updateData) {\n  if (itemData.type !== \"feat\") return;\n\n  const type = itemData.system.abilityType;\n  // Convert \"none\" and other invalid values (e.g. null or \"n/a\") to \"na\"\n  // Added with PF1 v10\n  if (pf1.config.abilityTypes[type] === undefined) {\n    updateData[\"system.abilityType\"] = \"na\";\n  }\n};\n\nconst _migrateClassLevels = function (ent, updateData) {\n  const level = ent.system.levels;\n  if (typeof level === \"number\" && ent.system.level == null) {\n    updateData[\"system.level\"] = level;\n    updateData[\"system.-=levels\"] = null;\n  }\n};\n\nconst _migrateSavingThrowTypes = function (ent, updateData) {\n  if (\n    foundry.utils.getProperty(ent.system, \"save.type\") == null &&\n    typeof foundry.utils.getProperty(ent.system, \"save.description\") === \"string\"\n  ) {\n    const desc = foundry.utils.getProperty(ent.system, \"save.description\");\n    if (desc.match(/REF/i)) updateData[\"system.save.type\"] = \"ref\";\n    else if (desc.match(/FORT/i)) updateData[\"system.save.type\"] = \"fort\";\n    else if (desc.match(/WILL/i)) updateData[\"system.save.type\"] = \"will\";\n  }\n};\n\nconst _migrateCR = function (ent, updateData) {\n  // Migrate CR offset\n  const crOffset = ent.system.crOffset;\n  if (typeof crOffset === \"number\") {\n    updateData[\"system.crOffset\"] = crOffset.toString();\n  }\n};\n\nconst _migrateItemChanges = function (itemData, updateData) {\n  // Migrate changes\n  const changes = itemData.system.changes;\n  if (Array.isArray(changes)) {\n    const newChanges = [];\n    for (const c of changes) {\n      let cd;\n      if (Array.isArray(c)) {\n        cd = {\n          formula: c[0],\n          target: c[1],\n          subTarget: c[2],\n          type: c[3],\n        };\n      } else {\n        cd = foundry.utils.deepClone(c); // Avoid mutating source data so diff works properly\n      }\n      ItemChange.migrateData(cd);\n      // Value should not exist, yet it was added previously by using derived data for updates.\n      delete cd.value;\n      newChanges.push(new ItemChange(cd).toObject());\n    }\n\n    // Alter the changes list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(changes, newChanges)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newChanges, changes))\n    ) {\n      updateData[\"system.changes\"] = newChanges;\n    }\n  }\n\n  const oldChanges = updateData[\"system.changes\"] ?? itemData.system?.changes ?? [];\n  const newChanges = [];\n  let updateChanges = false;\n  for (const change of oldChanges) {\n    const cd = foundry.utils.deepClone(change);\n    ItemChange.migrateData(cd);\n    if (foundry.utils.diffObject(change, cd)) {\n      updateChanges = true;\n    }\n\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/\\.subSkills\\./.test(cd.target)) {\n      cd.target = cd.target.replace(\".subSkills.\", \".\");\n      updateChanges = true;\n    }\n    // Remove use of penalty bonus type\n    // @since PF1 v10\n    if (cd.type === \"penalty\") {\n      // Convert the special ability score case to specific target\n      if ([\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\"].includes(cd.target)) {\n        cd.target = `${cd.target}Pen`;\n      }\n      // Convert all to untyped changes\n      cd.type = \"untyped\";\n      updateChanges = true;\n    }\n    newChanges.push(cd);\n  }\n  if (updateChanges) {\n    updateData[\"system.changes\"] = newChanges;\n  }\n};\n\nconst _migrateItemContextNotes = (itemData, updateData) => {\n  // Migrate context notes\n  const oldNotes = itemData.system.contextNotes;\n  if (Array.isArray(oldNotes) && oldNotes?.length > 0) {\n    const newNotes = [];\n\n    for (const oldNote of oldNotes) {\n      let newNote = foundry.utils.deepClone(oldNote);\n\n      // Transform old tuple.\n      if (Array.isArray(oldNote)) {\n        newNote = { text: oldNote[0], target: oldNote[1], subTarget: oldNote[2] };\n      }\n\n      newNote = new pf1.components.ContextNote(newNote).toObject();\n\n      newNotes.push(newNote);\n    }\n\n    // Alter the context note list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(oldNotes, newNotes)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newNotes, oldNotes))\n    ) {\n      updateData[\"system.contextNotes\"] = newNotes;\n    }\n  }\n\n  const notes = updateData[\"system.contextNotes\"] ?? oldNotes ?? [];\n  let updateNotes = false;\n  const newNotes = [];\n  for (const note of notes) {\n    const newNote = { ...note };\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/^skill\\..+\\.subSkills\\..+$/.test(note.target)) {\n      newNote.target = note.target.replace(\".subSkills.\", \".\");\n      updateNotes = true;\n    }\n    newNotes.push(newNote);\n  }\n  if (updateNotes) {\n    updateData[\"system.contextNotes\"] = newNotes;\n  }\n};\n\nconst _migrateItemChangeFlags = (item, updateData) => {\n  const flags = item.system?.changeFlags;\n  if (!flags) return;\n\n  // Dwarf-like encumbrance to distinct no medium/heavy encumbrance\n  if (flags.noEncumbrance !== undefined) {\n    if (flags.noEncumbrance === true) {\n      updateData[\"system.changeFlags.noMediumEncumbrance\"] = true;\n      updateData[\"system.changeFlags.noHeavyEncumbrance\"] = true;\n    }\n    updateData[\"system.changeFlags.-=noEncumbrance\"] = null;\n  }\n};\n\nconst _migrateEquipmentSize = function (ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const size = ent.system.size;\n  if (!size) {\n    updateData[\"system.size\"] = \"med\";\n  }\n};\n\n// Migrate .weight number to .weight.value\n// Migrate .baseWeight that was briefly introduced in 0.81\nconst _migrateItemWeight = function (ent, updateData) {\n  const baseWeight = ent.system.baseWeight,\n    weight = ent.system.weight;\n\n  // Skip items of inappropriate type\n  const isPhysical = CONFIG.Item.documentClasses[ent.type]?.isPhysical;\n  if (!isPhysical) {\n    if (weight !== undefined) {\n      // Ensure inappropriate items don't have spurious weight, which breaks data prep\n      updateData[\"system.-=weight\"] = null;\n    }\n    return;\n  }\n\n  if (Number.isFinite(weight)) {\n    updateData[\"system.weight.value\"] = weight;\n  } else if (weight == null || typeof weight !== \"object\") {\n    // Convert any other values to just 0 weight, e.g. null\n    updateData[\"system.weight.value\"] = 0;\n  }\n\n  // If baseWeight exists and looks reasonable, use it for base weight instead\n  if (baseWeight !== undefined) {\n    if (Number.isFinite(baseWeight) && baseWeight > 0) {\n      updateData[\"system.weight.value\"] = baseWeight;\n    }\n    updateData[\"system.-=baseWeight\"] = null;\n  }\n};\n\nconst _migrateItemHealth = function (item, updateData) {\n  const isPhysical = CONFIG.Item.documentClasses[item.type]?.isPhysical;\n\n  const hp = item.system.hp;\n  if (isPhysical) {\n    if (hp) {\n      // Fix invalid data type\n      if (typeof hp.max === \"string\") updateData[\"system.hp.max\"] = parseInt(hp.max);\n      if (typeof hp.value === \"string\") updateData[\"system.hp.value\"] = parseInt(hp.value);\n    } else {\n      // Restore missing HP data\n      updateData[\"system.hp.value\"] = 10;\n      updateData[\"system.hp.max\"] = 10;\n    }\n  } else if (item.type !== \"class\" && hp !== undefined) {\n    updateData[\"system.-=hp\"] = null;\n  }\n};\n\nconst _migrateSpellCosts = function (ent, updateData) {\n  if (ent.type !== \"spell\") return;\n\n  const spellPointCost = foundry.utils.getProperty(ent.system, \"spellPoints.cost\");\n  if (spellPointCost == null) {\n    updateData[\"system.spellPoints.cost\"] = \"1 + @sl\";\n  }\n\n  const slotCost = ent.system.slotCost;\n  if (slotCost == null) {\n    updateData[\"system.slotCost\"] = 1;\n  }\n\n  const autoDeduct = ent.system.preparation?.autoDeductCharges;\n  if (autoDeduct !== undefined) {\n    if (autoDeduct === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.preparation.-=autoDeductCharges\"] = null;\n  }\n};\n\n/**\n * Migrate spell preparation\n *\n * Added with PF1 v10\n *\n * @param {object} itemData\n * @param {object} updateData\n * @param {object} context\n * @param {Item} [context.item=null]\n */\nfunction _migrateSpellPreparation(itemData, updateData, { item = null } = {}) {\n  if (itemData.type !== \"spell\") return;\n\n  const spellbook = item?.spellbook;\n  const prepMode = spellbook?.spellPreparationMode || \"prepared\";\n  const usesSpellPoints = spellbook?.spellPoints?.useSystem ?? false;\n  const isPrepared = usesSpellPoints ? false : prepMode === \"prepared\";\n\n  const prep = itemData.system.preparation ?? {};\n  if (prep.maxAmount !== undefined) {\n    if (!(prep.max > 0)) {\n      // Migrate even older non number max amount\n      if (typeof prep.maxAmount !== \"number\") prep.maxAmount = 0;\n      updateData[\"system.preparation.max\"] = prep.maxAmount ?? 0;\n    }\n    updateData[\"system.preparation.-=maxAmount\"] = null;\n  }\n  if (prep.spontaneousPrepared !== undefined) {\n    if (!(prep.value > 0) && !isPrepared) {\n      updateData[\"system.preparation.value\"] = prep.spontaneousPrepared ? 1 : 0;\n    }\n    updateData[\"system.preparation.-=spontaneousPrepared\"] = null;\n  }\n  if (prep.preparedAmount !== undefined) {\n    if (!(prep.value > 0) && isPrepared) {\n      updateData[\"system.preparation.value\"] = Math.max(\n        prep.preparedAmount,\n        updateData[\"system.preparation.value\"] || 0\n      );\n    }\n    updateData[\"system.preparation.-=preparedAmount\"] = null;\n  }\n}\n\nconst _migrateLootEquip = function (ent, updateData) {\n  if (ent.type === \"loot\" && typeof ent.system.equipped !== \"boolean\") {\n    updateData[\"system.equipped\"] = false;\n  }\n};\n\nconst _migrateUnchainedActionEconomy = (action, item) => {\n  action.activation ??= {};\n  // Migrate .unchainedAction.activation to .activation.unchained\n  if (action.unchainedAction?.activation) {\n    action.activation.unchained = action.unchainedAction.activation;\n    delete action.unchainedAction;\n  }\n};\n\nconst _migrateItemLinks = function (itemData, updateData, { item, actor }) {\n  const linkData = itemData.system.links ?? {};\n  for (const [linkType, oldLinks] of Object.entries(linkData)) {\n    let updated = false;\n    const links = foundry.utils.deepClone(oldLinks);\n    for (const link of links) {\n      const type = link.dataType;\n      if (type !== undefined) {\n        if (type === \"data\") {\n          delete link.dataType;\n        } else if (type === \"world\") {\n          // Reconstruct world item UUID\n          link.uuid = link.id.replace(/^world\\./, \"Item.\");\n          delete link.id;\n          delete link.dataType;\n        } else if (type === \"compendium\") {\n          // Reconstruct compendium UUID\n          link.uuid = `Compendium.${link.id}`;\n          delete link.id;\n          delete link.dataType;\n        }\n        delete link.img;\n        updated = true;\n      }\n\n      // Convert ID to relative UUID\n      if (link.id !== undefined && actor) {\n        link.uuid = actor?.items?.get(link.id)?.getRelativeUUID(actor);\n        delete link.id;\n        updated = true;\n      }\n\n      if (actor && link.uuid) {\n        let linked = fromUuidSync(link.uuid, { relative: actor });\n        // Attempt to recover bad links to other actors\n        if (linked?.actor) {\n          // Attempt to adjust owned item\n          if (linked.actor !== actor) linked = actor.items.get(linked.id);\n          const newLink = linked?.getRelativeUUID(actor);\n          // Successful recovery?\n          if (linked && newLink !== link.uuid) {\n            link.uuid = newLink;\n            updated = true;\n          }\n        }\n      }\n\n      // Handle moved compendium content\n      if (link.uuid) {\n        const muuid = moved[link.uuid];\n        if (muuid) {\n          link.uuid = muuid;\n          updated = true;\n        }\n      }\n\n      // Remove unused data\n      if (link._index !== undefined) {\n        delete link._index;\n        updated = true;\n      }\n\n      if (link.hiddenLinks !== undefined) {\n        delete link.hiddenLinks;\n        updated = true;\n      }\n    }\n\n    if (updated) {\n      updateData[`system.links.${linkType}`] = links;\n    }\n  }\n};\n\nconst _migrateItemProficiencies = function (item, updateData) {\n  // Added with PF1 v10\n  // Migrate sim/mar to simple/martial\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  const oldKeys = Object.keys(wprofmap);\n  if (item.system.weaponProf?.value?.some((p) => oldKeys.includes(p))) {\n    const nwprof = item.system.weaponProf.value.map((p) => wprofmap[p] || p);\n    updateData[\"system.weaponProf.value\"] = nwprof;\n  }\n};\n\nconst _migrateItemNotes = function (ent, updateData) {\n  const list = [\"system.attackNotes\", \"system.effectNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && !(value instanceof Array)) {\n      updateData[k] = [];\n      if (typeof value === \"string\" && value.length > 0) {\n        updateData[k] = value.trim().split(/[\\n\\r]/);\n      }\n    }\n  }\n};\n\nconst _migrateItemActions = function (item, updateData, actor = null) {\n  const hasOldAction =\n    !!item.system.actionType || !!item.system.activation?.type || !!item.system.measureTemplate?.type;\n  const alreadyHasActions = item.system.actions instanceof Array && item.system.actions.length > 0;\n  if ((!hasOldAction && item.type !== \"spell\") || alreadyHasActions) return;\n\n  // Transfer data to an action\n  const actionData = pf1.components.ItemAction.defaultData;\n  const removeKeys = [\"_id\", \"name\", \"img\"];\n  for (const k of Object.keys(actionData)) {\n    if (!removeKeys.includes(k)) {\n      if (item.system[k] != null) actionData[k] = foundry.utils.deepClone(item.system[k]);\n    }\n  }\n\n  // Transfer name and image\n  if ([\"weapon\", \"attack\"].includes(item.type)) {\n    actionData.name = game.i18n.localize(\"PF1.Attack\");\n  } else {\n    actionData.name = game.i18n.localize(\"PF1.Use\");\n  }\n  actionData.img = item.img;\n  // Clear description\n  actionData.description = \"\";\n  // Add spell data\n  if (item.type === \"spell\") {\n    // Make sure it has an activation type\n    actionData.activation.type ||= \"standard\";\n\n    // Transfer spell duration\n    actionData.duration.value = item.system.spellDuration;\n\n    // Transfer spell point cost\n    if (actor != null) {\n      const spellbookKey = item.system.spellbook;\n      const spellbook = actor.system.attributes?.spells?.spellbooks?.[spellbookKey];\n      if (spellbook.spellPoints?.useSystem) {\n        const oldSpellPointCostFormula = item.system.spellPoints?.cost;\n        if (oldSpellPointCostFormula) actionData.uses.autoDeductChargesCost = oldSpellPointCostFormula;\n      }\n    }\n  }\n\n  // Fix power attack multiplier being non-number\n  const paMult = actionData.powerAttack?.multiplier;\n  if (typeof paMult === \"string\") {\n    if (paMult === \"\") delete actionData.powerAttack.multiplier;\n    else actionData.powerAttack.multiplier = parseInt(paMult);\n  }\n\n  // Clean out old attack and effect notes\n  updateData[\"system.attackNotes\"] = [];\n  updateData[\"system.effectNotes\"] = [];\n\n  updateData[\"system.actions\"] = [actionData];\n};\n\nconst _migrateScriptCalls = (item, updateData) => {\n  if (!(item.system.scriptCalls?.length > 0)) return;\n  let updated = false;\n\n  // Clear out unused name and image for linked macros.\n  const scripts = foundry.utils.deepClone(item.system.scriptCalls);\n  for (const script of scripts) {\n    if (script.type == \"macro\") {\n      if (script.name || script.img) {\n        script.name = \"\";\n        script.img = \"\";\n        updated = true;\n      }\n    }\n  }\n\n  if (updated) {\n    updateData[\"system.scriptCalls\"] = scripts;\n  }\n};\n\n/**\n * Convert tuple learnedAt values into key:value pairs directly in the object.\n *\n * @param item\n * @param updateData\n */\nconst _migrateItemLearnedAt = (item, updateData) => {\n  const learnedAt = item.system.learnedAt ?? {};\n  for (const [category, value] of Object.entries(learnedAt)) {\n    if (Array.isArray(value)) {\n      updateData[`system.learnedAt.${category}`] = value.reduce((learned, [classId, level]) => {\n        // Skip invalid entries\n        if (typeof classId !== \"string\" || classId.length == 0) return learned;\n        // Split combined entries and transform them to object format\n        for (let clsId of classId.split(\"/\")) {\n          clsId = clsId.trim().replace(\".\", \"-\"); // Sanitize\n          if (clsId) learned[clsId] = level;\n        }\n        return learned;\n      }, {});\n    }\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionChargeUsage = function (action, itemData) {\n  if (action.uses?.autoDeductCharges !== undefined) {\n    if (action.uses.autoDeductCharges === false) {\n      action.uses.autoDeductChargesCost = \"0\";\n    } else if (action.uses.autoDeductChargesCost === \"1\") action.uses.autoDeductChargesCost = \"\";\n    delete action.uses.autoDeductCharges;\n  }\n};\n\n/**\n * Migrate action..\n * - ... usesAmmo boolean away\n * - ... ammoType to item.system.ammo.type\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n * @param {object} updateData - Item update data\n */\nconst _migrateActionAmmunitionUsage = function (action, itemData, updateData) {\n  if (action.usesAmmo === false) {\n    delete action.ammoType;\n  }\n  if (action.usesAmmo === true) {\n    if (!itemData.system.ammo?.type && !updateData[\"system.ammo.type\"]) {\n      updateData[\"system.ammo.type\"] = action.ammoType;\n      action.ammoType = \"\"; // Inherit from item\n    }\n\n    // Same as base item\n    if (itemData.system.ammo?.type == action.ammoType) delete action.ammoType;\n  }\n\n  // Migrate .ammoType to .ammo.type\n  if (action.ammoType) {\n    action.ammo ??= {};\n    action.ammo.type = action.ammoType;\n  }\n  delete action.ammoType;\n\n  // Delete empty ammo type (inherited)\n  if (action.ammo && !action.ammo.type) {\n    delete action.ammo.type;\n  }\n\n  // Uses ammo is no longer used\n  delete action.usesAmmo;\n};\n\n// Migrate harmless from save descriptor to the harmless toggle.\n// Added with PF1 v10\nconst _migrateActionHarmlessSpell = (action, itemData) => {\n  if (!action.save.description) return;\n\n  if (/\\bharmless\\b/.test(action.save.description)) {\n    action.save.description = action.save.description\n      .replace(/\\s*\\bharmless\\b\\s*/, \"\")\n      .replace(/\\(,\\s*/, \"(\")\n      .replace(/\\s*,\\)/, \")\")\n      .replace(\"()\", \"\")\n      .trim();\n    action.save.harmless = true;\n  }\n};\n\n// Migrate .spellArea to .area\n// Added with PF1 v10\nconst _migrateActionSpellArea = (action, itemData) => {\n  action.area ||= action.spellArea;\n  delete action.spellArea;\n};\n\n/**\n * @since PF1 v10\n * @param action\n * @param itemData\n */\nconst _migrateActionTemplate = (action, itemData) => {\n  //\n  const mt = action.measureTemplate;\n  if (!mt) return;\n\n  mt.color ||= mt.customColor;\n  delete mt.overrideColor;\n  delete mt.customColor;\n\n  mt.texture ||= mt.customTexture;\n  delete mt.overrideTexture;\n  delete mt.customTexture;\n};\n\n// Action duration\n// Added with PF1 v10\nconst _migrateActionDuration = (action, itemData) => {\n  action.duration ??= {};\n\n  // Something has caused \"null\" string durations for some people, this clears it.\n  if (action.duration.value === \"null\") action.duration.value = \"\";\n\n  // Swap units to \"special\" if undefined and formula exists\n  if (!action.duration.units && !!action.duration.value) {\n    action.duration.units = \"spec\";\n  }\n\n  // Swap \"instantaneous\" formula to instantaneous unit\n  if (action.duration.value === \"instantaneous\") {\n    delete action.duration.value;\n    action.duration.units = \"inst\";\n  }\n\n  // Convert easy special values to actual duration info\n  if (action.duration.units === \"spec\") {\n    const value = action.duration.value || \"\";\n\n    switch (value) {\n      case \"1 round\":\n      case \"1 full round\":\n        action.duration.value = \"1\";\n        action.duration.units = \"round\";\n        break;\n      case \"1 min.\":\n      case \"1 minute\":\n        action.duration.value = \"1\";\n        action.duration.units = \"minute\";\n        break;\n      case \"1 hour\":\n        action.duration.value = \"1\";\n        action.duration.units = \"hour\";\n        break;\n      case \"8 hours\":\n        action.duration.value = \"8\";\n        action.duration.units = \"hour\";\n        break;\n      case \"24 hours\":\n        action.duration.value = \"24\";\n        action.duration.units = \"hour\";\n        break;\n      case \"1 day\":\n        action.duration.value = \"1\";\n        action.duration.units = \"day\";\n        break;\n      case \"permanent\":\n        delete action.duration.value;\n        action.duration.units = \"perm\";\n        break;\n      case \"see below\":\n      case \"see text\":\n        delete action.duration.value;\n        action.duration.units = \"seeText\";\n        break;\n    }\n  }\n};\n\nconst _migrateActionMaterials = (action, itemData) => {\n  let addons = action.material?.addon;\n  if (addons) {\n    // Since PF1 v10.5\n    if (addons.some((ma) => !!materialChanges[ma])) {\n      action.material.addon = action.material.addon.map((ma) => materialChanges[ma] || ma);\n      addons = action.material.addon; // Ensure following code gets updated addons\n    }\n\n    // Convert Throneglass into non-addon material\n    // Since PF1 v10.3\n    const tg = \"throneglass\";\n    if (addons.includes(tg)) {\n      action.material.addon = action.material.addon.filter((ma) => ma !== tg);\n      action.material.normal.value ||= tg;\n    }\n  }\n\n  // Since PF1 v10.5\n  const newMat = materialChanges[action.material?.normal?.value];\n  if (newMat) action.material.normal.value = newMat;\n};\n\n/**\n * Added with PF1 v10\n *\n * @param {object} action\n * @param {object} itemData\n */\nconst _migrateActionExtraAttacks = (action, itemData) => {\n  // Convert tuples into objects\n  if (action.attackParts?.length) {\n    const parts = action.attackParts ?? [];\n    if (parts.some((p) => Array.isArray(p))) {\n      action.attackParts = parts.map((part) => (Array.isArray(part) ? { formula: part[0], name: part[1] } : part));\n    }\n\n    // Ensure formulas are strings\n    for (const part of action.attackParts) part.formula = `${part.formula}`;\n  }\n\n  // Unify extra attacks structure\n  action.extraAttacks ??= {};\n\n  if (action.attackParts !== undefined) {\n    action.extraAttacks.manual = action.attackParts ?? [];\n    delete action.attackParts;\n  }\n\n  if (action.formulaicAttacks !== undefined) {\n    action.extraAttacks.formula ??= {};\n    action.extraAttacks.formula.count = action.formulaicAttacks?.count?.formula || \"\";\n    action.extraAttacks.formula.bonus = action.formulaicAttacks?.bonus?.formula || \"\";\n    action.extraAttacks.formula.label = action.formulaicAttacks?.label || \"\";\n    delete action.formulaicAttacks;\n  }\n\n  if (!action.extraAttacks.type) {\n    // Convert existing formulas to standard options\n    if (\n      action.extraAttacks.formula?.count === \"min(3, ceil(@attributes.bab.total / 5) - 1)\" &&\n      action.extraAttacks.formula?.bonus === \"@formulaicAttack * -5\"\n    ) {\n      action.extraAttacks.type = \"standard\";\n      delete action.extraAttacks.formula.count;\n      delete action.extraAttacks.formula.bonus;\n      delete action.extraAttacks.formula.label;\n\n      if (action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"advanced\";\n      } else {\n        delete action.extraAttacks.manual;\n      }\n    } else {\n      if (action.extraAttacks.formula?.count?.length || action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"custom\";\n      }\n    }\n\n    // Delete unused data\n    if (!action.extraAttacks.formula?.count) delete action.extraAttacks.formula.count;\n    if (!action.extraAttacks.formula?.bonus) delete action.extraAttacks.formula.bonus;\n    if (!action.extraAttacks.formula?.label) delete action.extraAttacks.formula.label;\n    if (!(action.extraAttacks.manual?.length > 0)) delete action.extraAttacks.manual;\n  }\n\n  if (foundry.utils.isEmpty(action.extraAttacks.formula)) {\n    delete action.extraAttacks.formula;\n  }\n};\n\n/**\n * Migrate value types that should never have been those types.\n *\n * This may be only correcting macro/module errors and not things caused by the system.\n * Previously these were type checked in code with special handling.\n *\n * @param action\n * @param itemData\n */\nconst _migrateActionObsoleteTypes = (action, itemData) => {\n  const templateSize = action.measureTemplate?.size;\n  if (templateSize !== undefined) {\n    if (typeof templateSize !== \"string\") {\n      action.measureTemplate.size = `${templateSize}`;\n    }\n  }\n  const durVal = action.duration?.value;\n  if (durVal !== undefined && durVal !== null) {\n    if (typeof durVal !== \"string\") {\n      action.duration.value = `${durVal}`;\n    }\n  }\n};\n\n/**\n * Remove dead data\n *\n * @param action\n * @param itemData\n */\nconst _migrateActionUnusedData = (action, itemData) => {\n  // Added with PF1 v10\n  if (!action.formula) delete action.formula;\n};\n\nconst _migrateItemChargeCost = function (item, updateData) {\n  const toggle = item.system.uses?.autoDeductCharges;\n  if (toggle !== undefined) {\n    // Mimic old setting by setting cost to 0\n    if (toggle === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.uses.-=autoDeductCharges\"] = null;\n  }\n  // Special handling for cantrips if the above didn't match\n  else if (item.system.level === 0 && item.system.uses?.autoDeductChargesCost === undefined) {\n    const defaultAction = item.system.actions?.[0];\n    // Check for presence of obsoleted autoDeductCharges in first action\n    if (\n      defaultAction?.uses?.autoDeductCharges === true &&\n      updateData[\"system.uses.autoDeductChargesCost\"] === undefined\n    ) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n  }\n};\n\n// Added with PF1 v10\nconst _migrateItemLimitedUses = (itemData, updateData) => {\n  // Migrate unlimited to empty selection, as the two are identical in meaning\n  if (itemData.system.uses?.per === \"unlimited\") {\n    updateData[\"system.uses.per\"] = \"\";\n  }\n\n  // Only physical items have single use, convert use cases to 1 charge\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (itemData.system.uses?.per === \"single\") {\n      updateData[\"system.uses.per\"] = \"charges\";\n      updateData[\"system.uses.maxFormula\"] = \"1\";\n    }\n  }\n};\n\n/**\n * Migrate damage part tuples into objects\n *\n * Introduced with PF1 v9\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionDamageParts = function (action, itemData) {\n  const categories = action.damage;\n  for (const part of [\"parts\", \"critParts\", \"nonCritParts\"]) {\n    const category = categories[part];\n    if (!category) continue;\n\n    category.forEach((damage, index) => {\n      if (Array.isArray(damage)) {\n        const [formula, type] = damage;\n        category[index] = { formula, type };\n      }\n    });\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionDamageType = function (action, itemData) {\n  // Determine data paths using damage types\n  const damageGroupPaths = [\"damage.parts\", \"damage.critParts\", \"damage.nonCritParts\"];\n  for (const damageGroupPath of damageGroupPaths) {\n    const damageGroup = foundry.utils.getProperty(action, damageGroupPath);\n    for (const damagePart of damageGroup) {\n      // Convert damage types\n      const damageType = damagePart.type;\n      if (typeof damageType === \"string\") {\n        const damageTypeData = pf1.components.ItemAction.defaultDamageType;\n        damageTypeData.values = _Action_ConvertDamageType(damageType);\n        if (damageTypeData.values.length === 0) damageTypeData.custom = damageType;\n        damagePart.type = damageTypeData;\n      }\n      // Convert array to object\n      else if (damageType instanceof Array) {\n        const damageTypeData = pf1.components.ItemAction.defaultDamageType;\n        damageTypeData.values = damageType;\n        damagePart.type = damageTypeData;\n      }\n    }\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionConditionals = function (action, itemData) {\n  for (const conditional of action.conditionals ?? []) {\n    // Create conditional ID\n    if (!conditional._id) conditional._id = foundry.utils.randomID(16);\n\n    if (!Array.isArray(conditional.modifiers)) {\n      conditional.modifiers = Object.values(conditional.modifiers);\n    }\n\n    for (const modifier of conditional.modifiers) {\n      // Create modifier ID\n      if (!modifier._id) modifier._id = foundry.utils.randomID(16);\n\n      // Ensure subTarget exists\n      modifier.subTarget ??= \"\";\n\n      let reResult;\n      // Convert modifier subtarget\n      if ((reResult = modifier.subTarget.match(/^attack\\.([0-9]+)/))) {\n        modifier.subTarget = `attack_${reResult[1]}`;\n      }\n\n      // Remove excess sheet data that was previously incorretly added\n      delete modifier.targets;\n      delete modifier.subTargets;\n      delete modifier.conditionalModifierTypes;\n      delete modifier.conditionalCritical;\n\n      // Convert modifier damage type\n      if (modifier.target === \"damage\" && !modifier.damageType) {\n        const damageTypeData = pf1.components.ItemAction.defaultDamageType;\n        damageTypeData.values = _Action_ConvertDamageType(modifier.type);\n        if (damageTypeData.values.length === 0) damageTypeData.custom = modifier.type;\n        modifier.damageType = damageTypeData;\n        modifier.type = \"\";\n      }\n    }\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionEnhOverride = function (action, itemData) {\n  if (typeof action.enh !== \"object\") {\n    action.enh = { value: action.enh ?? null };\n  }\n\n  // Set to null if disabled.\n  if (action.enh.override == false) {\n    action.enh.value = null;\n  }\n  // Reset odd values to null, too.\n  else if (action.enh.value !== null && typeof action.enh.value !== \"number\") {\n    action.enh.value = null;\n  }\n  // Delete now unused .override toggle\n  delete action.enh.override;\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionPrimaryAttack = function (action, itemData) {\n  if (action.naturalAttack?.primaryAttack === undefined) {\n    foundry.utils.setProperty(action, \"naturalAttack.primaryAttack\", itemData.system.primaryAttack ?? true);\n  }\n};\n\nconst _migrateActorCR = function (ent, updateData) {\n  // Migrate base CR\n  const cr = foundry.utils.getProperty(ent.system, \"details.cr\");\n  if (typeof cr === \"number\") {\n    updateData[\"system.details.cr.base\"] = cr;\n  } else if (cr == null) {\n    updateData[\"system.details.cr.base\"] = 1;\n  }\n\n  // Remove derived data if present\n  if (foundry.utils.getProperty(ent.system, \"details.cr.total\") !== undefined) {\n    updateData[\"system.details.cr.-=total\"] = null;\n  }\n};\n\nconst _migrateAttackAbility = function (ent, updateData) {\n  const cmbAbl = foundry.utils.getProperty(ent.system, \"attributes.cmbAbility\");\n  if (cmbAbl === undefined) updateData[\"system.attributes.cmbAbility\"] = \"str\";\n\n  const meleeAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.meleeAbility\");\n  if (meleeAbl === undefined) updateData[\"system.attributes.attack.meleeAbility\"] = \"str\";\n\n  const rangedAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.rangedAbility\");\n  if (rangedAbl === undefined) updateData[\"system.attributes.attack.rangedAbility\"] = \"dex\";\n};\n\nconst _migrateActorSpellbookUsage = function (ent, updateData) {\n  const spellbookUsage = foundry.utils.getProperty(ent.system, \"attributes.spells.usedSpellbooks\");\n  if (spellbookUsage !== undefined) {\n    updateData[\"system.attributes.spells.-=usedSpellbooks\"] = null;\n  }\n};\n\nconst _migrateActorNullValues = function (ent, updateData) {\n  // Prepare test data\n  const entries = { \"system.attributes.energyDrain\": foundry.utils.getProperty(ent.system, \"attributes.energyDrain\") };\n  for (const [k, a] of Object.entries(ent.system.abilities || {})) {\n    entries[`system.abilities.${k}.damage`] = a.damage;\n    entries[`system.abilities.${k}.drain`] = a.drain;\n    entries[`system.abilities.${k}.penalty`] = a.penalty;\n  }\n\n  // Set null values to 0\n  for (const [k, v] of Object.entries(entries)) {\n    if (v === null) {\n      updateData[k] = 0;\n    }\n  }\n};\n\nconst _migrateActorSpellbookDomainSlots = function (ent, updateData) {\n  const spellbooks = foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {};\n\n  for (const [k, b] of Object.entries(spellbooks)) {\n    if (b.domainSlotValue !== undefined) continue;\n    const key = `system.attributes.spells.spellbooks.${k}.domainSlotValue`;\n    updateData[key] = 1;\n  }\n};\n\nconst _migrateActorStatures = function (ent, updateData) {\n  const stature = foundry.utils.getProperty(ent.system, \"traits.stature\");\n\n  if (stature === undefined) {\n    updateData[\"system.traits.stature\"] = \"tall\";\n  }\n};\n\n// Migrate weapon proficiencies\n// Converts sim and mar to simple and martial\n// Added with PF1 v10\nconst _migrateActorProficiencies = (actorData, updateData, { actor = null } = {}) => {\n  const wprofs = actorData.system.traits?.weaponProf?.value;\n  if (wprofs === undefined) return;\n\n  if (!Array.isArray(wprofs) || wprofs.length == 0) return; // TODO: Migrate if in wrong format\n\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  const oldKeys = Object.keys(wprofmap);\n  if (wprofs.some((p) => oldKeys.includes(p))) {\n    const nwprofs = wprofs.map((v) => wprofmap[v] || v);\n    updateData[\"system.traits.weaponProf.value\"] = nwprofs;\n  }\n};\n\nconst _migrateActorDefenseAbility = function (ent, updateData) {\n  const normalACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.normal.ability\");\n  if (normalACAbl === undefined) updateData[\"system.attributes.ac.normal.ability\"] = \"dex\";\n  const touchACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.touch.ability\");\n  if (touchACAbl === undefined) updateData[\"system.attributes.ac.touch.ability\"] = \"dex\";\n\n  // CMD\n  const cmdDexAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.dexAbility\");\n  if (cmdDexAbl === undefined) updateData[\"system.attributes.cmd.dexAbility\"] = \"dex\";\n  const cmdStrAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.strAbility\");\n  if (cmdStrAbl === undefined) updateData[\"system.attributes.cmd.strAbility\"] = \"str\";\n};\n\nconst _migrateActorInitAbility = function (ent, updateData) {\n  const abl = foundry.utils.getProperty(ent.system, \"attributes.init.ability\");\n\n  if (abl === undefined) {\n    updateData[\"system.attributes.init.ability\"] = \"dex\";\n  }\n};\n\nconst _migrateActorCMBRevamp = function (ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"attributes.cmb.total\") !== undefined) {\n    updateData[\"system.attributes.cmb.-=total\"] = null;\n  }\n};\n\nconst _migrateActorChangeRevamp = function (ent, updateData) {\n  // Skills\n  Object.keys(ent.system.skills ?? {}).forEach((s) => {\n    const path = `system.skills.${s}.`;\n    if (foundry.utils.getProperty(ent, path + \"changeBonus\") !== undefined) {\n      updateData[path + \"-=changeBonus\"] = null;\n    }\n\n    // Check for subskill\n    Object.keys(foundry.utils.getProperty(ent, `system.skills.${s}.subSkills`) ?? {}).forEach((s2) => {\n      const subPath = `system.skills.${s}.subSkills.${s2}.`;\n      if (foundry.utils.getProperty(ent, subPath + \"changeBonus\") !== undefined) {\n        updateData[subPath + \"-=changeBonus\"] = null;\n      }\n    });\n  });\n\n  // Remove derived data\n  const derivedKeys = {\n    \"system.attributes.hp.max\": \"attributes.hp.-=max\",\n    \"system.attributes.ac.normal.total\": \"attributes.ac.normal.-=total\",\n    \"system.attributes.ac.touch.total\": \"attributes.ac.touch.-=total\",\n    \"system.attributes.ac.flatFooted.total\": \"attributes.ac.flatFooted.-=total\",\n    \"system.attributes.cmd.total\": \"attributes.cmd.-=total\",\n    \"system.attributes.cmd.flatFootedTotal\": \"attributes.cmd.-=flatFootedTotal\",\n    \"system.attributes.sr.total\": \"attributes.sr.-=total\",\n    \"system.attributes.init.total\": \"attributes.init.-=total\",\n  };\n\n  Object.entries(derivedKeys).forEach(([key, updateKey]) => {\n    if (foundry.utils.getProperty(ent, key) !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  });\n};\n\nconst _migrateActorInvaliddSkills = (actor, updateData) => {\n  const skills = actor.system.skills;\n  if (!skills) return;\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) {\n      updateData[`system.skills.-=${key}`] = null;\n      continue;\n    }\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) {\n        updateData[`system.skills.${key}.subSkills.-=${subKey}`] = null;\n      }\n    }\n  }\n};\n\n/**\n * Migrate abnormal skill rank values to 0.\n * Primarily changing nulls to 0 to match new actors.\n *\n * @param ent\n * @param updateData\n */\nconst _migrateActorSkillRanks = function (ent, updateData) {\n  const skills = ent.system.skills;\n  if (!skills) return; // Unlinked with no skill overrides of any kind\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) continue;\n    if (!Number.isFinite(sklData.rank)) updateData[`system.skills.${key}.rank`] = 0;\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (!Number.isFinite(subSklData.rank)) updateData[`system.skills.${key}.subSkills.${subKey}.rank`] = 0;\n    }\n  }\n};\n\nconst _migrateCarryBonus = function (ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.bonus.user\") === undefined) {\n    let bonus = foundry.utils.getProperty(ent.system, \"abilities.str.carryBonus\");\n    if (bonus !== undefined) {\n      bonus = bonus || 0;\n      updateData[\"system.details.carryCapacity.bonus.user\"] = bonus;\n    }\n    updateData[\"system.abilities.str.-=carryBonus\"] = null;\n  }\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.multiplier.user\") === undefined) {\n    let mult = foundry.utils.getProperty(ent.system, \"abilities.str.carryMultiplier\");\n    if (mult !== undefined) {\n      mult = mult || 1;\n      updateData[\"system.details.carryCapacity.multiplier.user\"] = mult - 1;\n    }\n    updateData[\"system.abilities.str.-=carryMultiplier\"] = null;\n  }\n};\n\nconst _migrateBuggedValues = function (ent, updateData) {\n  // Convert to integers\n  const convertToInt = [\n    \"system.details.xp.value\",\n    \"system.currency.pp\",\n    \"system.currency.gp\",\n    \"system.currency.sp\",\n    \"system.currency.cp\",\n    \"system.altCurrency.pp\",\n    \"system.altCurrency.gp\",\n    \"system.altCurrency.sp\",\n    \"system.altCurrency.cp\",\n  ];\n  for (const key of convertToInt) {\n    const oldValue = foundry.utils.getProperty(ent, key),\n      value = parseInt(oldValue ?? 0);\n    if (oldValue !== value) {\n      updateData[key] = value;\n    }\n  }\n};\n\nconst _migrateSpellbookUsage = function (ent, updateData) {\n  const usedSpellbooks = ent.items\n    .filter((i) => i.type === \"spell\")\n    .reduce((cur, i) => {\n      if (!i.system.spellbook) return cur;\n      if (cur.includes(i.system.spellbook)) return cur;\n      cur.push(i.system.spellbook);\n      return cur;\n    }, []);\n\n  for (const bookKey of usedSpellbooks) {\n    const path = `system.attributes.spells.spellbooks.${bookKey}.inUse`;\n    if (foundry.utils.getProperty(ent, path) !== true) {\n      updateData[path] = true;\n    }\n  }\n};\n\nconst _migrateActorHP = function (ent, updateData) {\n  // Migrate HP, Wounds and Vigor values from absolutes to relatives, which is a change in 0.80.16\n  for (const k of [\"system.attributes.hp\", \"system.attributes.wounds\", \"system.attributes.vigor\"]) {\n    const value = foundry.utils.getProperty(ent, `${k}.value`);\n\n    // Fill offset if missing\n    if (foundry.utils.getProperty(ent, `${k}.offset`) == null) {\n      const max = foundry.utils.getProperty(ent, `${k}.max`) ?? 0;\n      updateData[`${k}.offset`] = (value ?? 0) - max;\n    }\n    // Value is no longer used if it exists\n\n    if (value !== undefined) {\n      updateData[`${k}.-=value`] = null;\n    }\n  }\n};\n\nconst _migrateActorSenses = function (ent, updateData, token) {\n  const oldSenses = ent.system.traits?.senses;\n  if (typeof oldSenses === \"string\") {\n    const tokenData = token ?? ent.prototypeToken;\n\n    updateData[\"system.traits.senses\"] = {\n      dv: tokenData.brightSight,\n      ts: 0,\n      bs: 0,\n      bse: 0,\n      ll: {\n        enabled: tokenData.flags?.pf1?.lowLightVision,\n        multiplier: {\n          dim: tokenData.flags?.pf1?.lowLightVisionMultiplier ?? 2,\n          bright: tokenData.flags?.pf1?.lowLightVisionMultiplierBright ?? 2,\n        },\n      },\n      sid: false,\n      tr: 0,\n      si: false,\n      sc: 0,\n      custom: oldSenses,\n    };\n  }\n\n  // Migrate boolean Scent sense to number\n  if (typeof oldSenses?.sc === \"boolean\") {\n    updateData[\"system.traits.senses.sc\"] = oldSenses.sc ? 30 : 0;\n  }\n\n  // Migrate boolean true seeing to number\n  if (typeof oldSenses?.tr === \"boolean\") {\n    updateData[\"system.traits.senses.tr\"] = oldSenses.tr ? 120 : 0;\n  }\n};\n\nconst _migrateActorSkillJournals = function (ent, updateData) {\n  const reOldJournalFormat = /^[a-zA-Z0-9]+$/;\n  for (const [skillKey, sklData] of Object.entries(ent.system.skills ?? {})) {\n    if (!sklData) continue;\n    for (const [subSkillKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (subSklData.journal?.match(reOldJournalFormat)) {\n        updateData[`system.skills.${skillKey}.subSkills.${subSkillKey}.journal`] = `JournalEntry.${subSklData.journal}`;\n      }\n    }\n\n    if (sklData.journal?.match(reOldJournalFormat)) {\n      updateData[`system.skills.${skillKey}.journal`] = `JournalEntry.${sklData.journal}`;\n    }\n  }\n};\n\nconst _migrateActorSubskillData = (actor, updateData) => {\n  for (const [skillId, skillData] of Object.entries(actor.system.skills ?? {})) {\n    if (!skillData) continue;\n    for (const [subSkillId, subSkillData] of Object.entries(skillData.subSkills ?? {})) {\n      if (!subSkillData) continue;\n      if (subSkillData.mod !== undefined) {\n        // Remove permanently stored .mod which is derived value\n        // Added with PF1 v9\n        updateData[`system.skills.${skillId}.subSkills.${subSkillId}.-=mod`] = null;\n      }\n    }\n  }\n};\n\nconst _migrateActorDRandER = function (ent, updateData) {\n  const oldDR = ent.system.traits?.dr;\n  const oldER = ent.system.traits?.eres;\n\n  if (typeof oldDR === \"string\") {\n    updateData[\"system.traits.dr\"] = {\n      value: [],\n      custom: oldDR,\n    };\n  }\n\n  if (typeof oldER === \"string\") {\n    updateData[\"system.traits.eres\"] = {\n      value: [],\n      custom: oldER,\n    };\n  }\n};\n\nconst _migrateActorTraitsCustomToArray = (actor, updateData) => {\n  const keys = [\"di\", \"dv\", \"ci\", \"languages\", \"armorProf\", \"weaponProf\"];\n\n  keys.forEach((key) => {\n    const trait = actor.system.traits?.[key];\n    if (!trait || typeof trait.custom !== \"string\") return;\n\n    const custom =\n      trait.custom\n        ?.split(pf1.config.re.traitSeparator)\n        .map((x) => x.trim())\n        .filter((x) => x) ?? [];\n    if (custom.length) {\n      updateData[`system.traits.${key}.custom`] = custom;\n    } else {\n      updateData[`system.traits.${key}.-=custom`] = null;\n    }\n  });\n};\n\n/**\n * @param actorData\n * @param updateData\n * @since PF1 v10\n */\nconst _migrateActorFlags = (actorData, updateData) => {\n  const flags = actorData.flags?.pf1;\n  if (!flags) return;\n\n  // visionPermission to visionSharing\n  if (flags.visionPermission) {\n    updateData[\"flags.pf1.visionSharing.default\"] = flags.visionPermission.default === \"yes\" ? true : false;\n    const mapping = {\n      yes: true,\n      no: false,\n      default: null,\n    };\n    updateData[\"flags.pf1.visionSharing.users\"] = Object.fromEntries(\n      Object.entries(flags.visionPermission?.users ?? {}).map(([uid, data]) => [uid, mapping[data.level] ?? null])\n    );\n    updateData[\"flags.pf1.-=visionPermission\"] = null;\n  }\n};\n\nconst _Action_ConvertDamageType = function (damageTypeString) {\n  const separator = /(?:\\s*\\/\\s*|\\s+and\\s+|\\s+or\\s+)/i;\n  const damageTypeList = [\n    {\n      tests: [\"b\", \"blunt\", \"bludgeoning\"],\n      result: \"bludgeoning\",\n    },\n    {\n      tests: [\"p\", \"pierce\", \"piercing\"],\n      result: \"piercing\",\n    },\n    {\n      tests: [\"s\", \"slash\", \"slashing\"],\n      result: \"slashing\",\n    },\n    {\n      tests: [\"f\", \"fire\"],\n      result: \"fire\",\n    },\n    {\n      tests: [\"cold\", \"c\"],\n      result: \"cold\",\n    },\n    {\n      tests: [\"e\", \"electric\", \"electricity\", \"electrical\"],\n      result: \"electric\",\n    },\n    {\n      tests: [\"a\", \"acid\"],\n      result: \"acid\",\n    },\n    {\n      tests: [\"sonic\"],\n      result: \"sonic\",\n    },\n    {\n      tests: [\"force\"],\n      result: \"force\",\n    },\n    {\n      tests: [\"neg\", \"negative\"],\n      result: \"negative\",\n    },\n    {\n      tests: [\"pos\", \"positive\"],\n      result: \"positive\",\n    },\n    {\n      tests: [\"u\", \"untyped\", \"untype\"],\n      result: \"untyped\",\n    },\n  ];\n\n  const damageTypes = damageTypeString.split(separator).map((o) => o.toLowerCase());\n  const result = [];\n  for (const damageTest of damageTypeList) {\n    for (const testString of damageTest.tests) {\n      if (damageTypes.includes(testString)) {\n        result.push(damageTest.result);\n      }\n    }\n  }\n\n  if (result.length > 0) return result;\n  return [];\n};\n\nconst _migrateContainerPrice = (item, updateData) => {\n  if (item.type !== \"container\") return;\n\n  // .basePrice was merged into .price with PF1 v9\n  if (item.system.basePrice !== undefined) {\n    updateData[\"system.price\"] = item.system.basePrice;\n    updateData[\"system.-=basePrice\"] = null;\n  }\n  if (item.system.unidentified?.basePrice !== undefined) {\n    updateData[\"system.unidentified.price\"] = item.system.unidentified.basePrice;\n    updateData[\"system.unidentified.-=basePrice\"] = null;\n  }\n};\n\nconst _migrateContainerReduction = (item, updateData) => {\n  if (item.type !== \"container\") return;\n  if (item.system.weightReduction !== undefined) {\n    updateData[\"system.weight.reduction.percent\"] = item.system.weightReduction;\n    updateData[\"system.-=weightReduction\"] = null;\n  }\n};\n\nconst _migrateItemType = function (ent, updateData) {\n  const type = ent.type;\n  const oldType = ent.system[`${type}Type`];\n  if (oldType == null) return;\n  updateData[\"system.subType\"] = oldType;\n  updateData[`system.-=${type}Type`] = null;\n};\n\n/**\n * @param item\n * @param updateData\n */\nconst _migrateItemTraitsCustomToArray = (item, updateData) => {\n  const keys = [\"armorProf\", \"descriptors\", \"languages\", \"weaponGroups\", \"weaponProf\"];\n\n  keys.forEach((key) => {\n    const trait = item.system[key];\n    if (!trait || typeof trait.custom !== \"string\") return;\n\n    const custom = trait.custom\n      .split(pf1.config.re.traitSeparator)\n      .map((x) => x.trim())\n      .filter((x) => x);\n\n    if (custom.length) {\n      updateData[`system.${key}.custom`] = custom;\n    } else {\n      updateData[`system.${key}.-=custom`] = null;\n    }\n  });\n};\n\n/**\n * @param {object} itemData\n * @param {object} updateData\n * @since PF1 v10\n */\nconst _migrateItemFlags = (itemData, updateData) => {\n  if (!itemData.flags?.pf1) return;\n\n  if (itemData.flags.pf1.abundant !== undefined) {\n    updateData[\"system.abundant\"] = Boolean(itemData.flags.pf1.abundant);\n    updateData[\"flags.pf1.-=abundant\"] = null;\n  }\n};\n\nconst _migrateItemMaterials = (itemData, updateData) => {\n  for (const materialPath of [\"material\", \"armor.material\"]) {\n    const material = foundry.utils.getProperty(itemData.system, materialPath);\n    if (!material) continue;\n\n    // Convert incorrect material addon data\n    const tg = \"throneglass\";\n    // Weapon\n    if (material?.addon) {\n      let addon = material.addon;\n      if (!Array.isArray(addon)) {\n        updateData[`system.${material}.addon`] = Object.entries(addon)\n          .filter(([_, chosen]) => chosen)\n          .map(([key]) => key);\n        addon = updateData[`system.${materialPath}.addon`];\n      }\n      // Convert Throneglass into main material\n      // Since PF1 v10.3\n      if (addon.includes(tg)) {\n        updateData[`system.${materialPath}.addon`] = addon.filter((ma) => ma !== tg);\n        if (!itemData.system.material?.normal?.value) {\n          updateData[`system.${materialPath}.normal.value`] = tg;\n        }\n      }\n    }\n\n    // Convert material IDs\n    // Since PF1 v10.5\n    const addons = updateData[`system.${materialPath}.addon`] ?? material?.addon ?? [];\n    if (addons?.some((ma) => !!materialChanges[ma])) {\n      updateData[`system.${materialPath}.addon`] = addons.map((ma) => materialChanges[ma] ?? ma);\n    }\n\n    const newMat = materialChanges[material?.normal?.value];\n    if (newMat) updateData[`system.${materialPath}.normal.value`] = newMat;\n  }\n};\n\n/**\n * Removes data that the system has added to items that is now unused with no new location.\n *\n * @param item\n * @param updateData\n */\nconst _migrateItemUnusedData = (item, updateData) => {\n  // .priceUnits was never used, removal added with PF1 v9\n  if (item.system.priceUnits !== undefined) {\n    updateData[\"system.-=priceUnits\"] = null;\n  }\n\n  // .description.chat was never used\n  if (item.system.description?.chat !== undefined) {\n    updateData[\"system.description.-=chat\"] = null;\n  }\n\n  // .identifiedName was made obsolete with PF1 v9\n  if (item.system.identifiedName !== undefined) {\n    updateData[\"system.-=identifiedName\"] = null;\n  }\n\n  // Creating items in containers added typeName for no reason (in 0.82.5 and older)\n  if (item.system.typeName !== undefined) {\n    updateData[\"system.-=typeName\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.weaponData !== undefined) {\n    updateData[\"system.-=weaponData\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.range !== undefined) {\n    updateData[\"system.-=range\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.primaryAttack !== undefined) {\n    updateData[\"system.-=primaryAttack\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.activation !== undefined) {\n    updateData[\"system.-=activation\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.unchainedAction !== undefined) {\n    updateData[\"system.-=unchainedAction\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.measureTemplate !== undefined) {\n    updateData[\"system.-=measureTemplate\"] = null;\n  }\n\n  // useCustomTag not used since PF1 v10\n  if (item.system.useCustomTag !== undefined) {\n    updateData[\"system.-=useCustomTag\"] = null;\n    if (item.system.useCustomTag === false && item.system.tag !== undefined) {\n      updateData[\"system.-=tag\"] = null;\n    }\n  }\n\n  // ammoType seems to have never been actually used, but it was stored in items\n  if (item.system.ammoType !== undefined) {\n    updateData[\"system.-=ammoType\"] = null;\n    // Move it anyway just in case, if missing\n    if (!item.system.ammo?.type && item.system.ammoType) {\n      updateData[\"system.ammo.type\"] = item.system.ammoType;\n    }\n  }\n};\n\n/**\n * Migrate Active Effect data.\n * - Removes pf1_ status ID prefixes.\n *\n * Added with PF1 v10\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} [actor] - Actor document\n * @param actor\n */\nconst _migrateActorActiveEffects = async (actorData, updateData, actor) => {\n  // Migate Active Effects\n  const effects = [];\n  for (const ae of actorData.effects ?? []) {\n    const aeUpdate = await migrateActiveEffectData(ae, actor);\n    if (!foundry.utils.isEmpty(aeUpdate)) {\n      aeUpdate._id = ae._id;\n      effects.push(aeUpdate);\n    }\n  }\n\n  if (effects.length) updateData.effects = effects;\n};\n\nconst _migrateActorUnusedData = (actor, updateData) => {\n  // Obsolete vision\n  if (foundry.utils.getProperty(actor.system, \"attributes.vision\") !== undefined) {\n    updateData[\"system.attributes.-=vision\"] = null;\n  }\n\n  if (foundry.utils.getProperty(actor.prototypeToken, \"flags.pf1.lowLightVision\") !== undefined) {\n    updateData[\"prototypeToken.flags.pf1.-=lowLightVision\"] = null;\n  }\n\n  // XP max is purely derived value\n  if (actor.system.details?.xp?.max !== undefined) {\n    updateData[\"system.details.xp.-=max\"] = null;\n  }\n\n  // Actor resources have always been derived data\n  if (actor.system.resources !== undefined) {\n    updateData[\"system.-=resources\"] = null;\n  }\n\n  // Conditions no longer are permanently stored in actor data (since PF1 v10)\n  if (actor.system.attributes?.conditions !== undefined) {\n    updateData[\"system.attributes.-=conditions\"] = null;\n  }\n\n  if (actor.system.details.level !== undefined) {\n    updateData[\"system.details.-=level\"] = null;\n  }\n};\n\n/**\n * Flatten item tuple arrays\n * Since PF1 v9\n *\n * @param item\n * @param updateData\n */\nconst _migrateItemTuples = (item, updateData) => {\n  // Race subtypes\n  if (item.type === \"race\") {\n    if (item.system.subTypes?.length) {\n      if (typeof item.system.subTypes[0] !== \"string\") {\n        updateData[\"system.subTypes\"] = item.system.subTypes.flat();\n      }\n    }\n  }\n\n  // Tags\n  if (item.system.tags?.length) {\n    if (typeof item.system.tags[0] !== \"string\") {\n      updateData[\"system.tags\"] = item.system.tags.flat();\n    }\n  }\n\n  // Feat class associations\n  const classAssociations = item.system.associations?.classes;\n  if (classAssociations?.length) {\n    if (typeof classAssociations[0] !== \"string\") {\n      updateData[\"system.associations.classes\"] = classAssociations.flat();\n    }\n  }\n};\n\n/**\n * Migrate Active Effect data\n *\n * @param {object} ae Active Effect data\n * @param {Actor} actor Actor\n */\nconst migrateActiveEffectData = async (ae, actor) => {\n  if (!actor) return;\n\n  const updateData = {};\n\n  // Fix broken AE\n  if (!ae.name) updateData.name = \"No Name\";\n\n  /**\n   * @param {string} origin Origin string\n   * @returns {string|undefined} Relative UUID, if origin was found\n   */\n  const getNewRelativeOrigin = async (origin) => {\n    if (typeof origin !== \"string\") return; // Invalid origin type, recorded by SBC?\n    const newOrigin = await fromUuid(origin, { relative: actor });\n    if (newOrigin instanceof Item && newOrigin.actor === actor) {\n      return newOrigin.getRelativeUUID(actor);\n    }\n  };\n\n  // Convert no longer used flags.pf1.prigin to origin, if no origin is present\n  const originFlag = ae.flags?.pf1?.origin;\n  if (originFlag) {\n    if (!ae.origin) {\n      const newOrigin = await getNewRelativeOrigin(originFlag);\n      if (newOrigin) updateData.origin = newOrigin;\n    }\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=origin\"] = null;\n  }\n\n  // Convert origin to relative origin\n  if (ae.origin) {\n    const newOrigin = await getNewRelativeOrigin(ae.origin);\n    // Avoid empty updates\n    if (newOrigin && ae.origin !== newOrigin) {\n      updateData.origin = newOrigin;\n    }\n  }\n\n  // Remove pf1_ prefix from status effects\n  if (ae.statuses.some((s) => s.startsWith(\"pf1_\"))) {\n    updateData.statuses = Array.from(new Set(ae.statuses.map((s) => s.replace(/^pf1_/, \"\"))));\n  }\n\n  return updateData;\n};\n","/**\n * The core API provided by the system, available via the global `pf1`.\n *\n * @module\n */\n\n// Imports for side effects\nimport \"./less/pf1.less\";\nimport \"./module/hmr.mjs\";\nimport \"./module/patch-core.mjs\";\nimport \"module/compendium-directory.mjs\";\nimport \"./module/chatlog.mjs\";\n\n// Import Modules\nimport { measureDistances } from \"./module/utils/canvas.mjs\";\nimport { moduleToObject, setDefaultSceneScaling } from \"./module/utils/lib.mjs\";\nimport { initializeSocket } from \"./module/socket.mjs\";\nimport { SemanticVersion } from \"./module/utils/semver.mjs\";\nimport * as macros from \"./module/documents/macros.mjs\";\nimport * as chatUtils from \"./module/utils/chat.mjs\";\nimport { initializeModuleIntegration } from \"./module/modules.mjs\";\nimport { ActorPFProxy } from \"@actor/actor-proxy.mjs\";\nimport { ItemPFProxy } from \"@item/item-proxy.mjs\";\n\n// New API\nimport * as PF1 from \"./module/config.mjs\";\nimport * as PF1CONST from \"./module/const.mjs\";\nimport * as applications from \"./module/applications/_module.mjs\";\nimport * as documents from \"./module/documents/_module.mjs\";\nimport * as actionUse from \"./module/action-use/_module.mjs\";\nimport * as chat from \"./module/chat/_module.mjs\";\nimport * as _canvas from \"./module/canvas/_module.mjs\";\nimport * as dice from \"./module/dice/_module.mjs\";\nimport * as components from \"./module/components/_module.mjs\";\nimport * as utils from \"./module/utils/_module.mjs\";\nimport * as registry from \"./module/registry/_module.mjs\";\nimport * as migrations from \"./module/migration.mjs\";\nimport * as rollFunctions from \"./module/utils/roll-functions.mjs\";\n\n// ESM exports, to be kept in sync with globalThis.pf1\nexport {\n  actionUse,\n  applications,\n  _canvas as canvas,\n  components,\n  PF1 as config,\n  PF1CONST as const,\n  dice,\n  documents,\n  migrations,\n  registry,\n  utils,\n  chat,\n};\n\nglobalThis.pf1 = moduleToObject({\n  actionUse,\n  applications,\n  canvas: _canvas,\n  components,\n  config: PF1,\n  const: PF1CONST,\n  dice,\n  documents,\n  migrations,\n  registry,\n  /** @type {TooltipPF|null} */\n  tooltip: null,\n  utils,\n  chat,\n  // Initialize skip confirm prompt value\n  skipConfirmPrompt: false,\n});\n\n/* -------------------------------------------- */\n/*  Foundry VTT Initialization                  */\n/* -------------------------------------------- */\nHooks.once(\"init\", function () {\n  console.log(`PF1 | Initializing Pathfinder 1 System`);\n\n  // Redirect notifications to console before Notifications is ready\n  ui.notifications = {\n    info: (msg, opts = {}) => (opts.console !== false ? console.log(msg) : undefined),\n    warn: (msg, opts = {}) => (opts.console !== false ? console.warn(msg) : undefined),\n    error: (msg, opts = {}) => (opts.console !== false ? console.error(msg) : undefined),\n  };\n\n  // Global exports\n  globalThis.RollPF = dice.RollPF;\n\n  // Record Configuration Values\n  CONFIG.PF1 = pf1.config;\n\n  // Canvas object classes and configuration\n  CONFIG.Canvas.layers.templates.layerClass = _canvas.TemplateLayerPF;\n  CONFIG.MeasuredTemplate.objectClass = _canvas.MeasuredTemplatePF;\n  CONFIG.MeasuredTemplate.defaults.originalAngle = CONFIG.MeasuredTemplate.defaults.angle;\n  CONFIG.MeasuredTemplate.defaults.angle = 90; // PF1 uses 90 degree angles\n  CONFIG.Token.objectClass = _canvas.TokenPF;\n\n  // Document classes\n  CONFIG.Actor.documentClass = ActorPFProxy;\n  CONFIG.Actor.documentClasses = {\n    character: documents.actor.ActorCharacterPF,\n    npc: documents.actor.ActorNPCPF,\n    haunt: documents.actor.ActorHauntPF,\n    trap: documents.actor.ActorTrapPF,\n    vehicle: documents.actor.ActorVehiclePF,\n    basic: documents.actor.BasicActorPF,\n  };\n  CONFIG.Item.documentClass = ItemPFProxy;\n  CONFIG.Item.documentClasses = {\n    attack: documents.item.ItemAttackPF,\n    buff: documents.item.ItemBuffPF,\n    class: documents.item.ItemClassPF,\n    consumable: documents.item.ItemConsumablePF,\n    container: documents.item.ItemContainerPF,\n    equipment: documents.item.ItemEquipmentPF,\n    feat: documents.item.ItemFeatPF,\n    loot: documents.item.ItemLootPF,\n    race: documents.item.ItemRacePF,\n    spell: documents.item.ItemSpellPF,\n    weapon: documents.item.ItemWeaponPF,\n    implant: documents.item.ItemImplantPF,\n  };\n\n  CONFIG.Token.documentClass = documents.TokenDocumentPF;\n  CONFIG.ActiveEffect.documentClass = documents.ActiveEffectPF;\n  CONFIG.ActiveEffect.legacyTransferral = false; // TODO: Remove once legacy transferral is no longer default.\n  CONFIG.Combat.documentClass = documents.CombatPF;\n  CONFIG.Combatant.documentClass = documents.CombatantPF;\n  CONFIG.ChatMessage.documentClass = documents.ChatMessagePF;\n\n  // UI classes\n  CONFIG.ui.items = applications.ItemDirectoryPF;\n\n  // Dice config\n  CONFIG.Dice.rolls.unshift(dice.RollPF);\n  for (const [key, term] of Object.entries(dice.terms.fn)) {\n    CONFIG.Dice.termTypes[key] = term;\n  }\n  for (const [key, term] of Object.entries(dice.terms.aux)) {\n    CONFIG.Dice.termTypes[key] = term;\n  }\n  CONFIG.Dice.rolls.push(dice.D20RollPF);\n  CONFIG.Dice.rolls.push(dice.DamageRoll);\n  Object.defineProperties(CONFIG.Dice, {\n    RollPF: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"CONFIG.Dice.RollPF is deprecated in favor of RollPF global and pf1.dice.RollPF\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return pf1.dice.RollPF;\n      },\n    },\n  });\n  Object.defineProperties(CONFIG.Dice.rolls, {\n    DamageRoll: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"CONFIG.Dice.rolls.DamageRoll is deprecated in favor of pf1.dice.DamageRoll\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return pf1.dice.DamageRoll;\n      },\n    },\n    D20RollPF: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"CONFIG.Dice.rolls.D20RollPF is deprecated in favor of pf1.dice.D20RollPF\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return pf1.dice.D20RollPF;\n      },\n    },\n  });\n\n  // Modifier -> Type\n  Object.defineProperties(pf1.config, {\n    bonusModifiers: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"pf1.config.bonusModifiers is deprecated in favor of pf1.config.bonusTypes\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return this.bonusTypes;\n      },\n    },\n    stackingBonusModifiers: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"pf1.config.stackingBonusModifiers is deprecated in favor of pf1.config.stackingBonusTypes\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return this.stackingBonusTypes;\n      },\n    },\n  });\n\n  Object.defineProperty(pf1.config, \"itemTypes\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\"pf1.config.itemTypes is deprecated in favor of CONFIG.Item.typeLabels\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      return Object.fromEntries(\n        Object.entries(CONFIG.Item.typeLabels).map(([key, label]) => [key, game.i18n.localize(label)])\n      );\n    },\n  });\n\n  Object.defineProperty(pf1.utils, \"rollPreProcess\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\"pf1.utils.rollPreProcess.* is deprecated in favor of pf1.utils.roll.*\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      return pf1.utils.roll;\n    },\n  });\n\n  Object.defineProperty(pf1.applications, \"ActionChooser\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\n        \"pf1.utils.ActionChooser is deprecated in favor of pf1.utils.ActionSelector\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n\n      return pf1.applications.ActionSelector;\n    },\n  });\n\n  CONFIG.time.roundTime = 6;\n\n  // Register System Settings\n  documents.settings.registerSystemSettings();\n  documents.settings.registerClientSettings();\n  setDefaultSceneScaling();\n\n  // Preload Handlebars Templates\n  utils.handlebars.preloadHandlebarsTemplates();\n  utils.handlebars.registerHandlebarsHelpers();\n\n  // Register sheet application classes\n  Actors.unregisterSheet(\"core\", ActorSheet);\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFCharacter, {\n    label: \"PF1.Sheet.PC\",\n    types: [\"character\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPC, {\n    label: \"PF1.Sheet.NPC\",\n    types: [\"npc\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLite, {\n    label: \"PF1.Sheet.NPCLite\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLoot, {\n    label: \"PF1.Sheet.NPCLoot\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFHaunt, {\n    label: \"PF1.Sheet.Haunt\",\n    types: [\"haunt\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFTrap, {\n    label: \"PF1.Sheet.Trap\",\n    types: [\"trap\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFVehicle, {\n    label: \"PF1.Sheet.Vehicle\",\n    types: [\"vehicle\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFBasic, {\n    label: \"PF1.Sheet.Basic\",\n    types: [\"basic\"],\n    makeDefault: true,\n  });\n  Items.unregisterSheet(\"core\", ItemSheet);\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF, {\n    label: \"PF1.Sheet.Item\",\n    types: [\"class\", \"feat\", \"spell\", \"consumable\", \"equipment\", \"loot\", \"weapon\", \"buff\", \"attack\", \"race\", \"implant\"],\n    makeDefault: true,\n  });\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF_Container, {\n    label: \"PF1.Sheet.Container\",\n    types: [\"container\"],\n    makeDefault: true,\n  });\n\n  // Register detection modes\n  for (const mode of Object.values(pf1.canvas.detectionModes)) {\n    CONFIG.Canvas.detectionModes[mode.ID] = new mode({\n      id: mode.ID,\n      label: mode.LABEL,\n      type: mode.DETECTION_TYPE ?? DetectionMode.DETECTION_TYPES.SIGHT,\n    });\n  }\n\n  // Register vision modes\n  CONFIG.Canvas.visionModes.darkvision = pf1.canvas.visionModes.darkvision;\n\n  // Initialize socket listener\n  initializeSocket();\n\n  // Initialize module integrations\n  initializeModuleIntegration();\n\n  // Initialize registries with initial/built-in data\n  const registries = /** @type {const} */ ([\n    [\"damageTypes\", registry.DamageTypes],\n    [\"materialTypes\", registry.MaterialTypes],\n    [\"scriptCalls\", registry.ScriptCalls],\n    [\"conditions\", registry.Conditions],\n    [\"sources\", registry.Sources],\n  ]);\n  for (const [registryName, registryClass] of registries) {\n    pf1.registry[registryName] = new registryClass();\n  }\n\n  //Calculate conditions for world\n  CONFIG.statusEffects = pf1.utils.init.getConditions();\n\n  Object.defineProperty(pf1.config, \"conditions\", {\n    get: () => {\n      foundry.utils.logCompatibilityWarning(\n        \"Conditions have been moved into the Conditions registry. \" +\n          \"Use pf1.registry.conditions.getLabels() for the old format, or access the collection for full condition data.\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n      return pf1.registry.conditions.getLabels();\n    },\n  });\n\n  Object.defineProperty(pf1.config, \"conditionTextures\", {\n    get: () => {\n      foundry.utils.logCompatibilityWarning(\n        \"Condition textures have been moved into the Conditions registry. \" +\n          \"Access the collection for full condition data.\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n      return Object.fromEntries(\n        pf1.registry.conditions.map((registryObject) => [registryObject.id, registryObject.texture])\n      );\n    },\n  });\n\n  Object.defineProperty(pf1.config, \"conditionMechanics\", {\n    get: () => {\n      foundry.utils.logCompatibilityWarning(\n        \"Condition mechanics have been moved into the Conditions registry. \" +\n          \"Access the collection for full condition data.\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n      return Object.fromEntries(\n        pf1.registry.conditions.map((registryObject) => [registryObject.id, registryObject.mechanics])\n      );\n    },\n  });\n  // Diagonal ruleset implementation\n  SquareGrid.prototype.measureDistances = measureDistances;\n\n  // Call post-init hook\n  Hooks.callAll(\"pf1PostInit\");\n});\n\n// Load Quench test in development environment\nif (import.meta.env.DEV) {\n  await import(\"./module/test/index.mjs\");\n}\n\n/* -------------------------------------------- */\n/*  Foundry VTT Setup                           */\n/* -------------------------------------------- */\n\n// Pre-translation passes\nHooks.once(\"i18nInit\", function () {\n  // Localize pf1.config objects once up-front\n  const toLocalize = [\n    \"abilities\",\n    \"abilitiesShort\",\n    \"alignments\",\n    \"alignmentsShort\",\n    \"currencies\",\n    \"distanceUnits\",\n    \"itemActionTypes\",\n    \"senses\",\n    \"skills\",\n    \"timePeriods\",\n    \"timePeriodsShort\",\n    \"durationEndEvents\",\n    \"savingThrows\",\n    \"ac\",\n    \"featTypes\",\n    \"featTypesPlurals\",\n    \"traitTypes\",\n    \"racialTraitCategories\",\n    \"raceTypes\",\n    \"conditionTypes\",\n    \"lootTypes\",\n    \"flyManeuverabilities\",\n    \"favouredClassBonuses\",\n    \"abilityTypes\",\n    \"weaponGroups\",\n    \"weaponTypes\",\n    \"weaponProperties\",\n    \"spellComponents\",\n    \"spellDescriptors\",\n    \"spellSchools\",\n    \"spellLevels\",\n    \"spellcasting\",\n    \"armorProficiencies\",\n    \"weaponProficiencies\",\n    \"actorSizes\",\n    \"abilityActivationTypes\",\n    \"abilityActivationTypesPlurals\",\n    \"limitedUsePeriods\",\n    \"equipmentTypes\",\n    \"equipmentSlots\",\n    \"implantSlots\",\n    \"implantTypes\",\n    \"consumableTypes\",\n    \"attackTypes\",\n    \"buffTypes\",\n    \"divineFocus\",\n    \"classSavingThrows\",\n    \"classBAB\",\n    \"classTypes\",\n    \"measureTemplateTypes\",\n    \"creatureTypes\",\n    \"measureUnits\",\n    \"measureUnitsShort\",\n    \"languages\",\n    \"weaponHoldTypes\",\n    \"auraStrengths\",\n    \"conditionalTargets\",\n    \"bonusTypes\",\n    \"abilityActivationTypes_unchained\",\n    \"abilityActivationTypesPlurals_unchained\",\n    \"actorStatures\",\n    \"ammoTypes\",\n    \"damageResistances\",\n    \"vehicles\",\n    \"woundThresholdConditions\",\n  ];\n\n  // Localize pf1.const objects\n  const toLocalizeConst = [\"messageVisibility\"];\n\n  // Config (sub-)objects to be sorted\n  const toSort = [\n    \"bonusTypes\",\n    \"skills\",\n    \"traitTypes\",\n    \"racialTraitCategories\",\n    \"conditionTypes\",\n    \"consumableTypes\",\n    \"creatureTypes\",\n    \"featTypes\",\n    \"weaponProperties\",\n    \"spellSchools\",\n    \"languages\",\n  ];\n\n  /**\n   * Helper function to recursively localize object entries\n   *\n   * @param {object} obj - The object to be localized\n   * @param {string} cat - The object's name\n   * @returns {object} The localized object\n   */\n  const doLocalize = (obj, cat) => {\n    // Create tuples of (key, localized object/string)\n    const localized = Object.entries(obj).reduce((arr, [key, value]) => {\n      if (typeof value === \"string\") arr.push([key, game.i18n.localize(value)]);\n      else if (typeof value === \"object\") arr.push([key, doLocalize(value, `${cat}.${key}`)]);\n      return arr;\n    }, []);\n\n    if (toSort.includes(cat)) {\n      // Sort simple strings, fall back to sorting by label for objects/categories\n      localized.sort(([akey, aval], [bkey, bval]) => {\n        // Move misc to bottom of every list\n        if (akey === \"misc\") return 1;\n        else if (bkey === \"misc\") return -1;\n\n        // Regular sorting of localized strings\n        const localA = typeof aval === \"string\" ? aval : aval._label;\n        const localB = typeof bval === \"string\" ? bval : bval._label;\n        return localA.localeCompare(localB);\n      });\n    }\n\n    // Get the localized and sorted object out of tuple\n    return localized.reduce((obj, [key, value]) => {\n      obj[key] = value;\n      return obj;\n    }, {});\n  };\n\n  const doLocalizePaths = (obj, paths = []) => {\n    for (const path of paths) {\n      const value = foundry.utils.getProperty(obj, path);\n      if (value) {\n        foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n      }\n    }\n  };\n\n  const doLocalizeKeys = (obj, keys = []) => {\n    for (const path of Object.keys(foundry.utils.flattenObject(obj))) {\n      const key = path.split(\".\").at(-1);\n      if (keys.includes(key)) {\n        const value = foundry.utils.getProperty(obj, path);\n        if (value) {\n          foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n        }\n      }\n    }\n  };\n\n  // Localize and sort CONFIG objects\n  for (const o of toLocalize) {\n    pf1.config[o] = doLocalize(pf1.config[o], o);\n  }\n\n  for (const o of toLocalizeConst) {\n    pf1.const[o] = doLocalize(pf1.const[o], o);\n  }\n\n  // Localize buff targets\n  const localizeLabels = [\"buffTargets\", \"buffTargetCategories\", \"contextNoteTargets\", \"contextNoteCategories\"];\n  for (const l of localizeLabels) {\n    for (const [k, v] of Object.entries(pf1.config[l])) {\n      pf1.config[l][k].label = game.i18n.localize(v.label);\n    }\n  }\n\n  // Extra attack structure\n  doLocalizeKeys(pf1.config.extraAttacks, [\"label\", \"flavor\"]);\n\n  // Level-up data\n  doLocalizePaths(pf1.config.levelAbilityScoreFeature, [\"name\", \"system.description.value\"]);\n\n  // Point buy data\n  doLocalizeKeys(pf1.config.pointBuy, [\"label\"]);\n});\n\n/**\n * This function runs after game data has been requested and loaded from the servers, so documents exist\n */\nHooks.once(\"setup\", () => {\n  // Prepare registry data\n  for (const registry of Object.values(pf1.registry)) {\n    if (registry instanceof pf1.registry.Registry) registry.setup();\n  }\n\n  // Register controls\n  documents.controls.registerSystemControls();\n\n  Hooks.callAll(\"pf1PostSetup\");\n});\n\n/* -------------------------------------------- */\n\n/**\n * Once the entire VTT framework is initialized, check to see if we should perform a data migration\n */\nHooks.once(\"ready\", async function () {\n  // Create tooltip\n  const ttconf = game.settings.get(\"pf1\", \"tooltipConfig\");\n  const ttwconf = game.settings.get(\"pf1\", \"tooltipWorldConfig\");\n  if (!ttconf.disable && !ttwconf.disable) pf1.applications.TooltipPF.toggle(true);\n\n  window.addEventListener(\"resize\", () => {\n    pf1.tooltip?.setPosition();\n  });\n\n  // Migrate data\n  const NEEDS_MIGRATION_VERSION = \"10.5\";\n  let PREVIOUS_MIGRATION_VERSION = game.settings.get(\"pf1\", \"systemMigrationVersion\");\n  if (typeof PREVIOUS_MIGRATION_VERSION === \"number\") {\n    PREVIOUS_MIGRATION_VERSION = PREVIOUS_MIGRATION_VERSION.toString() + \".0\";\n  } else if (\n    typeof PREVIOUS_MIGRATION_VERSION === \"string\" &&\n    PREVIOUS_MIGRATION_VERSION.match(/^([0-9]+)\\.([0-9]+)$/)\n  ) {\n    PREVIOUS_MIGRATION_VERSION = `${PREVIOUS_MIGRATION_VERSION}.0`;\n  }\n  const needMigration = SemanticVersion.fromString(NEEDS_MIGRATION_VERSION).isHigherThan(\n    SemanticVersion.fromString(PREVIOUS_MIGRATION_VERSION)\n  );\n\n  if (needMigration) {\n    const options = {};\n    // Omit dialog for new worlds with presumably nothing to migrate\n    if (PREVIOUS_MIGRATION_VERSION === \"0.0.0\") options.dialog = false;\n\n    await pf1.migrations.migrateWorld(options);\n  }\n\n  // Inform users who aren't running migration\n  if (!game.user.isGM && game.settings.get(\"pf1\", \"migrating\")) {\n    ui.notifications.warn(\"PF1.Migration.InProgress\", { localize: true });\n  }\n\n  // Migrate system settings\n  await documents.settings.migrateSystemSettings();\n\n  // Populate `pf1.applications.compendiums`\n  pf1.applications.compendiumBrowser.CompendiumBrowser.initializeBrowsers();\n\n  // Show changelog\n  if (!game.settings.get(\"pf1\", \"dontShowChangelog\")) {\n    const v = game.settings.get(\"pf1\", \"changelogVersion\");\n    const changelogVersion = SemanticVersion.fromString(v);\n    const curVersion = SemanticVersion.fromString(game.system.version);\n\n    if (curVersion.isHigherThan(changelogVersion)) {\n      const app = new pf1.applications.ChangeLogWindow(true);\n      app.render(true, { focus: true });\n      game.settings.set(\"pf1\", \"changelogVersion\", curVersion.toString());\n    }\n  }\n\n  Hooks.callAll(\"pf1PostReady\");\n});\n\n/* -------------------------------------------- */\n/*  Other Hooks                                 */\n/* -------------------------------------------- */\n\nHooks.on(\n  \"renderChatMessage\",\n  /**\n   * @param {ChatMessage} cm - Chat message instance\n   * @param {JQuery<HTMLElement>} jq - JQuery instance\n   * @param {object} options - Render options\n   */\n  (cm, jq, options) => {\n    // Hide roll info\n    chatUtils.hideRollInfo(cm, jq, options);\n\n    // Hide GM sensitive info\n    chatUtils.hideGMSensitiveInfo(cm, jq, options);\n\n    // Hide non-visible targets for players\n    if (!game.user.isGM) chatUtils.hideInvisibleTargets(cm, jq[0]);\n\n    // Create target callbacks\n    chatUtils.addTargetCallbacks(cm, jq);\n\n    // Alter target defense options\n    chatUtils.alterTargetDefense(cm, jq);\n\n    // Optionally collapse the content\n    if (game.settings.get(\"pf1\", \"autoCollapseItemCards\")) jq.find(\".card-content\").hide();\n\n    // Optionally hide chat buttons\n    if (game.settings.get(\"pf1\", \"hideChatButtons\")) jq.find(\".card-buttons\").hide();\n\n    // Apply accessibility settings to chat message\n    chatUtils.applyAccessibilitySettings(cm, jq, options, game.settings.get(\"pf1\", \"accessibilityConfig\"));\n\n    // Alter ammo recovery options\n    chatUtils.alterAmmoRecovery(cm, jq);\n  }\n);\n\nHooks.on(\"renderChatPopout\", (app, html, data) => {\n  // Optionally collapse the content\n  if (game.settings.get(\"pf1\", \"autoCollapseItemCards\")) html.find(\".card-content\").hide();\n\n  // Optionally hide chat buttons\n  if (game.settings.get(\"pf1\", \"hideChatButtons\")) html.find(\".card-buttons\").hide();\n});\n\nHooks.on(\"renderChatLog\", (_, html) => documents.item.ItemPF.chatListeners(html));\nHooks.on(\"renderChatLog\", (_, html) => documents.actor.ActorPF.chatListeners(html));\nHooks.on(\"renderChatLog\", (_, html) => _canvas.attackReach.addReachListeners(html));\n\nHooks.on(\"renderChatPopout\", (_, html) => documents.item.ItemPF.chatListeners(html));\nHooks.on(\"renderChatPopout\", (_, html) => documents.actor.ActorPF.chatListeners(html));\n\nHooks.on(\"renderAmbientLightConfig\", (app, html) => {\n  _canvas.lowLightVision.addLowLightVisionToLightConfig(app, html);\n});\n\nHooks.on(\"renderTokenHUD\", (app, html, data) => {\n  _canvas.TokenQuickActions.addQuickActions(app, html, data);\n});\n\n// Hide token tooltip on token update or deletion\nHooks.on(\"deleteToken\", (token) => pf1.tooltip?.unbind(token));\nHooks.on(\"updateToken\", (token) => pf1.tooltip?.unbind(token));\n\nHooks.on(\"chatMessage\", (log, message, chatData) => {\n  const result = documents.customRolls(message, chatData.speaker);\n  return !result;\n});\n\nHooks.on(\"renderActorDirectory\", (app, html, data) => {\n  html.find(\"li.actor\").each((i, li) => {\n    li.addEventListener(\n      \"drop\",\n      applications.CurrencyTransfer._directoryDrop.bind(undefined, li.getAttribute(\"data-document-id\"))\n    );\n  });\n});\n\nHooks.on(\"renderItemDirectory\", (app, html, data) => {\n  html.find(\"li.item\").each((i, li) => {\n    li.addEventListener(\n      \"drop\",\n      applications.CurrencyTransfer._directoryDrop.bind(undefined, li.getAttribute(\"data-document-id\"))\n    );\n  });\n});\n\nHooks.on(\"dropActorSheetData\", (act, sheet, data) => {\n  if (data.type === \"Currency\") sheet._onDropCurrency(event, data);\n});\n\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n// Delay hotbarDrop handler registration to allow modules to override it.\nHooks.once(\"ready\", () => {\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => {\n    let macro;\n    const { type, uuid } = data;\n    switch (type) {\n      case \"Item\":\n        macro = macros.createItemMacro(uuid, slot);\n        break;\n      case \"action\":\n        macro = macros.createActionMacro(data.actionId, uuid, slot);\n        break;\n      case \"skill\":\n        macro = macros.createSkillMacro(data.skill, uuid, slot);\n        break;\n      case \"save\":\n        macro = macros.createSaveMacro(data.save, uuid, slot);\n        break;\n      case \"defenses\":\n      case \"cmb\":\n      case \"concentration\":\n      case \"cl\":\n      case \"attack\":\n      case \"abilityScore\":\n      case \"initiative\":\n      case \"bab\":\n        macro = macros.createMiscActorMacro(type, uuid, slot, data);\n        break;\n      default:\n        return true;\n    }\n\n    if (macro == null || macro instanceof Promise) return false;\n  });\n});\n\n// Render TokenConfig\nHooks.on(\n  \"renderTokenConfig\",\n  /**\n   * @param {TokenConfig} app - Config application\n   * @param {JQuery<HTMLElement>} html - HTML element\n   */\n  async (app, html) => {\n    // Add vision inputs\n    let token = app.object;\n    // Prototype token\n    if (token instanceof Actor) token = token.prototypeToken;\n\n    const flags = token.flags?.pf1 ?? {};\n\n    // Add static size checkbox\n    const sizingTemplateData = { flags };\n    const sizeContent = await renderTemplate(\n      \"systems/pf1/templates/foundry/token/token-sizing.hbs\",\n      sizingTemplateData\n    );\n\n    const systemVision = game.settings.get(\"pf1\", \"systemVision\");\n\n    html.find('.tab[data-tab=\"appearance\"] > *:nth-child(3)').after(sizeContent);\n\n    const visionTab = html[0].querySelector(`.tab[data-tab=\"vision\"]`);\n\n    // Disable vision elements if custom vision is disabled\n    const enableCustomVision = flags.customVisionRules === true || !systemVision;\n\n    let addDetectionModeButtonListener;\n    const toggleCustomVision = (enabled) => {\n      // Disable vision mode selection\n      visionTab.querySelector(\"select[name='sight.visionMode']\").disabled = !enabled;\n\n      // Disable detection mode tab\n      const dmTab = visionTab.querySelector(\".tab[data-tab='detection']\");\n      for (const el of dmTab.querySelectorAll(\"input,select\")) {\n        if (el.name === \"flags.pf1.customVisionRules\") continue;\n        el.disabled = !enabled;\n      }\n\n      // Disable detection mode tab buttons via CSS\n      dmTab.classList.toggle(\"disabled\", !enabled);\n    };\n\n    if (!enableCustomVision) toggleCustomVision(enableCustomVision);\n\n    const visionContent = await renderTemplate(\"systems/pf1/templates/foundry/token/custom-vision.hbs\", {\n      enabled: enableCustomVision || !systemVision,\n      noSystemVision: !systemVision,\n    });\n\n    $(visionTab).append(visionContent);\n\n    // Add listener for custom vision rules checkbox\n    // Soft toggle to work nicer with Foundry's preview behaviour\n    visionTab.querySelector(`input[name=\"flags.pf1.customVisionRules\"]`).addEventListener(\"change\", async (event) => {\n      toggleCustomVision(event.target.checked);\n    });\n\n    // Resize windows\n    app.setPosition();\n  }\n);\n\n// Render Sidebar\nHooks.on(\"renderSidebarTab\", (app, html) => {\n  if (app instanceof Settings) {\n    // Add buttons\n    const chlogButton = $(`<button>${game.i18n.localize(\"PF1.Application.Changelog.Title\")}</button>`);\n    const helpButton = $(`<button>${game.i18n.localize(\"PF1.Help.Label\")}</button>`);\n    const tshooterButton = $(`<button>${game.i18n.localize(\"PF1.Troubleshooter.Button\")}</button>`);\n    html\n      .find(\"#game-details\")\n      .after(\n        $(`<h2>${game.i18n.localize(\"PF1.Title\")}</h2>`),\n        $(\"<div id='pf1-details'>\").append(chlogButton, helpButton, tshooterButton)\n      );\n\n    chlogButton.click(() => {\n      const chlog = Object.values(ui.windows).find((o) => o.id == \"changelog\") ?? new applications.ChangeLogWindow();\n      chlog.render(true, { focus: true });\n    });\n    helpButton.click(() => pf1.applications.helpBrowser.openUrl(\"Help/Home\"));\n    tshooterButton.click(() => pf1.applications.Troubleshooter.open());\n  }\n});\n\nHooks.on(\"controlToken\", () => {\n  // Refresh lighting to (un)apply low-light vision parameters to them\n  canvas.perception.update(\n    {\n      initializeLighting: true,\n    },\n    true\n  );\n});\n\n/* ------------------------------- */\n/* Expire active effects\n/* ------------------------------- */\n{\n  const expireFromTokens = function () {\n    if (game.users.activeGM?.isSelf) {\n      for (const t of canvas.tokens.placeables) {\n        // Skip tokens in combat to avoid too early expiration\n        if (t.combatant?.combat?.started) continue;\n        // Don't do anything for actors without this function (e.g. basic actors)\n        if (!t.actor?.expireActiveEffects) continue;\n        t.actor.expireActiveEffects();\n      }\n    }\n  };\n\n  // On game time change\n  Hooks.on(\"updateWorldTime\", () => {\n    expireFromTokens();\n  });\n\n  // On canvas render\n  Hooks.on(\"canvasReady\", () => {\n    expireFromTokens();\n  });\n}\n\n// Refresh skip state (alleviates sticky modifier issue #1572)\nwindow.addEventListener(\"focus\", () => (pf1.skipConfirmPrompt = false), { passive: true });\n","/**\n * Initialize module compatibility/integration code.\n *\n * Currently integrated modules:\n * - Drag Ruler\n * - DSN (scattered game.dice3d usage)\n */\nexport function initializeModuleIntegration() {\n  const integration = game.settings.get(\"pf1\", \"integration\");\n  // Drag Ruler <https://foundryvtt.com/packages/drag-ruler>\n  if (game.modules.get(\"drag-ruler\")?.active && integration.dragRuler) {\n    Hooks.once(\"dragRuler.ready\", (SpeedProvider) => {\n      // TODO: Disable enhanced terrain layer support until the module is fixed or support for it is removed\n      const enhancedTerrain = false; // game.modules.get(\"enhanced-terrain-layer\")?.active && integration.enhancedTerrainLayer;\n\n      class Pf1SpeedProvider extends SpeedProvider {\n        get colors() {\n          return [\n            { id: \"walk\", default: 0x00ff00, name: \"PF1.SETTINGS.DragRulerWalk\" },\n            { id: \"dash\", default: 0xffff00, name: \"PF1.SETTINGS.DragRulerDash\" },\n            { id: \"run\", default: 0xff8000, name: \"PF1.SETTINGS.DragRulerRun\" },\n          ];\n        }\n\n        getRanges(token) {\n          const baseSpeed = pf1.utils.convertDistance(this.getBaseSpeed(token))[0];\n          const rollData = token.actor.getRollData(),\n            inHeavyArmor = rollData.armor.type >= pf1.config.armorTypes.heavy,\n            inHeavyLoad = rollData.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy;\n\n          let runMultiplier = 4;\n          if (inHeavyArmor || inHeavyLoad) runMultiplier = 3;\n          return [\n            { range: baseSpeed, color: \"walk\" },\n            { range: baseSpeed * 2, color: \"dash\" },\n            { range: baseSpeed * runMultiplier, color: \"run\" },\n          ];\n        }\n\n        getBaseSpeed(token) {\n          const [y, x] = canvas.grid.grid.getGridPositionFromPixels(token.x, token.y);\n          const useElevation = this.getSetting(\"useElevation\");\n          const speeds = token.actor.system.attributes.speed;\n\n          if (useElevation && token.document.elevation > 0) {\n            const flySpeed = speeds.fly.total;\n            if (flySpeed > 0) {\n              return flySpeed;\n            }\n          }\n\n          if (\n            enhancedTerrain &&\n            canvas.terrain.terrainFromGrid(x, y).some((terrain) => terrain.data.environment === \"water\")\n          ) {\n            const swimSpeed = speeds.swim.total;\n            if (swimSpeed > 0) {\n              return swimSpeed;\n            }\n          }\n\n          if (useElevation && token.document.elevation < 0) {\n            const burrowSpeed = speeds.burrow.total;\n            if (burrowSpeed > 0) {\n              return burrowSpeed;\n            }\n          }\n\n          return speeds.land.total;\n        }\n\n        get settings() {\n          return [\n            {\n              id: \"useElevation\",\n              name: \"PF1.SETTINGS.DragRulerUseElevationName\",\n              hint: \"PF1.SETTINGS.DragRulerUseElevationHint\",\n              scope: \"world\",\n              type: Boolean,\n              default: true,\n            },\n          ];\n        }\n      }\n      dragRuler.registerSystem(\"pf1\", Pf1SpeedProvider);\n    });\n  }\n}\n"],"names":["ChatMessagePF","ChatMessage","_initRollObject","maybeRollObject","Array","isArray","map","o","this","Roll","fromData","k","v","Object","entries","actionSource","id","flags","pf1","metadata","action","itemSource","actions","get","itemId","item","actor","constructor","getSpeakerActor","speaker","items","hasItemSource","measureTemplate","templateId","template","canvas","templates","targets","targetIds","length","test","tokens","placeables","filter","includes","uuid","fromUuidSync","object","t","prepareDerivedData","super","systemRolls","rolls","customRolls","message","rollData","match","type","RegExp","$1","toUpperCase","value","$2","flavor","$3","implementation","getSpeaker","scene","game","scenes","tokenDocument","token","tokenUuid","getRollData","evaluate","then","async","roll","total","isHealing","content","renderTemplate","tokenId","css","half","Math","floor","chatOptions","CONST","CHAT_MESSAGE_TYPES","ROLL","sound","CONFIG","sounds","dice","rollMode","settings","subject","health","create","SemanticVersion","static","major","minor","patch","preRelease","buildMetaData","fromString","str","re","result","parseInt","$4","$5","toString","isHigherThan","otherVersion","isLowerThan","isSame","RollPF","totalHalved","terms","reduce","DiceTerm","push","PoolTerm","inheritDice","concat","_dice","options","safeRoll","formula","context","suppressError","evalOpts","foundry","utils","logCompatibilityWarning","since","until","err","warning","Error","console","error","debug","safeRollSync","isDeterministic","maximize","minimize","safeRollAsync","safeTotal","data","simplifyTerms","simplified","term","prior","OperatorTerm","StringTerm","mergeObject","priorNumeric","NumericTerm","exec","groups","base","FunctionTerm","priorOperator","String","_classifyStringTerm","intermediate","inplace","operator","shift","at","pop","cleanFlavor","replace","getTooltip","parts","d","results","some","r","active","getTooltipData","numericParts","cur","idx","arr","ttdata","hasNumericTooltip","i18n","localize","parse","final","i","systerm","values","aux","find","matchTerm","ParentheticalTerm","fn","isFunction","args","parseArgs","_lenientSplitArgs","expression","split","trim","p","validate","join","fractionalToString","f","roundDecimals","rv","CR","parseFloat","fromNumber","Number","isNumeric","convertDistance","getDistanceSystem","round","system","getWeightSystem","measureDistance","p0","p1","ray","diagonalRule","state","diagonals","cells","Ray","gs","dimensions","size","nx","ceil","abs","dx","ny","dy","nDiagonal","min","nStraight","nd10","distance","naturalSort","propertyKey","numeric","ignorePunctuation","collator","Intl","Collator","sort","a","b","propA","getProperty","propB","compare","adjustNumberByStringCommand","initialValue","cmdStr","maxValue","clearValue","op","rawValue","isAbsolute","isNegative","isFinite","isNaN","warn","initial","command","openJournal","journal","fromUuid","JournalEntryPage","parent","sheet","render","pageId","editable","collapsed","width","height","isValidChangeTarget","filters","valid","ar","include","exclude","ir","getBuffTargets","buffTargets","deepClone","buffs","config","contextNotes","contextNoteTargets","allowSkills","buffTargetCategories","skills","skillTargets","_skillTargets","s","skillId","slice","skill","getSkillInfo","label","fullName","category","key","allowSpells","spell","books","attributes","spells","spellbooks","primary","secondary","tertiary","spelllike","spellTargets","_spellbookTargets","schoolId","keys","PF1","spellSchools","subKey","subLabel","fullKey","mainLabel","concn","getBuffTargetDictionary","targetCategories","contextNoteCategories","categories","icon","startsWith","validity","sortArrayByName","inputArr","elem","name","toLocaleLowerCase","binarySearch","searchArr","el","compare_fn","m","n","cmp","uniquePermutations","perm","Set","rest","j","add","createInlineFormula","closing","TextEditor","_createInlineRoll","cls","chatCommand","parsedCommand","ChatLog","cmd","matches","raw","rollType","fml","flv","document","createElement","dataset","mode","defaultImplementation","replaceFormulaData","simplify","classList","tooltip","innerHTML","enrichHTMLUnrolled","secrets","documents","relativeTo","pcontent","enrichHTML","html","text","_getTextNodes","rgx","_replaceTextContent","enrichHTMLUnrolledAsync","calculateRangeFormula","traits","reach","natural","melee","range","spellRangeFormulas","close","medium","long","calculateRange","keepUpdateArray","sourceObj","targetObj","keepPath","newValue","newArray","getType","subData","expandObject","setProperty","diffObjectAndArray","original","other","inner","keepLength","obj","isDifferent","difference","_difference","v0","v1","t0","d2","isEmpty","addLowLightVisionToLightConfig","app","light","checkboxStr","getFlag","checkbox","$","append","patchCore","LightSource_initialize","LightSource","prototype","initialize","dim","bright","getRadius","call","multiplier","hasSystemVision","requiresSelection","user","isGM","relevantTokens","tokenDoc","testUserPermission","controlled","lowLightTokens","actorVision","lowLight","tokenVision","lowLightMultiplier","lowLightMultiplierBright","max","origParse","origClick","_onClickInlineRoll","event","preventDefault","currentTarget","contains","chatMessage","closest","ui","windows","appid","documentName","_data","click","selector","off","on","KeyboardManager","_onAlt","up","modifiers","lock","new","REGEXP","RollTerm","FLAVOR_REGEXP_STRING","CLOSE_REGEXP","OPERATORS","origFunc","_createContentLink","target","hash","indexOf","forEach","firstChild","className","setAttribute","lastChild","textContent","class","original_handleShareImage","ImagePopout","_handleShareImage","image","title","caption","showTitle","doc","Item","_onFocusIn","formElements","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","isContentEditable","releaseKeys","defineProperty","querySelectorAll","patchLowLightVision","buttons","bestiary","feats","classes","races","wide","compendiumButtonClick","applications","compendiums","_render","focus","Hooks","element","querySelector","info","button","innerText","addEventListener","entryOptions","unshift","condition","li","pack","packs","disabled","callback","configure","getMessage","messages","messageId","isOwnedSpellCard","msg","isOwner","spellCardContextMenu","_","rollConcentration","spellbook","rollCL","measureDistances","segments","gridSpaces","BaseGrid","unifiedMeasureDistance","_TokenHUD_getStatusEffectChoices","TokenHUD","_getStatusEffectChoices","core","itemTypes","buff","src","img","isActive","isOverlay","cssClass","_onToggleEffect","overlay","statusId","effect","statusEffects","e","getAttribute","toggleEffect","interaction","runSocketFunction","senderId","isFirstGM","users","activeGM","isSelf","sender","eventType","source","sourceActor","dest","destActor","sourceContainer","destContainer","amount","CurrencyTransfer","transfer","sourceAlt","destAlt","alterChatTargetAttribute","targetActor","itemData","toObject","createEmbeddedDocuments","deleteEmbeddedDocuments","hasPermission","USER_PERMISSIONS","SETTINGS_MODIFY","refreshActors","renderOnly","log","contentHTML","save","valueElem","targetUuid","isFailure","addClass","removeClass","isSuccess","update","prop","ActorBasePF","Actor","_itemTypes","getDefaultArtwork","actorData","defaultIcons","actors","texture","prepareBaseData","_rollData","getItemByTag","tag","defineProperties","getName","getId","identifier","activeOwner","u","getCombatants","combat","combatants","c","sharesVision","visionFlag","shared","default","_effectsWithDuration","effects","allApplicableEffects","_hasDuration","getConditionImmunities","list","ci","condToImmMap","confuse","daze","dazzle","fatigue","fear","registry","conditions","conditionsInTrack","sicken","paralyze","petrify","stun","has","cond","ItemBasePF","createDialog","CreateDialog","waitPrompt","createDocuments","origContext","supplements","_collectItemSupplements","created","_addSupplementChildLinks","allSupplements","Collection","collect","depth","links","classLink","newItems","supplement","extraItem","sourceId","old","count","set","newItem","parentUuid","fromCompendium","clearFolder","isPhysical","quantity","subType","updates","collection","children","_id","getRelativeUUID","updateDocuments","from","forcePlayerPerspective","activeState","setActive","canUse","applyChanges","changeOverrides","changes","types","getSortChangePriority","_sortChanges","targetA","targetB","typeA","typeB","prioA","priority","changeItems","changeFlags","k2","getSourceInfo","sourceInfo","negative","refreshDerivedData","continuousChanges","continuous","resetSkills","change","flats","getTargets","createOverride","_safeApplyChange","applySourceInfo","cc","finalizeSkills","bonusTypes","index","aSort","bSort","getChangeFlat","modifierType","curData","ablKey","skl","subSkills","subSkillId","subskill","rank","ability","subSkl","init","speedKey","speed","schoolDC","schoolCL","concnMatch","bookId","bookCL","sklKey","subSklKey","skillData","events","pf1GetChangeFlat","callAll","addDefaultChanges","tempChanges","pf1AddDefaultChanges","components","ItemChange","allClasses","calculateHealth","pcClasses","npcClasses","racialHD","all","healthConfig","nearest","down","rounding","pushHealth","fcb","favoredClassTypes","fc","hp","format","manualHealth","autoHealth","rate","maximized","hpPerHD","hd","hpPerTier","tiers","level","dieHealth","hitDice","maxedHD","remaining","computeHealth","sources","auto","hitdice","Racial","PC","NPC","useFractional","savingThrows","hasGoodSave","good","goodSaveFormula","classFractionalSavingThrowFormulas","goodSaveBonus","hpAbility","abilities","wounds","capitalize","strAbl","strAbility","abl","fort","ref","will","sr","cStr","details","carryCapacity","bonus","cMultBase","cMult","liteValues","bab","ac","normal","valfn","trget","naturalAC","equipment","equipped","armorTarget","armor","enh","baseAC","isBroken","enhAC","flyKey","fly","maneuverability","flyValue","flyManeuverabilityValues","sizeKey","sizeMods","sizeStealthMods","sizeFlyMods","sizeSpecialMods","bonusSkillRankFormula","con","mechanic","mechanics","changeData","changeObj","flag","energyDrain","csBonus","classSkillBonus","resetSkill","mod","cs","skillKey","subSkillKey","subSkill","acpPenaltyValue","acp","finalizeSkill","acpPenalty","abilityModifier","positive","setSourceInfoByName","getHighestChanges","ignoreTarget","highestTemplate","ids","highestID","highest","h","filterFunc","stackingBonusTypes","subTarget","abstract","DataModel","defineSchema","fields","StringField","blank","randomID","required","readonly","choices","NumberField","BooleanField","migrateData","modifier","updateTime","Date","_initialize","_source","writable","configurable","prepareData","ItemPF","dataObj","oldChangeData","delete","newIds","newChangeData","changeId","findSplice","defaultData","isDeferred","targetData","deferred","isDistance","getSourceInfoTargets","_preUpdate","updateSource","findIndex","updated","applyChange","msgSourceReference","errorMessage","errorData","onError","notifications","refresh","overrides","override","missing","loseDexToAC","isAC","diff","modifierChanger","abilityTarget","getAbilityModifier","damage","penalty","sourceInfoTargets","infoEntry","sourceInfoGroup","si","infoTarget","sInfo","doAdd","sumValue","existingInfoEntry","hasSameParent","isEnh","hasSameTarget","hasHighestValue","isSameModifier","isSameTarget","hasHigherValue","entry","oldEntry","splice","DamageRoll","damageType","custom","NORMAL","CRITICAL","NON_CRITICAL","isCritical","TYPES","HealthConfigModel","SchemaField","integer","nullable","variants","pc","useWoundsAndVigor","useWoundThresholds","allowWoundThresholdOverride","npc","getClassHD","continuity","woundThesholdOptions","HealthConfig","FormApplication","getData","healthRounding","healthContinuity","true","false","hdId","toLowerCase","defaultOptions","tabs","navSelector","contentSelector","group","submitOnChange","submitOnClose","closeOnSubmit","_onReset","_onSave","dry","SettingsConfig","reloadConfirm","world","activateListeners","bind","_updateObject","formData","ExperienceConfigModel","disable","track","openDistributor","disableExperienceTracking","openXpDistributor","ExperienceConfig","_settings","enabled","hasCustomFormula","const","progressionOptions","slow","fast","form","_onSaveConfig","stopPropagation","AccessibilityConfigModel","TokenTooltipWorldConfigModel","portrait","hide","hideHeld","hideArmor","hideBuffs","hideConditions","hideClothing","hideActorNameByDisposition","minimumPermission","DOCUMENT_OWNERSHIP_LEVELS","LIMITED","hideActorNameReplacement","hideActorName","TooltipWorldConfig","_cachedData","tokenNameDisposition","permissions","NONE","OBSERVER","OWNER","reportValidity","TokenTooltipConfigModel","hideWithoutKey","anchor","x","y","offset","onMouse","maxSize","TooltipConfig","canvasRect","view","getBoundingClientRect","screen","halfWidth","halfHeight","r1","r2","preview","hideKey","_handleImmediateChange","_openWorldSettings","tagName","checked","dtype","can","IntegrationModel","diceSoNice","dragRuler","enhancedTerrainLayer","IntegrationConfig","dsnFound","modules","drFound","etlFound","PerformanceModel","reachLimit","PerformanceConfig","model","jq","reachLabel","passive","table","TooltipPF","Application","mousePos","clientX","clientY","hidden","_setPosition","forceHideGMInfo","forceHide","sticky","stickied","popOut","clientConfig","worldConfig","actorConfig","style","visibility","disposition","TOKEN_DISPOSITIONS","SECRET","unbind","clearBind","maxWidth","maxHeight","url","fullInfo","hideName","conditionId","hideFromToken","held","clothing","elSize","position","left","top","sb","sidebar","mw","mh","minPos","maxPos","pos","clamped","show","toggle","force","loadableContent","loadableContentCount","loadedContentCount","one","tokenHover","hovering","elementFromPoint","enable","setPosition","registerSystemSettings","register","scope","Boolean","onChange","migrations","isMigrating","registerMenu","hint","restricted","requiresReload","imperial","metric","rounded","exact","perception","initializeLighting","initializeVision","refreshLighting","refreshVision","FRIENDLY","NEUTRAL","HOSTILE","TokenConfig","chat","refreshSheets","reset","_applyRenderFlags","redrawEffects","migrateSystemSettings","storage","removeItem","getSkipActionPrompt","skipConfirmPrompt","D20RollPF","Die","staticRoll","_formula","number","faces","getFormula","critical","TEN","TWENTY","d20","isCrit","_evaluated","isNat20","isNat1","isMisfire","misfire","isStatic","isNormal","standardRoll","bonusTerms","promptDialog","DIALOG_TEMPLATE","renderData","rollModes","Dice","dialogOptions","Dialog","renderOptions","wait","_onDialogSubmit","takeTen","STATIC_ROLL","takeTwenty","jQuery","_getFormData","FormDataExtended","baseDice","toMessage","messageData","chatTemplate","CHAT_TEMPLATE","chatTemplateData","isAbnormal","abnormalTooltip","compendiumEntry","compendium","compendiumEntryType","noSound","applyRollMode","_evaluate","_applyBonus","_applyStaticRoll","_evaluateSync","newTotal","_total","ItemAction","_sheet","apps","normalMaterial","material","addonMaterial","addon","alignments","description","isCombatManeuver","actionType","activation","unchained","newActionData","defaultDamageType","FALLBACK_IMAGE","createTag","isSelfCharged","uses","self","isCharged","cost","getChargeCost","charges","ammo","ammoType","loot","extraType","hasAttack","hasMultiAttack","exAtk","extraAttacks","manual","autoDeductCharges","per","useSpellPoints","spellPointCost","autoDeductChargesCost","getDefaultChargeFormula","isSingleUse","getRange","minRange","maxRange","baseRange","units","minValue","rangeType","minUnits","singleIncrementRange","maxIncrements","hasTemplate","hasDamage","critRange","getPowerAttackMult","mult","powerAttack","naturalAttack","primaryAttack","damageMult","hasRange","hasEffect","effectNotes","hasSave","getDC","dcBonus","baseDCFormula","dc","dcSchoolBonus","school","universalDCBonus","dcFormula","hasSound","soundEffect","enhancementBonus","isRanged","isSpell","damageSources","contexts","actionTypeToContext","getContextChanges","allDamageSources","conds","conditionals","mods","fakeCondChanges","isModifier","allChanges","cl","duration","maxFormula","color","attackName","attackBonus","critConfirmBonus","critParts","nonCritParts","attack","critMult","attackNotes","damageBonus","critMultiplier","nonlethal","splash","touch","spellEffect","area","lawful","chaotic","evil","_prepareConditionals","maxUses","canHold","isQuasiPhysical","conditional","ItemConditional","promises","submit","Promise","updateData","prevData","newUpdateData","performDeletions","keepPaths","path","getChatData","chatDataOptions","actionId","getLabels","actionData","labels","isUnchainedActionEconomy","activationTypes","abilityActivationTypes_unchained","abilityActivationTypes","activationTypesPlural","abilityActivationTypesPlurals_unchained","abilityActivationTypesPlurals","activationType","special","filterJoin","totalDC","threshold","sourceUnits","rangeLabel","distanceUnits","rangeUnit","itemActionTypes","attackSources","isNatural","rollAttack","extraParts","isCMB","sizeBonus","proficiencyPenalty","masterwork","proficient","getProficiency","isNaturalSecondary","secondaryPenalty","rollOptions","ammoCost","rollDamage","conditionalParts","ablMult","abilityDamageHeldMultipliers","extra","isExtra","Infinity","ablDamage","ablLabel","part","rollParts","getConditionalTargets","conditionalTargets","_label","getConditionalSubTargets","misc","hasProperty","getConditionalModifierTypes","damageTypes","getConditionalCritical","crit","nonCrit","getAttacks","full","resolve","bonuses","exAtkCfg","unnamedAttack","unnamedAttackNames","getUniqueName","attackCount","attacks","fullAttack","unchainedEconomy","parseAttacks","countFormula","bonusFormula","bonusLabel","exAtkCount","formulaicAttack","iteratives","iterativeExtraAttacks","iterativeAttackModifier","condBonuses","fill","sc","bonusRoll","atk","totalBonus","getAttackSources","use","component","ItemActionSheet","ChatAttack","actionUse","critConfirm","hasCritConfirm","AttackDamage","damageRows","critDamage","hasCards","cards","effectNotesHTML","notesOnly","setAction","setAmmo","ammoId","ammoItem","setRollData","critCount","setEffectNotesHTML","enrichOptions","notes","addAttack","noAttack","ccKeys","ccKey","sourceDetails","broken","getDefenseDC","armorAsDR","baseCritMult","critMultBonus","addDamage","repeatCount","repeat","totalDamage","properties","nnl","addEffectNotes","noteSources","getContextNotes","ns","note","explosionRadius","explode","measureUnitsShort","ft","finalize","ERR_REQUIREMENT","freeze","NO_ACTOR_PERM","DISABLED","INSUFFICIENT_QUANTITY","INSUFFICIENT_CHARGES","MISSING_AMMO","INSUFFICIENT_AMMO","ActionUse","templateData","checkRequirements","chargeCost","chargeCostBonus","createAttackDialog","AttackDialog","alterRollData","useOptions","clCheck","haste","manyshot","rapidShot","abilityMult","atkBonus","dmgBonus","pointBlankShot","manyShot","useMeasureTemplate","abilityDamageMultOverride","basePowerAttackBonus","powerAttackBonus","paMult","powerAttackPenalty","casterLevelCheck","concentrationCheck","generateAttacks","forceFullAttack","allAttacks","ActionUseAttack","ammos","getAmmo","abundant","autoSelectAmmo","identified","price","setFlag","_filterAmmo","defaultAmmo","isDefault","subtractAmmo","ammoUsage","usage","updateEmbeddedDocuments","updateAmmoUsage","chatAtk","chatAttack","handleConditionals","conditionalData","conditionalRoll","partString","flavoredFormula","conditionalPartsCommon","checkAttackRequirements","spontaneous","preparation","maxCharges","generateChatAttacks","addAttacks","addEmptyAttack","hasAmmo","saveDC","addFootnotes","_getConditionalParts","conditionalTemplates","addPart","templateKey","templateStr","parsedStr","powerAttackCritBonus","chatAttacks","typeMap","rsak","rwak","twak","rcman","mwak","msak","mcman","isAttack","getContextNotesParsed","footnotes","promptMeasureTemplate","mt","dist","templateOptions","origin","Color","AbilityTemplate","actorSheet","sheetRendered","_element","drawPreview","place","handleDiceSoNice","dice3d","isEnabled","chatData","mergeRolls","skipRolls","showRoll","pools","whisper","pool","showForRoll","blind","attackPool","critPool","getMessageData","OTHER","alias","props","extraText","enrichNotes","itemChatData","chatcard","addGenericPropertyLabels","header","combatProps","addCombatPropertyLabels","clNotes","dcSchoolNotes","clSchoolNotes","identifiedDescription","unidentifiedDescription","actionDescription","gmSensitiveLabel","usystem","rangeUnits","spellFailure","somatic","arcaneSpellFailure","spellFailureRoll","spellFailureSuccess","generateChatMetadata","actionName","renderContext","totalChargeCost","atWill","showInAction","statuses","materialKey","materialAddons","normalMaterialAction","normalMaterialItem","baseMaterialItem","addonMaterialAction","addonMaterialItem","materialTypes","materialAddonNames","actionAlignments","itemAlignments","alignment","attackPenalty","woundThresholds","woundThresholdConditions","attackIndex","attackRolls","toJSON","damageIndex","damageRoll","sl","executeScriptCalls","scriptData","postMessage","skipDialog","hideChat","hiddenData","getTokensWithin","combatant","isDefeated","_getDefenseDCParts","check","babIdent","prepareChargeCost","process","measureResult","reqErr","code","perAttack","reject","premessage_promises","totalCost","addCharges","updateTokenTargets","broadcastActivity","hasIdentifier","hasChanges","_preCreate","preCreateData","_onCreate","userId","changed","_preUpdateNumericValueGuard","allowUpperCase","camelCase","_chargePreUpdate","link","_onDelete","getLinkedItemsSync","memoryVariables","baseMaterial","firstAction","defaultAction","weapon","isProficient","isOwned","parentItem","hasAction","hasFiniteCharges","getDefaultChargeCost","recharge","period","commit","_rechargeUses","actionUpdate","_rechargeActions","limitedUsePeriodOrder","rechargeFormula","changedActions","auraStrength","parentActor","limited","permission","isEmbedded","fullDescription","getDescription","body","actionTypes","defaultContextNote","ContextNote","showUnidentifiedData","prepareLinks","_prepareChanges","_prepareScriptCalls","wgroups","weaponGroups","g","_initialized","_prepareDependentData","_updateMaxUses","_prepareActions","_prepareIdentifier","inContainer","adjustContained","cn","_updateInheritedCharges","recursive","scriptCalls","sid","scriptCall","ItemScriptCall","extraParams","scripts","execute","cause","rootItem","_transformContainerUpdateData","memorizeVariables","containerItem","baseUpdate","_memoryVariables","memKeys","_onUpdate","startTime","time","worldTime","_onMemorizedUpdate","oldLevel","previous","every","iuses","getRawEffectData","getScriptCalls","displayCard","altChatData","isVersatile","hasExtraProperties","extraProperties","pfFlags","identifiedInfo","canPopout","unidentified","childTypeDistinct","childType","distanceValues","saveDesc","timePeriods","enhBonus","getTypeChatData","harmless","actionID","ev","getActiveTokens","originalEvent","isSafeInteger","enumerable","descriptionOnly","chatCard","ActionSelector","open","usesAmmo","getContextStack","addStatic","classTag","dFlags","bFlags","fromEntries","boolean","resizing","chatListeners","_onChatCardButton","_onChatCardToggleContent","card","isAuthor","_onChatCardAction","asNonlethal","tags","attackType","instances","damageRolls","dmg","ActorPF","applyDamage","ammoQuantity","recoveryData","ammoRecovery","failed","recovered","chance","recoverChance","random","display","popout","canCreateItemLink","linkType","dataType","targetItem","itemLink","sameActor","linkOnActor","targetLinks","deeptarget","generateInitialLinkData","extraData","packageType","createItemLink","itemUpdate","itemUpdates","getLinkedItems","includeLinkData","_results","l","relative","linkData","getAllLinkedItems","removeItemLink","linkItems","getLinkItem","getLinkedItemSync","getChangeTargets","actorSkills","s2","skl2","getChangeSubTargets","getValue","addItemBooleanFlag","flagName","removeItemBooleanFlag","hasItemBooleanFlag","getItemBooleanFlags","setItemDictionaryFlag","dictionary","removeItemDictionaryFlag","getItemDictionaryFlag","getItemDictionaryFlags","getAttackArray","attackArray","describePart","changeSources","effectiveChanges","ic","ablMod","virtualEnh","secondaryModifier","getAllDamageSources","ItemAttackPF","hasWeaponProficiency","fromItem","srcData","attackItem","weaponSubtype","timeworn","cursed","artifact","baseTypes","attackTypes","wcat","wtype","cat","weaponTypes","ItemBuffPF","start","_updateTrackingEffect","oldEffect","aeData","ActiveEffect","_preDelete","buffTypes","unit","timePeriodsShort","_prepareDuration","_prepareTraits","seconds","NaN","roundTime","totalSeconds","getDuration","createData","endTiming","end","initiative","ae","ItemClassPF","classLinks","classAssociations","_onLevelChange","casting","bookData","createSpellbook","prevLevel","usedBook","book","inUse","newLevel","curLevel","newAssociations","Map","itemsCreationData","_typeSorting","SORT_INTEGER_DENSITY","associations","itemIds","deleteDocuments","mythicTier","progression","domainSlots","cantrips","saveFormulas","classSavingThrowFormulas","classType","saveData","saveType","goodSave","babFormulas","classFractionalBABFormulas","classBABFormulas","babType","babFormula","babBase","_registerOnActor","isBaseClass","isMythic","unlevel","isBase","alt","customHD","classTypes","classBAB","saves","classSavingThrows","hitDie","hasFCB","ItemPhysicalPF","_resetChargesOnQuantityUpdate","hardness","oldQuantity","newQuantity","oldUses","weight","converted","prepareWeight","baseWeight","getWeightMultiplier","convertWeight","_getArmorWeightMultiplier","actorSize","itemSize","armorWeight","sellValue","inLowestDenomination","forceUnidentified","single","identical","maxChargesValue","remainingCharges","getActualValue","pricePerUse","isIdentified","hpMax","checkYes","checkNo","carried","canEquip","ItemConsumablePF","consumableTypes","ItemContainerPF","_containedItemUpdate","oldItem","dryRun","fallback","temp","weightReduction","reduction","percent","currency","_calculateCoinWeight","_prepareInventory","weightMult","currencyWeight","contents","reductionFlat","getContainerContent","createContainerContent","itemsData","renderSheet","itemOptions","actuallyCreated","allowed","noHook","_stats","coreVersion","version","systemVersion","createdTime","now","lastModifiedBy","vtt","createContained","deleteContainerContent","embeddedName","actuallyDeleted","removeContained","updateContainerContents","actuallyUpdated","modifiedTime","updateContained","getTotalCurrency","pp","gp","sp","cp","convertCurrency","convert","pad","divisor","coins","fullOptions","cpValue","totalValue","ItemEquipmentPF","subtype","equipmentSubtype","subtypes","equipmentTypes","slot","slotType","slotTypes","equipmentSlots","eType","typeKeys","eSubtype","subtypeKeys","showIdentified","subtypeLabels","armorValue","acpEffective","mdex","dex","hasSlots","shield","wondrous","applyEquippedEffects","shieldTypes","shieldType","heavy","tower","armorTypes","armorType","hasArmorProficiency","baseArmorProficiency","lightArmor","mediumArmor","heavyArmor","lightShield","heavyShield","towerShield","ItemFeatPF","abilityType","featTypes","featType","abilityTypes","short","traitType","traitTypes","raceType","raceTypes","traitCategory","racialTraitCategories","abilityTypeLong","ItemLootPF","lootTypes","unequippableLoot","ItemRacePF","oldRace","race","newSize","oldSize","_pf1SizeChanged","speedUpdates","speeds","flyManeuverability","templatePaths","preloadHandlebarsTemplates","loadTemplates","renderCachedTemplate","Handlebars","partials","allowProtoMethodsByDefault","allowProtoPropertiesByDefault","preventIndent","ItemSpellPF","_assignLevelOnCreate","prep","prepUpdate","maxAmount","preparedAmount","spontaneousPrepared","spellPreparationMode","_preparationPreUpdate","current","learnedAt","spellLevels","getSpellComponents","compact","getEffectiveSpellLevel","spellLevel","getEffectiveCasterLevel","casterLevel","psychic","verbal","compat","oldk","newk","getOwnPropertyDescriptor","descs","descriptors","spellDescriptors","spellAbility","getMinimumCasterLevelBySpellData","isSpontaneous","spellbookKey","curUses","getSpellUses","newCharges","actorUpdateData","spellPoints","useSystem","slOffset","clOffset","reSplit","traitSeparator","srcComponents","srcMaterials","materials","kind","isDivine","spellComponents","thought","emotion","dfVariants","df","divineFocus","classId","tc","classCasterType","_replaceConsumableConversionString","string","toConsumable","origData","spellType","isWand","isPotion","isScroll","minLevel","minCl","materialPrice","gpValue","unidentifiedName","aura","xsrc","wand","pages","scroll","potion","osrc","convertNotes","arrKey","rlabel","rvalue","bAtk","dmgPart","oldSaveDC","desc","charcard","toConsumablePrompt","allowSpell","documentClasses","getFormData","createConsumable","isNPC","canCast","isDomain","domain","getDescriptionData","subschool","descriptor","classNames","act","activationCost","activationTypesPlurals","castingTime","durationFormula","variableDuration","dismiss","rangeValue","rf","rt","rl","savingThrowDescription","savingThrow","useDCandSR","slotCost","ItemWeaponPF","newWeaponType","wType","wSubtype","weaponProperties","ItemImplantPF","implanted","implantTypes","implantSlots","cybertech","none","Spellbook","bookKey","addSpell","SpellbookLevel","SpellbookSlots","domainMax","domainUnused","used","SpellRanges","SpellbookMode","isHybrid","isPrestige","isPrepared","usesSpellpoints","isSemiSpontaneous","sharedVision","menu","documentId","visionSharingSheet","offsetTop","window","innerHeight","innerWidth","VisionSharingSheet","ActorSheet","sheetConfig","levels","players","_getHeaderButtons","Resource","itemFlags","containerItems","_visionSharingSheet","_onChatCardButtonAction","saveId","rollSavingThrow","character","_getSourceLabel","typeLabel","_prepareContainerItems","getContainerContents","container","_prepareItemFlags","allItems","dEntries","uniqueId","applyActiveEffects","prepareConditions","expireActiveEffects","timeOffset","expiredEffects","rounds","startRound","disableActiveEffects","deleteActiveEffects","disableBuffs","reason","deleteAEContext","disableAEContext","resources","_resetInherentTotals","_prepareNaturalReach","pf1PrepareBaseActorData","mythic","undrained","drain","userPenalty","refreshAbilityModifiers","_prepareClassSkills","status","getReach","stature","skillSet","actorItems","relevantActorItems","classSkillName","isClassSkill","classSkills","aprof","armorProf","profs","customTotal","prof","wprof","weaponProf","_updateSpellBook","cache","isSchool","bookClassId","bookClass","_generateSpellbookCache","bookInfo","spellbookAbility","spellSlotAbilityScoreBonus","spellSlotAbilityBonusFormula","spellSlotAbilityScore","spellSlotAbilityMod","clTotal","autoSpellLevelCalculation","autoFormula","autoSpellLevelCalculationFormula","autoBonus","autoTotal","autoSpellLevelTotal","clBonus","concentration","concFormula","concentrationFormula","formulaRoll","rollBonus","classAbilityMod","prevTotal","getAbilityBonus","getSpellSlotIncrease","useAuto","autoSpellLevels","casterType","casterProgression","castsPerDay","castsForLevels","classLevel","allLevelModFormula","allLevelMod","levelData","spellsForLevel","spellsPreparedPerDay","offsetFormula","hasCantrips","slots","domainSlotValue","levelSpells","lvlSlots","excess","mismatchSlots","invalidSlots","maxLevelByAblScore","preparedAllOffsetFormula","spellLevelData","noAbilityLimit","hasIssues","lowAbilityScore","known","unused","domainSlotMax","available","preparedOffsetFormula","lowLevel","dSlots","acc","domainSlotsRemaining","invalidKnown","mismatchKnown","spellClass","bookKeys","allSpells","updateSpellbookInfo","maxDexBonus","maxBonus","encPen","_computeEncumbrance","gearPen","_applyArmorPenalties","encumbrance","gear","acpSkill","creatureType","humanoid","quadruped","prepareProficiencies","updateItemResources","natReach","prepareSpecificDerivedData","prepareCMB","prepareItemLinks","_prepareOverlandSpeeds","warnOnDuplicate","_setSourceDetails","overland","overlandSpeed","proficiencies","armorProficiencies","weaponProficiencies","languages","validItems","translations","customProficiencies","hasInfo","proficiency","customProfs","shrAtk","genAtk","general","cmbAbl","cmbAbility","cmbAblMod","cmb","pf1PrepareDerivedActorData","ab","baseMod","totalAtk","updateWoundThreshold","arbitrarySkills","backgroundSkills","background","acAbl","acTouchAbl","cmdDexAbl","dexAbility","acAblMod","acTouchAblMod","cmdDexAblMod","maxDex","flatFooted","acAblKey","flatFootedTotal","reducedSpeed","encLevel","encLevels","encumbranceLevels","noHeavyEncumbrance","noMediumEncumbrance","eqData","_prepareArmorData","heavyArmorFullSpeed","mediumArmorFullSpeed","speedValue","unhindered","getReducedMovementSpeed","encACPPPenalty","encMaxDex","encLabel","maxDexLabel","NumberFormat","signDisplay","valueAsNumber","attackACPPenalty","eqType","isShieldOrArmor","itemACP","bsInfo","mDex","isInteger","itemMDex","ignoreNull","sInfoA","brokenId","totalACP","linkedItem","linked","bt","hpconf","hpconfvariant","wtData","getWoundThresholdData","fk","woundThresholdChangeTargets","dexDenied","changeGrp","sourceGroups","grp","srcValue","displayValue","_getInherentTotalsKeys","vigor","armorBonus","shieldBonus","skillKeys","_getBaseValueFillKeys","getLevelExp","oldData","_syncProtoTokenSize","maxVigor","excessVigorDamage","absoluteKeys","ablData","absKey","setConditions","prototypeToken","staticSize","tokenSizes","w","sourceUser","senses","ll","visionSharing","visionUpdate","_syncSenses","_updateTokenSize","protoTexture","scaleX","scale","scaleY","TokenDocument","_onCreateDescendantDocuments","arguments","updateConditionTracks","_handleConditionTracks","previousConditions","tracks","trackedConditions","conditionGroup","disableConditionId","_conditionToggleNotify","_onDeleteDescendantDocuments","updatedConditions","_cleanItemLinksTo","toRemove","_enumChildren","child","deleted","res","createAttackFromWeapon","oldBook","skillIdParts","mainSkillId","isSubSkill","parentSkill","skillCompendiumEntries","rollSkill","skillDataPathPart","haveParentSkill","noteObjects","formatContextNotes","cf","land","swim","climb","d20Roll","rollBAB","rollCMB","maneuver","ranged","atkData","atkAbl","reverse","wT","getDefenseHeaders","damageResistances","damageVulnerabilities","headers","dr","eres","dv","cres","di","conditionTypes","getInitiativeContextNotes","notesHTML","notesHTMLParts","rollInitiative","createCombatants","rerollInitiative","initiativeOptions","getDocumentClass","isToken","toCreate","inCombat","sceneId","actorId","untokened","savingThrowId","changeBonus","rollAbilityTest","abilityId","checkMod","displayDefenseCard","acNoteObjects","acNotes","cmdNoteObjects","cmdNotes","srNoteObjects","srNotes","saveNotesObjects","saveNotes","drNotes","parseResistances","energyResistance","immunity","vulnerability","showInDefense","wTlabel","fastHealing","regen","_deprecatePF1PrefixConditions","newKey","toggleCondition","hasCondition","setCondition","TypeError","newTrackState","disableTrackEntries","toDelete","immunities","currentCondition","oldAe","autoDelete","deleteContext","trender","type2","translatedType","type1","damages","resistances","counter","shortName","forceDialog","reductionDefault","dualHeal","asWounds","healingInvert","Token","numReg","_submit","val","dR","tok","actorType","tmp","currentHealth","woundAdjust","dt","newHP","nld","newHp","dialogData","healing","damageReduction","inp","swapSelected","chk","setReduction","mouseWheelAdd","increase","sign","deltaY","addTempHP","curTHP","newTHP","getWoundThresholdMultiplier","wt","woundMult","woundLevel","variant","penaltyBase","curHP","tempHP","maxHP","wtMult","wtMod","changeFlatKeys","curValue","ch","allSkills","allNotes","noteSource","saveKey","miscKey","spellbookNotes","concentrationNotes","noteObj","subnote","carry","getCarryCapacity","drag","carriedWeight","getCarriedWeight","carryStr","carryMultiplier","encumbranceMultipliers","encumbranceLoads","multiplierCount","pow","mergeCurrency","v2","getCurrency","currencies","deprecated","armorData","skipRefresh","temporaryRollDataFields","combats","viewed","hpKey","sizeChart","abilityMod","negLevels","parseAlignment","effectiveSize","reachStruct","getQuickActions","showInQuickbar","qi","haveAnyCharges","maxCharge","recharging","newMod","getFeatCount","feat","owned","discrepancy","int","bonusFeatFormula","resetSpellbookUsage","restorePoints","restoreFormula","restoreRoll","rechargeItems","rechargeOptions","_restingHeal","hours","longTermCare","heal","performRest","restoreHealth","restoreDailyUses","verbose","healUpdate","spellbookUpdates","restOptions","modifyTokenAttribute","attribute","isDelta","isBar","isResource","findOldMacro","macros","canExecute","visible","createItemMacro","macro","Macro","displaySheet","assignHotbarMacro","createActionMacro","actionMacro","createSkillMacro","skillInfo","createSaveMacro","saveName","createMiscActorMacro","getBookLabel","isMelee","hideRollInfo","cm","isBlind","hideGMSensitiveInfo","getIdentifiedBlock","hasCombinedName","_templateCache","remove","each","removeData","fromJSON","unescape","nroll","escape","JSON","stringify","alterAmmoRecovery","ia","alterTargetDefense","defenseData","actorUUID","applyAccessibilitySettings","conf","hideInvisibleTargets","targetsElem","ready","once","targetElems","hasVisible","isVisible","isObserver","removeProperty","getTokenByUuid","addTargetCallbacks","_mouseEnterCallback","_onHoverIn","hoverOutOthers","_mouseLeaveCallback","_onHoverOut","_imageClickCallback","shiftKey","panToToken","release","control","releaseOthers","imgElem","targetACClick","targetSavingThrowClick","createInlineRollString","hide3d","toAnchor","outerHTML","animatePan","center","ActorPFProxy","Proxy","construct","ItemPFProxy","measureTemplateTypes","MeasuredTemplate","prepared","low","med","high","hybrid","prestige","baseActorFilters","acpA","acpS","mDexA","mDexS","wis","cha","strMod","dexMod","conMod","intMod","wisMod","chaMod","strPen","dexPen","conPen","intPen","wisPen","chaPen","unskills","carryMult","strSkills","dexSkills","conSkills","intSkills","wisSkills","chaSkills","allChecks","strChecks","dexChecks","conChecks","intChecks","wisChecks","chaChecks","landSpeed","climbSpeed","swimSpeed","burrowSpeed","flySpeed","allSpeeds","aac","sac","nac","tac","ffac","wattack","sattack","mattack","nattack","rattack","tattack","wdamage","mwdamage","rwdamage","twdamage","rdamage","mdamage","ndamage","sdamage","allSavingThrows","ffcmd","mhp","spellResist","bonusFeats","bonusSkillRanks","defense","abilityChecks","sheetSections","interface","subTypes","racialAbility","inventory","equip","implants","consumable","tradeGoods","features","classFeat","trait","racial","combatlite","getIndex","catKey","sectKey","section","iface","nonaction","free","swift","immediate","move","standard","aoo","minute","hour","reaction","oh","na","ex","su","fine","tiny","sm","lg","huge","grg","col","tall","ng","cg","ln","tn","le","ne","ce","arrow","bolt","repeatingBolt","slingBullet","gunBullet","dragoonBullet","dart","siege","nonhumanoid","lgt","hvy","shl","twr","untyped","untypedPerm","dodge","inherent","deflection","morale","luck","sacred","insight","resist","profane","competence","circumstance","alchemical","sorcerer","wizard","cleric","oracle","druid","shaman","witch","alchemist","bard","hunter","inquisitor","investigator","magus","mesmerist","occultist","skald","spiritualist","summoner","summonerUnchained","antipaladin","bloodrager","paladin","ranger","bleed","deaf","deathEffects","disease","exhausted","mindAffecting","poison","polymorph","sleep","allAttack","hasteAttack","rapidShotAttack","allDamage","hasteDamage","rapidShotDamage","drug","rod","staff","pharmaceutical","meleeWeapon","meleeSpell","rangedWeapon","rangedSpell","aberration","animal","dragon","fey","magicalBeast","monstrousHumanoid","ooze","outsider","plant","undead","vermin","haunt","basic","trap","vehicle","personal","mi","spec","seeText","unlimited","turnStart","turnEnd","slotless","head","headband","eyes","shoulders","neck","chest","belt","wrists","hands","ring","feet","advanced","flurry","unflurry","clumsy","poor","average","perfect","arm","brain","ears","legs","spellsave","aboleth","abyssal","aklo","ancientosiriani","androffan","aquan","auran","azlanti","boggard","catfolk","celestial","common","cyclops","dark","draconic","drowsign","druidic","dwarven","dziriak","elven","giant","gnoll","gnome","goblin","grippli","halfling","hallit","ignan","infernal","jistka","kasatha","kelish","lashunta","munavri","necril","orc","orvian","osiriani","polyglot","protean","reptoid","rougarou","samsaran","sasquatch","shadowtongue","shoanti","sphinx","strix","sylvan","syrinx","taldane","tekritanin","tengu","terran","thassilonian","tien","treant","triaxian","undercommon","vanaran","varisian","vegepygmy","vishkanya","vudrani","yaddithian","day","week","tool","food","herb","adventuring","animalGear","reagent","remedy","treasure","entertainment","power","km","out","points","epic","monstrous","featSkills","magical","movement","offense","weakness","bs","bse","ts","tr","acr","apr","art","blf","clm","crf","dip","dev","dis","esc","han","hea","kar","kdu","ken","kge","khi","klo","kna","kno","kpl","kre","lin","lor","prf","pro","rid","sen","slt","spl","ste","sur","swm","umd","acid","air","cold","curse","darkness","death","earth","electricity","fire","languageDependent","meditative","pain","ruse","shadow","sonic","water","abj","div","enc","evo","ill","nec","trs","uni","arcane","divine","alchemy","inst","turn","month","year","magic","faith","social","campaign","cosmic","exemplar","faction","family","mount","region","religion","drawback","space","sea","axes","bladesHeavy","bladesLight","bows","crossbows","double","firearms","flails","hammers","monk","polearms","siegeEngines","spears","thrown","tribal","simple","martial","ato","blc","brc","dea","dst","dbl","fin","frg","imp","mnk","rch","sct","sma","slf","snd","spc","thr","trp","exotic","publicroll","gmroll","blindroll","selfroll","BaseFilter","compendiumBrowser","registerIndexFields","handledTypes","choice","activeChoiceCount","indexField","compendiumIndexFields","setup","prepareChoices","hasChoices","applyFilter","TEMPLATE","activeCount","field","root","UMD","highlightCallback","cb","NULL","targetLen","indexes","_indexes","len","highlighted","matchI","indexesI","opened","char","substr","prepare","prepareLowerInfo","_targetLower","_lower","_targetLowerCodes","lowerCodes","_nextBeginningIndexes","_bitflags","bitflags","score","prepareSearch","search","spaceSearches","containsSpace","searches","_info","getPrepared","targetPrepared","preparedCache","getPreparedSearch","searchPrepared","preparedSearchCache","limit","INT_MAX","isObj","INT_MIN","objResults","keyI","algorithm","preparedSearch","allowSpaces","algorithmSpaces","searchLower","searchLowerCodes","searchLowerCode","targetLowerCodes","searchLen","searchI","targetI","matchesSimpleLen","matchesSimple","successStrict","matchesStrictLen","nextBeginningIndexes","prepareNextBeginningIndexes","backtrackCount","matchesStrict","substringIndex","isSubstring","isSubstringBeginning","matchesBest","matchesBestLen","extraMatchGroupCount","uniqueBeginningIndexes","seen_indexes","first_seen_index_last_search","allowSpacesResult","strLen","lower","lowerCode","charCodeAt","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","prepareBeginningIndexes","lastIsBeginning","lastIsBeginningI","defaultScoreFn","segs","noResults","q","poll","peek","replaceTop","searchBitflags","go","resultsLen","limitedCount","targetsLen","scoreFn","keysLen","highlight","hOpen","hClose","matchesIndex","cleanup","clear","exports","module","CompendiumBrowser","expandedFilters","_query","_loadingInfo","_debouncedRender","debounce","resizable","scrollY","dragDrop","dragSelector","dropSelector","initializeBrowsers","compendiumClasses","ItemBrowser","FeatBrowser","SpellBrowser","ClassBrowser","RaceBrowser","CreatureBrowser","BuffBrowser","getIndexes","packNames","resultPromise","indexingPromises","finally","_mapEntry","__pack","__packLabel","__uuid","getUuid","__name","fuzzysort","normalize","_renderEntries","ENTRY_TEMPLATE","typeName","filterClasses","isPackIncluded","indexCount","entryCount","unorderedEntries","loadPackIndex","flat","indexed","getFilteredEntries","activeFilters","selectionStart","input","Function","selectionEnd","query","_entries","itemCount","filteredItemCount","loading","loadingInfo","_refocus","_priorState","RENDER_STATES","_initLazyScrolling","filterContent","filterId","_onClickEntry","_onReload","_onClearFilters","_onFilterHeaderClick","_onCustomSearchFilter","ContextMenu","_getEntryContextOptions","locked","canUserCreate","collections","importFromCompendium","clipboard","copyPlainText","_canDragStart","_onDragStart","dataTransfer","setData","setTimeout","_event","filterContents","listEnd","IntersectionObserver","observer","isIntersecting","currentCount","newEntries","unobserve","newHtml","insertAdjacentHTML","_dragDrop","rootMargin","observe","ActorTraitSelector","DocumentSheet","_searchFilter","searchIndex","_name","_searchIndex","_collator","lang","splitCustom","replaceAll","chosen","updateButton","_updateDocument","_onSubmit","preventRender","appId","_onCustomInput","_onActiveCustomInput","isComposing","last","customTag","_deleteCustomTag","customInput","_onSearch","SEARCH_INCLUDE_ID","els","Registry","_defaultData","namespace","unregister","registryObject","RegistryEntry","ObjectField","schema","DamageType","abbr","FilePathField","DamageTypes","CATEGORIES","MaterialType","treatedAs","intrinsic","primitive","ArrayField","hardnessMultiplier","healthPerInch","healthBonus","healthMultiplier","lightBlade","oneHandBlade","twoHandBlade","buckler","asf","incompatible","perPound","ammunition","lightWeapon","oneHandWeapon","twoHandWeapon","rangedOneHandWeapon","rangedTwoHandWeapon","enhancement","bonusPerPound","isAllowed","isValidAddon","MaterialTypes","DamageTypeSelector","damageCategorySortOrder","sortOrder","damageModifiers","dm","damageCategories","categoryObj","o2","idxA","idxB","_toggleDamageType","_onChangeData","dataPath","ActorResistanceSelector","isDR","originalEntries","damageOBJ","dType","operators","dtypes","dataCount","_onResistanceControl","_onResistanceChange","_onResistanceCustomChange","index2","updateValue","ActorRestDialog","PointBuyCalculator","actorAbl","ablValues","abilityCost","usedPoints","getSpentPoints","pointBuy","limitsArr","ldata","limits","invalidPoints","_onAbilityControl","Widget_ItemPicker","columns","_items","parentElem","rootElem","parseHTML","rowElem","itemElem","widthRate","offsetLeft","offsetBottom","_onClickItem","_cancelCallback","_onCancel","node","parentNode","cancel","attr","removeEventListener","LevelUpForm","simulacra","mold","unavailable","abilityScore","useBackgroundSkills","levelUp","upgrades","added","isEnhanced","isNull","isValid","isAvailable","isModified","hasPlayerOwner","DICE_ROLL_MODES","PRIVATE","_initData","_initChoices","isLevelUp","isNewClass","increaseLevel","addClassWizard","_prepareAssociations","assocs","hpOptions","icons","ICONS","visibilityOptions","messageVisibility","tier","tierAbilityScores","levelAbilityScores","delta","ranks","adv","next","_getNextAbilityScoreLandmark","isReady","hdt","gained","_getDefaultHealthOption","_getDefaultHitPoints","_prepareHealthData","hpConf","clsConf","newHD","oldHD","hpAbl","hpMod","cfg","isFavouredClass","getLevelData","totalHD","totalMythicTier","oldSaves","newSaves","bg","tempActor","isMindless","advSkillRanks","bgSkillRanks","perLevel","skillsPerLevel","backgroundSkillClasses","bgranks","backgroundSkillsPerLevel","_onClickAbilityScoreOperator","_openItemSheet","_onCommit","_onSkip","itemUuid","_adjustAbilityScore","_adjustAbilityScoreValue","abls","_adjustAbilityScoreCost","tierAbilityScoreMult","levelAbilityScoreMult","_initFCBChoices","_initHPChoices","maxLeft","_getHealthFormula","dieSize","_spoofHealthRoll","_getHealthRoll","_disableSheet","cardData","newFeatures","hpValue","fcKey","oldFeatCount","ablUpdate","_updateAbilityScore","featCount","createChatMessage","cursor","prevValue","levelAbilityScoreFeature","OOC","SELF","altCurrency","notification","order","_curRange","_calcTotal","trigger","_options","formField","amounts","_failed","i18nKey","_directoryDrop","docDestId","getDragEventData","destDoc","actorUuid","containerId","sourceDoc","allowConversion","sourceCurrency","destCurrency","originalSource","assign","totalAmount","totalSource","newSource","socket","emit","minRequired","inCopper","ActorSheetPF","_filters","sections","searchCompositioning","searchRefresh","searchDelay","searchDelayEvent","effectiveSearch","_itemUpdates","_hiddenElems","_skillsLocked","_expandedItems","currentPrimaryTab","_tabs","currentSpellbookKey","isMetricDist","owner","isEditable","isCharacter","hasHD","usesAnySpellbook","sourceData","skillsLocked","tactical","unchainedActions","inCharacterGeneration","hasProficiencies","numAttacks","iters","fromRange","hasCurrency","hasAltCurrency","enrichHTMLOptions","bio","biography","pBio","biographyHTML","pNotes","_prepareItem","sizeModifier","baseBonus","meleeAbility","rangedAbility","genericAttacks","calculateTotalItemValue","totalLabel","arbitrary","untrained","issues","_prepareSenseLabels","_prepareItems","_prepareSkillsets","_prepareSkills","woundThresholdOptions","_prepareHiddenElements","hiddenElems","magicItems","strength","auraStrengths","identifyDC","firstClass","inheritedEffects","appliedEffects","condImmunities","showInBuffsTab","immune","inherited","hasResource","hasUses","_canShowRange","attackSummary","isStack","destroyed","uncharged","xpUnbound","selected","customSource","svalue","_prepareSpellbook","usesSlots","canPrepare","lvl","sets","adventure","localeCompare","backgroundOnlySkills","skillsets","useBGSkills","skillRanks","bgAllowed","bgUsed","sentToBG","load","carryLabel","kg","lbs","pct","encumbered","aboveHead","offGround","dragPush","_moveTooltips","filterLists","_initializeFilterItemList","_onToggleFilter","_searchFilterChange","_searchFilterCompositioning","_onItemSummary","_onItemEdit","contextmenu","_hideShowElement","_onOpenCompendiumEntry","_onOpenCompendiumBrowser","_activateExtendedTooltip","deactivate","_onSpanTextInput","_adjustActorPropertyBySpan","_onInputText","_selectOnClick","_onRollAbilityTest","_onRollBAB","_onRollAttack","_onRollInitiative","_onRollSavingThrow","_onArbitrarySkillCreate","_onSkillCreate","_onSkillEdit","_onSkillDelete","_itemActivationControl","_onRollSkillCheck","_onTraitSelector","_onResistanceSelector","_onRest","_onPointBuyCalculator","_onControlAlignment","_onSensesSelector","_onItemCreate","_onItemDelete","_onItemGive","_onItemSplit","_onItemRoll","_quickChangeItemQuantity","_quickEquipItem","_quickCarryItem","_quickIdentifyItem","_itemPreparedToggle","_duplicateItem","_quickAction","_convertCurrency","_setFeatUses","el0","activate","direction","TooltipManager","TOOLTIP_DIRECTIONS","LEFT","_onLevelUp","_setSpellUses","_setMaxSpellUses","_onRollConcentration","_onRollCL","_setItemActive","_setBuffLevel","_onToggleCondition","_onEditCondition","_onToggleSkillLock","tooltipExtended","_getTooltipContext","paths","tooltipDirection","fullId","lazy","getSource","getNotes","noteObjs","subHeader","detail","cr","tD","tB","tR","tU","oD","oU","asfSources","itemASF","implant","empty","isBoolean","signed","formatter","actionDamage","strict","dmgSources","mu","featSources","skillSources","isBG","fcSkills","fullSkillId","mainId","parentElement","isNumber","newEl","noCap","endsWith","maxName","step","forbiddenClasses","allowRelative","replaceChild","readOnly","select","tip","cssText","_onDragSkillStart","skillElem","mainSkill","_onDragMiscStart","tab","_onDragSaveStart","_i","ul","_mouseWheelAdd","isInput","WheelEvent","ctrlKey","wheelStep","MouseEvent","setItemUpdate","_updateItems","oldEl","toNearest","_getSubmitData","for","hasClass","slideDown","slideUp","relevantAEs","bottom","dialog","getNumber","updatedata","openItemSummary","instant","summary","origValue","wheelEvent","handler","getSelection","anchorNode","removeAllRanges","keyHandler","parents","mainSkillData","_editSkill","isBackground","baseName","baseTag","allowUnderScore","SkillEditor","addCallback","deleteSkill","confirm","yes","rejectClose","SensesSelector","alignmentsShort","curQuantity","property","_prepareDuplicateItem","rename","searchUnusedName","newName","iter","currencyType","categoryId","sectionId","typeLabels","_sortNewItem","oldItems","isItemSameSubGroup","names","no","targetActorId","getActor","SplitStack","keep","savingthrow","_applySectionFilter","hasASF","hasSpellbooks","spellbookSections","spellbookSpells","_0","_1","ct","featureSections","ablType","typelabel","found","buffSections","attackSections","classSections","_hidden","spellbookData","quickActions","_searchFilterCommit","clearTimeout","blur","_createPlaceholders","_renderInner","preventClose","_onDropCurrency","_onDropItem","sourceItem","fromDropData","keepId","clearSort","_onSortItem","altKey","_alterDropItemData","_onDropItemCreate","fromActor","fromItemsDir","isClass","itemDatas","creationData","appOptions","specifier","clsId","ItemSelector","resultData","usedSpellbooks","_focusTabByItem","tabId","activateTab","isAlt","denomination","dragData","elems","changedData","nodeName","selectedIndex","calculateSellItemValue","sellMultiplier","placeholder","_disableFields","getElementsByTagName","ActorSheetPFBasic","ActorSheetPFCharacter","xpSettings","disableExperience","showXpBar","minimumExperience","hasClasses","hpSettings","xp","xpTrack","CHARACTER_EXP_LEVELS","ActorSheetPFNPC","_adjustCR","ActorSheetPFNPCLite","ActorSheetPFNPCLoot","itemValueDenomination","isLootSheet","baseCurrency","cpSellValue","noEquip","ActorSheetPFHaunt","ActorSheetPFTrap","disarm","ActorSheetPFVehicle","vehicleSizes","vehicles","convertibleKeys","convertDistanceBack","SpeedEditor","movementKeys","Widget_CategorizedItemPicker","hasVisibleChoices","_onClickCategory","first","scrollIntoView","block","ItemSheetPF","ItemSheet","_actionUpdates","itemType","canClassLink","isWeapon","isWeaponLike","isNaturalAttack","isImplant","isEquipment","hasClassLink","classData","hitDieSizes","wealth","inheritCharges","defaultChargeFormula","limitedUsePeriods","isRechargeable","isActivatable","showBothDescriptions","showIdentifiedData","unchainedActionEconomy","identify","strengthLabel","spellcasting","hasSpellbook","descriptionAttributes","decimals","constraints","fakeValue","inputValue","fakeName","isRange","disableEquipping","isClassFeature","isTemplate","skilldata","isCS","materialCategories","_prepareMaterialsAndAddons","alignmentTypes","_prepareAlignments","weaponCategories","equipmentCategories","hasMultipleSlots","hasSubCategory","topDescription","isCybertech","isSpontaneousLike","isPreparedSpell","isAtWill","spellbookChoices","n0","n1","DF","MDF","FDF","noDurationTiming","isMythicPath","favouredClassBonuses","isBaselikeClass","isRacialHD","isNPCClass","isPCClass","hasSpellType","canUseAmmo","invalidDefaultAmmo","showPriority","chData","isAdd","isSet","isValidType","changePriority","noteTargets","distanceUnit","_prepareContentSource","descriptionHTML","pIdentDesc","unidentDesc","pUnidentDesc","pTopDesc","pScripts","pLinks","_prepareLinks","_getContentSources","main","_selectContentSource","bookSources","extras","datestamp","publisher","date","edition","materialList","addonList","basicList","addons","basics","alignmentChoices","help","oldLinks","typedLinks","wmult","convertWeightBack","relativeKeys","setCustomValidity","_onHoverTooltip","tooltipType","_onHoverWeightTooltip","_onHoverPriceTooltip","mValue","inline","_validateFormula","hasActor","RIGHT","mousemove","_onActionEdit","_onActionSummary","_onActionControl","_openHelpBrowser","_onEntrySelector","ContentSourceEditor","indeterminate","_onScriptCallEdit","_onScriptCallControl","_openLinkedItem","_onTextAreaDrop","_onCreateChange","_onOpenChangeMenu","_onEditChange","_onNoteControl","_onNoteTargetControl","_createAttack","_createSpellbook","_onCardNoteControl","_onItemSelector","_onLinkControl","_onSpeedEdit","_setActionUses","_onScriptCallDrop","setActionUpdate","_updateActions","script","newScripts","edit","eventData","getContentLink","helpBrowser","openUrl","pf1Link","_canDragDrop","_onDrop","srcItem","targetActionID","prevActions","targetIdx","srcIdx","targetChangeId","removed","_onLinksDrop","oldApp","getUniqueActionName","_onDuplicateChange","_onDeleteChange","dismissLockedTooltip","ChangeEditor","noteIndex","sortable","part1","EntrySelector","ItemSheetPF_Container","_prepareContents","coinage","merge","_openItemSummary","animation","_onItemTake","_quickItemActionControl","_setItemUses","nextElementSibling","droppedItem","dropTarget","targetId","siblings","siblingId","SortingHelpers","performIntegerSort","ItemCreateDialog","_updateCreationData","initialData","getSubtypes","folders","_formatFolderSelectOptions","key0","label0","key1","label1","defaultName","folder","hasFolders","_createItem","defaultType","documentTypes","stopImmediatePropagation","promise","canCrit","hasCritDamage","hasNonCritDamage","chargedUsePeriods","showMaxChargeFormula","canInputRange","canInputMinRange","canInputDuration","itemName","itemEnh","usesSpellPoints","parentOwned","hasActivationType","showMaxRangeIncrements","isWeaponAttack","inheritedAmmoType","inheritedMisfire","ammoTypes","minRangeAvailable","subTargets","conditionalModifierTypes","conditionalCritical","inheritedHeld","weaponHoldTypes","heldAbilityMultiplier","paMultiplier","extraAttacksTypes","extraAttacksConfig","allowCustom","_onEditImage","_onAttackControl","_onDamageControl","_onClickDamageType","_onNoteEntryControl","_onConditionalControl","_onAlignmentChecked","ItemConditionalModifier","k3","damageParts","damagePart","clickedElement","conditionalElement","modifierElement","manualExtraAttacks","attackPart","FilePicker","browse","previousValue","reResult","conditionalIdx","modifierIdx","CheckboxFilter","baseFilter.BaseFilter","booleanOperator","BOOLEAN_OPERATOR","_choiceQuery","_debouncedFilterChoices","getChoicesFromConfig","configObject","labelKey","innerSet","innerKey","innerValue","hasControls","MIN_SEARCH_CHOICES","hasSearch","prepareBooleanOperator","fieldData","AND","observedValues","flatMap","toggleChoice","activeChoices","testMethod","OR","choiceQuery","choiceKey","SearchFilter","cleanQuery","matchingChoices","choiceSet","NumberRangeFilter","ItemTypeFilter","WeaponTypeFilter","WeaponSubtypeFilter","WeaponPropertyFilter","WeaponGroupFilter","EquipmentTypeFilter","EquipmentSubtypeFilter","ItemSlotFilter","ConsumableTypeFilter","MiscItemTypeFilter","ItemPriceFilter","ItemCasterLevelFilter","PackFilter","usedPacks","orderedPacks","TagFilter","SpellSchoolFilter","SpellSubSchoolFilter","SpellDescriptorFilter","SpellLearnedByClassFilter","configChoices","SpellLearnedByDomainFilter","SpellLearnedBySubdomainFilter","SpellLearnedByBloodlineFilter","SpellLevelFilter","activeLearnedAtFilters","activeLevelChoices","learnedAtChoice","learnedAtLevel","levelChoice","FeatTypeFilter","FeatClassFilter","ClassTypeFilter","ClassHitDieFilter","ClassBaseAttackBonusFilter","ClassSkillPointsFilter","ClassSavingThrowFilter","noneFilterResult","ClassFortitudeFilter","ClassReflexFilter","ClassWillFilter","CreatureTypeFilter","creatureTypes","CreatureSubTypeFilter","BuffTypeFilter","CreatureCRFilter","commonFilters.PackFilter","buffFilters.BuffTypeFilter","commonFilters.TagFilter","classFilters.ClassTypeFilter","classFilters.ClassHitDieFilter","classFilters.ClassBaseAttackBonusFilter","classFilters.ClassSkillPointsFilter","classFilters.ClassFortitudeFilter","classFilters.ClassReflexFilter","classFilters.ClassWillFilter","creatureFilters.CreatureCRFilter","featFilter.FeatTypeFilter","featFilter.FeatClassFilter","itemFilters.ItemTypeFilter","itemFilters.WeaponTypeFilter","itemFilters.WeaponSubtypeFilter","itemFilters.WeaponPropertyFilter","itemFilters.WeaponGroupFilter","itemFilters.EquipmentTypeFilter","itemFilters.EquipmentSubtypeFilter","itemFilters.ItemSlotFilter","itemFilters.ConsumableTypeFilter","itemFilters.MiscItemTypeFilter","itemFilters.ItemPriceFilter","itemFilters.ItemCasterLevelFilter","equipmentSubtypes","raceFilters.CreatureTypeFilter","raceFilters.CreatureSubTypeFilter","spellFilter.SpellSchoolFilter","spellFilter.SpellSubSchoolFilter","spellFilter.SpellDescriptorFilter","spellFilter.SpellLearnedByClassFilter","spellFilter.SpellLearnedByDomainFilter","spellFilter.SpellLearnedBySubdomainFilter","spellFilter.SpellLearnedByBloodlineFilter","spellFilter.SpellLevelFilter","typeString","learnedAtData","learnedAtLevels","learnedAtSource","_onClickAction","initAmmoUsage","initAttacks","isPrimaryAttack","_toggleExtraAttack","hasDamageAbility","isMeleeWeaponAttackAction","isRangedWeaponAttackAction","isFeat","canConfigureHeld","_onToggleFlag","_onChangeAttribute","_onSelectChange","_onToggleConditional","_onAmmoSelectClick","_onAmmoControlClick","_onAmmoClick","_unfocusElements","_hideExtraAttacks","_showExtraAttacks","resolveAttack","cancelable","translationString","setAttackAmmo","listElem","unsetFlag","attackBonusTotal","curAmmo","ChangeLogWindow","lastVersion","autoDisplay","_cache","dontShowAgain","xhr","XMLHttpRequest","onload","_processChangelog","response","statusText","responseURL","send","changelog","md","converter","showdown","Converter","latestVersion","latestMajor","latest","majorPatches","legacy","currentVersion","lines","line","makeHtml","patches","subtitle","isFlag","isFlat","_onEntryControl","_onEntryChange","newKeys","_onSaveSelection","HelpBrowserPF","_backwardHistory","_forwardHistory","_currentPage","extensions","defaultExtensions","noHeaderId","ghCompatibleHeaderId","prefixHeaderId","currentUrl","hasHistoryBack","hasHistoryForward","pageContent","slugify","getCurrentHistoryObject","contentElement","scrollTop","headerElement","getElementById","backInHistory","forwardInHistory","href","removeAttribute","regex","_offset","_string","foundrySrc","getRoute","ScriptEditor","_promises","awaitResult","resolved","resolvePromises","convertKeys","isMetric","noSystemVision","gridUnits","_callbacks","skillName","isStaticSkill","skillTag","documentType","skillCoreUpdateData","newData","oldSubSkillId","oldSkillId","tagChanged","msgOpts","documentClass","_openCompendiumEntry","_onCompendiumControls","canAdd","stub","_onAction","prompt","sidx","dropData","_onDropContentSource","dropIndex","moved","ExperienceDistributor","_bonusXP","_actors","getActorData","characters","getCharacters","npcs","getNPCs","getTotalExperience","getSplitExperience","bonusXP","addListener","_onClickActor","actorID","reward","_shouldActorBeSelected","xpString","toLocaleString","fromCombat","_createDocumentIdLink","idLink","isValidOp","_onChangeTargetControl","ItemDirectoryPF","ItemDirectory","renderUpdateKeys","SidebarTab","Troubleshooter","unlock","migrating","unlockPacks","report","kb","discord","channel","faq","helpmodule","_runMigration","migrateWorld","migrateModules","_openHelp","migrationButtons","ActorSelector","delay","compositioning","disableUnowned","ownership","showUnowned","searchOptions","gmActive","actorList","ownedActors","isDisabled","unownedActors","searchTerm","splitValue","slider","oldstack","newstack","newval","ActiveEffectPF","isTracker","isSuppressed","isTemporary","turns","addCombatTrackerContextOptions","menuItems","duplicateCombatantInitiativeDialog","combatantId","duplicateWithData","CombatPF","Combat","updateTurn","messageOptions","currentId","firstCombatant","rollerName","showInitiativeDialog","stop","getInitiativeRoll","_onNewTurn","_isForwardTime","advanceTime","skipped","_detectSkippedTurns","_handleSkippedTurns","_processEndTurn","_processTurnStart","_processInitiative","r0","t1","rd","roundChange","currentTurn","turnTimeOffset","started","xpCfg","CombatantPF","Combatant","updateResource","resource","_getInitiativeFormula","defaultParts","getLeftRight","SHIFT_KEYS","CTRL_KEYS","registerSystemControls","keybindings","uneditable","onDown","onUp","forceShowItem","controls","_hideTokenTooltip","_hideTokenTooltipGMInfo","_stickyTokenTooltip","keyDown","stickify","TokenDocumentPF","_preCreateSetSize","deleteFlags","sizeConf","getTrackedAttributes","getBarAttribute","barName","alternative","detectionModes","sight","visionMode","basicMode","DetectionMode","BASIC_MODE_ID","darkvision","trueseeing","trr","_sortDetectionModes","visionDefaults","Canvas","visionModes","vision","defaults","fieldName","PRIORITY","BasicActorPF","ActorCharacterPF","tokenUpdate","actorLink","_updateExp","xpData","totalXP","maxExp","curXp","ActorNPCPF","getCR","_prepareCR","newXP","crTotal","getCRExp","crOffset","CR_EXP_LEVELS","ActorHauntPF","prepareHealth","ActorTrapPF","ActorVehiclePF","strValue","szCMBMod","findItem","enrichers","matchItem","packTypePriority","PF1TextEnricher","pattern","enricher","global","setIcon","prepend","draggable","setElementOptions","getRelevantActors","as","asSpeaker","asSheet","getSheetActor","tokenActors","generateTooltip","option","onSave","onAbility","onDraw","ident","draw","displayChat","onSkill","onUse","actionIdent","itemAction","actionTag","onAction","msgId","onHealth","vars","dual","targetRolldata","onBrowse","browser","onCondition","onApply","activationData","replaceChildren","displayAction","NL","mainlabel","isDual","sourceMetric","sourceImperial","swapWeight","kgl","limitPrecision","lbsl","swapDistance","ml","ftl","tables","onEnrichedInteraction","withinAngle","normalizeDegrees","withinRect","point","rect","TemplateLayerPF","TemplateLayer","_onDragLeftMove","interactionData","destination","layerDragState","snapToGrid","grid","getSnappedPosition","gridPrecision","ratio","baseDistance","baseDirection","toDegrees","angle","halfAngle","renderFlags","refreshShape","MeasuredTemplatePF","getHighlightedSquares","_getGridHighlightPositions","templateType","isCone","isRay","gridSizePxBase","gridSizePx","gridSizeUnits","docAngle","x0","y0","x1","y1","sx","sy","e2","fromAngle","A","B","nr","nc","cx","cy","getCenter","col0","row0","getGridPositionFromPixels","minAngle","maxAngle","offsetMult","dir","cos","toRadians","sin","gx","gy","getPixelsFromGridPosition","rayAngle","PI","shape","ticker","addOnce","PIXI","UPDATE_PRIORITY","LOW","tCenter","maxDistance","sizeErrorMargin","isLargeToken","withinCone","rayWithinAngle","raySceneLength","getOccupiedCells","GRID_TYPES","GRIDLESS","mapCoordsToCell","highlightSquares","cell","highlightGrid","SQUARE","bc","borderColor","fillColor","hl","getHighlightLayer","highlightGridPosition","border","highlightId","rangeColor","multiply","reachColor","SquareHighlight","_squares","addHighlightLayer","addSquare","gridSize","AttackHighlightBase","clearHighlight","renderHighlight","GridlessHighlight","rangeStops","tw","th","rangeKey","rangeMeasurements","rangeIncrements","tokenOffset","removeChildren","circle","Graphics","stops","outer","beginFill","drawCircle","beginHole","endHole","endFill","addChild","SquareGridHighlight","currentHighlight","isFeet","squares","useReachRule","getReachSquares","ftDistance","userLimit","maxSquareRange","squaresExtra","gridDist","tokenSquares","tokenRect","getClosestTokenSquare","lowest","square","sqrt","squareRange","wMax","hMax","tl","closestSquare","shouldAddReachSquare","closestTokenSquare","dist2","reachRuleRange","attackReachHighlight","showAttackReach","addReachListeners","_onMouseEnterReach","_onMouseLeaveReach","_getTokenByUuid","TokenPF","effectId","disableLowLight","_isVisionSource","hasSight","guarantee","layer","_getBarBoost","_getBarUnderline","_drawBar","bar","boost","underline","boostlessMax","boostlessPct","fromRGBvalues","lineStyle","drawRoundedRect","posY","wr","hr","isSquare","TokenQuickActions","addQuickActions","activateElementListeners","after","DetectionModeInvisibilityPF","DetectionModeInvisibility","_testPoint","visionSource","_testLOS","_testRange","lightSource","lightSources","DetectionModeBlindSensePF","DETECTION_TYPES","walls","getDetectionFilter","_detectionFilter","OutlineOverlayFilter","outlineColor","knockout","wave","ID","_canDetect","DetectionModeBlindSightPF","DetectionModeTremorPF","DetectionModeTremor","MOVE","lighting","VisionMode","LIGHTING_LEVELS","DIM","originalAngle","initialLayer","activeLayer","activatePreviewListeners","handlers","pfStyle","_clear","destroy","throttleRefresh","throttle","timeoutId","RENDER_THROTTLE","mm","getLocalPosition","rc","canResolve","stage","lc","snap","controlIcon","removeAllListeners","hitArea","Polygon","maxArgs","isIntermediate","fromTerms","RealStringTerm","BooleanTerm","NullTerm","UndefinedTerm","IfElseTerm","ifTrue","ifFalse","rollOpts","IfTerm","LookupTerm","lookupResult","evalOffset","searchRoll","SizeReachTerm","noRoll","sizeDice","sizeReach","SizeRollTerm","sizeRoll","newConditionalData","_prepareModifiers","newConditionalModifierData","flattenObject","duplicate","newScriptCallData","getScriptBody","getDelegate","rawChange","scriptEditor","scm","registerHandlebarsHelpers","registerHelper","rng","combine","typeInfo","dtId","SafeString","fraction","dialogGetActor","dialogGetNumber","num","getItem","rates","maxRate","copper","omit","unflair","compress","isSimpleTerm","FormulaPart","triTermOps","simpleOnly","eterms","right","TernaryTerm","handleFormula","newformula","handleParts","dmgAbl","ablMax","dmgAblBaseMod","ablDmgMult","dmgAblMod","semiFinal","negativeTerms","nterms","nt","stringTerms","ternaryTerms","tterms","origCount","origSides","targetSize","initialSize","_getSizeIndex","currentDie","sizeDie","shifted","sides","d6Index","d8Index","sizeOffset","curSize","sys","deadCond","replacement","allowInitialNumbers","substring","docType","fuzzyIndex","filteredIndex","it","searchMutations","mut","getActors","unlinked","User","testUsers","sceneList","Scene","isLinked","item0","item1","compareVersion","align","neutral","renderForEveryone","resetOrRender","Document","ScriptCallCategory","ScriptCalls","Condition","Conditions","TRACKS","SET_TO_ZERO","URLField","_validateType","DateField","Source","optionalString","isbn","tieIn","Sources","companion","MigrationCategory","processed","invalid","errors","ignored","completed","startEntry","actionState","processing","finishEntry","recordError","ignoreEntry","addIgnored","setTotal","setInvalid","finish","currentName","CompendiumCollection","getInvalidEntries","invalidDocumentIds","getInvalid","getErrorEntries","MigrationState","callbacks","createCategory","mc","MigrationIssuesDialog","MigrationDialog","autoClose","_onMigration","_onClickForDetails","_state","RENDERING","_queueRender","materialChanges","nexavarianSteel","alchemicalsilver","angelskin","bloodcrystal","coldiron","darkleafcloth","eelhide","elysianbronze","fireforgedsteel","frostforgedsteel","griffonmane","liquidglass","livingsteel","singingsteel","spiresteel","marker","initializeStateAndDialog","migrateActors","noHooks","localState","tracker","migrateActorData","migrateItems","migrateItemData","migrateScenes","migrateScene","migrateCompendiums","packIds","migrateCompendium","clearCoreMessages","queue","fetch","wasLocked","migrate","getDocuments","migrateTokenData","tokenData","lowLightVision","lowLightVisionMultiplier","lowLightVisionMultiplierBright","customVisionRules","migrateToken","migrateActiveEffectsToItems","_migrateCharacterLevel","_migrateActorEncumbrance","_migrateActorNoteArrays","_migrateActorSpeed","_migrateActorSpellbookCL","_migrateActorSpellbookSlots","_migrateActorSpellbookPrep","wasSpontaneous","usesAuto","_migrateActorSpellbookKind","castingClass","_migrateActorConcentration","_migrateActorBaseStats","_migrateUnusedActorCreatureType","_migrateActorSpellbookDCFormula","_migrateActorHPAbility","_migrateActorCR","_migrateAttackAbility","_migrateActorDefenseAbility","_migrateActorSpellbookUsage","_migrateActorNullValues","_migrateActorSpellbookDomainSlots","_migrateActorStatures","_migrateActorProficiencies","_migrateActorInitAbility","_migrateActorChangeRevamp","_migrateActorCMBRevamp","_migrateCarryBonus","_migrateBuggedValues","_migrateSpellbookUsage","_migrateActorHP","_migrateActorSenses","_migrateActorInvaliddSkills","_migrateActorSkillRanks","_migrateActorSkillJournals","_migrateActorSubskillData","_migrateActorUnusedData","_migrateActorDRandER","_migrateActorTraitsCustomToArray","_migrateActorFlags","itemDoc","_migrateActorActiveEffects","_depth","_migrateItemArrayTypes","_migrateFlagsArrayToObject","_migrateWeaponImprovised","_migrateItemSpellDescription","_migrateClassDynamics","_migrateClassType","_migrateClassCasting","_migrateSpellDivineFocus","_migrateWeaponCategories","_migrateArmorCategories","_migrateArmorMaxDex","_migrateItemSize","_migrateItemFeatAbilityTypes","_migrateClassLevels","_migrateSavingThrowTypes","_migrateCR","_migrateItemChanges","_migrateItemChangeFlags","_migrateItemContextNotes","_migrateEquipmentSize","_migrateSpellCosts","_migrateSpellPreparation","prepMode","_migrateLootEquip","_migrateItemLinks","_migrateItemProficiencies","_migrateItemNotes","_migrateScriptCalls","_migrateItemActions","_migrateItemChargeCost","_migrateItemLimitedUses","_migrateItemWeight","_migrateItemHealth","_migrateContainerReduction","_migrateContainerPrice","_migrateItemType","_migrateItemLearnedAt","_migrateItemTuples","_migrateEquipmentCategories","_migrateSpellDescriptors","_migrateItemTraitsCustomToArray","_migrateItemMaterials","_migrateItemUnusedData","itemActionData","migrateItemActionData","diffObject","inventoryItems","sitem","subItem","itemUpdateData","subUpdate","migrateContainerItems","_migrateActionType","_migrateActionLimitedUses","_migrateActionRange","_migrateActionDamageParts","_migrateUnchainedActionEconomy","_migrateActionDamageType","_migrateActionConditionals","_migrateActionEnhOverride","_migrateActionPrimaryAttack","_migrateActionChargeUsage","_migrateActionExtraAttacks","_migrateActionAmmunitionUsage","_migrateActionHarmlessSpell","_migrateActionSpellArea","_migrateActionTemplate","_migrateActionDuration","_migrateActionMaterials","_migrateActionObsoleteTypes","_migrateActionUnusedData","migrateSceneTokens","migrateSceneActors","ent","updateKey","bflags","dflags","spellbookSlot","baseKey","maxKey","newBase","kList","curBase","curFormula","oldValue","isString","formulaKey","shortDescription","stKeys","weaponType","changeProp","two","oldType","exists","wdSize","newChanges","cd","oldChanges","updateChanges","oldNotes","newNotes","oldNote","newNote","updateNotes","noEncumbrance","autoDeduct","unchainedAction","newLink","muuid","_index","hiddenLinks","wprofmap","sim","mar","oldKeys","nwprof","hasOldAction","alreadyHasActions","removeKeys","spellDuration","oldSpellPointCostFormula","learned","spellArea","customColor","overrideColor","customTexture","overrideTexture","ma","tg","newMat","attackParts","formulaicAttacks","templateSize","durVal","damageGroupPaths","damageGroupPath","damageGroup","damageTypeData","_Action_ConvertDamageType","wprofs","nwprofs","subPath","sklData","subSklData","convertToInt","oldSenses","brightSight","reOldJournalFormat","subSkillData","oldDR","oldER","visionPermission","mapping","uid","damageTypeString","damageTypeList","tests","damageTest","testString","basePrice","materialPath","priceUnits","identifiedName","weaponData","useCustomTag","aeUpdate","migrateActiveEffectData","getNewRelativeOrigin","newOrigin","originFlag","migrateActor","migrateItem","migrateSceneData","migrateSystem","systemPacks","startMessage","smsgId","permanent","_migrateWorldSettings","globalThis","moduleToObject","_canvas","PF1CONST","opts","dice.RollPF","layers","layerClass","_canvas.TemplateLayerPF","objectClass","_canvas.MeasuredTemplatePF","_canvas.TokenPF","documents.actor.ActorCharacterPF","documents.actor.ActorNPCPF","documents.actor.ActorHauntPF","documents.actor.ActorTrapPF","documents.actor.ActorVehiclePF","documents.actor.BasicActorPF","documents.item.ItemAttackPF","documents.item.ItemBuffPF","documents.item.ItemClassPF","documents.item.ItemConsumablePF","documents.item.ItemContainerPF","documents.item.ItemEquipmentPF","documents.item.ItemFeatPF","documents.item.ItemLootPF","documents.item.ItemRacePF","documents.item.ItemSpellPF","documents.item.ItemWeaponPF","documents.item.ItemImplantPF","documents.TokenDocumentPF","documents.ActiveEffectPF","legacyTransferral","documents.CombatPF","documents.CombatantPF","documents.ChatMessagePF","applications.ItemDirectoryPF","dice.terms.fn","termTypes","dice.terms.aux","dice.D20RollPF","dice.DamageRoll","bonusModifiers","stackingBonusModifiers","setDefaultSceneScaling","gridDistance","Actors","unregisterSheet","registerSheet","applications.actor.ActorSheetPFCharacter","makeDefault","applications.actor.ActorSheetPFNPC","applications.actor.ActorSheetPFNPCLite","applications.actor.ActorSheetPFNPCLoot","applications.actor.ActorSheetPFHaunt","applications.actor.ActorSheetPFTrap","applications.actor.ActorSheetPFVehicle","applications.actor.ActorSheetPFBasic","Items","applications.item.ItemSheetPF","applications.item.ItemSheetPF_Container","LABEL","DETECTION_TYPE","SIGHT","initializeSocket","initializeModuleIntegration","integration","SpeedProvider","registerSystem","Pf1SpeedProvider","colors","getRanges","baseSpeed","getBaseSpeed","inHeavyArmor","inHeavyLoad","runMultiplier","useElevation","getSetting","elevation","burrow","registries","registry.DamageTypes","registry.MaterialTypes","registry.ScriptCalls","registry.Conditions","registry.Sources","registryName","registryClass","getConditions","SquareGrid","toLocalize","toLocalizeConst","toSort","doLocalize","localized","akey","aval","bkey","bval","localA","localB","doLocalizeKeys","localizeLabels","doLocalizePaths","ttconf","ttwconf","PREVIOUS_MIGRATION_VERSION","documents.settings.migrateSystemSettings","changelogVersion","curVersion","chatUtils.hideRollInfo","chatUtils.hideGMSensitiveInfo","chatUtils.addTargetCallbacks","chatUtils.alterTargetDefense","chatUtils.alterAmmoRecovery","documents.item.ItemPF","documents.actor.ActorPF","_canvas.attackReach.addReachListeners","_canvas.lowLightVision.addLowLightVisionToLightConfig","documents.customRolls","applications.CurrencyTransfer","macros.createItemMacro","macros.createActionMacro","macros.createSkillMacro","macros.createSaveMacro","macros.createMiscActorMacro","sizingTemplateData","sizeContent","systemVision","visionTab","enableCustomVision","toggleCustomVision","dmTab","visionContent","Settings","chlogButton","helpButton","tshooterButton","applications.ChangeLogWindow","expireFromTokens"],"mappings":"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,IACjBA,IAELlnB,IAAI2R,OAAO65D,WAAWtkD,GAAOxD,EAAE/O,KAAA,GAChC,IAKH+L,MAAMiwE,KAAK,SAAS,KAClB,IAAA,MAAY0H,EAAQ3lF,KAAa/S,OAAOC,QAAQ03F,GAC9C,IAAA,MAAYgB,EAASC,KAAY54F,OAAOC,QAAQ8S,GAAW,CACzD6lF,EAAQ7lF,SAAW2lF,EACnBE,EAAQz4F,GAAKw4F,EACbC,EAAQvjD,KAAO,GAAGqjD,KAAUC,IAE5BC,EAAQ/lF,MAAQtP,KAAK2H,KAAKC,SAASytF,EAAQ/lF,OAE3C,MAAMgmF,EAAQD,EAAQhB,UACM,mBAAjBiB,GAAOb,QACVa,EAAAb,MAAQa,EAAMb,QAEvB,CACF,qFAviBiC,CAClC73D,KAAM,CACJ,EACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,OAEFxnB,OAAQ,CACN,EACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MAEFynB,KAAM,CACJ,EACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,MACA,MACA,KACA,MACA,MACA,IACA,KACA,KACA,KACA,qBAQyB,CAC3B,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,mBAxgFuB,CACvBr6B,IAAK,iBACLy8D,IAAK,iBACL7sC,IAAK,iBACLi3D,IAAK,iBACLiH,IAAK,iBACLC,IAAK,iCAMuB,CAC5B/tF,IAAK,sBACLy8D,IAAK,sBACL7sC,IAAK,sBACLi3D,IAAK,sBACLiH,IAAK,sBACLC,IAAK,8CAkT+B,CACpCgF,UAAW,kCACXv0D,QAAS,gCACTw0D,KAAM,6BACNC,MAAO,8BACPC,UAAW,kCACXC,KAAM,6BACNC,SAAU,iCACVjgD,KAAM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,SAE3Bh5G,aAAeoiK,OAKfpiK,gBAAkB,CAChByiK,UAAW,OAGbziK,oBAAsB,CACpB,CACEqmB,IAAK,UACL7W,KAAM,gBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,oBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,eACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,aACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,aACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,aACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,aACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,aACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,uBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,0BACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,sBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,oBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,gBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,YACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,kBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,qBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,oBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,iBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,sBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,UACL7W,KAAM,oBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,QAER,CACEipB,IAAK,cACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN1oB,QAAQ,EACRn5G,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNiqG,KAAM,SACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gDACNiqG,KAAM,SACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uDACNiqG,KAAM,SACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,yDACNiqG,KAAM,SACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gDACNiqG,KAAM,SACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,kDACNiqG,KAAM,SACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,aACL7W,KAAM,6CACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,kDACNiqG,KAAM,UACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,0DACNiqG,KAAM,UACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,0DACNiqG,KAAM,UACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,qDACNiqG,KAAM,UACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wDACNiqG,KAAM,UACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,iDACNiqG,KAAM,UACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,iCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN1oB,QAAQ,EACRn5G,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,oCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNC,MAAO,iBACP3oB,QAAQ,EACRn5G,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,8CACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,yCACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,oCACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,aACL7W,KAAM,oCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gDACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,8CACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,yCACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,iDACNiqG,KAAM,QACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,aACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,+BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,aACL7W,KAAM,iCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,+CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,qCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,+CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,iDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,aACL7W,KAAM,+BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gDACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uCACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gCACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,kCACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,aACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,oCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,oCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,sCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,yCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,2DACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNiqG,KAAM,SACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,+CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,sCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,8CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,6CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,iCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,yCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,sDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,2DACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,6CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,sCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,kCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,yCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,iDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,8CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,kCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,kCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,+CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,yCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,8CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,6CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,+BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,qCACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,+CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,kCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,8CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,+CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,+BACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,8CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,sCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,qCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,8CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,kDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,iCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,mDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,6CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,kCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,kDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,+CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,yCACNw1H,KAAM,aACNpgE,MAAO,GACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,wDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,2DACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,yCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,2DACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,uDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,oDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,cACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,EACPnkC,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,oCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,8CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,WACL7W,KAAM,uCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,MAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,cACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,eACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,+BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,gCACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,eACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,uBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,iCACNw1H,KAAM,aACNpgE,MAAO,IACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,YACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,GACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,aACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,aACL7W,KAAM,uBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,cACL7W,KAAM,eACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,aACL7W,KAAM,uBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPi2I,KAAM,oBACNllK,KAAM,UAER,CACEipB,IAAK,aACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPv4C,MAAO,EACPjvB,KAAM,UAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNs9B,KAAM,oBACN1oB,QAAQ,EACRx8I,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNs9B,KAAM,oBACN7hI,IAAK,sCACLm5G,QAAQ,EACRx8I,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACN1oB,QAAQ,EACRx8I,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,qBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,6BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNC,MAAO,YACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,kBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,gBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,cACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,2BACNiqG,KAAM,QACNurB,KAAM,aACNs9B,KAAM,oBACNC,MAAO,mBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,iCACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,iBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,kBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNiqG,KAAM,MACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,yBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,eACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,2BACNiqG,KAAM,MACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,iBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,YACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,iBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,eACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,gBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,iBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,gBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,mBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,mBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,gBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,oBACNiqG,KAAM,KACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,oBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNiqG,KAAM,MACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,kBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,oBACNiqG,KAAM,MACNurB,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,oBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,0BACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNs9B,KAAM,oBACNC,MAAO,iBACPnlK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNs9B,KAAM,oBACNllK,KAAM,aAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,oDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,gDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,wCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,2DACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,0CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,oDACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,UACNw8I,QAAQ,GAEV,CACEvzH,IAAK,UACL7W,KAAM,4CACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,6CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,4CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,qDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,qDACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,UACNqjC,IAAK,uCAEP,CACEpa,IAAK,UACL7W,KAAM,uCACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,6CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,2CACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,4BACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,eACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,cACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,uBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iCACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,wBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,qBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,kCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,8BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,gCACNiqG,KAAM,OACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNiqG,KAAM,KACNurB,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,kCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,0BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,kBACNiqG,KAAM,MACNurB,KAAM,aACNpgE,MAAO,IACP09F,KAAM,oBACN7hI,IAAK,sCACLrjC,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,+BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,sBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,mBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,kBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,oCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,UACL7W,KAAM,4BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,2BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,oBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,yBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,iBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,qCACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,qBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,wBACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,WACL7W,KAAM,6BACNw1H,KAAM,aACNpgE,MAAO,GACP09F,KAAM,oBACNllK,KAAM,WAER,CACEipB,IAAK,YACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPxnE,KAAM,QACNqjC,IAAK,sCACLskG,UAAW,0BAEb,CACE1+G,IAAK,YACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPxnE,KAAM,QACNqjC,IAAK,sCACLskG,UAAW,0BAEb,CACE1+G,IAAK,YACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GACPxnE,KAAM,QACNqjC,IAAK,sCACLskG,UAAW,0BAEb,CACE1+G,IAAK,YACL7W,KAAM,gBACNw1H,KAAM,aACNpgE,MAAO,GAC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","x_google_ignoreList":[54]}