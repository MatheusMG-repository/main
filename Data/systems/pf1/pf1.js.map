{"version":3,"file":"pf1.js","sources":["module/documents/chat-message.mjs","module/utils/semver.mjs","module/dice/roll.mjs","module/utils/lib.mjs","module/canvas/low-light-vision.mjs","module/patch-core.mjs","module/compendium-directory.mjs","module/chatlog.mjs","module/utils/canvas.mjs","module/socket.mjs","module/documents/actor/actor-base.mjs","module/documents/item/item-base.mjs","module/documents/actor/utils/apply-changes.mjs","module/components/change.mjs","module/dice/damage-roll.mjs","module/applications/settings/health.mjs","module/applications/settings/experience.mjs","module/applications/settings/accessibility.mjs","module/applications/settings/tooltip_world.mjs","module/applications/settings/tooltip.mjs","module/applications/settings/integration.mjs","module/applications/settings/performance.mjs","module/applications/tooltip.mjs","module/documents/settings.mjs","module/dice/d20roll.mjs","module/components/action.mjs","module/action-use/chat-attack.mjs","module/action-use/action-use.mjs","module/documents/item/item-pf.mjs","module/documents/item/item-attack.mjs","module/documents/item/item-buff.mjs","module/documents/item/item-class.mjs","module/documents/item/item-physical.mjs","module/documents/item/item-consumable.mjs","module/documents/item/item-container.mjs","module/documents/item/item-equipment.mjs","module/documents/item/item-feat.mjs","module/documents/item/item-loot.mjs","module/documents/item/item-race.mjs","module/utils/handlebars/templates.mjs","module/documents/item/item-spell.mjs","module/documents/item/item-weapon.mjs","module/documents/item/item-implant.mjs","module/documents/actor/utils/spellbook.mjs","module/applications/vision-sharing.mjs","module/documents/actor/components/resource.mjs","module/documents/actor/actor-pf.mjs","module/documents/macros.mjs","module/utils/chat.mjs","module/documents/actor/actor-proxy.mjs","module/documents/item/item-proxy.mjs","module/config.mjs","module/const.mjs","module/applications/compendium-browser/filters/base.mjs","node_modules/fuzzysort/fuzzysort.js","module/applications/compendium-browser/compendium-browser.mjs","module/applications/trait-selector.mjs","module/registry/base-registry.mjs","module/registry/damage-types.mjs","module/registry/material-types.mjs","module/applications/damage-type-selector.mjs","module/applications/damage-resistance-selector.mjs","module/applications/actor/actor-rest.mjs","module/applications/point-buy-calculator.mjs","module/applications/item-picker.mjs","module/applications/level-up.mjs","module/applications/currency-transfer.mjs","module/applications/actor/actor-sheet.mjs","module/applications/actor/basic-sheet.mjs","module/applications/actor/character-sheet.mjs","module/applications/actor/npc-sheet.mjs","module/applications/actor/npc-lite-sheet.mjs","module/applications/actor/npc-loot-sheet.mjs","module/applications/actor/haunt-sheet.mjs","module/applications/actor/trap-sheet.mjs","module/applications/actor/vehicle-sheet.mjs","module/applications/speed-editor.mjs","module/applications/categorized-item-picker.mjs","module/applications/item/item-sheet.mjs","module/applications/item/container-sheet.mjs","module/applications/item/item-create.mjs","module/applications/component/action-sheet.mjs","module/applications/compendium-browser/filters/checkbox.mjs","module/applications/compendium-browser/filters/number-range.mjs","module/applications/compendium-browser/filters/item.mjs","module/applications/compendium-browser/filters/common.mjs","module/applications/compendium-browser/filters/spell.mjs","module/applications/compendium-browser/filters/feat.mjs","module/applications/compendium-browser/filters/class.mjs","module/applications/compendium-browser/filters/race.mjs","module/applications/compendium-browser/filters/buff.mjs","module/applications/compendium-browser/filters/creature.mjs","module/applications/compendium-browser/buff-browser.mjs","module/applications/compendium-browser/class-browser.mjs","module/applications/compendium-browser/creature-browser.mjs","module/applications/compendium-browser/feat-browser.mjs","module/applications/compendium-browser/item-browser.mjs","module/applications/compendium-browser/race-browser.mjs","module/applications/compendium-browser/spell-browser.mjs","module/applications/action-selector.mjs","module/applications/attack-dialog.mjs","module/applications/change-log.mjs","module/applications/entry-selector.mjs","module/applications/item-selector.mjs","module/applications/help-browser.mjs","module/applications/script-editor.mjs","module/applications/senses-selector.mjs","module/applications/skill-editor.mjs","module/applications/content-source-editor.mjs","module/applications/xp-distributor.mjs","module/applications/change-editor.mjs","module/applications/sidebar/items-directory.mjs","module/applications/troubleshooter.mjs","module/applications/actor-selector.mjs","module/applications/split-stack.mjs","module/applications/_module.mjs","module/documents/active-effect.mjs","module/documents/combat.mjs","module/documents/combatant.mjs","module/documents/controls.mjs","module/documents/token.mjs","module/documents/actor/actor-basic.mjs","module/documents/actor/actor-character.mjs","module/documents/actor/actor-npc.mjs","module/documents/actor/actor-haunt.mjs","module/documents/actor/actor-trap.mjs","module/documents/actor/actor-vehicle.mjs","module/chat/text-enrichers.mjs","module/canvas/measure.mjs","module/canvas/attack-reach.mjs","module/canvas/token.mjs","module/canvas/token-quick-actions.mjs","module/canvas/detection-modes.mjs","module/canvas/vision-modes.mjs","module/canvas/ability-template.mjs","module/dice/terms/base/function-term.mjs","module/dice/terms/auxillary/realstring-term.mjs","module/dice/terms/auxillary/boolean-term.mjs","module/dice/terms/auxillary/null-term.mjs","module/dice/terms/auxillary/undefined-term.mjs","module/dice/terms/functions/ifelse-term.mjs","module/dice/terms/functions/if-term.mjs","module/dice/terms/functions/lookup-term.mjs","module/dice/terms/functions/sizereach-term.mjs","module/dice/terms/functions/sizeroll-term.mjs","module/components/context-note.mjs","module/components/conditionals.mjs","module/components/script-call.mjs","module/utils/handlebars/helpers.mjs","module/utils/dialog.mjs","module/utils/currency.mjs","module/utils/formulas.mjs","module/utils/roll-functions.mjs","module/utils/initialization.mjs","module/registry/script-call.mjs","module/registry/conditions.mjs","module/registry/sources.mjs","module/migration/migration-category.mjs","module/migration/migration-state.mjs","module/applications/migration/migration-issues-dialog.mjs","module/applications/migration/migration-dialog.mjs","module/migration.mjs","pf1.mjs","module/modules.mjs"],"sourcesContent":["export class ChatMessagePF extends ChatMessage {\n  /**\n   * Replaces all roll data object in a given object with {@link Roll} instances\n   *\n   * @param {object} maybeRollObject - The object to replace roll data objects with {@link Roll} instances\n   * @returns {object} The object with all roll data objects replaced with {@link Roll} instances\n   * @private\n   */\n  static _initRollObject(maybeRollObject) {\n    // If object is an array, map to roll objects\n    if (Array.isArray(maybeRollObject)) {\n      return maybeRollObject.map((o) => this._initRollObject(o));\n    }\n\n    // If this is a roll object, initialize it\n    if (maybeRollObject != null && typeof maybeRollObject === \"object\" && \"class\" in maybeRollObject) {\n      return Roll.fromData(maybeRollObject);\n    }\n\n    // If object is a regular object, recurse into it to find roll to initialise\n    if (typeof maybeRollObject === \"object\" && maybeRollObject != null) {\n      for (const [k, v] of Object.entries(maybeRollObject)) {\n        maybeRollObject[k] = this._initRollObject(v);\n      }\n    }\n    // Return object in which all roll data has been replaced by Roll instances\n    return maybeRollObject;\n  }\n\n  /**\n   * Linked item.\n   *\n   * @type {ItemPF|undefined|null} - Null is returned if no item is linked, undefined if item is not found, and ItemPF otherwise.\n   */\n  get itemSource() {\n    const itemId = this.flags?.pf1?.metadata?.item;\n    if (itemId) {\n      const actor = this.constructor.getSpeakerActor(this.speaker);\n      return actor?.items.get(itemId);\n    }\n    return null;\n  }\n\n  /**\n   * @type {boolean} True if item source is defined, regardless if that item source still exists.\n   */\n  get hasItemSource() {\n    return this.flags?.pf1?.metadata?.item !== undefined;\n  }\n\n  /**\n   * Return associated template or null.\n   *\n   * @type {MeasuredTemplatePF}\n   */\n  get measureTemplate() {\n    const templateId = this.flags?.pf1?.metadata?.template;\n    if (!templateId) return null;\n    const template = canvas.templates.get(templateId);\n    return template || null;\n  }\n\n  /**\n   * @returns {TokenPF[]} The tokens which were targeted with this chat card.\n   */\n  get targets() {\n    const targetIds = this.flags?.pf1?.metadata?.targets ?? [];\n    return canvas.tokens.placeables.filter((o) => targetIds.includes(o.id));\n  }\n\n  /** @inheritDoc */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    /**\n     * An object containing Pathfinder specific rolls for this chat message,\n     * with a structure grouping them by their purpose.\n     *\n     * @type {object}\n     */\n    this.systemRolls = this.constructor._initRollObject(this.flags?.pf1?.metadata?.rolls ?? {});\n  }\n}\n\n/**\n * @typedef {object} ChatMessagePFIdentifiedInfo\n * @property {boolean} identified - True if item was identified when rolled.\n * @property {string} name - Name of the identified item.\n * @property {string} description - Description of the identified item.\n * @property {string} [actionName] - Name of the action that was used\n * @property {string} [actionDescription] - Description of the action that was used\n */\n\n// Returns a promise to the created chatMessage or false if no command was executed\nexport const customRolls = function (message, speaker, rollData) {\n  if (message.match(/^\\/(\\w+)(?: +([^#]+))(?:#(.+))?/)) {\n    const type = RegExp.$1?.toUpperCase();\n    const value = RegExp.$2;\n    const flavor = RegExp.$3;\n\n    speaker = speaker ?? ChatMessage.implementation.getSpeaker();\n    const actor = ChatMessage.implementation.getSpeakerActor(speaker);\n    const scene = speaker.scene ? game.scenes.get(speaker.scene) : canvas.scene;\n    const tokenDocument = scene?.tokens.get(speaker.token);\n    const tokenUuid = tokenDocument?.uuid;\n\n    switch (type) {\n      case \"D\":\n      case \"DAMAGE\":\n      case \"H\":\n      case \"HEAL\": {\n        rollData = rollData ?? actor?.getRollData() ?? {};\n        const roll = new Roll(value, rollData).evaluate();\n\n        return roll.then(async (roll) => {\n          const total = roll.total;\n          const isHealing = type === \"HEAL\" || type === \"H\";\n          const content = await renderTemplate(\"systems/pf1/templates/chat/simple-damage.hbs\", {\n            tokenId: tokenUuid,\n            isHealing,\n            css: isHealing ? \"heal\" : \"damage\",\n            roll,\n          });\n          const chatOptions = {\n            type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n            roll: roll,\n            flavor,\n            sound: CONFIG.sounds.dice,\n            speaker: speaker,\n            rollMode: game.settings.get(\"core\", \"rollMode\"),\n            content: content,\n            flags: { pf1: { subject: { health: isHealing ? \"healing\" : \"damage\" } } },\n          };\n          ChatMessage.implementation.create(chatOptions);\n        });\n      }\n    }\n  }\n  return false;\n};\n","export class SemanticVersion {\n  static re = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)?$/\n\n  constructor() {\n    this.major = 0;\n    this.minor = 0;\n    this.patch = 0;\n    this.preRelease = \"\";\n    this.buildMetaData = \"\";\n  }\n\n  static fromString(str) {\n    if (str.match(this.re)) {\n      let result = new this();\n      result.major = parseInt(RegExp.$1);\n      result.minor = parseInt(RegExp.$2);\n      result.patch = parseInt(RegExp.$3 || 0);\n      result.preRelease = RegExp.$4 || \"\";\n      result.buildMetaData = RegExp.$5 || \"\";\n      return result;\n    }\n    return null;\n  }\n\n  toString() {\n    return `${this.major}.${this.minor}.${this.patch}`;\n  }\n\n  isHigherThan(otherVersion) {\n    if (this.major > otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor > otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch > otherVersion.patch) return true;\n    return false;\n  }\n\n  isLowerThan(otherVersion) {\n    if (this.major < otherVersion.major) return true;\n    if (this.major === otherVersion.major && this.minor < otherVersion.minor) return true;\n    if (this.major === otherVersion.major\n      && this.minor === otherVersion.minor\n      && this.patch < otherVersion.patch) return true;\n    return false;\n  }\n}\n","export class RollPF extends Roll {\n  get totalHalved() {\n    return Math.floor(this.total / 2);\n  }\n\n  /**\n   * Return an Array of the individual DiceTerm instances contained within this Roll.\n   * Override to recognize dice in SizeRollTerm.\n   *\n   * @override\n   * @returns {DiceTerm[]}\n   */\n  get dice() {\n    return (\n      this.terms\n        .reduce((dice, t) => {\n          if (t instanceof DiceTerm) dice.push(t);\n          else if (t instanceof PoolTerm) dice = dice.concat(t.dice);\n          else if (t.inheritDice) dice = dice.concat(t.dice);\n          return dice;\n        }, [])\n        // Append dice from parenthesis and similar eliminated rolls.\n        .concat(this._dice)\n    );\n  }\n\n  get flavor() {\n    return this.options?.flavor;\n  }\n\n  /**\n   * Synchronous and thrown error consuming roll evaluation.\n   *\n   * @remarks\n   * - Returned roll has `.err` set if an error occurred during evaluation.\n   * - If error occurs, the returned roll will have its formula replaced.\n   * @param {string} formula - Roll formula\n   * @param {object} rollData - Data supplied to roll\n   * @param {object} context - If error occurs, this will be included in the error message.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.suppressError=false] - If true, no error will be printed even if one occurs.\n   * @param {object} [evalOpts] - Additional options to pass to Roll.evaluate()\n   * @returns {RollPF} - Evaluated roll, or placeholder if error occurred.\n   */\n  static safeRoll(formula, rollData = {}, context, { suppressError = false } = {}, evalOpts = {}) {\n    if (evalOpts.async !== true) {\n      foundry.utils.logCompatibilityWarning(\n        \"RollPF.safeRoll() is becoming async to match upstream API changes. Use RollPF.safeRollSync() for any non-dice synchronous rolling. Pass async=true to evalOpts to suppress this warning.\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n    }\n\n    let roll;\n    try {\n      roll = this.create(formula, rollData).evaluate({ ...evalOpts, async: false });\n    } catch (err) {\n      roll = this.create(\"0\", rollData).evaluate({ ...evalOpts, async: false });\n      roll.err = err;\n    }\n    if (roll.warning) roll.err = Error(\"This formula had a value replaced with null.\");\n    if (roll.err) {\n      if (context && !suppressError) console.error(context, roll.err);\n      else if (CONFIG.debug.roll) console.error(roll.err);\n    }\n    return roll;\n  }\n\n  /**\n   * Synchronous version of {@link safeRoll safeRoll()}\n   *\n   * @ignore\n   * @see {@link safeRoll}\n   */\n  static safeRollSync(formula, rollData, context, options, evalOpts = {}) {\n    // TODO: Recreate safeRoll() with .evaluateSync() usage\n    evalOpts.async = true; // HACK, API hasn't actually changed yet\n    const roll = this.safeRoll(formula, rollData, context, options, evalOpts);\n    if (!roll.isDeterministic && evalOpts.maximize !== true && evalOpts.minimize !== true) {\n      foundry.utils.logCompatibilityWarning(\n        \"RollPF.safeRollSync() will not support non-deterministic formulas in the future.\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n    }\n    return roll;\n  }\n\n  /**\n   * Temporary helper function to handle transition to Foundry v12. Remove with Foundry v12 support.\n   *\n   * @ignore\n   * @internal\n   */\n  static safeRollAsync(formula, rollData, context, options, evalOpts = {}) {\n    evalOpts.async = true;\n    return this.safeRoll(formula, rollData, context, options, evalOpts);\n  }\n\n  static safeTotal(formula, data) {\n    foundry.utils.logCompatibilityWarning(\"RollPF.safeTotal() is deprecated in favor of RollPF.safeRoll().total\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return RollPF.safeRoll(formula, data).total;\n  }\n\n  /**\n   * @override\n   */\n  static simplifyTerms(terms) {\n    // Simplify terms by combining with pending strings\n    let simplified = terms.reduce((terms, term) => {\n      const prior = terms[terms.length - 1];\n      const isOperator = term instanceof OperatorTerm;\n\n      // Combine a non-operator term with prior StringTerm\n      if (!isOperator && prior instanceof StringTerm) {\n        prior.term += term.total;\n        foundry.utils.mergeObject(prior.options, term.options);\n        return terms;\n      }\n\n      // Attach string terms as flavor texts to numeric terms, if appropriate\n      const priorNumeric = prior instanceof NumericTerm;\n      if (prior && priorNumeric && term instanceof StringTerm && term.term.match(/\\[(.+)\\]/)) {\n        prior.options.flavor = RegExp.$1;\n        return terms;\n      }\n\n      /*\n      // Attach string terms as flavor texts to size roll terms, if appropriate\n      // TODO: Review the need for this bit with Foundry v10, according to staff it will no longer be required.\n      const priorSizeRoll = prior instanceof pf1.dice.terms.SizeRollTerm;\n      if (prior && priorSizeRoll && term instanceof StringTerm) {\n        const re = term.term.match(pf1.dice.terms.SizeRollTerm.TRAILER_REGEXP);\n        const [match, modifiers, flavor] = re;\n        // Attach Flavor\n        if (flavor) {\n          prior.options.flavor = flavor;\n        }\n        // Attach modifiers\n        if (modifiers) {\n          prior.modifiers = Array.from((modifiers || \"\").matchAll(DiceTerm.MODIFIER_REGEXP)).map((m) => m[0]);\n        }\n        return terms;\n      }\n      */\n\n      // Custom handling\n      if (prior && term instanceof StringTerm) {\n        const flavor = /^\\[(?<flavor>.+)\\]$/.exec(term.term)?.groups.flavor;\n        if (flavor) {\n          // Attach string terms as flavor texts to function terms, if appropriate\n          if (prior instanceof pf1.dice.terms.base.FunctionTerm) {\n            prior.options.flavor = flavor;\n            return terms;\n          }\n        }\n      }\n\n      // Combine StringTerm with a prior non-operator term\n      const priorOperator = prior instanceof OperatorTerm;\n      if (prior && !priorOperator && term instanceof StringTerm) {\n        term.term = String(prior.total) + term.term;\n        foundry.utils.mergeObject(term.options, prior.options);\n        terms[terms.length - 1] = term;\n        return terms;\n      }\n\n      // Otherwise continue\n      terms.push(term);\n      return terms;\n    }, []);\n\n    // Convert remaining String terms to a RollTerm which can be evaluated\n    simplified = simplified.map((term) => {\n      if (!(term instanceof StringTerm)) return term;\n      const t = this._classifyStringTerm(term.formula, { intermediate: false });\n      t.options = foundry.utils.mergeObject(term.options, t.options, { inplace: false });\n      return t;\n    });\n\n    // Eliminate leading or trailing arithmetic\n    if (simplified[0] instanceof OperatorTerm && simplified[0].operator !== \"-\") simplified.shift();\n    if (simplified.at(-1) instanceof OperatorTerm) simplified.pop();\n    return simplified;\n  }\n\n  static cleanFlavor(flavor) {\n    return flavor.replace(/\\[\\];/g, \"\");\n  }\n\n  /**\n   * Render the tooltip HTML for a RollPF instance\n   *\n   * @returns {Promise<string>} The rendered HTML tooltip as a string\n   */\n  async getTooltip() {\n    const parts = this.dice.filter((d) => d.results.some((r) => r.active)).map((d) => d.getTooltipData());\n    const numericParts = this.terms.reduce((cur, t, idx, arr) => {\n      const ttdata = t instanceof NumericTerm || t.hasNumericTooltip ? t.getTooltipData() : undefined;\n\n      if (ttdata !== undefined) {\n        const prior = arr[idx - 1];\n        if (t instanceof NumericTerm && prior && prior instanceof OperatorTerm && prior.operator === \"-\") {\n          ttdata.total = -ttdata.total;\n        }\n\n        ttdata.flavor ??= game.i18n.localize(\"PF1.Undefined\");\n        cur.push(ttdata);\n      }\n      return cur;\n    }, []);\n    return renderTemplate(\"systems/pf1/templates/dice/tooltip.hbs\", { parts, numericParts });\n  }\n\n  static parse(formula, data) {\n    const terms = super.parse(formula, data);\n\n    const final = [];\n\n    for (let i = 0; i < terms.length; i++) {\n      const term = terms[i],\n        next = terms[i + 1],\n        prior = terms[i - 1];\n\n      // Standalone terms\n      if (term instanceof StringTerm) {\n        const systerm = Object.values(pf1.dice.terms.aux).find((t) => t.matchTerm(term.term));\n        if (systerm) {\n          final.push(new systerm({ term: term.term }));\n          continue;\n        }\n      }\n      // Function terms\n      else if (term instanceof ParentheticalTerm && prior instanceof StringTerm) {\n        const systerm = Object.values(pf1.dice.terms.fn).find((t) => t.matchTerm(prior.term));\n        if (systerm?.isFunction) {\n          const args = systerm.parseArgs(this._lenientSplitArgs(term.term));\n          final.pop();\n          final.push(new systerm({ terms: args }));\n          continue;\n        }\n      }\n\n      final.push(term);\n    }\n\n    return final;\n  }\n\n  /**\n   * Variant of _splitMathArgs that takes system terms into consideration.\n   *\n   * @param {string} expression\n   * @returns {RollTerm[]}\n   */\n  static _lenientSplitArgs(expression) {\n    return expression.split(\",\").reduce((args, t) => {\n      t = t.trim();\n      if (!t) return args; // Blank args\n      if (!args.length) {\n        // First arg\n        args.push(t);\n        return args;\n      }\n      const p = args[args.length - 1]; // Prior arg\n      const priorValid = this.validate(p);\n      if (priorValid) args.push(t);\n      else {\n        const aux = Object.values(pf1.dice.terms.aux).find((t) => t.matchTerm(p));\n        if (aux) args.push(t);\n        else args[args.length - 1] = [p, t].join(\",\"); // Collect inner parentheses or pools\n      }\n      return args;\n    }, []);\n  }\n}\n","import { SemanticVersion } from \"./semver.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n/**\n * Creates a tag from a string.\n *\n * @example\n * pf1.utils.createTag(\"Wizard of Oz 2\"); // => \"wizardOfOz2\"\n *\n * @param {string} str\n */\nexport const createTag = function (str) {\n  if (str.length === 0) str = \"tag\";\n  return str\n    .replace(/[^a-zA-Z0-9\\s]/g, \"\")\n    .split(/\\s+/)\n    .map((s, a) => {\n      s = s.toLowerCase();\n      if (a > 0) s = s.substring(0, 1).toUpperCase() + s.substring(1);\n      return s;\n    })\n    .join(\"\");\n};\n\n/**\n * @deprecated\n * @param {string} version - The minimum core version to compare to. Must be something like '0.5.1'.\n * @returns {boolean} Whether the current core version is at least the given version.\n */\nexport const isMinimumCoreVersion = function (version) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.isMinimumCoreVersion is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n  const coreVersion = SemanticVersion.fromString(game.version);\n  const compareVersion = SemanticVersion.fromString(version);\n\n  return !coreVersion.isLowerThan(compareVersion);\n};\n\n/**\n * @deprecated - Use `item.actor` instead\n * @param {object} item Item data\n * @returns {User|null}\n */\nexport const getItemOwner = function (item) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.getItemOwner() is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n  if (item.actor) return item.actor;\n  if (item.id) return game.actors.find((o) => o.items.get(item.id));\n  return null;\n};\n\n/**\n * Turn some fractional numbers into pretty strings.\n *\n * @param {number} v\n * @returns {string|undefined}\n */\nexport const fractionalToString = (v) => {\n  const base = Math.floor(v);\n  const f = Math.roundDecimals(v - base, 3);\n  if (f === 0) return `${base}`;\n  const rv = [];\n  if (base !== 0) rv.push(base);\n  if (f === 0.25) rv.push(\"1/4\");\n  else if (f === 0.333) rv.push(\"1/3\");\n  else if (f === 0.5) rv.push(\"1/2\");\n  else if (f === 0.667) rv.push(\"2/3\");\n  else if (f === 0.75) rv.push(\"3/4\");\n  return rv.join(\" \");\n};\n\nexport const CR = {\n  fromString(value) {\n    if (value === \"1/8\") return 0.125;\n    if (value === \"1/6\") return 0.1625;\n    if (value === \"1/4\") return 0.25;\n    if (value === \"1/3\") return 0.3375;\n    if (value === \"1/2\") return 0.5;\n    return parseFloat(value);\n  },\n\n  fromNumber(value = 0) {\n    if (value === 0.125) return \"1/8\";\n    if (value === 0.1625) return \"1/6\";\n    if (value === 0.25) return \"1/4\";\n    if (value === 0.3375) return \"1/3\";\n    if (value === 0.5) return \"1/2\";\n    if (!Number.isNumeric(value)) return \"0\";\n    return value?.toString() ?? \"\";\n  },\n};\n\n/**\n * @deprecated - Use `game.actors.get(id)` instead\n * @param {*} id\n * @returns\n */\nexport const getActorFromId = function (id) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.getActorFromId() is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n  const speaker = ChatMessage.getSpeaker();\n  let actor = null;\n  if (id) {\n    actor = game.actors.tokens[id];\n    if (!actor) actor = game.actors.get(id);\n  }\n  if (speaker.token && !actor) actor = game.actors.tokens[speaker.token];\n  if (!actor) actor = game.actors.get(speaker.actor);\n  return actor;\n};\n\n/**\n * Converts feet to what the world is using as a measurement unit.\n *\n * @example\n * // With metric enabled\n * pf1.utils.convertDistance(30); // => [9, \"m\"]\n *\n * @param {number} value - The value (in feet) to convert.\n * @param {\"ft\"|\"mi\"} type - The original type to convert from. Either 'ft' (feet, default) or 'mi' (miles, in which case the result is in km (metric))\n * @returns {Array.<number, string>} An array containing the converted value in index 0 and the new unit key in index 1 (for use in PF1.measureUnits, for example)\n */\nexport const convertDistance = function (value, type = \"ft\") {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round(value * 1.6 * 100) / 100, \"km\"];\n        default:\n          return [Math.round((value / 5) * 1.5 * 100) / 100, \"m\"];\n      }\n    default:\n      if (![\"ft\", \"mi\"].includes(type)) type = \"ft\";\n      return [value, type];\n  }\n};\n\n/**\n * Converts what the world is using as a measurement unit to feet.\n *\n * @param {number} value - The value (in the world's measurement unit) to convert back.\n * @param {string} type - The target type to convert back to. Either 'ft' (feet, default) or 'mi' (miles, in which case the expected given value should be in km (metric))\n * @returns {number} The resulting value.\n */\nexport const convertDistanceBack = function (value, type = \"ft\") {\n  const system = getDistanceSystem();\n  switch (system) {\n    case \"metric\":\n      switch (type) {\n        case \"mi\":\n          return [Math.round((value / 1.6) * 100) / 100, \"mi\"];\n        default:\n          return [Math.round(((value * 5) / 1.5) * 100) / 100, \"ft\"];\n      }\n    default:\n      return [value, type];\n  }\n};\n\n/**\n * Calculate overland speed per hour\n *\n * @see {@link https://www.aonprd.com/Rules.aspx?Name=Movement&Category=Exploration Exploration Movement rules}\n *\n * @example\n * // metric\n * overlandSpeed(9) // => {speed:6, unit:'km'}\n * // imperial\n * overlandSpeed(40) // => {speed:4, unit:'mi'}\n *\n * @param {number} speed - Tactical speed\n * @returns {{speed:number,unit:string}} - Object with overland speed and unit.\n */\nexport function overlandSpeed(speed) {\n  const system = getDistanceSystem();\n  const variant = system === \"metric\" ? game.settings.get(\"pf1\", \"overlandMetricVariant\") : \"default\";\n  const { per, out, unit } = pf1.config.overlandSpeed[system][variant];\n\n  return { speed: (speed / per) * out, unit };\n}\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getDistanceSystem = () => {\n  let system = game.settings.get(\"pf1\", \"distanceUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @returns {UnitSystem} Effective system of units\n */\nexport const getWeightSystem = () => {\n  let system = game.settings.get(\"pf1\", \"weightUnits\"); // override\n  if (system === \"default\") system = game.settings.get(\"pf1\", \"units\");\n  return system;\n};\n\n/**\n * @typedef Point\n * @property {number} x X coordinate\n * @param {number} y Y coordinate\n */\n\n/**\n * @typedef MeasureState\n * @param {number} diagonals Number of diagonals passed so far.\n * @param {number} cells Total cells in distance\n */\n\n/**\n * Measure distance between two points.\n *\n * @example\n * pf1.utils.measureDistance(token, game.user.targets.first());\n *\n * @param {Point} p0 - Start point on canvas\n * @param {Point} p1 - End point on canvas\n * @param {object} [options] - Measuring options.\n * @param {\"5105\"|\"555\"} [options.diagonalRule=\"5105\"] - Used diagonal rule. Defaults to 5/10/5 PF measuring.\n * @param {Ray} [options.ray=null] - Pre-generated ray to use instead of the points.\n * @param {MeasureState} [options.state] - Optional state tracking across multiple measures.\n * @returns {number} - Grid distance between the two points.\n */\nexport const measureDistance = function (\n  p0,\n  p1,\n  { ray = null, diagonalRule = \"5105\", state = { diagonals: 0, cells: 0 } } = {}\n) {\n  // TODO: Optionally adjust start and end point to closest grid\n  ray ??= new Ray(p0, p1);\n  const gs = canvas.dimensions.size,\n    nx = Math.ceil(Math.abs(ray.dx / gs)),\n    ny = Math.ceil(Math.abs(ray.dy / gs));\n\n  // Get the number of straight and diagonal moves\n  const nDiagonal = Math.min(nx, ny),\n    nStraight = Math.abs(ny - nx);\n\n  state.diagonals += nDiagonal;\n\n  let cells = 0;\n  // Standard Pathfinder diagonals: double distance for every odd.\n  if (diagonalRule === \"5105\") {\n    const nd10 = Math.floor(state.diagonals / 2) - Math.floor((state.diagonals - nDiagonal) / 2);\n    cells = nd10 * 2 + (nDiagonal - nd10) + nStraight;\n  }\n  // Equal distance diagonals\n  else cells = nStraight + nDiagonal;\n\n  state.cells += cells;\n  return cells * canvas.dimensions.distance;\n};\n\n/**\n * Converts lbs to what the world is using as a measurement unit.\n *\n * @param {number} value - The value (in lbs) to convert.\n * @returns {number} The converted value. In the case of the metric system, converts to kg.\n */\nexport const convertWeight = function (value) {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n      return value / 2;\n    default:\n      return value;\n  }\n};\n\n/**\n * Converts back to lbs from what the world is using as a measurement unit.\n *\n * @example\n * // Assuming metric is enabled\n * pf1.utils.convertWeightBack(10); // => 20\n * // With metric disabled\n * pf1.utils.convertWeightBack(10); // => 10\n *\n * @param {number} value - The value to convert back to lbs.\n * @returns {number} The converted value. In the case of the metric system, converts from kg.\n */\nexport const convertWeightBack = function (value) {\n  const system = getWeightSystem();\n  switch (system) {\n    case \"metric\":\n      return value * 2; // 1 kg is not exactly 2 lb but this conversion is officially used by Paizo/BBE\n    default:\n      return value;\n  }\n};\n\n/**\n * Sort an array using a language-aware comparison function that can sort by a property key.\n * If no property key is provided, the array is sorted directly.\n *\n * @template T\n * @param {T[]} arr The array to sort\n * @param {string} [propertyKey=\"\"] The property key to sort by, if any; can be a dot-separated path\n * @param {object} [sortOptions] - Options affecting the sorting of elements\n * @param {boolean} sortOptions.numeric - Whether numeric collation should be used, such that \"1\" < \"2\" < \"10\".\n * @param {boolean} sortOptions.ignorePunctuation - Whether punctuation should be ignored.\n * @returns {T[]} The sorted array\n */\nexport const naturalSort = function (arr, propertyKey = \"\", { numeric = true, ignorePunctuation = false } = {}) {\n  const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), { numeric, ignorePunctuation });\n  return arr.sort((a, b) => {\n    const propA = propertyKey ? (propertyKey in a ? a[propertyKey] : foundry.utils.getProperty(a, propertyKey)) : a;\n    const propB = propertyKey ? (propertyKey in b ? b[propertyKey] : foundry.utils.getProperty(b, propertyKey)) : b;\n    return collator.compare(propA, propB);\n  });\n};\n\n/**\n * Adjusts a string to a number, allowing relative adjustments.\n *\n * @param {number} initialValue - The initial number to use for relative operations.\n * @param {string} cmdStr - The exact string inputted by the user.\n * @param {number} [maxValue=null] - The maximum allowed value for this variable.\n * @param {number} [clearValue=null] - What to change the variable to if the user simply erased the value.\n * @returns {number} The resulting new value.\n */\nexport const adjustNumberByStringCommand = function (initialValue, cmdStr, maxValue = null, clearValue = null) {\n  let result = initialValue;\n  const re = cmdStr.match(/(?<abs>=)?(?<op>[+-]+)?(?<value>\\d+)/);\n  if (re) {\n    const { op: operator, abs, value: rawValue } = re.groups;\n    const isAbsolute = abs == \"=\" || [\"--\", \"++\"].includes(operator) || (!abs && !operator);\n    const isNegative = [\"-\", \"--\"].includes(operator);\n    let value = parseInt(rawValue);\n    if (isNegative) value = -value;\n    result = isAbsolute ? value : initialValue + value;\n  } else if (cmdStr === \"\" && clearValue !== null) {\n    result = clearValue;\n  } else {\n    result = parseFloat(cmdStr || \"0\");\n  }\n\n  if (Number.isFinite(maxValue)) result = Math.min(result, maxValue);\n\n  if (Number.isNaN(result)) {\n    console.warn(\"Input resulted in NaN\", { initial: initialValue, command: cmdStr });\n    result = initialValue;\n  }\n\n  return result;\n};\n\n/**\n * Opens journal or journal page.\n *\n * Pages are opened in collapsed state.\n *\n * @param {string} uuid - UUID to journal or journal page\n * @param {object} [options={}] - Additional rendering options\n * @returns {JournalEntry|JournalEntryPage|null} - Opened document\n */\nexport async function openJournal(uuid, options = {}) {\n  const journal = await fromUuid(uuid);\n\n  if (journal instanceof JournalEntryPage) {\n    journal.parent.sheet.render(true, {\n      pageId: journal.id,\n      editable: false,\n      collapsed: true,\n      width: 600,\n      height: 700,\n      ...options,\n    });\n  } else {\n    journal.sheet.render(true, { editable: false, ...options });\n  }\n\n  return journal;\n}\n\n/**\n * @typedef {object} BuffTargetItem\n * @property {string} [label] - The buff target's label.\n * @property {string} category - The buff target's category.\n * @property {string} [icon] - The URL to an icon.\n */\n/**\n * Assembles an array of all possible buff targets.\n *\n * @param {ActorPF} [actor] - An actor for which to specifically get buff targets.\n * @param {string} [type] - Can be set to \"contextNotes\" to get context notes instead.\n * @returns {Object<string, BuffTargetItem>} The resulting array of buff targets.\n */\nexport const getBuffTargets = function (actor, type = \"buffs\") {\n  const buffTargets = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargets,\n      contextNotes: pf1.config.contextNoteTargets,\n    }[type]\n  );\n\n  // Append individual skills to buff targets\n  if (actor) {\n    for (const s of actor._skillTargets) {\n      const skillId = s.split(\".\").slice(1).join(\".\");\n      const skill = actor.getSkillInfo(skillId);\n      buffTargets[s] = { label: skill.fullName, category: \"skill\" };\n    }\n  } else {\n    for (const [key, label] of Object.entries(pf1.config.skills)) {\n      buffTargets[`skill.${key}`] = { label, category: \"skill\" };\n    }\n  }\n\n  // Append spell targets\n  const books = actor?.system.attributes?.spells?.spellbooks ?? {\n    primary: { label: game.i18n.localize(\"PF1.SpellBookPrimary\") },\n    secondary: { label: game.i18n.localize(\"PF1.SpellBookSecondary\") },\n    tertiary: { label: game.i18n.localize(\"PF1.SpellBookTertiary\") },\n    spelllike: { label: game.i18n.localize(\"PF1.SpellBookSpelllike\") },\n  };\n\n  // Get actor specific spell targets\n  const spellTargets = actor?._spellbookTargets ?? [];\n\n  // Add spell school DCs and CLs\n  for (const schoolId of Object.keys(CONFIG.PF1.spellSchools)) {\n    spellTargets.push(`dc.school.${schoolId}`, `cl.school.${schoolId}`);\n  }\n\n  for (const s of spellTargets) {\n    const re = /^(?<key>\\w+)(?:\\.(?<category>\\w+))?\\.(?<subKey>\\w+)$/.exec(s);\n    if (!re) continue;\n    const { key, category, subKey } = re.groups;\n\n    let subLabel;\n    if (category === \"school\") subLabel = CONFIG.PF1.spellSchools[subKey];\n    else subLabel = books[subKey]?.label ?? subKey;\n\n    const fullKey = category ? `${key}.${category}` : key;\n    const mainLabel = game.i18n.localize(\n      {\n        \"dc.school\": \"PF1.DC\",\n        concn: \"PF1.Concentration\",\n        \"cl.book\": \"PF1.CasterLevel\",\n        \"cl.school\": \"PF1.CasterLevelAbbr\",\n      }[fullKey]\n    );\n\n    buffTargets[s] = {\n      label: `${mainLabel} (${subLabel})`,\n      category: \"spell\",\n    };\n  }\n\n  return buffTargets;\n};\n\n/**\n * @typedef {object} BuffTargetCategory\n * @property {string} label - The category's label.\n */\n/**\n * Assembles an array of buff targets and their categories, ready to be inserted into a Widget_CategorizedItemPicker.\n *\n * @param {ActorPF} [actor] - An actor for which to specifically get buff targets.\n * @param {string} [type] - Can be set to \"contextNotes\" to get context notes instead.\n * @returns {Widget_CategorizedItemPicker~Category[]}\n */\nexport const getBuffTargetDictionary = function (actor, type = \"buffs\") {\n  const buffTargets = getBuffTargets(actor, type);\n\n  // Assemble initial categories and items\n  const targetCategories = foundry.utils.deepClone(\n    {\n      buffs: pf1.config.buffTargetCategories,\n      contextNotes: pf1.config.contextNoteCategories,\n    }[type]\n  );\n  let categories = Object.entries(buffTargets).reduce((cur, o) => {\n    const key = o[0];\n    const label = o[1].label;\n    const category = o[1].category;\n    const icon = o[1].icon;\n\n    if (!key.startsWith(\"~\")) {\n      cur[category] = cur[category] || {\n        label: targetCategories[category].label,\n        items: [],\n      };\n      cur[category].items.push({ key, label, icon });\n    }\n    return cur;\n  }, {});\n\n  // Turn result into a usable format, and sort\n  categories = Object.entries(categories).reduce((cur, o) => {\n    const key = o[0];\n    const label = o[1].label;\n    const items = o[1].items;\n    cur.push({ key, label, items });\n    return cur;\n  }, []);\n  categories = naturalSort(categories, \"label\");\n\n  // Return result\n  return categories;\n};\n\n/**\n * A locale-safe insertion sort of an Array of Objects, not in place. Ignores punctuation and capitalization.\n * `name` properties in objects will be lowercased.\n *\n * @template T\n * @param {Array.<T & {name: string}>} inputArr - Array to be sorted. Each element must have a name property set\n * @returns {T[]} - New sorted Array\n */\nexport const sortArrayByName = function (inputArr) {\n  inputArr = foundry.utils.deepClone(inputArr);\n  for (const elem of inputArr) {\n    elem.name = elem.name.toLocaleLowerCase();\n  }\n  return naturalSort(inputArr, \"name\", { numeric: true, ignorePunctuation: true });\n};\n\n/**\n * A simple binary search to be used on sorted arrays\n *\n * @template T\n * @param {T[]} searchArr - Sorted Array to be searched\n * @param {T} el - Element to be compared to array values\n * @param {function(T, T): number} compare_fn - Comparison function to be apply el to every element in ar. Should return an positive/ negative integer or 0 if matching.\n * @returns {number} Index where search is found or negative index indicating where it would be inserted\n */\nexport const binarySearch = function (searchArr, el, compare_fn) {\n  let m = 0,\n    n = searchArr.length - 1;\n  while (m <= n) {\n    const k = (n + m) >> 1,\n      cmp = compare_fn(el, searchArr[k]);\n    if (cmp > 0) {\n      m = k + 1;\n    } else if (cmp < 0) {\n      n = k - 1;\n    } else {\n      return k;\n    }\n  }\n  return -m - 1;\n};\n\n/**\n * Generate permutations of an array. Complexity is O(n!).\n * Should be safe up to 7, though you should probably consider something else if you're reaching that high often.\n *\n * @template T\n * @param {T[]} perm - The Array to be generated upon\n * @returns {Array.<T[]>|false} An Array containing all Array permutations or false if failed.\n */\nfunction uniquePermutations(perm) {\n  perm = perm.map((p) => p.trim()).filter((p) => p?.length > 0);\n\n  if (perm.length > 7) {\n    console.warn(\"Array too large. Not attempting.\", perm);\n    return false;\n  }\n\n  const total = new Set();\n\n  for (let i = 0; i < perm.length; i = i + 1) {\n    const rest = uniquePermutations(perm.slice(0, i).concat(perm.slice(i + 1)));\n\n    if (!rest.length) {\n      total.add([perm[i]]);\n    } else {\n      for (let j = 0; j < rest.length; j = j + 1) {\n        total.add([perm[i]].concat(rest[j]));\n      }\n    }\n  }\n  return [...total];\n}\n\n/**\n * Searches through compendia quickly using the system generated index caches.\n * Exact matches excluding punctuation and case are prioritized before searching word order permutations.\n *\n * @param {string} searchTerm - The name of the Document being searched for\n * @param {object} [options] - Provides a filter to limit search to specific packs or Document types\n * @param {string[]} [options.packs] - An array of packs to search in\n * @param {\"Actor\"|\"Item\"|\"Scene\"|\"JournalEntry\"|\"Macro\"|\"RollTable\"|\"Playlist\"} [options.type] - A Document type to limit which packs are searched in\n * @param {string} [options.docType] - Document type, such as \"loot\" or \"npc\"\n * @param {boolean} [options.disabled=false] - Include packs disabled for compendium browser.\n * @returns {{pack: CompendiumCollection, index: object}|false} The index and pack containing it or undefined if no match is found\n */\nexport const findInCompendia = function (searchTerm, { packs = [], type, docType, disabled = false } = {}) {\n  if (packs?.length) packs = packs.flatMap((o) => game.packs.get(o) ?? []);\n  else packs = game.packs.filter((o) => !type || o.metadata.type == type);\n  if (!disabled) packs = packs.filter((o) => o.config?.pf1?.disabled !== true);\n\n  searchTerm = searchTerm.toLocaleLowerCase();\n\n  for (const pack of packs) {\n    if (!pack.fuzzyIndex) pack.fuzzyIndex = sortArrayByName([...pack.index]);\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    const found = binarySearch(filteredIndex, searchTerm, (sp, it) =>\n      sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n    );\n    if (found > -1) {\n      const entry = pack.index.get(filteredIndex[found]._id);\n      return { pack, index: entry };\n    }\n  }\n\n  let searchMutations = uniquePermutations(searchTerm.split(/[, _-]/));\n  if (searchMutations) searchMutations = searchMutations.map((o) => o.join(\" \"));\n  else {\n    // If array is too long, search for just a reversed version and one that pivots around commas/ semicolons\n    searchMutations = [null];\n    searchMutations.push(searchTerm.split(/[ _-]/).reverse().join(\" \"));\n    searchMutations.push(\n      searchTerm\n        .split(/[,;] ?/)\n        .reverse()\n        .flatMap((o) => o.split(\" \"))\n        .join(\" \")\n    );\n  }\n\n  for (const pack of packs) {\n    let filteredIndex = pack.fuzzyIndex;\n    if (docType) filteredIndex = filteredIndex.filter((e) => e.type === docType);\n\n    // Skip first mutation since it is already searched for manually before computing mutations\n    for (let mut = 1; mut < searchMutations.length; mut++) {\n      const found = binarySearch(filteredIndex, searchMutations[mut], (sp, it) =>\n        sp.localeCompare(it.name, undefined, { ignorePunctuation: true })\n      );\n      if (found > -1) {\n        const entry = pack.index.get(filteredIndex[found]._id);\n        if (entry) return { pack, index: entry };\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * Variant of TextEditor._createInlineRoll for creating unrolled inline rolls.\n *\n * Synchronized with Foundry VTT v10.291\n *\n * {@inheritDoc TextEditor._createInlineRoll\n *\n * @param match\n * @param rollData\n * @param options\n */\nexport function createInlineFormula(match, rollData, options) {\n  let [command, formula, closing, label] = match.slice(1, 5);\n  const isDeferred = !!command;\n  let roll;\n\n  // Leave command variants to be handled by core\n  if (command) return TextEditor._createInlineRoll(match, rollData, { ...options, rolls: true });\n\n  const cls = [\"inline-preroll\", \"inline-formula\"];\n\n  // Handle the possibility of closing brackets\n  if (closing.length === 3) formula += \"]\";\n\n  // Extract roll data as a parsed chat command\n  const chatCommand = `${command}${formula}`;\n  let parsedCommand = null;\n  try {\n    parsedCommand = ChatLog.parse(chatCommand);\n  } catch (err) {\n    console.error(\"Failed to parse formula:\", chatCommand, err);\n    return null;\n  }\n  const [cmd, matches] = parsedCommand;\n  const [raw, rollType, fml, flv] = matches;\n  // TODO: Prettify display of commands like: /d 3d6\n\n  const a = document.createElement(\"a\");\n\n  // Set roll data\n  if (cmd) {\n    cls.push(cmd);\n    a.dataset.mode = cmd;\n  }\n  a.dataset.flavor = flv?.trim() ?? label ?? \"\";\n  formula = Roll.defaultImplementation.replaceFormulaData(formula.trim(), rollData || {});\n  try {\n    formula = pf1.utils.formula.simplify(formula);\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n  a.dataset.formula = formula;\n\n  a.classList.add(...cls);\n\n  a.dataset.tooltip = formula;\n  label = label ? `${label}: ${formula}` : formula;\n  a.innerHTML = `<i class=\"fas fa-dice-d20\"></i> ${label}`;\n\n  return a;\n}\n\n/**\n * enrichHTML but with inline rolls not rolled\n *\n * {@inheritDoc TextEditor.enrichHTML}\n *\n * @experimental - This may be removed without warning.\n * @param {string} content HTML content in string format to be enriched.\n * @param {options} [options] Additional options passed to enrichHTML\n * @param {object} [options.rollData] Roll data object\n * @param {boolean} [options.secrets] Display secrets\n * @param {boolean} [options.rolls=false] Roll inline rolls. If false, the roll formula is shown instead as if /r had been used.\n * @param {boolean} [options.documents] Parse content links\n * @returns {string} - Enriched HTML string\n * Synchronized with Foundry VTT v11.315\n */\nexport function enrichHTMLUnrolled(content, { rollData, secrets, rolls = false, documents, relativeTo } = {}) {\n  let pcontent = TextEditor.enrichHTML(content, { secrets, rolls, documents, rollData, async: false, relativeTo });\n\n  if (!rolls) {\n    const html = document.createElement(\"div\");\n    html.innerHTML = String(pcontent);\n    const text = TextEditor._getTextNodes(html);\n    const rgx = /\\[\\[(\\/[a-zA-Z]+\\s)?(.*?)(]{2,3})(?:{([^}]+)})?/gi;\n    TextEditor._replaceTextContent(text, rgx, (match) => createInlineFormula(match, rollData));\n    pcontent = html.innerHTML;\n  }\n\n  return pcontent;\n}\n\n/**\n * Temporary async variant until the rest of the code can be refactored.\n *\n * @internal\n * @param content\n * @param root0\n * @param root0.rollData\n * @param root0.secrets\n * @param root0.rolls\n * @param root0.documents\n * @param root0.relativeTo\n */\nexport async function enrichHTMLUnrolledAsync(\n  content,\n  { rollData, secrets, rolls = false, documents, relativeTo } = {}\n) {\n  let pcontent = await TextEditor.enrichHTML(content, { secrets, rolls, documents, rollData, async: true, relativeTo });\n\n  if (!rolls) {\n    const html = document.createElement(\"div\");\n    html.innerHTML = String(pcontent);\n    const text = TextEditor._getTextNodes(html);\n    const rgx = /\\[\\[(\\/[a-zA-Z]+\\s)?(.*?)(]{2,3})(?:{([^}]+)})?/gi;\n    TextEditor._replaceTextContent(text, rgx, (match) => createInlineFormula(match, rollData));\n    pcontent = html.innerHTML;\n  }\n\n  return pcontent;\n}\n\n/**\n * Resolve range formula to numeric value.\n *\n * @param {string} [formula] Range formula. Only used with \"mi\", \"ft\", \"m\", \"km\" and similar types.\n * @param {\"melee\"|\"touch\"|\"reach\"|\"close\"|\"medium\"|\"long\"|\"mi\"} [type=\"ft\"] Formula type\n * @param {object} [rollData] Roll data for evaluating the formula\n * @returns {number} Range in feet for the defined formula\n */\nexport const calculateRangeFormula = (formula, type = \"ft\", rollData = {}) => {\n  switch (type) {\n    case \"melee\":\n    case \"touch\":\n      return rollData.range?.melee ?? 0;\n    case \"reach\":\n      return rollData.range?.reach ?? 0;\n    case \"close\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.close, rollData).total;\n    case \"medium\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.medium, rollData).total;\n    case \"long\":\n      return RollPF.safeRollSync(pf1.config.spellRangeFormulas.long, rollData).total;\n    case \"mi\":\n      return RollPF.safeRollSync(formula, rollData).total * 5_280;\n    case \"m\":\n      return (RollPF.safeRollSync(formula, rollData).total / 1.5) * 5;\n    case \"km\":\n      return ((RollPF.safeRollSync(formula, rollData).total * 1000) / 1.5) * 5;\n    default:\n      return RollPF.safeRollSync(formula, rollData).total;\n  }\n};\n\n/**\n * Calculates range formula and converts it.\n *\n * Wrapper around {@link calculateRangeFormula} and {@link convertDistance}\n *\n * @example\n * Simple example\n * ```js\n * const [range,unit] = calculateRange(\"@level\", \"mi\", { level:2 });\n * // => range:10560, unit:\"ft\"\n * ```\n *\n * @param {string} formula - Range formula\n * @param {string} type - Type fed to calculateRangeFormula\n * @param {object} rollData - Roll data fed to calculateRangeFormula\n * @returns {Array.<number, string>} - Range value and unit tuple\n */\nexport function calculateRange(formula, type = \"ft\", rollData = {}) {\n  const value = calculateRangeFormula(formula, type, rollData);\n  return convertDistance(value, type);\n}\n\n/**\n * Refreshes all actor data and re-renders sheets.\n *\n * @param {object} [options] - Additional options\n * @param {boolean} [options.renderOnly=false] - If false, actors are reset also.\n * @param {boolean} [options.renderForEveryone=false] - If true, other players are told to re-render, too.\n */\nexport function refreshActors({ renderOnly = false, renderForEveryone = false } = {}) {\n  const resetOrRender = async (actor) => {\n    if (!actor) return;\n    if (!renderOnly) actor.reset();\n    actor.render(true);\n  };\n\n  // Reset base actors\n  game.actors.forEach(resetOrRender);\n\n  // Reset unlinked actors in all scenes\n  game.scenes.forEach((scene) =>\n    scene.tokens\n      .filter((t) => t.actor && !t.isLinked)\n      .map((t) => t.actor)\n      .forEach(resetOrRender)\n  );\n\n  if (renderForEveryone) {\n    game.socket.emit(\"pf1\", \"refreshActorSheets\");\n  }\n}\n\n/**\n * Refresh all actor, item and action sheets.\n *\n * @param {object} [options] Additional options\n * @param {boolean} [options.reset=true] Reset underlying document.\n * @param {boolean} [options.actor] Include actor sheets\n * @param {boolean} [options.item] Include item sheets\n * @param {boolean} [options.action] Include action sheets\n */\nexport function refreshSheets({ reset = true, actor = true, item = true, action = true } = {}) {\n  Object.values(ui.windows).forEach((app) => {\n    if (\n      (actor && app instanceof ActorSheet) ||\n      (item && app instanceof ItemSheet) ||\n      (action && app instanceof pf1.applications.component.ItemActionSheet)\n    ) {\n      if (reset && app.object instanceof Document) app.object.reset();\n      else app.render();\n    }\n  });\n}\n\n/**\n * Turns dictionaries with numbered keys into arrays.\n *\n * @param {object} sourceObj The source object which contains the full array in the same path as targetObj.\n * @param {object} targetObj The target object to alter. The array doesn't have to be immediately in this object.\n * @param {string} keepPath A path to the array to keep, separated with dots. e.g. \"system.damageParts\".\n */\nexport function keepUpdateArray(sourceObj, targetObj, keepPath) {\n  const newValue = foundry.utils.getProperty(targetObj, keepPath);\n  if (newValue == null) return;\n  if (Array.isArray(newValue)) return;\n\n  const newArray = foundry.utils.deepClone(foundry.utils.getProperty(sourceObj, keepPath) || []);\n\n  for (const [key, value] of Object.entries(newValue)) {\n    if (foundry.utils.getType(value) === \"Object\") {\n      const subData = foundry.utils.expandObject(value);\n      newArray[key] = foundry.utils.mergeObject(newArray[key], subData);\n    } else {\n      newArray[key] = value;\n    }\n  }\n\n  foundry.utils.setProperty(targetObj, keepPath, newArray);\n}\n\n/**\n * Deeply difference an object against some other, returning the update keys and values.\n * Unlike foundry.utils.diffObject, this function also deeply compares arrays.\n *\n * @param {object} original       An object comparing data against which to compare\n * @param {object} other          An object containing potentially different data\n * @param {object} [options={}]   Additional options which configure the diff operation\n * @param {boolean} [options.inner=false]  Only recognize differences in other for keys which also exist in original\n * @param {boolean} [options.keepLength=false]  Keep array length intact, possibly having to insert empty objects\n * @returns {object}               An object of the data in other which differs from that in original\n */\nexport const diffObjectAndArray = function (original, other, { inner = false, keepLength = false } = {}) {\n  /**\n   *\n   * @param v0\n   * @param v1\n   */\n  function _difference(v0, v1) {\n    const t0 = getType(v0);\n    const t1 = getType(v1);\n    if (t0 !== t1) return [true, v1];\n    if (t0 === \"Array\") {\n      if (v0.length !== v1.length) return [true, v1];\n      const d = [];\n      for (let a = 0; a < v0.length; a++) {\n        const d2 = diffObjectAndArray(v0[a], v1[a], { inner, keepLength });\n        if (!foundry.utils.isEmpty(d2)) d.push(d2);\n        else if (keepLength) d.push({});\n      }\n      if (d.length > 0) return [true, d];\n      return [false, d];\n    }\n    if (t0 === \"Object\") {\n      if (foundry.utils.isEmpty(v0) !== foundry.utils.isEmpty(v1)) return [true, v1];\n      const d = diffObjectAndArray(v0, v1, { inner, keepLength });\n      return [!foundry.utils.isEmpty(d), d];\n    }\n    return [v0 !== v1, v1];\n  }\n\n  // Recursively call the _difference function\n  return Object.keys(other).reduce((obj, key) => {\n    if (inner && !(key in original)) return obj;\n    const [isDifferent, difference] = _difference(original[key], other[key]);\n    if (isDifferent) obj[key] = difference;\n    return obj;\n  }, {});\n};\n\n/**\n * Determines what ability modifier is appropriate for a given score.\n *\n * @example\n * pf1.utils.getAbilityModifier(15); // => 2\n * pf1.utils.getAbilityModifier(6, { damage: 1 }); // => -2\n *\n * @param {number} [score] - The score to find the modifier for.\n * @param {object} [options={}] - Options for this function.\n * @param {number} [options.penalty=0] - A penalty value to take into account.\n * @param {number} [options.damage=0] - Ability score damage to take into account.\n * @returns {number} The modifier for the given score.\n */\nexport function getAbilityModifier(score = null, options = {}) {\n  if (score != null) {\n    const penalty = Math.abs(options.penalty ?? 0);\n    const damage = Math.abs(options.damage ?? 0);\n    return Math.max(-5, Math.floor((score - 10) / 2) - Math.floor(penalty / 2) - Math.floor(damage / 2));\n  }\n  return 0;\n}\n\n/**\n * Recursively transforms an ES module to a regular, writable object.\n *\n * @internal\n * @template T\n * @param {T} module - The ES module to transform.\n * @returns {T} The transformed module.\n */\nexport function moduleToObject(module) {\n  const result = {};\n  for (const key in module) {\n    if (Object.prototype.toString.call(module[key]) === \"[object Module]\") {\n      result[key] = moduleToObject(module[key]);\n    } else {\n      result[key] = module[key];\n    }\n  }\n  return result;\n}\n\n/**\n * Set default scene scaling.\n *\n * `imperial` sets scaling to 5 ft, `metric` sets scaling to 1.5 m\n *\n * @param {UnitSystem | undefined} [system] System of units. Pull current setting if undefined.\n */\nexport function setDefaultSceneScaling(system) {\n  system ??= getDistanceSystem();\n  if (system == \"metric\") {\n    game.system.gridUnits = \"m\";\n    game.system.gridDistance = 1.5;\n  } else {\n    game.system.gridUnits = \"ft\";\n    game.system.gridDistance = 5;\n  }\n}\n\n/**\n * Create throttling function.\n *\n * Returned function will execute after defined delayed. Multiple calls will be discarded until the callback is executed and new timeout can start.\n *\n * @param {Function} callback - Callback function\n * @param {number} delay - Delay in milliseconds\n * @returns {Function}\n */\nexport function throttle(callback, delay) {\n  let timeoutId = -1;\n  return () => {\n    if (timeoutId <= 0) {\n      timeoutId = setTimeout(() => {\n        timeoutId = -1;\n        callback();\n      }, delay);\n    }\n    return timeoutId;\n  };\n}\n\n/**\n * Get iterator for all actors.\n *\n * @param {object} [options] - Options for which actors to fetch.\n * @param {Array<string>|null} [options.types=null] - Array of actor types to accept. Returns all if null.\n * @param {boolean} [options.base=true] - Return base actors (from game.actors).\n * @param {string|Scene|null} [options.scene=null] - Specific scene. Sets `scenes` and `base` to false.\n * @param {boolean} [options.scenes=false] - All scenes.\n * @param {boolean} [options.linked=true] - Get linked actors from scenes.\n * @param {boolean} [options.unlinked=true] - Get unlinked actors from scenes.\n * @param {Array<string|User>} [options.users=[game.user]] - Test specific users permission, either User instances or user IDs. Defaults to current user.\n * @param {*} [options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER] - What permission level (`CONST.DOCUMENT_OWNERSHIP_LEVELS`) to test user for, if user is defined.\n *\n * @yields {Actor} - Relevant actors\n */\nexport function* getActors({\n  base = true,\n  types = null,\n  scene = null,\n  scenes = false,\n  linked = true,\n  unlinked = true,\n  users = [game.user],\n  ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,\n} = {}) {\n  users = users.map((user) => (user instanceof User ? user : game.users.get(user)));\n\n  const testUsers = (actor) => (users.length ? users.some((user) => actor.testUserPermission(user, ownership)) : true);\n\n  let actors;\n  if (base) {\n    for (const actor of [...game.actors]) {\n      if (types && !types.includes(actor.type)) continue;\n      if (!testUsers(actor)) continue;\n      yield actor;\n    }\n  }\n\n  let sceneList;\n  if (scene) {\n    if (scene instanceof Scene) sceneList = [scene];\n    else sceneList = [game.scenes.get(scene)];\n  } else if (scenes) {\n    sceneList = [...game.scenes];\n  }\n\n  for (const scene of sceneList) {\n    for (const token of [...scene.tokens]) {\n      const actor = token.actor;\n      if (!actor) continue;\n\n      if (types && !types.includes(actor.type)) continue;\n\n      // Test at least one user has appropriate ownership\n      if (!testUsers(actor)) continue;\n\n      const isLinked = token.isLinked;\n      // Yield linked only if such are desired and we didn't already return base actors\n      if (isLinked && linked && !base) yield actor;\n      // Yield unlinked only if desired\n      else if (!isLinked && unlinked) yield actor;\n    }\n  }\n}\n\n/**\n * Parse alignment string and provide breakdown of it.\n *\n * Each alignment is either 0 or 1, except for neutral which can reach 2 for true neutral.\n *\n * @param {string} align - Alignment string.\n * @returns {{lawful:number, evil:number, chaotic:number, good:number, neutral:number}}\n * @since PF1 v10\n */\nexport function parseAlignment(align) {\n  const lawful = align.includes(\"l\") ? 1 : 0;\n  const evil = align.includes(\"e\") ? 1 : 0;\n  const chaotic = align.includes(\"c\") ? 1 : 0;\n  const good = align.includes(\"g\") ? 1 : 0;\n  const neutral = align == \"tn\" ? 2 : align.includes(\"n\") ? 1 : 0;\n  return { lawful, evil, chaotic, good, neutral };\n}\n\n/**\n * Limit precision.\n *\n * Reduces number of decimals but does not insist on those decimals to be there.\n *\n * @beta\n * @param {number} number - Number to adjust\n * @param {number} decimals - Maximum number of decimals\n * @returns {number} - Adjusted number\n */\nexport function limitPrecision(number, decimals = 2) {\n  const mult = Math.pow(10, decimals);\n  return Math.floor(number * mult) / mult;\n}\n","/**\n * Add a checkbox to enable/disable low-light vision effects to a light's configuration\n *\n * @param {FormApplication} app - The LightConfig app\n * @param {jQuery} html - The jQuery of the inner html\n */\nexport const addLowLightVisionToLightConfig = function (app, html) {\n  /** @type {AmbientLightDocument} */\n  const light = app.object;\n\n  // Create checkbox HTML element\n  let checkboxStr = `<div class=\"form-group\"><label>${game.i18n.localize(\"PF1.DisableLightLowLightVision\")}</label>`;\n  checkboxStr += '<input type=\"checkbox\" name=\"flags.pf1.disableLowLight\" data-dtype=\"Boolean\"';\n  if (light.getFlag(\"pf1\", \"disableLowLight\")) checkboxStr += \" checked\";\n  checkboxStr += \"></div>\";\n  const checkbox = $(checkboxStr);\n\n  // Insert new checkbox\n  html.find('div.tab[data-tab=\"basic\"]').append(checkbox);\n};\n\n/**\n * Override `LightSource` initialization and add `getRadius` to support LLV.\n */\nexport const patchCore = function () {\n  // Low-light vision light radius initialization (v10 & v11)\n  const LightSource_initialize = LightSource.prototype.initialize;\n  LightSource.prototype.initialize = function (data = {}) {\n    const { dim, bright } = this.getRadius(data.dim, data.bright);\n\n    // Avoid NaN and introducing keys that shouldn't be in the data\n    // Without undefined check, global illumination will cause darkvision and similar vision modes to glitch.\n    // We're assuming getRadius gives sensible values otherwise.\n    if (data.dim !== undefined) data.dim = dim;\n    if (data.bright !== undefined) data.bright = bright;\n\n    return LightSource_initialize.call(this, data);\n  };\n\n  LightSource.prototype.getRadius = function (dim, bright) {\n    const result = { dim, bright };\n    let multiplier = { dim: 1, bright: 1 };\n\n    if (!game.settings.get(\"pf1\", \"systemVision\")) return result;\n\n    /**\n     * @param {TokenDocument} token\n     * @returns {boolean}\n     */\n    const hasSystemVision = (token) =>\n      token.getFlag(\"pf1\", \"disableLowLight\") !== true && token.getFlag(\"pf1\", \"customVisionRules\") !== true;\n\n    const token = this.object?.document;\n    if (token && !hasSystemVision(token)) return result;\n\n    const requiresSelection = game.user.isGM || game.settings.get(\"pf1\", \"lowLightVisionMode\");\n    const relevantTokens = canvas.tokens.placeables.filter((token) => {\n      const tokenDoc = token.document;\n      return (\n        token.actor?.testUserPermission(game.user, \"OBSERVER\") &&\n        (requiresSelection ? token.controlled : true) &&\n        hasSystemVision(tokenDoc)\n      );\n    });\n    const lowLightTokens = relevantTokens.filter((o) => o.actorVision.lowLight === true);\n\n    if (requiresSelection) {\n      if (lowLightTokens.length && lowLightTokens.length === relevantTokens.length) {\n        multiplier = { dim: 999, bright: 999 };\n        for (const t of lowLightTokens) {\n          const tokenVision = t.actorVision;\n          multiplier.dim = Math.min(multiplier.dim, tokenVision.lowLightMultiplier);\n          multiplier.bright = Math.min(multiplier.bright, tokenVision.lowLightMultiplierBright);\n        }\n      }\n    } else {\n      for (const t of lowLightTokens) {\n        const tokenVision = t.actorVision;\n        multiplier.dim = Math.max(multiplier.dim, tokenVision.lowLightMultiplier);\n        multiplier.bright = Math.max(multiplier.bright, tokenVision.lowLightMultiplierBright);\n      }\n    }\n\n    result.dim *= multiplier.dim;\n    result.bright *= multiplier.bright;\n\n    return result;\n  };\n};\n","import { customRolls } from \"./documents/chat-message.mjs\";\nimport { sortArrayByName } from \"./utils/lib.mjs\";\nimport { RollPF } from \"./dice/roll.mjs\";\nimport { patchCore as patchLowLightVision } from \"./canvas/low-light-vision.mjs\";\n\n// Add inline support for extra /commands\n{\n  const origParse = ChatLog.parse;\n  ChatLog.parse = function (message) {\n    const match = message.match(/^\\/(\\w+)(?: +([^#]+))(?:#(.+))?/),\n      type = match?.[1]?.toUpperCase();\n    if ([\"HEAL\", \"H\", \"DAMAGE\", \"D\"].includes(type)) {\n      match[2] = match[0].slice(1);\n      return [\"custom\", match];\n    } else return origParse.call(this, message);\n  };\n\n  const origClick = TextEditor._onClickInlineRoll;\n  TextEditor._onClickInlineRoll = function (event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    if (!a.classList.contains(\"custom\")) return origClick.call(this, event);\n\n    const chatMessage = `/${a.dataset.formula}`;\n    const speaker = ChatMessage.implementation.getSpeaker();\n    const actor = ChatMessage.implementation.getSpeakerActor(speaker);\n    let rollData = actor ? actor.getRollData() : {};\n\n    const sheet = a.closest(\".sheet\");\n    if (sheet) {\n      const app = ui.windows[sheet.dataset.appid];\n      if ([\"Actor\", \"Item\"].includes(app?.document.documentName)) rollData = app.object.getRollData();\n    }\n    return customRolls(chatMessage, speaker, rollData);\n  };\n\n  // Fix for race condition\n  if ($._data($(\"body\").get(0), \"events\")?.click?.find((o) => o.selector === \"a.inline-roll\")) {\n    $(\"body\").off(\"click\", \"a.inline-roll\", origClick);\n    $(\"body\").on(\"click\", \"a.inline-roll\", TextEditor._onClickInlineRoll);\n  }\n}\n\n// Change tooltip showing on alt\n{\n  const fn = KeyboardManager.prototype._onAlt;\n  KeyboardManager.prototype._onAlt = function (event, up, modifiers) {\n    if (!pf1.tooltip) return;\n    if (!up) pf1.tooltip.lock.new = true;\n    fn.call(this, event, up, modifiers);\n    if (!up) pf1.tooltip.lock.new = false;\n  };\n}\n\n// Patch NumericTerm\nNumericTerm.prototype.getTooltipData = function () {\n  return {\n    formula: this.expression,\n    total: this.total,\n    flavor: this.flavor,\n  };\n};\n\n// Add support for numbers without prefix, e.g. .5\n// This was previously done in StringTerm monkeypatch\nNumericTerm.REGEXP = new RegExp(`^((?:\\\\d+\\\\.|\\\\.)?\\\\d+)${RollTerm.FLAVOR_REGEXP_STRING}?$`);\n\n// Patch ParentheticalTerm and allowed operators\nParentheticalTerm.CLOSE_REGEXP = new RegExp(`\\\\)${RollTerm.FLAVOR_REGEXP_STRING}?`, \"g\");\nOperatorTerm.REGEXP = /(?:&&|\\|\\||\\*\\*|%|\\+|-|\\*|\\/|\\\\%|\\||:|\\?)|(?<![a-z])[!=<>]+/g;\nOperatorTerm.OPERATORS.push(\"\\\\%\", \"!\", \"?\", \":\", \"=\", \"<\", \">\", \"==\", \"===\", \"<=\", \">=\", \"??\", \"||\", \"&&\", \"**\");\n\n// Document link attribute stuffing\n{\n  const origFunc = TextEditor._createContentLink;\n  TextEditor._createContentLink = function (match, { async = false, relativeTo } = {}) {\n    const [type, target, hash, name] = match.slice(1, 5);\n    const a = origFunc.call(this, match, { async, relativeTo });\n    if (name?.indexOf(\"::\") > -1) {\n      const args = name.split(\"::\"),\n        label = args.pop();\n      if (args.length) {\n        args.forEach((o) => {\n          let [key, value] = o.split(/(?<!\\\\):/);\n          if (!(key && value)) {\n            value = key;\n            key = \"extra\";\n          }\n          switch (key) {\n            case \"icon\":\n              a.firstChild.className = \"fas fa-\" + value;\n              break;\n            case \"class\":\n              a.classList.add(...value.split(\" \"));\n              break;\n            default:\n              a.setAttribute(\"data-\" + key, value);\n          }\n        });\n        a.lastChild.textContent = label;\n      }\n    }\n    return a;\n  };\n}\n\n// Patch the `fromData` method used by Foundry to allow rolls from builds with a renamed roll class\n// to still be created from JSON for tooltips etc.\n// Introduced in v0.81.1 for Foundry v9.269\n{\n  const origFunc = Roll.fromData;\n  Roll.fromData = function (data, ...args) {\n    if (data.class === \"RollPF$1\") data.class = \"RollPF\";\n    return origFunc.call(this, data, ...args);\n  };\n}\n\n/**\n * Patch ImagePopout image share handling function to respect identified status of items\n *\n * Synchronized with Foundry VTT v11.311\n *\n * Does not work if sharing embedded document image from compendium.\n */\n{\n  const original_handleShareImage = ImagePopout._handleShareImage;\n  ImagePopout._handleShareImage = function ({ image, title, caption, uuid, showTitle } = {}) {\n    try {\n      const doc = fromUuidSync(uuid);\n      if (doc instanceof Item) {\n        title = doc.name;\n      }\n    } catch (error) {\n      console.error(\"Failed to protect against document identity leakage\", error);\n    }\n\n    return original_handleShareImage.call(this, { image, title, caption, uuid, showTitle });\n  };\n}\n\n/**\n * Stop releasing modifiers on HTMLButtonElement. Check again on proper support of popouts. How blur is handled will have to be reevaluated\n *\n * Introduced Foundry VTT v10.291\n */\n\n{\n  const original_onFocusIn = KeyboardManager.prototype._onFocusIn;\n  KeyboardManager.prototype._onFocusIn = function (event) {\n    const formElements = [HTMLInputElement, HTMLSelectElement, HTMLTextAreaElement, HTMLOptionElement];\n\n    if (event.target.isContentEditable || formElements.some((cls) => event.target instanceof cls)) {\n      this.releaseKeys();\n    }\n  };\n\n  Object.defineProperty(KeyboardManager.prototype, \"hasFocus\", {\n    get() {\n      // Pulled from https://www.w3schools.com/html/html_form_elements.asp\n      const formElements = [\"input\", \"select\", \"textarea\", \"option\", \"[contenteditable]\"];\n      const selector = formElements.map((el) => `${el}:focus`).join(\", \");\n      return document.querySelectorAll(selector).length > 0;\n    },\n  });\n}\n\n// Call patch functions\npatchLowLightVision();\n","const buttons = {\n  spells: { label: \"PF1.BrowseSpells\" },\n  items: { label: \"PF1.BrowseItems\" },\n  bestiary: { label: \"PF1.BrowseBestiary\" },\n  feats: { label: \"PF1.BrowseFeats\" },\n  classes: { label: \"PF1.BrowseClasses\" },\n  races: { label: \"PF1.BrowseRaces\" },\n  buffs: { label: \"PF1.BrowseBuffs\", wide: true },\n};\n\n/**\n * @param event\n */\nfunction compendiumButtonClick(event) {\n  event.preventDefault();\n  const type = event.target.dataset.category;\n  pf1.applications.compendiums[type]._render(true, { focus: true });\n}\n\n/**\n * Render compendium browser buttons.\n *\n * @param {CompendiumDirectory} app\n * @param {JQuery} html\n * @param {object} options\n */\nHooks.on(\"renderCompendiumDirectory\", async (app, [html], options) => {\n  const element = html.querySelector(\"footer.directory-footer\");\n  element.classList.add(\"action-buttons\"); // For v10 cross-compatibility\n\n  for (const [category, info] of Object.entries(buttons)) {\n    const button = document.createElement(\"button\");\n    button.type = \"button\";\n    button.dataset.category = category;\n    button.classList.add(\"compendium\", category);\n    button.innerText = game.i18n.localize(info.label);\n    if (info.wide) button.classList.add(\"colspan-2\");\n    element.append(button);\n    button.addEventListener(\"click\", compendiumButtonClick);\n  }\n});\n\n// Add compendium sidebar context options\nHooks.on(\"getCompendiumDirectoryEntryContext\", (html, entryOptions) => {\n  // Add option to enable & disable pack\n  entryOptions.unshift(\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.HidePack\"),\n      icon: '<i class=\"fas fa-low-vision\"></i>',\n      condition: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled !== true;\n      },\n      callback: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: true } });\n      },\n    },\n    {\n      name: game.i18n.localize(\"PF1.CompendiumBrowser.ShowPack\"),\n      icon: '<i class=\"fas fa-eye\"></i>',\n      condition: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        return pack.config.pf1?.disabled === true;\n      },\n      callback: ([li]) => {\n        const pack = game.packs.get(li.dataset.pack);\n        pack.configure({ pf1: { disabled: false } });\n      },\n    }\n  );\n});\n","const getMessage = (html) => game.messages.get(html.dataset.messageId);\nconst isOwnedSpellCard = (msg) => {\n  const item = msg.itemSource;\n  return item && item.type === \"spell\" && item.isOwner && !!item.actor;\n};\n\n/**\n * @param _\n * @param {object[]} entries - Context menu entries\n */\nfunction spellCardContextMenu(_, entries) {\n  entries.unshift(\n    {\n      name: \"PF1.ConcentrationCheck\",\n      icon: '<i class=\"fa-solid fa-brain context-icon pf1 concentration\"></i>',\n      condition: ([html]) => isOwnedSpellCard(getMessage(html)),\n      callback: ([html]) => {\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollConcentration(item.system.spellbook, { messageId: msg.id });\n      },\n    },\n    {\n      name: \"PF1.CasterLevelCheck\",\n      icon: '<i class=\"fa-solid fa-wand-magic-sparkles context-icon pf1 caster-level\"></i>',\n      condition: ([html]) => isOwnedSpellCard(getMessage(html)),\n      callback: ([html]) => {\n        const msg = getMessage(html);\n        const item = msg.itemSource;\n        const actor = item?.actor;\n        actor.rollCL(item.system.spellbook, { messageId: msg.id });\n      },\n    }\n    // TODO: Roll ASF option\n  );\n}\n\nHooks.on(\"getChatLogEntryContext\", spellCardContextMenu);\n","import { measureDistance as unifiedMeasureDistance } from \"./lib.mjs\";\n\n/**\n * Measure the distance between two pixel coordinates\n * See BaseGrid.measureDistance for more details\n *\n * @param segments\n * @param options\n */\nexport const measureDistances = function (segments, options = {}) {\n  if (!options.gridSpaces) return BaseGrid.prototype.measureDistances.call(this, segments, options);\n\n  // Track the total number of diagonals\n  const diagonalRule = game.settings.get(\"pf1\", \"diagonalMovement\");\n  const state = { diagonals: 0 };\n\n  // Iterate over measured segments\n  return segments.map((s) => unifiedMeasureDistance(null, null, { ray: s.ray, diagonalRule, state }));\n};\n\n/* -------------------------------------------- */\n\nconst _TokenHUD_getStatusEffectChoices = TokenHUD.prototype._getStatusEffectChoices;\nTokenHUD.prototype._getStatusEffectChoices = function () {\n  const core = _TokenHUD_getStatusEffectChoices.call(this),\n    buffs = {};\n\n  const items = this.object.actor?.itemTypes.buff ?? [];\n  for (const buff of items) {\n    buffs[`buff-${buff.id}`] = {\n      id: buff.id,\n      title: buff.name,\n      src: buff.img,\n      isActive: buff.isActive,\n      isOverlay: false,\n      cssClass: buff.isActive ? \"active\" : \"\",\n    };\n  }\n\n  return { ...core, ...buffs };\n};\n\n//const TokenHUD__onToggleEffect = TokenHUD.prototype._onToggleEffect;\nTokenHUD.prototype._onToggleEffect = function (event, { overlay = false } = {}) {\n  event.preventDefault();\n  const img = event.currentTarget;\n  const statusId = img.dataset.statusId;\n  const effect =\n    statusId && this.object.actor\n      ? CONFIG.statusEffects.find((e) => e.id === statusId) ?? statusId\n      : img.getAttribute(\"src\");\n\n  return this.object.toggleEffect(effect, { overlay });\n};\n","import { refreshActors } from \"./utils/lib.mjs\";\n\nexport function initializeSocket() {\n  game.socket.on(\"system.pf1\", runSocketFunction);\n}\n\nconst runSocketFunction = async function (args, senderId) {\n  const isFirstGM = game.users.activeGM.isSelf;\n  const sender = game.users.get(senderId);\n  try {\n    switch (args.eventType) {\n      case \"currencyTransfer\": {\n        if (!isFirstGM) return;\n        let source = await fromUuid(args.data.sourceActor);\n        let dest = await fromUuid(args.data.destActor);\n\n        if (args.data.sourceContainer) source = source.items.get(args.data.sourceContainer);\n        if (args.data.destContainer) dest = dest.items.get(args.data.destContainer);\n        const amount = args.data.amount;\n\n        pf1.applications.CurrencyTransfer.transfer(source, dest, amount, args.data.sourceAlt, args.data.destAlt, false);\n        break;\n      }\n      case \"alterChatTargetAttribute\":\n        if (isFirstGM) alterChatTargetAttribute(args);\n        break;\n      case \"giveItem\": {\n        if (!isFirstGM) return;\n        const item = await fromUuid(args.item);\n        const sourceActor = item.actor;\n        if (!sourceActor.testUserPermission(sender, \"OWNER\")) return;\n        const targetActor = await fromUuid(args.targetActor);\n        const itemData = item.toObject();\n        await targetActor.createEmbeddedDocuments(\"Item\", [itemData]);\n        await sourceActor.deleteEmbeddedDocuments(\"Item\", [item.id]);\n        break;\n      }\n      case \"refreshActorSheets\":\n        if (sender.hasPermission(CONST.USER_PERMISSIONS.SETTINGS_MODIFY)) {\n          pf1.utils.refreshActors({ renderOnly: true });\n        }\n        break;\n    }\n  } catch (err) {\n    console.log(\"PF1 | Socket Error:\", err);\n  }\n};\n\nexport const alterChatTargetAttribute = function (args) {\n  const message = game.messages.get(args.message);\n  const contentHTML = $(message.data.content);\n\n  // Alter saving throw\n  if (args.save != null) {\n    const targetElem = contentHTML.find(\n      `div.attack-targets .target[data-uuid=\"${args.targetUuid}\"] .saving-throws .${args.save}`\n    );\n    const valueElem = targetElem.find(\".value\");\n    valueElem.html(`${args.value}`);\n\n    // Add classes based off extra data\n    if (args.isFailure) valueElem.addClass(\"failure\");\n    else valueElem.removeClass(\"failure\");\n    if (args.isSuccess) valueElem.addClass(\"success\");\n    else valueElem.removeClass(\"success\");\n\n    return message.update({\n      content: contentHTML.prop(\"outerHTML\"),\n    });\n  }\n};\n","/**\n * Base actor class with minimal functionality.\n *\n * Provides only caching of .itemTypes and nothing else.\n */\nexport class ActorBasePF extends Actor {\n  constructor(...args) {\n    super(...args);\n\n    // Init .itemTypes cache\n    this._itemTypes ??= null;\n  }\n\n  /**\n   * Resets internal itemTypes cache.\n   *\n   * @protected\n   * @override\n   */\n  prepareBaseData() {\n    // Reset item types cache\n    this._itemTypes = null;\n    // Reset roll data cache if it exists.\n    delete this._rollData;\n\n    super.prepareBaseData();\n  }\n\n  /**\n   * Get item by its identifier tag.\n   *\n   * @param {string} tag - Desired tag.\n   * @returns {Item|undefined} - Matching item or undefined if no item is found.\n   */\n  getItemByTag(tag) {\n    return this.items.find((o) => o.system.tag === tag);\n  }\n\n  /**\n   * Cached result of .itemTypes\n   *\n   * @internal\n   * @type {ItemTypesMap}\n   */\n  _itemTypes;\n\n  /**\n   * Cached override\n   *\n   * @override\n   * @type {ItemTypesMap}\n   */\n  get itemTypes() {\n    if (!this._itemTypes) {\n      this._itemTypes = super.itemTypes;\n\n      // Enrich the arrays with getName() and getId()\n      for (const items of Object.values(this._itemTypes)) {\n        Object.defineProperties(items, {\n          getName: {\n            value: function (name) {\n              return this.find((i) => i.name === name);\n            },\n          },\n          getId: {\n            value: function (identifier) {\n              return this.find((i) => i.system.tag === identifier);\n            },\n          },\n        });\n      }\n    }\n    return this._itemTypes;\n  }\n\n  /**\n   * Returns first active owner, favoring players and GM as fallback.\n   *\n   * @type {User|null}\n   */\n  get activeOwner() {\n    const firstOwner =\n      game.users\n        .filter((u) => u.active && !u.isGM)\n        .filter((u) => this.testUserPermission(u, \"OWNER\"))\n        .sort((a, b) => (a.id > b.id ? 1 : -1))[0] ?? null;\n\n    return firstOwner ?? game.users.activeGM;\n  }\n\n  /**\n   * Get related combatants.\n   *\n   * @param {Combat} [combat=game.combat] Combat instance\n   * @returns {Combatant[]} Related combatants.\n   */\n  getCombatants(combat = game.combat) {\n    return combat?.combatants.filter((c) => c.actor === this) ?? [];\n  }\n\n  /**\n   * @type {boolean} - Whether current user can see through this actor.\n   */\n  get sharesVision() {\n    const visionFlag = this.getFlag(\"pf1\", \"visionSharing\");\n    if (!visionFlag) return false;\n\n    const shared = visionFlag.users[game.user.id] ?? null;\n    if (shared === true) return true;\n    else if (shared === false) return false;\n    // Else handle by default rule\n    return visionFlag.default ?? false;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 where visibility of AE no longer controls if it's temporary.\n   *\n   * @internal\n   * @returns {ActiveEffectPF[]}\n   */\n  get _effectsWithDuration() {\n    const effects = [];\n    for (const effect of this.allApplicableEffects()) {\n      if (effect.active && effect._hasDuration) effects.push(effect);\n    }\n    return effects;\n  }\n}\n\n/**\n * All items sorted by type.\n *\n * @typedef ItemTypesMap\n * @property {ItemAttackPF[]} attack\n * @property {ItemBuffPF[]} buff\n * @property {ItemClassPF[]} class\n * @property {ItemConsumablePF[]} consumable\n * @property {ItemContainerPF[]} container\n * @property {ItemEquipmentPF[]} equipment\n * @property {ItemFeatPF[]} feat\n * @property {ItemLootPF[]} loot\n * @property {ItemRacePF[]} race\n * @property {ItemSpellPF[]} spell\n * @property {ItemWeaponPF[]} weapon\n */\n","export class ItemBasePF extends Item {\n  /**\n   * Item create dialog.\n   *\n   * @override\n   * @param {object} data Initial form data\n   * @param {object} [context] Additional options.\n   * @param {Actor|null} [context.parent=null] Parent parameter passed to Item.create() options\n   * @param {string|null} [context.pack=null] Pack ID parameter passed to Item.create() options\n   * @param {object} [context.options] Dialog context options.\n   * @returns {Promise<Item|null>}\n   *\n   * Synchronized with Foundry VTT v11.315\n   */\n  static async createDialog(data = {}, { parent = null, pack = null, ...options } = {}) {\n    return pf1.applications.item.CreateDialog.waitPrompt(data, { parent, pack, options });\n  }\n\n  static async createDocuments(data = [], context = {}) {\n    if (!Array.isArray(data)) data = [data]; // Match Foundry API\n\n    const origContext = foundry.utils.deepClone(context);\n    const inActor = context.parent instanceof Actor;\n\n    let supplements;\n    if (inActor) {\n      supplements = await this._collectItemSupplements(data, context);\n    }\n\n    const created = await super.createDocuments(data, context);\n\n    if (supplements?.size) {\n      await this._addSupplementChildLinks(created, supplements, origContext);\n    }\n\n    return created;\n  }\n\n  /**\n   * @internal\n   * @param {Array<object>} items - Array of item data\n   * @param {object} context\n   * @returns {Map<string, *>}\n   */\n  static async _collectItemSupplements(items, context) {\n    const allSupplements = new Collection();\n\n    const depth = 0;\n    const unnotified = 0;\n\n    const collect = async (item, { depth = 0 } = {}) => {\n      const supplements = item.system.links?.supplements ?? [];\n      const classLink = item.system.class;\n      // Log larger fetches.\n      // Fails if there's multiple small fetches\n      if (supplements.length > 5) console.log(\"Fetching\", supplements.length, \"supplements for\", item.name);\n      // Collect supplements\n      const newItems = [];\n      for (const supplement of supplements) {\n        const { uuid } = supplement;\n        if (!uuid) continue; // Erroneous supplement data\n        const extraItem = await fromUuid(uuid);\n        if (!extraItem) {\n          // TODO: Display notification instead when this is from UI interaction.\n          console.warn(\"Supplement\", uuid, \"not found for\", item.uuid ?? item.flags?.core?.sourceId ?? item);\n          continue;\n        }\n        const old = allSupplements.get(uuid);\n        if (old) old.count += 1;\n        else {\n          allSupplements.set(uuid, { parent: item, item: extraItem, count: 1, classLink });\n          newItems.push(extraItem);\n        }\n      }\n\n      // TODO: Make the limits here configurable?\n      if (newItems.length) {\n        if (depth > 3) {\n          return void console.warn(\"Stopping collecting supplements deeper than 3 layers\");\n        }\n        if (allSupplements.size > 100 && newItems.length) {\n          return void console.warn(`Too many supplements (${allSupplements.size}), stopping collecting more`);\n        }\n\n        for (const newItem of newItems) {\n          // TODO: Somehow add child relation to the children\n          await collect(newItem, { depth: depth + 1 });\n        }\n      }\n    };\n\n    // Collect supplements for all items\n    for (const item of items) await collect(item);\n\n    if (allSupplements.size) {\n      // Add to items array\n      for (const supplement of allSupplements) {\n        const { item, count, parent } = supplement;\n        const parentUuid = parent?.uuid ?? parent?.flags?.core?.sourceId;\n        const itemData = game.items.fromCompendium(item, { clearFolder: true });\n        if (parentUuid) {\n          setProperty(itemData, \"flags.pf1.source\", parentUuid);\n        }\n        // Adjust quantity of physical items if more than one was added of the same item\n        if (item.isPhysical && itemData.system.quantity > 0) {\n          itemData.system.quantity *= count;\n        }\n        // Inherit class link\n        if (supplement.classLink && item.type === \"feat\" && item.system.subType === \"classFeat\") {\n          itemData.system.class = supplement.classLink;\n        }\n        items.push(itemData);\n      }\n    }\n\n    return allSupplements;\n  }\n\n  /**\n   * Update item child links with supplements.\n   *\n   * @internal\n   * @param {Array<Item>} items\n   * @param context\n   * @param {Map<string,object>} supplements\n   */\n  static async _addSupplementChildLinks(items, supplements, context) {\n    const updates = new Collection();\n    const collection = new Collection();\n    for (const item of items) {\n      const source = item.getFlag(\"core\", \"sourceId\");\n      if (source) collection.set(source, item);\n    }\n\n    for (const item of items) {\n      const source = item.getFlag(\"pf1\", \"source\");\n      if (source) {\n        const parent = collection.get(source);\n        let update = updates.get(parent.id);\n        if (!update) {\n          update = { system: { links: { children: [] } } };\n          update._id = parent.id;\n          updates.set(parent.id, update);\n        }\n\n        update.system.links.children.push({ uuid: item.getRelativeUUID(context.parent) });\n      }\n    }\n\n    if (updates.size) {\n      return this.updateDocuments(Array.from(updates), context);\n    }\n  }\n\n  /**\n   * Fetch item name\n   *\n   * @param {boolean} [forcePlayerPerspective=false] - If true, return value players see.\n   * @returns {string}\n   */\n  getName(forcePlayerPerspective = false) {\n    return this.name;\n  }\n\n  /**\n   * Is the item is fully functional.\n   *\n   * This returns composite result of if the item is equipped, has quantity, is not disabled, is not out of charges, etc.\n   * and is not representative if the item can be set active or not via {@link setActive}.\n   *\n   * @see {@link activeState}\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get isActive() {\n    return true;\n  }\n\n  /**\n   * If the item can be activated via {@link setActive}.\n   *\n   * {@link isActive} can return variable state independent of the toggle that {@link setActive} controls, this returns .\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get activeState() {\n    return this.isActive;\n  }\n\n  /**\n   * Set item's active state.\n   *\n   * @abstract\n   * @param {boolean} active - Active state\n   * @param {object} [context] - Optional update context\n   * @returns {Promise<this>} - Update promise if item type supports the operation.\n   * @throws {Error} - If item does not support the operation.\n   */\n  async setActive(active, context) {\n    throw new Error(`Item type ${this.type} does not support ItemBasePF#setActive`);\n  }\n\n  /**\n   * Is this item usable at base level, disregarding per-action details.\n   *\n   * @abstract\n   * @type {boolean}\n   */\n  get canUse() {\n    return this.isActive;\n  }\n}\n","import { RollPF } from \"../../../dice/roll.mjs\";\n\n/**\n * @this {pf1.documents.actor.ActorPF}\n */\nexport function applyChanges() {\n  this.changeOverrides = {};\n  const changes = Array.from(this.changes);\n\n  const { targets, types } = getSortChangePriority.call(this);\n  const _sortChanges = function (a, b) {\n    const targetA = targets.indexOf(a.target);\n    const targetB = targets.indexOf(b.target);\n    const typeA = types.indexOf(a.type);\n    const typeB = types.indexOf(b.type);\n    const prioA = a.priority ?? 0;\n    const prioB = b.priority ?? 0;\n\n    return prioB - prioA || targetA - targetB || typeA - typeB;\n  };\n\n  // Organize changes by priority\n  changes.sort((a, b) => _sortChanges.call(this, a, b));\n\n  // Parse change flags\n  for (const i of this.changeItems) {\n    if (!i.system.changeFlags) continue;\n    for (const [k, v] of Object.entries(i.system.changeFlags)) {\n      if (v === true) {\n        this.changeFlags[k] = true;\n\n        if (k === \"loseDexToAC\") {\n          for (const k2 of [\"normal\", \"touch\"]) {\n            getSourceInfo(this.sourceInfo, `system.attributes.ac.${k2}.total`).negative.push({\n              value: game.i18n.localize(\"PF1.ChangeFlagLoseDexToAC\"),\n              name: i.name,\n              type: i.type,\n            });\n          }\n          getSourceInfo(this.sourceInfo, \"system.attributes.cmd.total\").negative.push({\n            value: game.i18n.localize(\"PF1.ChangeFlagLoseDexToAC\"),\n            name: i.name,\n            type: i.type,\n          });\n        }\n      }\n    }\n  }\n  this.refreshDerivedData();\n\n  // Determine continuous changes\n  const continuousChanges = changes.filter((o) => o.continuous === true);\n\n  resetSkills.call(this);\n\n  // Apply all changes\n  for (const change of changes) {\n    const flats = change.getTargets(this);\n    for (const f of flats) {\n      if (!this.changeOverrides[f]) this.changeOverrides[f] = createOverride();\n    }\n\n    change._safeApplyChange(this, flats, { applySourceInfo: false });\n\n    // Apply continuous changes\n    for (const cc of continuousChanges) {\n      if (cc === change) continue;\n      const flats = cc.getTargets(this);\n      for (const f of flats) {\n        if (!this.changeOverrides[f]) this.changeOverrides[f] = createOverride();\n      }\n\n      cc._safeApplyChange(this, flats, { applySourceInfo: false });\n    }\n\n    this.refreshDerivedData();\n  }\n\n  // Apply source info for changes\n  for (const change of changes) {\n    change.applySourceInfo(this);\n  }\n\n  finalizeSkills.call(this);\n}\n\nconst createOverride = function () {\n  const result = {\n    add: {},\n    set: {},\n  };\n\n  for (const k of Object.keys(pf1.config.bonusTypes)) {\n    result.add[k] = null;\n    result.set[k] = null;\n  }\n\n  return result;\n};\n\nconst getSortChangePriority = function () {\n  /** @type {[string, {sort: number}][]}*/\n  const skillTargets = this._skillTargets.map((target, index) => [target, { sort: 76000 + index * 10 }]);\n  const buffTargets = Object.entries(pf1.config.buffTargets);\n  const targets = [...skillTargets, ...buffTargets]\n    .sort(([, { sort: aSort }], [, { sort: bSort }]) => aSort - bSort)\n    .map(([target]) => target);\n\n  return {\n    targets,\n    types: Object.keys(pf1.config.bonusTypes),\n  };\n};\n\n/**\n * @this {ActorPF}\n * @param {BuffTarget} target Target (e.g. \"ac\" or \"skills\")\n * @param {ModifierType} modifierType Type (e.g. \"profane\", \"untyped\", or \"dodge\"). If undefined, all valid targets will be returned.\n * @param {number} [value]  Value, if known\n * @returns {Array<string>} Array of target paths to modify\n */\nexport const getChangeFlat = function (target, modifierType, value) {\n  if (target == null) return [];\n\n  const curData = this.system;\n  /** @type {string[]} */\n  const result = [];\n\n  switch (target) {\n    case \"mhp\":\n      result.push(\"system.attributes.hp.max\");\n      break;\n    case \"wounds\":\n      result.push(\"system.attributes.wounds.max\");\n      break;\n    case \"woundThreshold\":\n      result.push(\"system.attributes.wounds.threshold\");\n      break;\n    case \"vigor\":\n      result.push(\"system.attributes.vigor.max\");\n      break;\n    case \"str\":\n    case \"dex\":\n    case \"con\":\n    case \"int\":\n    case \"wis\":\n    case \"cha\":\n      if ([\"base\", \"untypedPerm\"].includes(modifierType)) {\n        result.push(`system.abilities.${target}.total`, `system.abilities.${target}.base`);\n        break;\n      }\n      result.push(`system.abilities.${target}.total`);\n      break;\n    case \"strPen\":\n    case \"dexPen\":\n    case \"conPen\":\n    case \"intPen\":\n    case \"wisPen\":\n    case \"chaPen\": {\n      const ablKey = target.slice(0, -3);\n      result.push(`system.abilities.${ablKey}.penalty`);\n      break;\n    }\n    case \"strMod\":\n    case \"dexMod\":\n    case \"conMod\":\n    case \"intMod\":\n    case \"wisMod\":\n    case \"chaMod\":\n      result.push(`system.abilities.${target.slice(0, 3)}.mod`);\n      break;\n    case \"carryStr\":\n      result.push(\"system.details.carryCapacity.bonus.total\");\n      break;\n    case \"carryMult\":\n      result.push(\"system.details.carryCapacity.multiplier.total\");\n      break;\n    case \"ac\":\n      result.push(\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\");\n\n      switch (modifierType) {\n        case \"dodge\":\n        case \"haste\":\n          result.push(\"system.attributes.cmd.total\");\n          break;\n        case \"deflection\":\n        case \"circumstance\":\n        case \"insight\":\n        case \"luck\":\n        case \"morale\":\n        case \"profane\":\n        case \"sacred\":\n          result.push(\n            \"system.attributes.ac.flatFooted.total\",\n            \"system.attributes.cmd.total\",\n            \"system.attributes.cmd.flatFootedTotal\"\n          );\n          break;\n        default:\n          result.push(\"system.attributes.ac.flatFooted.total\");\n          // Other penalties also apply to CMD, but not bonuses\n          if (value < 0) {\n            result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n          }\n          break;\n      }\n      break;\n    case \"aac\": {\n      const targets = [\"system.ac.normal.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.normal.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.normal.enh\");\n          break;\n        default:\n          targets.push(\"system.ac.normal.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"sac\": {\n      const targets = [\"system.ac.shield.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.shield.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.shield.enh\");\n          break;\n        default:\n          targets.push(\"system.ac.shield.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"nac\": {\n      const targets = [\"system.ac.natural.total\"];\n      switch (modifierType) {\n        case \"base\":\n          targets.push(\"system.ac.natural.base\");\n          break;\n        case \"enh\":\n          targets.push(\"system.ac.natural.enh\");\n          break;\n        default:\n          targets.push(\"system.ac.natural.misc\");\n          break;\n      }\n      result.push(...targets);\n      break;\n    }\n    case \"tac\":\n      result.push(\"system.attributes.ac.touch.total\");\n      break;\n    case \"ffac\":\n      result.push(\"system.attributes.ac.flatFooted.total\");\n      break;\n    case \"ffcmd\":\n      result.push(\"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"bab\":\n      result.push(\"system.attributes.bab.total\");\n      break;\n    case \"~attackCore\":\n      result.push(\"system.attributes.attack.shared\");\n      break;\n    case \"attack\":\n      result.push(\"system.attributes.attack.general\");\n      break;\n    case \"mattack\":\n      result.push(\"system.attributes.attack.melee\");\n      break;\n    case \"nattack\":\n      result.push(\"system.attributes.attack.natural\");\n      break;\n    case \"rattack\":\n      result.push(\"system.attributes.attack.ranged\");\n      break;\n    case \"critConfirm\":\n      result.push(\"system.attributes.attack.critConfirm\");\n      break;\n    case \"allSavingThrows\":\n      result.push(\n        \"system.attributes.savingThrows.fort.total\",\n        \"system.attributes.savingThrows.ref.total\",\n        \"system.attributes.savingThrows.will.total\"\n      );\n      break;\n    case \"fort\":\n      result.push(\"system.attributes.savingThrows.fort.total\");\n      break;\n    case \"ref\":\n      result.push(\"system.attributes.savingThrows.ref.total\");\n      break;\n    case \"will\":\n      result.push(\"system.attributes.savingThrows.will.total\");\n      break;\n    case \"skills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const b of Object.keys(skl.subSkills)) {\n            result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"unskills\":\n      // Untrained skills\n      for (const [skillId, skill] of Object.entries(curData.skills)) {\n        if (skill == null) continue;\n        for (const [subSkillId, subskill] of Object.entries(skill.subSkills ?? {})) {\n          if (subskill.rank > 0) continue;\n          result.push(`system.skills.${skillId}.subSkills.${subSkillId}.mod`);\n        }\n        if (skill.rank > 0) continue;\n        result.push(`system.skills.${skillId}.mod`);\n      }\n      break;\n    case \"reach\":\n      // Natural reach\n      result.push(\"system.traits.reach.total.melee\");\n      result.push(\"system.traits.reach.total.reach\");\n      break;\n    case \"strSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"str\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"str\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"dexSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"dex\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"dex\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"conSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"con\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"con\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"intSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"int\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"int\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"wisSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"wis\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"wis\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"chaSkills\":\n      for (const [a, skl] of Object.entries(curData.skills)) {\n        if (skl == null) continue;\n        if (skl.ability === \"cha\") result.push(`system.skills.${a}.mod`);\n\n        if (skl.subSkills != null) {\n          for (const [b, subSkl] of Object.entries(skl.subSkills)) {\n            if (subSkl != null && subSkl.ability === \"cha\") result.push(`system.skills.${a}.subSkills.${b}.mod`);\n          }\n        }\n      }\n      break;\n    case \"allChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        \"system.abilities.dex.checkMod\",\n        \"system.abilities.con.checkMod\",\n        \"system.abilities.int.checkMod\",\n        \"system.abilities.wis.checkMod\",\n        \"system.abilities.cha.checkMod\",\n        ...(this.system.attributes.init.ability ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"strChecks\":\n      result.push(\n        \"system.abilities.str.checkMod\",\n        ...(this.system.attributes.init.ability === \"str\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"dexChecks\":\n      result.push(\n        \"system.abilities.dex.checkMod\",\n        ...(this.system.attributes.init.ability === \"dex\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"conChecks\":\n      result.push(\n        \"system.abilities.con.checkMod\",\n        ...(this.system.attributes.init.ability === \"con\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"intChecks\":\n      result.push(\n        \"system.abilities.int.checkMod\",\n        ...(this.system.attributes.init.ability === \"int\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"wisChecks\":\n      result.push(\n        \"system.abilities.wis.checkMod\",\n        ...(this.system.attributes.init.ability === \"wis\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"chaChecks\":\n      result.push(\n        \"system.abilities.cha.checkMod\",\n        ...(this.system.attributes.init.ability === \"cha\" ? [\"system.attributes.init.total\"] : [])\n      );\n      break;\n    case \"allSpeeds\":\n      for (const speedKey of Object.keys(curData.attributes.speed)) {\n        result.push(`system.attributes.speed.${speedKey}.total`);\n      }\n      break;\n    case \"landSpeed\":\n      result.push(\"system.attributes.speed.land.total\");\n      break;\n    case \"climbSpeed\":\n      result.push(\"system.attributes.speed.climb.total\");\n      break;\n    case \"swimSpeed\":\n      result.push(\"system.attributes.speed.swim.total\");\n      break;\n    case \"burrowSpeed\":\n      result.push(\"system.attributes.speed.burrow.total\");\n      break;\n    case \"flySpeed\":\n      result.push(\"system.attributes.speed.fly.total\");\n      break;\n    case \"cmb\":\n      result.push(\"system.attributes.cmb.bonus\");\n      break;\n    case \"cmd\":\n      if ([\"dodge\", \"haste\"].includes(modifierType)) {\n        result.push(\"system.attributes.cmd.total\");\n        break;\n      }\n      result.push(\"system.attributes.cmd.total\", \"system.attributes.cmd.flatFootedTotal\");\n      break;\n    case \"init\":\n      result.push(\"system.attributes.init.total\");\n      break;\n    case \"acpA\":\n      result.push(\"system.attributes.acp.armorBonus\");\n      break;\n    case \"acpS\":\n      result.push(\"system.attributes.acp.shieldBonus\");\n      break;\n    case \"mDexA\":\n      result.push(\"system.attributes.mDex.armorBonus\");\n      break;\n    case \"mDexS\":\n      result.push(\"system.attributes.mDex.shieldBonus\");\n      break;\n    case \"spellResist\":\n      result.push(\"system.attributes.sr.total\");\n      break;\n    case \"damage\":\n      result.push(\"system.attributes.damage.general\");\n      break;\n    case \"mdamage\":\n      result.push(\"system.attributes.damage.meleeAll\");\n      break;\n    case \"rdamage\":\n      result.push(\"system.attributes.damage.rangedAll\");\n      break;\n    case \"wdamage\":\n      result.push(\"system.attributes.damage.weapon\");\n      break;\n    case \"rwdamage\":\n      result.push(\"system.attributes.damage.ranged\");\n      break;\n    case \"twdamage\":\n      result.push(\"system.attributes.damage.thrown\");\n      break;\n    case \"mwdamage\":\n      result.push(\"system.attributes.damage.melee\");\n      break;\n    case \"ndamage\":\n      result.push(\"system.attributes.damage.natural\");\n      break;\n    case \"sdamage\":\n      result.push(\"system.attributes.damage.spell\");\n      break;\n    case \"bonusFeats\":\n      result.push(\"system.details.feats.bonus\");\n      break;\n    case \"bonusSkillRanks\":\n      result.push(\"system.details.skills.bonus\");\n      break;\n    case \"concentration\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.concentration.total\",\n        \"system.attributes.spells.spellbooks.secondary.concentration.total\",\n        \"system.attributes.spells.spellbooks.tertiary.concentration.total\",\n        \"system.attributes.spells.spellbooks.spelllike.concentration.total\"\n      );\n      break;\n    case \"cl\":\n      result.push(\n        \"system.attributes.spells.spellbooks.primary.cl.total\",\n        \"system.attributes.spells.spellbooks.secondary.cl.total\",\n        \"system.attributes.spells.spellbooks.tertiary.cl.total\",\n        \"system.attributes.spells.spellbooks.spelllike.cl.total\"\n      );\n      break;\n    case \"dc\":\n      result.push(`system.attributes.spells.school.all.dc`);\n      break;\n  }\n\n  // Per school DC target\n  const schoolDC = /^dc\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolDC) {\n    const schoolId = schoolDC.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.dc`);\n  }\n\n  // Per school CL target\n  const schoolCL = /^cl\\.school\\.(?<schoolId>\\w+)/.exec(target);\n  if (schoolCL) {\n    const schoolId = schoolCL.groups.schoolId;\n    result.push(`system.attributes.spells.school.${schoolId}.cl`);\n  }\n\n  // Per book concentration target\n  const concnMatch = /^concn\\.(?<bookId>\\w+)/.exec(target);\n  if (concnMatch) {\n    const bookId = concnMatch.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.concentration.total`);\n  }\n\n  // Per book caster level target\n  const bookCL = /^cl\\.book\\.(?<bookId>\\w+)/.exec(target);\n  if (bookCL) {\n    const bookId = bookCL.groups.bookId;\n    result.push(`system.attributes.spells.spellbooks.${bookId}.cl.bonus`);\n  }\n\n  if (/^skill\\./.test(target)) {\n    const parts = target.split(\".\").slice(1);\n    const sklKey = parts.shift();\n    const subSklKey = parts.pop();\n\n    if (subSklKey) {\n      if (curData.skills[sklKey]?.subSkills?.[subSklKey] != null) {\n        result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n      }\n    } else {\n      const skillData = curData.skills[sklKey];\n      if (skillData != null) {\n        result.push(`system.skills.${sklKey}.mod`);\n        // Apply to subskills also\n        for (const subSklKey of Object.keys(skillData.subSkills ?? {})) {\n          result.push(`system.skills.${sklKey}.subSkills.${subSklKey}.mod`);\n        }\n      }\n    }\n  }\n\n  // Call hooks to enable modules to add or adjust the result array\n  if (Hooks.events.pf1GetChangeFlat?.length) {\n    Hooks.callAll(\"pf1GetChangeFlat\", result, target, modifierType, value, this);\n  }\n\n  // Return results directly when deprecation is removed\n  return result;\n};\n\n/**\n * Calculate actor health\n *\n * @param {ActorPF} actor - Actor\n * @param {ItemPF[]} allClasses - All classes from the actor\n * @param changes - Changes\n */\nfunction calculateHealth(actor, allClasses, changes) {\n  // Categorize classes\n  const [pcClasses, npcClasses, racialHD] = allClasses.reduce(\n    (all, cls) => {\n      if (cls.subType === \"racial\") all[2].push(cls);\n      else if (cls.subType === \"npc\") all[1].push(cls);\n      else all[0].push(cls);\n      return all;\n    },\n    [[], [], []]\n  );\n\n  const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n  /**\n   * @function\n   * @param {number} value\n   * @returns {number}\n   */\n  const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n  const { continuous } = healthConfig;\n\n  /**\n   * @param {number} value\n   * @param {number} fcb\n   * @param {ItemPF} source\n   */\n  function pushHealth(value, fcb, source) {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: value,\n        target: \"mhp\",\n        type: \"untypedPerm\",\n        flavor: source.name,\n      }),\n      new pf1.components.ItemChange({\n        formula: value,\n        target: \"vigor\",\n        type: \"untypedPerm\",\n        flavor: source.name,\n      })\n    );\n    if (fcb != 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: fcb,\n          target: \"mhp\",\n          type: \"untypedPerm\",\n          flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n        }),\n        new pf1.components.ItemChange({\n          formula: fcb,\n          target: \"vigor\",\n          type: \"untypedPerm\",\n          flavor: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: source.name }),\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {ItemPF} healthSource\n   */\n  function manualHealth(healthSource) {\n    const fcbHp = pf1.config.favoredClassTypes.includes(healthSource.subType)\n      ? healthSource.system.fc.hp.value || 0\n      : 0;\n\n    let health = healthSource.system.hp;\n    if (!continuous) health = round(health);\n\n    pushHealth(health, fcbHp, healthSource);\n  }\n\n  /**\n   * @param {ItemPF} healthSource - Class granting health\n   * @param {object} config - Class type configuration\n   * @param {number} config.rate - Automatic HP rate\n   * @param {boolean} config.maximized - Is this class allowed to grant maximized HP\n   * @param {object} state - State tracking\n   */\n  function autoHealth(healthSource, { rate, maximized } = {}, state) {\n    const hpPerHD = healthSource.system.hd ?? 0;\n    if (hpPerHD === 0) return;\n\n    let health = 0,\n      fcbHp = 0;\n\n    // Mythic\n    if (healthSource.subType === \"mythic\") {\n      const hpPerTier = hpPerHD ?? 0;\n      if (hpPerTier === 0) return;\n      const tiers = healthSource.system.level ?? 0;\n      if (tiers === 0) return;\n      health = hpPerTier * tiers;\n    }\n    // Everything else\n    else {\n      let dieHealth = 1 + (hpPerHD - 1) * rate;\n      if (!continuous) dieHealth = round(dieHealth);\n\n      const hitDice = healthSource.hitDice;\n\n      let maxedHD = 0;\n      if (maximized) {\n        maxedHD = Math.min(hitDice, state.maximized.remaining);\n        state.maximized.value += maxedHD;\n      }\n      const maxedHp = maxedHD * hpPerHD;\n      const levelHp = Math.max(0, hitDice - maxedHD) * dieHealth;\n      fcbHp = pf1.config.favoredClassTypes.includes(healthSource.subType) ? healthSource.system.fc.hp.value || 0 : 0;\n      health = maxedHp + levelHp + fcbHp;\n    }\n    pushHealth(health, fcbHp, healthSource);\n  }\n\n  /**\n   * Compute and push health, tracking the remaining maximized levels.\n   *\n   * @param {ItemPF[]} sources - Health source classes\n   * @param {object} config - Configuration for this class type\n   * @param {boolean} config.auto - Automatic health enabled\n   * @param config\n   * @param state\n   */\n  function computeHealth(sources, config, state) {\n    if (config.auto) {\n      for (const cls of sources) autoHealth(cls, config, state);\n    } else {\n      for (const cls of sources) manualHealth(cls);\n    }\n  }\n\n  // State tracking\n  const state = {\n    maximized: {\n      value: 0,\n      max: healthConfig.maximized,\n      get remaining() {\n        return this.max - this.value;\n      },\n    },\n  };\n\n  computeHealth(racialHD, healthConfig.hitdice.Racial, state);\n  computeHealth(pcClasses, healthConfig.hitdice.PC, state);\n  computeHealth(npcClasses, healthConfig.hitdice.NPC, state);\n}\n\nexport const addDefaultChanges = function (changes) {\n  const actorData = this.system;\n  // Call hook\n  const tempChanges = [];\n  if (Hooks.events.pf1AddDefaultChanges?.length) {\n    Hooks.callAll(\"pf1AddDefaultChanges\", this, tempChanges);\n  }\n  changes.push(...tempChanges.filter((c) => c instanceof pf1.components.ItemChange));\n\n  const allClasses = this.itemTypes.class.sort((a, b) => a.sort - b.sort);\n\n  calculateHealth(this, allClasses, changes);\n\n  // Add class data to saving throws\n  const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\") === true;\n  for (const a of Object.keys(actorData.attributes.savingThrows)) {\n    let hasGoodSave = false;\n    actorData.attributes.savingThrows[a].total = actorData.attributes.savingThrows[a]?.base ?? 0;\n\n    const total = allClasses.reduce((cur, cls) => {\n      const base = cls.system.savingThrows[a].base;\n\n      if (!useFractional) {\n        // Add per class change\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: base,\n            target: a,\n            type: \"untypedPerm\",\n            flavor: cls.name,\n          })\n        );\n      } else {\n        if (cls.system.savingThrows[a].good === true) hasGoodSave = true;\n      }\n      return cur + base;\n    }, 0);\n\n    if (useFractional) {\n      // Add shared change with fractional\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: Math.floor(total),\n          target: a,\n          type: \"untypedPerm\",\n          flavor: game.i18n.localize(\"PF1.Base\"),\n        })\n      );\n    }\n\n    // Fractional bonus +2 when one class has good save\n    if (useFractional && hasGoodSave) {\n      const goodSaveFormula = pf1.config.classFractionalSavingThrowFormulas.goodSaveBonus;\n      const total = RollPF.safeRollSync(goodSaveFormula).total;\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: total,\n          target: a,\n          type: \"untypedPerm\",\n          flavor: game.i18n.localize(\"PF1.SavingThrowGoodFractionalBonus\"),\n        })\n      );\n    }\n  }\n\n  // Add Constitution to HP\n  const hpAbility = actorData.attributes.hpAbility;\n  if (hpAbility) {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"@attributes.hpAbility.mod * @attributes.hd.total\",\n        operator: \"add\",\n        target: \"mhp\",\n        type: \"base\",\n        flavor: pf1.config.abilities[hpAbility],\n      })\n    );\n\n    if (!this.system.attributes.wounds?.base) {\n      // > a creature has a number of wound points equal to twice its Constitution score.\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.undrained * 2\",\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"base\",\n          flavor: pf1.config.abilities[hpAbility],\n        })\n      );\n      // > It also has a wound threshold equal to its Constitution score.\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.undrained\",\n          operator: \"add\",\n          target: \"woundThreshold\",\n          type: \"base\",\n          flavor: pf1.config.abilities[hpAbility],\n        })\n      );\n      // https://www.aonprd.com/Rules.aspx?ID=1157\n      // >  For each point of Constitution damage a creature takes, it loses 2 wound points\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-(@attributes.hpAbility.damage * 2)\",\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.AbilityDamage\"),\n        })\n      );\n      // > When a creature takes a penalty to its Constitution score or its Constitution is drained,\n      // > it loses 1 wound point per point of drain or per penalty\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"@attributes.hpAbility.penalty\", // no minus since penalty is negative inherently\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(`PF1.Ability${hpAbility.capitalize()}Pen`),\n        })\n      );\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-@attributes.hpAbility.drain\",\n          operator: \"add\",\n          target: \"wounds\",\n          type: \"untyped\",\n          flavor: game.i18n.localize(\"PF1.AbilityDrain\"),\n        })\n      );\n    }\n  }\n\n  // Add movement speed(s)\n  for (const [k, s] of Object.entries(actorData.attributes.speed)) {\n    let base = s.base;\n    if (!base) base = 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: base,\n        target: `${k}Speed`,\n        type: \"base\",\n        operator: \"set\",\n        priority: 1001,\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      })\n    );\n  }\n\n  // Add base attack modifiers shared by all attacks\n  {\n    // BAB to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        _id: \"_bab\", // HACK: Force ID to be special\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Energy drain to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.Condition.energyDrain\"),\n      })\n    );\n    // ACP to attack\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.acp.attackPenalty\",\n        operator: \"add\",\n        target: \"~attackCore\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n      })\n    );\n  }\n\n  // Add variables to CMD\n  {\n    // BAB to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"@attributes.bab.total\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.BAB\"),\n      })\n    );\n    // Strength or substitute to CMD\n    const strAbl = actorData.attributes.cmd.strAbility;\n    if (strAbl in pf1.config.abilities) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${strAbl}.mod`,\n          target: \"cmd\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[strAbl],\n        })\n      );\n    }\n    // Energy Drain to CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"cmd\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.Condition.energyDrain\"),\n      })\n    );\n  }\n\n  // Add Dexterity Modifier to Initiative\n  {\n    const abl = actorData.attributes.init.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"init\",\n          type: \"untypedPerm\",\n          priority: -100,\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n\n    // Add ACP penalty\n    if ([\"str\", \"dex\"].includes(abl)) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"-@attributes.acp.attackPenalty\",\n          operator: \"add\",\n          target: \"init\",\n          type: \"untyped\",\n          priority: -100,\n          flavor: game.i18n.localize(\"PF1.ArmorCheckPenalty\"),\n        })\n      );\n    }\n  }\n\n  // Add Ability modifiers and Energy Drain to saving throws\n  {\n    // Ability Mod to Fortitude\n    let abl = actorData.attributes.savingThrows.fort.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"fort\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n    // Ability Mod to Reflex\n    abl = actorData.attributes.savingThrows.ref.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"ref\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n    // Ability Mod to Will\n    abl = actorData.attributes.savingThrows.will.ability;\n    if (abl) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: `@abilities.${abl}.mod`,\n          operator: \"add\",\n          target: \"will\",\n          type: \"untypedPerm\",\n          flavor: pf1.config.abilities[abl],\n        })\n      );\n    }\n    // Energy Drain\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"allSavingThrows\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.Condition.energyDrain\"),\n      })\n    );\n  }\n  // Spell Resistance\n  {\n    const sr = actorData.attributes.sr.formula || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: sr,\n        target: \"spellResist\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.CustomBonus\"),\n      })\n    );\n  }\n  {\n    // Carry capacity strength bonus\n    const cStr = actorData.details.carryCapacity.bonus.user || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: cStr,\n        target: \"carryStr\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n    // Carry capacity multiplier\n    const cMultBase = actorData.details.carryCapacity.multiplier.base ?? 1;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: cMultBase,\n        target: \"carryMult\",\n        type: \"base\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Base\"),\n      })\n    );\n    const cMult = actorData.details.carryCapacity.multiplier.user || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: cMult,\n        target: \"carryMult\",\n        type: \"untyped\",\n        priority: 1000,\n        flavor: game.i18n.localize(\"PF1.Custom\"),\n      })\n    );\n  }\n\n  // NPC Lite Sheet Values for Init, CMD, BAB and AC\n  {\n    const liteValues = {\n      init: null,\n      cmd: null,\n      bab: null,\n      ac: (data) => data.normal,\n    };\n\n    for (const [key, valfn] of Object.entries(liteValues)) {\n      let value = actorData.attributes[key];\n      if (typeof valfn === \"function\") value = valfn(value);\n      value = value.value;\n\n      if (value !== undefined) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: value,\n            trget: key,\n            type: \"base\",\n            flavor: game.i18n.localize(\"PF1.Custom\"),\n            operator: \"set\",\n          })\n        );\n      }\n    }\n  }\n\n  // Natural armor\n  {\n    const ac = actorData.attributes.naturalAC || 0;\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: ac,\n        target: \"nac\",\n        type: \"untyped\",\n        flavor: game.i18n.format(\"PF1.CustomBonusType\", { type: game.i18n.localize(\"PF1.NaturalArmor\") }),\n      })\n    );\n  }\n  // Add armor bonuses from equipment\n  this.itemTypes.equipment\n    .filter((item) => item.system.equipped)\n    .forEach((item) => {\n      let armorTarget = \"aac\";\n      if (item.system.subType === \"shield\") armorTarget = \"sac\";\n      // Push base armor\n      if (item.system.armor.value || item.system.armor.enh) {\n        const baseAC = item.isBroken ? Math.floor(item.system.armor.value / 2) : item.system.armor.value;\n        const enhAC = item.system.armor.enh;\n        changes.push(\n          new pf1.components.ItemChange(\n            {\n              formula: baseAC,\n              target: armorTarget,\n              type: \"base\",\n            },\n            { parent: item }\n          )\n        );\n        changes.push(\n          new pf1.components.ItemChange(\n            {\n              formula: enhAC,\n              target: armorTarget,\n              type: \"enhancement\",\n            },\n            { parent: item }\n          )\n        );\n      }\n    });\n\n  // Add fly bonuses or penalties based on maneuverability\n  {\n    const flyKey = actorData.attributes.speed.fly.maneuverability;\n    let flyValue = 0;\n    if (flyKey != null) flyValue = pf1.config.flyManeuverabilityValues[flyKey];\n    if (flyValue !== 0) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: flyValue,\n          target: \"skill.fly\",\n          type: \"racial\",\n          flavor: game.i18n.localize(\"PF1.Movement.FlyManeuverability.Label\"),\n        })\n      );\n    }\n  }\n  // Add swim and climb skill bonuses based on having speeds for them\n  {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.climb.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.clm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.climb\"),\n      })\n    );\n\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"(min(1, @attributes.speed.swim.total) * 8)\",\n        operator: \"add\",\n        target: \"skill.swm\",\n        type: \"racial\",\n        priority: -1,\n        flavor: game.i18n.localize(\"PF1.Movement.Mode.swim\"),\n      })\n    );\n  }\n\n  // Add energy drain to skills\n  {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-@attributes.energyDrain\",\n        operator: \"add\",\n        target: \"skills\",\n        type: \"untypedPerm\",\n        flavor: game.i18n.localize(\"PF1.Condition.energyDrain\"),\n      })\n    );\n  }\n\n  // Add size bonuses to various attributes\n  const sizeKey = actorData.traits.size;\n  if (sizeKey !== \"med\") {\n    // AC\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeMods[sizeKey],\n        target: \"ac\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n    // Stealth skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeStealthMods[sizeKey],\n        target: \"skill.ste\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n    // Fly skill\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeFlyMods[sizeKey],\n        target: \"skill.fly\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n    // CMD\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: pf1.config.sizeSpecialMods[sizeKey],\n        target: \"cmd\",\n        type: \"size\",\n        flavor: game.i18n.localize(\"PF1.ModifierType.size\"),\n      })\n    );\n  }\n\n  // Custom skill rank bonus from sheet\n  if (this.system.details?.bonusSkillRankFormula) {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: this.system.details.bonusSkillRankFormula,\n        target: \"bonusSkillRanks\",\n        type: \"untyped\",\n        flavor: game.i18n.localize(\"PF1.SkillBonusRankFormula\"),\n      })\n    );\n  }\n\n  // Add conditions\n  for (const [con, v] of Object.entries(actorData.conditions)) {\n    if (!v) continue;\n    const condition = pf1.registry.conditions.get(con);\n    if (!condition) continue;\n\n    const mechanic = condition.mechanics;\n    if (!mechanic) continue;\n\n    // Add changes\n    for (const change of mechanic.changes ?? []) {\n      // Alter change data\n      const changeData = { ...change, flavor: condition.name };\n\n      // Create change object\n      const changeObj = new pf1.components.ItemChange(changeData);\n      changes.push(changeObj);\n    }\n\n    // Set flags\n    for (const flag of mechanic.flags ?? []) {\n      this.changeFlags[flag] = true;\n    }\n  }\n\n  // Apply level drain to hit points\n  if (!Number.isNaN(actorData.attributes.energyDrain) && actorData.attributes.energyDrain > 0) {\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-(@attributes.energyDrain * 5)\",\n        operator: \"add\",\n        target: \"mhp\",\n        type: \"untyped\",\n        priority: -750,\n        flavor: game.i18n.localize(\"PF1.Condition.energyDrain\"),\n      })\n    );\n\n    changes.push(\n      new pf1.components.ItemChange({\n        formula: \"-(@attributes.energyDrain * 5)\",\n        operator: \"add\",\n        target: \"vigor\",\n        type: \"untyped\",\n        priority: -750,\n        flavor: game.i18n.localize(\"PF1.Condition.energyDrain\"),\n      })\n    );\n  }\n};\n\n/**\n * Set actor skill baseline values.\n */\nfunction resetSkills() {\n  const actorData = this.system;\n  const skills = actorData.skills;\n\n  const csBonus = pf1.config.classSkillBonus;\n\n  const resetSkill = (skill) => {\n    const rank = skill.rank || 0;\n    skill.mod = rank + (skill.cs && rank > 0 ? csBonus : 0);\n  };\n\n  for (const [skillKey, skill] of Object.entries(skills)) {\n    if (!skill) {\n      console.warn(`Bad skill data for \"${skillKey}\"`, this);\n      continue;\n    }\n\n    resetSkill(skill);\n\n    for (const [subSkillKey, subSkill] of Object.entries(skill.subSkills || {})) {\n      if (!subSkill) {\n        console.warn(`Bad subskill data for \"${skillKey}.${subSkillKey}\"`, this);\n      } else {\n        resetSkill(subSkill);\n      }\n    }\n  }\n}\n\n/**\n * Finalize actor skill values.\n */\nfunction finalizeSkills() {\n  const actorData = this.system;\n  const skills = actorData.skills;\n  if (!skills) return; // Vehicles, Traps and Haunts have no skills\n\n  const abilities = actorData.abilities;\n\n  const acpPenaltyValue = actorData.attributes?.acp?.skill ?? 0;\n\n  const finalizeSkill = (skill) => {\n    const acpPenalty = skill.acp ? acpPenaltyValue : 0;\n    const abilityModifier = abilities[skill.ability]?.mod || 0;\n    skill.mod += abilityModifier - acpPenalty;\n  };\n\n  for (const [skillKey, skill] of Object.entries(skills)) {\n    if (!skill) continue;\n    finalizeSkill(skill);\n    for (const [subSkillKey, subSkill] of Object.entries(skill.subSkills || {})) {\n      if (!subSkill) continue;\n      finalizeSkill(subSkill);\n    }\n  }\n}\n\nexport const getSourceInfo = function (obj, key) {\n  if (!obj[key]) {\n    obj[key] = { negative: [], positive: [] };\n  }\n  return obj[key];\n};\n\nexport const setSourceInfoByName = function (obj, key, name, value, positive = true) {\n  const target = positive ? \"positive\" : \"negative\";\n  const sourceInfo = getSourceInfo(obj, key)[target];\n  const data = sourceInfo.find((o) => o.name === name);\n  if (data) data.value = value;\n  else {\n    sourceInfo.push({\n      name: name,\n      value: value,\n    });\n  }\n};\n\n/**\n * @param {ItemChange[]} changes - An array containing all changes to check. Must be called after they received a value (by ItemChange.applyChange)\n * @param {object} [options]\n * @param {boolean} [options.ignoreTarget] - Whether to only check for modifiers such as enhancement, insight (true) or whether the target (AC, weapon damage) is also important (false)\n * @returns {ItemChange[]} - A list of processed changes, excluding the lower-valued ones inserted (if they don't stack)\n */\nexport const getHighestChanges = function (changes, options = { ignoreTarget: false }) {\n  const highestTemplate = {\n    value: 0,\n    ids: [],\n    highestID: null,\n  };\n  const highest = Object.keys(pf1.config.bonusTypes).reduce((cur, k) => {\n    if (options.ignoreTarget) cur[k] = foundry.utils.deepClone(highestTemplate);\n    else cur[k] = {};\n    return cur;\n  }, {});\n\n  for (const c of changes) {\n    let h;\n    if (options.ignoreTarget) h = highest[c.type];\n    else h = highest[c.type]?.[c.target];\n\n    if (!h) continue; // Ignore bad changes\n    h.ids.push(c._id);\n    if (h.value < c.value || !h.highestID) {\n      h.value = c.value;\n      h.highestID = c._id;\n    }\n  }\n\n  {\n    let mod, h;\n    const filterFunc = function (c) {\n      if (h.highestID === c._id) return true;\n      if (pf1.config.stackingBonusTypes.indexOf(mod) === -1 && h.ids.includes(c._id)) return false;\n      return true;\n    };\n\n    for (mod of Object.keys(highest)) {\n      if (options.ignoreTarget) {\n        h = highest[mod];\n        changes = changes.filter(filterFunc);\n      } else {\n        for (const subTarget of Object.keys(highest[mod])) {\n          h = highest[mod][subTarget];\n          changes = changes.filter(filterFunc);\n        }\n      }\n    }\n  }\n\n  return changes;\n};\n","import { getChangeFlat, getSourceInfo } from \"../documents/actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n/**\n * Change datamodel\n *\n * @property {string} formula\n * @property {\"add\"|\"set\"} operator\n * @property {BuffTarget} target\n * @property {string} type - Bonus type\n * @property {string} priority\n * @property {number} value\n * @property {string} flavor\n * @property {boolean} continuous\n */\nexport class ItemChange extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      _id: new fields.StringField({\n        blank: false,\n        initial: () => foundry.utils.randomID(8),\n        required: true,\n        readonly: true,\n      }),\n      formula: new fields.StringField({ blank: true, required: false }),\n      operator: new fields.StringField({ blank: false, initial: \"add\", choices: [\"add\", \"set\"] }),\n      target: new fields.StringField({ blank: true, required: false }),\n      type: new fields.StringField({ blank: true, required: false }),\n      priority: new fields.NumberField({ initial: 0, required: false }),\n      value: new fields.NumberField({ initial: 0, required: false }),\n      flavor: new fields.StringField({ blank: true, initial: undefined, required: false }),\n      continuous: new fields.BooleanField({ initial: undefined, required: false }),\n    };\n  }\n\n  static migrateData(data) {\n    // Update terminology\n    if (data.subTarget) {\n      data.target = data.subTarget;\n      delete data.subTarget;\n    }\n    if (data.modifier) {\n      data.type = data.modifier;\n      delete data.modifier;\n    }\n    // Script operator is no longer supported\n    if (data.operator === \"script\") data.operator = \"add\";\n    else if (data.operator === \"+\") data.operator = \"add\";\n    else if (data.operator === \"=\") data.operator = \"set\";\n  }\n\n  constructor(data, options = {}) {\n    if (options instanceof Item || options instanceof Actor) {\n      foundry.utils.logCompatibilityWarning(\n        \"ItemChange constructor's second parameter is now options object for datamodel instead of direct parent reference\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n\n      options = { parent: options };\n    }\n    super(data, options);\n    this.updateTime = new Date();\n  }\n\n  /**\n   * @override\n   */\n  _initialize(options = {}) {\n    super._initialize(options);\n    // Required to overcome Foundry's _id special case\n    Object.defineProperty(this, \"_id\", {\n      value: this._source._id,\n      writable: false,\n      configurable: true,\n    });\n    this.prepareData();\n  }\n\n  /**\n   * Prepare in-memory data.\n   *\n   * @internal\n   */\n  prepareData() {\n    this.flavor ||= this.parent?.name.replace(/\\[|\\]/g, \"\") || this.type;\n  }\n\n  /**\n   * Creates a change.\n   *\n   * @param {object[]} data - Data to initialize the change(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the change within.\n   * @returns {ItemChange[]} The resulting changes, or an empty array if nothing was created.\n   */\n  static async create(data, { parent = null } = {}) {\n    if (!Array.isArray(data)) data = [data];\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => new this(dataObj).toObject());\n\n      const oldChangeData = parent.toObject().system.changes ?? [];\n\n      // Catalog existing IDs\n      const ids = new Set(oldChangeData.map((c) => c._id));\n      // Remove invalid IDs\n      ids.delete(undefined);\n      ids.delete(\"\");\n      // Ensure new data has unique IDs that don't conflict with old\n      const newIds = new Set();\n      for (const c of data) {\n        c._id ||= foundry.utils.randomID(8);\n        while (ids.has(c._id)) c._id = foundry.utils.randomID(8);\n        ids.add(c._id);\n        newIds.add(c._id);\n      }\n\n      // Update parent\n      const newChangeData = [...oldChangeData, ...data];\n      await parent.update({ \"system.changes\": newChangeData });\n\n      // Return results\n      return [...parent.changes.filter((c) => newIds.has(c._id))];\n    }\n\n    return [];\n  }\n\n  async delete() {\n    const item = this.parent;\n    if (!item) throw new Error(\"Can not delete Change not in an item\");\n    const changes = item.toObject().system.changes ?? [];\n    const changeId = this.id;\n    changes.findSplice((c) => c._id === changeId);\n    return item.update({ \"system.changes\": changes });\n  }\n\n  static get defaultData() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemChange.defaultData() is deprecated in favor of using ItemChange DataModel\",\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return new this().toObject();\n  }\n\n  get data() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange.data is deprecated in favor of accessing the model directly.\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    return this;\n  }\n\n  /** @type {string} - Change ID */\n  get id() {\n    return this._id;\n  }\n\n  get subTarget() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange.subTarget is deprecated in favor of ItemChange.target\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.target;\n  }\n\n  get modifier() {\n    foundry.utils.logCompatibilityWarning(\"ItemChange.modifier is deprecated in favor of ItemChange.type\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.type;\n  }\n\n  /** @type {boolean} */\n  get isDeferred() {\n    if ([\"damage\", \"wdamage\", \"mwdamage\", \"twdamage\", \"rwdamage\", \"sdamage\", \"skills\"].includes(this.target))\n      return true;\n    return /^skill\\./.test(this.target);\n  }\n\n  /** @type {boolean} - Does this change refer to a distance? */\n  get isDistance() {\n    return /speed/i.test(this.target);\n  }\n\n  get source() {\n    console.warn(\"ItemChange.source does not exist\");\n    return null;\n  }\n\n  getSourceInfoTargets(actor) {\n    switch (this.target) {\n      case \"aac\":\n      case \"sac\":\n      case \"nac\":\n        return [\"system.attributes.ac.normal.total\", \"system.attributes.ac.flatFooted.total\"];\n    }\n\n    // Return default targets\n    return getChangeFlat.call(actor, this.target, this.type);\n  }\n\n  _preUpdate(data) {\n    data = new this.constructor(data).toObject();\n\n    // Make sure sub-target is valid\n    /*\n    // BUG: This does not work reliably for much anything but skills\n    const targetCategory = data.target?.split(\".\").shift();\n    if (targetCategory) {\n      const target = data.target || this.target;\n      const changeTargets = this.parent.getChangeTargets(targetCategory);\n      if (changeTargets[target] == null) {\n        console.error(`Invalid change target ${target}, resetting.`);\n        data.target = \"\";\n      }\n    }\n    */\n\n    return data;\n  }\n\n  /**\n   * @override\n   */\n  updateSource(data, options) {\n    // Shallow copy to avoid altering things for caller\n    data = { ...data };\n    // Prevent ID alterations\n    if (this.id && data._id) delete data._id;\n\n    return super.updateSource(data, options);\n  }\n\n  /**\n   *\n   * @param {object} data - Update data\n   * @param {object} options - Additional options\n   * @param {object} context - Update context\n   * @throws {Error} - If change has no parent to update or the change does not exist on parent.\n   * @returns {Promise<Item|null>} - Updated parent, or null if no update was performed (e.g. nothing changed)\n   */\n  async update(data, options = {}, context = {}) {\n    if (!this.parent) throw new Error(\"ItemChange has no parent to update.\");\n\n    this.updateTime = new Date();\n\n    data = this._preUpdate(data);\n    // Prevent ID alterations\n    if (data._id) delete data._id;\n\n    const changes = this.parent.toObject().system.changes ?? [];\n\n    const idx = changes.findIndex((change) => change._id === this.id);\n    if (idx >= 0) {\n      const updated = this.updateSource(data);\n      // Omit update if nothing would change\n      if (foundry.utils.isEmpty(updated)) return null;\n\n      changes[idx] = this.toObject();\n      return this.parent.update({ \"system.changes\": changes }, context);\n    } else {\n      throw new Error(`Change #${this.id} not found on parent ${this.parent.uuid}`);\n    }\n  }\n\n  /**\n   * Safely apply this change to an actor, catching any errors.\n   *\n   * @internal\n   * @see {@link ItemChange#applyChange}\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   */\n  _safeApplyChange(actor, targets = null, { applySourceInfo = true } = {}) {\n    try {\n      this.applyChange(actor, targets, { applySourceInfo });\n    } catch (error) {\n      if (this.parent?.isOwner || actor.isOwner) {\n        const msgSourceReference = this.parent\n          ? `from ${this.parent.name} [${this.parent.uuid}] to ${actor.name}`\n          : `to ${actor.name} [${actor.uuid}]]`;\n        const errorMessage = `Failed to apply ItemChange ${this.id} ${msgSourceReference}`;\n        const errorData = {\n          change: this,\n          parent: this.parent,\n          actor,\n          targets,\n        };\n        Hooks.onError(\"ItemChange#applyChange\", error, {\n          msg: errorMessage,\n          log: \"error\",\n          data: errorData,\n        });\n        ui.notifications?.error(error.message, { console: false });\n      }\n    }\n  }\n\n  /**\n   * Applies this change to an actor.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @param {string[]} [targets] - Property paths to target on the actor's data.\n   * @param {object} [options] - Optional options to change the behavior of this function.\n   * @param {boolean} [options.applySourceInfo=true] - Whether to add the changes to the actor's source information.\n   * @param {object} [options.rollData] - Roll data\n   */\n  applyChange(actor, targets = null, { applySourceInfo = true, rollData } = {}) {\n    // Prepare change targets\n    targets ??= this.getTargets(actor);\n\n    rollData ??= this.parent ? this.parent.getRollData({ refresh: true }) : actor.getRollData({ refresh: true });\n\n    const overrides = actor.changeOverrides;\n    for (const t of targets) {\n      const override = overrides[t];\n      const operator = this.operator;\n\n      // HACK: Data prep change application creates overrides; only changes meant for manual comparison lack them,\n      // and those do not have to be applied to the actor.\n      // This hack enables calling applyChange on Changes that are not meant to be applied, but require a call to\n      // determine effective operator and/or value.\n      if (!override) continue;\n\n      let value = 0;\n      if (this.formula) {\n        if (operator === \"function\") {\n          foundry.utils.logCompatibilityWarning(\n            \"ItemChange function operator is no longer supported with no replacement.\",\n            { since: \"PF1 v10\", until: \"PF1 v11\" }\n          );\n          continue;\n        } else if (!isNaN(this.formula)) {\n          value = parseFloat(this.formula);\n        } else if (this.isDeferred && RollPF.parse(this.formula).some((t) => !t.isDeterministic)) {\n          value = RollPF.replaceFormulaData(this.formula, rollData, { missing: 0 });\n        } else {\n          value = RollPF.safeRollSync(\n            this.formula,\n            rollData,\n            [t, this, rollData],\n            { suppressError: this.parent && !this.parent.isOwner },\n            { maximize: true }\n          ).total;\n        }\n      }\n\n      this.value = value;\n\n      if (!t) continue;\n\n      const prior = override[operator][this.type];\n\n      switch (operator) {\n        case \"add\":\n          {\n            let base = foundry.utils.getProperty(actor, t);\n\n            // Don't change non-existing ability scores\n            if (base == null) {\n              if (t.match(/^system\\.abilities/)) continue;\n              base = 0;\n            }\n\n            // Deferred formula\n            if (typeof value === \"string\") break;\n\n            if (typeof base === \"number\") {\n              // Skip positive dodge modifiers if lose dex to AC is in effect\n              if (actor.changeFlags.loseDexToAC && value > 0 && this.type === \"dodge\" && this.isAC) continue;\n\n              if (pf1.config.stackingBonusTypes.includes(this.type)) {\n                // Add stacking bonus\n                foundry.utils.setProperty(actor, t, base + value);\n                override[operator][this.type] = (prior ?? 0) + value;\n              } else {\n                // Use higher value only\n                const diff = !prior ? value : Math.max(0, value - (prior ?? 0));\n                foundry.utils.setProperty(actor, t, base + diff);\n                override[operator][this.type] = Math.max(prior ?? 0, value);\n              }\n            }\n          }\n          break;\n\n        case \"set\":\n          foundry.utils.setProperty(actor, t, value);\n          override[operator][this.type] = value;\n          break;\n      }\n\n      if (applySourceInfo) this.applySourceInfo(actor);\n\n      // Adjust ability modifier\n      const modifierChanger = t.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.(?:total|penalty|base)$/);\n      const abilityTarget = modifierChanger?.[1];\n      if (abilityTarget) {\n        const ability = actor.system.abilities[abilityTarget];\n        ability.mod = pf1.utils.getAbilityModifier(ability.total, {\n          damage: ability.damage,\n          penalty: ability.penalty,\n        });\n      }\n    }\n  }\n\n  /** @type {boolean} - Does this target any kind of AC? */\n  get isAC() {\n    return [\"ac\", \"aac\", \"sac\", \"nac\", \"tac\", \"ffac\"].includes(this.target);\n  }\n\n  /**\n   * Applies this change's info to an actor's `sourceInfo`.\n   * Info is only added if either the {@link type | modifier type} allows stacking or the {@link value} is higher than the previous value.\n   * If the modifier type is not stacking and this change's info is added, existing and now ineffective info entries are removed.\n   *\n   * @param {ActorPF} actor - The actor to apply the change's data to.\n   * @returns {void}\n   */\n  applySourceInfo(actor) {\n    const sourceInfoTargets = this.getSourceInfoTargets(actor);\n    const value = this.value;\n\n    // This Change's info entry data\n    const infoEntry = {\n      value,\n      operator: this.operator,\n      name: this.parent ? this.parent.name : this.flavor,\n      modifier: this.type,\n      type: this.parent ? this.parent.type : null,\n      change: this,\n    };\n\n    switch (this.operator) {\n      case \"add\":\n      case \"function\":\n        if (pf1.config.stackingBonusTypes.includes(this.type)) {\n          // Always add stacking entries\n          const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n          for (const si of sourceInfoTargets) {\n            getSourceInfo(actor.sourceInfo, si)[sourceInfoGroup].push(infoEntry);\n          }\n        } else {\n          for (const infoTarget of sourceInfoTargets) {\n            const sourceInfoGroup = value >= 0 ? \"positive\" : \"negative\";\n            const sInfo = getSourceInfo(actor.sourceInfo, infoTarget)[sourceInfoGroup];\n\n            // Assume this Change's info entry should be added\n            let doAdd = true;\n\n            // The value of the this Change's source info entry for this specific target\n            let sumValue = value;\n\n            // Check if there already is an info entry with which this Change should be combined\n            // This is the case for `enhancement` and `base` entries otherwise sharing parent and target\n            const existingInfoEntry = sInfo.find((infoEntry) => {\n              const hasSameParent = infoEntry.change?.parent === this.parent;\n              const isEnh =\n                (infoEntry.change?.type === \"base\" && this.type === \"enhancement\") ||\n                (infoEntry.change?.type === \"enhancement\" && this.type === \"base\");\n              const hasSameTarget = infoEntry.change?.target === this.target;\n              return hasSameParent && isEnh && hasSameTarget;\n            });\n            if (existingInfoEntry) {\n              doAdd = false;\n              if (existingInfoEntry.change?.type === \"base\") {\n                // This Change enhances an existing base\n                existingInfoEntry.value += value;\n                continue;\n              } else {\n                // This Change replaces an existing `enhancement` entry with its own `base` entry, using the sum of both values\n                sumValue += existingInfoEntry.value;\n                // Check whether the combined entry should exist, or if another entry is already better than it\n                const hasHighestValue = !sInfo.some((infoEntry) => {\n                  const isSameModifier = infoEntry.modifier === infoEntry.modifier;\n                  const target = infoEntry.change?.target;\n                  const isSameTarget = target ? target === this.target : true;\n                  const hasHigherValue = infoEntry.value > sumValue;\n                  return isSameModifier && isSameTarget && hasHigherValue;\n                });\n                // If the merged entry is the best, replace the existing entry with it\n                sInfo.findSplice(\n                  (entry) => entry === existingInfoEntry,\n                  hasHighestValue ? { ...infoEntry, value: sumValue } : undefined\n                );\n              }\n            }\n\n            // Determine whether there is an entry with a higher value; remove entries with lower values\n            sInfo.forEach((infoEntry) => {\n              const isSameType = infoEntry.change?.type === infoEntry.type;\n              if (isSameType) {\n                if (infoEntry.value < sumValue) {\n                  sInfo.splice(sInfo.indexOf(infoEntry), 1);\n                } else {\n                  doAdd = false;\n                }\n              }\n            });\n\n            if (doAdd) {\n              sInfo.push({ ...infoEntry });\n            }\n          }\n        }\n        break;\n      case \"set\": {\n        for (const si of sourceInfoTargets) {\n          getSourceInfo(actor.sourceInfo, si).positive.push({ ...infoEntry });\n        }\n        break;\n      }\n    }\n  }\n\n  createFunction(funcDef, funcArgs = []) {\n    try {\n      const preDef = `const actor = item.actor; const result = { operator: \"add\", value: 0, };`;\n      const postDef = `return result;`;\n      const fullDef = `return function(${funcArgs.join(\",\")}) {${preDef}${funcDef}\\n${postDef}};`;\n      return new Function(fullDef)();\n    } catch (e) {\n      console.warn(\"Could not create change function with definition\", funcDef);\n      return function () {\n        return { operator: \"add\", value: 0 };\n      };\n    }\n  }\n\n  /**\n   * @see {@link getChangeFlat}\n   * @param {ActorPF} actor - Actor instance\n   * @returns {Array<string>} - Valid targets for this change on specified actor\n   */\n  getTargets(actor) {\n    return getChangeFlat.call(actor, this.target, this.type, this.value);\n  }\n\n  toObject(...options) {\n    const data = super.toObject(...options);\n\n    // Cleanup: Following are never meant to be stored\n    delete data.value;\n    delete data.continuous;\n\n    // Null priority is pointless\n    if (data.priority === null) delete data.priority;\n\n    // Clear undefined values\n    for (const [key, value] of Object.entries(data)) {\n      if (value === undefined) delete data[key];\n    }\n\n    return data;\n  }\n}\n","import { RollPF } from \"./roll.mjs\";\n\n/**\n * A specialized Roll class which is used to evaluate damage rolls.\n * Provides additional utility getters for data relevant to damage rolls (e.g. damage type).\n */\nexport class DamageRoll extends RollPF {\n  /**\n   * @param {string} formula - The formula to parse.\n   * @param {object} data - The data object against which to parse attributes within the formula.\n   * @param {object} options - Additional options which customize the created Roll instance.\n   */\n  constructor(formula, data, options = {}) {\n    super(formula, data, options);\n\n    this.options.damageType ??= { values: [\"untyped\"], custom: \"\" };\n  }\n\n  /**\n   * Types of damage rolls with regard to their critical status.\n   *\n   * @type {{NON_CRITICAL: string, NORMAL: string, CRITICAL: string}}\n   */\n  static TYPES = {\n    NORMAL: \"normal\",\n    CRITICAL: \"crit\",\n    NON_CRITICAL: \"nonCrit\",\n  };\n\n  /**\n   * The damage type of this damage roll.\n   *\n   * @type {{values: string[], custom: string}}\n   */\n  get damageType() {\n    return this.options.damageType;\n  }\n\n  /**\n   * The type of this damage roll.\n   *\n   * @see {@link DamageRoll.TYPES}\n   * @type {\"normal\"|\"crit\"|\"nonCrit\"}\n   */\n  get type() {\n    return this.options.type;\n  }\n\n  /**\n   * Whether this damage roll is for a critical damage instance.\n   *\n   * @type {boolean}\n   */\n  get isCritical() {\n    return this.type === this.constructor.TYPES.CRITICAL;\n  }\n}\n","export class HealthConfigModel extends foundry.abstract.DataModel {\n  constructor(...args) {\n    super(...args);\n\n    Object.defineProperty(this, \"continuity\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"continuity string property in health configuration is deprecated in favor of continuous boolean property\",\n          {\n            since: \"PF1 v10\",\n            until: \"PF1 v11\",\n          }\n        );\n\n        return this.continuous ? \"continuous\" : \"discrete\";\n      },\n    });\n  }\n\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      hitdice: new fields.SchemaField({\n        Racial: new fields.SchemaField({\n          auto: new fields.BooleanField({ initial: false }),\n          rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1 }),\n          maximized: new fields.BooleanField({ initial: false }),\n        }),\n        PC: new fields.SchemaField({\n          auto: new fields.BooleanField({ initial: false }),\n          rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1 }),\n          maximized: new fields.BooleanField({ initial: true }),\n        }),\n        NPC: new fields.SchemaField({\n          auto: new fields.BooleanField({ initial: false }),\n          rate: new fields.NumberField({ positive: true, initial: 0.5, max: 1 }),\n          maximized: new fields.BooleanField({ initial: false }),\n        }),\n      }),\n      maximized: new fields.NumberField({ integer: true, min: 0, initial: 1 }),\n      rounding: new fields.StringField({ blank: false, nullable: false, initial: \"up\" }),\n      continuous: new fields.BooleanField({ initial: false }),\n      variants: new fields.SchemaField({\n        pc: new fields.SchemaField({\n          useWoundsAndVigor: new fields.BooleanField({ initial: false }),\n          useWoundThresholds: new fields.NumberField({ initial: 0 }),\n          allowWoundThresholdOverride: new fields.BooleanField({ initial: false }),\n        }),\n        npc: new fields.SchemaField({\n          useWoundsAndVigor: new fields.BooleanField({ initial: false }),\n          useWoundThresholds: new fields.NumberField({ initial: 0 }),\n          allowWoundThresholdOverride: new fields.BooleanField({ initial: true }),\n        }),\n      }),\n    };\n  }\n\n  /**\n   * Retrieve hit die configuration relevant to given class.\n   *\n   * @param {ItemClassPF} item\n   * @returns {object} -\n   */\n  getClassHD(item) {\n    const subtype = item.system.subType;\n    switch (item.system.subType) {\n      case \"npc\":\n        return this.hitdice.NPC;\n      case \"racial\":\n        return this.hitdice.Racial;\n      default:\n        return this.hitdice.PC;\n    }\n  }\n\n  static migrateData(data) {\n    if (data.continuity) {\n      data.continuous = data.continuity === \"continuous\";\n    }\n  }\n\n  static get woundThesholdOptions() {\n    return {\n      0: game.i18n.localize(\"PF1.SETTINGS.Health.WoundThresholds.Disabled\"),\n      1: game.i18n.localize(\"PF1.SETTINGS.Health.WoundThresholds.Normal\"),\n      2: game.i18n.localize(\"PF1.SETTINGS.Health.WoundThresholds.Gritty\"),\n    };\n  }\n}\n\nexport class HealthConfig extends FormApplication {\n  /**\n   * @readonly\n   */\n  static model = HealthConfigModel;\n\n  constructor(object = new HealthConfigModel(), options) {\n    super(object, options);\n  }\n\n  /**\n   * @override\n   */\n  getData() {\n    this.healthConfig ??= new HealthConfigModel(game.settings.get(\"pf1\", \"healthConfig\").toObject());\n\n    const context = {\n      ...this.healthConfig,\n      woundThesholdOptions: HealthConfigModel.woundThesholdOptions,\n    };\n\n    for (const [hdId, data] of Object.entries(context.hitdice)) {\n      data.label = `PF1.SETTINGS.Health.Class.${hdId.toLowerCase()}`;\n    }\n\n    return context;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      title: game.i18n.localize(\"PF1.SETTINGS.Health.Title\"),\n      id: \"health-config\",\n      template: \"systems/pf1/templates/settings/health.hbs\",\n      classes: [...options.classes, \"pf1\", \"health-config\"],\n      width: 480,\n      height: \"auto\",\n      tabs: [\n        {\n          navSelector: \".tabs\",\n          contentSelector: \".tabbed\",\n          initial: \"base\",\n          group: \"primary\",\n        },\n      ],\n      submitOnChange: true,\n      submitOnClose: false,\n      closeOnSubmit: false,\n    };\n  }\n\n  /**\n   * Handle button click to reset default settings\n   *\n   * @param event {Event}   The initial button click event\n   * @private\n   */\n  async _onReset(event) {\n    event.preventDefault();\n\n    await game.settings.set(\"pf1\", \"healthConfig\", {});\n    return this.render();\n  }\n\n  async _onSave(event) {\n    event.preventDefault();\n\n    const settings = this.healthConfig;\n    await game.settings.set(\"pf1\", \"healthConfig\", settings.toObject());\n    this.close();\n  }\n\n  /**\n   * Activate the default set of listeners for the Document sheet These listeners handle basic stuff like form submission or updating images.\n   *\n   * @override\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find(\"button.reset\").click(this._onReset.bind(this));\n    html.find(\"button.save\").click(this._onSave.bind(this));\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated.\n   *\n   * @override\n   */\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    const settings = new HealthConfigModel(game.settings.get(\"pf1\", \"healthConfig\").toObject());\n    settings.updateSource(formData); // Validate settings\n    this.healthConfig = settings;\n    this.render();\n  }\n}\n","export class ExperienceConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      track: new fields.StringField({ initial: \"medium\", choices: [\"fast\", \"medium\", \"slow\", \"custom\"] }),\n      custom: new fields.SchemaField({\n        formula: new fields.StringField({ initial: \"\", nullable: false }),\n      }),\n      openDistributor: new fields.BooleanField({ initial: true }),\n    };\n  }\n\n  static migrateData(data) {\n    super.migrateData(data);\n\n    data.disable ??= data.disableExperienceTracking;\n    if (data.track === \"customFormula\") data.track = \"custom\";\n    data.openDistributor ??= data.openXpDistributor;\n  }\n}\n\nexport class ExperienceConfig extends FormApplication {\n  constructor(...args) {\n    super(...args);\n\n    this._settings = game.settings.get(\"pf1\", \"experienceConfig\").toObject();\n  }\n\n  /** @override */\n  getData() {\n    const settings = this._settings;\n\n    return {\n      ...settings,\n      // Custom experience track booleans\n      enabled: settings.disable !== true,\n      hasCustomFormula: settings.track === \"custom\",\n    };\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...super.defaultOptions,\n      title: game.i18n.localize(\"PF1.ExperienceConfigName\"),\n      classes: [...options.classes, \"pf1\", \"experience-config\"],\n      id: \"experience-config\",\n      template: \"systems/pf1/templates/settings/experience.hbs\",\n      submitOnChange: true,\n      closeOnSubmit: false,\n      submitOnClose: false,\n      width: 560,\n      height: \"auto\",\n    };\n  }\n\n  /**\n   * Activate the default set of listeners for the Document sheet These listeners handle basic stuff like form submission or updating images.\n   *\n   * @override\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    this.form.querySelector(\"button.save\").addEventListener(\"click\", this._onSaveConfig.bind(this));\n  }\n\n  async _onSaveConfig(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    game.settings.set(\"pf1\", \"experienceConfig\", this._settings);\n    this.close();\n  }\n\n  /** @override */\n  async _updateObject(event, formData) {\n    this._settings = foundry.utils.mergeObject(this._settings, foundry.utils.expandObject(formData));\n    this.render();\n  }\n}\n","export class AccessibilityConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    return {};\n  }\n}\n\nexport class AccessibilityConfig extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    this._init = false;\n  }\n\n  /** Collect data for the template. @override */\n  async getData() {\n    const data = {};\n\n    if (!this._init) {\n      const settings = await game.settings.get(\"pf1\", \"accessibilityConfig\");\n      this._settings = foundry.utils.mergeObject(this.constructor.defaultSettings, settings);\n      this._init = true;\n    }\n    data.settings = this._settings;\n\n    return data;\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      title: game.i18n.localize(\"PF1.AccessibilityConfigName\"),\n      id: \"accessibility-config\",\n      template: \"systems/pf1/templates/settings/accessibility.hbs\",\n      width: 560,\n      height: \"auto\",\n      submitOnClose: false,\n      closeOnSubmit: true,\n      submitOnChange: false,\n    });\n  }\n\n  /**\n   * This method is called upon form submission after form data is validated.\n   *\n   * @override\n   */\n  async _updateObject(event, formData) {\n    const settings = foundry.utils.expandObject(formData);\n    // Some mild sanitation for the numeric values.\n    await game.settings.set(\"pf1\", \"accessibilityConfig\", settings);\n    ui.notifications.info(\"Updated Pathfinder accessibility configuration.\");\n  }\n}\n","export class TokenTooltipWorldConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      portrait: new fields.SchemaField({\n        hide: new fields.BooleanField({ initial: false }),\n      }),\n      hideHeld: new fields.BooleanField({ initial: true }),\n      hideArmor: new fields.BooleanField({ initial: true }),\n      hideBuffs: new fields.BooleanField({ initial: true }),\n      hideConditions: new fields.BooleanField({ initial: false }),\n      hideClothing: new fields.BooleanField({ initial: true }),\n      hideActorNameByDisposition: new fields.NumberField({ initial: 0 }),\n      minimumPermission: new fields.NumberField({ initial: CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED }),\n      hideActorNameReplacement: new fields.StringField({ initial: \"???\", nullable: false }),\n    };\n  }\n\n  /*\n  static migrateData(data) {}\n  */\n}\n\nexport class TooltipWorldConfig extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    this._cachedData = null;\n  }\n\n  getData() {\n    const result = {};\n\n    // Get settings\n    result.data = game.settings.get(\"pf1\", \"tooltipWorldConfig\");\n\n    result.permissions = {\n      [CONST.DOCUMENT_OWNERSHIP_LEVELS.NONE]: \"OWNERSHIP.NONE\",\n      [CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED]: \"OWNERSHIP.LIMITED\",\n      [CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER]: \"OWNERSHIP.OBSERVER\",\n      [CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER]: \"OWNERSHIP.OWNER\",\n    };\n\n    return result;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      title: game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.World.Name\"),\n      id: \"tooltip-world-config\",\n      template: \"systems/pf1/templates/settings/tooltip_world.hbs\",\n      width: 540,\n      height: \"auto\",\n    });\n  }\n\n  activateListeners(html) {\n    html.find(\"button.reset\").click(this._onReset.bind(this));\n  }\n\n  async _onReset(event) {\n    event.preventDefault();\n    await game.settings.set(\"pf1\", \"tooltipWorldConfig\", new TokenTooltipWorldConfigModel());\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.ResetInfo\"));\n    return this.render();\n  }\n\n  async _updateObject(event, formData) {\n    const settings = foundry.utils.expandObject(formData);\n\n    await game.settings.set(\"pf1\", \"tooltipWorldConfig\", settings);\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.UpdateInfo\"));\n  }\n}\n","import { TooltipWorldConfig } from \"./tooltip_world.mjs\";\n\nexport class TokenTooltipConfigModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      disable: new fields.BooleanField({ initial: false }),\n      hideWithoutKey: new fields.BooleanField({ initial: false }),\n      anchor: new fields.SchemaField({\n        x: new fields.NumberField({ initial: 1 }),\n        y: new fields.NumberField({ initial: 1 }),\n      }),\n      offset: new fields.SchemaField({\n        x: new fields.NumberField({ initial: 0 }),\n        y: new fields.NumberField({ initial: 0 }),\n      }),\n      onMouse: new fields.BooleanField({ initial: false }),\n      portrait: new fields.SchemaField({\n        hide: new fields.BooleanField({ initial: false }),\n        maxSize: new fields.SchemaField({\n          width: new fields.NumberField({ initial: 280 }),\n          height: new fields.NumberField({ initial: 280 }),\n        }),\n      }),\n    };\n  }\n}\n\nexport class TooltipConfig extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    this._cachedData = null;\n  }\n\n  getData() {\n    if (this._cachedData) return this._cachedData;\n\n    const canvasRect = canvas.app.view.getBoundingClientRect();\n    const result = {\n      screen: {\n        width: canvasRect.width,\n        height: canvasRect.height,\n        halfWidth: Math.floor(canvasRect.width / 2),\n        halfHeight: Math.floor(canvasRect.height / 2),\n      },\n      isGM: game.user.isGM,\n    };\n\n    // Prepare preview data\n    {\n      const p = {\n        width: 320,\n        height: 320,\n        tooltip: {\n          width: 80,\n          height: 48,\n        },\n      };\n\n      const r1 = result.screen.width / result.screen.height;\n      const r2 = result.screen.height / result.screen.width;\n\n      if (r1 > r2) {\n        p.height = Math.ceil(p.height * r2);\n      } else if (r2 > r1) {\n        p.width = Math.ceil(p.width * r1);\n      }\n\n      result.preview = p;\n    }\n\n    // Get settings\n    result.data = game.settings.get(\"pf1\", \"tooltipConfig\");\n\n    // Get hide key\n    result.hideKey = game.i18n.localize(\"PF1.Key_Control\");\n\n    this._cachedData = result;\n    return result;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      title: game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.Name\"),\n      id: \"tooltip-config\",\n      template: \"systems/pf1/templates/settings/tooltip.hbs\",\n      width: 640,\n      height: \"auto\",\n    });\n  }\n\n  activateListeners(html) {\n    html.find(\".immediate-change\").change(this._handleImmediateChange.bind(this));\n\n    html.find(\"button.world-settings\").click(this._openWorldSettings.bind(this));\n\n    html.find(\"button.reset\").click(this._onReset.bind(this));\n  }\n\n  _handleImmediateChange(event) {\n    const el = event.currentTarget;\n    const key = el.name;\n    if (!key) return;\n\n    let value;\n    if (el.tagName === \"INPUT\") {\n      value = el.value;\n      if (el.type === \"checkbox\") value = el.checked === true ? true : false;\n    } else {\n      value = el.innerHTML;\n    }\n    if (el.dataset?.dtype === \"Boolean\") value = Boolean(value);\n    else if (el.dataset?.dtype === \"Number\") value = parseFloat(value);\n\n    foundry.utils.setProperty(this._cachedData, `data.${key}`, value);\n    this.render();\n  }\n\n  _openWorldSettings(event) {\n    if (!game.user.can(\"SETTINGS_MODIFY\"))\n      return void ui.notifications.error(\"PF1.Error.GenericPermission\", { localize: true });\n\n    new TooltipWorldConfig().render(true, { focus: true });\n  }\n\n  async _onReset(event) {\n    event.preventDefault();\n    await game.settings.set(\"pf1\", \"tooltipConfig\", this.constructor.defaultSettings);\n    this._cachedData = null;\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.ResetInfo\"));\n    return this.render();\n  }\n\n  async _updateObject(event, formData) {\n    const settings = foundry.utils.expandObject(formData);\n\n    await game.settings.set(\"pf1\", \"tooltipConfig\", settings);\n    ui.notifications.info(game.i18n.localize(\"PF1.SETTINGS.TokenTooltip.UpdateInfo\"));\n  }\n}\n","export class IntegrationModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      diceSoNice: new fields.BooleanField({ initial: true }),\n      dragRuler: new fields.BooleanField({ initial: true }),\n      enhancedTerrainLayer: new fields.BooleanField({ initial: true }),\n    };\n  }\n}\n\nexport class IntegrationConfig extends FormApplication {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      title: game.i18n.localize(\"PF1.Application.Integration.Title\"),\n      id: \"pf1-integration-config\",\n      template: \"systems/pf1/templates/settings/integration.hbs\",\n      classes: [...options.classes, \"pf1\", \"integration-config\"],\n      width: 460,\n      height: \"auto\",\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: true,\n    };\n  }\n\n  getData() {\n    return {\n      ...game.settings.get(\"pf1\", \"integration\"),\n      dsnFound: game.modules.get(\"dice-so-nice\")?.active,\n      drFound: game.modules.get(\"drag-ruler\")?.active,\n      etlFound: game.modules.get(\"enhanced-terrain-layer\")?.active,\n    };\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    game.settings.set(\"pf1\", \"integration\", formData.settings);\n  }\n}\n","export class PerformanceModel extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    return {\n      reachLimit: new fields.NumberField({ integer: true, min: 0, initial: 60 }),\n    };\n  }\n}\n\nexport class PerformanceConfig extends FormApplication {\n  /** @override */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      title: game.i18n.localize(\"PF1.Application.Performance.Title\"),\n      id: \"performance-config\",\n      template: \"systems/pf1/templates/settings/performance.hbs\",\n      classes: [...options.classes, \"pf1\", \"performance-config\"],\n      submitOnChange: false,\n      closeOnSubmit: true,\n      submitOnClose: false,\n      width: 520,\n      height: \"auto\",\n    };\n  }\n\n  getData() {\n    const settings = game.settings.get(\"pf1\", \"performance\");\n    return {\n      ...settings,\n      model: settings.constructor.defineSchema(),\n    };\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const [html] = jq;\n\n    const reachLabel = html.querySelector(\"span.reach-limit\");\n    html\n      .querySelector(\"input[name='settings.reachLimit']\")\n      .addEventListener(\"input\", (event) => (reachLabel.textContent = event.target.value), { passive: true });\n\n    html.querySelector(\"button[type='reset']\").addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      game.settings.set(\"pf1\", \"performance\", {}).then(() => this.close());\n    });\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    console.table(formData.settings);\n    game.settings.set(\"pf1\", \"performance\", formData.settings);\n  }\n}\n","export class TooltipPF extends Application {\n  constructor() {\n    super();\n\n    this.mousePos = {\n      x: 0,\n      y: 0,\n    };\n\n    document.addEventListener(\n      \"pointermove\",\n      (event) => {\n        this.mousePos.x = event.clientX;\n        this.mousePos.y = event.clientY;\n        if (this.onMouse && !this.hidden) this._setPosition();\n      },\n      { passive: true }\n    );\n\n    /** @type {TokenDocument|null} */\n    this.token = null;\n\n    this.forceHideGMInfo = false;\n    this.forceHide = false;\n    this.sticky = false;\n    /**\n     * Has stickied tooltip. Prevent replacing tooltip.\n     */\n    this.stickied = false;\n\n    this.lock = {\n      new: false,\n      old: false,\n    };\n  }\n\n  /** @type {TokenDocument|null} */\n  get token() {\n    return this.object;\n  }\n\n  set token(token) {\n    this.object = token;\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      template: \"systems/pf1/templates/hud/tooltip.hbs\",\n      popOut: false,\n    };\n  }\n\n  get clientConfig() {\n    return game.settings.get(\"pf1\", \"tooltipConfig\").toObject();\n  }\n\n  get worldConfig() {\n    return game.settings.get(\"pf1\", \"tooltipWorldConfig\").toObject();\n  }\n\n  get actorConfig() {\n    return this.token?.actor?.system.details?.tooltip ?? {};\n  }\n\n  get onMouse() {\n    return this.clientConfig.onMouse;\n  }\n\n  get hidden() {\n    return this.element[0]?.style.visibility === \"hidden\";\n  }\n\n  /**\n   * @param {TokenDocument} token\n   */\n  bind(token) {\n    if (!game.user.isGM && token.disposition === CONST.TOKEN_DISPOSITIONS.SECRET) return;\n\n    if (this.lock.new) return;\n    // If already stickied, don't replace it unless new sticky is tried.\n    if (this.stickied && !this.sticky) return;\n    this.token = token;\n    if (this.sticky) this.stickied = true;\n    this.render(true);\n  }\n\n  /**\n   * @param {TokenDocument} token\n   */\n  unbind(token) {\n    if (token !== this.token) return;\n\n    if (this.lock.old) return;\n    // Sticky current tooltip. Don't track current state fully to avoid being far too sensitive about it.\n    if (this.sticky) this.stickied = true;\n    // Keep stickied tooltips\n    if (this.stickied) return;\n    this.token = null;\n    this.hide();\n  }\n\n  clearBind() {\n    this.stickied = false;\n    this.token = null;\n    this.hide();\n  }\n\n  async getData() {\n    const token = this.token;\n    const actor = token?.actor;\n    if (!actor) return {};\n\n    const context = {\n      data: actor.system,\n      name: token.name,\n      isOwner: actor.isOwner,\n    };\n\n    const isGM = game.user.isGM;\n\n    const actorConfig = this.actorConfig;\n    const worldConfig = this.worldConfig;\n    const clientConfig = this.clientConfig;\n\n    // Combine the two configs into something effective\n    const config = foundry.utils.deepClone(worldConfig);\n    Object.entries(actorConfig).forEach(([key, value]) => (config[key] ||= value));\n\n    if (!clientConfig.portrait.hide && !worldConfig.portrait.hide === true) {\n      context.portrait = {\n        maxWidth: clientConfig.portrait?.maxSize?.width || 100,\n        maxHeight: clientConfig.portrait?.maxSize?.height || 100,\n        url: actor.img,\n      };\n    }\n\n    const fullInfo = isGM ? !this.forceHideGMInfo : actor.isOwner;\n\n    // Display name, separate permission checking from\n    if (isGM ? this.forceHideGMInfo : !token.actor.testUserPermission(game.user, worldConfig.minimumPermission)) {\n      // Hide name if explicitly set to hide or disposition does not match\n      if (config.hideName || token.disposition <= worldConfig.hideActorNameByDisposition) {\n        context.name = config.name || worldConfig.hideActorNameReplacement || \"???\";\n      }\n      // Otherwise display custom name if configured\n      else if (config.name) {\n        context.name = config.name;\n      }\n    }\n\n    // Get conditions\n    if (fullInfo || !config.hideConditions) {\n      const conditions = actor.system.conditions;\n      for (const [conditionId, active] of Object.entries(conditions)) {\n        if (active === true) {\n          context.conditions = context.conditions || [];\n          const condition = pf1.registry.conditions.get(conditionId);\n          context.conditions.push({\n            label: condition.name,\n            icon: condition.texture,\n          });\n        }\n      }\n    }\n\n    // Get buffs\n    if (fullInfo || !config.hideBuffs) {\n      const buffs = actor.itemTypes.buff?.filter((i) => i.isActive && !i.system.hideFromToken) ?? [];\n      for (const b of buffs) {\n        context.buffs = context.buffs || [];\n        context.buffs.push({\n          label: b.name,\n          icon: b.img,\n          level: b.system.level,\n        });\n      }\n    }\n\n    // Get held items\n    if (fullInfo || !config.hideHeld) {\n      const held = actor.items.filter((i) => {\n        if (![\"weapon\", \"equipment\"].includes(i.type)) return false;\n        if (!i.isActive) return false;\n        if (i.type === \"equipment\" && i.subType !== \"shield\") return false;\n        return true;\n      });\n\n      for (const i of held) {\n        context.held = context.held || [];\n        context.held.push({\n          label: i.getName(!fullInfo),\n          icon: i.img,\n        });\n      }\n    }\n\n    const equipment = actor.itemTypes.equipment?.filter((i) => i.isActive) ?? [];\n\n    // Get armor\n    if (fullInfo || !config.hideArmor) {\n      const armor = equipment.filter((i) => i.subType === \"armor\");\n\n      for (const i of armor) {\n        context.armor = context.armor || [];\n        context.armor.push({\n          label: i.getName(!fullInfo),\n          icon: i.img,\n        });\n      }\n    }\n\n    // Get clothing\n    if (fullInfo || !config.hideClothing) {\n      const clothing = equipment.filter((i) => i.subType === \"clothing\");\n\n      for (const i of clothing) {\n        context.clothing = context.clothing || [];\n        context.clothing.push({\n          label: i.getName(!fullInfo),\n          icon: i.img,\n        });\n      }\n    }\n\n    return context;\n  }\n\n  _setPosition() {\n    if (!this.element[0]) return;\n\n    const v = canvas.app.view.getBoundingClientRect();\n    const elSize = this.element[0].getBoundingClientRect();\n    const position = {\n      width: elSize.width,\n      height: elSize.height,\n      left: 0,\n      top: 0,\n    };\n\n    const sb = ui.sidebar.element[0].getBoundingClientRect();\n    const mw = v.width - position.width - sb.width,\n      mh = v.height - position.height;\n\n    const clientConfig = this.clientConfig;\n    const anchor = clientConfig.anchor;\n    const offset = clientConfig.offset;\n\n    // Calculate final position\n    if (this.onMouse) {\n      const minPos = {\n        x: v.left,\n        y: v.top,\n      };\n      const maxPos = {\n        x: minPos.x + mw,\n        y: minPos.y + mh,\n      };\n      const pos = {\n        x: this.mousePos.x - position.width + position.width * anchor.x + offset.x,\n        y: this.mousePos.y - position.height + position.height * anchor.y + offset.y,\n      };\n      position.left = Math.clamped(pos.x, minPos.x, maxPos.x);\n      position.top = Math.clamped(pos.y, minPos.y, maxPos.y);\n    } else {\n      position.left = v.left + mw * anchor.x + offset.x;\n      position.top = v.top + mh * anchor.y + offset.y;\n    }\n\n    this.element.css(position);\n  }\n\n  show() {\n    const token = this.token;\n    if (!token) return;\n    if (this.forceHide) return;\n    if (this.clientConfig.disable === true || this.worldConfig.disable === true) return;\n\n    // Ensure tooltip is stickied\n    if (this.sticky) this.stickied = true;\n\n    this.element[0].classList.toggle(\"sticky\", this.stickied);\n\n    this.element.css(\"visibility\", \"visible\");\n  }\n\n  hide() {\n    this.element.css(\"visibility\", \"hidden\");\n  }\n\n  async _render(force = false, options = {}) {\n    await super._render(force, options);\n\n    this.hide();\n\n    // Required to re-align portraits\n    const loadableContent = this.element.find(\"img\");\n    const loadableContentCount = loadableContent.length;\n    if (loadableContentCount > 0) {\n      let loadedContentCount = 0;\n      loadableContent.one(\"load\", () => {\n        loadedContentCount++;\n        if (loadedContentCount === loadableContentCount && this.token) {\n          this._setPosition();\n          this.show();\n        }\n      });\n    } else if (this.token) {\n      this._setPosition();\n      this.show();\n    }\n  }\n\n  activateListeners(html) {\n    html.find(\".controls .close\").click(() => {\n      this.clearBind();\n    });\n  }\n\n  tokenHover(token, hovering) {\n    // Show token tooltip\n    if (hovering) {\n      const p = pf1.tooltip.mousePos;\n      const el = document.elementFromPoint(p.x, p.y);\n      // This check is required to prevent hovering over tokens under application windows\n      if (el?.id === \"board\") {\n        pf1.tooltip.bind(token.document);\n      }\n    }\n    // Hide token tooltip\n    else pf1.tooltip.unbind(token.document);\n  }\n\n  static toggle(enable) {\n    if (enable) {\n      if (!pf1.tooltip) {\n        pf1.tooltip = new TooltipPF();\n        Hooks.on(\"hoverToken\", pf1.tooltip.tokenHover);\n      }\n      pf1.tooltip.setPosition();\n    } else {\n      if (pf1.tooltip) {\n        Hooks.off(\"hoverToken\", pf1.tooltip.tokenHover);\n        pf1.tooltip = null;\n      }\n    }\n  }\n\n  async refresh() {\n    await this.render();\n\n    if (this.forceHide) this.hide();\n    else this.show();\n  }\n}\n","import { HealthConfig, HealthConfigModel } from \"../applications/settings/health.mjs\";\nimport { ExperienceConfig, ExperienceConfigModel } from \"../applications/settings/experience.mjs\";\nimport { AccessibilityConfig, AccessibilityConfigModel } from \"../applications/settings/accessibility.mjs\";\nimport { TooltipConfig, TokenTooltipConfigModel } from \"../applications/settings/tooltip.mjs\";\nimport { TooltipWorldConfig, TokenTooltipWorldConfigModel } from \"../applications/settings/tooltip_world.mjs\";\nimport { IntegrationConfig, IntegrationModel } from \"module/applications/settings/integration.mjs\";\nimport { PerformanceConfig, PerformanceModel } from \"module/applications/settings/performance.mjs\";\nimport { TooltipPF } from \"../applications/tooltip.mjs\";\n\nexport const registerSystemSettings = function () {\n  /**\n   * Track the system version upon which point a migration was last applied\n   */\n  game.settings.register(\"pf1\", \"systemMigrationVersion\", {\n    name: \"System Migration Version\",\n    scope: \"world\",\n    config: false,\n    type: String,\n    default: \"0.0.0\",\n  });\n\n  // Migration is in progress\n  game.settings.register(\"pf1\", \"migrating\", {\n    scope: \"world\",\n    config: false,\n    type: Boolean,\n    default: false,\n    onChange: (value) => (pf1.migrations.isMigrating = value),\n  });\n\n  /**\n   * Track when the last changelog was shown\n   */\n  game.settings.register(\"pf1\", \"changelogVersion\", {\n    name: \"Changelog Version\",\n    scope: \"client\",\n    config: false,\n    type: String,\n    default: \"0.74.9\",\n  });\n  game.settings.register(\"pf1\", \"dontShowChangelog\", {\n    name: \"Don't Automatically Show Changelog\",\n    scope: \"client\",\n    config: false,\n    type: Boolean,\n    default: false,\n  });\n\n  // Health configuration\n  game.settings.registerMenu(\"pf1\", \"healthConfig\", {\n    name: \"PF1.SETTINGS.Health.Title\",\n    label: \"PF1.SETTINGS.Health.Button\",\n    hint: \"PF1.SETTINGS.Health.Hint\",\n    icon: \"fas fa-heartbeat\",\n    type: HealthConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"healthConfig\", {\n    scope: \"world\",\n    default: new HealthConfigModel(),\n    type: HealthConfigModel,\n    config: false,\n    requiresReload: true,\n  });\n\n  // Experience configuration\n  game.settings.registerMenu(\"pf1\", \"experienceConfig\", {\n    name: \"PF1.ExperienceConfigName\",\n    label: \"PF1.ExperienceConfigLabel\",\n    hint: \"PF1.ExperienceConfigHint\",\n    icon: \"fas fa-book\",\n    type: ExperienceConfig,\n    restricted: true,\n  });\n  game.settings.register(\"pf1\", \"experienceConfig\", {\n    name: \"PF1.ExperienceConfigName\",\n    scope: \"world\",\n    default: new ExperienceConfigModel(),\n    type: ExperienceConfigModel,\n    config: false,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Accessibility configuration\n  /*\n  game.settings.registerMenu(\"pf1\", \"accessibilityConfig\", {\n    name: \"PF1.AccessibilityConfigName\",\n    label: \"PF1.AccessibilityConfigLabel\",\n    hint: \"PF1.AccessibilityConfigHint\",\n    restricted: false,\n    icon: \"fas fa-wheelchair\",\n    type: AccessibilityConfig,\n  });\n  */\n  game.settings.register(\"pf1\", \"accessibilityConfig\", {\n    name: \"PF1.AccessibilityConfigName\",\n    scope: \"client\",\n    default: new AccessibilityConfigModel(),\n    type: AccessibilityConfigModel,\n    config: false,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Tooltip configuration\n  game.settings.registerMenu(\"pf1\", \"tooltipConfig\", {\n    name: \"PF1.SETTINGS.TokenTooltip.Name\",\n    label: \"PF1.SETTINGS.TokenTooltip.Label\",\n    hint: \"PF1.SETTINGS.TokenTooltip.Hint\",\n    restricted: false,\n    icon: \"fas fa-window-maximize\",\n    type: TooltipConfig,\n  });\n  game.settings.register(\"pf1\", \"tooltipConfig\", {\n    scope: \"client\",\n    default: new TokenTooltipConfigModel(),\n    type: TokenTooltipConfigModel,\n    config: false,\n    onChange: (settings) => {\n      const worldConf = game.settings.get(\"pf1\", \"tooltipWorldConfig\");\n      const enable = !worldConf.disabled && !settings.disabled;\n      TooltipPF.toggle(enable);\n    },\n  });\n\n  // Tooltip World configuration\n  game.settings.register(\"pf1\", \"tooltipWorldConfig\", {\n    scope: \"world\",\n    default: new TokenTooltipWorldConfigModel(),\n    type: TokenTooltipWorldConfigModel,\n    config: false,\n    onChange: (settings) => {\n      TooltipPF.toggle(!settings.disable);\n      pf1.tooltip?.setPosition();\n    },\n  });\n\n  game.settings.register(\"pf1\", \"integration\", {\n    type: IntegrationModel,\n    default: new IntegrationModel(),\n    scope: \"world\",\n    config: false,\n    requiresReload: true,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"integration\", {\n    name: \"PF1.Application.Integration.Title\",\n    label: \"PF1.Application.Integration.Label\",\n    hint: \"PF1.Application.Integration.Hint\",\n    restricted: true,\n    icon: \"fa-solid fa-check-to-slot\",\n    type: IntegrationConfig,\n  });\n\n  game.settings.register(\"pf1\", \"performance\", {\n    scope: \"client\",\n    default: new PerformanceModel(),\n    type: PerformanceModel,\n    config: false,\n  });\n\n  game.settings.registerMenu(\"pf1\", \"performance\", {\n    name: \"PF1.Application.Performance.Title\",\n    label: \"PF1.Application.Performance.Button\",\n    hint: \"PF1.Application.Performance.Hint\",\n    restricted: false,\n    icon: \"fa-solid fa-gauge\",\n    type: PerformanceConfig,\n  });\n\n  // MEASURING\n\n  /**\n   * Option to change measure style\n   */\n  game.settings.register(\"pf1\", \"measureStyle\", {\n    name: \"PF1.SETTINGS.Canvas.MeasureStyle\",\n    hint: \"PF1.SETTINGS.Canvas.MeasureStyleHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * Register diagonal movement rule setting\n   */\n  game.settings.register(\"pf1\", \"diagonalMovement\", {\n    name: \"PF1.SETTINGS.DiagonalRule.Label\",\n    hint: \"PF1.SETTINGS.DiagonalRule.Hint\",\n    scope: \"world\",\n    config: true,\n    default: \"5105\",\n    type: String,\n    choices: {\n      5105: \"PF1.SETTINGS.DiagonalRule.Options.Core\",\n      555: \"PF1.SETTINGS.DiagonalRule.Options.Simple\",\n    },\n  });\n\n  /**\n   * System of Units\n   */\n  game.settings.register(\"pf1\", \"units\", {\n    name: \"PF1.SETTINGS.Units.System\",\n    hint: \"PF1.SETTINGS.Units.SystemHint\",\n    scope: \"world\",\n    config: true,\n    default: \"imperial\",\n    type: String,\n    choices: {\n      imperial: \"PF1.SETTINGS.Units.Imperial\",\n      metric: \"PF1.SETTINGS.Units.Metric\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for distances.\n   */\n  game.settings.register(\"pf1\", \"distanceUnits\", {\n    name: \"PF1.SETTINGS.Units.Distance\",\n    hint: \"PF1.SETTINGS.Units.DistanceHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialDistance\",\n      metric: \"PF1.SETTINGS.Units.MetricDistance\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * System of units override for weights.\n   */\n  game.settings.register(\"pf1\", \"weightUnits\", {\n    name: \"PF1.SETTINGS.Units.Weight\",\n    hint: \"PF1.SETTINGS.Units.WeightHint\",\n    scope: \"world\",\n    config: true,\n    default: \"default\",\n    type: String,\n    choices: {\n      default: \"PF1.Default\",\n      imperial: \"PF1.SETTINGS.Units.ImperialWeight\",\n      metric: \"PF1.SETTINGS.Units.MetricWeight\",\n    },\n    requiresReload: true,\n  });\n\n  /**\n   * Overland speed variant for metric.\n   */\n  game.settings.register(\"pf1\", \"overlandMetricVariant\", {\n    name: \"PF1.SETTINGS.OverlandVariantN\",\n    hint: \"PF1.SETTINGS.OverlandVariantL\",\n    scope: \"world\",\n    config: true,\n    default: \"rounded\",\n    choices: {\n      rounded: \"PF1.SETTINGS.OverlandMetricRounded\",\n      exact: \"PF1.SETTINGS.OverlandMetricExact\",\n    },\n  });\n\n  // OPTIONAL RULES\n\n  /**\n   * Option to allow the background skills optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"allowBackgroundSkills\", {\n    name: \"PF1.SETTINGS.VariantRules.BackgroundSkills\",\n    hint: \"PF1.SETTINGS.VariantRules.BackgroundSkillsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Option to use the Fractional Base Bonuses optional ruleset.\n   */\n  game.settings.register(\"pf1\", \"useFractionalBaseBonuses\", {\n    name: \"PF1.SETTINGS.VariantRules.FractionalBaseBonuses\",\n    hint: \"PF1.SETTINGS.VariantRules.FractionalBaseBonusesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Unchained action economy\n   */\n  game.settings.register(\"pf1\", \"unchainedActionEconomy\", {\n    name: \"PF1.SETTINGS.UnchainedActionEconomyN\",\n    hint: \"PF1.SETTINGS.UnchainedActionEconomyH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  /**\n   * Cybertech\n   */\n  game.settings.register(\"pf1\", \"cybertech\", {\n    name: \"PF1.SETTINGS.Cybertech\",\n    hint: \"PF1.SETTINGS.CybertechHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => pf1.utils.refreshActors({ renderOnly: true }),\n  });\n\n  // Armor as DR\n\n  /**\n   * Critical confirmation rolls\n   */\n  game.settings.register(\"pf1\", \"critConfirm\", {\n    name: \"PF1.SETTINGS.CriticalConfirm\",\n    hint: \"PF1.SETTINGS.CriticalConfirmHint\",\n    scope: \"world\",\n    type: Boolean,\n    default: true,\n    config: true,\n  });\n\n  // VISION\n\n  /**\n   * Low-light Vision Mode\n   */\n  game.settings.register(\"pf1\", \"lowLightVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.RequiresSelection\",\n    hint: \"PF1.SETTINGS.Vision.RequiresSelectionHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => {\n      // Refresh canvas sight\n      canvas.perception.update(\n        { initializeLighting: true, initializeVision: true, refreshLighting: true, refreshVision: true },\n        true\n      );\n    },\n  });\n\n  /**\n   * Shared Vision sharing style.\n   */\n  game.settings.register(\"pf1\", \"sharedVisionMode\", {\n    name: \"PF1.SETTINGS.Vision.Sharing\",\n    hint: \"PF1.SETTINGS.Vision.SharingHint\",\n    scope: \"world\",\n    config: false, // Hidden as it is unused; TODO: Re-implement #187's setting usage or remove setting/feature completely\n    default: 0,\n    type: Number,\n    choices: {\n      0: \"PF1.SETTINGS.Vision.SharingWithoutSelection\",\n      1: \"PF1.SETTINGS.Vision.SharingWithSelection\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  game.settings.register(\"pf1\", \"guaranteedVision\", {\n    name: \"PF1.SETTINGS.Vision.Guaranteed\",\n    hint: \"PF1.SETTINGS.Vision.GuaranteedHint\",\n    scope: \"world\",\n    config: true,\n    default: \"OBSERVER\",\n    type: String,\n    choices: {\n      OBSERVER: \"OWNERSHIP.OBSERVER\",\n      OWNER: \"OWNERSHIP.OWNER\",\n    },\n    onChange: () => canvas.perception.update({ refreshLighting: true, refreshVision: true }, true),\n  });\n\n  /**\n   * Enable vision for player characters by default.\n   */\n  game.settings.register(\"pf1\", \"characterVision\", {\n    name: \"PF1.SETTINGS.Vision.PCDefault\",\n    hint: \"PF1.SETTINGS.Vision.PCDefaultHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  game.settings.register(\"pf1\", \"pcDisposition\", {\n    name: \"PF1.SETTINGS.Token.PCDisposition\",\n    hint: \"PF1.SETTINGS.Token.PCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      FRIENDLY: \"TOKEN.DISPOSITION.FRIENDLY\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n    },\n    default: \"FRIENDLY\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"npcDisposition\", {\n    name: \"PF1.SETTINGS.Token.NPCDisposition\",\n    hint: \"PF1.SETTINGS.Token.NPCDispositionHint\",\n    type: String,\n    choices: {\n      NONE: \"PF1.NoOverride\",\n      NEUTRAL: \"TOKEN.DISPOSITION.NEUTRAL\",\n      HOSTILE: \"TOKEN.DISPOSITION.HOSTILE\",\n    },\n    default: \"NONE\",\n    scope: \"world\",\n    config: true,\n  });\n\n  game.settings.register(\"pf1\", \"systemVision\", {\n    name: \"PF1.SETTINGS.Vision.SystemControl\",\n    hint: \"PF1.SETTINGS.Vision.SystemControlHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    onChange: () => {\n      Object.values(ui.windows)\n        .filter((app) => app instanceof TokenConfig)\n        .forEach((app) => app.render());\n\n      // Initialize lighting is required for LLV to take effect\n      canvas.perception.update({ initializeLighting: true, refreshLighting: true, refreshVision: true }, true);\n    },\n  });\n\n  // CHAT CARDS\n\n  /**\n   * Option to automatically collapse Item Card descriptions\n   */\n  game.settings.register(\"pf1\", \"autoCollapseItemCards\", {\n    name: \"PF1.SETTINGS.Chat.AutoCollapse\",\n    hint: \"PF1.SETTINGS.Chat.AutoCollapseHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  /**\n   * Option to hide chat buttons\n   */\n  game.settings.register(\"pf1\", \"hideChatButtons\", {\n    name: \"PF1.SETTINGS.Chat.HideButtons\",\n    hint: \"PF1.SETTINGS.Chat.HideButtonsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => ui.chat.render(),\n  });\n\n  // HOMEBREW\n\n  /**\n   * Set coin weight\n   */\n  game.settings.register(\"pf1\", \"coinWeight\", {\n    name: \"PF1.SETTINGS.Houserules.CoinDivisor\",\n    hint: \"PF1.SETTINGS.Houserules.CoinDivisorHint\",\n    scope: \"world\",\n    config: true,\n    default: 50,\n    type: Number,\n    requiresReload: true,\n  });\n\n  /**\n   * Default spellpoint cost\n   */\n  game.settings.register(\"pf1\", \"spellPointCost\", {\n    name: \"PF1.SETTINGS.Houserules.SpellPointCost\",\n    hint: \"PF1.SETTINGS.Houserules.SpellPointCostHint\",\n    scope: \"world\",\n    config: true,\n    default: \"1 + @sl\",\n    type: String,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n  });\n\n  /**\n   * Alternative reach corner rule\n   */\n  game.settings.register(\"pf1\", \"alternativeReachCornerRule\", {\n    name: \"PF1.SETTINGS.Houserules.AltReach\",\n    hint: \"PF1.SETTINGS.Houserules.AltReachHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Allow proficiencies on NPCs.\n   */\n  game.settings.register(\"pf1\", \"npcProficiencies\", {\n    name: \"PF1.SETTINGS.Houserules.NPCProficiencies\",\n    hint: \"PF1.SETTINGS.Houserules.NPCProficienciesHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    onChange: () => pf1.utils.refreshSheets({ reset: false }),\n    type: Boolean,\n  });\n\n  // TOKENS / CONDITIONS\n\n  /**\n   * Display default token conditions alongside system ones\n   */\n  game.settings.register(\"pf1\", \"coreEffects\", {\n    name: \"PF1.SETTINGS.CoreEffectsN\",\n    hint: \"PF1.SETTINGS.CoreEffectsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide token conditions\n   */\n  game.settings.register(\"pf1\", \"hideTokenConditions\", {\n    name: \"PF1.SETTINGS.HideTokenConditionsN\",\n    hint: \"PF1.SETTINGS.HideTokenConditionsH\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    onChange: () => canvas.tokens?.placeables?.forEach((t) => t._applyRenderFlags({ redrawEffects: true })),\n  });\n\n  // TRANSPARENCY\n\n  /**\n   * Hide inline rolls from non-observers.\n   */\n  game.settings.register(\"pf1\", \"obscureInlineRolls\", {\n    name: \"PF1.SETTINGS.Chat.ObscureInlineRolls\",\n    hint: \"PF1.SETTINGS.Chat.ObscureInlineRollsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  /**\n   * Hide save DCs.\n   */\n  game.settings.register(\"pf1\", \"obscureSaveDCs\", {\n    name: \"PF1.SETTINGS.Chat.ObscureSaveDCs\",\n    hint: \"PF1.SETTINGS.Chat.ObscureSaveDCsHint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // COMBAT\n\n  game.settings.register(\"pf1\", \"initiativeTiebreaker\", {\n    name: \"PF1.SETTINGS.InitTiebreaker.Label\",\n    hint: \"PF1.SETTINGS.InitTiebreaker.Hint\",\n    scope: \"world\",\n    config: true,\n    default: true,\n    type: Boolean,\n    requiresReload: true,\n  });\n\n  // USER INTERFACE\n\n  /**\n   * Skip action dialog prompts\n   */\n  game.settings.register(\"pf1\", \"skipActionDialogs\", {\n    name: \"PF1.SETTINGS.SkipActionDialogsN\",\n    hint: \"PF1.SETTINGS.SkipActionDialogsH\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /*\n   * When skipping an action dialog prompt still place the template if one is configured\n   */\n  game.settings.register(\"pf1\", \"placeMeasureTemplateOnQuickRolls\", {\n    name: \"PF1.SETTINGS.MeasureOnQuickUse\",\n    hint: \"PF1.SETTINGS.MeasureOnQuickUseHint\",\n    scope: \"client\",\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n\n  /**\n   * Invert filter Shift-clicking\n   */\n  game.settings.register(\"pf1\", \"invertSectionFilterShiftBehaviour\", {\n    name: \"PF1.SETTINGS.Sheet.InvertFilters\",\n    hint: \"PF1.SETTINGS.Sheet.InvertFiltersHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  // TARGETING\n\n  /**\n   * Disable targets for attack cards\n   */\n  game.settings.register(\"pf1\", \"disableAttackCardTargets\", {\n    name: \"PF1.SETTINGS.Chat.NoTargets\",\n    hint: \"PF1.SETTINGS.Chat.NoTargetsHint\",\n    scope: \"world\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  /**\n   * Clear targets after attack\n   */\n  game.settings.register(\"pf1\", \"clearTargetsAfterAttack\", {\n    name: \"PF1.SETTINGS.Chat.ClearTargets\",\n    hint: \"PF1.SETTINGS.Chat.ClearTargetsHint\",\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n};\n\nexport const registerClientSettings = function () {};\n\nexport const migrateSystemSettings = async function () {\n  // Delete now unused compendium browser cache\n  game.settings.storage.get(\"client\").removeItem(\"pf1.compendiumItems\");\n\n  if (!game.user.isGM) return;\n\n  // Currently empty, since the last option was removed (2022-06-06)\n};\n\n/**\n * Returns whether the user's settings and key presses signal that dialogs should be skipped.\n *\n * @returns {boolean}\n */\nexport const getSkipActionPrompt = function () {\n  return (\n    (game.settings.get(\"pf1\", \"skipActionDialogs\") && !pf1.skipConfirmPrompt) ||\n    (!game.settings.get(\"pf1\", \"skipActionDialogs\") && pf1.skipConfirmPrompt)\n  );\n};\n","import { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { RollPF } from \"./roll.mjs\";\n\n/**\n * A class adding additional functionality to {@link Roll Rolls} for d20 based Pathfinder rolls.\n */\nexport class D20RollPF extends RollPF {\n  /** @type {D20RollOptions} */\n  options;\n\n  /**\n   * Standard roll used by the system (1d20).\n   */\n  static standardRoll = \"1d20\";\n\n  /**\n   * @param {string} formula - The roll formula to parse\n   * @param {object} [data] - The data object against which to parse attributes within the formula\n   * @param {Partial<D20RollConstructorOptions>} [options]\n   * @param {D20RollContext} [context]\n   */\n  constructor(formula, data, options = {}, context = {}) {\n    super(formula, data, options);\n    this.options = foundry.utils.mergeObject(this.constructor.defaultOptions, options);\n\n    this.context = context;\n\n    // No dice in the formula\n    if (!(this.terms[0] instanceof Die)) {\n      // If the first term is a number, use it as the static roll\n      if (this.terms[0] instanceof NumericTerm && this.options.staticRoll === null) {\n        this.options.staticRoll = this.terms[0].total;\n        this.terms[0] = new Die({ number: 1, faces: 20 });\n        this._formula = this.constructor.getFormula(this.terms);\n      } else {\n        // Conflict between numeric term and static roll\n        throw new Error(`Invalid D20RollPF formula provided: ${this._formula}`);\n      }\n    }\n  }\n\n  /**\n   * Default options for D20Rolls\n   *\n   * @type {Partial<D20RollOptions>}\n   */\n  static get defaultOptions() {\n    return { critical: 20, flavor: \"\", staticRoll: null, bonus: \"\" };\n  }\n\n  /**\n   * The default handlebars template used to render the roll's dialog\n   *\n   * @type {string}\n   */\n  static DIALOG_TEMPLATE = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n\n  /**\n   * The default handlebars template used to render the roll's chat message\n   *\n   * @type {string}\n   */\n  static CHAT_TEMPLATE = \"systems/pf1/templates/chat/roll-ext.hbs\";\n\n  /**\n   * Static roll results\n   *\n   * @enum {number}\n   */\n  static STATIC_ROLL = {\n    TEN: 10,\n    TWENTY: 20,\n  };\n\n  /**\n   * The D20 die this roll is based on.\n   *\n   * @type {Die}\n   */\n  get d20() {\n    // this.dice[0] returns wrong number if formula had, for example, a die roll inside parenthesis.\n    return this.terms[0];\n  }\n\n  /**\n   * Is this roll a critical success? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isCrit() {\n    if (!this._evaluated) return undefined;\n    if (!Number.isNumeric(this.options.critical)) return false;\n    return this.d20.total >= this.options.critical;\n  }\n\n  /**\n   * Is this roll a natural 20? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat20() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 20;\n  }\n\n  /**\n   * Is this roll a natural 1? Returns undefined if roll isn't evaluated.\n   *\n   * @type {boolean|void}\n   */\n  get isNat1() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total === 1;\n  }\n\n  /**\n   * Is this roll a misfire.\n   *\n   * @type {boolean|void}\n   */\n  get isMisfire() {\n    if (!this._evaluated) return undefined;\n    return this.natural <= (this.options.misfire ?? 0);\n  }\n\n  /**\n   * Natural roll value. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get natural() {\n    if (!this._evaluated) return undefined;\n    return this.d20.total;\n  }\n\n  /**\n   * @type {boolean} - Is static roll (e.g. Take 20)\n   */\n  get isStatic() {\n    return this.options.staticRoll !== null;\n  }\n\n  /**\n   * @type {boolean} - Is normal d20 roll\n   */\n  get isNormal() {\n    return this.terms[0].formula === this.constructor.standardRoll;\n  }\n\n  /**\n   * Modifier on the roll besides natural roll. Undefined if the roll isn't evaluated.\n   *\n   * @type {number|void}\n   */\n  get bonus() {\n    if (!this._evaluated) return undefined;\n    return this.total - this.natural;\n  }\n\n  /**\n   * Return a standardized representation for the displayed formula associated with this Roll.\n   * This formula includes any {@link D20RollOptions.bonus bonus} that might not be part of this roll's {@link terms}.\n   *\n   * @type {string}\n   */\n  get formula() {\n    let formula = this.constructor.getFormula(this.terms);\n    const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n    if (this.options.bonus && !this._evaluated) formula += ` + ${this.constructor.getFormula(bonusTerms)}`;\n    return formula;\n  }\n\n  /**\n   * The flavor this roll was created with.\n   *\n   * @type {string}\n   */\n  get flavor() {\n    return this.options.flavor;\n  }\n\n  /**\n   * Render a {@link Dialog} for the user to enter additional bonuses, set a static roll result, or take 10/20.\n   *\n   * @param {D20RollDialogOptions} [options] - Additional options determining what options to show in the dialog\n   * @returns {Promise<this | null>} A promise that resolves when the dialog is closed\n   */\n  async promptDialog(options = {}) {\n    const { rollMode = game.settings.get(\"core\", \"rollMode\"), template = this.constructor.DIALOG_TEMPLATE } = options;\n    const d20 = this.options.staticRoll === null ? this.d20.formula : this.options.staticRoll;\n    const renderData = {\n      data: this.data,\n      rollMode: options.rollMode || rollMode,\n      rollModes: CONFIG.Dice.rollModes,\n      // TODO: Move this standard roll obfuscation to dialog handling\n      d20: d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20, // Do not show standard roll in the input field\n      bonus: this.options.bonus,\n    };\n\n    const dialogOptions = options.dialogOptions || {};\n    dialogOptions.classes ??= [];\n    dialogOptions.classes.push(...Dialog.defaultOptions.classes, \"pf1\", \"roll-prompt\");\n\n    const renderOptions = options.renderOptions || {};\n\n    const html = await renderTemplate(template, renderData);\n\n    return Dialog.wait(\n      {\n        title: options.title || game.i18n.localize(\"PF1.Roll\"),\n        content: html,\n        buttons: {\n          normal: {\n            label: game.i18n.localize(\"PF1.Normal\"),\n            callback: (html) => this._onDialogSubmit(html, null),\n          },\n          takeTen: {\n            label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TEN }),\n            callback: (html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TEN),\n          },\n          takeTwenty: {\n            label: game.i18n.format(\"PF1.TakeX\", { number: this.constructor.STATIC_ROLL.TWENTY }),\n            callback: (html) => this._onDialogSubmit(html, this.constructor.STATIC_ROLL.TWENTY),\n          },\n        },\n        default: \"normal\",\n        close: () => null,\n      },\n      {\n        ...dialogOptions,\n        jQuery: false,\n        subject: options.subject,\n        speaker: options.speaker,\n        roll: this,\n      },\n      {\n        ...(options.renderOptions || {}),\n        focus: true,\n      }\n    );\n  }\n\n  /**\n   * Converts form element to object\n   *\n   * @protected\n   * @param {HTMLFormElement} html\n   * @returns {object} - Expanded form data\n   */\n  _getFormData(html) {\n    return foundry.utils.expandObject(new FormDataExtended(html).object);\n  }\n\n  /**\n   * A callback applying the user's input from the dialog to the roll and its options.\n   *\n   * @protected\n   * @param {HTMLElement} html - The dialog's submitted HTML\n   * @param {number | null} [staticRoll] - A static roll result to use instead of rolling the dice\n   * @returns {D20RollPF} This roll\n   */\n  _onDialogSubmit(html, staticRoll) {\n    const form = html.querySelector(\"form\");\n    if (!form) return this;\n    const formData = this._getFormData(form);\n\n    if (formData.bonus) {\n      this.options.bonus = formData.bonus;\n    }\n\n    if (formData.d20) {\n      const baseDice = this.constructor.parse(formData.d20, this.data);\n      // If a static roll is given as d20 input, Take X button clicks are ignored\n      if (baseDice[0] instanceof NumericTerm) this.options.staticRoll = baseDice[0].total;\n      else if (baseDice[0] instanceof Die) {\n        this.terms = [...baseDice, ...this.terms.slice(1)];\n        // d20 input is actual dice, so Take X buttons are respected\n        if (staticRoll !== undefined) this.options.staticRoll = staticRoll;\n      }\n    } else {\n      // No d20 input, base die is default, so Take X buttons are respected\n      if (staticRoll !== undefined) this.options.staticRoll = staticRoll;\n    }\n\n    if (formData.rollMode) {\n      this.options.rollMode = formData.rollMode;\n    }\n\n    this._formula = this.constructor.getFormula(this.terms);\n\n    return this;\n  }\n\n  /**\n   * Transform this roll into a {@link ChatMessage} displaying the result.\n   * This function can either create a ChatMessage (by default) or return the data object that would be used to create one.\n   *\n   * @param {object} messageData - The data object to use when creating the message\n   * @param {D20RollChatOptions} options - Additional options which configure how the message is created\n   * @returns {Promise<ChatMessage | object>} The created ChatMessage document, or the object of data that would be used to create one\n   */\n  async toMessage(messageData = {}, options = {}) {\n    if (!this._evaluated) await this.evaluate();\n\n    const chatTemplate = options.chatTemplate || this.constructor.CHAT_TEMPLATE;\n    const chatTemplateData = foundry.utils.mergeObject(\n      {\n        formula: this.formula,\n        tooltip: await this.getTooltip(),\n        total: Math.floor(this.total * 100) / 100,\n        isCrit: this.isCrit,\n        isMisfire: this.isMisfire,\n        isNat20: this.isNat20,\n        isNat1: this.isNat1,\n        natural: this.natural,\n        options: this.options,\n        isStatic: this.isStatic,\n        isNormal: this.isNormal,\n        get isAbnormal() {\n          return this.isStatic || !this.isNormal;\n        },\n        get abnormalTooltip() {\n          if (this.isStatic) return game.i18n.format(\"PF1.TakeX\", { number: this.options.staticRoll });\n          else if (this.isAbnormal) return \"PF1.CustomRollDesc\";\n          else return \"\";\n        },\n        bonus: this.bonus,\n        flavor: this.options.flavor,\n        compendiumEntry: options.compendium?.entry,\n        compendiumEntryType: options.compendium?.type,\n      },\n      options.chatTemplateData || {}\n    );\n\n    const rollMode = options.rollMode || this.options.rollMode || game.settings.get(\"core\", \"rollMode\");\n    messageData = foundry.utils.mergeObject(\n      {\n        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n        sound: options.noSound ? undefined : CONFIG.sounds.dice,\n        content: await renderTemplate(chatTemplate, chatTemplateData),\n      },\n      messageData\n    );\n    messageData.rolls = [this]; // merge/expandObject would otherwise destroy the `Roll` instance\n    if (options.subject) foundry.utils.setProperty(messageData, \"flags.pf1.subject\", options.subject);\n\n    // Add combat reference if such exists\n    const actor = ChatMessage.getSpeakerActor(messageData.speaker);\n    if (actor && game.combat?.combatants.some((c) => c.actor === actor)) {\n      foundry.utils.setProperty(messageData, \"flags.pf1.metadata.combat\", game.combat.id);\n    }\n\n    const message = new ChatMessage.implementation(messageData);\n    if (rollMode) message.applyRollMode(rollMode);\n    messageData = message.toObject();\n\n    if (options.create ?? true) {\n      return ChatMessage.implementation.create(messageData, { rollMode });\n    } else {\n      return messageData;\n    }\n  }\n\n  /** @inheritDoc */\n  async _evaluate(options) {\n    this._applyBonus();\n    await super._evaluate(options);\n    this._applyStaticRoll();\n    return this;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync(options) {\n    this._applyBonus();\n    super._evaluateSync(options);\n    this._applyStaticRoll();\n    return this;\n  }\n\n  /**\n   * Apply the bonus the roll was created with or the user entered into the dialog.\n   *\n   * @private\n   */\n  _applyBonus() {\n    if (this.options.bonus) {\n      const bonusTerms = this.constructor.parse(`${this.options.bonus}`, this.data);\n      if (!(bonusTerms[0] instanceof OperatorTerm)) bonusTerms.unshift(new OperatorTerm({ operator: \"+\" }));\n      this.terms.push(...bonusTerms);\n      this._formula = this.constructor.getFormula(this.terms);\n    }\n  }\n\n  /**\n   * Replace the rolled result of the active d20 (or its replacement) with a static value,\n   * and adjust the total accordingly.\n   *\n   * @remarks This requires the roll to be evaluated.\n   * @private\n   */\n  _applyStaticRoll() {\n    if (!this._evaluated) throw new Error(\"Roll must be evaluated before applying static roll.\");\n\n    if (this.options.staticRoll !== null && this.options.staticRoll >= 0) {\n      const d20 = this.d20;\n      const diff = this.options.staticRoll - d20.total;\n      const newTotal = this._total + diff;\n      const activeDie = d20.results.find((r) => r.active) ?? d20.results[0];\n      activeDie.result = this.options.staticRoll;\n      this._total = newTotal;\n    }\n  }\n}\n\n/**\n * Performs an actor based d20 roll.\n *\n * @param {Partial<D20ActorRollOptions>} [options]\n * @example Rolling a 1d20 + an actor's BAB + 2 for good behavior\n * ```js\n * const actor = game.actors.getName(\"Righteous Paladin\");\n * await pf1.dice.d20Roll({\n *   skipDialog: true, // Roll away without a dialog\n *   flavor: \"BAB\", // Add a flavor/title to the roll\n *   parts: [`${actor.system.attributes.bab.total}[BAB]`], // Use the actor's BAB\n *   dice: \"2d20kh\", // Roll 2 d20s and keep the highest\n *   bonus: \"2[Good Behavior]\", // Add a static bonus of 2\n *   rollMode: \"gmroll\", // Make roll only visible to user and GM\n * });\n * ```\n */\nexport async function d20Roll(options = {}) {\n  const {\n    skipDialog = getSkipActionPrompt(),\n    staticRoll = null,\n    chatTemplateData = {},\n    chatMessage = true,\n    compendium,\n    noSound = false,\n    flavor = \"\",\n    parts = [],\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollData = {},\n    subject,\n    bonus = \"\",\n    speaker,\n  } = options;\n\n  let rollMode = options.rollMode;\n\n  const formula = [dice, ...parts].join(\"+\");\n\n  const roll = new pf1.dice.D20RollPF(formula, rollData, { flavor, staticRoll, bonus }, { speaker });\n  if (!skipDialog) {\n    const title = speaker?.alias ? `${speaker.alias}: ${flavor}` : flavor;\n    const dialogResult = await roll.promptDialog({ title, rollMode, subject, speaker });\n    if (dialogResult === null) return;\n\n    // Move roll mode selection from roll data\n    rollMode = roll.options.rollMode;\n    delete roll.options.rollMode;\n  }\n\n  return roll.toMessage({ speaker }, { create: chatMessage, noSound, chatTemplateData, compendium, subject, rollMode });\n}\n","import { calculateRange, convertDistance } from \"../utils/lib.mjs\";\nimport { getHighestChanges } from \"../documents/actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\nimport { keepUpdateArray, createTag } from \"../utils/lib.mjs\";\nimport { DamageRoll } from \"../dice/damage-roll.mjs\";\nimport { D20RollPF } from \"../dice/d20roll.mjs\";\n\nexport class ItemAction {\n  /**\n   * @internal\n   * @type {pf1.applications.component.ItemActionSheet}\n   */\n  _sheet = null;\n  /** @type {pf1.documents.item.ItemPF} */\n  parent = null;\n  /** @type {Record<number,Application>} */\n  apps = {};\n\n  static FALLBACK_IMAGE = \"systems/pf1/icons/skills/gray_04.jpg\";\n\n  constructor(data, parent) {\n    this.data = foundry.utils.mergeObject(ItemAction.defaultData, data);\n\n    this.parent = parent;\n\n    this.prepareData();\n  }\n\n  get normalMaterial() {\n    return this.data.material?.normal || this.item.system.material?.normal || \"\";\n  }\n\n  get addonMaterial() {\n    return (this.data.material?.addon || this.item.system.material?.addon || []).filter((o) => o ?? false);\n  }\n\n  /**\n   * The action's alignment attributes, or `null` if the action has no alignment attributes\n   *\n   * @type {string|null}\n   */\n  get alignments() {\n    return this.data.alignments ?? null;\n  }\n\n  get description() {\n    return this.data.description;\n  }\n\n  /**\n   * Returns whether this action is a combat maneuver\n   *\n   * @type {boolean}\n   */\n  get isCombatManeuver() {\n    return [\"mcman\", \"rcman\"].includes(this.data.actionType);\n  }\n\n  /*\n   * General activation accessor that removes determining which action economy is in use.\n   */\n  get activation() {\n    return (\n      (game.settings.get(\"pf1\", \"unchainedActionEconomy\") ? this.data.activation.unchained : this.data.activation) ?? {}\n    );\n  }\n\n  /**\n   * Creates an action.\n   *\n   * @param {object[]} data - Data to initialize the action(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the action within.\n   * @returns The resulting actions, or an empty array if nothing was created.\n   */\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newActionData = foundry.utils.deepClone(parent.system.actions || []);\n      newActionData.push(...data);\n\n      // Update parent\n      await parent.update({ \"system.actions\": newActionData });\n      // Return results\n      return data.map((o) => parent.actions.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultDamageType() {\n    return {\n      values: [],\n      custom: \"\",\n    };\n  }\n\n  get item() {\n    return this.parent;\n  }\n  get actor() {\n    return this.parent.actor;\n  }\n\n  get id() {\n    return this.data._id;\n  }\n  get img() {\n    return this.data.img || this.item?.img || this.constructor.FALLBACK_IMAGE;\n  }\n  get name() {\n    return this.data.name;\n  }\n  get tag() {\n    return this.data.tag || createTag(this.name);\n  }\n\n  /**\n   * Can this action be used?\n   *\n   * Returns false if any known criteria for use limitation fails. Calls owning item's canUse functinality also.\n   *\n   * @see {@link pf1.documents.item.ItemBasePF.canUse}\n   *\n   * @type {boolean}\n   */\n  get canUse() {\n    const item = this.item;\n    if (!item.canUse) return false;\n\n    if (this.isSelfCharged) {\n      if ((this.data.uses.self?.value ?? 0) <= 0) return false;\n    }\n\n    if (item.isPhysical) {\n      if (item.system.quantity <= 0) return false;\n    }\n\n    if (this.isCharged) {\n      const cost = this.getChargeCost();\n      const charges = item.charges;\n      if (cost > 0) {\n        if (cost > charges) return false;\n      }\n    }\n\n    const ammo = this.ammoType;\n    if (ammo) {\n      // Check if actor has any relevant ammo, regardless if they're set to default\n      if (\n        this.actor?.itemTypes.loot.filter(\n          (i) => i.subType === \"ammo\" && i.system.extraType === ammo && i.system.quantity > 0\n        ).length === 0\n      )\n        return false;\n    }\n\n    return true;\n  }\n\n  get hasAttack() {\n    return [\"mwak\", \"rwak\", \"twak\", \"msak\", \"rsak\", \"mcman\", \"rcman\"].includes(this.data.actionType);\n  }\n\n  get hasMultiAttack() {\n    if (!this.hasAttack) return false;\n    const exAtk = this.data.extraAttacks ?? {};\n    return exAtk.manual?.length > 0 || !!exAtk.type;\n  }\n\n  get autoDeductCharges() {\n    return this.getChargeCost() > 0;\n  }\n\n  get isCharged() {\n    return this.item.isCharged;\n  }\n\n  get isSelfCharged() {\n    return [\"single\", \"round\", \"day\", \"week\", \"charges\"].includes(this.data.uses.self?.per);\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {object} [options.rollData=null] - Pre-determined roll data to pass for determining the charge cost.\n   * @returns {number} Cost in charges for this action.\n   */\n  getChargeCost({ rollData = null } = {}) {\n    if (!this.isCharged) return 0;\n\n    const isSpell = this.item.type === \"spell\";\n    const isSpellpointSpell = isSpell && this.item.useSpellPoints();\n\n    let formula = !isSpellpointSpell ? this.data.uses.autoDeductChargesCost : this.data.uses.spellPointCost;\n    if (!formula) {\n      formula = this.item.getDefaultChargeFormula();\n    } else if (typeof formula !== \"string\") {\n      console.warn(this.item.name, \"action\", this.name, \"has invalid charge formula:\", formula, this);\n      formula = this.item.getDefaultChargeFormula();\n    }\n\n    rollData ??= this.getRollData();\n    const cost = RollPF.safeRollAsync(formula, rollData).total;\n    return this.item.isSingleUse ? Math.clamped(cost, -1, 1) : cost;\n  }\n\n  /**\n   * @type {number} The action's first increment range (in system configured units)\n   */\n  get range() {\n    return this.getRange({ type: \"single\" });\n  }\n\n  /**\n   * @type {number} The action's minimum range.\n   */\n  get minRange() {\n    return this.getRange({ type: \"min\" });\n  }\n\n  /**\n   * @type {number} The action's maximum range (range multiplied by range increments).\n   */\n  get maxRange() {\n    return this.getRange({ type: \"max\" });\n  }\n\n  /**\n   * @param {object} [options] - Additional options to configure behavior.\n   * @param {string} [options.type=\"single\"] - What type of range to query. Either \"single\" (for a single range increment), \"max\" or \"min\".\n   * @param {object} [options.rollData=null] - Specific roll data to pass.\n   * @returns {number|null} The given range, in system configured units, or `null` if no range is applicable.\n   */\n  getRange({ type = \"single\", rollData = null } = {}) {\n    const baseRange = this.data.range.units;\n    const range = type === \"min\" ? this.data.range.minValue : this.data.range.value;\n    let rangeType = type === \"min\" ? this.data.range.minUnits : baseRange;\n\n    // Special case of ignoring min range for invalid range types\n    if (type === \"min\" && ![\"reach\", \"ft\", \"mi\", \"seeText\"].includes(baseRange)) return 0;\n\n    if (!rangeType) {\n      if (type === \"min\") {\n        // Downgrade range to melee when getting minimum range of reach weapons and no explicit minimum range is defined\n        if (baseRange === \"reach\") rangeType = \"melee\";\n        else return 0;\n      } else return null;\n    }\n\n    rollData ??= this.getRollData();\n    const singleIncrementRange = calculateRange(range, rangeType, rollData)[0];\n\n    if ([\"single\", \"min\"].includes(type)) return singleIncrementRange;\n    return singleIncrementRange * this.data.range.maxIncrements;\n  }\n\n  /** @type {boolean} - Has measured template */\n  get hasTemplate() {\n    const { type, size } = this.data.measureTemplate;\n    return !!type && !!size;\n  }\n\n  /**\n   * Does the action implement a damage roll as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return !!this.data.damage.parts?.length;\n  }\n\n  /**\n   * Effective critical range when accounting for broken status and action type.\n   *\n   * @type {number}\n   */\n  get critRange() {\n    if (this.item.isBroken || this.isCombatManeuver) return 20;\n    return this.data.ability?.critRange || 20;\n  }\n\n  /**\n   * Misfire threshold\n   *\n   * @type {number} Misfire threshold. Zero if action does not misfire.\n   */\n  get misfire() {\n    const misfire = this.data.ammo?.misfire ?? null;\n    if (Number.isFinite(misfire)) return misfire;\n    return this.item?.system.ammo?.misfire ?? 0;\n  }\n\n  /**\n   * Get power attack, deadly aim or piranha strike multiplier.\n   *\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData=null] - Roll data instance\n   * @returns {number} - Effective multiplier\n   */\n  getPowerAttackMult({ rollData = null } = {}) {\n    rollData ??= this.getRollData();\n\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n\n    let mult = rollData.action?.powerAttack?.multiplier;\n    // Use defined override\n    if (mult) return mult;\n\n    // Determine default based on attack type and held option\n    mult = 1;\n    if (this.item.subType === \"natural\") {\n      // Primary\n      if (rollData.action.naturalAttack?.primaryAttack) {\n        const ablDmgMult = rollData.action.ability?.damageMult ?? 1;\n        // Primary attack gets +50% damage like with two-handing if ability score multiplier is 1.5x or higher\n        if (ablDmgMult >= 1.5) mult = 1.5;\n      }\n      // Secondary\n      else {\n        mult = 0.5;\n      }\n    } else {\n      if (held === \"2h\") mult = 1.5;\n      else if (held === \"oh\") mult = 0.5;\n    }\n\n    return mult;\n  }\n\n  /**\n   * Does the item have range defined.\n   *\n   * @type {boolean}\n   */\n  get hasRange() {\n    const units = this.data.range?.units;\n    if (units === \"none\") return false;\n    return !!units;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Does the item provide an amount of healing instead of conventional damage?\n   *\n   * @returns {boolean}\n   */\n  get isHealing() {\n    return this.data.actionType === \"heal\" && this.hasDamage;\n  }\n\n  get hasEffect() {\n    return this.hasDamage || (this.data.effectNotes != null && this.data.effectNotes.length > 0);\n  }\n\n  /**\n   * Does the Item implement a saving throw as part of its usage\n   *\n   * @type {boolean}\n   */\n  get hasSave() {\n    return !!this.data.save?.type;\n  }\n\n  /**\n   * @param {object} [rollData] - Data to pass to the roll. If none is given, get new roll data.\n   * @returns {number} The Difficulty Class for this action.\n   */\n  getDC(rollData = null) {\n    rollData ??= this.getRollData();\n    let result = 10;\n\n    // Get conditional save DC bonus\n    const dcBonus = rollData.dcBonus ?? 0;\n\n    if (this.item.type === \"spell\") {\n      const spellbook = this.item.spellbook;\n      if (spellbook) {\n        let formula = spellbook.baseDCFormula;\n\n        const data = rollData.action;\n        if (data.save.dc.length > 0) formula += ` + ${data.save.dc}`;\n\n        const dcSchoolBonus = rollData.attributes.spells?.school?.[this.item.system.school]?.dc ?? 0;\n        const universalDCBonus = rollData.attributes?.spells?.school?.all?.dc ?? 0;\n\n        return RollPF.safeRollSync(formula, rollData).total + dcBonus + dcSchoolBonus + universalDCBonus;\n      } else {\n        // Assume standard base formula for spells with minimum required abilty score\n        const level = this.item?.system.level ?? 1;\n        const minAbl = Math.floor(level / 2);\n        return 10 + level + minAbl + dcBonus;\n      }\n    } else {\n      const dcFormula = this.data.save.dc.toString() || \"0\";\n      result = RollPF.safeRollSync(dcFormula, rollData).total + dcBonus;\n      return result;\n    }\n  }\n\n  get hasSound() {\n    return !!this.data.soundEffect;\n  }\n\n  get enhancementBonus() {\n    return this.data.enh?.value ?? this.item.system.enh;\n  }\n\n  get isRanged() {\n    return [\"rwak\", \"twak\", \"rsak\", \"rcman\"].includes(this.data.actionType);\n  }\n\n  get isSpell() {\n    return [\"rsak\", \"msak\"].includes(this.data.actionType);\n  }\n\n  /**\n   * An array of changes affecting this action's damage\n   *\n   * @type {ItemChange[]}\n   */\n  get damageSources() {\n    // Build damage context\n    const contexts = [pf1.const.actionTypeToContext[this.data.actionType] ?? \"damage\"];\n    if (this.isRanged) contexts.push(\"rdamage\");\n    else contexts.push(\"mdamage\");\n    if (this.item.subType === \"natural\") contexts.push(\"ndamage\");\n\n    const changes = this.item.getContextChanges(contexts);\n    if (changes.length == 0) return [];\n    return getHighestChanges(changes, { ignoreTarget: true });\n  }\n\n  /**\n   * @type {ItemChange[]} All relevant Changes for this action's damage.\n   */\n  get allDamageSources() {\n    const conds = this.data.conditionals\n      .filter((c) => c.default)\n      .filter((c) => c.modifiers.find((m) => m.target === \"damage\"));\n    const rollData = this.getRollData();\n\n    if (!rollData) return [];\n\n    const mods = Object.keys(pf1.config.bonusTypes);\n\n    // Turn relevant conditionals into structure accepted by getHighestChanges\n    const fakeCondChanges = [];\n    for (const c of conds) {\n      for (const m of c.modifiers) {\n        if (m.target !== \"damage\") continue;\n        const roll = RollPF.safeRollAsync(m.formula, rollData);\n        if (roll.err) continue;\n        const isModifier = mods.includes(m.type);\n        fakeCondChanges.push({\n          flavor: c.name,\n          value: roll.total,\n          modifier: isModifier ? m.type : \"untyped\", // Turn unrecognized types to untyped\n          type: isModifier ? undefined : m.type, // Preserve damage type if present\n          formula: m.formula,\n        });\n      }\n    }\n\n    const allChanges = [...this.damageSources, ...fakeCondChanges];\n\n    // Add enhancement bonus\n    const enh = this.enhancementBonus;\n    if (enh) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        value: enh,\n        type: \"enh\",\n        formula: enh.toString(),\n      });\n    }\n\n    // Add special cases specific to the item\n    // Broken\n    if (this.item.isBroken) {\n      allChanges.push({\n        flavor: game.i18n.localize(\"PF1.Broken\"),\n        value: -2,\n        type: \"untyped\",\n        formula: \"-2\",\n      });\n    }\n\n    return getHighestChanges(allChanges, { ignoreTarget: true });\n  }\n\n  getRollData() {\n    const result = foundry.utils.deepClone(this.item.getRollData());\n\n    result.action = foundry.utils.deepClone(this.data);\n    result.dc = this.hasSave ? this.getDC(result) : 0;\n\n    if (this.item.type === \"spell\") {\n      // Add per school CL bonus\n      result.cl += result.attributes?.spells?.school?.[this.item.system.school]?.cl ?? 0;\n    }\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    // BAB override\n    if (result.action.bab) {\n      const bab = RollPF.safeRollSync(result.action.bab, result).total;\n      foundry.utils.setProperty(result, \"attributes.bab.total\", bab || 0);\n    }\n\n    // Add @bab\n    result.bab = result.attributes?.bab?.total || 0;\n\n    return result;\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      name: game.i18n.localize(\"PF1.Action\"),\n      img: \"\",\n      description: \"\",\n      tag: \"\",\n      activation: {\n        cost: 1,\n        type: \"nonaction\",\n        unchained: {\n          cost: 1,\n          type: \"nonaction\",\n        },\n      },\n      duration: {\n        value: null,\n        units: \"\",\n      },\n      target: {\n        value: \"\",\n      },\n      range: {\n        value: null,\n        units: \"\",\n        maxIncrements: 1,\n        minValue: null,\n        minUnits: \"\",\n      },\n      uses: {\n        autoDeductChargesCost: \"\",\n        self: {\n          value: 0,\n          maxFormula: \"\",\n          per: \"\",\n        },\n      },\n      measureTemplate: {\n        type: \"\",\n        size: \"\",\n        color: \"\",\n        texture: \"\",\n      },\n      attackName: \"\",\n      actionType: \"other\",\n      attackBonus: \"\",\n      critConfirmBonus: \"\",\n      damage: {\n        parts: [],\n        critParts: [],\n        nonCritParts: [],\n      },\n      extraAttacks: {\n        type: \"\",\n        manual: [],\n        formula: {\n          count: \"\",\n          bonus: \"\",\n          label: \"\",\n        },\n      },\n      ability: {\n        attack: \"\",\n        damage: \"\",\n        damageMult: null,\n        critRange: 20,\n        critMult: 2,\n      },\n      save: {\n        dc: \"\",\n        type: \"\",\n        description: \"\",\n      },\n      effectNotes: [],\n      attackNotes: [],\n      soundEffect: \"\",\n      powerAttack: {\n        multiplier: null,\n        damageBonus: 2,\n        critMultiplier: 1,\n      },\n      naturalAttack: {\n        primaryAttack: true,\n        secondary: {\n          attackBonus: \"-5\",\n          damageMult: 0.5,\n        },\n      },\n      held: \"\",\n      nonlethal: false,\n      splash: false,\n      touch: false,\n      ammo: {\n        type: \"\",\n        cost: 1,\n      },\n      spellEffect: \"\",\n      area: \"\",\n      conditionals: [],\n      enh: {\n        value: null,\n      },\n      material: {\n        normal: {},\n        addon: [],\n      },\n      alignments: {\n        lawful: null,\n        chaotic: null,\n        good: null,\n        evil: null,\n      },\n    };\n  }\n\n  prepareData() {\n    // Default action type to other if undefined.\n    // Optimally this would be in constructor only, but item action handling can cause that to be lost\n    this.data.actionType ||= \"other\";\n\n    const rollData = this.getRollData();\n\n    // Update conditionals\n    if (this.data.conditionals instanceof Array) {\n      this.conditionals = this._prepareConditionals(this.data.conditionals);\n    }\n\n    // Prepare max personal charges\n    if (this.data.uses.self?.per) {\n      const maxFormula = this.data.uses.self.per === \"single\" ? \"1\" : this.data.uses.self.maxFormula;\n      const maxUses = RollPF.safeRollSync(maxFormula, rollData).total ?? 0;\n      foundry.utils.setProperty(this.data, \"uses.self.max\", maxUses);\n    }\n\n    // Remove enhancement bonus override, if wrong type\n    if (this.data.enh?.value != null && ![\"weapon\", \"attack\"].includes(this.item.type)) {\n      foundry.utils.setProperty(this.data, \"enh.value\", null);\n    }\n\n    // Initialize default damageMult if missing (for things that can't inherit it from item)\n    if (!Number.isFinite(this.data.ability?.damageMult)) {\n      let canHold = this.item?.isPhysical || this.item?.isQuasiPhysical || false;\n      if (!this.hasAttack) canHold = false;\n      if (!canHold) foundry.utils.setProperty(this.data, \"ability.damageMult\", 1);\n    }\n    if (this.data.naturalAttack?.secondary?.damageMult === undefined) {\n      foundry.utils.setProperty(this.data, \"naturalAttack.secondary.damageMult\", 0.5);\n    }\n  }\n\n  _prepareConditionals(conditionals) {\n    const prior = this.conditionals;\n    const collection = new Collection();\n    for (const o of conditionals) {\n      let conditional = null;\n      if (prior && prior.has(o._id)) {\n        conditional = prior.get(o._id);\n        conditional.data = o;\n        conditional.prepareData();\n      } else conditional = new pf1.components.ItemConditional(o, this);\n      collection.set(o._id || conditional.data._id, conditional);\n    }\n    return collection;\n  }\n\n  async delete() {\n    const actions = foundry.utils.deepClone(this.item.system.actions);\n    actions.findSplice((a) => a._id == this.id);\n\n    // Pre-emptively close applications\n    const promises = [];\n    for (const app of Object.values(this.apps)) {\n      promises.push(app.close({ pf1: { action: \"delete\" }, submit: false, force: true }));\n    }\n    await Promise.all(promises);\n\n    // Delete action\n    return this.item.update({ \"system.actions\": actions });\n  }\n\n  async update(updateData, options = {}) {\n    updateData = foundry.utils.expandObject(updateData);\n    const idx = this.item.system.actions.findIndex((action) => action._id === this.id);\n    if (idx < 0) throw new Error(`Action ${this.id} not found on item.`);\n    const prevData = this.item.toObject().system.actions[idx];\n    const newUpdateData = foundry.utils.mergeObject(prevData, updateData, { performDeletions: true });\n\n    // Make sure this action has a name, even if it's removed\n    newUpdateData[\"name\"] ||= this.name;\n\n    // Make sure stuff remains an array\n    {\n      const keepPaths = [\n        \"extraAttacks.manual\",\n        \"damage.parts\",\n        \"damage.critParts\",\n        \"damage.nonCritParts\",\n        \"attackNotes\",\n        \"effectNotes\",\n        \"conditionals\",\n      ];\n\n      for (const path of keepPaths) {\n        keepUpdateArray(this.data, newUpdateData, path);\n      }\n    }\n\n    await this.item.update({ \"system.actions\": { [idx]: newUpdateData } }, options);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Data Generation\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this action's parent item, but with this action's data,\n   * regardless of whether it is the first action or not.\n   *\n   * @see {@link ItemPF#getChatData}\n   * @param {object} [chatDataOptions] - Options passed to {@link ItemPF#getChatData} affecting the chat data\n   * @returns {Promise<import(\"../documents/item/item-pf.mjs\").ChatData>} Chat data for this action's parent and this action\n   */\n  async getChatData(chatDataOptions = {}) {\n    return this.item.getChatData({ ...chatDataOptions, actionId: this.id });\n  }\n\n  /**\n   * Returns labels related to this particular action\n   *\n   * @param {object} [options]\n   * @param {object} [options.rollData] - Pre-determined roll data. If not provided, finds the action's own roll data.\n   * @returns {Record<string, string>} This action's labels\n   */\n  getLabels({ rollData } = {}) {\n    const actionData = this.data;\n    const labels = {};\n    rollData ??= this.getRollData();\n\n    // Activation method\n    if (actionData.activation) {\n      const activation = this.activation;\n      if (activation) {\n        const isUnchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n        const activationTypes = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypes_unchained\n          : pf1.config.abilityActivationTypes;\n        const activationTypesPlural = isUnchainedActionEconomy\n          ? pf1.config.abilityActivationTypesPlurals_unchained\n          : pf1.config.abilityActivationTypesPlurals;\n\n        const activationType = activation.type || \"nonaction\";\n        if (activation.cost > 1 && !!activationTypesPlural[activationType]) {\n          labels.activation = [activation.cost.toString(), activationTypesPlural[activationType]].filterJoin(\" \");\n        } else {\n          labels.activation = [\n            [\"minute\", \"hour\", \"action\"].includes(activationType) && activation.cost ? activation.cost.toString() : \"\",\n            activationTypes[activationType],\n          ].filterJoin(\" \");\n        }\n      }\n    }\n\n    // Difficulty Class\n    if (this.hasSave) {\n      const totalDC = rollData.dc + (rollData.dcBonus ?? 0);\n      labels.save = game.i18n.format(\"PF1.DCThreshold\", { threshold: totalDC });\n    }\n\n    if (this.hasRange) {\n      const sourceUnits = actionData.range.units;\n      const rangeLabel = pf1.config.distanceUnits[sourceUnits];\n      if ([\"personal\", \"touch\", \"melee\", \"reach\"].includes(sourceUnits)) {\n        labels.range = rangeLabel;\n      } else {\n        const range = this.getRange({ type: \"single\", rollData });\n        if (range > 0) {\n          const usystem = pf1.utils.getDistanceSystem();\n          const rangeUnit = usystem === \"metric\" ? \"m\" : \"ft\";\n          labels.range = `${range} ${rangeUnit}`;\n        }\n        if ([\"close\", \"medium\", \"long\"].includes(sourceUnits)) {\n          labels.range += ` (${rangeLabel})`;\n        }\n      }\n    }\n\n    // Action type\n    labels.actionType = pf1.config.itemActionTypes[actionData.actionType];\n\n    return labels;\n  }\n\n  // -----------------------------------------------------------------------\n\n  /**\n   * Get all appropriate context changes for attack rolls.\n   *\n   * @see {@link ItemPF.getContextChanges}\n   */\n  get attackSources() {\n    const contexts = [\"~attackCore\"];\n    if (this.isCombatManeuver) contexts.push(\"cmb\");\n    if (this.isRanged) contexts.push(\"rattack\");\n    else contexts.push(\"mattack\");\n    if (this.item.subType === \"natural\") contexts.push(\"nattack\");\n    if (this.data.actionType === \"twak\") contexts.push(\"tattack\");\n    return this.item.getContextChanges(contexts);\n  }\n\n  /**\n   * Place an attack roll using an item (weapon, feat, spell, or equipment)\n   *\n   * @param {object} [options] - Options\n   * @param {object} [options.data] - Roll data\n   * @param {Array<string>} [options.extraParts] - Additional attack parts\n   * @param {string} [options.bonus] - Additional attack bonus\n   * @param {boolean} [options.primaryAttack=true] - Treat as primary natural attack\n   * @returns {D20RollPF}\n   */\n  async rollAttack({ data = null, extraParts = [], bonus = null, primaryAttack = true } = {}) {\n    const rollData = data ?? this.getRollData();\n    const itemData = rollData.item;\n    const actionData = rollData.action;\n\n    const config = {};\n\n    rollData.item.primaryAttack = primaryAttack;\n\n    const isRanged = this.isRanged;\n    const isCMB = this.isCombatManeuver;\n\n    const size = rollData.traits?.size ?? \"med\";\n\n    // Determine size bonus\n    rollData.sizeBonus = !isCMB ? pf1.config.sizeMods[size] : pf1.config.sizeSpecialMods[size];\n\n    // Add misc bonuses/penalties\n    rollData.item.proficiencyPenalty = -4;\n\n    // Determine ability score modifier\n    const abl = actionData.ability.attack;\n\n    // Define Roll parts\n    const parts = [];\n\n    // Add size bonus\n    if (rollData.sizeBonus !== 0) parts.push(`@sizeBonus[${game.i18n.localize(\"PF1.Size\")}]`);\n\n    const ability = rollData.abilities?.[abl];\n    // Add ability modifier\n    if (ability?.mod !== 0) {\n      parts.push(`@abilities.${abl}.mod[${pf1.config.abilities[abl]}]`);\n    }\n\n    // Get relevant changes\n    const changes = this.attackSources;\n\n    // Add masterwork bonus to changes (if applicable)\n    if ([\"mwak\", \"rwak\", \"twak\", \"mcman\", \"rcman\"].includes(this.data.actionType) && this.item.system.masterwork) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: \"1\",\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: 1,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Add enhancement bonus to changes\n    if (this.enhancementBonus) {\n      changes.push(\n        new pf1.components.ItemChange({\n          formula: this.enhancementBonus.toString(),\n          operator: \"add\",\n          target: \"attack\",\n          type: \"enh\",\n          value: this.enhancementBonus,\n          flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n        })\n      );\n    }\n\n    // Get attack bonus\n    getHighestChanges(\n      changes.filter((c) => {\n        c.applyChange(this.actor);\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    )\n      .filter((c) => c.value != 0)\n      .forEach((c) => {\n        let value = c.value;\n        // BAB override\n        if (actionData.bab && c._id === \"_bab\") {\n          value = RollPF.safeRollSync(c.formula, data).total || 0;\n        }\n        parts.push(`${value}[${RollPF.cleanFlavor(c.flavor)}]`);\n      });\n\n    // Add bonus parts\n    parts.push(...extraParts);\n    // Add attack bonus\n    if (typeof actionData.attackBonus === \"string\" && ![\"\", \"0\"].includes(actionData.attackBonus)) {\n      parts.push(actionData.attackBonus);\n    }\n    // Backwards compatibility\n    else if (typeof actionData.attackBonus === \"number\") {\n      rollData.item.attackBonus = actionData.attackBonus;\n      parts.push(`@item.attackBonus[${game.i18n.localize(\"PF1.AttackRollBonus\")}]`);\n    }\n\n    // Add proficiency penalty\n    try {\n      config.proficient = this.item.getProficiency(true);\n    } catch (error) {\n      // Treat as proficient if there's proficiency incompatibility.\n      config.proficient = true;\n    }\n\n    // Add secondary natural attack penalty\n    const isNatural = this.item.subType === \"natural\";\n    const isNaturalSecondary = isNatural && primaryAttack === false;\n    config.secondaryPenalty = isNaturalSecondary ? -5 : 0;\n\n    // Add bonus\n    rollData.bonus = bonus ? await RollPF.safeRollAsync(bonus, rollData).total : 0;\n\n    // Options for D20RollPF\n    const rollOptions = {\n      critical: this.critRange,\n    };\n\n    Hooks.call(\"pf1PreAttackRoll\", this, config, rollData, rollOptions);\n\n    // Convert config to roll part\n    if (config.secondaryPenalty != 0) {\n      parts.push(`${config.secondaryPenalty}[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n    }\n\n    if (rollData.bonus != 0) {\n      parts.push(`@bonus[${game.i18n.localize(\"PF1.SituationalBonus\")}]`);\n    }\n\n    if (!config.proficient) {\n      parts.push(`@item.proficiencyPenalty[${game.i18n.localize(\"PF1.Proficiency.Penalty\")}]`);\n    }\n\n    if (this.ammoType && this.ammoCost > 0) {\n      const misfire = this.misfire;\n      if (misfire > 0) rollOptions.misfire = misfire;\n    }\n\n    const roll = await new pf1.dice.D20RollPF(\n      [rollData.d20 || pf1.dice.D20RollPF.standardRoll, ...parts.filter((p) => !!p)].join(\"+\"),\n      rollData,\n      rollOptions\n    ).evaluate();\n\n    // Cleanup roll data that was altered here.\n    delete rollData.bonus;\n\n    Hooks.call(\"pf1AttackRoll\", this, roll, config);\n\n    return roll;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll damage for an action.\n   *\n   * @param {object} [options] - Options configuring the damage roll\n   * @param {object | null} [options.data=null] - rollData to be used\n   * @param {boolean} [options.critical=false] - Whether to roll critical damage\n   * @param {string[]} [options.extraParts] - Additional strings added to the roll formula\n   * @param {object} [options.conditionalParts=[]] - Conditional data sets\n   * @param {boolean} [options.primaryAttack] - Whether this is the primary attack\n   * @returns {Promise<DamageRoll[]>} Created damage rolls, one roll per damage part\n   */\n  async rollDamage({\n    data = null,\n    critical = false,\n    extraParts = [],\n    conditionalParts = {},\n    primaryAttack = true,\n  } = {}) {\n    const rollData = data ?? this.getRollData();\n\n    if (!this.hasDamage) {\n      throw new Error(\"You may not make a Damage Roll with this Action.\");\n    }\n\n    const isNatural = this.item?.subType === \"natural\";\n\n    // Determine critical multiplier\n    rollData.critMult = 1;\n    if (critical) rollData.critMult = this.data.ability.critMult;\n    // Determine ability multiplier\n    if (rollData.ablMult == null) {\n      const held = rollData.action?.held || rollData.item?.held || \"1h\";\n      rollData.ablMult =\n        rollData.action?.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    }\n\n    // Define Roll parts\n    const parts =\n      this.data.damage.parts?.map((damage) => {\n        return { base: damage.formula, extra: [], damageType: damage.type, type: \"normal\" };\n      }) ?? [];\n    // Add conditionals damage\n    conditionalParts[\"damage.normal\"]?.forEach((p) => {\n      const [base, damageType, isExtra] = p;\n      isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type: \"normal\" });\n    });\n    // Add critical damage parts\n    if (critical === true) {\n      const critParts = this.data.damage?.critParts;\n      if (critParts) {\n        parts.push(\n          ...critParts.map((damage) => {\n            return { base: damage.formula, extra: [], damageType: damage.type, type: \"crit\" };\n          })\n        );\n      }\n      // Add conditional critical damage parts\n      conditionalParts[\"damage.crit\"]?.forEach((p) => {\n        const [base, damageType, isExtra] = p;\n        isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type: \"crit\" });\n      });\n    }\n    // Add non-critical damage parts\n    if (critical === false) {\n      const nonCritParts = this.data.damage?.nonCritParts;\n      if (nonCritParts) {\n        parts.push(\n          ...nonCritParts.map((damage) => {\n            return { base: damage.formula, extra: [], damageType: damage.type, type: \"nonCrit\" };\n          })\n        );\n      }\n      // Add conditional non-critical damage parts\n      conditionalParts[\"damage.nonCrit\"]?.forEach((p) => {\n        const [base, damageType, isExtra] = p;\n        isExtra ? parts[0].extra.push(base) : parts.push({ base, extra: [], damageType, type: \"nonCrit\" });\n      });\n    }\n\n    if (!this.isHealing) {\n      // Gather changes\n      const changes = this.damageSources;\n\n      // Add enhancement bonus to changes\n      if (this.enhancementBonus) {\n        changes.push(\n          new pf1.components.ItemChange({\n            formula: this.enhancementBonus.toString(),\n            operator: \"add\",\n            target: \"damage\",\n            type: \"enh\",\n            value: this.enhancementBonus,\n            flavor: game.i18n.localize(\"PF1.EnhancementBonus\"),\n          })\n        );\n      }\n\n      // Get damage bonus\n      getHighestChanges(\n        changes.filter((c) => {\n          c.applyChange(this.actor);\n          return c.operator !== \"set\";\n        }),\n        { ignoreTarget: true }\n      ).forEach((c) => {\n        let value = c.value;\n        // Put in parenthesis if there's a chance it is more complex\n        if (/[\\s+-?:]/.test(value)) value = `(${value})`;\n        parts[0].extra.push(`${value}[${c.flavor}]`);\n      });\n\n      // Add broken penalty\n      if (this.item.isBroken) {\n        const label = game.i18n.localize(\"PF1.Broken\");\n        parts[0].extra.push(`-2[${label}]`);\n      }\n    }\n\n    // Determine ability score modifier\n    const abl = this.data.ability.damage;\n    const ability = rollData.abilities?.[abl];\n    if (ability) {\n      // Determine ability score bonus\n      const max = this.data.ability?.max ?? Infinity;\n      if (ability.mod < 0) rollData.ablDamage = Math.min(max, ability.mod);\n      else rollData.ablDamage = Math.floor(Math.min(max, ability.mod) * rollData.ablMult);\n\n      // Determine ability score label\n      const ablLabel = pf1.config.abilities[abl];\n\n      // Add ability score\n      parts[0].extra.push(`@ablDamage[${ablLabel}]`);\n    }\n\n    // Create roll\n    const rolls = [];\n    for (let a = 0; a < parts.length; a++) {\n      const part = parts[a];\n      let rollParts = [];\n      if (a === 0) rollParts = [...part.extra, ...extraParts];\n      const formula = [part.base, ...rollParts].join(\" + \");\n      // Skip empty formulas instead of erroring on them\n      if (formula.length == 0) continue;\n      try {\n        const roll = await new DamageRoll(formula, rollData, {\n          damageType: part.damageType,\n          type: part.type,\n        }).evaluate();\n        // Add to result\n        rolls.push(roll);\n      } catch (err) {\n        console.error(\"Error with damage formula:\", formula, this);\n        throw err;\n      }\n    }\n\n    return rolls;\n  }\n\n  /**\n   * Generates a list of targets this modifier can have.\n   *\n   * @param {ItemPF} item - The item for which the modifier is to be created.\n   * @returns {Object<string, string>} A list of targets\n   */\n  getConditionalTargets() {\n    const result = {};\n    if (this.hasAttack) {\n      result[\"attack\"] = game.i18n.localize(pf1.config.conditionalTargets.attack._label);\n      result[\"critMult\"] = game.i18n.localize(pf1.config.conditionalTargets.critMult._label);\n    }\n    if (this.hasDamage) result[\"damage\"] = game.i18n.localize(pf1.config.conditionalTargets.damage._label);\n    result[\"size\"] = game.i18n.localize(pf1.config.conditionalTargets.size._label);\n    if (this.item.type === \"spell\" || this.hasSave)\n      result[\"effect\"] = game.i18n.localize(pf1.config.conditionalTargets.effect._label);\n    // Only add Misc target if subTargets are available\n    if (Object.keys(this.getConditionalSubTargets(\"misc\")).length > 0) {\n      result[\"misc\"] = game.i18n.localize(pf1.config.conditionalTargets.misc._label);\n    }\n    return result;\n  }\n\n  /**\n   * Generates lists of conditional subtargets this attack can have.\n   *\n   * @param {string} target - The target key, as defined in PF1.conditionTargets.\n   * @returns {Object<string, string>} A list of conditionals\n   */\n  getConditionalSubTargets(target) {\n    const result = {};\n    // Add static targets\n    if (foundry.utils.hasProperty(pf1.config.conditionalTargets, target)) {\n      for (const [k, v] of Object.entries(pf1.config.conditionalTargets[target])) {\n        if (!k.startsWith(\"_\") && !k.startsWith(\"~\")) result[k] = v;\n      }\n    }\n    // Add subtargets depending on attacks\n    if ([\"attack\", \"damage\"].includes(target)) {\n      // Add specific attacks\n      if (this.hasAttack) {\n        result[\"attack_0\"] = `${game.i18n.localize(\"PF1.Attack\")} 1`;\n\n        const exAtk = this.data.extraAttacks;\n        if (exAtk?.manual?.length) {\n          exAtk.manual.forEach((part, index) => {\n            result[`attack_${index + 1}`] = part.name;\n          });\n        }\n      } else {\n        delete result[\"rapidShotDamage\"];\n      }\n    }\n    // Add subtargets affecting effects\n    if (target === \"effect\") {\n      if (this.hasSave) result[\"dc\"] = game.i18n.localize(\"PF1.DC\");\n      if (this.item?.type === \"spell\") result[\"cl\"] = game.i18n.localize(\"PF1.CasterLevelAbbr\");\n    }\n    // Add misc subtargets\n    if (target === \"misc\") {\n      // Add charges subTarget with specific label\n      if (this.isCharged && this.type !== \"spell\") result[\"charges\"] = game.i18n.localize(\"PF1.ChargeCost\");\n    }\n    return result;\n  }\n\n  /* Generates lists of conditional modifier bonus types applicable to a formula.\n   * @param {string} target - The target key as defined in PF1.conditionTargets.\n   * @returns {Object.<string, string>} A list of bonus types.\n   * */\n  getConditionalModifierTypes(target) {\n    const result = {};\n    if (target === \"attack\" || target === \"damage\") {\n      // Add types from pf1.config.bonusTypes\n      for (const [k, v] of Object.entries(pf1.config.bonusTypes)) {\n        result[k] = v;\n      }\n    }\n    if (target === \"damage\") {\n      for (const damageType of pf1.registry.damageTypes) {\n        result[damageType.id] = damageType.name;\n      }\n    }\n    return result;\n  }\n\n  /* Generates a list of critical applications for a given formula target.\n   * @param {string} target - The target key as defined in PF1.conditionalTargets.\n   * @returns {Object.<string, string>} A list of critical applications.\n   * */\n  getConditionalCritical(target) {\n    let result = {};\n    // Attack bonuses can only apply as critical confirm bonus\n    if (target === \"attack\") {\n      result = { ...result, normal: \"PF1.Normal\", crit: \"PF1.CriticalConfirmBonus\" };\n    }\n    // Damage bonuses can be multiplied or not\n    if (target === \"damage\") {\n      result = { ...result, normal: \"PF1.Normal\" };\n      if (this.hasAttack) {\n        result = { ...result, crit: \"PF1.OnCritBonusFormula\", nonCrit: \"PF1.NonMultBonusFormula\" };\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Generate attacks.\n   *\n   * @param {object} [options] - Options\n   * @param {boolean} [options.full=true] - Full attack\n   * @param {object} [options.rollData] - Roll data\n   * @param {boolean} [options.resolve=false] - If the bonuses are to be resolved directly.\n   * @param {boolean} [options.conditionals=false] - Include conditional modifications. Requires `resolve` to be enabled.\n   * @param {boolean} [options.bonuses=false] - Include other bonuses. Requires `resolve` to be enabled.\n   * @returns {Array<object>} - Array of attack data\n   */\n  getAttacks({ full = true, rollData, resolve = false, conditionals = false, bonuses = false } = {}) {\n    rollData ||= this.getRollData();\n\n    const actionData = this.data;\n\n    const exAtkCfg = pf1.config.extraAttacks[actionData.extraAttacks?.type] ?? {};\n\n    /**\n     * Counter for unnamed or other numbered attacks, to be incremented with each usage.\n     * Starts at 1 to account for the base attack.\n     */\n    let unnamedAttackIndex = 1;\n\n    const attackName =\n      actionData.attackName || game.i18n.format(\"PF1.ExtraAttacks.Formula.LabelDefault\", { 0: unnamedAttackIndex });\n\n    rollData.attackCount = 0;\n\n    const flavor = game.i18n.localize(exAtkCfg.flavor || \"\");\n    const formula = flavor ? `(${exAtkCfg.bonus || \"0\"})[${flavor}]` : exAtkCfg.bonus;\n    const attacks = [{ bonus: formula, label: attackName }];\n\n    // Extra attacks\n    if (full) {\n      rollData.fullAttack = 1;\n      const unchainedEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n      let attackCount = 0;\n\n      const parseAttacks = (countFormula, bonusFormula, label, bonusLabel) => {\n        const exAtkCount = RollPF.safeRollAsync(countFormula, rollData)?.total ?? 0;\n        if (exAtkCount <= 0) return;\n\n        try {\n          for (let i = 0; i < exAtkCount; i++) {\n            rollData.attackCount = attackCount += 1;\n            rollData.formulaicAttack = i + 1; // Add and update attack counter\n            const bonus = RollPF.safeRollAsync(\n              bonusFormula || \"0\",\n              rollData,\n              { formula: bonusFormula, action: this },\n              undefined,\n              {\n                minimize: true,\n              }\n            ).total;\n            attacks.push({\n              bonus: bonusLabel ? `(${bonus})[${bonusLabel}]` : bonus,\n              // If formulaic attacks have a non-default name, number them with their own counter; otherwise, continue unnamed attack numbering\n              label:\n                label?.replace(\"{0}\", i + 1) ||\n                game.i18n.format(\"PF1.ExtraAttacks.Formula.LabelDefault\", { 0: (unnamedAttackIndex += 1) }),\n            });\n          }\n        } catch (err) {\n          console.error(err);\n        }\n\n        // Cleanup roll data\n        delete rollData.attackCount;\n        delete rollData.formulaicAttack;\n      };\n\n      if (exAtkCfg.iteratives && !unchainedEconomy) {\n        parseAttacks(\n          pf1.config.iterativeExtraAttacks,\n          pf1.config.iterativeAttackModifier,\n          null,\n          game.i18n.localize(\"PF1.Iterative\")\n        );\n      }\n\n      // Add attacks defined by configuration\n      if (exAtkCfg.count) parseAttacks(exAtkCfg.count, exAtkCfg.bonus, null, flavor);\n\n      // Add manually entered explicit extra attacks\n      if (exAtkCfg.manual) {\n        const extraAttacks = actionData.extraAttacks?.manual ?? [];\n        for (const { name, formula } of extraAttacks) {\n          attacks.push({\n            bonus: formula,\n            // Use defined label, or fall back to continuously numbered default attack name\n            label: name || game.i18n.format(\"PF1.ExtraAttacks.Formula.LabelDefault\", { 0: (unnamedAttackIndex += 1) }),\n          });\n        }\n      }\n\n      // Add custom extra attack formula\n      if (exAtkCfg.formula) {\n        parseAttacks(\n          actionData.extraAttacks.formula?.count,\n          actionData.extraAttacks.formula?.bonus,\n          actionData.extraAttacks.formula?.label\n        );\n      }\n    }\n\n    if (resolve) {\n      const condBonuses = new Array(attacks.length).fill(0);\n      if (conditionals) {\n        // Conditional modifiers\n        actionData.conditionals\n          .filter((c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\"))\n          .forEach((c) => {\n            c.modifiers.forEach((cc) => {\n              const bonusRoll = RollPF.safeRollAsync(cc.formula, rollData);\n              if (bonusRoll.total == 0) return;\n              if (cc.subTarget?.match(/^attack\\.(\\d+)$/)) {\n                const atk = parseInt(RegExp.$1, 10);\n                if (atk in condBonuses) condBonuses[atk] += bonusRoll.total;\n              }\n            });\n          });\n      }\n\n      let totalBonus = 0;\n      if (bonuses) {\n        const sources = this.item.getAttackSources(this.id, { rollData });\n        totalBonus = sources.reduce((f, s) => f + s.value, 0);\n      }\n\n      attacks.forEach((atk, i) => {\n        rollData.attackCount = i;\n        atk.bonus = RollPF.safeRollAsync(atk.bonus, rollData).total + totalBonus + condBonuses[i];\n        delete rollData.attackCount;\n      });\n    }\n\n    return attacks;\n  }\n\n  /**\n   * @param {object} options - See ItemPF#useAttack.\n   * @returns {Promise<void>}\n   */\n  async use(options = {}) {\n    options.actionId = this.id;\n\n    return this.item.use(options);\n  }\n\n  /**\n   * Effective ammo type.\n   *\n   * @type {string|null} - Ammo type string or null if this doesn't use ammo.\n   */\n  get ammoType() {\n    const type = this.data.ammo?.type;\n    if (type === \"none\") return null;\n    return type || this.item.system.ammo?.type || null;\n  }\n\n  /**\n   * Effective per-attack ammo cost.\n   *\n   * @type {number} - Number of ammo each attack consumes. Defaults to 1 if using ammo, 0 if not.\n   */\n  get ammoCost() {\n    if (this.ammoType) return this.data.ammo?.cost ?? 1;\n    return 0;\n  }\n\n  /**\n   * @type {pf1.applications.component.ItemActionSheet} - Returns current sheet for this action or creates one if it doesn't exist.\n   */\n  get sheet() {\n    if (!this._sheet) {\n      this._sheet = new pf1.applications.component.ItemActionSheet(this);\n    }\n    return this._sheet;\n  }\n\n  /**\n   * Render all connected application instances.\n   *\n   * @param {boolean} [force=false] - Force rendering\n   * @param {object} [context={}] - Optional context\n   */\n  render(force = false, context = {}) {\n    Object.values(this.apps).forEach((app) => app.render(force, context));\n  }\n}\n","import { RollPF } from \"../dice/roll.mjs\";\n\nexport class ChatAttack {\n  /** @type {ItemAction} */\n  action;\n\n  /** @type {pf1.actionUse.ActionUse} */\n  actionUse;\n\n  /** @type {D20RollPF | null} */\n  attack = null;\n  hasRange = false;\n  /** @type {D20RollPF | null} */\n  critConfirm = null;\n\n  hasAttack = false;\n  hasCritConfirm = false;\n\n  hasDamage = false;\n  damage = new AttackDamage();\n  damageRows = [];\n  nonlethal = false;\n  critDamage = new AttackDamage();\n\n  ammo = null;\n\n  hasCards = false;\n  cards = {};\n\n  effectNotes = [];\n  effectNotesHTML = \"\";\n  notesOnly = true;\n\n  targets = null;\n\n  constructor(action, { label = \"\", rollData = {}, targets = null, actionUse = null } = {}) {\n    this.actionUse = actionUse;\n    this.rollData = rollData;\n    this.setAction(action);\n    this.label = label;\n    this.hasRange = action.item.hasRange;\n    this.targets = targets;\n  }\n\n  /** @type {Actor} */\n  get actor() {\n    return this.action?.actor;\n  }\n\n  setAmmo(ammoId) {\n    const ammoItem = this.actor.items.get(ammoId);\n    if (!ammoItem) {\n      this.ammo = null;\n      return;\n    }\n\n    this.ammo = {\n      id: ammoId,\n      img: ammoItem.img,\n      name: ammoItem.name,\n      misfire: false,\n    };\n  }\n\n  /**\n   * Sets the attack's item reference.\n   *\n   * @param {ItemAction} action - The action to reference.\n   */\n  setAction(action) {\n    if (action == null) {\n      this.rollData = null;\n      this.action = null;\n      return;\n    }\n\n    this.action = action;\n    this.isHealing = action.isHealing;\n\n    this.setRollData();\n  }\n\n  /**\n   * Applies changes to the roll data.\n   */\n  setRollData() {\n    const data = this.rollData;\n    // Set critical hit multiplier\n    data.critMult = 1;\n    data.critMultBonus = 0;\n    data.critCount = 0;\n    // Determine ability multiplier\n    if (data.action.ability.damageMult != null) {\n      const held = data.action?.held || data.item?.held || \"1h\";\n      data.ablMult = data.action.ability.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n    }\n  }\n\n  async setEffectNotesHTML() {\n    if (this.effectNotes.length === 0) {\n      this.effectNotesHTML = \"\";\n      return;\n    }\n\n    const rollData = this.rollData;\n    const enrichOptions = {\n      rollData,\n      async: true,\n      relativeTo: this.action.actor,\n    };\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", {\n      notes: this.effectNotes,\n      css: \"effect-notes\",\n      title: \"PF1.EffectNotes\",\n    });\n\n    this.effectNotesHTML = await TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  async addAttack({ noAttack = false, bonus = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    const actor = this.action.actor;\n\n    this.hasAttack = true;\n    this.notesOnly = false;\n\n    /** @type {D20RollPF} */\n    if (critical === true) {\n      if (this.action.data.critConfirmBonus) {\n        let critConfirm = this.action.data.critConfirmBonus;\n        if (RollPF.parse(critConfirm).length > 1) critConfirm = `(${critConfirm})`;\n        extraParts.push(`${critConfirm}[${game.i18n.localize(\"PF1.CriticalConfirmation\")}]`);\n      }\n\n      const ccKeys = pf1.documents.actor.changes.getChangeFlat.call(actor, \"critConfirm\");\n      for (const ccKey of ccKeys) {\n        actor?.sourceDetails[ccKey]?.forEach((c) => extraParts.push(`(${c.value})[${c.name}]`));\n      }\n\n      // Add conditionals for critical confirmation\n      if (conditionalParts[\"attack.crit\"]?.length) extraParts.push(...conditionalParts[\"attack.crit\"]);\n    } else {\n      // Add conditional attack bonus\n      if (conditionalParts[\"attack.normal\"]?.length) extraParts.push(...conditionalParts[\"attack.normal\"]);\n    }\n\n    // Add broken penalty\n    const broken = this.rollData.item.broken;\n    if (broken && !critical) {\n      const label = game.i18n.localize(\"PF1.Broken\");\n      extraParts.push(`-2[${label}]`);\n    }\n\n    // Armor as DR\n    if (!noAttack) {\n      if (critical && !game.settings.get(\"pf1\", \"critConfirm\")) {\n        // Defense DC\n        this.critConfirm = this.actionUse?.getDefenseDC(this.attack) ?? RollPF.safeRollSync(\"0\");\n        this.critConfirm.armorAsDR = true;\n        this.critConfirm.options.flavor = game.i18n.localize(\"PF1.Critical\");\n        noAttack = true;\n      }\n    }\n\n    // Roll attack\n    if (!noAttack) {\n      const roll = await this.action.rollAttack({\n        data: this.rollData,\n        bonus: bonus,\n        extraParts: extraParts,\n      });\n\n      if (critical === true) this.critConfirm = roll;\n      else this.attack = roll;\n\n      // Add crit confirm\n      const baseCritMult = this.rollData.action.ability.critMult ?? 1;\n      if (!critical && !this.action.isCombatManeuver && roll.isCrit && baseCritMult > 1) {\n        this.hasCritConfirm = true;\n        this.rollData.critMult = Math.max(1, baseCritMult + (this.rollData.critMultBonus ?? 0));\n        if (broken) this.rollData.critMult = 1;\n\n        await this.addAttack({ bonus: bonus, extraParts: extraParts, critical: true, conditionalParts });\n      }\n\n      // Add tooltip\n      roll.options.flavor = critical ? game.i18n.localize(\"PF1.CriticalConfirmation\") : this.label;\n    }\n  }\n\n  async addDamage({ flavor = null, extraParts = [], critical = false, conditionalParts = {} } = {}) {\n    if (!this.action.item) return;\n\n    this.hasDamage = true;\n    this.notesOnly = false;\n    let data = this.damage;\n    if (critical === true) data = this.critDamage;\n\n    const rollData = foundry.utils.deepClone(this.rollData);\n    // Enforce critical multiplier\n    rollData.critCount = 0;\n\n    // Roll damage\n    const repeatCount = critical ? Math.max(1, rollData.critMult - 1) : 1;\n    for (let repeat = 0; repeat < repeatCount; ++repeat) {\n      if (critical) rollData.critCount++;\n      data.rolls.push(\n        ...(await this.action.rollDamage({\n          data: rollData,\n          extraParts: extraParts,\n          critical: critical,\n          conditionalParts,\n        }))\n      );\n    }\n\n    // Add normal data\n    if (!flavor) {\n      if (!critical) flavor = this.isHealing ? game.i18n.localize(\"PF1.Healing\") : game.i18n.localize(\"PF1.Damage\");\n      else flavor = game.i18n.localize(\"PF1.DamageCritical\");\n    }\n\n    // Determine total damage\n    let totalDamage = data.rolls.reduce((cur, p) => {\n      return cur + p.total;\n    }, 0);\n    if (critical) {\n      totalDamage = this.damage.rolls.reduce((cur, p) => {\n        return cur + p.total;\n      }, totalDamage);\n    }\n\n    // Handle minimum damage rule\n    if (totalDamage < 1) {\n      totalDamage = 1;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n      this.nonlethal = true;\n    }\n\n    // Handle nonlethal attacks\n    if (this.rollData.action.nonlethal || this.action.item.system.properties?.nnl) {\n      this.nonlethal = true;\n      flavor = game.i18n.localize(\"PF1.Nonlethal\");\n    }\n\n    // Finalize data\n    data.flavor = flavor;\n    data.total = totalDamage;\n  }\n\n  async addEffectNotes() {\n    this.effectNotes = [];\n\n    const item = this.action.item;\n    if (!item) return;\n\n    const actor = item.actor;\n\n    if (actor) {\n      const noteSources = [\"attacks.effect\"];\n      if (item.type === \"spell\") noteSources.push(\"spell.effect\"); // Spell specific notes\n\n      for (const source of noteSources) {\n        actor.getContextNotes(source).forEach((ns) => {\n          for (const note of ns.notes) this.effectNotes.push(...note.split(/[\\n\\r]+/));\n        });\n      }\n    }\n\n    // Add item notes\n    if (item.system.effectNotes?.length) {\n      this.effectNotes.push(...item.system.effectNotes);\n    }\n    // Add action notes\n    if (this.action.data.effectNotes?.length) {\n      this.effectNotes.push(...this.action.data.effectNotes);\n    }\n\n    // Misfire\n    if (this.ammo?.misfire) {\n      let label = game.i18n.localize(\"PF1.Misfire\");\n      const explosionRadius = this.action.item?.system.ammo?.explode ?? 0;\n      if (explosionRadius) {\n        const radius = pf1.utils.convertDistance(explosionRadius, \"ft\")[0];\n        const unit =\n          pf1.utils.getDistanceSystem() === \"metric\" ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        label += ` (${radius} ${unit})`;\n      }\n      this.effectNotes.push(label);\n    }\n\n    await this.setEffectNotesHTML();\n  }\n\n  finalize() {\n    this.hasCards = Object.keys(this.cards).length > 0;\n\n    // Determine damage rows for chat cards\n    // this.damageRows = [];\n    for (let a = 0; a < Math.max(this.damage.rolls.length, this.critDamage.rolls.length); a++) {\n      this.damageRows.push({ normal: null, crit: null });\n    }\n    for (let a = 0; a < this.damage.rolls.length; a++) {\n      this.damageRows[a].normal = this.damage.rolls[a];\n    }\n    for (let a = 0; a < this.critDamage.rolls.length; a++) {\n      this.damageRows[a].crit = this.critDamage.rolls[a];\n    }\n\n    return this;\n  }\n}\n\nclass AttackDamage {\n  flavor = \"\";\n\n  total = 0;\n\n  /** @type {DamageRoll[]} */\n  rolls = [];\n\n  get isActive() {\n    return this.rolls.length > 0;\n  }\n\n  get half() {\n    return Math.floor(this.total / 2);\n  }\n}\n","import { ChatAttack } from \"./chat-attack.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n// Documentation/type imports\n/** @typedef {import(\"@item/item-pf.mjs\").SharedActionData} SharedActionData */\n/** @typedef {pf1.documents.item.ItemPF} ItemPF */\n/** @typedef {pf1.documents.actor.ActorPF} ActorPF */\n/** @typedef {pf1.components.ItemAction} ItemAction */\n\n/**\n * Error states for when an item does not meet the requirements for an attack.\n *\n * @enum {number}\n * @readonly\n */\nexport const ERR_REQUIREMENT = Object.freeze({\n  NO_ACTOR_PERM: 1,\n  DISABLED: 2,\n  INSUFFICIENT_QUANTITY: 3,\n  INSUFFICIENT_CHARGES: 4,\n  MISSING_AMMO: 5,\n  INSUFFICIENT_AMMO: 6,\n});\n\nexport class ActionUse {\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {ActorPF}\n   */\n  actor;\n  /**\n   * The actor this action use is based on.\n   *\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * The item this action use is based on.\n   *\n   * @type {ItemPF}\n   */\n  item;\n  /**\n   * The action this action use is based on.\n   *\n   * @type {ItemAction}\n   */\n  action;\n  /**\n   * The shared data object holding all relevant data for this action use.\n   *\n   * @type {SharedActionData}\n   */\n  shared;\n\n  /**\n   * @param {Partial<SharedActionData>} [shared={}] - The shared context for this action use\n   */\n  constructor(shared = {}) {\n    Object.defineProperties(this, {\n      shared: { value: shared },\n      item: { value: shared.item },\n      action: { value: shared.action },\n      actor: { value: shared.item.actor },\n      token: { value: shared.token },\n    });\n\n    // Init some shared data\n    this.shared.templateData = {\n      action: this.shared.action,\n      item: this.shared.item,\n    };\n  }\n\n  /**\n   * @returns {Promise<number>} - 0 when successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkRequirements() {\n    const actor = this.item.actor;\n    if (actor && !actor.isOwner) {\n      ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n      return ERR_REQUIREMENT.NO_ACTOR_PERM;\n    }\n\n    if (this.item.type === \"feat\" && this.item.system.disabled) {\n      ui.notifications.warn(game.i18n.localize(\"PF1.Error.FeatDisabled\"));\n      return ERR_REQUIREMENT.DISABLED;\n    }\n\n    // Cost override set to 0 or to increase charges/quantity\n    if (this.shared.cost !== null && this.shared.cost <= 0) return 0;\n\n    if (this.item.isPhysical) {\n      const itemQuantity = this.item.system.quantity || 0;\n      if (itemQuantity <= 0) {\n        ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n        return ERR_REQUIREMENT.INSUFFICIENT_QUANTITY;\n      }\n    }\n\n    if (this.action.isSelfCharged && this.action.data.uses.self?.value < 1) {\n      ui.notifications.warn(\n        game.i18n.format(\"PF1.Error.InsufficientCharges\", {\n          name: `${this.item.name}: ${this.action.name}`,\n        })\n      );\n      return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @returns {Promise<object>} The roll data object for this attack.\n   */\n  getRollData() {\n    const rollData = foundry.utils.deepClone(this.shared.action.getRollData());\n    const d20 = this.shared.dice;\n    // TODO: Move this standard roll obfuscation to dialog handling\n    rollData.d20 = d20 === pf1.dice.D20RollPF.standardRoll ? \"\" : d20;\n\n    // Init values\n    rollData.dcBonus ||= 0;\n    rollData.chargeCost ||= 0;\n    rollData.chargeCostBonus ||= 0;\n\n    return rollData;\n  }\n\n  /**\n   * Creates and renders an attack roll dialog, and returns a result.\n   *\n   * @returns {Promise<ItemAttack_Dialog_Result|null>}\n   */\n  createAttackDialog() {\n    const dialog = new pf1.applications.AttackDialog(this);\n    return dialog.show();\n  }\n\n  /**\n   * Alters roll (and shared) data based on user input during the attack's dialog.\n   *\n   * @param {object} formData - The attack dialog's form data\n   * @returns {Promise}\n   */\n  alterRollData(formData = {}) {\n    const useOptions = this.shared.useOptions;\n    formData[\"power-attack\"] ??= useOptions.powerAttack;\n    formData[\"primary-attack\"] ??= useOptions.primaryAttack;\n    formData[\"cl-check\"] ??= useOptions.clCheck;\n    formData[\"measure-template\"] ??= useOptions.measureTemplate;\n    formData[\"haste-attack\"] ??= useOptions.haste;\n    formData[\"manyshot\"] ??= useOptions.manyshot;\n    formData[\"rapid-shot\"] ??= useOptions.rapidShot;\n    formData[\"damage-ability-multiplier\"] ??= useOptions.abilityMult;\n    formData.fullAttack ??= true;\n\n    if (formData[\"d20\"]) this.shared.rollData.d20 = formData[\"d20\"];\n    const atkBonus = formData[\"attack-bonus\"];\n    if (atkBonus) {\n      this.shared.attackBonus.push(atkBonus);\n    }\n    const dmgBonus = formData[\"damage-bonus\"];\n    if (dmgBonus) {\n      this.shared.damageBonus.push(dmgBonus);\n    }\n\n    if (formData.rollMode) this.shared.rollMode = formData.rollMode;\n\n    // Point-Blank Shot\n    if (formData[\"point-blank-shot\"]) {\n      this.shared.attackBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.damageBonus.push(`1[${game.i18n.localize(\"PF1.PointBlankShot\")}]`);\n      this.shared.pointBlankShot = true;\n    }\n\n    this.shared.fullAttack = formData.fullAttack;\n\n    // Many-shot\n    if (this.shared.fullAttack && formData[\"manyshot\"]) {\n      this.shared.manyShot = true;\n    }\n\n    // Rapid Shot\n    if (this.shared.fullAttack && formData[\"rapid-shot\"]) {\n      this.shared.attackBonus.push(`-2[${game.i18n.localize(\"PF1.RapidShot\")}]`);\n    }\n\n    // Primary attack\n    if (formData[\"primary-attack\"] != null)\n      foundry.utils.setProperty(this.shared.rollData, \"action.naturalAttack.primaryAttack\", formData[\"primary-attack\"]);\n\n    // Use measure template\n    if (formData[\"measure-template\"] != null) this.shared.useMeasureTemplate = formData[\"measure-template\"];\n\n    // Set held type\n    const held = formData[\"held\"] || this.shared.rollData.action.held || this.shared.rollData.item.held || \"normal\";\n    this.shared.rollData.action.held = held;\n\n    // Damage multiplier\n    const abilityDamageMultOverride = formData[\"damage-ability-multiplier\"];\n    if (abilityDamageMultOverride != null) {\n      this.shared.rollData.action.ability.damageMult = abilityDamageMultOverride;\n    }\n\n    // Power Attack\n    if (formData[\"power-attack\"]) {\n      const basePowerAttackBonus = this.shared.rollData.action?.powerAttack?.damageBonus ?? 2;\n      let powerAttackBonus = (1 + Math.floor(this.shared.rollData.attributes.bab.total / 4)) * basePowerAttackBonus;\n\n      // Get multiplier\n      const paMult = this.shared.action.getPowerAttackMult({ rollData: this.shared.rollData });\n\n      // Apply multiplier\n      powerAttackBonus = Math.floor(powerAttackBonus * paMult);\n\n      // Get label\n      const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.action.data.actionType)\n        ? game.i18n.localize(\"PF1.DeadlyAim\")\n        : game.i18n.localize(\"PF1.PowerAttack\");\n\n      // Get penalty\n      const powerAttackPenalty = -(\n        1 + Math.floor(foundry.utils.getProperty(this.shared.rollData, \"attributes.bab.total\") / 4)\n      );\n\n      // Add bonuses\n      this.shared.rollData.powerAttackPenalty = powerAttackPenalty;\n      this.shared.attackBonus.push(`${powerAttackPenalty}[${label}]`);\n      this.shared.powerAttack = true;\n      this.shared.rollData.powerAttackBonus = powerAttackBonus;\n      this.shared.rollData.powerAttackPenalty = powerAttackPenalty;\n    } else {\n      this.shared.rollData.powerAttackBonus = 0;\n      this.shared.rollData.powerAttackPenalty = 0;\n    }\n\n    // Conditionals\n    Object.keys(formData).forEach((f) => {\n      const idx = f.match(/conditional\\.(\\d+)/)?.[1];\n      if (idx && formData[f]) {\n        if (!this.shared.conditionals) this.shared.conditionals = [parseInt(idx)];\n        else this.shared.conditionals.push(parseInt(idx));\n      }\n    });\n\n    // Apply secondary attack penalties\n    if (\n      this.shared.rollData.item.subType === \"natural\" &&\n      this.shared.rollData.action?.naturalAttack.primaryAttack === false\n    ) {\n      const attackBonus = this.shared.rollData.action.naturalAttack?.secondary?.attackBonus || \"-5\";\n      let damageMult = this.shared.rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n      // Allow dialog override to work\n      if (abilityDamageMultOverride) damageMult = abilityDamageMultOverride;\n      this.shared.attackBonus.push(`(${attackBonus})[${game.i18n.localize(\"PF1.SecondaryAttack\")}]`);\n      this.shared.rollData.action.ability.damageMult = damageMult;\n    }\n\n    // CL check enabled\n    this.shared.casterLevelCheck = formData[\"cl-check\"];\n\n    // Concentration enabled\n    this.shared.concentrationCheck = formData[\"concentration\"];\n\n    // Conditional defaults for fast-forwarding\n    if (!this.shared.conditionals && foundry.utils.isEmpty(formData)) {\n      this.shared.conditionals = this.shared.action.data.conditionals?.reduce((arr, con, i) => {\n        if (con.default) arr.push(i);\n        return arr;\n      }, []);\n    }\n  }\n\n  /**\n   * @typedef {object} ItemAttack_AttackData\n   * @property {string} label - The attack's name\n   * @property {number|string|undefined} [attackBonus] - An attack bonus specific to this attack\n   * @property {number|string|undefined} [damageBonus] - A damage bonus specific to this attack\n   * @property {string|null} [ammo] - The ID of the ammo item used\n   */\n  /**\n   * Generates attacks for an item's action.\n   *\n   * @param {boolean} [forceFullAttack=false] - Generate full attack data, e.g. as base data for an {@link AttackDialog}\n   * @returns {Promise<ItemAttack_AttackData[]> | ItemAttack_AttackData[]} The generated default attacks.\n   */\n  generateAttacks(forceFullAttack = false) {\n    const rollData = this.shared.rollData;\n    const action = this.action;\n    const actor = this.actor;\n\n    const useOptions = this.shared.useOptions;\n\n    // Use either natural fullAttack state, or force generation of all attacks via override\n    const full = forceFullAttack || this.shared.fullAttack;\n\n    /** @type {Array<ActionUseAttack>} */\n    const allAttacks = this.action\n      .getAttacks({ full, rollData, conditionals: false, bonuses: false })\n      .map((atk) => new ActionUseAttack(atk.label, atk.bonus));\n\n    // Set default ammo usage\n    const ammoType = this.action.ammoType;\n    if (ammoType) {\n      const ammoId = this.item.getFlag(\"pf1\", \"defaultAmmo\");\n      const ammos = this.getAmmo();\n      if (ammoId && ammos.length) {\n        const ammo = ammos.find((a) => a.id === ammoId);\n        const quantity = ammo?.quantity || 0;\n        const ammoCost = action.ammoCost;\n        const abundant = ammo?.abundant || false;\n        for (let a = 0; a < allAttacks.length; a++) {\n          const atk = allAttacks[a];\n          if (abundant || quantity >= (a + 1) * ammoCost) atk.ammo = ammo;\n          else atk.ammo = null;\n        }\n      }\n    }\n\n    this.shared.attacks = allAttacks;\n\n    return allAttacks;\n  }\n\n  async autoSelectAmmo() {\n    const ammoType = this.shared.action.ammoType;\n    if (!ammoType) return;\n\n    const ammoCost = this.action.ammoCost;\n\n    const ammoId = this.item.getFlag(\"pf1\", \"defaultAmmo\");\n    const item = this.item.actor?.items.get(ammoId);\n    if (item && (item.system.quantity || 0) >= ammoCost) return;\n\n    const ammo = this.actor.itemTypes.loot\n      .filter(\n        (i) =>\n          i.subType === \"ammo\" &&\n          i.system.extraType === ammoType &&\n          i.system.quantity >= ammoCost &&\n          i.system.identified !== false\n      )\n      .sort((a, b) => a.system.price - b.system.price);\n\n    if (ammo.length == 0) return;\n\n    await this.item.setFlag(\"pf1\", \"defaultAmmo\", ammo[0].id);\n  }\n\n  /**\n   * Fetch valid ammo items from actor.\n   *\n   * @returns {AttackAmmo}\n   */\n  getAmmo() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammoCost;\n    const ammo = actor.itemTypes.loot.filter((item) => this._filterAmmo(item, ammoCost));\n\n    const defaultAmmo = this.action.item.getFlag(\"pf1\", \"defaultAmmo\");\n\n    return ammo.map((o) => {\n      return {\n        id: o.id,\n        quantity: o.system.quantity || 0,\n        abundant: o.system.abundant || false,\n        data: o.toObject(),\n        document: o,\n        isDefault: defaultAmmo === o.id,\n      };\n    });\n  }\n\n  /**\n   * Determine if item is valid for use as ammo.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {number} ammoCost - Ammo usage per attack\n   * @returns {boolean}\n   */\n  _filterAmmo(item, ammoCost = 1) {\n    if (!(item.type === \"loot\" && item.subType === \"ammo\")) return false;\n    if (item.system.quantity < ammoCost) return false;\n\n    const ammoType = item.system.extraType;\n    if (!ammoType) return true;\n\n    return this.action.ammoType === ammoType;\n  }\n\n  /**\n   * Subtracts ammo for this attack, updating relevant items with new quantities.\n   *\n   * @param {number} [value=1] - How much ammo to subtract.\n   * @returns {Promise}\n   */\n  async subtractAmmo(value = 1) {\n    if (!this.shared.action.ammoType) return;\n\n    const actor = this.item.actor;\n\n    const ammoUsage = {};\n    for (const atk of this.shared.attacks) {\n      if (atk.ammo) {\n        const item = actor.items.get(atk.ammo.id);\n        if (!item) continue;\n        // Don't remove abundant ammunition\n        if (item.system.abundant) continue;\n\n        ammoUsage[atk.ammo.id] ??= 0;\n        ammoUsage[atk.ammo.id] += value;\n      }\n    }\n\n    this.shared.ammoUsage = ammoUsage;\n\n    if (!foundry.utils.isEmpty(ammoUsage)) {\n      const updateData = Object.entries(ammoUsage).reduce((cur, [ammoId, usage]) => {\n        const quantity = this.item.actor.items.get(ammoId)?.system.quantity;\n        const obj = {\n          _id: ammoId,\n          \"system.quantity\": quantity - usage,\n        };\n\n        cur.push(obj);\n        return cur;\n      }, []);\n\n      return this.item.actor.updateEmbeddedDocuments(\"Item\", updateData);\n    }\n  }\n\n  /**\n   * Update remaining ammo in {@link ChatAttack}s\n   */\n  updateAmmoUsage() {\n    const actor = this.actor;\n    const ammoCost = this.action.ammoCost;\n    if (ammoCost <= 0) return;\n    for (const atk of this.shared.attacks) {\n      const ammoId = atk.ammo?.id;\n      if (!ammoId) continue;\n      const chatAtk = atk.chatAttack;\n      const ammo = actor.items.get(ammoId)?.system.quantity || 0;\n      chatAtk.ammo.remaining = ammo;\n      chatAtk.ammo.quantity = ammoCost;\n    }\n  }\n\n  handleConditionals() {\n    if (this.shared.conditionals) {\n      const conditionalData = {};\n      for (const i of this.shared.conditionals) {\n        const conditional = this.shared.action.data.conditionals[i];\n        const tag = pf1.utils.createTag(conditional.name);\n        for (const [i, modifier] of conditional.modifiers.entries()) {\n          // Adds a formula's result to rollData to allow referencing it.\n          // Due to being its own roll, this will only correctly work for static formulae.\n          const conditionalRoll = RollPF.safeRollAsync(modifier.formula, this.shared.rollData);\n          if (conditionalRoll.err) {\n            ui.notifications.warn(\n              game.i18n.format(\"PF1.Warning.ConditionalRoll\", { number: i + 1, name: conditional.name })\n            );\n            // Skip modifier to avoid multiple errors from one non-evaluating entry\n            continue;\n          } else\n            conditionalData[[tag, i].join(\".\")] = RollPF.safeRollAsync(modifier.formula, this.shared.rollData).total;\n\n          // Create a key string for the formula array\n          const partString = `${modifier.target}.${modifier.subTarget}${\n            modifier.critical ? \".\" + modifier.critical : \"\"\n          }`;\n          // Add formula in simple format\n          if ([\"attack\", \"effect\", \"misc\"].includes(modifier.target)) {\n            const hasFlavor = /\\[.*\\]/.test(modifier.formula);\n            const flavoredFormula = hasFlavor ? modifier.formula : `(${modifier.formula})[${conditional.name}]`;\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              flavoredFormula,\n            ];\n          }\n          // Add formula as array for damage\n          else if (modifier.target === \"damage\") {\n            this.shared.conditionalPartsCommon[partString] = [\n              ...(this.shared.conditionalPartsCommon[partString] ?? []),\n              [modifier.formula, modifier.damageType, false],\n            ];\n          }\n          // Add formula to the size property\n          else if (modifier.target === \"size\") {\n            this.shared.rollData.size += conditionalRoll.total;\n          } else if (modifier.target === \"critMult\") {\n            this.shared.rollData.critMultBonus += conditionalRoll.total;\n          }\n        }\n      }\n\n      // Expand data into rollData to enable referencing in formulae\n      this.shared.rollData.conditionals = foundry.utils.expandObject(conditionalData, 5);\n\n      // Add specific pre-rolled rollData entries\n      for (const target of [\"effect.cl\", \"effect.dc\", \"misc.charges\"]) {\n        if (this.shared.conditionalPartsCommon[target] != null) {\n          const formula = this.shared.conditionalPartsCommon[target].join(\"+\");\n          const roll = RollPF.safeRollAsync(formula, this.shared.rollData, [target, formula]).total;\n          switch (target) {\n            case \"effect.cl\":\n              this.shared.rollData.cl += roll;\n              break;\n            case \"effect.dc\":\n              this.shared.rollData.dcBonus += roll;\n              break;\n            case \"misc.charges\":\n              this.shared.rollData.chargeCostBonus += roll;\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Checks all requirements to make the attack. This is after the attack dialog's data has been parsed.\n   *\n   * @returns {Promise<number> | number} 0 if successful, otherwise one of the ERR_REQUIREMENT constants.\n   */\n  checkAttackRequirements() {\n    let cost = this.shared.rollData.chargeCost;\n\n    if (cost > 0) {\n      const uses = this.item.charges;\n      if (this.item.type === \"spell\") {\n        if (this.item.spellbook?.spontaneous && !this.item.system.preparation?.value) {\n          cost = Infinity;\n        }\n      }\n\n      // Only spells have variable max uses\n      if (this.item?.type === \"spell\") {\n        const maxUses = this.item.maxCharges;\n        if (maxUses <= 0) {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientPreparation\", { name: this.item.name }));\n          return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n        }\n      }\n\n      // Cancel usage on insufficient charges\n      if (cost > uses) {\n        ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.item.name }));\n        return ERR_REQUIREMENT.INSUFFICIENT_CHARGES;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Generates ChatAttack entries based off the attack type.\n   */\n  async generateChatAttacks() {\n    // Normal attack(s)\n    if (this.shared.action.hasAttack) await this.addAttacks();\n    // Damage only\n    else if (this.shared.action.hasDamage) await this.addDamage();\n    // for effect notes only\n    else await this.addEmptyAttack();\n\n    const misfire = this.action.misfire ?? 0;\n\n    // Fill in ammo use details\n    this.shared.attacks.forEach((/** @type {ChatAttack}*/ attack) => {\n      if (!attack.hasAmmo) return;\n      /** @type {ChatAttack} */\n      const atk = attack.chatAttack;\n      if (atk) atk.setAmmo(attack.ammo.id);\n      // Mark misfire\n      if (atk.ammo) {\n        const d20 = atk.attack?.d20?.total;\n        atk.ammo.misfire = d20 <= misfire;\n      }\n    });\n\n    // Add save info\n    this.shared.save = this.shared.action.data.save.type;\n    this.shared.saveDC = this.shared.action.getDC(this.shared.rollData);\n\n    // add notes after all attack info is generated\n    await this.addEffectNotes();\n    await this.addFootnotes();\n  }\n\n  /**\n   * Determines conditional parts used in a specific attack.\n   *\n   * @param {object} atk - The attack used.\n   * @param {number} [index=0] - The index of the attack, in order of enabled attacks.\n   * @returns {object} The conditional parts used.\n   */\n  _getConditionalParts(atk, { index = 0 }) {\n    const result = {};\n\n    const conditionalTemplates = {\n      \"attack.normal\": \"attack.;id;.normal\",\n      \"attack.crit\": \"attack.;id;.crit\",\n      \"damage.normal\": \"damage.;id;.normal\",\n      \"damage.crit\": \"damage.;id;.crit\",\n      \"damage.nonCrit\": \"damage.;id;.nonCrit\",\n    };\n    const addPart = (id) => {\n      for (const [templateKey, templateStr] of Object.entries(conditionalTemplates)) {\n        if (!result[templateKey]) result[templateKey] = [];\n\n        const parsedStr = templateStr.replace(\";id;\", id);\n        result[templateKey].push(...(this.shared.conditionalPartsCommon[parsedStr] ?? []));\n      }\n    };\n\n    addPart(`attack_${index}`);\n    addPart(\"allAttack\");\n    addPart(\"allDamage\");\n\n    if (atk.type === \"rapid-shot\") {\n      addPart(\"rapidShotAttack\");\n      addPart(\"rapidShotDamage\");\n    } else if (atk.type === \"haste-attack\") {\n      addPart(\"hasteAttack\");\n      addPart(\"hasteDamage\");\n    }\n\n    return result;\n  }\n\n  /**\n   * Adds ChatAttack entries to an attack's shared context.\n   */\n  async addAttacks() {\n    const rollData = this.shared.rollData;\n\n    for (let a = 0; a < this.shared.attacks.length; a++) {\n      const atk = this.shared.attacks[a];\n\n      // Combine conditional modifiers for attack and damage\n      const conditionalParts = this._getConditionalParts(atk, { index: a });\n\n      rollData.attackCount = a;\n\n      // Create attack object\n      const attack = new ChatAttack(this.shared.action, {\n        label: atk.label,\n        rollData,\n        targets: game.user.targets,\n        actionUse: this,\n      });\n\n      if (atk.type !== \"manyshot\") {\n        // Add attack roll\n        await attack.addAttack({\n          extraParts: [...this.shared.attackBonus, atk.attackBonus],\n          conditionalParts,\n        });\n      }\n\n      // Add damage\n      if (this.shared.action.hasDamage) {\n        const extraParts = foundry.utils.deepClone(this.shared.damageBonus);\n        const nonCritParts = [];\n        const critParts = [];\n\n        // Add power attack bonus\n        if (rollData.powerAttackBonus > 0) {\n          // Get label\n          const label = [\"rwak\", \"twak\", \"rsak\"].includes(this.shared.action.data.actionType)\n            ? game.i18n.localize(\"PF1.DeadlyAim\")\n            : game.i18n.localize(\"PF1.PowerAttack\");\n\n          const powerAttackBonus = rollData.powerAttackBonus;\n          const powerAttackCritBonus = powerAttackBonus * (rollData.action?.powerAttack?.critMultiplier ?? 1);\n          nonCritParts.push(`${powerAttackBonus}[${label}]`);\n          critParts.push(`${powerAttackCritBonus}[${label}]`);\n        }\n\n        // Add damage\n        let flavor = null;\n        if (atk.type === \"manyshot\") flavor = game.i18n.localize(\"PF1.Manyshot\");\n        await attack.addDamage({\n          flavor,\n          extraParts: [...extraParts, ...nonCritParts],\n          critical: false,\n          conditionalParts,\n        });\n\n        // Add critical hit damage\n        if (attack.hasCritConfirm) {\n          await attack.addDamage({ extraParts: [...extraParts, ...critParts], critical: true, conditionalParts });\n        }\n      }\n\n      // Add to list\n      this.shared.chatAttacks.push(attack);\n\n      // Add a reference to the attack that created this chat attack\n      atk.chatAttack = attack;\n    }\n\n    // Cleanup rollData\n    delete rollData.attackCount;\n  }\n\n  /**\n   * Adds a ChatAttack entry for damage to an attack's shared context.\n   */\n  async addDamage() {\n    // Set conditional modifiers\n    this.shared.conditionalParts = {\n      \"damage.normal\": this.shared.conditionalPartsCommon[\"damage.allDamage.normal\"] ?? [],\n    };\n\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n    // Add damage\n    await attack.addDamage({\n      extraParts: foundry.utils.deepClone(this.shared.damageBonus),\n      critical: false,\n      conditionalParts: this.shared.conditionalParts,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  async addFootnotes() {\n    if (!this.item) return;\n\n    const type = this.action.data.actionType;\n    const typeMap = {\n      rsak: [\"ranged\", \"rangedSpell\"],\n      rwak: [\"ranged\", \"rangedWeapon\"],\n      twak: [\"ranged\", \"thrownWeapon\", \"rangedWeapon\"],\n      rcman: [\"ranged\"],\n      mwak: [\"melee\", \"meleeWeapon\"],\n      msak: [\"melee\", \"meleeSpell\"],\n      mcman: [\"melee\"],\n    };\n\n    const isAttack = this.action.hasAttack ?? false;\n\n    const notes = [];\n    // Add actor notes for attacks\n    if (this.actor && isAttack) {\n      notes.push(...this.actor.getContextNotesParsed(\"attacks.attack\"));\n      typeMap[type]?.forEach((subTarget) => notes.push(...this.actor.getContextNotesParsed(`attacks.${subTarget}`)));\n    }\n    // Add item notes\n    if (this.item?.system.attackNotes) {\n      notes.push(...this.item.system.attackNotes);\n    }\n    // Add action notes\n    if (this.action.data.attackNotes) {\n      notes.push(...this.action.data.attackNotes);\n    }\n\n    // Add CMB notes\n    if (this.action.isCombatManeuver) {\n      notes.push(...(this.item?.actor?.getContextNotesParsed(\"misc.cmb\") ?? []));\n    }\n\n    if (isAttack) {\n      const hasCritConfirm = this.shared.attacks.some((atk) => !!atk.chatAttack?.hasCritConfirm);\n      if (hasCritConfirm) notes.push(...(this.action.actor?.getContextNotesParsed(\"attacks.critical\") ?? []));\n    }\n\n    this.shared.templateData.footnotes = notes;\n  }\n\n  async addEmptyAttack() {\n    const attack = new ChatAttack(this.shared.action, {\n      rollData: this.shared.rollData,\n      primaryAttack: this.shared.primaryAttack,\n      actionUse: this,\n    });\n\n    // Add to list\n    this.shared.chatAttacks.push(attack);\n  }\n\n  /**\n   * Add effect notes for each individual attack.\n   */\n  async addEffectNotes() {\n    /** @type {ChatAttack[]} */\n    const attacks = this.shared.chatAttacks;\n    await Promise.all(attacks.filter((attack) => attack.type !== \"manyshot\").map((attack) => attack.addEffectNotes()));\n  }\n\n  /**\n   * @typedef {object} Attack_MeasureTemplateResult\n   * @property {boolean} result - Whether an area was selected.\n   * @property {Function} [place] - Function to place the template, if an area was selected.\n   * @property {Function} [delete] - Function to delete the template, if it has been placed.\n   */\n  /**\n   * Prompts the user for an area, based on the attack's measure template.\n   *\n   * @returns {Promise.<Attack_MeasureTemplateResult>} Whether an area was selected.\n   */\n  async promptMeasureTemplate() {\n    const mt = this.shared.action.data.measureTemplate;\n\n    // Determine size\n    let dist = RollPF.safeRollSync(mt.size, this.shared.rollData).total;\n    // Apply system of units conversion\n    dist = pf1.utils.convertDistance(dist)[0];\n\n    // Create data object\n    const templateOptions = {\n      type: mt.type,\n      distance: dist,\n      flags: {\n        pf1: {\n          origin: {\n            uuid: this.shared.item.uuid,\n            action: this.shared.action.id,\n          },\n        },\n      },\n    };\n\n    if (mt.color) {\n      // Color transformation to avoid invalid colors provided by user from corrupting the template\n      const c = Color.fromString(mt.color);\n      if (Number.isFinite(Number(c))) templateOptions.color = c.toString();\n    }\n    if (mt.texture) templateOptions.texture = mt.texture;\n\n    // Create template\n    this.shared.template = null;\n    const template = pf1.canvas.AbilityTemplate.fromData(templateOptions);\n    let result;\n    if (template) {\n      const actorSheet = this.item.actor?.sheet;\n      const sheetRendered = actorSheet?._element != null;\n      if (sheetRendered) actorSheet.minimize();\n      result = await template.drawPreview(this.shared.event);\n      if (!result.result) {\n        if (sheetRendered) actorSheet.maximize();\n        return result;\n      }\n    }\n\n    this.shared.template = await result.place();\n    return result;\n  }\n\n  /**\n   * Handles Dice So Nice integration.\n   */\n  async handleDiceSoNice() {\n    if (!game.settings.get(\"pf1\", \"integration\").diceSoNice) return;\n    if (!game.dice3d?.isEnabled()) return;\n\n    // Use try to make sure a chat card is rendered even if DsN fails\n    try {\n      // Define common visibility options for whole attack\n      const chatData = {};\n      ChatMessage.implementation.applyRollMode(chatData, this.shared.rollMode);\n\n      const mergeRolls = game.settings.get(\"dice-so-nice\", \"enabledSimultaneousRolls\");\n      const skipRolls = game.settings.get(\"dice-so-nice\", \"immediatelyDisplayChatMessages\");\n\n      /**\n       * Visually roll dice\n       *\n       * @async\n       * @param {PoolTerm[]} pools - An array of PoolTerms to be rolled together\n       * @returns {Promise} A Promise that is resolved when all rolls have been displayed\n       */\n      const showRoll = async (pools) => {\n        const whisper = chatData.whisper?.length ? chatData.whisper : undefined; // DSN does not like empty array for whisper\n        if (mergeRolls) {\n          return Promise.all(\n            pools.map((pool) => game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind))\n          );\n        } else {\n          for (const pool of pools) {\n            await game.dice3d.showForRoll(pool, game.user, true, whisper, chatData.blind);\n          }\n        }\n      };\n\n      /** @type {PoolTerm[]} */\n      const pools = [];\n\n      for (const atk of this.shared.chatAttacks) {\n        // Create PoolTerm for attack and damage rolls\n        const attackPool = new PoolTerm();\n        if (atk.attack) attackPool.rolls.push(atk.attack);\n        attackPool.rolls.push(...(atk.damage?.rolls ?? []));\n\n        // Create PoolTerm for crit confirmation and crit damage rolls\n        const critPool = new PoolTerm();\n        if (atk.chatAttack?.hasCritConfirm) critPool.rolls.push(atk.chatAttack.critConfirm);\n        critPool.rolls.push(...(atk.critDamage?.rolls ?? []));\n\n        // Add non-empty pools to the array of rolls to be displayed\n        if (attackPool.rolls.length) pools.push(attackPool);\n        if (critPool.rolls.length) pools.push(critPool);\n      }\n\n      if (pools.length) {\n        // Chat card is to be shown immediately\n        if (skipRolls) showRoll(pools);\n        // Wait for rolls to finish before showing the chat card\n        else await showRoll(pools);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * Adds an attack's chat card data to the shared object.\n   */\n  async getMessageData() {\n    if (this.shared.chatAttacks.length === 0) return;\n\n    // Create chat template data\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      name: this.item.name,\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n      rollMode: this.shared.rollMode,\n      attacks: this.shared.chatAttacks.map((o) => o.finalize()),\n    };\n\n    const actor = this.item.actor,\n      token = this.token ?? actor?.token;\n\n    // Set chat data\n    this.shared.chatData = {\n      speaker: ChatMessage.implementation.getSpeaker({ actor, token, alias: token?.name }),\n      rollMode: this.shared.rollMode,\n    };\n\n    // Set attack sound\n    if (this.shared.action.data.soundEffect) this.shared.chatData.sound = this.shared.action.data.soundEffect;\n    // Set dice sound if neither attack sound nor Dice so Nice are available\n    else if (!game.settings.get(\"pf1\", \"integration\").diceSoNice || !game.dice3d?.isEnabled())\n      this.shared.chatData.sound = CONFIG.sounds.dice;\n\n    // Get extra text\n    const props = [];\n    const extraText = await this.enrichNotes(this.shared.templateData.footnotes, \"PF1.Footnotes\", \"footnotes\");\n\n    const itemChatData = await this.item.getChatData({\n      actionId: this.shared.action.id,\n      chatcard: true,\n      rollData: this.shared.rollData,\n    });\n\n    // Get properties\n    const properties = [...itemChatData.properties, ...this.addGenericPropertyLabels()];\n    if (properties.length > 0) props.push({ header: game.i18n.localize(\"PF1.InfoShort\"), value: properties });\n\n    // Get combat properties\n    if (game.combat) {\n      const combatProps = this.addCombatPropertyLabels();\n\n      if (combatProps.length > 0) {\n        props.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: combatProps,\n          css: \"combat-properties\",\n        });\n      }\n    }\n\n    // Add CL notes\n    if (this.item.type === \"spell\" && actor) {\n      const clNotes = actor.getContextNotesParsed(`spell.cl.${this.item.system.spellbook}`);\n\n      if (clNotes.length) {\n        props.push({\n          header: game.i18n.localize(\"PF1.CLNotes\"),\n          value: clNotes,\n        });\n      }\n    }\n\n    // Parse template data\n    const identified = Boolean(this.shared.rollData.item?.identified ?? true);\n    const name = identified ? `${this.item.name} (${this.shared.action.name})` : this.item.getName(true);\n    this.shared.templateData = {\n      ...this.shared.templateData,\n      tokenUuid: token?.uuid,\n      actionId: this.shared.action?.id,\n      extraText: extraText,\n      identified: identified,\n      name: name,\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      actionDescription: itemChatData.actionDescription,\n      properties: props,\n      item: this.item.toObject(),\n      actor,\n      token,\n      scene: canvas.scene?.id,\n      hasSave: this.shared.action.hasSave,\n      rollData: this.shared.rollData,\n      save: {\n        dc: this.shared.saveDC,\n        type: this.shared.save,\n        label: game.i18n.format(\"PF1.SavingThrowButtonLabel\", {\n          type: pf1.config.savingThrows[this.shared.save],\n          dc: this.shared.saveDC.toString(),\n        }),\n        gmSensitiveLabel: game.i18n.format(\"PF1.SavingThrowButtonLabelGMSensitive\", {\n          save: pf1.config.savingThrows[this.shared.save],\n        }),\n      },\n    };\n\n    // Add range info\n    {\n      const range = this.shared.action.getRange({ type: \"max\", rollData: this.shared.rollData });\n      if (range != null) {\n        this.shared.templateData.range = range;\n        const usystem = pf1.utils.getDistanceSystem();\n        this.shared.templateData.rangeLabel = usystem === \"metric\" ? `${range} m` : `${range} ft.`;\n\n        const rangeUnits = this.shared.action.data.range.units;\n        if ([\"melee\", \"touch\", \"reach\", \"close\", \"medium\", \"long\"].includes(rangeUnits)) {\n          this.shared.templateData.rangeLabel = pf1.config.distanceUnits[rangeUnits];\n        }\n      }\n    }\n\n    // Add spell info\n    if (this.item.type === \"spell\" && actor) {\n      // Spell failure\n      if (actor.spellFailure > 0 && this.item.system.components.somatic) {\n        const spellbook = foundry.utils.getProperty(\n          actor.system,\n          `attributes.spells.spellbooks.${this.item.system.spellbook}`\n        );\n        if (spellbook && spellbook.arcaneSpellFailure) {\n          const roll = RollPF.safeRollAsync(\"1d100\");\n          this.shared.templateData.spellFailure = roll.total;\n          this.shared.templateData.spellFailureRoll = roll;\n          this.shared.templateData.spellFailureSuccess = this.shared.templateData.spellFailure > actor.spellFailure;\n        }\n      }\n      // Caster Level Check\n      this.shared.templateData.casterLevelCheck = this.shared.casterLevelCheck;\n      // Concentration check\n      this.shared.templateData.concentrationCheck = this.shared.concentrationCheck;\n    }\n\n    // Generate metadata\n    const metadata = this.generateChatMetadata();\n\n    // Get target info\n    if (!game.settings.get(\"pf1\", \"disableAttackCardTargets\")) {\n      this.shared.templateData.targets = this.shared.targets.map((t) => ({\n        img: t.document.texture.src,\n        actor: t.actor,\n        token: t.document,\n        uuid: t.document.uuid,\n      }));\n    }\n\n    this.shared.chatData[\"flags.pf1.metadata\"] = metadata;\n    this.shared.chatData[\"flags.core.canPopout\"] = true;\n    if (!identified)\n      this.shared.chatData[\"flags.pf1.identifiedInfo\"] = {\n        identified,\n        name: this.item._source.name || this.item.name,\n        description: itemChatData.identifiedDescription,\n        actionName: this.shared.action.name,\n        actionDescription: itemChatData.actionDescription,\n      };\n  }\n\n  /**\n   * Enrich notes\n   *\n   * @param {Array<string>} notes - Notes\n   * @param {string} title - Notes section title\n   * @param {string} css - CSS selectors\n   * @returns {string} - Enriched HTML as text\n   */\n  async enrichNotes(notes, title, css) {\n    if (notes.length === 0) return;\n\n    const enrichOptions = {\n      rollData: this.shared.rollData,\n      async: true,\n      relativeTo: this.actor,\n    };\n\n    const renderContext = {\n      notes,\n      css,\n      title,\n    };\n\n    const content = await renderTemplate(\"systems/pf1/templates/chat/parts/item-notes.hbs\", renderContext);\n\n    return TextEditor.enrichHTML(content, enrichOptions);\n  }\n\n  /**\n   * Adds generic property labels to an attack's chat card.\n   *\n   * @returns {string[]} The resulting property labels.\n   */\n  addGenericPropertyLabels() {\n    const properties = [];\n\n    // Add actual cost\n    const cost = this.shared.totalChargeCost;\n    if (cost && !this.item.system.atWill) {\n      if (this.item.type === \"spell\" && this.item.useSpellPoints()) {\n        properties.push(`${game.i18n.localize(\"PF1.SpellPointsCost\")}: ${cost}`);\n      } else {\n        properties.push(`${game.i18n.localize(\"PF1.ChargeCost\")}: ${cost}`);\n      }\n    }\n\n    // Add conditions\n    const conditions = Object.entries(this.actor.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInAction)\n      .map((c) => c.name);\n\n    // Special case\n    if (this.actor.system.conditions?.deaf && this.item.type === \"spell\") {\n      // TODO: Check if someone modified the conditions to show anyway?\n      conditions.push(pf1.registry.conditions.get(\"deaf\").name);\n    }\n\n    if (conditions.length) properties.push(...conditions);\n\n    // Add info for broken state\n    if (this.shared.rollData.item.broken) {\n      properties.push(game.i18n.localize(\"PF1.Broken\"));\n    }\n\n    // Nonlethal\n    if (this.action.data.nonlethal) properties.push(game.i18n.localize(\"PF1.Nonlethal\"));\n\n    // Splash\n    if (this.action.data.splash) properties.push(game.i18n.localize(\"PF1.Splash\"));\n\n    if (this.action.data.touch) properties.push(game.i18n.localize(\"PF1.TouchAttackShort\"));\n\n    // Add info for material\n    let materialKey = null;\n    let materialAddons = null;\n    const normalMaterialAction = this.action.data.material?.normal.value;\n    const normalMaterialItem = this.item.system.material?.normal.value;\n    const baseMaterialItem = this.item.system.material?.base?.value;\n    const addonMaterialAction = this.action.data.material?.addon;\n    const addonMaterialItem = this.item.system.material?.addon;\n\n    // Check the action data first, then the normal material, then the base material\n    if (normalMaterialAction && normalMaterialAction.length > 0) materialKey = normalMaterialAction;\n    else if (normalMaterialItem && normalMaterialItem.length > 0) materialKey = normalMaterialItem;\n    else materialKey = baseMaterialItem;\n\n    if (materialKey) {\n      properties.push(pf1.registry.materialTypes.get(materialKey.toLowerCase())?.name ?? materialKey.capitalize());\n    }\n\n    // Check for addon materials; prefer action data, then item data\n    if (addonMaterialAction && addonMaterialAction.length > 0) materialAddons = addonMaterialAction;\n    else if (addonMaterialItem && addonMaterialItem.length > 0) materialAddons = addonMaterialItem;\n\n    if (materialAddons) {\n      const materialAddonNames = materialAddons\n        .map((addon) => {\n          if (!addon) return null;\n          const addonName = pf1.registry.materialTypes.get(addon.toLowerCase())?.name ?? addon.capitalize();\n          return addonName;\n        })\n        .filter((addon) => !!addon);\n\n      if (materialAddonNames.length > 0) properties.push(...materialAddonNames);\n    }\n\n    // Add info for alignments\n    const actionAlignments = this.action.data.alignments;\n    const itemAlignments = this.item.system.alignments ?? {};\n    if (actionAlignments) {\n      for (const alignment of Object.keys(actionAlignments)) {\n        if (\n          actionAlignments[alignment] || // The action alignment is true OR\n          (actionAlignments[alignment] === null && // (The action alignment is indeterminate AND\n            itemAlignments[alignment])\n        ) {\n          // The item has the alignment)\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    } else {\n      // Honestly, this should never happen. An action should always have an alignment now.\n      for (const alignment of Object.keys(itemAlignments)) {\n        if (itemAlignments[alignment]) {\n          properties.push(game.i18n.localize(`PF1.Alignments.${alignment[0]}`));\n        }\n      }\n    }\n\n    // Add info for Power Attack to melee, Deadly Aim to ranged attacks\n    if (this.shared.powerAttack) {\n      switch (this.action.data.actionType) {\n        case \"rwak\":\n        case \"twak\":\n          properties.push(game.i18n.localize(\"PF1.DeadlyAim\"));\n          break;\n        case \"mwak\":\n          properties.push(game.i18n.localize(\"PF1.PowerAttack\"));\n          break;\n      }\n    }\n\n    // Add info for Point-Blank shot\n    if (this.shared.pointBlankShot) properties.push(game.i18n.localize(\"PF1.PointBlankShot\"));\n\n    // Add info for Rapid Shot\n    if (this.shared.attacks.find((o) => o.id === \"rapid-shot\")) properties.push(game.i18n.localize(\"PF1.RapidShot\"));\n\n    if (this.shared.manyShot) properties.push(game.i18n.localize(\"PF1.Manyshot\"));\n\n    // Add Armor Check Penalty's application to attack rolls info\n    if (this.item.hasAttack && this.shared.rollData.attributes?.acp?.attackPenalty > 0)\n      properties.push(game.i18n.localize(\"PF1.ArmorCheckPenalty\"));\n\n    // Add conditionals info\n    if (this.shared.conditionals?.length) {\n      this.shared.conditionals.forEach((c) => {\n        properties.push(this.shared.action.data.conditionals[c].name);\n      });\n    }\n\n    // Add Wound Thresholds info\n    if (this.shared.rollData.attributes?.woundThresholds?.level > 0)\n      properties.push(pf1.config.woundThresholdConditions[this.shared.rollData.attributes.woundThresholds.level]);\n\n    return properties;\n  }\n\n  /**\n   * Adds combat property labels to an attack's chat card.\n   *\n   * @returns {string[]} The resulting property labels.\n   */\n  addCombatPropertyLabels() {\n    const properties = [];\n\n    // Add round info\n    properties.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n    return properties;\n  }\n\n  /**\n   * Generates metadata for this attack for the chat card to store.\n   *\n   * @returns {object} The resulting metadata object.\n   */\n  generateChatMetadata() {\n    const metadata = {\n      actor: this.actor.uuid,\n      item: this.item.id,\n      action: this.action.id,\n      combat: undefined,\n      template: this.shared.template?.id ?? null,\n      rolls: {\n        attacks: [],\n      },\n      targets: this.shared.targets.map((t) => t.document.uuid),\n      config: {\n        critMult: this.shared.rollData.critMult,\n      },\n    };\n\n    if (this.actor && game.combat?.combatants.some((c) => c.actor === this.actor)) {\n      metadata.combat = game.combat.id;\n    }\n\n    // Add attack rolls\n    for (let attackIndex = 0; attackIndex < this.shared.chatAttacks.length; attackIndex++) {\n      const chatAttack = this.shared.chatAttacks[attackIndex];\n      const attackRolls = { attack: null, damage: [], critConfirm: null, critDamage: [] };\n      // Add attack roll\n      if (chatAttack.attack) attackRolls.attack = chatAttack.attack.toJSON();\n      // Add damage rolls\n      if (chatAttack.damage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.damage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.damage.rolls[damageIndex];\n          attackRolls.damage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n      // Add critical confirmation roll\n      if (chatAttack.critConfirm) attackRolls.critConfirm = chatAttack.critConfirm.toJSON();\n      // Add critical damage rolls\n      if (chatAttack.critDamage.rolls.length) {\n        for (let damageIndex = 0; damageIndex < chatAttack.critDamage.rolls.length; damageIndex++) {\n          const damageRoll = chatAttack.critDamage.rolls[damageIndex];\n          attackRolls.critDamage[damageIndex] = damageRoll.toJSON();\n        }\n      }\n\n      // Record used ammo ID and quantity\n      if (chatAttack.ammo?.id) {\n        // Quantity is included for future proofing for supporting attacks that consume more than 1.\n        attackRolls.ammo = { id: chatAttack.ammo.id, quantity: 1, misfire: chatAttack.ammo.misfire ?? false };\n      }\n\n      metadata.rolls.attacks[attackIndex] = attackRolls;\n    }\n\n    // Add miscellaneous metadata\n    if (this.shared.saveDC) metadata.save = { dc: this.shared.saveDC, type: this.shared.save };\n    if (this.item.type === \"spell\") metadata.spell = { cl: this.shared.rollData.cl, sl: this.shared.rollData.sl };\n\n    return metadata;\n  }\n\n  /**\n   * Executes the item's script calls.\n   *\n   * @param {\"use\"|\"postUse\"} [category=\"use\"] Script call category\n   */\n  async executeScriptCalls(category = \"use\") {\n    const shared = this.shared;\n\n    if (!(\"attackData\" in shared)) {\n      Object.defineProperty(shared, \"attackData\", {\n        get: () => {\n          foundry.utils.logCompatibilityWarning(\n            \"shared.attackData is deprecated in favor of directly accessing shared\",\n            {\n              since: \"PF1 v10\",\n              until: \"PF1 v12\",\n            }\n          );\n          return shared;\n        },\n      });\n    }\n\n    const rv = await this.item.executeScriptCalls(category, {}, shared);\n\n    if (category === \"use\") this.shared.scriptData = rv;\n  }\n\n  /**\n   * Posts the attack's chat card.\n   *\n   * @returns {Promise<ChatMessage | SharedActionData | { descriptionOnly: boolean }> }\n   */\n  async postMessage() {\n    // Old hook data + callAll\n    const hookData = {\n      ev: this.shared.event,\n      skipDialog: this.shared.skipDialog,\n      chatData: this.shared.chatData,\n      templateData: this.shared.templateData,\n      shared: this.shared,\n    };\n\n    this.shared.chatTemplate ||= \"systems/pf1/templates/chat/attack-roll.hbs\";\n    this.shared.templateData.damageTypes = pf1.registry.damageTypes.toObject();\n    if (Hooks.call(\"pf1PreDisplayActionUse\", this) === false) return;\n\n    // Show chat message\n    let result;\n    if (this.shared.chatMessage && this.shared.scriptData.hideChat !== true) {\n      const enrichOptions = {\n        rollData: this.shared.rollData,\n        secrets: this.isOwner,\n        async: true,\n        relativeTo: this.actor,\n      };\n\n      const content = await renderTemplate(this.shared.chatTemplate, this.shared.templateData);\n      this.shared.chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n      const hiddenData = this.shared.chatData[\"flags.pf1.identifiedInfo\"];\n      if (hiddenData?.description) {\n        hiddenData.description = await TextEditor.enrichHTML(hiddenData.description, enrichOptions);\n      }\n      if (hiddenData?.actionDescription) {\n        hiddenData.actionDescription = await TextEditor.enrichHTML(hiddenData.actionDescription, enrichOptions);\n      }\n\n      // Apply roll mode\n      this.shared.chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n      ChatMessage.implementation.applyRollMode(this.shared.chatData, this.shared.chatData.rollMode);\n\n      result = await ChatMessage.implementation.create(this.shared.chatData);\n\n      this.shared.message = result;\n    } else result = this.shared;\n\n    return result;\n  }\n\n  /**\n   * Collect valid targets.\n   */\n  async getTargets() {\n    // Get targets from template, and if no template is present, from explicitly targeted tokens list\n    /** @type {MeasuredTemplatePF|null} */\n    const template = this.shared.template?.object;\n    let targets = template ? await template.getTokensWithin() : null;\n    targets ??= Array.from(game.user.targets);\n    // Ignore defeated and secret tokens\n    this.shared.targets = targets.filter(\n      (t) => t.document.disposition !== CONST.TOKEN_DISPOSITIONS.SECRET && t.combatant?.isDefeated !== true\n    );\n  }\n\n  /**\n   * Armor as DR defense DC determination.\n   *\n   * @remarks\n   * - Does not account for critical feats.\n   * - Does not account for size difference between target and attacker.\n   *\n   * @param attack\n   * @returns {RollPF} - Defense DC\n   */\n  getDefenseDC(attack) {\n    const parts = this._getDefenseDCParts(attack);\n    return RollPF.safeRollSync(parts.join(\" + \"));\n  }\n\n  _getDefenseDCParts(attack) {\n    const parts = [];\n\n    // Determine check\n    const check = attack.d20.total;\n    parts.push(`${check}[${game.i18n.localize(\"PF1.Rolls.Check.Label\")}]`);\n\n    // Locate used BAB (accounts for overrides)\n    const babIdent = game.i18n.localize(\"PF1.BAB\");\n    const bab = attack.terms.find((t) => t.flavor === babIdent)?.number ?? 0;\n    parts.push(`${Math.floor(bab / 2)}[${game.i18n.localize(\"PF1.HalfBAB\")}]`);\n\n    return parts;\n  }\n\n  prepareChargeCost() {\n    const rollData = this.shared.rollData;\n\n    // Determine charge cost\n    const baseCost = this.shared.action.getChargeCost({ rollData });\n\n    // Bonus cost, e.g. from a conditional modifier\n    const bonusCost = this.shared.rollData.chargeCostBonus ?? 0;\n\n    let cost = baseCost + bonusCost;\n\n    // Override cost\n    if (this.shared.cost !== null) cost = this.shared.cost;\n\n    // Save chargeCost as rollData entry for anything else\n    this.shared.rollData.chargeCost = cost;\n  }\n\n  /**\n   * Process everything\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.skipDialog=false] - Skip dialog\n   * @returns {Promise<ChatMessage|SharedActionData|void>}\n   */\n  async process({ skipDialog = false } = {}) {\n    const shared = this.shared;\n\n    // Check requirements for item\n    let reqErr = await this.checkRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    await this.autoSelectAmmo();\n\n    // Get new roll data\n    shared.rollData = this.getRollData();\n\n    // let modules modify the ActionUse before attacks are rolled\n    Hooks.callAll(\"pf1CreateActionUse\", this);\n\n    // Generate default attacks\n    shared.fullAttack = true;\n    await this.generateAttacks(true);\n\n    let form;\n    // Show attack dialog, if appropriate\n    if (!skipDialog) {\n      form = await this.createAttackDialog();\n      // Stop if result is not an object (i.e. when closed is clicked on the dialog)\n      if (!form) return;\n    }\n\n    // Save form data in case modules want to reference it later\n    this.formData = form ?? {};\n\n    // Alter roll data\n    await this.alterRollData(form);\n\n    // Filter out attacks without ammo usage (out of ammo)\n    if (shared.action.ammoType) {\n      shared.attacks = shared.attacks.filter((o) => o.hasAmmo);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.AmmoDepleted\"));\n        return;\n      }\n    }\n\n    // Limit attacks to 1 if not full rounding\n    if (!shared.fullAttack) shared.attacks = shared.attacks.slice(0, 1);\n    // Handle conditionals\n    await this.handleConditionals();\n\n    // Prepare charge cost\n    this.prepareChargeCost();\n\n    // Filter out attacks without charge usage (out of charges)\n    if (shared.rollData.chargeCost != 0 && this.shared.action.data.uses?.perAttack) {\n      const cost = shared.rollData.chargeCost;\n      const charges = shared.item.charges;\n\n      shared.attacks.forEach((atk, index) => {\n        if (charges >= (index + 1) * cost) atk.chargeCost = cost;\n        else atk.chargeCost = null;\n      });\n\n      shared.attacks = shared.attacks.filter((o) => o.chargeCost !== null);\n      if (shared.attacks.length === 0) {\n        ui.notifications.error(game.i18n.localize(\"PF1.ChargesDepleted\"));\n        return;\n      }\n    }\n\n    // Check attack requirements, post-dialog\n    reqErr = await this.checkAttackRequirements();\n    if (reqErr > 0) return { err: pf1.actionUse.ERR_REQUIREMENT, code: reqErr };\n\n    // Generate chat attacks\n    await this.generateChatAttacks();\n\n    // Prompt measure template\n    let measureResult;\n    if (shared.useMeasureTemplate && canvas.scene) {\n      measureResult = await this.promptMeasureTemplate();\n      if (!measureResult.result) return;\n    }\n\n    // Call itemUse hook and determine whether the item can be used based off that\n    if (Hooks.call(\"pf1PreActionUse\", this) === false) {\n      await measureResult?.delete();\n      return;\n    }\n\n    await this.getTargets();\n\n    // Call script calls\n    await this.executeScriptCalls();\n    if (shared.scriptData?.reject) {\n      await measureResult?.delete();\n      return;\n    }\n\n    const premessage_promises = [];\n    // Handle Dice So Nice\n    premessage_promises.push(this.handleDiceSoNice());\n\n    // Subtract uses\n    const ammoCost = this.action.ammoCost;\n    if (ammoCost != 0) premessage_promises.push(this.subtractAmmo(ammoCost));\n\n    let totalCost = shared.rollData?.chargeCost;\n    if (this.action.data.uses.perAttack) {\n      totalCost = this.shared.attacks.reduce((total, atk) => total + atk.chargeCost, 0);\n    }\n    if (totalCost != 0) {\n      shared.totalChargeCost = totalCost;\n      premessage_promises.push(this.item.addCharges(-totalCost));\n    }\n\n    if (shared.action.isSelfCharged)\n      premessage_promises.push(shared.action.update({ \"uses.self.value\": shared.action.data.uses.self.value - 1 }));\n\n    await Promise.all(premessage_promises);\n\n    // Update remaining ammo for chat message display\n    this.updateAmmoUsage();\n\n    // Retrieve message data\n    await this.getMessageData();\n\n    // Post message\n    let result = Promise.resolve();\n    if (shared.scriptData?.hideChat !== true) {\n      result = this.postMessage();\n    }\n\n    // Deselect targets\n    if (game.settings.get(\"pf1\", \"clearTargetsAfterAttack\") && game.user.targets.size) {\n      game.user.updateTokenTargets([]);\n      // Above does not communicate targets to other users, so..\n      game.user.broadcastActivity({ targets: [] });\n    }\n\n    // Wait for chat message to be created before continuing\n    await result;\n\n    // Call post-use script calls\n    await this.executeScriptCalls(\"postUse\");\n\n    Hooks.callAll(\"pf1PostActionUse\", this, result instanceof pf1.documents.ChatMessagePF ? result : null);\n\n    return result;\n  }\n}\n\nexport class ActionUseAttack {\n  /** @type {string|null} */\n  type;\n\n  /** @type {string} */\n  label;\n\n  /** @type {string} */\n  attackBonus;\n\n  /** @type {boolean} */\n  abstract;\n\n  /** @type {AttackAmmo|null} */\n  ammo = null;\n\n  /** @type {number} */\n  chargeCost = null;\n\n  /** @type {ChatAttack} */\n  chatAttack = null;\n\n  /** @type {boolean} */\n  get hasAmmo() {\n    return !!this.ammo;\n  }\n\n  constructor(label, bonus = \"\", ammo = null, { abstract = false, type = null } = {}) {\n    this.label = label;\n    this.attackBonus = bonus;\n    this.ammo = ammo;\n    this.abstract = abstract ?? false;\n    this.type = type;\n  }\n}\n\n/**\n * @typedef {object} ItemAttack_Dialog_Result\n * @property {boolean} fullAttack - Whether it's a full attack (true) or a single attack (false)\n * @property {JQuery} html - The html containing user input and selections.\n */\n\n/**\n * @typedef {object} AttackAmmo\n * @property {string} id - Ammo item ID\n * @property {number} quantity - Quantity of ammo\n * @property {boolean} abundant - Is abundant?\n * @property {object} data - Ammo document data\n * @property {Item} document - Ammo document\n * @property {boolean} isDefault - Is this default ammo for the item?\n */\n","import { ItemBasePF } from \"./item-base.mjs\";\nimport { keepUpdateArray } from \"../../utils/lib.mjs\";\nimport { ItemChange } from \"../../components/change.mjs\";\nimport { ItemAction } from \"../../components/action.mjs\";\nimport { getHighestChanges } from \"../actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\nimport { ActionUse } from \"@actionUse/action-use.mjs\";\nimport { getSkipActionPrompt } from \"../settings.mjs\";\n\n/**\n * Override and extend the basic :class:`Item` implementation\n */\nexport class ItemPF extends ItemBasePF {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * An object containing links to other items.\n     *\n     * @type {Record<string, ItemPF>}\n     */\n    this.links ??= {};\n\n    if (Array.isArray(this.system.actions)) {\n      /**\n       * A {@link Collection} of {@link ItemAction}s.\n       *\n       * @type {Collection<ItemAction>}\n       */\n      this.actions ??= new Collection();\n    }\n  }\n\n  /**\n   * A static object holding system-specific metadata applicable to all instances of this Document class.\n   *\n   * @internal\n   */\n  static system = Object.freeze({\n    /**\n     * Whether this item is a physical one, possessing properties like quantity or weight.\n     *\n     * @type {boolean}\n     */\n    isPhysical: false,\n    /**\n     * Whether this item receives an identifier.\n     */\n    hasIdentifier: true,\n    /**\n     * Whether this item has changes and change flags.\n     */\n    hasChanges: true,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} [itemData]\n   * @returns {object}\n   */\n  static getDefaultArtwork(itemData) {\n    const result = super.getDefaultArtwork(itemData);\n    const image = pf1.config.defaultIcons.items[itemData?.type];\n    if (image) result.img = image;\n    return result;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Ensure unique Change IDs\n    const actor = this.actor;\n    if (actor && data?.system?.changes?.length > 0) {\n      const changes = data.system.changes;\n\n      let ids = new Set();\n      while (ids.size < changes.length) ids.add(foundry.utils.randomID(8));\n      ids = Array.from(ids);\n      for (const c of changes) c._id = ids.pop();\n      this.updateSource({ \"system.changes\": changes });\n    }\n\n    const updates = this.preCreateData(data, context, user);\n\n    if (Object.keys(updates).length) this.updateSource(updates);\n  }\n\n  /**\n   * Meant to be overridden.\n   *\n   * {@inheritDoc _preCreate}\n   *\n   * @param data\n   * @param options\n   * @param user\n   * @returns {object} Update data to replace with.\n   */\n  preCreateData(data, options, user) {\n    return {};\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    const actor = this.actor;\n    if (userId !== game.user.id) return;\n\n    if (this.isActive) {\n      // Simulate toggling a feature or buff on\n      if ([\"buff\", \"feat\"].includes(this.type)) {\n        this.executeScriptCalls(\"toggle\", { state: true });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    // No system data changes\n    if (!changed.system) return;\n\n    this._preUpdateNumericValueGuard(changed.system);\n\n    // Make sure stuff remains an array\n    const keepPaths = [\n      \"system.attackNotes\",\n      \"system.effectNotes\",\n      \"system.contextNotes\",\n      \"system.scriptCalls\",\n      \"system.actions\",\n      \"system.changes\",\n    ];\n\n    const itemData = this.toObject();\n    for (const path of keepPaths) {\n      keepUpdateArray(itemData, changed, path);\n    }\n\n    await this._chargePreUpdate(changed, context);\n  }\n\n  // Fake DataModel-like behaviour\n  // Ensure numeric bits remain numbers\n  _preUpdateNumericValueGuard(system) {\n    // Nothing to do here\n  }\n\n  /**\n   * Handle charge update sanity checking, constraining them to reasonable values,\n   *   and propagating to parent items if charges are shared.\n   *\n   * @private\n   * @param {object} changed\n   * @param {object} context\n   */\n  async _chargePreUpdate(changed, context) {\n    // Make sure charges doesn't exceed max charges\n    const uses = changed.system.uses;\n    if (uses?.value && this.isCharged) {\n      const maxCharges = this.maxCharges;\n      if (uses.value > maxCharges) uses.value = maxCharges;\n\n      const link = this.links.charges;\n      if (link) {\n        // Update charges for linked item. This will cascade if items are linked more.\n        await link.update({ \"system.uses.value\": uses.value }, context);\n        // Remove updating current item's inherited value\n        delete changed.system.uses.value;\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Remove special charge sharing links that don't clear on their own\n    const links = this.getLinkedItemsSync(\"charges\");\n    if (links.length) {\n      for (const link of links) {\n        if (link.links?.charges) {\n          delete link.links.charges;\n          link.reset();\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns {string[]} The keys of data variables to memorize between updates, for e.g. determining the difference in update.\n   */\n  get memoryVariables() {\n    return [\"quantity\", \"level\"];\n  }\n\n  /**\n   * Whether this item is physical.\n   *\n   * @type {boolean}\n   */\n  static get isPhysical() {\n    return this.system.isPhysical;\n  }\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get isPhysical() {\n    return this.constructor.isPhysical;\n  }\n\n  static get hasChanges() {\n    return this.system.hasChanges;\n  }\n  /** {@inheritDoc ItemPF.isPhysical:getter} */\n  get hasChanges() {\n    return this.constructor.hasChanges;\n  }\n\n  /**\n   * The item's subtype, or `null` if the item has no subtype\n   *\n   * @type {string|null}\n   */\n  get subType() {\n    return this.system.subType ?? null;\n  }\n\n  /**\n   * The item's material.\n   *\n   * @type {string|null}\n   */\n  get normalMaterial() {\n    if (this.type === \"equipment\") return this.system.armor?.material?.normal.value || null;\n    else return this.system.material?.normal.value || null;\n  }\n\n  /**\n   * The item's material addons.\n   *\n   * @type {string[]}\n   */\n  get addonMaterial() {\n    if (this.type === \"equipment\") return this.system.armor?.material?.addon?.filter((o) => o ?? false) ?? [];\n    else return this.system.material?.addon?.filter((o) => o ?? false) ?? [];\n  }\n\n  /**\n   * The item's alignment attributes, or `null` if the item has no alignment attributes\n   *\n   * @type {string|null}\n   */\n  get alignments() {\n    return this.system.alignments ?? null;\n  }\n\n  /**\n   * @deprecated\n   * @type {pf1.components.ItemAction|undefined}\n   */\n  get firstAction() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.firstAction is deprecated in favor of ItemPF.defaultAction\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v12\",\n    });\n    return this.defaultAction;\n  }\n\n  /** @type {pf1.components.ItemAction|undefined} */\n  get defaultAction() {\n    return this.actions?.get(this.system.actions?.[0]?._id);\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have an attack, see {@link ItemAction#hasAttack}.\n   *\n   * @type {boolean}\n   */\n  get hasAttack() {\n    return this.actions?.some((o) => o.hasAttack) ?? false;\n  }\n\n  /**\n   * Returns `true` if any of this item's actions have a damage roll, see {@link ItemAction#hasDamage}.\n   *\n   * @type {boolean}\n   */\n  get hasDamage() {\n    return this.actions?.some((o) => o.hasDamage) ?? false;\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Properties                             */\n  /* -------------------------------------------- */\n\n  /**\n   * @abstract\n   * @param {boolean} [weapon=true] - Get proficiency as a weapon. Armor otherwise.\n   * @returns {boolean} - Whether or not the owner of the item is proficient.\n   * @throws {Error} - If item type does not support proficiency.\n   * @since PF1 v10\n   */\n  getProficiency(weapon = true) {\n    throw new Error(`Item type ${this.type} has no concept of proficiency`);\n  }\n\n  /**\n   * @abstract\n   * @type {boolean} - Is proficient using this as weapon.\n   * @since PF1 v10\n   */\n  get isProficient() {\n    return true;\n  }\n\n  get isOwned() {\n    return super.isOwned || this.parentItem != null;\n  }\n\n  get hasAction() {\n    return this.system.actions?.length > 0;\n  }\n\n  get isSingleUse() {\n    return this.system.uses?.per === \"single\";\n  }\n\n  get isCharged() {\n    return this.isSingleUse || [\"round\", \"day\", \"week\", \"charges\"].includes(this.system.uses?.per);\n  }\n\n  /** @type {boolean} Does the item has finite number of charges */\n  get hasFiniteCharges() {\n    return this.isSingleUse || [\"charges\"].includes(this.system.uses?.per);\n  }\n\n  /** @type {number} Remaining charges */\n  get charges() {\n    // No actor? No charges!\n    if (!this.actor) return 0;\n\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.charges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n    return this.system.uses?.value ?? 0;\n  }\n\n  /**\n   * @type {boolean} True if default charge cost is non-zero\n   */\n  get autoDeductCharges() {\n    return this.getDefaultChargeCost() != 0;\n  }\n\n  /**\n   * Get default charge cost for all actions.\n   *\n   * @param {object} [options] Additional options\n   * @param {object} [options.rollData] Roll data instance\n   * @returns {number} Number for default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    rollData ??= this.getRollData();\n    const formula = this.getDefaultChargeFormula();\n    return RollPF.safeRollAsync(formula, rollData).total;\n  }\n\n  /**\n   * Default charge formula.\n   *\n   * @returns {string} Charge formula\n   */\n  getDefaultChargeFormula() {\n    return this.system.uses?.autoDeductChargesCost || \"1\";\n  }\n\n  /**\n   * @type {number} Maximum charges the item can have.\n   */\n  get maxCharges() {\n    // Get linked charges\n    const link = this.links?.charges;\n    if (link) return link.maxCharges;\n\n    if (!this.system.uses?.per) return Infinity;\n\n    // Get own charges\n    if (this.isSingleUse) return this.system.quantity || 0;\n\n    return this.system.uses?.max ?? 0;\n  }\n\n  /**\n   * Recharges item's uses, if any.\n   *\n   * @param {object} options Options\n   * @param {\"round\"|\"day\"|\"week\"|\"any\"} [options.period=\"day\"] Recharge period. Use \"any\" to ignore item's configuration.\n   * @param {boolean} [options.exact=false] Use exact time period. Otherwise \"week\" for example will also recharge items with \"day\" period.\n   * @param {number} [options.value] Recharge to specific value, respecting maximum and minimum bounds.\n   * @param {boolean} [options.maximize=false] Recharge to full regardless of recharge formula.\n   * @param {boolean} [options.commit=true] Commit update directly. If false, returns the update data instead.\n   * @param {object} [options.rollData] Roll data instance to use for formulas.\n   * @param {object} [options.context] Update context\n   * @returns {Promise<this|object|undefined>} Promise for the update, update data object, or undefined (no update needed).\n   */\n  async recharge({ value, period = \"day\", exact = false, maximize = false, commit = true, rollData, context } = {}) {\n    const uses = this.system.uses ?? {};\n    if (!uses.per) return; // Unlimited uses, recharging meaningless\n\n    // Cancel if charges are managed by different item.\n    if (this.links.charges) return;\n\n    // No update when period does not match usage\n    if ([\"charges\", \"single\"].includes(uses.per)) {\n      // Only charge if time period is any\n      if (period !== \"any\") return;\n    } else if (pf1.config.limitedUsePeriodOrder.includes(period) && !exact) {\n      // Recharge lesser time periods when using inexact matching\n      const idx = pf1.config.limitedUsePeriodOrder.indexOf(period);\n      const validPeriods = pf1.config.limitedUsePeriodOrder.slice(0, idx + 1);\n      if (!validPeriods.includes(uses.per)) return;\n    }\n    // Otherwise test if \"any\" period is used\n    else if (uses.per !== period && period !== \"any\") return;\n\n    const staticValue = value !== undefined;\n\n    // No specific value given\n    if (!staticValue) {\n      const formula = uses.rechargeFormula || \"\";\n      // Default to maximizing value\n      if (!formula) maximize = true;\n      else {\n        rollData ??= this.getRollData();\n        const roll = await RollPF.safeRollAsync(formula, rollData, \"recharge\");\n        value = roll.total;\n\n        // Cancel if formula produced invalid value\n        if (!Number.isFinite(value))\n          return void console.warn(`Formula \"${formula}\" produced non-numeric value \"${value}\"`);\n      }\n    }\n\n    // Maximize value regardless what value is\n    if (maximize) value = uses.max;\n\n    // Clamp charge value to\n    value = Math.clamped(value, 0, uses.max);\n\n    // Cancel pointless update\n    if (value === uses.value) return;\n\n    const updateData = { system: { uses: { value } } };\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /**\n   * @type {number} Number from 0 to 4. 0 for no aura and 1-4 matching PF1.auraStrengths.\n   */\n  get auraStrength() {\n    const cl = this.system.cl || 0;\n    if (cl < 1) {\n      return 0;\n    } else if (cl < 6) {\n      return 1;\n    } else if (cl < 12) {\n      return 2;\n    } else if (cl < 21) {\n      return 3;\n    }\n    return 4;\n  }\n\n  /**\n   * @type {ActorPF|null} Parent actor\n   * @deprecated Use {@link actor instead}\n   */\n  get parentActor() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.parentActor is deprecated in favor of Item.actor\", {\n      since: \"PF1 v9\",\n      until: \"PF1 v11\",\n    });\n\n    return this.actor;\n  }\n\n  get limited() {\n    if (this.parentItem) return this.parentItem.limited;\n    return super.limited;\n  }\n\n  get uuid() {\n    if (this.parentItem) this.parentItem.uuid + `.Item.${this.id}`;\n    return super.uuid;\n  }\n\n  testUserPermission(user, permission, { exact = false } = {}) {\n    if (this.isEmbedded) return this.parent.testUserPermission(user, permission, { exact });\n    if (this.parentItem) return this.parentItem.testUserPermission(user, permission, { exact });\n    return super.testUserPermission(user, permission, { exact });\n  }\n\n  get permission() {\n    if (this.actor) return this.actor.permission;\n    return super.permission;\n  }\n\n  get fullDescription() {\n    return this.system.description.value;\n  }\n\n  /**\n   * Get full description.\n   *\n   * @param {object} options - Item type dependant options for rendering the description.\n   * @param {boolean} [options.chatcard=false] - Instruct template to render chat card in mind.\n   * @param {object} [options.data={}] - Template data for rendering\n   * @param {object} [options.rollData] - Roll data for transforming description\n   * @param {boolean} [options.header] - Include header if such exists.\n   * @param {boolean} [options.body] - Include main description body if such exists.\n   * @returns {string} - Full description.\n   */\n  getDescription({ chatcard = false, data = {}, rollData, header = true, body = true } = {}) {\n    if (body) return this.system.description.value;\n    return \"\";\n  }\n\n  /**\n   * @returns {ActiveEffect} An active effect associated with this item.\n   */\n  get effect() {\n    return this.actor.effects.find((effect) => {\n      if (!effect.origin) return false;\n      // BUG: If origin is from another actor (duplicated actor), this can cause false positives/negatives.\n      return /\\.Item\\.(?<itemId>[^.]+)/.exec(effect.origin)?.groups.itemId === this.id;\n    });\n  }\n\n  /**\n   * An array containing all action types from this item's actions.\n   *\n   * @see {@link config.itemActionTypes}\n   * @type {string[]}\n   */\n  get actionTypes() {\n    const actionTypes = this.actions?.map((action) => action.data.actionType).filter(Boolean) ?? [];\n    return [...new Set(actionTypes)];\n  }\n\n  static get defaultContextNote() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF#defaultContextNote is deprecated in favor of pf1.components.ContextNote\",\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return new pf1.components.ContextNote().toObject();\n  }\n\n  /**\n   * Generic charge addition (or subtraction) function that either adds charges\n   * or quantity, based on item data.\n   *\n   * @param {number} value The amount of charges to add.\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible.\n   */\n  async addCharges(value) {\n    // Add link charges\n    const link = this.links.charges;\n    if (link) return link.addCharges(value);\n\n    // Add own charges\n    if (this.isSingleUse && this.isPhysical) {\n      return this.update({ \"system.quantity\": (this.system.quantity || 0) + value });\n    } else {\n      return this.update({ \"system.uses.value\": (this.system.uses?.value || 0) + value });\n    }\n  }\n\n  /**\n   * Linked ammunition item if any.\n   *\n   * @type {Item|undefined}\n   */\n  get defaultAmmo() {\n    const ammoId = this.getFlag(\"pf1\", \"defaultAmmo\");\n    return this.actor?.items.get(ammoId);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Should the item show unidentified data\n   *\n   * @type {boolean}\n   */\n  get showUnidentifiedData() {\n    return false;\n  }\n\n  /* -------------------------------------------- */\n  /*\tData Preparation\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this.prepareLinks();\n\n    const itemData = this.system;\n\n    // Update changes\n    if (this.hasChanges) {\n      this._prepareChanges();\n    }\n\n    this._prepareScriptCalls();\n\n    const wgroups = this.system.weaponGroups;\n    if (wgroups) {\n      wgroups.value ??= [];\n      wgroups.custom ??= [];\n      wgroups.total = new Set([...wgroups.value.map((g) => pf1.config.weaponGroups[g] || g), ...wgroups.custom]);\n    }\n\n    // Prepare dependent data only if there's no actor or actor initialization has happened.\n    if (!this.actor || this.actor._initialized !== false) {\n      this._prepareDependentData(true);\n    }\n  }\n\n  /**\n   * Prepare data potentially dependent on other items.\n   *\n   * @param {boolean} final - Is this final call to this?\n   */\n  _prepareDependentData(final = false) {\n    // Update maximum uses\n    this._updateMaxUses();\n\n    // Prepare actions only when item preparation is deemed finalized\n    if (final) this._prepareActions();\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n    this._prepareIdentifier();\n\n    if (this.inContainer) this.adjustContained();\n\n    if (this.system.contextNotes?.length) {\n      this.system.contextNotes = this.system.contextNotes.map(\n        (cn) => new pf1.components.ContextNote(cn, { parent: this })\n      );\n    }\n  }\n\n  /**\n   * Initialize identifier\n   */\n  _prepareIdentifier() {\n    const isTaggedType = this.constructor.system?.hasIdentifier ?? false;\n    if (isTaggedType) {\n      if (!this.system.tag) {\n        this.system.tag = pf1.utils.createTag(this.name);\n      }\n    }\n  }\n\n  /**\n   * Adjust data if the item is in container.\n   *\n   * @abstract\n   */\n  adjustContained() {}\n\n  /**\n   * Returns labels for this item\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.actionId] - ID of one of this item's actions to get labels for; defaults to first action\n   * @param {object} [options.rollData] - Roll data to use.\n   * @returns {Record<string, string>} This item's labels\n   */\n  getLabels({ actionId, rollData } = {}) {\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n    return {\n      activation: pf1.config.abilityActivationTypes.passive, // Default passive if no action is present\n      ...(action?.getLabels({ rollData }) ?? {}),\n    };\n  }\n\n  prepareLinks() {\n    if (!this.links) return;\n\n    for (const [type, item] of Object.entries(this.links)) {\n      if (type === \"charges\") {\n        // Remove cached link if stale\n        // TODO: This should not exist.\n        const links = item.getLinkedItemsSync(\"charges\");\n        if (!links.some((i) => i.id === this.id)) {\n          delete this.links.charges;\n          continue;\n        }\n\n        this._updateInheritedCharges(item);\n      }\n    }\n  }\n\n  _prepareChanges() {\n    const prior = this.changes;\n    const collection = new Collection();\n    for (const c of this.system.changes ?? []) {\n      let change = null;\n      if (prior && prior.has(c._id)) {\n        change = prior.get(c._id);\n        const updateData = { ...c };\n        change.updateSource(updateData, { recursive: false });\n        change.prepareData();\n      } else change = new pf1.components.ItemChange(c, { parent: this });\n      collection.set(c._id || change.data._id, change);\n    }\n\n    this.changes = collection;\n  }\n\n  _prepareActions() {\n    const actions = this.system.actions ?? [];\n\n    const prior = this.actions;\n    const collection = new Collection();\n    for (const o of actions) {\n      let action = null;\n      if (prior && prior.has(o._id)) {\n        action = prior.get(o._id);\n        action.data = foundry.utils.mergeObject(ItemAction.defaultData, o);\n        action.prepareData();\n      } else action = new pf1.components.ItemAction(o, this);\n      collection.set(o._id || action.data._id, action);\n    }\n\n    /** @type {Map<string, pf1.components.ItemAction>} */\n    this.actions = collection;\n\n    for (const action of prior ?? []) {\n      if (this.actions.get(action.id) !== action) {\n        Object.values(action.apps).forEach((app) =>\n          app.close({ pf1: { action: \"delete\" }, submit: false, force: true })\n        );\n      }\n    }\n  }\n\n  /**\n   * Prepare `ItemPF.scriptCalls` collection.\n   *\n   * @internal\n   */\n  _prepareScriptCalls() {\n    const scriptCalls = this.system.scriptCalls;\n    if (!scriptCalls) return;\n\n    // TODO: Remove constant re-creation of the collection to retain the reference.\n    const prior = this.scriptCalls;\n    const collection = new Collection();\n    for (const s of scriptCalls) {\n      const sid = s._id;\n      let scriptCall = prior?.get(sid);\n      if (scriptCall) scriptCall.data = s;\n      else scriptCall = new pf1.components.ItemScriptCall(s, this);\n\n      collection.set(sid, scriptCall);\n    }\n\n    /** @type {Collection<string,pf1.components.ItemScriptCall>} */\n    this.scriptCalls = collection;\n  }\n\n  /**\n   * Executes all script calls on this item of a specified category.\n   *\n   * @param {string} category - The category of script calls to call.\n   * @param {Object<string, object>} [extraParams={}] - A dictionary of extra parameters to pass as variables for use in the script.\n   * @param {object} [shared={}] - Shared data object\n   * @returns {Promise.<object>} The shared object between calls which may have been given data.\n   */\n  async executeScriptCalls(category, extraParams = {}, shared = {}) {\n    /** @type {pf1.components.ItemScriptCall[]} */\n    const scripts = this.scriptCalls?.filter((o) => o.category === category) ?? [];\n\n    shared.category = category;\n\n    try {\n      for (const s of scripts) {\n        await s.execute(shared, extraParams);\n      }\n    } catch (error) {\n      console.error(`Script call execution failed\\n`, error, this);\n      // Rethrow to ensure everything cancels\n      throw new Error(\"Error occurred while executing a script call\", { cause: error });\n    }\n\n    return shared;\n  }\n\n  async update(data, context = {}) {\n    // Avoid regular update flow for explicitly non-recursive update calls\n    if (context.recursive === false) {\n      if (this.inContainer) {\n        this.rootItem.update(this._transformContainerUpdateData(data, { recursive: true }), context);\n      } else {\n        return super.update(data, context);\n      }\n    }\n\n    data = foundry.utils.expandObject(data);\n\n    this.memorizeVariables();\n\n    const parentItem = this.parentItem;\n    if (!parentItem) {\n      return super.update(data, context);\n    } else {\n      // Update parent item\n      context.pf1 ??= {};\n      context.pf1.containerItem = this.id;\n      await parentItem.update(this._transformContainerUpdateData(data), context);\n      return this;\n    }\n  }\n\n  /**\n   * Transform given data so it becomes valid update data within parent item.\n   *\n   * This can, for example, be used to generate batched update to the real item.\n   *\n   * @example\n   * ```js\n   * _transformContainerUpdateData({ name: \"new name\" })\n   * // => { system: { items: { [itemID]: { name: \"new name\" } } } }\n   * ```\n   * @internal\n   * @param {object} data Update data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.recursive=false] - Create data recursively, meant for the real item document.\n   * @returns {object} - Transformed update data\n   */\n  _transformContainerUpdateData(data, { recursive = false } = {}) {\n    const parentItem = this.parentItem;\n    if (parentItem) {\n      const baseUpdate = { system: { items: { [this.id]: data } } };\n      if (recursive) return parentItem._transformContainerUpdateData(baseUpdate, { recursive });\n      else return baseUpdate;\n    }\n    return data;\n  }\n\n  memorizeVariables() {\n    if (this._memoryVariables != null) return;\n\n    const memKeys = this.memoryVariables;\n    this._memoryVariables = {};\n    for (const k of memKeys) {\n      if (foundry.utils.hasProperty(this.system, k)) {\n        this._memoryVariables[k] = foundry.utils.deepClone(foundry.utils.getProperty(this.system, k));\n      }\n    }\n\n    // Memorize variables recursively on container items\n    for (const item of this.items ?? []) {\n      item.memorizeVariables();\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (userId === game.user.id) {\n      // Call 'toggle' script calls\n      {\n        let state = null;\n        if (this.type === \"buff\") state = changed.system?.active;\n        else if (this.type === \"feat\" && changed.system?.disabled !== undefined)\n          state = changed.system.disabled === true ? false : true;\n        if (state != null) {\n          const startTime = this.effect?.duration.startTime ?? game.time.worldTime;\n          this.executeScriptCalls(\"toggle\", { state, startTime });\n        }\n      }\n\n      // Call 'changeLevel' script calls\n      const oldLevel = this._memoryVariables?.level;\n      if (oldLevel !== undefined && changed.system?.level !== undefined) {\n        const level = {\n          previous: parseInt(oldLevel),\n          new: parseInt(this.system.level),\n        };\n        for (const [k, v] of Object.entries(level)) {\n          if (Number.isNaN(v)) level[k] = null;\n        }\n        if (level.new !== undefined && level.new !== level.previous) {\n          this.executeScriptCalls(\"changeLevel\", { level });\n        }\n      }\n    }\n\n    // Forget memory variables\n    this._memoryVariables = null;\n  }\n\n  _updateMaxUses() {\n    const per = this.system.uses?.per;\n\n    // No charges? No charges!\n    if (!per) return;\n\n    // Do not evaluate inherited charges\n    if (this.links?.charges) return;\n\n    const maxFormula = this.system.uses.maxFormula;\n    if (per === \"single\") {\n      this.system.uses.max = 1;\n    } else if (!maxFormula) {\n      this.system.uses.max = 0;\n    } else {\n      try {\n        const isDeterministic = Roll.parse(maxFormula).every((t) => t.isDeterministic);\n        if (isDeterministic) {\n          const rollData = this.getRollData();\n          const roll = RollPF.safeRollSync(\n            maxFormula,\n            rollData,\n            { formula: maxFormula, item: this },\n            { suppressError: !this.isOwner }\n          );\n          this.system.uses.max = roll.total;\n\n          // Update any items inheriting our charges\n          const linked = this.getLinkedItemsSync(\"charges\");\n          linked.forEach((item) => item._updateInheritedCharges(this));\n        } else {\n          const msg = game.i18n.format(\"PF1.Warning.NoDiceAllowedInFormula\", {\n            formula: maxFormula,\n            context: game.i18n.localize(\"PF1.ChargePlural\"),\n          });\n          ui.notifications.warn(msg, { console: false });\n          console.warn(msg, this);\n        }\n      } catch (err) {\n        console.error(\"Invalid max uses formula:\", { formula: maxFormula, item: this }, err);\n      }\n    }\n  }\n\n  _updateInheritedCharges(item) {\n    const iuses = item.system.uses;\n    if (!iuses) return;\n\n    const uses = this.system.uses;\n\n    uses.per = iuses.per;\n    uses.max = iuses.max;\n    uses.maxFormula = iuses.maxFormula;\n    uses.value = iuses.value;\n    uses.rechargeFormula = iuses.rechargeFormula;\n  }\n\n  /**\n   * Determines the starting data for an ActiveEffect based off this item.\n   */\n  async getRawEffectData() {\n    return {\n      name: this.name,\n      icon: this.img,\n      origin: this.getRelativeUUID(this.actor),\n      duration: {\n        startTime: game.time.worldTime,\n      },\n      disabled: !this.isActive,\n    };\n  }\n\n  /**\n   * Fetches all this item's script calls of a specified category\n   *\n   * @internal\n   * @param {string} category\n   * @returns {pf1.components.ItemScriptCall[]}\n   */\n  getScriptCalls(category) {\n    return this.scriptCalls?.filter((s) => s.category === category) ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Display the chat card for an Item as a message in chat\n   *\n   * @param {object} [altChatData={}] - Optional data that will be merged into the chat data object.\n   * @param {object} [options=[]] Additional options.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   * @returns {Promise<ChatMessage | void>} Chat message instance if one was created.\n   */\n  async displayCard(altChatData = {}, { token } = {}) {\n    const actor = this.actor;\n    if (actor && !actor.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: actor.name }));\n    }\n\n    // Basic template rendering data\n    token ??= actor?.token;\n    const rollData = this.getRollData();\n    const itemChatData = await this.getChatData({ rollData });\n    const identified = Boolean(rollData.item?.identified ?? true);\n\n    const templateData = {\n      actor: this.actor,\n      token,\n      tokenId: token?.uuid,\n      item: this.toObject(),\n      labels: this.getLabels({ rollData }),\n      hasAttack: this.hasAttack,\n      hasMultiAttack: this.hasMultiAttack,\n      hasAction: this.hasAction,\n      isVersatile: this.isVersatile,\n      isSpell: this.type === \"spell\",\n      name: this.getName(true),\n      description: identified ? itemChatData.identifiedDescription : itemChatData.unidentifiedDescription,\n      rollData,\n      hasExtraProperties: false,\n      extraProperties: [],\n    };\n\n    const pfFlags = {};\n\n    const enrichOptions = {\n      rollData,\n      secrets: this.isOwner,\n      async: true,\n      relativeTo: this.actor,\n    };\n\n    // If the item is unidentified, store data for GM info box containing identified info\n    if (identified === false) {\n      pfFlags.identifiedInfo = {\n        identified,\n        name: this._source.name,\n        description: await TextEditor.enrichHTML(itemChatData.identifiedDescription, enrichOptions),\n      };\n    }\n\n    // Add combat info\n    if (game.combat) {\n      const combatProps = [];\n      // Add round info\n      combatProps.push(game.i18n.format(\"PF1.CombatInfo_Round\", { round: game.combat.round }));\n\n      if (combatProps.length > 0) {\n        templateData.extraProperties.push({\n          header: game.i18n.localize(\"PF1.CombatInfo_Header\"),\n          value: combatProps,\n          css: \"combat-properties\",\n        });\n        templateData.hasExtraProperties = true;\n      }\n    }\n\n    // Render the chat card template\n    const templateType = [\"consumable\"].includes(this.type) ? this.type : \"item\";\n    const template = `systems/pf1/templates/chat/${templateType}-card.hbs`;\n\n    // Determine metadata\n    pfFlags.metadata = {};\n    pfFlags.metadata.item = this.id;\n\n    // Basic chat message data\n    const chatData = foundry.utils.mergeObject(\n      {\n        type: CONST.CHAT_MESSAGE_TYPES.OTHER,\n        speaker: ChatMessage.implementation.getSpeaker({ actor, token, alias: token?.name }),\n        flags: {\n          core: {\n            canPopout: true,\n          },\n          pf1: pfFlags,\n        },\n      },\n      altChatData\n    );\n\n    if (Hooks.call(\"pf1DisplayCard\", this, { template, templateData, chatData }) === false) return;\n\n    // Create the chat message\n    const content = await renderTemplate(template, templateData);\n    chatData.content = await TextEditor.enrichHTML(content, enrichOptions);\n\n    // Apply roll mode\n    chatData.rollMode ??= game.settings.get(\"core\", \"rollMode\");\n    ChatMessage.implementation.applyRollMode(chatData, chatData.rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /* -------------------------------------------- */\n  /*  Chat Cards\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n  /* -------------------------------------------- */\n\n  /**\n   * Generates {@link ChatData} for this item, either in a default configuration or for a specific action.\n   *\n   * @param {EnrichmentOptions} [enrichOptions] - Options affecting how descriptions are enriched.\n   *                                              `rollData` defaults to {@link ItemAction#getRollData}/{@link ItemPF#getRollData}.\n   *                                              `secrets` defaults to {@link Item#isOwner}.\n   * @param {object} [options] - Additional options affecting the chat data generation\n   * @param {boolean} [options.chatcard=false] - Is this actually for chat card.\n   * @param {boolean} [options.extended=false] - Include extended information that may not be useful in all circumstances.\n   * @param {string} [options.actionId] - The ID of an action on this item to generate chat data for,\n   *                                      defaults to {@link ItemPF.defaultAction}\n   * @returns {ChatData} The chat data for this item (+action)\n   */\n  async getChatData({ chatcard = false, actionId = null, rollData = {} } = {}) {\n    /** @type {ChatData} */\n    const data = {};\n    const action = actionId ? this.actions.get(actionId) : this.defaultAction;\n\n    rollData ??= action ? action.getRollData() : this.getRollData();\n    const itemData = rollData.item ?? this.system;\n    const actionData = rollData.action ?? action?.data ?? {};\n\n    const labels = this.getLabels({ actionId, rollData });\n\n    // Rich text descriptions\n    data.identifiedDescription = this.getDescription({ chatcard, rollData });\n\n    data.unidentifiedDescription = itemData.description.unidentified;\n    data.description = this.showUnidentifiedData ? data.unidentifiedDescription : data.identifiedDescription;\n    data.actionDescription = actionData.description;\n\n    // General equipment properties\n    const props = [];\n\n    if (chatcard !== true) {\n      if (labels.subType && labels.childTypeDistinct !== true) props.push(labels.subType);\n      if (labels.childType) props.push(labels.childType);\n    }\n\n    if (!this.showUnidentifiedData) {\n      if (labels.activation) props.push(labels.activation);\n      // Range\n      if (actionData.range != null) {\n        const range = action.getRange({ type: \"max\", rollData }),\n          units = actionData.range.units === \"mi\" ? \"mi\" : \"ft\";\n        const distanceValues = pf1.utils.convertDistance(range, units);\n        const rangeLabel =\n          range > 0 ? game.i18n.format(\"PF1.RangeNote\", { distance: range, units: distanceValues[1] }) : null;\n        if (rangeLabel) props.push(rangeLabel);\n      }\n\n      // Add Difficulty Class (DC) label\n      if (labels.save) {\n        props.push(labels.save);\n        const saveDesc = actionData.save?.description;\n        if (saveDesc) props.push(saveDesc);\n      }\n\n      // Duration\n      if (actionData.duration != null) {\n        let duration;\n        if (actionData.duration.units === \"spec\") {\n          duration = actionData.duration.value;\n        } else if (![\"inst\", \"perm\"].includes(actionData.duration.units)) {\n          const value = await RollPF.safeRollAsync(actionData.duration.value || \"0\", rollData).total;\n          duration = [value, pf1.config.timePeriods[actionData.duration.units]].filterJoin(\" \");\n        }\n        if (duration) props.push(duration);\n      }\n\n      // Enhancement Bonus\n      const enhBonus = actionData.enh?.value ?? itemData.enh ?? 0;\n      if (enhBonus > 0) {\n        props.push(game.i18n.format(\"PF1.EnhancementInline\", { bonus: enhBonus }));\n      }\n    }\n\n    // Get per item type chat data\n    this.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    const harmless = actionData.save?.harmless;\n    if (harmless) props.push(game.i18n.localize(\"PF1.Harmless\"));\n\n    data.properties = props;\n\n    return data;\n  }\n\n  /**\n   * Per item type chat data.\n   *\n   * @param {ChatData} data - A partial of a chat data object that can be modified to add per item type data.\n   * @param {Object<string, string>} labels - The labels for this item.\n   * @param {string[]} props - Additional property strings\n   * @param {object} rollData - A rollData object to be used for checks\n   * @param {object} [options] - Additional options\n   * @param {string} [options.actionId=null] - Action this pertains to, if any.\n   * @param {boolean} [options.chatcard=false] - Is this for a chat card?\n   */\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    // Charges as used by most item types, except spells\n    if (this.isCharged) {\n      const charges = this.charges;\n      if (Number.isFinite(charges))\n        props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${charges}/${this.maxCharges}`);\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Item Rolls - Attack, Damage, Saves, Checks  */\n  /* -------------------------------------------- */\n\n  /**\n   * Use an attack, using {@link SharedActionData}\n   *\n   * @see {@link SharedActionData}\n   * @param {string} [actionId=\"\"] - The ID of the action to use, defaults to the first action\n   * @param {string} [actionID=\"\"] - Deprecated in favor of `actionId`\n   * @param {number} [cost=null] - Cost override. Replaces charge cost or slot cost as appropriate.\n   * @param {Event | null} [ev=null] - The event that triggered the use, if any\n   * @param {boolean} [skipDialog=getSkipActionPrompt()] - Whether to skip the dialog for this action\n   * @param {boolean} [chatMessage=true] - Whether to send a chat message for this action\n   * @param {string} [dice=pf1.dice.D20RollPF.standardRoll] - The base dice to roll for this action\n   * @param {string} [rollMode] - The roll mode to use for the chat message\n   * @param {TokenDocument} [token] Token this action is for, if any.\n   * @param {UseOptions} [options={}] Additional use options\n   * @throws {Error} - On some invalid inputs.\n   * @returns {Promise<SharedActionData | void | ChatMessage>}\n   */\n  async use({\n    actionId = \"\",\n    actionID = \"\",\n    cost = null,\n    ev = null,\n    skipDialog = getSkipActionPrompt(),\n    chatMessage = true,\n    dice = pf1.dice.D20RollPF.standardRoll,\n    rollMode,\n    token,\n    options = {},\n  } = {}) {\n    rollMode ||= game.settings.get(\"core\", \"rollMode\");\n\n    if (cost !== null && !Number.isSafeInteger(cost)) throw new Error(`Invalid value for cost override: ${cost}`);\n\n    if (actionID) {\n      foundry.utils.logCompatibilityWarning(\"ItemPF.use() actionID parameter is deprecated in favor of actionId\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      actionId ||= actionID;\n    }\n\n    if (options.held) {\n      // Convert human friendly options to internal types\n      if (options.held === \"twohanded\") options.held = \"2h\";\n      else if (options.held === \"offhand\") options.held = \"oh\";\n    }\n\n    // Old use method\n    if (!this.hasAction) {\n      // Use\n      const sharedData = { event: ev, skipDialog, chatMessage, rollMode };\n      if (!(\"attackData\" in sharedData)) {\n        Object.defineProperty(sharedData, \"attackData\", {\n          get: () => {\n            foundry.utils.logCompatibilityWarning(\n              \"shared.attackData is deprecated in favor of directly accessing shared\",\n              {\n                since: \"PF1 v10\",\n                until: \"PF1 v12\",\n              }\n            );\n            return sharedData;\n          },\n        });\n      }\n\n      const shared = await this.executeScriptCalls(\"use\", {}, sharedData);\n      rollMode = shared.rollMode || rollMode;\n      if (shared.reject) return shared;\n\n      // Deduct charges\n      if (this.isCharged) {\n        const chargeCost = cost ?? this.getDefaultChargeCost();\n        if (this.charges < chargeCost) {\n          if (this.isSingleUse) {\n            return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoQuantity\"));\n          }\n          return void ui.notifications.warn(game.i18n.format(\"PF1.Error.InsufficientCharges\", { name: this.name }));\n        }\n\n        await this.addCharges(-chargeCost);\n      }\n\n      if (shared.hideChat !== true && chatMessage) {\n        shared.descriptionOnly = true;\n        shared.chatCard = await this.displayCard({ rollMode });\n      }\n\n      return shared;\n    }\n\n    if (ev && ev.originalEvent) ev = ev.originalEvent;\n\n    /** @type {ItemAction | undefined} */\n    let action;\n    if (this.system.actions.length > 0) {\n      if (actionId) {\n        action = this.actions.get(actionId);\n        if (!action) throw new Error(`Could not find action by ID \"${actionId}\"`);\n      } else if (this.system.actions.length > 1 && skipDialog !== true) {\n        return pf1.applications.ActionSelector.open(this, { ev, chatMessage, dice, rollMode, token });\n      } else {\n        action = this.defaultAction;\n      }\n    } else {\n      console.error(\"This item does not have an action associated with it.\");\n      return;\n    }\n\n    // Prepare variables\n    /** @type {SharedActionData} */\n    const shared = {\n      event: ev,\n      rollData: {},\n      skipDialog,\n      chatMessage,\n      dice,\n      cost,\n      fullAttack: true,\n      useOptions: options,\n      attackBonus: [],\n      damageBonus: [],\n      attacks: [],\n      chatAttacks: [],\n      rollMode,\n      useMeasureTemplate: action.hasTemplate && game.settings.get(\"pf1\", \"placeMeasureTemplateOnQuickRolls\"),\n      conditionals: null,\n      conditionalPartsCommon: {},\n      casterLevelCheck: false,\n      concentrationCheck: false,\n      scriptData: {},\n    };\n\n    // Prevent reassigning the ActionUse's item, action, and token\n    Object.defineProperties(shared, {\n      action: { value: action, writable: false, enumerable: true },\n      item: { value: this, writable: false, enumerable: true },\n      token: { value: token, writable: false, enumerable: true },\n    });\n\n    if (shared.useOptions.ammo) {\n      if (action.data.usesAmmo) {\n        await this.setFlag(\"pf1\", \"defaultAmmo\", shared.useOptions.ammo);\n      } else {\n        console.error(\"Attempted to set ammo for action that does not use ammo\");\n      }\n    }\n\n    const actionUse = new ActionUse(shared);\n\n    return actionUse.process({ skipDialog });\n  }\n\n  /**\n   * Finds, filters and alters changes relevant to a context, and returns the result (as an array)\n   *\n   * @remarks - Always returns empty array if no actor is present.\n   * @param {\"mattack\"|\"rattack\"|\"nattack\"|\"tattack\"|\"wdamage\"|\"sdamage\"|\"rwdamage\"|\"twdamage\"|\"mwdamage\"|\"ndamage\"|\"rdamage\"|\"tdamage\"|\"mdamage\"} context - The given context.\n   * @returns {ItemChange[]} - The matching changes.\n   */\n  getContextChanges(context = [\"attack\"]) {\n    if (!this.actor) return [];\n    const targets = this.getContextStack(context);\n    return this.actor.changes.filter((c) => targets.has(c.target));\n  }\n\n  /**\n   * Retrieve stack of contexts related to the one given.\n   *\n   * @private\n   * @param {Array<string>} contexts Context subtarget ID array.\n   * @returns {Set<string>} - Modified context array.\n   */\n  getContextStack(contexts) {\n    const result = new Set(contexts);\n    for (const context of contexts) {\n      switch (context) {\n        case \"mattack\":\n        case \"rattack\":\n        case \"nattack\":\n        case \"tattack\":\n          result.add(\"attack\");\n          break;\n        case \"wdamage\":\n        case \"sdamage\":\n          result.add(\"damage\");\n          break;\n        case \"mwdamage\":\n        case \"rwdamage\":\n        case \"twdamage\":\n          result.add(\"damage\");\n          result.add(\"wdamage\");\n          break;\n      }\n    }\n\n    // Add generic ranged damage for ranged weapon damage and thrown weapon damage\n    if (result.has(\"rwdamage\") || result.has(\"twdamage\")) {\n      result.add(\"rdamage\");\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @returns {object} An object with data to be used in rolls in relation to this item.\n   */\n  getRollData() {\n    const actor = this.actor;\n    const result = { ...(actor?.getRollData() ?? {}) };\n\n    result.item = foundry.utils.deepClone(this.system);\n\n    // Add @class\n    const classTag = result.item.class;\n    if (classTag) result.class = result.classes?.[classTag];\n\n    // Add dictionary flag\n    const tag = this.system.tag;\n    result.item.dFlags = result.dFlags?.[tag];\n\n    result.item.bFlags = Object.fromEntries(\n      Object.entries(result.item.flags?.boolean ?? {}).map(([key, value]) => [key, value ? 1 : 0])\n    );\n\n    // Set aura strength\n    if (this.isPhysical) {\n      result.item.auraStrength = this.auraStrength;\n\n      // Resize item\n      if (this.system.resizing && result.size !== undefined) {\n        result.item.size = result.size;\n      }\n    }\n\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  static chatListeners(html) {\n    html.on(\"click\", \".card-buttons button, .inline-action\", this._onChatCardButton.bind(this));\n    html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\n  }\n\n  /* -------------------------------------------- */\n\n  static async _onChatCardButton(event) {\n    event.preventDefault();\n\n    // Extract card data\n    const button = event.currentTarget;\n    button.disabled = true;\n    const card = button.closest(\".chat-card\");\n    const messageId = card.closest(\".message\").dataset.messageId;\n    const message = game.messages.get(messageId);\n    const action = button.dataset.action;\n\n    // Validate permission to proceed with the roll\n    // BUG: \"save\" is never actually used?\n    const isTargetted = [\"save\", \"applyDamage\"].includes(action);\n    if (!(isTargetted || game.user.isGM || message.isAuthor)) return;\n\n    if (action === \"applyDamage\") {\n      await this._onChatCardAction(action, { button, event });\n      button.disabled = false;\n      return;\n    }\n\n    // TODO: Clarify the following. Only used for ammo recovery?\n\n    // Get the Item\n    const actor = ChatMessage.getSpeakerActor(message.speaker);\n    const item = actor.items.get(card.dataset.itemId);\n\n    // Perform action\n    if (!(await this._onChatCardAction(action, { button, item, event }))) {\n      button.disabled = false;\n    }\n  }\n\n  static async _onChatCardAction(action, { button = null, item = null, event } = {}) {\n    const message = game.messages.get(button.closest(\".chat-message\").dataset.messageId);\n\n    // Apply damage\n    if (action === \"applyDamage\") {\n      let asNonlethal = false;\n      if (button.dataset.tags?.split(\" \").includes(\"nonlethal\")) asNonlethal = true;\n\n      const value = parseInt(button.dataset.value);\n      if (isNaN(value)) return void console.warn(\"Invalid damage value:\", value, { button });\n\n      const attackIndex = parseInt(button.closest(\"[data-index]\")?.dataset.index);\n      const attackType = button.dataset.type;\n\n      const attack = message.systemRolls?.attacks?.[attackIndex];\n      const isCritical = attackType === \"critical\";\n\n      const instances = [];\n      let damageRolls;\n      if (attack) {\n        if (attackType === \"normal\") damageRolls = attack.damage;\n        else if (isCritical) damageRolls = attack.critDamage;\n      }\n\n      const metadata = message.getFlag(\"pf1\", \"metadata\") ?? {};\n\n      if (damageRolls) {\n        for (const dmg of damageRolls) {\n          instances.push({\n            value: dmg.total,\n            types: dmg.damageType,\n          });\n        }\n      }\n\n      pf1.documents.actor.ActorPF.applyDamage(value, {\n        asNonlethal,\n        event,\n        element: button,\n        message,\n        isCritical,\n        critMult: isCritical ? metadata.config.critMult ?? 0 : 0,\n        instances,\n      });\n    }\n    // Recover ammunition\n    else if ([\"recoverAmmo\", \"forceRecoverAmmo\"].includes(action)) {\n      if (!item?.isOwner) return;\n\n      // Check for recovery state\n      const attackIndex = button.closest(\".chat-attack\").dataset.index;\n      if (!attackIndex) return;\n      const ammoId = button.closest(\".ammo\")?.dataset.ammoId || button.dataset.ammoId;\n      const ammoQuantity = button.closest(\".ammo\")?.dataset.ammoQuantity || button.dataset.ammoQuantity || 1;\n      if (ammoQuantity == 0) return;\n      const recoveryData = message.getFlag(\"pf1\", \"ammoRecovery\");\n      const ammoRecovery = recoveryData?.[attackIndex]?.[ammoId];\n      // Backwards compatibility (PF1 v10) with old messages\n      if (ammoRecovery?.failed === true) return;\n      // Recovered is the number recovered, the rest failed\n      if (ammoRecovery?.recovered !== undefined) return;\n\n      // Find ammo item\n      const ammoItem = item.actor.items.get(ammoId);\n      if (!ammoItem) return;\n      if (ammoItem.getFlag(\"pf1\", \"abundant\")) return; // Abundant is unrecoverable\n\n      let chance = 100;\n      if (action === \"recoverAmmo\") {\n        chance = ammoItem.system.recoverChance ?? 50;\n      }\n\n      // (Try to) recover ammo\n      let recovered = 0;\n      if (chance > 0) {\n        for (let i = 0; i < ammoQuantity; i++) {\n          if (chance <= Math.random() * 100) {\n            recovered += 1;\n          }\n        }\n      }\n\n      const promises = [];\n\n      // Update ammo if any were recovered\n      if (recovered > 0) promises.push(ammoItem.addCharges(recovered));\n\n      // Update chat card\n      promises.push(message.setFlag(\"pf1\", \"ammoRecovery\", { [attackIndex]: { [ammoId]: { recovered } } }));\n\n      await Promise.all(promises);\n\n      return true;\n    } else if (action === \"concentration\") {\n      // TODO: Apply bonuses on card if any\n      item.actor.rollConcentration(item.system.spellbook);\n    } else if (action === \"caster-level-check\") {\n      // TODO: Apply bonuses on card (e.g. CL increase in dialog, conditional modifiers, etc.)\n      item.actor.rollCL(item.system.spellbook);\n    }\n\n    return false;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle toggling the visibility of chat card content when the name is clicked\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  static _onChatCardToggleContent(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const card = header.closest(\".chat-card\");\n    const content = card.querySelector(\".card-content\");\n    content.style.display = content.style.display === \"none\" ? \"block\" : \"none\";\n\n    // Update chat popout size\n    const popout = header.closest(\".chat-popout\");\n    ui.windows[popout?.dataset.appid]?.setPosition();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Test if specified link can be created.\n   *\n   * @param {string} linkType - The type of link.\n   * @param {string} dataType - Either \"compendium\", \"data\" or \"world\".\n   * @param {object} targetItem - The target item to link to.\n   * @param {string} itemLink - The link identifier for the item.\n   * @returns {boolean} Whether a link to the item is possible here.\n   */\n  canCreateItemLink(linkType, dataType, targetItem, itemLink) {\n    const actor = this.actor;\n    const sameActor = actor && targetItem.actor && targetItem.actor.id === actor.id;\n\n    // Link happens between items on same actor?\n    const linkOnActor = [\"children\", \"charges\", \"ammunition\"].includes(linkType);\n    if (linkOnActor && !actor) return false;\n\n    // Don't create link to self\n    if (itemLink === this.id) return false;\n\n    // Don't re-create existing links\n    const links = this.system.links?.[linkType] || [];\n    if (links.some((o) => o.id === itemLink || o.uuid === itemLink)) return false;\n\n    const targetLinks = targetItem.system.links?.[linkType] ?? [];\n    if (linkOnActor && sameActor) {\n      if (linkType === \"charges\") {\n        // Prevent the closing of charge link loops\n        if (targetLinks.length > 0) {\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink\", { source: this.name, target: targetItem.name })\n          );\n          return false;\n        } else if (targetItem.links.charges != null) {\n          // Prevent the linking of one item to multiple resource pools\n          ui.notifications.warn(\n            game.i18n.format(\"PF1.Warning.CannotCreateChargeLink2\", {\n              source: this.name,\n              target: targetItem.name,\n              deeptarget: targetItem.links.charges.name,\n            })\n          );\n          return false;\n        }\n      }\n      return true;\n    }\n\n    // Allow class association links only from compendiums\n    if (linkType === \"classAssociations\" && dataType === \"compendium\") return true;\n    if (linkType === \"supplements\") {\n      // Allow supplement links only if not from an actor\n      if (!targetItem.actor) return true;\n      else ui.notifications.error(game.i18n.localize(\"PF1.LinkErrorNoActorSource\"));\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} linkType - The type of link.\n   * @param {string} dataType - Either \"compendium\", \"data\" or \"world\".\n   * @param {object} targetItem - The target item to link to.\n   * @param {string} itemLink - The link identifier for the item.\n   * @param {object} extraData - Additional data\n   * @returns {Array} An array to insert into this item's link data.\n   */\n  generateInitialLinkData(linkType, dataType, targetItem, itemLink, extraData = {}) {\n    const result = {\n      name: targetItem.name,\n    };\n\n    result.uuid = itemLink;\n\n    if (linkType === \"classAssociations\") {\n      result.level = 1;\n    }\n\n    // Remove name for various links\n    switch (linkType) {\n      case \"classAssociations\":\n      case \"supplements\":\n        // System packs are assumed static\n        if (game.packs.get(targetItem.pack)?.metadata.packageType === \"system\") {\n          delete result.name;\n        }\n        break;\n      case \"charges\":\n      case \"children\":\n        // Actor local links\n        delete result.name;\n        break;\n    }\n\n    // Merge in extra data\n    foundry.utils.mergeObject(result, extraData);\n\n    return result;\n  }\n\n  /**\n   * Creates a link to another item.\n   *\n   * @param {string} linkType - The type of link.\n   * e.g. \"children\", \"charges\", \"classAssociations\" or \"ammunition\".\n   * @param {string} dataType - Either \"compendium\", \"data\" or \"world\".\n   * @param {object} targetItem - The target item to link to.\n   * @param {string} itemLink - The link identifier for the item.\n   * e.g. UUID for items external to the actor, and item ID for same actor items.\n   * @param {object} [extraData] - Additional data to store int he link\n   * @returns {boolean} Whether a link was created.\n   */\n  async createItemLink(linkType, dataType, targetItem, itemLink, extraData) {\n    if (this.canCreateItemLink(linkType, dataType, targetItem, itemLink)) {\n      const link = this.generateInitialLinkData(linkType, dataType, targetItem, itemLink, extraData);\n      const itemData = this.toObject();\n      const links = foundry.utils.deepClone(itemData.system.links?.[linkType] ?? []);\n      links.push(link);\n      const itemUpdate = { _id: this.id, [`system.links.${linkType}`]: links };\n      const itemUpdates = [];\n\n      // Clear value, maxFormula and per from link target to avoid odd behaviour\n      if (linkType === \"charges\") {\n        itemUpdates.push({\n          _id: targetItem.id,\n          system: { uses: { \"-=value\": null, \"-=maxFormula\": null, \"-=per\": null, \"-=rechargeFormula\": null } },\n        });\n      }\n\n      if (this.actor && itemUpdates.length > 0) {\n        await this.actor.updateEmbeddedDocuments(\"Item\", [itemUpdate, ...itemUpdates]);\n      } else {\n        await this.update(itemUpdate);\n      }\n\n      // Call link creation hook\n      Hooks.callAll(\"pf1CreateItemLink\", this, link, linkType);\n\n      return true;\n    } else if (linkType === \"children\" && dataType !== \"data\") {\n      const itemData = targetItem.toObject();\n\n      // Default to spell-like tab until a selector is designed in the Links tab or elsewhere\n      if (itemData.type === \"spell\") itemData.system.spellbook = \"spelllike\";\n\n      const [newItem] = await this.actor.createEmbeddedDocuments(\"Item\", [itemData]);\n\n      await this.createItemLink(\"children\", \"data\", newItem, newItem.getRelativeUUID(this.actor));\n    }\n\n    return false;\n  }\n\n  /**\n   * Get item links of type\n   *\n   * @param {string} type - Link type\n   * @param {boolean} includeLinkData - Include link data, return value changes from item array to object array\n   * @param {object} [options={}] - Additional options\n   * @param {Set} [options._results] - Internal use only.\n   * @param {boolean} [options.recursive=false] - Retrieved linked items recursively.\n   * @returns {Item[]|object[]} - Linked items, or objects with linked items and additional data\n   */\n  async getLinkedItems(type, includeLinkData = false, { recursive = false, _results } = {}) {\n    const items = this.system.links?.[type];\n    if (!items) return [];\n\n    const results = _results ?? new Set();\n    for (const l of items) {\n      if (!l.uuid) continue;\n      const item = await fromUuid(l.uuid, { relative: this.actor });\n      if (item) {\n        if (includeLinkData) {\n          if (results.some((i) => i.item === item)) continue;\n        } else if (results.has(item)) continue;\n\n        if (includeLinkData) results.add({ item, linkData: l });\n        else results.add(item);\n\n        // Recursive\n        if (type !== \"charges\" && recursive) {\n          await item.getLinkedItems(type, { recursive, _results: results });\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Retrieve list of linked items for a type, synchronously.\n   * Intended mainly for fetching child or charge links quickly.\n   *\n   * @example\n   * const childItems = item.getLinkedItemsSync(\"children\");\n   * @param {string} type Link type, e.g. \"children\", \"charges\", or \"classAssociations\"\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.recursive=false] - Retrieve links recursively.\n   * @param {Set<string>} [options._results] - Internal use only\n   * @returns {Item[]|object[]} Linked items or their compendium index data\n   */\n  getLinkedItemsSync(type, { recursive = false, _results } = {}) {\n    const links = this.system.links?.[type];\n    if (!links) return [];\n\n    const results = _results ?? new Set();\n    for (const linkData of links) {\n      if (!linkData.uuid) continue;\n      const item = fromUuidSync(linkData.uuid, { relative: this.actor });\n      if (item) {\n        if (results.has(item)) continue;\n        results.add(item);\n\n        // Recursive\n        if (type !== \"charges\" && recursive) {\n          item.getLinkedItemsSync(type, { recursive, _results: results });\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  /**\n   * Get all items linked by any means.\n   *\n   * @returns {Item[]}\n   */\n  async getAllLinkedItems() {\n    const result = [];\n\n    for (const items of Object.values(this.system.links ?? {})) {\n      for (const l of items) {\n        if (!l.uuid) continue;\n        const item = await fromUuid(l.uuid, { relative: this.actor });\n        if (item) result.push(item);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Removes all link references to an item.\n   *\n   * @param {string} uuid - The UUID of the item to remove links to.\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.commit=true] - Commit changes to database. If false, resulting update data is returned instead.\n   * @returns {Promise<Item|object|undefined>}\n   */\n  async removeItemLink(uuid, { commit = true } = {}) {\n    const updateData = {};\n    for (const [type, linkItems] of Object.entries(this.system.links ?? {})) {\n      const items = foundry.utils.deepClone(linkItems);\n      const idx = items.findIndex((item) => item.uuid === uuid);\n      if (idx >= 0) {\n        items.splice(idx, 1);\n        updateData[`system.links.${type}`] = items;\n      }\n    }\n\n    if (!foundry.utils.isEmpty(updateData)) {\n      if (commit) return this.update(updateData);\n      return updateData;\n    }\n  }\n\n  /**\n   * @deprecated\n   * @param {object} linkData - Link data\n   * @param {boolean} [extraData=false] - Deprecated: Include link data in return value\n   * @returns {Item|null} - Linked item if it exists\n   */\n  async getLinkItem(linkData, extraData = false) {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF.getLinkItem() is deprecated in favor of fromUuid(linkData.uuid, {relative:actor})\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    const item = await fromUuid(linkData.uuid, { relative: this.actor });\n\n    // Package extra data\n    if (extraData) {\n      return { item, linkData };\n    }\n\n    return item;\n  }\n\n  /**\n   * Retrieve item referred to by a link in .system.links data\n   *\n   * @deprecated\n   * @param {object} linkData Link data\n   * @returns {Item|object|undefined} Linked item, undefined, or compendium index data\n   */\n  getLinkedItemSync(linkData = {}) {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF.getLinkedItemSync() is deprecated in favor of fromUuidSync(linkData.uuid, {relative:actor})\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return fromUuidSync(linkData.uuid, { relative: this.actor });\n  }\n\n  /**\n   * Generates lists of change targets this item can have.\n   *\n   * @param {string} target - The target key, as defined in PF1.buffTargets.\n   * @returns {Object<string, string>} A list of changes\n   */\n  getChangeTargets(target) {\n    const result = {};\n    // Add specific skills\n    if (target === \"skill\") {\n      if (!this.actor) {\n        for (const [s, skl] of Object.entries(pf1.config.skills)) {\n          result[`skill.${s}`] = skl;\n        }\n      } else {\n        const actorSkills = foundry.utils.mergeObject(pf1.config.skills, this.actor.system.skills, { inplace: false });\n        for (const [s, skl] of Object.entries(actorSkills)) {\n          if (!skl.subSkills) {\n            if (skl.custom) result[`skill.${s}`] = skl.name;\n            else result[`skill.${s}`] = pf1.config.skills[s];\n          } else {\n            for (const [s2, skl2] of Object.entries(skl.subSkills)) {\n              result[`skill.${s}.${s2}`] = `${pf1.config.skills[s]} (${skl2.name})`;\n            }\n          }\n        }\n      }\n    }\n    // Add static subtargets\n    else if (foundry.utils.hasProperty(pf1.config.buffTargets, target)) {\n      for (const [k, v] of Object.entries(pf1.config.buffTargets[target])) {\n        if (!k.startsWith(\"_\") && !k.startsWith(\"~\")) result[k] = v;\n      }\n    }\n\n    return result;\n  }\n\n  getChangeSubTargets(target) {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemPF.getChangeSubTargets() is deprecated in favor of ItemPF.getChangeTargets\",\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n    return this.getChangeTargets(target);\n  }\n\n  getValue() {\n    foundry.utils.logCompatibilityWarning(\"ItemPF.getValue() is deprecated, only physical items have value\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return 0;\n  }\n\n  /**\n   * Sets a boolean flag on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async addItemBooleanFlag(flagName, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (Array.isArray(flags)) throw new Error(`${this.name} [${this.id}] requires migration.`);\n\n    if (flags[flagName] === undefined) {\n      await this.update({ [`system.flags.boolean.${flagName}`]: true }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a boolean flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemBooleanFlag(flagName, context = {}) {\n    const flags = this.system.flags?.boolean ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.boolean.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag on this item.\n   * @returns {boolean} Whether the flag was found on this item.\n   */\n  hasItemBooleanFlag(flagName) {\n    const flags = this.system.flags?.boolean ?? {};\n    return flags[flagName] === true;\n  }\n\n  /**\n   * Get all item boolean flags as array.\n   *\n   * @returns {string[]}\n   */\n  getItemBooleanFlags() {\n    const flags = this.system.flags?.boolean ?? {};\n    return Object.keys(flags);\n  }\n\n  /**\n   * Sets a dictionary flag value on this item.\n   *\n   * @param {string} flagName - The name/key of the flag to set.\n   * @param {number|string} value - The flag's new value.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async setItemDictionaryFlag(flagName, value, context = {}) {\n    flagName = String(flagName)\n      .replace(/[^\\w_-]/g, \"-\")\n      .replace(/^-+/, \"_\");\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== value) {\n      await this.update({ [`system.flags.dictionary.${flagName}`]: value }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes a dictionary flag from this item.\n   *\n   * @param {string} flagName - The name/key of the flag to remove.\n   * @param {object} context Update context\n   * @returns {Promise<boolean>} Whether something was changed.\n   */\n  async removeItemDictionaryFlag(flagName, context = {}) {\n    const flags = this.system.flags?.dictionary ?? {};\n\n    if (flags[flagName] !== undefined) {\n      await this.update({ [`system.flags.dictionary.-=${flagName}`]: null }, context);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} flagName - The name/key of the flag to get.\n   * @returns {string|number|undefined} The value stored in the flag.\n   */\n  getItemDictionaryFlag(flagName) {\n    const flags = this.system.flags?.dictionary || {};\n    return flags[flagName];\n  }\n\n  /**\n   * Get all item dictionary flags as array of objects.\n   *\n   * @returns {object[]}\n   */\n  getItemDictionaryFlags() {\n    const flags = this.system.flags?.dictionary || {};\n    return flags;\n  }\n\n  /**\n   * Get attack array for specific action.\n   *\n   * @param {string} actionId Action identifier.\n   * @returns {number[]} Simple array describing the individual guaranteed attacks.\n   */\n  getAttackArray(actionId) {\n    foundry.utils.logCompatibilityWarning(\n      `ItemPF.getAttackArray() is deprecated. Use ItemAction.getAttacks() instead.`,\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    const action = this.actions.get(actionId),\n      actionData = action?.data,\n      rollData = action?.getRollData();\n    if (!actionData) return [0];\n\n    const attacks = action.getAttacks({ full: true, rollData, conditionals: true, bonuses: true });\n\n    return attacks;\n  }\n\n  /**\n   * Get default action's attack array.\n   *\n   * @returns {number[]} Simple array describing the individual guaranteed attacks.\n   */\n  get attackArray() {\n    foundry.utils.logCompatibilityWarning(`ItemPF.attackArray is deprecated. Use ItemAction.getAttacks() instead.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.getAttackArray(this.defaultAction.id);\n  }\n\n  /**\n   * Attack sources for a specific action.\n   *\n   * @param {string} actionId Action ID\n   * @param {object} [options={}] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack, or undefined if the action is missing.\n   */\n  getAttackSources(actionId, { rollData } = {}) {\n    /** @type {pf1.components.ItemAction} */\n    const action = this.actions.get(actionId);\n    if (!action) return;\n\n    const sources = [];\n\n    const actorData = this.actor?.system,\n      itemData = this.system,\n      actionData = action.data;\n\n    if (!actorData || !actionData) return sources;\n    rollData ??= action.getRollData();\n\n    const describePart = (value, name, modifier, sort = 0) => {\n      if (value == 0) return;\n      sources.push({ value, name, modifier, sort });\n    };\n\n    const isManeuver = action.isCombatManeuver;\n\n    // Unreliable melee/ranged identification\n    const sizeBonus = !isManeuver\n      ? pf1.config.sizeMods[rollData.traits.size]\n      : pf1.config.sizeSpecialMods[rollData.traits.size];\n\n    // Add size bonus\n    if (sizeBonus != 0) describePart(sizeBonus, game.i18n.localize(\"PF1.Size\"), \"size\", -20);\n\n    const changeSources = action.attackSources;\n\n    const effectiveChanges = getHighestChanges(changeSources, { ignoreTarget: true });\n    effectiveChanges.forEach((ic) => describePart(ic.value, ic.flavor, ic.type, -800));\n\n    if (actionData.ability.attack) {\n      const ablMod = actorData.abilities?.[actionData.ability.attack]?.mod ?? 0;\n      describePart(ablMod, pf1.config.abilities[actionData.ability.attack], \"untyped\", -50);\n    }\n\n    // Attack bonus formula\n    const bonusRoll = RollPF.safeRollAsync(actionData.attackBonus || \"0\", rollData);\n    if (bonusRoll.total != 0)\n      describePart(bonusRoll.total, bonusRoll.flavor ?? game.i18n.localize(\"PF1.AttackRollBonus\"), \"untyped\", -100);\n\n    // Masterwork or enhancement bonus\n    // Only add them if there's no larger enhancement bonus from some other source\n    const virtualEnh = action.enhancementBonus ?? (itemData.masterwork ? 1 : 0);\n    if (!effectiveChanges.find((i) => i.type === \"enh\" && i.value > virtualEnh)) {\n      if (Number.isFinite(action.enhancementBonus) && action.enhancementBonus !== 0) {\n        describePart(action.enhancementBonus, game.i18n.localize(\"PF1.EnhancementBonus\"), \"enh\", -300);\n      } else if (itemData.masterwork) {\n        describePart(1, game.i18n.localize(\"PF1.Masterwork\"), \"enh\", -300);\n      }\n    }\n\n    // Add proficiency penalty\n    try {\n      if (!this.getProficiency(true)) {\n        describePart(-4, game.i18n.localize(\"PF1.Proficiency.Penalty\"), \"untyped\", -500);\n      }\n    } catch (error) {\n      // Ignore proficiency incompatibility.\n    }\n\n    // Broken condition\n    if (this.isBroken) {\n      describePart(-2, game.i18n.localize(\"PF1.Broken\"), \"untyped\", -500);\n    }\n\n    // Add secondary natural attack penalty\n    if (actionData.naturalAttack.primaryAttack !== true && itemData.subType === \"natural\") {\n      const attackBonus = actionData.naturalAttack?.secondary?.attackBonus || \"-5\";\n      const secondaryModifier = RollPF.safeRollSync(`${attackBonus}`, rollData).total ?? 0;\n      describePart(secondaryModifier, game.i18n.localize(\"PF1.SecondaryAttack\"), \"untyped\", -400);\n    }\n\n    // Conditional modifiers\n    actionData.conditionals\n      .filter((c) => c.default && c.modifiers.find((sc) => sc.target === \"attack\"))\n      .forEach((c) => {\n        c.modifiers.forEach((cc) => {\n          if (cc.subTarget === \"allAttack\") {\n            const bonusRoll = RollPF.safeRollAsync(cc.formula, rollData);\n            if (bonusRoll.total == 0) return;\n            describePart(bonusRoll.total, c.name, cc.type, -5000);\n          }\n        });\n      });\n\n    return sources.sort((a, b) => b.sort - a.sort);\n  }\n\n  /**\n   * Return attack sources for default action.\n   *\n   * @returns {object[]|undefined} Array of value and label pairs for attack bonus sources on the main attack.\n   */\n  get attackSources() {\n    return this.getAttackSources(this.defaultAction.id);\n  }\n\n  getAllDamageSources(actionId) {\n    return this.actions.get(actionId)?.allDamageSources;\n  }\n\n  /**\n   * Generic damage source retrieval for default action, includes default conditionals and other item specific modifiers.\n   *\n   * @returns {ItemChange[]|undefined} All relevant changes, or undefined if action was not found.\n   */\n  get allDamageSources() {\n    return this.getAllDamageSources(this.defaultAction.id);\n  }\n\n  /** @type {boolean} - Is this item in a container? */\n  get inContainer() {\n    return !!this.parentItem;\n  }\n\n  /**\n   * @internal\n   * @type {Item} - Root item. The item at bottom of the container tree.\n   */\n  get rootItem() {\n    return this.parentItem?.rootItem ?? this;\n  }\n}\n\n/**\n * @typedef {object} ChatData\n * Data required to render an item's summary or chat card, including descriptions and properties/tags/labels\n * @property {string} description - The item's enriched description as appropriate for the current user\n * @property {string} identifiedDescription - The item's full enriched description when identified\n * @property {string} unidentifiedDescription - The item's enriched description when unidentified\n * @property {string} [actionDescription] - The enriched description of a specific action\n * @property {string[]} properties - Additional properties/labels for the item and the action\n */\n\n/**\n * @typedef {object} SharedActionData\n * A common data object used to store and share data between stages of an action's usage.\n * @property {Event | null} event - The event that triggered the action. Defaults to `null`.\n * @property {object} rollData - The singular rollData object used for all rolls in the action\n * @property {boolean} skipDialog - Whether the user-facing dialog should get skipped. Defaults to `false`.\n * @property {boolean} chatMessage - Whether a chat message should be created at the end of the action's usage. Defaults to `true`.\n * @property {ChatMessage} message - Chat message once it is created.\n * @property {string} dice - The base dice used for the action's attack rolls. Defaults to return value of `pf1.dice.D20RollPF.standardRoll`.\n * @property {boolean} fullAttack - Whether the action is a full attack. Defaults to `true`.\n * @property {string[]} attackBonus - Bonus values to be added to the attack roll formula\n * @property {string[]} damageBonus - Bonus values to be added to the damage roll formula\n * @property {ActionUseAttack[]} attacks - Array of attacks\n * @property {pf1.actionUse.ChatAttack[]} chatAttacks - Array of chat attacks for this action's use\n * @property {string} rollMode - The roll mode to be used for the creation of the chat message. Defaults to the `core.rollMode` setting.\n * @property {boolean} useMeasureTemplate - Whether to use a measure template\n * @property {object[] | null} conditionals\n * @property {object} conditionalPartsCommon\n * @property {boolean} casterLevelCheck\n * @property {boolean} concentrationCheck\n * @property {object} scriptData\n * @property {ItemAction} action - The {@link ItemAction} this use is based on\n * @property {ItemPF} item - The {@link ItemPF} this use is based on\n * @property {object} chatData - Data to be passed to {@link ChatMessage.create}, excluding `content` rendered using {@link templateData} and {@link template}.\n * @property {string} [chatTemplate] - The template to be used for the creation of the chat message.\n * @property {MeasuredTemplateDocument} template - Template document.\n * @property {object} templateData - Data used to render the chat card, passed to {@link foundry.utils.renderTemplate}.\n * @property {Token[]} targets - Targeted tokens\n */\n\n/**\n * Additional options for (action) use.\n *\n * @typedef {object} UseOptions\n * @property {boolean} [primaryAttack] - Set primary attack state\n * @property {boolean} [clCheck] - Set caster level check state\n * @property {boolean} [measureTemplate] - Set measure template state\n * @property {boolean} [powerAttack] - Set power attack state\n * @property {\"normal\"|\"2h\"|\"twohanded\"|\"oh\"|\"offhand\"} [held] - Set held option (for power attack mode).\n * @property {number} [abilityMult] - Ability score damage multiplier\n * @property {string} [ammo] - Ammo item ID to use.\n * @property {boolean} [haste] - Enable Haste\n * @property {boolean} [manyshot] - Enable Manyshot\n * @property {boolean} [rapidShot] - Enable Rapid Shot\n */\n","import { ItemPF } from \"./item-pf.mjs\";\n\nexport class ItemAttackPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Remove held option if type changed to natural attack\n    if (changed.system.subType === \"natural\") {\n      changed.system.held = null;\n    }\n  }\n\n  /** @type {boolean} - This attack pretends to be physical item. */\n  get isQuasiPhysical() {\n    return [\"weapon\", \"item\"].includes(this.subType);\n  }\n\n  get isBroken() {\n    if (!this.isQuasiPhysical) return false;\n    return this.system.broken === true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Attacks do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n\n    // Non-weapon attacks always proficient\n    if (this.subType !== \"weapon\") return true;\n\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * Creates attack from provided item.\n   *\n   * @remarks - Only supports weapon item type.\n   * @param {Item} item - Source item\n   * @throws {Error} - On unsupported type\n   * @returns {object} - Attack item data\n   */\n  static fromItem(item) {\n    if (item.type !== \"weapon\") throw new Error(`Unsupported item type \"${item.type}\"`);\n\n    const srcData = item.toObject().system;\n\n    // Convert single-use to 1 max charge\n    const uses = srcData.uses ?? {};\n    if (uses.per === \"single\") {\n      uses.per = \"charges\";\n      uses.maxFormula = \"1\";\n    }\n\n    // Get attack template\n    const attackItem = {\n      name: item.name,\n      type: \"attack\",\n      img: item.img,\n      system: {\n        subType: \"weapon\",\n        held: srcData.held,\n        masterwork: srcData.masterwork,\n        proficient: srcData.proficient,\n        enh: srcData.enh,\n        broken: item.isBroken,\n        timeworn: srcData.timeworn,\n        cursed: srcData.cursed,\n        artifact: srcData.artifact,\n        baseTypes: srcData.baseTypes,\n        tags: srcData.tags,\n        weaponGroups: srcData.weaponGroups,\n        actions: srcData.actions ?? [],\n        material: srcData.material,\n        alignments: srcData.alignments,\n        attackNotes: srcData.attackNotes ?? [],\n        effectNotes: srcData.effectNotes ?? [],\n      },\n    };\n\n    // Ensure action IDs are correct and unique\n    for (const action of attackItem.system.actions) {\n      action._id = foundry.utils.randomID(16);\n    }\n\n    return attackItem;\n  }\n\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.attackTypes[this.subType];\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\nexport class ItemBuffPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Add activation time when not present\n    if (changed.system?.active && changed.system?.duration?.start === undefined) {\n      foundry.utils.setProperty(changed, \"system.duration.start\", game.time.worldTime);\n    }\n\n    if (this.isActive && changed.system?.active == false) {\n      const effect = this.effect;\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed - Update data\n   * @param {object} context - Update context options\n   * @param {string} userId - User ID\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (changed.system === undefined) return; // No system data updates\n\n    // Following requires actor\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Toggle buff hook\n    const isActive = changed.system?.active;\n    if (isActive !== undefined) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, isActive);\n    }\n\n    // Following should only run on triggering user\n    if (game.user.id !== userId) return;\n\n    this._updateTrackingEffect(changed);\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {string} userId - User ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    const actor = this.actor;\n    const isActive = this.isActive;\n    if (actor && isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, true);\n    }\n\n    if (game.user.id !== userId) return;\n\n    if (isActive) {\n      this._updateTrackingEffect(data);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context options\n   * @param {string} userId - Triggering user ID\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    // Run script call(s)\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        const startTime = context.pf1?.startTime;\n        this.executeScriptCalls(\"toggle\", { state: false, startTime });\n      }\n    }\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Call buff removal hook\n    if (this.isActive) {\n      Hooks.callAll(\"pf1ToggleActorBuff\", actor, this, false);\n    }\n  }\n\n  /**\n   * Toggle active effect icon as necessary.\n   *\n   * @param {object} changed Update data\n   * @param {string} userId  User ID\n   */\n  async _updateTrackingEffect(changed, userId) {\n    // Toggle icon if active state has changed\n    const isActive = changed.system.active;\n    if (isActive === undefined) return;\n\n    const oldEffect = this.effect;\n\n    // Remove old AE\n    if (!isActive) {\n      oldEffect?.delete({ render: false });\n    }\n    // Add new AE or update old AE\n    else {\n      const aeData = await this.getRawEffectData();\n      aeData.active = isActive;\n      aeData.transfer = true;\n      setProperty(aeData, \"flags.pf1.tracker\", true);\n\n      // Update old\n      if (oldEffect) oldEffect.update(aeData);\n      // Create new\n      else ActiveEffect.implementation.create(aeData, { parent: this });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preDelete(context, user) {\n    const effect = this.effect;\n    if (effect) {\n      context.pf1 ??= {};\n      context.pf1.startTime = effect?.duration.startTime;\n      // Delete associated effect\n      // TODO: Remove this eventually, it is only needed by old items/actors\n      if (effect?.parent !== this) {\n        await effect.delete({ pf1: { delete: this.uuid } });\n      }\n    }\n\n    await super._preDelete(context, user);\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.buffTypes[itemData.subType];\n\n    if (this.system.duration) {\n      const duration = this.system.duration;\n      const unit = pf1.config.timePeriodsShort[duration.units];\n      if (unit === \"turn\") {\n        labels.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n      } else if (unit && duration.value) {\n        try {\n          // TODO: Durations can be variable, variable durations need to be supported.\n          rollData ??= this.getRollData();\n          const roll = RollPF.safeRollSync(\n            duration.value,\n            rollData,\n            { formula: duration.value, item: this },\n            {},\n            { maximize: true }\n          );\n          let value;\n          if (roll.isDeterministic) {\n            value = roll.total ?? 0;\n          } else {\n            value = pf1.utils.formula.simplify(duration.value, rollData);\n          }\n          labels.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n        } catch (e) {\n          console.warn(`Error with buff duration formula \"${duration.value}\"`, this);\n        }\n      }\n    }\n\n    return labels;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareDependentData(final = false) {\n    super._prepareDependentData(final);\n\n    this._prepareDuration();\n    this._prepareTraits();\n  }\n\n  /**\n   * Prepare trait selector managed data.\n   *\n   * @internal\n   */\n  _prepareTraits() {\n    const conds = (this.system.conditions ??= {});\n    conds.all = new Set([...(conds.value ?? []), ...(conds.custom ?? [])]);\n  }\n\n  /**\n   * Prepare .system.duration\n   *\n   * @deprecated Remove with PF1 v11\n   * @internal\n   * @param {object} [options] Additional options\n   * @param {object} [options.rollData] Roll data instance. New instance is generated if undefined and needed.\n   */\n  _prepareDuration({ rollData } = {}) {\n    const itemData = this.system;\n\n    const duration = itemData.duration ?? {};\n    const { units, value: formula } = duration;\n    if (!units) return;\n\n    // Add total duration in seconds\n    let seconds = NaN;\n    if (units === \"turn\") {\n      seconds = CONFIG.time.roundTime;\n    } else {\n      if (!formula) return;\n      rollData ??= this.getRollData();\n      const roll = RollPF.safeRollSync(formula, rollData, { formula, item: this }, {}, { minimize: true });\n      if (!roll.isDeterministic) return;\n      const duration = roll.isDeterministic ? roll.total : roll.formula;\n      switch (units) {\n        case \"hour\":\n          seconds = duration * 60 * 60;\n          break;\n        case \"minute\":\n          seconds = duration * 60;\n          break;\n        case \"round\":\n          seconds = duration * CONFIG.time.roundTime;\n          break;\n      }\n    }\n    itemData.duration.totalSeconds = seconds;\n  }\n\n  /**\n   * Duration of the buff in seconds.\n   *\n   * @internal\n   * @param {object} [options]\n   * @param {object} [options.rollData]\n   * @returns {number|null} Duration in seconds or null if if it has no duration.\n   */\n  async getDuration({ rollData } = {}) {\n    const duration = this.system.duration ?? {};\n    const { units, value: formula } = duration;\n    if (!units) return null;\n\n    rollData ??= this.getRollData();\n\n    // Add total duration in seconds\n    let seconds = 0;\n    if (units === \"turn\") {\n      seconds = CONFIG.time.roundTime;\n    } else {\n      if (!formula) return;\n      rollData ??= this.getRollData();\n      // TODO: Make this roll somehow known\n      const duration = await RollPF.safeRollAsync(formula, rollData).total;\n      switch (units) {\n        case \"hour\":\n          seconds = duration * 60 * 60;\n          break;\n        case \"minute\":\n          seconds = duration * 60;\n          break;\n        case \"round\":\n          seconds = duration * CONFIG.time.roundTime;\n          break;\n      }\n    }\n    return seconds;\n  }\n\n  // Determines the starting data for an ActiveEffect based off this item\n  async getRawEffectData({ rollData } = {}) {\n    const createData = await super.getRawEffectData();\n\n    createData.statuses = Array.from(this.system.conditions.all);\n\n    const hideIcon = this.system.hideFromToken;\n    const flags = { duration: {} };\n    flags.show = !hideIcon;\n\n    // Add buff durations\n    const duration = this.system.duration;\n    const formula = `${duration.value}`;\n\n    let seconds = 0;\n    let endTiming = this.system.duration.end || \"turnStart\";\n    if (duration.units === \"turn\") {\n      endTiming = \"turnEnd\";\n    } else if (formula) {\n      seconds = await this.getDuration({ rollData });\n    }\n\n    // Record end timing\n    flags.duration.end = endTiming;\n\n    // Record initiative\n    flags.duration.initiative = game.combat?.initiative;\n\n    foundry.utils.mergeObject(createData, { \"flags.pf1\": flags });\n\n    if (seconds >= 0) createData.duration.seconds = seconds;\n\n    return createData;\n  }\n\n  getRollData() {\n    const result = super.getRollData();\n\n    result.item.level = this.system.level;\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isActive() {\n    return this.system.active ?? false;\n  }\n\n  /**\n   * Retrieve associated tracking Active Effect\n   *\n   * @type {ActiveEffect|undefined}\n   */\n  get effect() {\n    return this.effects.find((ae) => ae.getFlag(\"pf1\", \"tracker\") === true);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async setActive(active, context) {\n    return this.update({ \"system.active\": active }, context);\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\nexport class ItemClassPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Set level marker\n    if (changed.system.level !== undefined) {\n      context.pf1 ??= {};\n      context.pf1.level ??= {};\n      context.pf1.level.old = this.system.level;\n    }\n\n    // Ensure class associations remain in level order\n    const classLinks = changed.system.links?.classAssociations;\n    if (classLinks?.length) {\n      classLinks.forEach((link) => (link.level ||= 1));\n      classLinks.sort((a, b) => a.level - b.level);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (userId !== game.user.id) return;\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Adjust associations if any exist\n    const level = this.system.level ?? 0;\n    if (level > 0) {\n      this._onLevelChange(0, level, { event: \"create\" });\n    }\n\n    // Create spellbook if the class has spellcasting defined\n    if (this.system.casting?.type) {\n      const bookData = { ...this.system.casting, class: this.system.tag };\n      actor.createSpellbook(bookData);\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (userId !== game.user.id) return;\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Adjust associations if any exist\n    const prevLevel = this.system.level;\n    if (prevLevel > 0) {\n      this._onLevelChange(prevLevel, 0, { event: \"delete\" });\n    }\n\n    // Disable book associated with this class, if it has spellcasting defined\n    const tag = this.system.tag;\n    if (!tag || !this.system.casting?.type) return;\n    const books = actor.system.attributes.spells.spellbooks ?? {};\n    const usedBook = Object.entries(books).find(([bookId, book]) => !!book.class && book.class === tag);\n    if (usedBook === undefined) return;\n    const [bookId, book] = usedBook;\n    if (book.inUse) {\n      actor.update({ [`system.attributes.spells.spellbooks.${bookId}.inUse`]: false });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Do following processing only on the triggering user\n    if (game.user.id !== userId) return;\n\n    // Update class associations if level changed\n    const newLevel = changed.system?.level;\n    if (newLevel !== undefined) {\n      const prevLevel = context.pf1?.level?.old ?? 0;\n      this._onLevelChange(prevLevel, newLevel ?? 0, { event: \"update\" });\n    }\n  }\n\n  /**\n   * Add or remove class associations on level change.\n   *\n   * @param {number} curLevel Current level, before the change.\n   * @param {number} newLevel New level, after the change.\n   * @param {object} [options] - Additional options\n   * @param {\"delete\"|\"update\"|\"create\"} [options.event] - Relevant event\n   */\n  async _onLevelChange(curLevel = 0, newLevel = 0, { event } = {}) {\n    const actor = this.actor;\n    if (!actor) return;\n\n    if (curLevel === newLevel) return;\n\n    // Add items associated to this class\n    if (newLevel > curLevel) {\n      const associations = this.system.links?.classAssociations ?? [];\n      const newAssociations = associations.filter((link) => link.level > curLevel && link.level <= newLevel);\n\n      const sources = new Map();\n\n      const newItems = [];\n      for (const link of newAssociations) {\n        const item = await fromUuid(link.uuid);\n        if (!item) {\n          const msg = `Could not find class association: ${link.uuid}`;\n          console.warn(link.uuid, msg, this);\n          ui.notifications?.warn(msg, { console: false });\n          continue;\n        }\n\n        sources.set(item.uuid, link);\n\n        // Apply Foundry's transformations for importing (automatically calls .toObject())\n        // This adds flags.core.sourceId, removes extraneous permissions, resets sorting, etc.\n        const itemData = game.items.fromCompendium(item, { clearFolder: true });\n\n        // Set associated class\n        itemData.system.class = this.system.tag;\n\n        newItems.push({ data: itemData, link });\n      }\n\n      if (newItems.length) {\n        const itemsCreationData = newItems.sort((a, b) => a.link.level - b.link.level).map((o) => o.data);\n        // Put new items at end of their types\n        const _typeSorting = {};\n        for (const item of itemsCreationData) {\n          _typeSorting[item.type] ??= actor.itemTypes[item.type].sort((a, b) => b.sort - a.sort)[0]?.sort ?? 0;\n          _typeSorting[item.type] += CONST.SORT_INTEGER_DENSITY;\n          item.sort = _typeSorting[item.type];\n        }\n        const items = await actor.createEmbeddedDocuments(\"Item\", itemsCreationData);\n\n        const classAssociations = {};\n        const updateData = { flags: { pf1: { links: { classAssociations } } } };\n        for (const item of items) {\n          const link = sources.get(item.getFlag(\"core\", \"sourceId\"));\n\n          // Set class association flags\n          classAssociations[item.id] = link?.level ?? 1;\n        }\n\n        await this.update(updateData, { render: false });\n      }\n    }\n\n    // Remove items associated to this class\n    if (newLevel < curLevel) {\n      const associations = foundry.utils.deepClone(this.getFlag(\"pf1\", \"links.classAssociations\") || {});\n\n      const itemIds = [];\n      for (const [id, level] of Object.entries(associations)) {\n        const item = actor.items.get(id);\n        if (!item) {\n          delete associations[id];\n          continue;\n        }\n\n        if (level > newLevel) {\n          itemIds.push(item.id);\n          delete associations[id];\n        }\n      }\n\n      if (event !== \"delete\") await this.setFlag(\"pf1\", \"links.classAssociations\", associations);\n\n      await Item.implementation.deleteDocuments(itemIds, { parent: actor });\n    }\n\n    // Call level change hook\n    Hooks.callAll(\"pf1ClassLevelChange\", this.actor, this, curLevel, newLevel);\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n    const itemData = this.system;\n    // Reset cached HD/MT\n    // Can't prepare here as the actor uses this info before item preparation is done.\n    itemData.hitDice = undefined;\n    itemData.mythicTier = undefined;\n\n    // Soft fill default casting details when missing\n    if (itemData.casting?.type) {\n      itemData.casting.progression ??= \"high\";\n      itemData.casting.ability ??= \"int\";\n      itemData.casting.spells ??= \"arcane\";\n      itemData.casting.domainSlots ??= 1;\n      itemData.casting.cantrips ??= true;\n    }\n  }\n\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const itemData = this.system;\n\n    const useFractional = game.settings.get(\"pf1\", \"useFractionalBaseBonuses\");\n\n    // Prepare class base save\n    {\n      const saveFormulas = useFractional\n        ? pf1.config.classFractionalSavingThrowFormulas\n        : pf1.config.classSavingThrowFormulas;\n\n      for (const save of Object.keys(pf1.config.savingThrows)) {\n        const classType = itemData.subType || \"base\";\n        let formula;\n        const saveData = itemData.savingThrows[save];\n        const saveType = saveData.value;\n        if (saveType === \"custom\") {\n          formula = saveData.custom || \"0\";\n        } else {\n          formula = saveFormulas[classType][saveType];\n        }\n        if (formula == null) formula = \"0\";\n        const total = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n        saveData.base = total;\n        if (useFractional) saveData.good = saveFormulas[classType].goodSave === true && saveType === \"high\";\n      }\n    }\n\n    // Prepare BAB\n    {\n      const babFormulas = useFractional ? pf1.config.classFractionalBABFormulas : pf1.config.classBABFormulas;\n\n      const babType = itemData.bab;\n      let formula;\n      if (babType === \"custom\") {\n        formula = itemData.babFormula || \"0\";\n      } else {\n        formula = babFormulas[babType] || \"0\";\n      }\n      itemData.babBase = RollPF.safeRollSync(formula, { level: itemData.level, hitDice: this.hitDice }).total;\n    }\n\n    // Feed info back to actor\n    // Unlinked actors sometimes call item prep when actor isn't prepped and they're lacking .system\n    if (this.actor?.system) this._registerOnActor();\n  }\n\n  _registerOnActor() {\n    const actor = this.actor;\n    if (!actor.classes) return; // actor prep has not run for some reason (unlinked actor)\n\n    const actorData = actor.system,\n      itemData = this.system;\n\n    // Don't record a link of tag is missing or empty.\n    if (!itemData.tag) return void console.error(\"Class doesn't have a tag\", this);\n\n    if (!itemData.subType) console.warn(`${this.name} lacks class type`, this);\n\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\").getClassHD(this);\n\n    const isBaseClass = (itemData.subType || \"base\") === \"base\";\n\n    actor.classes[itemData.tag] = {\n      _id: this.id,\n      level: itemData.level,\n      unlevel: itemData.level,\n      name: this.name,\n      hd: itemData.hd,\n      hitDice: this.hitDice,\n      mythicTier: this.mythicTier,\n      bab: itemData.bab,\n      hp: healthConfig.auto,\n      savingThrows: {\n        fort: itemData.savingThrows.fort.base,\n        ref: itemData.savingThrows.ref.base,\n        will: itemData.savingThrows.will.base,\n      },\n      fc: {\n        hp: isBaseClass ? itemData.fc.hp.value : 0,\n        skill: isBaseClass ? itemData.fc.skill.value : 0,\n        alt: isBaseClass ? itemData.fc.alt.value : 0,\n      },\n    };\n  }\n\n  get hitDice() {\n    const itemData = this.system;\n    if (itemData.hitDice === undefined) {\n      if (itemData.subType === \"mythic\") {\n        itemData.hitDice = 0;\n      } else if (itemData.customHD?.length > 0) {\n        const rollData = { item: { level: this.system.level } };\n        itemData.hitDice = RollPF.safeRollSync(itemData.customHD, rollData).total;\n      } else {\n        itemData.hitDice = itemData.level;\n      }\n    }\n\n    return itemData.hitDice;\n  }\n\n  get mythicTier() {\n    const itemData = this.system;\n    if (itemData.mythicTier === undefined) {\n      itemData.mythicTier = this.subType === \"mythic\" ? itemData.level : 0;\n    }\n    return itemData.mythicTier;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  getLabels({ rollData } = {}) {\n    const labels = super.getLabels({ rollData });\n\n    const itemData = this.system;\n    labels.subType = pf1.config.classTypes[itemData.subType];\n\n    labels.bab = pf1.config.classBAB[itemData.bab];\n    labels.saves = {\n      fort: pf1.config.classSavingThrows[itemData.savingThrows?.fort?.value],\n      ref: pf1.config.classSavingThrows[itemData.savingThrows?.ref?.value],\n      will: pf1.config.classSavingThrows[itemData.savingThrows?.will?.value],\n    };\n\n    labels.hitDie = itemData.hd;\n    if (itemData.subType !== \"mythic\") labels.hitDie = game.i18n.format(\"PF1.DieSize\", { size: itemData.hd });\n\n    labels.hasFCB = itemData.fc?.hp > 0 || itemData.fc?.skill > 0 || itemData.fc?.alt > 0;\n\n    return labels;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\n/**\n * Abstract class for physical items.\n */\nexport class ItemPhysicalPF extends ItemPF {\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.diff === false || context.recursive === false) return;\n\n    // No system changes\n    if (!changed.system) return;\n\n    await this._resetChargesOnQuantityUpdate(changed);\n  }\n\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  static system = Object.freeze(foundry.utils.mergeObject(super.system, { isPhysical: true }, { inplace: false }));\n\n  _preUpdateNumericValueGuard(system) {\n    super._preUpdateNumericValueGuard(system);\n\n    if (system.quantity !== undefined && (!Number.isSafeInteger(system.quantity) || system.quantity < 0)) {\n      system.quantity = 0;\n    }\n    if (system.price !== undefined && !Number.isFinite(system.price)) {\n      system.price = 0;\n    }\n    if (system.unidentified?.price !== undefined && !Number.isFinite(system.unidentified.price)) {\n      system.unidentified.price = 0;\n    }\n    if (system.hardness !== undefined && (!Number.isSafeInteger(system.hardness) || system.hardness < 0)) {\n      system.hardness = 0;\n    }\n    if (system.hp?.value !== undefined && !Number.isSafeInteger(system.hp.value)) {\n      system.hp.value = 0;\n    }\n    if (system.hp?.max !== undefined && (!Number.isSafeInteger(system.hp.max) || system.hp.max < 0)) {\n      system.hp.max = 0;\n    }\n  }\n\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    // Items for NPC should be unidentified by default\n    if (this.actor?.type === \"npc\" && data.system?.identified === undefined) {\n      this.updateSource({ \"system.identified\": false });\n    }\n  }\n\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.equipped === true) {\n      this.executeScriptCalls(\"equip\", { equipped: true });\n    }\n\n    // Quantity change\n    const quantity = this.system.quantity || 0;\n    if (quantity > 0) {\n      this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: 0, new: quantity } });\n    }\n  }\n\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'equip' script calls\n    const equipped = changed.system?.equipped;\n    if (equipped != null) {\n      this.executeScriptCalls(\"equip\", { equipped });\n    }\n\n    // Call 'changeQuantity' script calls\n    const oldQuantity = this._memoryVariables?.quantity;\n    if (oldQuantity !== undefined) {\n      const quantity = {\n        previous: oldQuantity,\n        new: this.system.quantity,\n      };\n\n      if (quantity.new != null && quantity.new !== quantity.previous) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.equipped === true) {\n        this.executeScriptCalls(\"equip\", { equipped: false });\n      }\n\n      if (this.system.quantity > 0) {\n        this.executeScriptCalls(\"changeQuantity\", { quantity: { previous: this.system.quantity, new: 0 } });\n      }\n    }\n  }\n\n  /**\n   * Reset charges when quantity is changed to simulate a stack.\n   *\n   * - If charges are 0\n   * - ... and quantity is reduced, reset to max\n   *\n   * @param {object} changed\n   */\n  async _resetChargesOnQuantityUpdate(changed) {\n    // Don't care if charges are linked\n    if (this.links.charges) return;\n\n    // Only if quantity changed\n    const newQuantity = changed.system.quantity;\n    if (newQuantity === undefined) return;\n    // Don't touch if quantity is increased or remains the same\n    if ((newQuantity || 0) >= (this.system.quantity || 0)) return;\n\n    // Avoid overwriting value if the update is modifying it.\n    if (changed.system.uses?.value !== undefined) return;\n\n    const oldUses = this.system.uses ?? {};\n    if (oldUses.per && oldUses.value === 0 && oldUses.max > 0) {\n      const update = await this.recharge({ period: \"any\", commit: false });\n      if (update) {\n        changed.system.uses ??= {};\n        changed.system.uses.value = update.system.uses.value;\n      }\n    }\n  }\n\n  prepareBaseData() {\n    // Set visible name\n    if (this.showUnidentifiedData) {\n      this.name = this.system.unidentified?.name || this._source.name;\n    } else {\n      this.name = this._source.name;\n    }\n\n    // Ensure some base data has values\n    this.system.size ||= \"med\";\n    this.system.weight ??= {};\n    this.system.weight.value ||= 0;\n    this.system.quantity ||= 0;\n\n    super.prepareBaseData();\n\n    const itemData = this.system;\n    // Init base weight values in case they're missing.\n    itemData.weight ??= {};\n    itemData.weight.value ??= 0;\n    itemData.weight.total = 0;\n    itemData.weight.converted ??= {};\n  }\n\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    this.prepareWeight();\n\n    // Physical items\n    if (this.isPhysical && this.showUnidentifiedData) {\n      // Set unidentified description for players\n      this.system.description.value = this.system.description.unidentified;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async setActive(active, context) {\n    return this.update({ \"system.equipped\": active }, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Determines if the item is equipped.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.equipped || false;\n  }\n\n  /**\n   * Prepare this item's {@link ItemWeightData}\n   */\n  prepareWeight() {\n    const itemData = this.system;\n    const weight = itemData.weight;\n\n    // Adjust base weight\n    // Altering weight.value directly will corrupt the weight\n    const baseWeight = weight.value * this.getWeightMultiplier();\n\n    weight.total ||= 0; // In case item subclass didn't prepare it\n    weight.total += baseWeight * itemData.quantity;\n\n    // Convert weight according metric system (lb vs kg)\n    weight.converted.value = pf1.utils.convertWeight(baseWeight);\n    weight.converted.total = pf1.utils.convertWeight(weight.total);\n  }\n\n  /**\n   * Return weight multiplier affecting this item.\n   *\n   * Such as item size dictating how heavy an armor is.\n   *\n   * @returns {number} - Multiplier, 1 for most items regardless of size.\n   */\n  getWeightMultiplier() {\n    return 1;\n  }\n\n  // Generic weight scaling\n  // For use with getWeightMultiplier() across item types\n  _getArmorWeightMultiplier() {\n    // Scale weight for weapons, armor and shields\n    const actorSize = this.actor?.system.traits?.size;\n    const itemSize = this.system.size || \"med\";\n    const size = this.system.resizing ? actorSize || itemSize : itemSize;\n    const mult = pf1.config.armorWeight[size];\n    return mult ?? 1;\n  }\n\n  /**\n   * Returns the displayed value of an item according to multiple options\n   *\n   * @param {object} [options] - Various optional parameters affecting value calculations\n   * @param {boolean} [options.recursive=true] - Whether the value of contained items should be included\n   * @param {number} [options.sellValue=0.5] - The sell value multiplier\n   * @param {boolean} [options.inLowestDenomination=false] - Whether the value should be returned in the lowest denomination\n   * @param {boolean} [options.forceUnidentified=false] - Override whether the value should use the unidentified price\n   * @param {boolean} [options.single=false] - Return value of singular item instead of the actual stack. Disables recursive option.\n   * @param {boolean} [options.identical=false] - Treat all items in stack as identical (same number of charges).\n   * @param {boolean} [options.maximized=false] - Pretend as if the items were fresh  (full charges)\n   * @returns {number} The item's value\n   */\n  getValue({\n    recursive = true,\n    sellValue = 0.5,\n    inLowestDenomination = false,\n    forceUnidentified = false,\n    single = false,\n    identical = false,\n    maximized = false,\n  } = {}) {\n    if (single) recursive = false;\n\n    const hasFiniteCharges = this.hasFiniteCharges;\n    const maxChargesValue = hasFiniteCharges ? this.maxCharges : 0;\n    const remainingCharges = hasFiniteCharges ? (maximized ? maxChargesValue : this.charges) : 0;\n\n    const getActualValue = (identified = true, maxCharges = false) => {\n      let value = 0;\n      if (identified) value = this.system.price || 0;\n      else value = this.system.unidentified?.price || 0;\n\n      // Add charge price\n      if (identified && hasFiniteCharges) {\n        let charges = maxCharges ? maxChargesValue : remainingCharges;\n        if (!Number.isFinite(charges) || charges < 0) charges = 0;\n        value += (this.system.uses?.pricePerUse ?? 0) * charges;\n      }\n\n      if (inLowestDenomination) value *= 100;\n      if (this.isBroken) value *= 0.75; // TODO: Make broken value configurable\n      if (this.system.timeworn) {\n        if (hasFiniteCharges && remainingCharges === 0) value *= 0.01;\n        else value *= 0.5;\n      }\n      return value;\n    };\n\n    // Increase value by quantity\n    const isIdentified = forceUnidentified ? false : !this.showUnidentifiedData;\n    const quantity = single ? 1 : this.system.quantity || 0;\n    let result = getActualValue(isIdentified);\n    if (quantity > 1) {\n      // If charged item, add rest of the stack as if they had full charges\n      if (hasFiniteCharges && identical !== true) result += getActualValue(isIdentified, true) * (quantity - 1);\n      // Otherwise just multiply\n      else result *= quantity;\n    }\n\n    // Modify sell value\n    if (!(this.type === \"loot\" && [\"tradeGoods\", \"treasure\"].includes(this.subType))) result *= sellValue;\n\n    return result;\n  }\n\n  /**\n   * @remarks\n   * Checks if the item is equipped and has quantity.\n   * @inheritDoc\n   */\n  get canUse() {\n    return this.system.equipped && this.system.quantity > 0;\n  }\n\n  /**\n   * @type {boolean} - Broken state\n   */\n  get isBroken() {\n    if (this.system.broken) return true;\n\n    const hp = this.system.hp ?? {};\n    const hpMax = hp.max ?? 0;\n    if (hpMax > 0) {\n      const hpCur = hp.value ?? 0;\n      const brokenThreshold = Math.floor(hpMax / 2);\n      return hpCur <= Math.floor(hpMax / 2);\n    }\n\n    return false;\n  }\n\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const itemData = this.system;\n\n    // Equipped label\n    const checkYes = '<i class=\"fas fa-check\"></i>';\n    const checkNo = '<i class=\"fas fa-times\"></i>';\n    labels.equipped = \"\";\n    if (itemData.equipped === true) labels.equipped = checkYes;\n    else labels.equipped = checkNo;\n\n    // Carried label\n    labels.carried = \"\";\n    if (itemData.carried === true) labels.carried = checkYes;\n    else labels.carried = checkNo;\n\n    // Identified label\n    labels.identified = \"\";\n    if (itemData.identified === true) labels.identified = checkYes;\n    else labels.identified = checkNo;\n\n    return labels;\n  }\n\n  /**\n   * @remarks\n   * Identified state is the only thing that can alter the result.\n   * @override\n   * @inheritDoc\n   */\n  getName(forcePlayerPerspective = false) {\n    if (game.user.isGM && forcePlayerPerspective) {\n      if (this.system.identified === false) return this.system.unidentified?.name || this.name;\n    }\n    return this.name;\n  }\n\n  get showUnidentifiedData() {\n    return !game.user.isGM && this.system.identified === false;\n  }\n\n  getRollData() {\n    const result = super.getRollData();\n\n    // Overwrite broken state\n    result.item.broken = this.isBroken;\n\n    return result;\n  }\n}\n\n/**\n * @typedef {object} ItemWeightData\n * An item's `weight` data. The only property to be stored is `value`, from which all other values are derived.\n * @see {@link ItemPF.prepareWeight} for generation\n * @remarks A weight property is considered \"effective\" if it is the value that is added to its parent's weight.\n *          An item with a weight of 10 lbs in a container with 50% weight reduction would increase\n *          the container's effective `weight.total` by 5 lbs, but increases the container's `weight.contents` weight by 10 lbs.\n * @property {number} value - The weight of a single item instance, in lbs\n * @property {number} total - The effective total weight of the item (including quantity and contents), in lbs\n * @property {number} [currency] - Effective weight of contained currency for containers, in lbs\n * @property {number} [contents] - Weight of contained items and currency, in lbs\n * @property {object} converted - Weight of this item, converted to the current unit system\n * @property {number} converted.value - The weight of a single item instance, in world units\n * @property {number} converted.total - The effective total weight of the item (including quantity and contents), in world units\n * @property {number} [converted.contents] - Weight of contained items and currency, in world units\n */\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\nexport class ItemConsumablePF extends ItemPhysicalPF {\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n\n  /** @type {boolean} - If the item can be equipped currently */\n  get canEquip() {\n    return !this.inContainer;\n  }\n\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.consumableTypes[this.subType];\n\n    return labels;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\nexport class ItemContainerPF extends ItemPhysicalPF {\n  /**\n   * @override\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: true,\n  });\n\n  constructor(...args) {\n    super(...args);\n\n    this.items ??= null;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    // No system updates\n    if (!changed.system) return;\n\n    if (context.recursive === false || context.diff === false) return;\n\n    // Ensure contained item updates adhere to reason\n    const items = changed.system.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        await this._containedItemUpdate(itemId, itemData, items, context);\n      }\n    }\n  }\n\n  /**\n   * Handle conhtained item CRUD\n   *\n   * @internal\n   * @param {string} itemId - Item ID\n   * @param {object|null} itemData - Item's update data\n   * @param context\n   * @param {object} items - Parent's items update object\n   */\n  async _containedItemUpdate(itemId, itemData, items, context) {\n    // Deletion\n    if (itemId.startsWith(\"-=\")) {\n      /** @type {ItemPF} */\n      const oldItem = this.items.get(itemId.replace(/^-=/, \"\"));\n\n      if (oldItem) {\n        await oldItem._preDelete(context, game.user);\n        // TODO: Run pre-delete on everything contained by this\n      }\n      return;\n    }\n\n    /** @type {ItemPF} */\n    const oldItem = this.items.get(itemId);\n\n    let diff;\n    // Existing contained item\n    if (oldItem) {\n      await oldItem._preUpdate(itemData, context, game.user);\n      diff = oldItem.updateSource(itemData, { dryRun: true, fallback: false });\n      // Remove lingering .data if present, the above line prunes this out if done externally\n      if (\"data\" in this.system.items[itemId]) diff[\"-=data\"] = null;\n    }\n    // New contained item\n    else {\n      /** @type {ItemPF} */\n      const temp = new Item.implementation(itemData);\n      await temp._preCreate(itemData, context, game.user);\n      diff = temp.toObject();\n    }\n\n    items[itemId] = diff;\n  }\n\n  _onUpdate(changed, options, userId) {\n    // Call various document workflows for changed items\n    const items = changed.system?.items;\n    if (items) {\n      for (const [itemId, itemData] of Object.entries(items)) {\n        const item = this.items.get(itemId);\n        try {\n          if (itemId.startsWith(\"-=\")) {\n            // TODO: Item reference is no longer available for _onDelete workflow\n            // item._onDelete(options, userId);\n          } else if (itemData._id) {\n            item._onCreate(itemData, options, userId);\n          } else {\n            item._onUpdate(itemData, options, userId);\n          }\n        } catch (err) {\n          console.error(err, { parent: this, item });\n        }\n\n        // TODO: createDocument, deleteDocument, updateDocument hooks\n      }\n    }\n\n    super._onUpdate(changed, options, userId);\n  }\n\n  /** @inheritdoc */\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    // Set base weight to weight of coins, which can be calculated without knowing contained items\n    const weightReduction = (100 - (this.system.weight?.reduction?.percent ?? 0)) / 100;\n    this.system.weight.currency = this._calculateCoinWeight() * weightReduction;\n  }\n\n  prepareDerivedData() {\n    this._prepareInventory();\n\n    super.prepareDerivedData();\n  }\n\n  /**\n   * Prepare .items collection for contained items.\n   *\n   * @private\n   */\n  _prepareInventory() {\n    const prior = this.items;\n    const collection = new Collection();\n    this.system.items ??= {}; // Shim for items that haven't had template.json applied to them\n    for (const [itemId, itemData] of Object.entries(this.system.items)) {\n      try {\n        let item = prior?.get(itemId);\n        if (item) {\n          item.updateSource(new Item.implementation(itemData).toObject(), { recursive: false });\n        } else {\n          item = new Item.implementation(itemData, { parent: this.actor });\n          item.parentItem = this;\n        }\n        item.reset();\n        collection.set(itemId, item);\n      } catch (err) {\n        console.error(\"Error preparing contained item:\", { id: itemId, data: itemData }, this);\n        throw err;\n      }\n    }\n\n    this.items = collection;\n  }\n\n  /** @inheritDoc */\n  prepareWeight() {\n    this.system.weight ??= {};\n    /** @type {ItemWeightData} */\n    const weight = this.system.weight;\n    weight.total = 0; // Reset\n\n    // Percentile weight reduction\n    const weightMult = (100 - (weight.reduction?.percent || 0)) / 100;\n\n    const currencyWeight = this._calculateCoinWeight();\n    weight.currency = currencyWeight * weightMult;\n\n    // Total unreduced weight of contents\n    weight.contents = this.items.reduce((total, item) => total + item.system.weight.total, 0);\n    weight.contents += currencyWeight;\n\n    const reductionFlat = weight.reduction?.value ?? 0;\n    weight.total += Math.max(0, weight.contents * weightMult - reductionFlat);\n\n    weight.converted.reduction = pf1.utils.convertWeight(reductionFlat);\n    weight.converted.contents = pf1.utils.convertWeight(weight.contents);\n    weight.converted.currency = pf1.utils.convertWeight(weight.currency);\n\n    super.prepareWeight();\n  }\n\n  getContainerContent(itemId) {\n    return this.items.get(itemId);\n  }\n\n  /**\n   * @protected\n   * @param {object[]} itemData Item creation data\n   * @param itemsData\n   * @param {object} [options={}] Additional options\n   * @returns {Promise<this>} Promise to the updated document.\n   */\n  async createContainerContent(itemsData, options = { renderSheet: false }) {\n    itemsData = itemsData instanceof Array ? itemsData : [itemsData];\n\n    const itemOptions = deepClone(options);\n    const user = game.user;\n\n    const actuallyCreated = [];\n    const updateData = { system: { items: {} } };\n\n    // Iterate over data to create\n    for (const itemData of itemsData) {\n      // Find unique ID\n      do {\n        itemData._id = foundry.utils.randomID(16);\n      } while (this.system.items[itemData._id] !== undefined);\n\n      // Create temporary item\n      const item = new Item.implementation(itemData);\n\n      // Run pre-create workflow\n      let allowed = (await item._preCreate(itemData, options, game.user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(\"preCreateItem\", item, itemData, itemOptions, user.id);\n      if (allowed === false) {\n        console.debug(`${vtt} | Item creation prevented during pre-create`);\n        continue;\n      }\n\n      // Update _stats\n      item.updateSource({\n        _stats: {\n          coreVersion: game.version,\n          systemVersion: game.system.version,\n          createdTime: Date.now(),\n          lastModifiedBy: user.id,\n        },\n      });\n\n      updateData.system.items[itemData._id] = item.toObject();\n      actuallyCreated.push(itemData._id);\n    }\n\n    await this.update(updateData, { pf1: { createContained: actuallyCreated } });\n\n    // Mimic createEmbeddedDocuments()\n    const created = this.items.filter((i) => actuallyCreated.includes(i.id));\n    if (options.renderSheet) created.forEach((i) => i.sheet.render(true));\n    return created;\n  }\n\n  async deleteContainerContent(data, context = {}) {\n    const ids = new Set(data instanceof Array ? data : [data]);\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n\n    const updateData = { system: { items: {} } };\n\n    const actuallyDeleted = [];\n\n    // Iterate over data to delete\n    for (const id of ids) {\n      const item = this.items.get(id);\n\n      // Run pre-delete workflow\n      let allowed = (await item._preDelete(context, user)) ?? true;\n      allowed &&= context.noHook || Hooks.call(`preDelete${embeddedName}`, item, context, user.id);\n      if (allowed === false) {\n        console.debug(`${vtt} | ${embeddedName} deletion prevented during pre-delete`);\n        continue;\n      }\n\n      updateData.system.items[`-=${id}`] = null;\n      actuallyDeleted.push(id);\n    }\n\n    await this.update(updateData, { pf1: { removeContained: actuallyDeleted } });\n  }\n\n  async updateContainerContents(data) {\n    data = data instanceof Array ? data : [data];\n\n    const embeddedName = \"ContainerContent\";\n    const user = game.user;\n    const options = { diff: true };\n\n    const actuallyUpdated = [];\n    const updateData = { system: { items: {} } };\n\n    // Difference each update against existing data\n    for (const changes of data) {\n      if (!changes._id) throw new Error(\"You must provide an id for every Embedded Document in an update operation\");\n\n      const item = this.items.get(changes._id);\n\n      let diff = {};\n      try {\n        diff = item.updateSource(changes, { dryRun: true, fallback: false });\n      } catch (err) {\n        console.error(err);\n        continue;\n      }\n\n      // Run pre-update workflow\n      let allowed = (await item._preUpdate(diff, options, user)) ?? true;\n      allowed &&= options.noHook || Hooks.call(`preUpdate${embeddedName}`, item, diff, options, user.id);\n      if (allowed === false) {\n        console.debug(`${vtt} | ${embeddedName} update prevented during pre-update`);\n        continue;\n      }\n\n      diff._stats = {\n        coreVersion: game.version,\n        systemVersion: game.system.version,\n        modifiedTime: Date.now(),\n        lastModifiedBy: user.id,\n      };\n\n      updateData.system.items[changes._id] = diff;\n      actuallyUpdated.push(changes._id);\n    }\n\n    await this.update(updateData, { pf1: { updateContained: actuallyUpdated } });\n  }\n\n  /**\n   * Returns the currency this item contains\n   *\n   * @param {object} [options] - Additional options affecting how the value is returned\n   * @param {boolean} [options.inLowestDenomination=false] - Whether to return the value in copper, or in gold (default)\n   * @returns {number} The total amount of currency this item contains, in gold pieces\n   */\n  getTotalCurrency({ inLowestDenomination = false } = {}) {\n    const currency = this.system.currency || {};\n    const total = (currency.pp || 0) * 1000 + (currency.gp || 0) * 100 + (currency.sp || 0) * 10 + (currency.cp || 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Converts currencies to the given currency type\n   *\n   * @param {CoinType} type - Converts as much currency as possible to this type.\n   * @returns {Promise<this>} The updated item\n   */\n  convertCurrency(type = \"pp\") {\n    const cp = this.getTotalCurrency({ inLowestDenomination: true });\n\n    const currency = pf1.utils.currency.convert(cp, type);\n\n    return this.update({ system: { currency } });\n  }\n\n  /**\n   * @returns {number} Weight of coins on the item.\n   * @private\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /** @inheritdoc */\n  getValue({ recursive = false, inLowestDenomination = false, ...options } = {}) {\n    if (options.single) recursive = false;\n    const fullOptions = { recursive, inLowestDenomination, ...options };\n    let result = super.getValue(fullOptions);\n\n    if (!recursive) return result;\n\n    // Add item's contained currencies at full value\n    result += this.getTotalCurrency({ inLowestDenomination });\n\n    // Add item's content items' values\n    this.items.forEach((i) => {\n      result += i.getValue(fullOptions);\n    });\n\n    return result;\n  }\n\n  async getChatData({ chatcard, rollData } = {}) {\n    const context = await super.getChatData({ chatcard, rollData });\n    // Get contents value\n    const cpValue =\n      this.getValue({ sellValue: 1, recursive: true, inLowestDenomination: true }) -\n      this.getValue({ sellValue: 1, recursive: false, inLowestDenomination: true });\n    const totalValue = pf1.utils.currency.split(cpValue);\n    const value =\n      game.i18n.localize(\"PF1.Containers.Contents.Value\") + \": \" + game.i18n.format(\"PF1.SplitValue\", totalValue);\n    context.properties.push(value);\n    const currency = { ...this.system.currency };\n    currency.gp ||= 0;\n    currency.gp += currency.pp * 10;\n    const coins = game.i18n.localize(\"PF1.Currency.Label\") + \": \" + game.i18n.format(\"PF1.SplitValue\", currency);\n    context.properties.push(coins);\n\n    return context;\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\nexport class ItemEquipmentPF extends ItemPhysicalPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Set equipment subtype and slot\n    const type = changed.system?.subType;\n    if (type !== undefined && type !== this.subType) {\n      // Set subtype\n      const subtype = changed.system?.equipmentSubtype ?? this.system.equipmentSubtype ?? \"\";\n      const subtypes = Object.keys(pf1.config.equipmentTypes[type] ?? {}).filter((o) => !o.startsWith(\"_\"));\n\n      // Current subtype is not valid for current type\n      if (!subtypes.includes(subtype)) {\n        // Clear if no subtypes exist\n        if (subtypes.length === 0) {\n          changed.system.equipmentSubtype = \"\";\n        }\n        // Set to first subtype if no valid subtype is set\n        else if (subtypes.length > 0) {\n          changed.system.equipmentSubtype = subtypes[0];\n        }\n      }\n\n      // Set slot\n      const slot = changed.system?.slot ?? this.system.slot ?? \"\";\n      const slotType = type === \"other\" ? \"wondrous\" : type; // Fix \"other\" item default slot type\n      const slotTypes = Object.keys(pf1.config.equipmentSlots[slotType] ?? {});\n      if (!slot || !slotTypes.includes(slot)) {\n        changed.system.slot = slotTypes[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const itemData = this.system;\n\n    let eType = this.subType;\n    const typeKeys = Object.keys(pf1.config.equipmentTypes);\n    if (!typeKeys.includes(eType)) eType = typeKeys[0];\n\n    let eSubtype = this.system.equipmentSubtype;\n    const subtypeKeys = Object.keys(pf1.config.equipmentTypes[eType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(eSubtype)) eSubtype = subtypeKeys[0];\n\n    const showIdentified = !this.showUnidentifiedData;\n\n    const subtypeLabels = pf1.config.equipmentTypes[eType];\n    labels.subType = subtypeLabels._label;\n    if (showIdentified) {\n      labels.childType = subtypeLabels[eSubtype];\n    } else {\n      // Obfuscate wondrous as other\n      if (this.subType === \"wondrous\") labels.subType = pf1.config.equipmentTypes.other._label;\n    }\n\n    if ([\"armor\", \"shield\"].includes(this.subType) && labels.childType) {\n      labels.childTypeDistinct = true;\n    }\n\n    let ac = itemData.armor.value || 0;\n    if (showIdentified) ac += itemData.armor?.enh || 0;\n\n    if (ac > 0) {\n      labels.armor = `${ac} ${game.i18n.localize(\"PF1.ACNormal\")}`;\n      labels.armorValue = ac;\n    }\n\n    const acp = itemData.armor?.acp || 0;\n    if (acp > 0) {\n      labels.acp = true;\n      labels.acpEffective = Math.max(0, acp + (itemData.masterwork ? -1 : 0));\n    }\n    const mdex = itemData.armor?.dex ?? null;\n    if (Number.isFinite(mdex)) labels.mdex = true;\n\n    if (this.hasSlots) {\n      if (this.subType === \"armor\") {\n        labels.slot = pf1.config.equipmentSlots.armor.armor;\n      } else if (this.subType === \"shield\") {\n        labels.slot = pf1.config.equipmentSlots.shield.shield;\n      } else if (this.subType === \"clothing\") {\n        labels.slot = pf1.config.equipmentSlots.clothing.clothing;\n      } else {\n        labels.slot = pf1.config.equipmentSlots.wondrous[itemData.slot];\n      }\n    }\n\n    return labels;\n  }\n\n  /**\n   * Adjust item while in container.\n   */\n  adjustContained() {\n    super.adjustContained();\n\n    // Everything in containers count as carried\n    this.system.carried = true;\n\n    // Auto-unequip\n    if (!this.canEquip) this.system.equipped = false;\n  }\n\n  /** @type {boolean} - If the item can be equipped currently */\n  get canEquip() {\n    // Always true if not in container\n    if (!this.inContainer) return true;\n\n    switch (this.subType) {\n      case \"armor\":\n      case \"shield\":\n      case \"clothing\":\n        return false;\n      case \"wondrous\":\n      case \"other\":\n        return this.system.slot === \"slotless\";\n    }\n    return true;\n  }\n\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const itemData = this.system;\n\n    // Add enhancement bonus\n    itemData.armor.enh ??= 0;\n\n    const enh = itemData.armor.enh || 0;\n    itemData.armor.total = (itemData.armor.value || 0) + enh;\n\n    // Feed info back to actor\n    if (itemData.equipped !== false) {\n      this.applyEquippedEffects();\n    }\n  }\n\n  /**\n   * Apply effects of equipping this item.\n   */\n  applyEquippedEffects() {\n    const itemData = this.system;\n\n    if (!this.isActive) return;\n\n    const actor = this.actor;\n    // Guard against weirdness with unlinked data (data is undefined at this state), and also basic test for if this item has actor.\n    if (!actor?.system || !actor?.equipment) return;\n\n    switch (this.subType) {\n      case \"shield\": {\n        const shieldTypes = pf1.config.shieldTypes;\n        const subtype = itemData.equipmentSubtype;\n        let shieldType = actor.equipment.shield.type;\n        if (subtype === \"other\" && shieldType < shieldTypes.other) shieldType = shieldTypes.other;\n        else if (subtype === \"lightShield\" && shieldType < shieldTypes.light) shieldType = shieldTypes.light;\n        else if (subtype === \"heavyShield\" && shieldType < shieldTypes.heavy) shieldType = shieldTypes.heavy;\n        else if (subtype === \"towerShield\" && shieldType < shieldTypes.tower) shieldType = shieldTypes.tower;\n        if (actor.equipment.shield.type !== shieldType) {\n          actor.equipment.shield.type = shieldType;\n          actor.equipment.shield.id = this.id;\n        }\n        break;\n      }\n      case \"armor\": {\n        const armorTypes = pf1.config.armorTypes;\n        const subtype = itemData.equipmentSubtype;\n        let armorType = actor.equipment.armor.type;\n        if (subtype === \"lightArmor\" && armorType < armorTypes.light) armorType = armorTypes.light;\n        else if (subtype === \"mediumArmor\" && armorType < armorTypes.medium) armorType = armorTypes.medium;\n        else if (subtype === \"heavyArmor\" && armorType < armorTypes.heavy) armorType = armorTypes.heavy;\n        if (armorType !== actor.equipment.armor.type) {\n          actor.equipment.armor.type = armorType;\n          actor.equipment.armor.id = this.id;\n        }\n        break;\n      }\n    }\n  }\n\n  /**\n   * Does the equipment subtype use slots.\n   *\n   * @type {boolean}\n   */\n  get hasSlots() {\n    return [\"wondrous\", \"other\"].includes(this.subType);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @remarks Supports both weapon and armor proficiencies.\n   */\n  getProficiency(weapon = true) {\n    if (weapon) return this.isProficient;\n\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    const actor = this.actor;\n    if (!actor) return true; // No actor, so always proficient\n\n    return actor.hasArmorProficiency(this);\n  }\n\n  /**\n   * @type {string} - Matching base proficiency for the armor or shield type.\n   * @since PF1 v10\n   */\n  get baseArmorProficiency() {\n    const subType = this.subType;\n    if (![\"armor\", \"shield\"].includes(subType)) throw new Error(`\"${subType}\" does not support proficiency`);\n\n    // Item type to proficiency maps\n    const proficiencyMaps = {\n      armor: {\n        lightArmor: \"lgt\",\n        mediumArmor: \"med\",\n        heavyArmor: \"hvy\",\n      },\n      shield: {\n        other: \"shl\", // buckler\n        lightShield: \"shl\",\n        heavyShield: \"shl\",\n        towerShield: \"twr\",\n      },\n    };\n\n    return proficiencyMaps[subType][this.system.equipmentSubtype] ?? null;\n  }\n\n  /**\n   * @see {@link https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor}\n   *\n   * @inheritdoc\n   * @remarks - Only armor and shields get anything besides 1.\n   * @since PF1 v10\n   */\n  getWeightMultiplier() {\n    if (![\"armor\", \"shield\"].includes(this.subType)) return 1;\n\n    return this._getArmorWeightMultiplier();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\nexport class ItemFeatPF extends ItemPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {User} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.isActive) {\n        this.executeScriptCalls(\"toggle\", { state: false });\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async setActive(active, context) {\n    return this.update({ \"system.disabled\": !active }, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isActive() {\n    return this.system.disabled !== true;\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const { subType, abilityType } = this.system;\n\n    labels.subType = pf1.config.featTypes[subType];\n    labels.featType = pf1.config.featTypes[subType];\n\n    labels.abilityType = pf1.config.abilityTypes[this.system.abilityType]?.short;\n    labels.traitType = pf1.config.traitTypes[this.system.traitType];\n\n    // Ability type\n    if (abilityType && abilityType !== \"none\") {\n      labels.abilityType = pf1.config.abilityTypes[abilityType].short;\n      labels.abilityTypeLong = pf1.config.abilityTypes[abilityType].long;\n    } else if (labels.abilityType) {\n      delete labels.abilityType;\n    }\n\n    return labels;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    super.getTypeChatData(data, labels, props, rollData);\n    // Add ability type label\n    if (labels.abilityType) {\n      props.push(labels.abilityType);\n    }\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\nexport class ItemLootPF extends ItemPhysicalPF {\n  get extraType() {\n    return this.system.extraType;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    //\n    if (changed.flags?.pf1?.abundant !== undefined) {\n      foundry.utils.logCompatibilityWarning(\"flags.pf1.abundant is deprecated in favor of system.abundant\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n      changed.system.abundant = changed.flags.pf1.abundant;\n      delete changed.flags.pf1.abundant;\n    }\n\n    // Reset loot extra type when loot subtype is changed\n    if (\n      changed.system?.subType !== undefined &&\n      changed.system?.subType !== this.system.subType &&\n      changed.system?.extraType === undefined\n    ) {\n      changed.system.extraType = \"\";\n    }\n  }\n\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    if (!this.showUnidentifiedData) {\n      labels.subType = pf1.config.lootTypes[this.subType];\n    }\n\n    return labels;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isActive() {\n    const hp = this.system.hp?.value || 0;\n    if (hp <= 0) return false; // Destroyed\n    if (this.system.quantity <= 0) return false;\n    if (pf1.config.unequippableLoot.includes(this.subType)) return true;\n    return this.system.equipped ?? false;\n  }\n\n  /**\n   * Make ammo count inherently as single use.\n   *\n   * @inheritDoc\n   */\n  get isSingleUse() {\n    return this.subType === \"ammo\" || super.isSingleUse;\n  }\n\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.carried = true;\n\n    this.system.equipped = false;\n  }\n\n  /** @type {boolean} - If the item can be equipped currently */\n  get canEquip() {\n    return !this.inContainer;\n  }\n}\n","import { ItemPF } from \"./item-pf.mjs\";\n\nexport class ItemRacePF extends ItemPF {\n  /**\n   * @override\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n\n    // Overwrite race\n    if (actor) {\n      const oldRace = actor.itemTypes.race.find((r) => r !== this);\n      if (oldRace) {\n        const oldSize = oldRace.system.size;\n        await oldRace.delete();\n\n        const context = {};\n        // Ensure actor size is updated to match the race, but only if it's same as old race\n        const actorSize = actor.system.traits.size;\n        if (actorSize !== this.system.size && oldSize === actorSize) context._pf1SizeChanged = true;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    const actor = this.actor;\n    if (actor?.type === \"basic\") return;\n\n    // Track size change\n    const newSize = changed.system?.size;\n    if (actor && newSize !== undefined) {\n      const oldSize = actor.system.traits?.size;\n      if (this.system.size === oldSize && newSize !== oldSize) {\n        context._pf1SizeChanged = true;\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data Creation data\n   * @param {object} context Create context\n   * @param {string} userId User ID\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (game.user.id !== userId) return;\n\n    // Update owning actor speed to match racial speed.\n    // TODO: Make this derived data on the actor instead, eliminating the update.\n    if (this.actor) {\n      const speedUpdates = {};\n      for (const [key, value] of Object.entries(this.system.speeds ?? {})) {\n        speedUpdates[key] = { base: value };\n      }\n      if (this.system.speeds?.fly > 0) {\n        speedUpdates.fly.maneuverability = this.system.speeds.flyManeuverability || \"average\";\n      }\n      this.actor.update({\n        \"system.attributes.speed\": speedUpdates,\n      });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(data, context, userId) {\n    super._onUpdate(data, context, userId);\n\n    const actor = this.actor;\n    // Change actor size if the old size is same as old race size.\n    if (actor && context._pf1SizeChanged && game.user.id === userId) {\n      actor.update({ \"system.traits.size\": this.system.size });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.user.id !== userId) return;\n\n    const actor = this.actor;\n    if (actor?.itemTypes.race.length === 0) {\n      // Reset some race dependant details\n      actor.update({\n        \"system.attributes.speed\": {\n          \"land.base\": 30,\n          \"fly.base\": 0,\n          \"fly.maneuverability\": \"average\",\n          \"swim.base\": 0,\n          \"climb.base\": 0,\n          \"burrow.base\": 0,\n        },\n      });\n    }\n  }\n\n  /**\n   * @remarks This item type can not be recharged.\n   * @override\n   */\n  recharge() {\n    return;\n  }\n}\n","/**\n * @typedef {typeof templatePaths[number]} CachedTemplatePath\n * A path to a template that has been cached as part of the partial preloading process.\n */\n\n/**\n * A list of template paths to pre-load\n *\n * @private\n */\nconst templatePaths = /** @type {const} */ ([\n  // Actor Sheet Partials\n  \"systems/pf1/templates/actors/parts/actor-summary.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-level.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-traits.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-inventory.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-features.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-spellbook.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills-front.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-skills.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-combat.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-defenses_tables.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-buffs.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-attributes.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-settings-ability-scores.hbs\",\n  \"systems/pf1/templates/actors/parts/actor-item-summary.hbs\",\n\n  \"systems/pf1/templates/internal/item-search.hbs\",\n\n  \"systems/pf1/templates/internal/table_magic-items.hbs\",\n\n  // Item Sheet Partials\n  \"systems/pf1/templates/items/parts/item-actions.hbs\",\n  \"systems/pf1/templates/items/parts/item-advanced.hbs\",\n  \"systems/pf1/templates/items/parts/item-alignments.hbs\",\n  \"systems/pf1/templates/items/parts/item-ammo.hbs\",\n  \"systems/pf1/templates/items/parts/item-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-base-types.hbs\",\n  \"systems/pf1/templates/items/parts/item-changes.hbs\",\n  \"systems/pf1/templates/items/parts/item-class-link.hbs\",\n  \"systems/pf1/templates/items/parts/item-contents.hbs\",\n  \"systems/pf1/templates/items/parts/item-description.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-inputs.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-sidebar-aura.hbs\",\n  \"systems/pf1/templates/items/parts/item-links.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials-addon.hbs\",\n  \"systems/pf1/templates/items/parts/item-materials.hbs\",\n  \"systems/pf1/templates/items/parts/item-name.hbs\",\n  \"systems/pf1/templates/items/parts/item-notes.hbs\",\n  \"systems/pf1/templates/items/parts/item-proficiencies.hbs\",\n  \"systems/pf1/templates/items/parts/item-conditions.hbs\",\n  \"systems/pf1/templates/items/parts/item-size.hbs\",\n  \"systems/pf1/templates/items/parts/item-tag.hbs\",\n  \"systems/pf1/templates/items/parts/item-tags.hbs\",\n  \"systems/pf1/templates/items/parts/item-weapon-groups.hbs\",\n  \"systems/pf1/templates/items/parts/spell-descriptors.hbs\",\n\n  \"systems/pf1/templates/internal/content-source-view.hbs\",\n\n  // Apps\n  \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n  \"systems/pf1/templates/apps/vision-sharing.hbs\",\n  \"systems/pf1/templates/apps/help-browser.hbs\",\n  \"systems/pf1/templates/apps/action-select.hbs\",\n  \"systems/pf1/templates/apps/item-select.hbs\",\n  \"systems/pf1/templates/apps/actor-select.hbs\",\n\n  // Item Action Partials\n  \"systems/pf1/templates/apps/item-action/action.hbs\",\n  \"systems/pf1/templates/apps/item-action/activation.hbs\",\n  \"systems/pf1/templates/apps/item-action/template.hbs\",\n  \"systems/pf1/templates/apps/item-action/conditionals.hbs\",\n\n  // Compendium browser partials\n  \"systems/pf1/templates/apps/compendium-browser/entries.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\",\n  \"systems/pf1/templates/apps/compendium-browser/minmax-filter.hbs\",\n\n  // Chat\n  \"systems/pf1/templates/chat/roll-ext.hbs\",\n  \"systems/pf1/templates/chat/defenses.hbs\",\n  \"systems/pf1/templates/chat/parts/gm-description.hbs\",\n\n  // Chat card partials\n  \"systems/pf1/templates/chat/parts/attack-roll-header.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-footer.hbs\",\n  \"systems/pf1/templates/chat/parts/attack-roll-targets.hbs\",\n\n  \"systems/pf1/templates/chat/parts/item-notes.hbs\",\n\n  // Internal Rendering Partials\n  \"systems/pf1/templates/internal/spell-description.hbs\",\n  \"systems/pf1/templates/internal/token-config_vision.hbs\",\n  \"systems/pf1/templates/internal/damage-type-visual.hbs\",\n\n  // Tooltip\n  \"systems/pf1/templates/hud/tooltip.hbs\",\n\n  \"systems/pf1/templates/hud/quick-actions.hbs\",\n\n  // Level Up sections\n  \"systems/pf1/templates/apps/level-up/health.hbs\",\n  \"systems/pf1/templates/apps/level-up/ability-score.hbs\",\n  \"systems/pf1/templates/apps/level-up/fcb.hbs\",\n  \"systems/pf1/templates/apps/level-up/summary.hbs\",\n\n  // Dynamic tooltips\n  \"systems/pf1/templates/extended-tooltip.hbs\",\n]);\n\n/**\n * Define a set of template paths to pre-load\n * Pre-loaded templates are compiled and cached for fast access when rendering\n *\n * @internal\n * @private\n * @returns {Promise<Function[]>} - A Promise resolving to an array of template functions\n */\nexport const preloadHandlebarsTemplates = async () => {\n  // Load the template parts\n  return loadTemplates(templatePaths);\n};\n\n/**\n * Synchronously render a cached Handlebars template using provided data.\n *\n * @internal\n * @private\n * @see {renderTemplate}\n * @param {CachedTemplatePath} path - The template identifier\n * @param {object} [data={}] - The data provided to the template\n * @returns {string} The rendered HTML\n * @throws {Error} If the requested template could not be found in the cache\n */\nexport const renderCachedTemplate = (path, data = {}) => {\n  /** @type {Handlebars.TemplateDelegate|undefined} */\n  const template = Handlebars.partials[path];\n  if (!template) throw new Error(`Template ${path} not found in cache`);\n\n  return template(data, {\n    allowProtoMethodsByDefault: true,\n    allowProtoPropertiesByDefault: true,\n    preventIndent: true,\n  });\n};\n","import { ItemPF } from \"./item-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\nimport { calculateRangeFormula } from \"@utils\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\nexport class ItemSpellPF extends ItemPF {\n  /**\n   * @override\n   * @inheritDoc\n   */\n  static system = Object.freeze({\n    ...super.system,\n    hasIdentifier: false,\n    hasChanges: false,\n  });\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data Creation data\n   * @param {object} options Context options\n   * @param {User} user Triggering user\n   */\n  async _preCreate(data, options, user) {\n    await super._preCreate(data, options, user);\n    this._assignLevelOnCreate(data, options);\n\n    // Handle preparation data creation\n    {\n      const prep = data.system.preparation ?? {};\n      const prepUpdate = {};\n      if (prep.maxAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.maxAmount is now preparation.max\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prepUpdate.max = prep.maxAmount;\n        prepUpdate[\"-=maxAmount\"] = null;\n      }\n      if (prep.preparedAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.preparedAmount is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prepUpdate.value = prep.preparedAmount;\n        prepUpdate[\"-=preparedAmount\"] = null;\n      }\n      if (prep.spontaneousPrepared !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.spontaneousPrepared is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prepUpdate.value = prep.spontaneousPrepared ? 1 : 0;\n        prepUpdate[\"-=spontaneousPrepared\"] = null;\n      }\n\n      // Add preparation\n      if (this.actor && prepUpdate.value === undefined) {\n        // Only spontaneous casters auto-prepare new spells\n        if (this.spellbook?.spellPreparationMode === \"spontaneous\") {\n          prepUpdate.value ??= 1;\n          prepUpdate.max ??= 1;\n        }\n      }\n\n      if (!foundry.utils.isEmpty(prepUpdate)) {\n        this.updateSource({ system: { preparation: prepUpdate } });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} options\n   * @param {User} user\n   */\n  async _preUpdate(changed, options, user) {\n    await super._preUpdate(changed, options, user);\n\n    if (!changed.system) return;\n\n    this._preparationPreUpdate(changed);\n\n    const prep = changed.system.preparation;\n    if (prep) {\n      if (prep.maxAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.maxAmount is now preparation.max\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prep.max = prep.maxAmount;\n        delete prep.maxAmount;\n      }\n      if (prep.preparedAmount !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.preparedAmount is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prep.value = prep.preparedAmount;\n        delete prep.preparedAmount;\n      }\n      if (prep.spontaneousPrepared !== undefined) {\n        foundry.utils.logCompatibilityWarning(\"ItemSpellPF preparation.spontaneousPrepared is now preparation.value\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n        prep.value = prep.spontaneousPrepared ? 1 : 0;\n        delete prep.spontaneousPrepared;\n      }\n    }\n  }\n\n  /**\n   * Constrains and alters prepared slot updates to result in meaningful end results.\n   *\n   * @private\n   * @param {object} changed Change data in pre-update\n   */\n  _preparationPreUpdate(changed) {\n    const prep = changed.system.preparation;\n    if (!prep) return;\n\n    const current = this.system.preparation;\n    const max = prep.max ?? current.max ?? 0;\n    const left = prep.value ?? current.value ?? 0;\n\n    // Constrain left and max to sane values\n    if (left > max) {\n      if (prep.max !== undefined) {\n        prep.value = max;\n      } else if (prep.value !== undefined) {\n        prep.max = left;\n      }\n    }\n\n    // TODO: Remove following once DataModel is implemented with relevant constraints\n    if (prep.max < 0) prep.max = 0;\n    if (prep.value < 0) prep.value = 0;\n  }\n\n  /**\n   * Assign spell level according to spellbook class if present.\n   *\n   * @protected\n   * @param {object} data Item data\n   * @param {object} options Creation options\n   */\n  _assignLevelOnCreate(data, options) {\n    const actor = this.actor;\n    const book = this.system.spellbook;\n    const cls = actor?.system.attributes?.spells?.spellbooks?.[book]?.class;\n    const level = this.system.learnedAt?.class?.[cls];\n    if (Number.isFinite(level)) this.updateSource({ \"system.level\": Math.clamped(level, 0, 9) });\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n    const itemData = this.system;\n\n    // Spell Level, School, and Components\n    labels.level = pf1.config.spellLevels[itemData.level];\n    labels.school = pf1.config.spellSchools[itemData.school];\n    labels.components = this.getSpellComponents({ compact: true }).join(\" \");\n\n    return labels;\n  }\n\n  /**\n   * Returns the spell's effective spell level, after counting in offsets.\n   *\n   * @deprecated\n   * @param {number} [bonus=0] - Another bonus to account for.\n   * @returns {number} The spell's effective spell level.\n   */\n  getEffectiveSpellLevel(bonus = 0) {\n    foundry.utils.logCompatibilityWarning(\n      `ItemSpellPF.getEffectiveSpellLevel() is deprecated. Use ItemSpellPF.spellLevel instead.`,\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return (this.spellLevel ?? 0) + bonus;\n  }\n\n  /**\n   * Returns the spell's effective caster level, after counting in offsets.\n   *\n   * @deprecated\n   * @param {number} [bonus=0] - Another bonus to account for.\n   * @returns {number} The spell's effective caster level.\n   */\n  getEffectiveCasterLevel(bonus = 0) {\n    foundry.utils.logCompatibilityWarning(\n      `ItemSpellPF.getEffectiveCasterLevel() is deprecated. Use ItemSpellPF.casterLevel instead.`,\n      { since: \"PF1 v10\", until: \"PF1 v11\" }\n    );\n\n    return (this.casterLevel ?? 0) + bonus;\n  }\n\n  preCreateData(data, options, user) {\n    const updates = super.preCreateData(data, options, user);\n\n    const actor = this.actor;\n    if (actor) {\n      // Swap non-psychic components for psychic ones\n      if (this.spellbook?.psychic === true) {\n        if (this.system.components?.verbal === true) {\n          updates[\"system.components.verbal\"] = false;\n          updates[\"system.components.thought\"] = true;\n        }\n        if (this.system.components?.somatic === true) {\n          updates[\"system.components.somatic\"] = false;\n          updates[\"system.components.emotion\"] = true;\n        }\n      }\n    }\n\n    return updates;\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n\n    this.system.preparation ??= {};\n    const prep = this.system.preparation;\n    // Compatibility shims\n    const compat = [\n      [\"maxAmount\", \"max\"],\n      [\"preparedAmount\", \"value\"],\n      [\"spontaneousPrepared\", \"value\"],\n    ];\n    for (const [oldk, newk] of compat) {\n      if (!Object.getOwnPropertyDescriptor(prep, oldk)?.[\"get\"]) {\n        delete prep[oldk];\n        Object.defineProperty(prep, oldk, {\n          get() {\n            foundry.utils.logCompatibilityWarning(\n              `ItemSpellPF preparation.${oldk} is deprecated in favor of preparation.${newk}`,\n              { since: \"PF1 v10\", until: \"PF1 v11\" }\n            );\n            return prep[newk];\n          },\n          enumerable: false,\n        });\n      }\n    }\n  }\n\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const descs = this.system.descriptors;\n    if (descs) {\n      descs.custom ??= [];\n      descs.value ??= [];\n      descs.total = new Set([...descs.value.map((d) => pf1.config.spellDescriptors[d] || d), ...descs.custom]);\n    }\n  }\n\n  getRollData() {\n    const result = super.getRollData();\n\n    result.sl = this.spellLevel || 0;\n\n    const spellbook = this.spellbook;\n    if (spellbook) {\n      const spellAbility = spellbook.ability;\n      let ablMod = \"\";\n      if (spellAbility !== \"\") ablMod = result.abilities?.[spellAbility]?.mod;\n      result.ablMod = ablMod;\n\n      result.cl = this.casterLevel || 0;\n\n      // Add @class shortcut to @classes[classTag]\n      if (spellbook.class === \"_hd\")\n        result.class = { level: result.attributes.hd?.total ?? result.details?.level?.value ?? 0 };\n      else result.class = result.classes?.[spellbook.class] ?? {};\n      Object.defineProperty(result, \"classLevel\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\"@classLevel is deprecated in favor of @class.level\", {\n            since: \"PF1 v10\",\n            until: \"PF1 v11\",\n          });\n          return this.class?.level;\n        },\n      });\n\n      // Add @spellbook shortcut to @spells[bookId]\n      result.spellbook = result.spells[this.system.spellbook];\n    } else {\n      const [sl, cl] = this.constructor.getMinimumCasterLevelBySpellData(this);\n\n      result.sl = sl;\n      result.cl = cl;\n      result.ablMod = Math.floor(sl / 2);\n    }\n\n    return result;\n  }\n\n  getConditionalSubTargets(target) {\n    const result = super.getConditionalSubTargets(target);\n\n    // Add subtargets affecting effects\n    if (target === \"effect\") {\n      result[\"cl\"] = game.i18n.localize(\"PF1.CasterLevel\");\n    }\n\n    // Add misc subtargets\n    if (target === \"misc\") {\n      // Add charges subTarget with specific label\n      if (this.type === \"spell\" && this.useSpellPoints()) result[\"charges\"] = game.i18n.localize(\"PF1.SpellPointsCost\");\n    }\n\n    return result;\n  }\n\n  /** @inheritDoc */\n  getTypeChatData(data, labels, props, rollData) {\n    if (rollData.item.sr) {\n      props.push(game.i18n.localize(\"PF1.SpellResistance\"));\n    }\n\n    // Add charges\n    if (this.isCharged && !this.system.atWill) {\n      if (this.useSpellPoints()) {\n        props.push(`${game.i18n.localize(\"PF1.SpellPoints\")}: ${this.charges}/${this.maxCharges}`);\n      } else {\n        props.push(`${game.i18n.localize(\"PF1.ChargePlural\")}: ${this.charges}/${this.maxCharges}`);\n      }\n    }\n  }\n\n  /**\n   * Add charges to the spell or its relevant resource pool (spell points or spontaneous spells).\n   *\n   * @override\n   * @param {number} value - Number of charges to add\n   * @param {object} [data=null] - Additional data to pass to the update\n   * @returns {Promise<this | void>} Updated document or undefined if no update is possible or required.\n   */\n  async addCharges(value, data = null) {\n    if (!this.actor) return;\n    if (this.system.atWill) return;\n\n    const spellbook = this.spellbook;\n    if (!spellbook) return;\n    const isSpontaneous = spellbook.spontaneous,\n      spellbookKey = this.system.spellbook || \"primary\",\n      spellLevel = this.system.level;\n\n    if (this.useSpellPoints()) {\n      const curUses = this.getSpellUses();\n      const updateData = {};\n      updateData[`system.attributes.spells.spellbooks.${spellbookKey}.spellPoints.value`] = curUses + value;\n      await this.actor.update(updateData);\n      return this;\n    } else {\n      const newCharges = isSpontaneous\n        ? Math.max(0, (spellbook.spells?.[`spell${spellLevel}`]?.value || 0) + value)\n        : Math.max(0, (this.system.preparation?.value || 0) + value);\n\n      if (!isSpontaneous) {\n        const key = \"system.preparation.value\";\n        if (data == null) {\n          data = {};\n          data[key] = newCharges;\n          return this.update(data);\n        } else {\n          data[key] = newCharges;\n        }\n      } else {\n        const key = `system.attributes.spells.spellbooks.${spellbookKey}.spells.spell${spellLevel}.value`;\n        const actorUpdateData = {};\n        actorUpdateData[key] = newCharges;\n        await this.actor.update(actorUpdateData);\n        return this;\n      }\n    }\n  }\n\n  get isCharged() {\n    if (this.system.atWill) return false;\n    return true;\n  }\n\n  /** @inheritdoc */\n  get hasFiniteCharges() {\n    if (this.system.atWill) return false;\n    return this.getDefaultChargeCost() > 0;\n  }\n\n  /** @type {number} - Remaining charges */\n  get charges() {\n    return this.getSpellUses();\n  }\n\n  /** @type {number} - Maximum possible charges */\n  get maxCharges() {\n    return this.getSpellUses(true);\n  }\n\n  /**\n   * Get default charge cost for spell actions.\n   *\n   * @param options\n   * @param options.rollData\n   * @returns {number} Number for default cost.\n   */\n  getDefaultChargeCost({ rollData } = {}) {\n    if (this.system.atWill) return 0;\n\n    if (this.useSpellPoints()) {\n      rollData ??= this.getRollData();\n      const formula = this.getDefaultChargeFormula();\n      return RollPF.safeRollAsync(formula, rollData).total;\n    } else {\n      return super.getDefaultChargeCost({ rollData });\n    }\n  }\n\n  getDefaultChargeFormula() {\n    if (this.useSpellPoints()) {\n      return this.system.spellPoints?.cost || game.settings.get(\"pf1\", \"spellPointCost\") || \"0\";\n    } else {\n      return super.getDefaultChargeFormula();\n    }\n  }\n\n  /**\n   * @remarks\n   * - Recharging individual spells for spell point, spontaneous, or hybrid spellbooks has no effect.\n   * @override\n   * @inheritDoc\n   */\n  async recharge({ value, period = \"day\", exact = false, maximize = true, commit = true, rollData, context } = {}) {\n    const spellbook = this.spellbook,\n      mode = spellbook?.spellPreparationMode || \"prepared\";\n\n    // Can not recharge non-prepared spellbooks\n    if (mode !== \"prepared\") return;\n\n    // Spellpoints are not on spells\n    if (spellbook?.spellPoints?.useSystem ?? false) return;\n\n    if (period == \"week\") {\n      // Spells do not recharge per week\n      if (exact) return;\n      // When not recharging with exact period, downgrade to \"day\" which is normal spell restoration period\n      period = \"day\";\n    }\n\n    // Spells do not restore on non-day period\n    if (![\"day\", \"any\"].includes(period)) return;\n\n    const prep = this.system.preparation ?? {};\n\n    // No specific value given\n    maximize = !(Number.isFinite(value) && value >= 0);\n\n    // Set value\n    if (maximize) value = prep.max || 0;\n    // Clamp charge value\n    value = Math.clamped(value, 0, prep.max || 0);\n\n    // Cancel pointless or bad update\n    if (value === (prep.value || 0) || !Number.isFinite(value)) return;\n\n    const updateData = { system: { preparation: { value } } };\n\n    if (commit) return this.update(updateData, context);\n    return updateData;\n  }\n\n  /** @type {number} - Effective spell level with offset taken into account. */\n  get spellLevel() {\n    return this.system.level + (this.system.slOffset || 0);\n  }\n\n  /** @type {numbe|null} - EFfective caster level with CL offset taken into account. Null if not linked to valid spellbook */\n  get casterLevel() {\n    const spellbook = this.spellbook;\n    if (!spellbook) return null;\n\n    return spellbook.cl.total + (this.system.clOffset || 0);\n  }\n\n  /** @type {object|undefined} - Actor's linked spellbook data */\n  get spellbook() {\n    const bookId = this.system.spellbook;\n    return this.actor?.system.attributes?.spells.spellbooks[bookId];\n  }\n\n  getDC(rollData = null) {\n    foundry.utils.logCompatibilityWarning(\"ItemSpellPF.getDC() is deprecated in favor of ItemAction.getDC()\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.defaultAction?.getDC(rollData) ?? 10;\n  }\n\n  getSpellUses(max = false) {\n    const itemData = this.system;\n    if (itemData.atWill) return Number.POSITIVE_INFINITY;\n\n    const spellbook = this.spellbook;\n\n    const isSpontaneous = spellbook?.spontaneous ?? false,\n      spellLevel = itemData.level;\n\n    if (this.useSpellPoints()) {\n      if (max) return spellbook.spellPoints?.max ?? 0;\n      return spellbook.spellPoints?.value ?? 0;\n    } else {\n      if (isSpontaneous) {\n        if (itemData.preparation.value > 0) {\n          if (max) return spellbook.spells?.[`spell${spellLevel}`]?.max || 0;\n          return spellbook.spells?.[`spell${spellLevel}`]?.value || 0;\n        }\n      } else {\n        if (max) return itemData.preparation?.max ?? 0;\n        return itemData.preparation?.value ?? 0;\n      }\n    }\n\n    return 0;\n  }\n\n  useSpellPoints() {\n    return this.spellbook?.spellPoints?.useSystem ?? false;\n  }\n\n  getSpellComponents({ compact = false } = {}) {\n    const reSplit = pf1.config.re.traitSeparator,\n      srcComponents = this.system.components ?? {},\n      srcMaterials = this.system.materials ?? {};\n\n    const kind = this.spellbook?.kind,\n      //isArcane = kind === \"arcane\",\n      //isPsychic = kind === \"psychic\",\n      //isAlchemical = kind === \"alchemy\",\n      isDivine = kind === \"divine\";\n\n    const components = [];\n    const labels = pf1.config.spellComponents;\n\n    if (srcComponents.verbal) components.push(labels.verbal);\n    if (srcComponents.somatic) components.push(labels.somatic);\n    if (srcComponents.thought) components.push(labels.thought);\n    if (srcComponents.emotion) components.push(labels.emotion);\n\n    // Reverse mapping of CONFIG.PF1.divineFocus for readability\n    const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n\n    let df = srcComponents.divineFocus;\n\n    // Display focus and material only if they aren't overridden by DF variant\n    if (isDivine && df === dfVariants.MDF && compact) {\n      // Downgrade to DF since material is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.material) {\n      let material = labels.material;\n      // Display indetermined M/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.MDF) material = `${material}/${labels.divineFocus}`;\n      if (srcMaterials.value && !compact) material = `${material} (${srcMaterials.value})`;\n      if (material) components.push(material);\n    }\n\n    if (isDivine && df === dfVariants.FDF && compact) {\n      // Downgrade to DF since focus is not used\n      df = dfVariants.DF;\n    } else if (srcComponents.focus) {\n      let focus = labels.focus;\n      // Display indeterminate F/DF only if spellcasting kind is not known\n      if ((!kind || !compact) && df === dfVariants.FDF) focus = `${focus}/${labels.divineFocus}`;\n      if (srcMaterials.focus && !compact) focus = `${focus} (${srcMaterials.focus})`;\n      if (focus) components.push(focus);\n    }\n\n    if (df === dfVariants.DF) components.push(labels.divineFocus);\n    if (labels.value) components.push(...srcComponents.value.split(reSplit));\n\n    return components;\n  }\n\n  /**\n   * @param {object} itemData - A spell item's data.\n   * @returns {number[]} An array containing the spell level and caster level.\n   */\n  static getMinimumCasterLevelBySpellData(itemData) {\n    const learnedAt = Object.entries(itemData.system.learnedAt?.class ?? {})?.reduce((cur, [classId, level]) => {\n      const classes = classId.split(\"/\");\n      for (const cls of classes) cur.push([cls, level]);\n      return cur;\n    }, []);\n    const result = [9, 20];\n    for (const [classId, level] of learnedAt) {\n      result[0] = Math.min(result[0], level);\n\n      const tc = pf1.config.classCasterType[classId] || \"high\";\n      if (tc === \"high\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 2);\n      } else if (tc === \"med\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level - 1) * 3);\n      } else if (tc === \"low\") {\n        result[1] = Math.min(result[1], 1 + Math.max(0, level) * 3);\n      }\n    }\n\n    return result;\n  }\n\n  static _replaceConsumableConversionString(string, rollData) {\n    return string\n      .replace(/@sl/g, `${rollData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}]`)\n      .replace(/@cl/g, \"@item.cl\")\n      .replace(/@ablMod/g, `${rollData.ablMod}[${game.i18n.localize(\"PF1.AbilityScore\")}]`);\n  }\n\n  /**\n   * Convert spell into a consumable item.\n   *\n   * @param {object} origData - Spell item data\n   * @param {\"wand\"|\"scroll\"|\"potion\"} type - Consumable type\n   * @param {object} [options] - Additional options\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @returns {object|null} - Item data for appropriate consumable, or null if dialog option was used and it was cancelled.\n   */\n  static async toConsumable(origData, type, { spellType = \"arcane\" } = {}) {\n    const isWand = type === \"wand\",\n      isPotion = type === \"potion\",\n      isScroll = type === \"scroll\";\n\n    const [minLevel, minCl] = this.getMinimumCasterLevelBySpellData(origData);\n    const level = origData.sl ?? minLevel ?? 1;\n    const cl = origData.cl ?? minCl ?? 1;\n    const materialPrice = origData.system.materials?.gpValue ?? 0;\n\n    const itemData = {\n      type: \"consumable\",\n      name: origData.name,\n      system: {\n        subType: type,\n        spellType: origData.spellType || spellType,\n        description: {},\n        identified: origData.identified ?? true,\n        unidentified: {\n          name: origData.unidentifiedName || game.i18n.localize(`PF1.CreateItem${type.capitalize()}`),\n        },\n        cl, // Caster level\n        aura: { school: origData.system.school },\n        uses: { per: \"single\" },\n        price: 0,\n        hardness: 0,\n        hp: { value: 1, max: 1 },\n        actions: origData.system.actions ?? [],\n      },\n    };\n\n    // Initialize default action\n    if (itemData.system.actions.length == 0) itemData.system.actions.push(defaultAction);\n    const defaultAction = itemData.system.actions[0] ?? pf1.components.ItemAction.defaultData;\n    defaultAction.range ??= {};\n\n    // Prepare new action copying over with old data if present\n\n    // Override activation as required by consumables\n    defaultAction.activation.type = \"standard\";\n    defaultAction.activation.unchained.type = \"action\";\n    defaultAction.activation.unchained.cost = 2;\n\n    // Fill in pseudo roll data object\n    const rollData = {\n      item: origData.system,\n      ablMod: Math.floor(level / 2), // Minimum usable ability modifier\n      sl: level,\n      cl,\n    };\n\n    if (isWand) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemWandOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/wand-star.jpg\";\n      itemData.system.uses.pricePerUse =\n        Math.floor(((Math.max(0.5, level) * cl * 750) / 50) * 100) / 100 + materialPrice;\n      itemData.system.hardness = 5;\n      itemData.system.hp.max = 5;\n      itemData.system.hp.value = 5;\n      // Set charges\n      itemData.system.uses.maxFormula = \"50\";\n      itemData.system.uses.value = 50;\n      itemData.system.uses.max = 50;\n      itemData.system.uses.per = \"charges\";\n    } else if (isPotion) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemPotionOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Drink\");\n      itemData.img = \"systems/pf1/icons/items/potions/minor-blue.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 50 + materialPrice;\n      itemData.system.hardness = 1;\n    } else if (isScroll) {\n      itemData.name = game.i18n.format(\"PF1.CreateItemScrollOf\", { name: origData.name });\n      defaultAction.name = game.i18n.localize(\"PF1.Use\");\n      itemData.img = \"systems/pf1/icons/items/inventory/scroll-magic.jpg\";\n      itemData.system.price = Math.max(0.5, level) * cl * 25 + materialPrice;\n    }\n\n    const convertNotes = (data) => {\n      // Replace attack and effect formula data\n      for (const arrKey of [\"attackNotes\", \"effectNotes\"]) {\n        const arr = data[arrKey];\n        if (!arr) continue;\n        for (let idx = 0; idx < arr.length; idx++) {\n          arr[idx] = this._replaceConsumableConversionString(arr[idx], rollData);\n        }\n      }\n    };\n\n    // Adjust all actions\n    for (const action of itemData.system.actions) {\n      // Convert ranges\n      if (isPotion && defaultAction === action) {\n        // Special handling for potions\n        action.range.units = \"personal\";\n        delete action.range.value;\n      } else {\n        // Convert spell-only ranges\n        if ([\"close\", \"medium\", \"long\"].includes(action.range?.units)) {\n          // TODO: These should only replace @cl with @item.level instead of pre-resolving the scaling formula\n          const rlabel = pf1.config.distanceUnits[action.range.units];\n          const rvalue = RollPF.safeRollSync(pf1.config.spellRangeFormulas[action.range.units], rollData).total ?? 0;\n          action.range.value = `${rvalue}[${rlabel}]`;\n          action.range.units = \"ft\";\n        }\n      }\n\n      // Convert template\n      if (action.measureTemplate?.type) {\n        action.measureTemplate.size = this._replaceConsumableConversionString(action.measureTemplate.size, rollData);\n      }\n\n      // Convert extra attacks\n      const exAtk = action.extraAttacks;\n      if (exAtk) {\n        if (exAtk.formula?.count?.length)\n          exAtk.formula.count = this._replaceConsumableConversionString(exAtk.formula.count, rollData);\n        if (exAtk.formula?.bonus?.length)\n          exAtk.formula.bonus = this._replaceConsumableConversionString(exAtk.formula.bonus, rollData);\n\n        for (const bAtk of exAtk.manual ?? []) {\n          bAtk.formula = this._replaceConsumableConversionString(bAtk.formula, rollData);\n        }\n      }\n\n      // Set damage formula\n      for (const dmgPart of action.damage?.parts ?? []) {\n        dmgPart.formula = this._replaceConsumableConversionString(dmgPart.formula, rollData);\n      }\n\n      // Set save\n      if (action.save?.type) {\n        const oldSaveDC = action.save.dc;\n        action.save.dc = `10 + ${origData.sl}[${game.i18n.localize(\"PF1.SpellLevel\")}] + ${Math.floor(\n          origData.sl / 2\n        )}[${game.i18n.localize(\"PF1.SpellcastingAbility\")}]`;\n        // Add DC offset\n        if (oldSaveDC?.length) action.save.dc += ` + (${oldSaveDC})[${game.i18n.localize(\"PF1.DCOffset\")}]`;\n      }\n\n      convertNotes(action);\n    }\n\n    convertNotes(itemData.system);\n\n    // Set description\n    const spell = new Item.implementation(origData);\n    spell.reset();\n    // TODO: Make range and duration appear as inline rolls that scale on item CL?\n    const desc = spell.getDescription({ charcard: false, header: true, body: true, rollData });\n    itemData.system.description.value = this._replaceConsumableConversionString(desc, rollData);\n\n    // Create and return synthetic item data\n    return new ItemPF(foundry.utils.expandObject(itemData)).toObject();\n  }\n\n  /**\n   * Open Consumable conversion dialog.\n   *\n   * Automatically calls {@link this.toConsumable} as appropriate.\n   *\n   * @param {object} itemData - Spell item data\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.allowSpell=true] - Allow spell creation\n   * @param {string} [options.spellType=\"arcane\"] - Spell type\n   * @param {object} [options.actor=undefined] - The actor the consumable is being created on.\n   * @returns {Promise<null|false|object>} - Returns null if cancelled, false if no conversion is to take place, or converted data.\n   */\n  static async toConsumablePrompt(itemData, { allowSpell = true, spellType = \"arcane\", actor = undefined } = {}) {\n    const [sl, cl] = CONFIG.Item.documentClasses.spell.getMinimumCasterLevelBySpellData(itemData);\n\n    const getFormData = (html) => {\n      const formData = foundry.utils.expandObject(new FormDataExtended(html.querySelector(\"form\")).object);\n      foundry.utils.mergeObject(itemData, formData);\n      // NaN check here to allow SL 0\n      if (Number.isNaN(itemData.sl)) itemData.sl = 1;\n      return itemData;\n    };\n\n    const createConsumable = (data, type) => this.toConsumable(data, type, { spellType: data.spellType });\n\n    const buttons = {\n      potion: {\n        icon: '<i class=\"fas fa-prescription-bottle\"></i>',\n        label: game.i18n.localize(\"PF1.CreateItemPotion\"),\n        callback: (html) => createConsumable(getFormData(html), \"potion\"),\n      },\n      scroll: {\n        icon: '<i class=\"fas fa-scroll\"></i>',\n        label: game.i18n.localize(\"PF1.CreateItemScroll\"),\n        callback: (html) => createConsumable(getFormData(html), \"scroll\"),\n      },\n      wand: {\n        icon: '<i class=\"fas fa-magic\"></i>',\n        label: game.i18n.localize(\"PF1.CreateItemWand\"),\n        callback: (html) => createConsumable(getFormData(html), \"wand\"),\n      },\n      spell: {\n        icon: '<i class=\"fas fa-hand-sparkles\"></i>',\n        label: game.i18n.localize(\"TYPES.Item.spell\"),\n        callback: () => false,\n      },\n    };\n\n    if (!allowSpell) delete buttons.spell;\n\n    return Dialog.wait(\n      {\n        title: game.i18n.format(\"PF1.CreateItemForSpell\", { name: itemData.name }),\n        content: await renderTemplate(\"systems/pf1/templates/internal/create-consumable.hbs\", {\n          name: itemData.name,\n          sl,\n          cl,\n          isGM: game.user.isGM,\n          config: pf1.config,\n          spellType,\n          // We assume every other check done at `ActorSheetPF._alterDropItemData` has passed\n          isNPC: actor?.type === \"npc\",\n        }),\n        itemData,\n        buttons,\n        close: () => null,\n        default: \"potion\",\n      },\n      {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"create-consumable\"],\n        jQuery: false,\n      }\n    );\n  }\n\n  /**\n   * @type {boolean} - true if the default action is prepared to cast\n   */\n  get canCast() {\n    foundry.utils.logCompatibilityWarning(\n      \"ItemSpellPF.canCast is deprecated in favor of ItemBasePF.canUse and ItemAction.canUse\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return this.canUse && (this.defaultAction?.canUse ?? true);\n  }\n\n  /**\n   * @remarks\n   * Checks for at-will and preparation status.\n   * @inheritDoc\n   */\n  get canUse() {\n    if (this.system.atWill) return true;\n\n    return (this.system.preparation?.value ?? 0) > 0;\n  }\n\n  /**\n   * Determine if this spell is domain/school spell.\n   *\n   * @type {boolean}\n   */\n  get isDomain() {\n    return this.system.domain === true;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  getDescription({ chatcard = false, data = {}, rollData, header = true, body = true } = {}) {\n    const headerContent = header\n      ? renderCachedTemplate(\"systems/pf1/templates/internal/spell-description.hbs\", {\n          ...data,\n          ...this.getDescriptionData({ rollData }),\n          chatcard: chatcard === true,\n        })\n      : \"\";\n    const bodyContent = body ? this.system.description.value : \"\";\n    return headerContent + bodyContent;\n  }\n\n  getDescriptionData({ rollData } = {}) {\n    const reSplit = pf1.config.re.traitSeparator;\n    const srcData = this.system;\n    const defaultAction = this.defaultAction;\n    const actionData = defaultAction?.data ?? {};\n\n    rollData ??= defaultAction?.getRollData() ?? this.getRollData();\n\n    const label = {\n      school: pf1.config.spellSchools[srcData.school],\n      subschool: srcData.subschool || \"\",\n      descriptors: \"\",\n    };\n    const data = {\n      data: foundry.utils.mergeObject(this.system, srcData, { inplace: false }),\n      label: label,\n    };\n\n    // Set subschool and descriptors label\n    {\n      const value = srcData.descriptors?.value ?? [];\n      const custom = srcData.descriptors?.custom ?? [];\n      label.descriptors = [\n        ...value.map((descriptor) => pf1.config.spellDescriptors[descriptor] ?? descriptor),\n        ...custom,\n      ]\n        .filter((x) => x)\n        .join(\", \");\n    }\n    // Set information about when the spell is learned\n    data.learnedAt = {};\n    if (srcData.learnedAt) {\n      [\"class\", \"domain\", \"subDomain\", \"elementalSchool\", \"bloodline\"].forEach(\n        (category) =>\n          (data.learnedAt[category] = Object.entries(srcData.learnedAt[category])\n            .map(([classId, level]) => `${classId} ${level}`)\n            .join(\", \"))\n      );\n    }\n\n    const isUnchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n    // Set casting time label\n    const act = defaultAction?.activation;\n    if (act != null) {\n      const activationCost = act.cost;\n      const activationType = act.type;\n      const activationTypes = isUnchainedActionEconomy\n        ? pf1.config.abilityActivationTypes_unchained\n        : pf1.config.abilityActivationTypes;\n      const activationTypesPlurals = isUnchainedActionEconomy\n        ? pf1.config.abilityActivationTypesPlurals_unchained\n        : pf1.config.abilityActivationTypesPlurals;\n\n      if (activationType) {\n        if (activationTypesPlurals[activationType] != null) {\n          if (activationCost === 1) label.castingTime = `${activationTypes[activationType]}`;\n          else label.castingTime = `${activationTypesPlurals[activationType]}`;\n        } else label.castingTime = `${activationTypes[activationType]}`;\n      }\n      if (!Number.isNaN(activationCost) && label.castingTime != null)\n        label.castingTime = `${activationCost} ${label.castingTime}`;\n    }\n\n    // Set components label\n    label.components = this.getSpellComponents().join(\", \");\n\n    // Set duration label\n    const duration = actionData.duration;\n    switch (duration?.units) {\n      case \"spec\":\n        label.duration = duration.value;\n        break;\n      case \"seeText\":\n      case \"inst\":\n      case \"perm\":\n        label.duration = pf1.config.timePeriods[duration.units];\n        break;\n      case \"turn\": {\n        const unit = pf1.config.timePeriods[duration.units];\n        label.duration = game.i18n.format(\"PF1.Time.Format\", { value: 1, unit });\n        break;\n      }\n      case \"round\":\n      case \"minute\":\n      case \"hour\":\n      case \"day\":\n      case \"month\":\n      case \"year\":\n        if (duration.value) {\n          const unit = pf1.config.timePeriods[duration.units];\n          const roll = Roll.defaultImplementation.safeRollAsync(duration.value, rollData);\n          const value = roll.total;\n          if (!roll.err) {\n            label.duration = game.i18n.format(\"PF1.Time.Format\", { value, unit });\n          } else {\n            console.error(\"Error in duration formula:\", { formula: duration.value, rollData, roll }, roll.err, this);\n          }\n          label.durationFormula = duration.value;\n          data.variableDuration = /@\\w/.test(duration.value);\n        }\n        break;\n    }\n\n    // Dismissable, but only if special duration isn't used\n    // TODO: Better i18n support\n    if (label.duration && duration.dismiss && duration.units !== \"spec\") {\n      label.duration += \" \" + game.i18n.localize(\"PF1.DismissableMark\");\n    }\n\n    // Set effect label\n    {\n      const effect = actionData.spellEffect;\n      if (effect) label.effect = effect;\n    }\n    // Set targets label\n    {\n      const targets = actionData.target?.value;\n      if (targets) label.targets = targets;\n    }\n    // Set range label\n    {\n      const rangeUnit = actionData.range?.units;\n      const rangeValue = actionData.range?.value;\n\n      if (rangeUnit != null && rangeUnit !== \"none\") {\n        label.range = pf1.config.distanceUnits[rangeUnit];\n        const units = pf1.utils.getDistanceSystem();\n        switch (rangeUnit) {\n          case \"close\":\n            label.range = `${label.range} ${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeShortMetric\" : \"PF1.SpellRangeShort\"\n            )}`;\n            break;\n          case \"medium\":\n            label.range = `${label.range} ${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeMediumMetric\" : \"PF1.SpellRangeMedium\"\n            )}`;\n            break;\n          case \"long\":\n            label.range = `${label.range} ${game.i18n.localize(\n              units == \"metric\" ? \"PF1.SpellRangeLongMetric\" : \"PF1.SpellRangeLong\"\n            )}`;\n            break;\n          case \"ft\":\n          case \"mi\":\n            if (!rangeValue) label.range = \"\";\n            else {\n              let rf = calculateRangeFormula(rangeValue, rangeUnit, rollData);\n              if (rangeUnit === \"mi\") rf /= 5_280; // Convert feet back to miles\n              const [r, rt] = pf1.utils.convertDistance(rf, rangeUnit);\n              const rl = pf1.config.measureUnitsShort[rt];\n              label.range = `${r} ${rl}`;\n            }\n            break;\n          case \"spec\":\n            label.range = rangeValue || label.range;\n            break;\n        }\n      }\n    }\n    // Set area label\n    {\n      const area = actionData.area;\n\n      if (area) label.area = area;\n    }\n\n    // Set DC and SR\n    {\n      const savingThrowDescription = actionData.save?.description;\n      label.savingThrow = savingThrowDescription || game.i18n.localize(\"PF1.None\");\n\n      const sr = srcData.sr;\n      label.sr = (sr === true ? game.i18n.localize(\"PF1.Yes\") : game.i18n.localize(\"PF1.No\")).toLowerCase();\n\n      if (actionData.range?.units !== \"personal\") data.useDCandSR = true;\n    }\n\n    const harmless = actionData.save?.harmless ?? false;\n    if (harmless) label.harmless = game.i18n.localize(\"PF1.Yes\").toLowerCase();\n\n    return data;\n  }\n\n  /**\n   * Number of slots the spell takes to prepare.\n   *\n   * Quick access to .system.slotCost with additional considerations such as at-will toggle.\n   *\n   * Defaults to 1 if the data is not present, 0 if the spell is at-will.\n   *\n   * @type {number}\n   */\n  get slotCost() {\n    if (this.system.atWill) return 0;\n    return this.system.slotCost ?? 1;\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\nexport class ItemWeaponPF extends ItemPhysicalPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Set weapon subtype if not present\n    const newWeaponType = changed.system?.subType;\n    if (newWeaponType != null && newWeaponType !== this.system.subType) {\n      const subtype = changed.system.weaponSubtype ?? this.system.weaponSubtype ?? \"\";\n      const keys = Object.keys(pf1.config.weaponTypes[newWeaponType]).filter((o) => !o.startsWith(\"_\"));\n      if (!subtype || !keys.includes(subtype)) {\n        changed.system.weaponSubtype = keys[0];\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    const { weaponTypes } = pf1.config;\n\n    // Type and subtype labels\n    let wType = this.system.subType;\n    const typeKeys = Object.keys(weaponTypes);\n    if (!typeKeys.includes(wType)) wType = typeKeys[0];\n\n    let wSubtype = this.system.weaponSubtype;\n    const subtypeKeys = Object.keys(weaponTypes[wType]).filter((o) => !o.startsWith(\"_\"));\n    if (!subtypeKeys.includes(wSubtype)) wSubtype = subtypeKeys[0];\n\n    labels.subType = weaponTypes[wType]._label;\n    labels.childType = weaponTypes[wType][wSubtype];\n\n    labels.properties = [\n      ...Object.entries(this.system.properties ?? {})\n        .filter(([_, enabled]) => enabled)\n        .map(([id]) => pf1.config.weaponProperties[id] || id),\n    ];\n\n    return labels;\n  }\n\n  getTypeChatData(data, labels, props, rollData, { actionId = null, chatcard = false } = {}) {\n    super.getTypeChatData(data, labels, props, rollData, { actionId, chatcard });\n\n    if (this.showUnidentifiedData) return;\n\n    if (labels.weaponSubtype) props.push(labels.weaponSubtype);\n  }\n\n  adjustContained() {\n    super.adjustContained();\n\n    this.system.equipped = false;\n    this.system.carried = true;\n  }\n\n  get canEquip() {\n    return !this.inContainer;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getProficiency(weapon = true) {\n    if (!weapon) throw new Error(\"Weapons do not support non-weapon proficiency\");\n\n    return this.isProficient;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get isProficient() {\n    if (this.system.proficient) return true;\n    return this.actor?.hasWeaponProficiency?.(this) ?? true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks\n   * Not 100% RAW correct as this applies armor table to weapons,\n   * but since Paizo did not provide a table for weapons\n   * besides stating weapons for small are half weight, we assume they use the same table.\n   *\n   * @see {@link pf1.documents.item.ItemEquipmentPF.getWeightMultiplier}\n   */\n  getWeightMultiplier() {\n    // Use same as armor, even though Paizo has only stats for halving for small and nothing else.\n    return this._getArmorWeightMultiplier();\n  }\n}\n","import { ItemPhysicalPF } from \"./item-physical.mjs\";\n\nexport class ItemImplantPF extends ItemPhysicalPF {\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    // Simulate equipping items    {\n    if (this.system.implanted === true) {\n      this.executeScriptCalls(\"implant\", { implanted: true });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (game.users.get(userId)?.isSelf) {\n      if (this.system.implanted === true) {\n        this.executeScriptCalls(\"implant\", { implanted: false });\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // Call 'implant' script calls\n    const implanted = changed.system?.implanted;\n    if (implanted != null) {\n      this.executeScriptCalls(\"implant\", { implanted });\n    }\n  }\n\n  getLabels({ actionId, rollData } = {}) {\n    const labels = super.getLabels({ actionId, rollData });\n\n    labels.subType = pf1.config.implantTypes[this.subType];\n\n    switch (this.subType) {\n      case \"cybertech\":\n        labels.slot = pf1.config.implantSlots.cybertech[this.system.slot] ?? pf1.config.implantSlots.cybertech.none;\n        break;\n    }\n\n    const checkYes = '<i class=\"fas fa-check\"></i>';\n    const checkNo = '<i class=\"fas fa-times\"></i>';\n    labels.equipped = this.system.implanted ? checkYes : checkNo;\n\n    return labels;\n  }\n\n  /**\n   * Adjust item while in container.\n   */\n  adjustContained() {\n    // Everything in containers count as carried\n    this.system.carried = true;\n\n    // Auto-unimplant\n    this.system.implanted = false;\n  }\n\n  /**\n   * Prepare this item's {@link ItemWeightData}\n   */\n  prepareWeight() {\n    super.prepareWeight();\n\n    // Implanted items weigh nothing\n    const itemData = this.system;\n    const weight = itemData.weight;\n    if (itemData.implanted) {\n      weight.total = 0;\n      weight.converted.total = 0;\n\n      // If there's more than 1 in stack, restore part of the weight\n      if (itemData.quantity > 1) {\n        // Partial duplication from base physical item\n        const baseWeight = weight.value * this.getWeightMultiplier();\n        weight.total = baseWeight * (itemData.quantity - 1);\n        weight.converted.total = pf1.utils.convertWeight(weight.total);\n      }\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n  get isActive() {\n    if (this.system.quantity <= 0) return false;\n    if (this.subType === \"cybertech\" && this.system.disabled) return false;\n    return this.system.implanted || false;\n  }\n\n  /**\n   * Determines if the item implanted.\n   *\n   * @inheritDoc\n   */\n  get activeState() {\n    return this.system.implanted || false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async setActive(active, context) {\n    return this.update({ \"system.implanted\": active }, context);\n  }\n}\n","/**\n * Spellbook details.\n */\nexport class Spellbook {\n  /**\n   * Book key.\n   */\n  key;\n\n  /**\n   * Owning actor.\n   */\n  actor;\n\n  /**\n   * Raw spellbook data.\n   */\n  data;\n\n  /**\n   * All spells.\n   */\n  spells = [];\n\n  level = {};\n\n  /**\n   * @param bookKey Book key.\n   * @param {ActorPF} actor Owning actor.\n   */\n  constructor(bookKey, actor) {\n    this.actor = actor;\n    this.data = actor.system.attributes.spells.spellbooks[bookKey];\n  }\n\n  /**\n   * Add spell to the spellbook and to its appropriate level.\n   *\n   * @param {ItemSpellPF} spell\n   */\n  addSpell(spell) {\n    this.spells.push(spell);\n\n    // Basic sanity check\n    const level = spell.system.level;\n    if (Math.clamped(level, 0, 9) !== level) {\n      console.error(\"Spell with impossible spell level:\", spell);\n      return;\n    }\n\n    // Ensure appropriate spell level exists\n    this.level[level] ??= new SpellbookLevel(this);\n\n    // Add spell to the spell level also\n    this.level[level].spells.push(spell);\n  }\n}\n\n/**\n * Spellbook leveled details.\n */\nexport class SpellbookLevel {\n  /**\n   * Owning book.\n   */\n\n  book;\n  /**\n   * Spells for level.\n   */\n  spells = [];\n\n  constructor(book) {\n    this.book = book;\n  }\n}\n\nexport class SpellbookSlots {\n  level = 0;\n  max = 0;\n  value = 0;\n  domain = 0;\n  domainMax = 0;\n  domainUnused = 0;\n  used = 0;\n  total = 0;\n\n  /**\n   * @param {object} options - Options\n   * @param {number} options.max - Maximum normal spells\n   * @param {number} options.domain - Maximum domain spells\n   * @param {number} options.level - Spell level\n   */\n  constructor({ max = 0, domain = 0, level = 0 } = {}) {\n    this.level = level;\n\n    // Enforce lack of domain slots for level 0\n    if (level === 0) domain = 0;\n\n    this.value = max + domain;\n    this.max = max;\n\n    this.domain = domain;\n    this.domainMax = domain;\n    this.domainUnused = domain;\n\n    this.total = max + domain;\n  }\n}\n\nexport class SpellRanges {\n  close;\n  medium;\n  long;\n\n  cl;\n\n  constructor(cl) {\n    this.cl = cl;\n    this.close = pf1.utils.calculateRange(null, \"close\", { cl })[0];\n    this.medium = pf1.utils.calculateRange(null, \"medium\", { cl })[0];\n    this.long = pf1.utils.calculateRange(null, \"long\", { cl })[0];\n  }\n}\n\nexport class SpellbookMode {\n  raw;\n\n  get isHybrid() {\n    return this.raw === \"hybrid\";\n  }\n\n  get isPrestige() {\n    return this.raw === \"prestige\";\n  }\n\n  get isSpontaneous() {\n    return this.raw === \"spontaneous\";\n  }\n\n  get isPrepared() {\n    return this.raw === \"prepared\";\n  }\n\n  get usesSpellpoints() {\n    return this.book.spellPoints?.useSystem === true;\n  }\n\n  get isSemiSpontaneous() {\n    return this.isSpontaneous || this.isHybrid || this.isPrestige || this.usesSpellpoints || false;\n  }\n\n  constructor(book) {\n    this.book = book;\n\n    let mode = book.spellPreparationMode;\n\n    // Shunt invalid mode\n    if (!mode) mode = book.spellPreparationMode = \"spontaneous\";\n\n    this.raw = mode;\n  }\n}\n","// Add Vision Sharing sheet to ActorDirectory context options\nHooks.on(\"getActorDirectoryEntryContext\", function sharedVision(html, menu) {\n  menu.push({\n    name: \"PF1.Application.VisionSharing.Label\",\n    icon: '<i class=\"fas fa-eye\"></i>',\n    condition: () => game.user.isGM,\n    callback: ([li]) =>\n      game.actors.get(li.dataset.documentId)?.visionSharingSheet?.render(true, {\n        focus: true,\n        // Positioning copied from Foundry's ownership dialog\n        top: Math.min(li.offsetTop, window.innerHeight - 350),\n        left: window.innerWidth - 720,\n      }),\n  });\n});\n\nexport class VisionSharingSheet extends ActorSheet {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"vision-sharing\"],\n      template: \"systems/pf1/templates/apps/vision-sharing.hbs\",\n      width: 400,\n      height: \"auto\",\n      closeOnSubmit: true,\n      submitOnClose: false,\n      submitOnChange: false,\n      sheetConfig: false,\n    };\n  }\n\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.VisionSharing.Label\") + `: ${this.actor.name}`;\n    if (this.actor.token) title += \"[\" + game.i18n.localize(\"Token\") + \"]\";\n    return title;\n  }\n\n  async getData() {\n    const context = {\n      levels: {\n        false: \"PF1.No\",\n        true: \"PF1.Yes\",\n      },\n      users: game.users.players.reduce((rv, user) => {\n        rv[user.id] = {\n          user,\n          level: null,\n        };\n        return rv;\n      }, {}),\n    };\n\n    const config = this.actor.getFlag(\"pf1\", \"visionSharing\");\n    context.default = String(config?.default ?? false);\n    if (config?.users) {\n      Object.entries(config.users).forEach(([userId, level]) => (context.users[userId].level = String(level ?? null)));\n    }\n\n    return context;\n  }\n\n  _getHeaderButtons() {\n    // HACK: Do not display import button\n    return super._getHeaderButtons().filter((b) => b.class !== \"import\");\n  }\n\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Clear users that are using default\n    for (const [userId, level] of Object.entries(formData.users)) {\n      if (level) formData.users[userId] = Boolean(level);\n      else formData.users[`-=${userId}`] = null;\n    }\n\n    await this.actor.setFlag(\"pf1\", \"visionSharing\", formData);\n  }\n}\n","/**\n * Resource interface.\n */\nexport class Resource {\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /** @type {ItemPF} */\n  #item;\n  get item() {\n    return this.#item;\n  }\n\n  /**\n   * @param {number} value Value to add to the charges.\n   * @returns {Promise} Update promise\n   */\n  async add(value) {\n    return this.item.addCharges(value);\n  }\n\n  constructor(item) {\n    this.#item = item;\n    const tag = item.system.tag;\n\n    Object.defineProperties(this, {\n      value: {\n        get() {\n          return this.item.charges;\n        },\n        enumerable: true,\n      },\n      max: {\n        get() {\n          return this.item.maxCharges;\n        },\n        enumerable: true,\n      },\n      _id: {\n        value: item.id,\n        enumerable: true,\n      },\n      tag: {\n        value: tag,\n        enumerable: true,\n      },\n    });\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\nimport { ItemPF, ItemRacePF } from \"@item/_module.mjs\";\nimport { createTag, fractionalToString, enrichHTMLUnrolled, openJournal } from \"@utils\";\nimport {\n  applyChanges,\n  addDefaultChanges,\n  getChangeFlat,\n  getSourceInfo,\n  setSourceInfoByName,\n  getHighestChanges,\n} from \"./utils/apply-changes.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\nimport { Spellbook, SpellRanges, SpellbookMode, SpellbookSlots } from \"./utils/spellbook.mjs\";\nimport { ItemChange } from \"../../components/change.mjs\";\nimport { VisionSharingSheet } from \"module/applications/vision-sharing.mjs\";\nimport { Resource } from \"./components/resource.mjs\";\n\n/**\n * Extend the base Actor class to implement additional game system logic.\n */\nexport class ActorPF extends ActorBasePF {\n  constructor(...args) {\n    super(...args);\n\n    if (this.itemFlags === undefined)\n      /**\n       * Init item flags.\n       */\n      this.itemFlags = { boolean: {}, dictionary: {} };\n\n    if (this.changeItems === undefined)\n      /**\n       * A list of all the active items with changes.\n       *\n       * @type {ItemPF[]}\n       */\n      this.changeItems = [];\n\n    if (this.changes === undefined)\n      /**\n       * Stores all ItemChanges from carried items.\n       *\n       * @public\n       * @type {Collection<ItemChange>}\n       */\n      this.changes = new Collection();\n\n    if (this._queuedUpdates === undefined)\n      /**\n       * Stores updates to be applied to the actor near the end of the _onUpdate method.\n       *\n       * @private\n       * @type {Object<string, any>}\n       */\n      this._queuedUpdates = {};\n\n    if (this._rollData === undefined)\n      /**\n       * Cached roll data for this item.\n       *\n       * @internal\n       * @type {object}\n       */\n      this._rollData = null;\n\n    if (this.containerItems === undefined)\n      /**\n       * All items this actor is holding in containers.\n       *\n       * @type {ItemPF[]}\n       */\n      this.containerItems = [];\n\n    if (this._states === undefined)\n      /**\n       * Tracks various states which need to be tracked.\n       *\n       * @type {object}\n       */\n      this._states = {};\n\n    this._visionSharingSheet ??= null;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} [actorData]\n   * @returns {object}\n   */\n  static getDefaultArtwork(actorData) {\n    const result = super.getDefaultArtwork(actorData);\n    const image = pf1.config.defaultIcons.actors[actorData?.type];\n    if (image) {\n      result.img = image;\n      result.texture.src = image;\n    }\n    return result;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const updates = this.preCreateData(data, context, user);\n\n    if (Object.keys(updates).length) this.updateSource(updates);\n  }\n\n  /**\n   * Meant to be overridden.\n   *\n   * @abstract\n   * @protected\n   * @augments _preCreate\n   * @param data\n   * @param options\n   * @param userId\n   * @returns {object} Update data to replace with.\n   */\n  preCreateData(data, options, userId) {\n    return {};\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Generic chatlog listener\n   *\n   * @internal\n   * @param {JQuery<HTMLElement>} html\n   */\n  static chatListeners(html) {\n    html.on(\"click\", \"button[data-action], a[data-action]\", this._onChatCardButtonAction.bind(this));\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  static async _onChatCardButtonAction(event) {\n    event.preventDefault();\n\n    // Extract card data\n    const button = event.currentTarget;\n    const card = button.closest(\".chat-card\");\n    const action = button.dataset.action;\n\n    // Roll saving throw\n    if (action === \"defense-save\") {\n      const messageId = card.closest(\".chat-message\").dataset.messageId;\n      const message = game.messages.get(messageId);\n      const actor = ChatMessage.getSpeakerActor(message.speaker);\n      const saveId = button.dataset.save;\n      actor.rollSavingThrow(saveId, { event });\n    } else if (action === \"save\") {\n      const saveId = button.dataset.type;\n\n      let actors = canvas.tokens.controlled.map((t) => t.actor).filter((t) => !!t);\n      if (actors.length == 0 && game.user.character) actors = [game.user.character];\n\n      let noSound = false;\n      for (const actor of actors) {\n        actor?.rollSavingThrow(saveId, { event, noSound });\n        noSound = true;\n      }\n    }\n    // Show compendium entry\n    else if (action === \"open-compendium-entry\") {\n      openJournal(button.dataset.compendiumEntry);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @type {number} - Effective spell failure percentage as number from 0 to 100.\n   */\n  get spellFailure() {\n    return this.itemTypes.equipment\n      .filter((o) => o.system.equipped === true)\n      .reduce((cur, o) => cur + (o.system.spellFailure || 0), 0);\n  }\n\n  /**\n   * Actor's current race item.\n   *\n   * @type {pf1.documents.item.ItemRacePF|null}\n   */\n  get race() {\n    return this.itemTypes.race[0] ?? null;\n  }\n\n  /**\n   * @internal\n   * @param src - Source info\n   */\n  static _getSourceLabel(src) {\n    const item = src.change?.parent;\n    if (item) {\n      const subtype = item.subType;\n      let typeLabel;\n\n      if (subtype && ((item.system.identified ?? true) || game.user.isGM))\n        typeLabel = game.i18n.localize(`PF1.Subtypes.Item.${item.type}.${subtype}.Single`);\n      else typeLabel = game.i18n.localize(`TYPES.Item.${item.type}`);\n\n      return `${src.name} (${typeLabel})`;\n    }\n\n    return src.name;\n  }\n\n  /**\n   * Retrieve valid skill change targets for this actor.\n   *\n   * @internal\n   */\n  get _skillTargets() {\n    const skills = [];\n    for (const [sklKey, skl] of Object.entries(this.system.skills)) {\n      if (skl == null) continue;\n      // Add main skill\n      skills.push(`skill.${sklKey}`);\n      // Add subskills if present\n      for (const subSklKey of Object.keys(skl.subSkills ?? [])) {\n        skills.push(`skill.${sklKey}.${subSklKey}`);\n      }\n    }\n    return skills;\n  }\n\n  /**\n   * Change targets for spellbooks on the actor.\n   *\n   * @internal\n   * @type {Array[]} Target paths\n   */\n  get _spellbookTargets() {\n    const spellTargets = [];\n    // Add caster level and concentration to targets\n    for (const [bookId, bookData] of Object.entries(this._source.system.attributes?.spells?.spellbooks ?? {})) {\n      if (bookData.inUse) {\n        spellTargets.push(`cl.book.${bookId}`, `concn.${bookId}`);\n      }\n    }\n    return spellTargets;\n  }\n\n  /**\n   * @internal\n   */\n  _prepareContainerItems() {\n    const collection = [];\n\n    /**\n     * @param {Item} item\n     */\n    function getContainerContents(item) {\n      if (item.type !== \"container\") return;\n\n      item.items.forEach((i) => {\n        collection.push(i);\n        getContainerContents(i);\n      });\n    }\n\n    this.itemTypes.container.forEach((item) => {\n      getContainerContents(item);\n    });\n\n    this.containerItems = collection;\n  }\n\n  /**\n   * Prepare boolean and dictionary flags.\n   *\n   * @internal\n   */\n  _prepareItemFlags() {\n    const items = this.allItems;\n    const bFlags = {};\n    const dFlags = {};\n\n    for (const item of items) {\n      // Process boolean flags\n      if (item.isActive) {\n        const flags = item.system.flags?.boolean || {};\n        for (const flag of Object.keys(flags)) {\n          bFlags[flag] ??= { sources: [] };\n          bFlags[flag].sources.push(item);\n        }\n      }\n\n      // Process dictionary flags\n      const tag = item.system.tag;\n      if (tag) {\n        const dEntries = Object.entries(item.system.flags?.dictionary || {});\n        if (dEntries.length) {\n          dFlags[tag] ||= {};\n\n          for (const [key, value] of dEntries) {\n            if (dFlags[tag][key] !== undefined && this.isOwner) {\n              const msg = game.i18n.format(\"PF1.Warning.DuplicateDFlag\", {\n                actor: this.uuid,\n                item: item.name,\n                key,\n                tag,\n              });\n              ui.notifications.warn(msg, { console: false });\n              console.warn(msg, item);\n            }\n\n            dFlags[tag][key] = item.isActive ? value : 0;\n          }\n        }\n      }\n    }\n\n    this.itemFlags = {\n      boolean: bFlags,\n      dictionary: dFlags,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter((item) => item.hasChanges && item.isActive);\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    addDefaultChanges.call(this, changes);\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  applyActiveEffects() {\n    // Apply active effects. Required for status effects in v11 and onward, such as blind and invisible.\n    super.applyActiveEffects();\n\n    this.prepareConditions();\n\n    this._prepareContainerItems();\n    this._prepareItemFlags();\n    this._prepareChanges();\n  }\n\n  /**\n   * Deletes expired temporary active effects and disables linked expired buffs.\n   *\n   * @param {object} [options] Additional options\n   * @param {Combat} [options.combat] Combat to expire data in, if relevant\n   * @param {number} [options.timeOffset=0] Time offset from world time\n   * @param {string} [options.event] - Expiration event\n   * @param {number} [options.initiative] - Initiative based expiration marker\n   * @param {DocumentModificationContext} [context] Document update context\n   * @throws {Error} - With insufficient permissions to control the actor.\n   */\n  async expireActiveEffects({ combat, timeOffset = 0, event = null, initiative = null } = {}, context = {}) {\n    if (!this.isOwner) throw new Error(\"Must be owner\");\n\n    const worldTime = game.time.worldTime + timeOffset;\n\n    const temporaryEffects = this._effectsWithDuration.filter((ae) => {\n      const { seconds, startTime } = ae.duration;\n      const { rounds, startRound } = ae.duration;\n\n      // Calculate remaining duration.\n      // AE.duration.remaining is updated by Foundry only in combat and is unreliable.\n      let remaining = Infinity;\n      // Convert rounds to seconds\n      if (Number.isFinite(seconds) && seconds >= 0) {\n        const elapsed = worldTime - (startTime ?? 0);\n        remaining = seconds - elapsed;\n      } else if (rounds > 0 && combat) {\n        // BUG: This will ignore which combat the round tracking started for\n        const elapsed = combat.round - (startRound ?? 0);\n        remaining = (rounds - elapsed) * CONFIG.time.roundTime;\n      }\n\n      const flags = ae.getFlag(\"pf1\", \"duration\") ?? {};\n      const endOn = flags.end || \"turnStart\";\n      if (remaining > 0) return false;\n      // Initiative based ending\n      if (initiative !== null) {\n        // Anything not on initiative expires if they have negative time remaining\n        if (endOn !== \"initiative\") return remaining < 0;\n        return flags.initiative <= initiative;\n      }\n      // End on turn end, but we're at turn start and there's 0 or more seconds left\n      else if (remaining === 0 && endOn === \"turnEnd\" && event === \"turnStart\") {\n        return false;\n      }\n      return remaining <= 0;\n    });\n\n    const disableActiveEffects = [],\n      deleteActiveEffects = [],\n      disableBuffs = [];\n\n    for (const ae of temporaryEffects) {\n      let item;\n      // Use AE parent when available\n      if (ae.parent instanceof Item) item = ae.parent;\n      // Otherwise support older origin cases\n      else item = ae.origin ? fromUuidSync(ae.origin, { relative: this }) : null;\n\n      if (item?.type === \"buff\") {\n        disableBuffs.push({ _id: item.id, \"system.active\": false });\n      } else {\n        if (ae.getFlag(\"pf1\", \"autoDelete\")) {\n          deleteActiveEffects.push(ae.id);\n        } else {\n          disableActiveEffects.push({ _id: ae.id, disabled: true });\n        }\n      }\n    }\n\n    // Add context info for why this update happens to allow modules to understand the cause.\n    context.pf1 ??= {};\n    context.pf1.reason = \"duration\";\n\n    if (deleteActiveEffects.length) {\n      const deleteAEContext = foundry.utils.mergeObject(\n        { render: !disableBuffs.length && !disableActiveEffects.length },\n        context\n      );\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", deleteActiveEffects, deleteAEContext);\n    }\n\n    if (disableActiveEffects.length) {\n      const disableAEContext = foundry.utils.mergeObject({ render: !disableBuffs.length }, context);\n      await this.updateEmbeddedDocuments(\"ActiveEffect\", disableActiveEffects, disableAEContext);\n    }\n\n    if (disableBuffs.length) {\n      await this.updateEmbeddedDocuments(\"Item\", disableBuffs, context);\n    }\n  }\n\n  /**\n   * Prepare actor data before items are prepared.\n   *\n   * @override\n   */\n  prepareBaseData() {\n    this._initialized = false; // For preventing items initializing certain data too early\n\n    super.prepareBaseData();\n\n    this.system.details ??= {};\n    this.system.details.level ??= {};\n\n    this.sourceInfo = {};\n    this.changeFlags = {};\n\n    // Reset equipment info\n    this.equipment = {\n      shield: { type: pf1.config.shieldTypes.none, id: undefined },\n      armor: { type: pf1.config.armorTypes.none, id: undefined },\n    };\n\n    // Reset class info\n    this.classes = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n\n    this._resetInherentTotals();\n\n    this._prepareNaturalReach();\n\n    if (Hooks.events.pf1PrepareBaseActorData?.length) {\n      Hooks.callAll(\"pf1PrepareBaseActorData\", this);\n    }\n\n    // Update total level and mythic tier\n    const classes = this.itemTypes.class;\n    const { level, mythicTier } = classes.reduce(\n      (cur, o) => {\n        o.reset(); // HACK: Out of order preparation for later.\n        cur.level += o.hitDice;\n        cur.mythicTier += o.mythicTier;\n        return cur;\n      },\n      { level: 0, mythicTier: 0 }\n    );\n\n    this.system.details.level.value = level;\n    this.system.details.mythicTier = mythicTier;\n\n    // Refresh ability scores\n    for (const ability of Object.values(this.system.abilities)) {\n      const value = ability.value;\n      if (value === null) {\n        ability.total = null;\n        ability.base = null;\n      } else {\n        ability.undrained = value;\n        ability.total = value - ability.drain;\n        ability.penalty = (ability.penalty || 0) - Math.abs(ability.userPenalty || 0);\n        ability.base = ability.total;\n      }\n    }\n    this.refreshAbilityModifiers();\n\n    // Reset BAB\n    {\n      const k = \"system.attributes.bab.total\";\n      const v = Math.floor(\n        classes.reduce((cur, cls) => {\n          // HACK: Depends on earlier out of order preparation\n          const bab = cls.system.babBase;\n          if (bab !== 0) {\n            getSourceInfo(this.sourceInfo, k).positive.push({\n              name: cls.name,\n              value: fractionalToString(bab),\n            });\n          }\n          return cur + bab;\n        }, 0)\n      );\n      this.system.attributes.bab.total = Math.floor(v);\n\n      // Add .value for NPC lite sheet\n      if (this.system.attributes.bab.value) this.system.attributes.bab.total += this.system.attributes.bab.value ?? 0;\n    }\n\n    this._prepareClassSkills();\n\n    // Reset HD\n    foundry.utils.setProperty(this.system, \"attributes.hd.total\", this.system.details.level.value);\n  }\n\n  /**\n   * Prepare actor.system.conditions for use.\n   *\n   * @protected\n   */\n  prepareConditions() {\n    this.system.conditions = {};\n    const conditions = this.system.conditions;\n\n    // Populate condition base values\n    for (const condition of pf1.registry.conditions.keys()) {\n      conditions[condition] = false;\n    }\n\n    // Fill in actual state\n    // ??[] is to deal with the set not being available yet for some actors\n    for (const status of this.statuses) {\n      if (status in conditions) {\n        conditions[status] = true;\n      }\n    }\n\n    // Conditions backwards compatibility\n    if (!Object.getOwnPropertyDescriptor(this.system.attributes, \"conditions\")?.[\"get\"]) {\n      delete this.system.attributes.conditions;\n      Object.defineProperty(this.system.attributes, \"conditions\", {\n        get() {\n          foundry.utils.logCompatibilityWarning(\n            \"actor.system.attributes.conditions is deprecated in favor of actor.system.conditions and actor.statuses\",\n            { since: \"PF1 v10\", until: \"PF1 v11\" }\n          );\n          return conditions;\n        },\n        enumerable: false,\n      });\n    }\n  }\n\n  /**\n   * Prepare natural reach for melee range and for reach weapons.\n   *\n   * @protected\n   */\n  _prepareNaturalReach() {\n    // Prepare base natural reach\n    this.system.traits.reach ??= {};\n    const reach = this.system.traits.reach;\n\n    reach.base = this.constructor.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Reset values\n    reach.natural = reach.base;\n    reach.total = { ...reach.base };\n\n    // Add base natural values to the change sources\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.melee\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.melee,\n    });\n    getSourceInfo(this.sourceInfo, \"system.traits.reach.total.reach\").positive.push({\n      name: game.i18n.localize(\"PF1.BuffTarReach\"),\n      modifier: \"base\",\n      value: reach.base.reach,\n    });\n  }\n\n  /**\n   * Reset class skills.\n   *\n   * @protected\n   */\n  _prepareClassSkills() {\n    const skillSet = new Set();\n    this.items\n      .filter((actorItems) => [\"class\", \"race\", \"feat\"].includes(actorItems.type))\n      .forEach((relevantActorItems) => {\n        for (const [classSkillName, isClassSkill] of Object.entries(relevantActorItems.system.classSkills || {})) {\n          if (isClassSkill === true) skillSet.add(classSkillName);\n        }\n      });\n\n    for (const [skillKey, skillData] of Object.entries(this.system.skills)) {\n      if (!skillData) {\n        console.warn(`Bad skill data for \"${skillKey}\"`, this);\n        continue;\n      }\n      this.system.skills[skillKey].cs = skillSet.has(skillKey);\n      for (const k2 of Object.keys(skillData.subSkills ?? {})) {\n        foundry.utils.setProperty(skillData, `subSkills.${k2}.cs`, skillSet.has(skillKey));\n      }\n    }\n  }\n\n  /**\n   * Checks if there's any matching proficiency\n   *\n   * @param {pf1.document.item.ItemEquipmentPF} item - The item to check for.\n   * @returns {boolean} Whether the actor is proficient with that item.\n   */\n  hasArmorProficiency(item) {\n    // Check for item type\n    if (item.type !== \"equipment\" || ![\"armor\", \"shield\"].includes(item.system.subType)) return true;\n\n    const aprof = this.system.traits?.armorProf;\n    if (!aprof) return false;\n\n    // Base proficiency\n    if (aprof.total.includes(item.baseArmorProficiency)) return true;\n\n    // Base types with custom proficiencies\n    const profs = aprof.customTotal ?? [];\n    if (profs.length == 0) return false;\n    const baseTypes = item.system.baseTypes ?? [];\n    if (baseTypes.length == 0) return false;\n\n    return profs.some((prof) => baseTypes.includes(prof));\n  }\n\n  /**\n   * Test if actor is proficient with specified weapon.\n   *\n   * @remarks Natural attacks incorrectly do not count as proficient.\n   *\n   * @param {ItemPF} item - Item to test\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.override=true] - Allow item's proficiency override to influence the result.\n   * @returns {boolean} - Proficiency state\n   */\n  hasWeaponProficiency(item, { override = true } = {}) {\n    if (override && item.system.proficient) return true; // Explicitly marked as proficient\n\n    const wprof = this.system.traits?.weaponProf;\n    if (!wprof) return false;\n\n    // Match basic proficiencies (only present on weapons)\n    if (item.type === \"weapon\" && wprof.total.includes(item.subType)) return true;\n\n    // Match base types\n    const profs = wprof.customTotal ?? [];\n    if (profs.length == 0) return false;\n    const baseTypes = item.system.baseTypes ?? [];\n    if (baseTypes.length == 0) return false;\n\n    return profs.some((prof) => baseTypes.includes(prof));\n  }\n\n  /**\n   * Update specific spellbook.\n   *\n   * @internal\n   * @param {string} bookId Spellbook identifier\n   * @param {object} [rollData] Roll data instance\n   * @param {object} cache Pre-calculated data for re-use from _generateSpellbookCache\n   */\n  _updateSpellBook(bookId, rollData, cache) {\n    const actorData = this.system;\n    const book = actorData.attributes.spells.spellbooks[bookId];\n    if (!book) {\n      console.error(`Spellbook data not found for \"${bookId} on actor`, this);\n      return;\n    }\n\n    book.isSchool = book.kind !== \"divine\";\n\n    // Set spellbook label\n    book.label = book.name || game.i18n.localize(`PF1.SpellBook${bookId.capitalize()}`);\n\n    // Do not process spellbooks that are not in use\n    if (!book.inUse) return;\n\n    // Use custom name if present\n    if (book.name) book.label = book.name;\n    // Get name from class if selected\n    else if (book.class) {\n      if (book.class === \"_hd\") book.label = book.name || game.i18n.localize(\"PF1.SpellBookSpelllike\");\n      else {\n        const bookClassId = this.classes[book.class]?._id;\n        const bookClass = this.items.get(bookClassId);\n        if (bookClass) book.label = bookClass.name;\n      }\n    }\n\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    const bookInfo = cache.books[bookId];\n\n    const spellbookAbility = actorData.abilities[book.ability];\n\n    // Add spell slots based on ability bonus slot formula\n    const spellSlotAbilityScoreBonus = RollPF.safeRollSync(book.spellSlotAbilityBonusFormula || \"0\", rollData).total,\n      spellSlotAbilityScore = (spellbookAbility?.total ?? 10) + spellSlotAbilityScoreBonus,\n      spellSlotAbilityMod = pf1.utils.getAbilityModifier(spellSlotAbilityScore);\n\n    // Set CL\n    let clTotal = 0;\n    {\n      const key = `system.attributes.spells.spellbooks.${bookId}.cl.total`;\n      const formula = book.cl.formula || \"0\";\n      let total = 0;\n\n      // Add NPC base\n      if (this.type === \"npc\") {\n        const value = book.cl.base || 0;\n        total += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.Base\"), value);\n      }\n      // Add HD\n      if (book.class === \"_hd\") {\n        const value = actorData.attributes.hd.total;\n        total += value;\n        clTotal += value;\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.HitDie\"), value);\n      }\n      // Add class levels\n      else if (book.class && rollData.classes[book.class]) {\n        const value = rollData.classes[book.class].unlevel;\n        total += value;\n        clTotal += value;\n\n        setSourceInfoByName(this.sourceInfo, key, rollData.classes[book.class].name, value);\n      }\n\n      // Set auto spell level calculation offset\n      if (book.autoSpellLevelCalculation) {\n        const autoFormula = book.cl.autoSpellLevelCalculationFormula || \"0\";\n        const autoBonus = RollPF.safeRollSync(autoFormula, rollData).total ?? 0;\n        const autoTotal = Math.clamped(total + autoBonus, 1, 20);\n        book.cl.autoSpellLevelTotal = autoTotal;\n\n        clTotal += autoBonus;\n        if (autoBonus !== 0) {\n          setSourceInfoByName(\n            this.sourceInfo,\n            key,\n            game.i18n.localize(\"PF1.AutoSpellClassLevelOffset.Formula\"),\n            autoBonus\n          );\n        }\n      }\n\n      // Add from bonus formula\n      const clBonus = RollPF.safeRollSync(formula, rollData).total;\n      clTotal += clBonus;\n      if (clBonus > 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus);\n      } else if (clBonus < 0) {\n        setSourceInfoByName(this.sourceInfo, key, game.i18n.localize(\"PF1.CasterLevelBonusFormula\"), clBonus, false);\n      }\n\n      // Subtract energy drain\n      if (rollData.attributes.energyDrain) {\n        clTotal = Math.max(0, clTotal - rollData.attributes.energyDrain);\n        setSourceInfoByName(\n          this.sourceInfo,\n          key,\n          game.i18n.localize(\"PF1.Condition.energyDrain\"),\n          -Math.abs(rollData.attributes.energyDrain),\n          false\n        );\n      }\n\n      clTotal += book.cl.total ?? 0;\n      clTotal += book.cl.bonus ?? 0;\n      book.cl.total = clTotal;\n    }\n\n    // Set concentration bonus\n    {\n      // Temp fix for old actors that fail migration\n      if (Number.isFinite(book.concentration)) {\n        console.error(`Bad spellbook concentration value \"${book.concentration}\" in spellbook \"${bookId}\"`);\n        book.concentration = {};\n      }\n\n      // Bonus formula\n      const concFormula = book.concentrationFormula;\n      const formulaRoll = concFormula.length\n        ? RollPF.safeRollSync(concFormula, rollData, undefined, undefined, { minimize: true })\n        : { total: 0, isDeterministic: true };\n      const rollBonus = formulaRoll.isDeterministic ? formulaRoll.total : 0;\n\n      // Add it all up\n      const classAbilityMod = actorData.abilities[book.ability]?.mod ?? 0;\n      const concentration = clTotal + classAbilityMod + rollBonus;\n      const prevTotal = book.concentration.total ?? 0;\n\n      // Set source info\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.CasterLevel\"),\n        clTotal,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.SpellcastingAbility\"),\n        classAbilityMod,\n        false\n      );\n      setSourceInfoByName(\n        this.sourceInfo,\n        `system.attributes.spells.spellbooks.${bookId}.concentration.total`,\n        game.i18n.localize(\"PF1.ByBonus\"),\n        formulaRoll.isDeterministic ? formulaRoll.total : formulaRoll.formula,\n        false\n      );\n\n      // Apply value\n      book.concentration ??= {};\n      book.concentration.total = prevTotal + concentration;\n    }\n\n    const getAbilityBonus = (a) => (a !== 0 ? ActorPF.getSpellSlotIncrease(spellSlotAbilityMod, a) : 0);\n\n    const mode = new SpellbookMode(book);\n\n    // Spell slots\n    const useAuto = book.autoSpellLevelCalculation;\n\n    // Turn off spell points with auto slots\n    if (useAuto) book.spellPoints.useSystem = false;\n    // Turn off bonus slots from ability score without auto slots\n    else book.autoSpellLevels = false;\n\n    const useSpellPoints = book.spellPoints.useSystem === true;\n\n    // Set base \"spontaneous\" based on spell prep mode when using auto slots or spell points\n    book.spontaneous = mode.isSemiSpontaneous;\n    const isSpontaneous = book.spontaneous;\n\n    if (useAuto) {\n      let casterType = book.casterType;\n      // Set caster type to sane default if configuration not found.\n      if (pf1.config.casterProgression.castsPerDay[mode.raw]?.[casterType] === undefined) {\n        const keys = Object.keys(pf1.config.casterProgression.castsPerDay[mode.raw]);\n        if (mode.isPrestige) book.casterType = casterType = keys[0];\n        else book.casterType = casterType = keys.at(-1);\n      }\n\n      const castsForLevels =\n        pf1.config.casterProgression[isSpontaneous ? \"castsPerDay\" : \"spellsPreparedPerDay\"][mode.raw][casterType];\n      let classLevel = Math.clamped(book.cl.autoSpellLevelTotal, 1, 20);\n\n      // Protect against invalid class level bricking actors\n      if (!Number.isSafeInteger(classLevel)) {\n        const msg = `Actor ${this.id} has invalid caster class level.`;\n        console.error(msg, classLevel);\n        ui.notifications?.error(msg);\n        classLevel = Math.floor(classLevel);\n      }\n\n      rollData.ablMod = spellSlotAbilityMod;\n\n      const allLevelModFormula = book[isSpontaneous ? \"castPerDayAllOffsetFormula\" : \"preparedAllOffsetFormula\"] || \"0\";\n      const allLevelMod = RollPF.safeRollSync(allLevelModFormula, rollData).total ?? 0;\n\n      for (let level = 0; level < 10; level++) {\n        const levelData = book.spells[`spell${level}`];\n        // 0 is special because it doesn't get bonus preps and can cast them indefinitely so can't use the \"cast per day\" value\n        const spellsForLevel =\n          (level === 0 && isSpontaneous\n            ? pf1.config.casterProgression.spellsPreparedPerDay[mode.raw][casterType][classLevel - 1][level]\n            : castsForLevels[classLevel - 1][level]) ?? NaN;\n        levelData.base = spellsForLevel || 0;\n\n        const offsetFormula = levelData[isSpontaneous ? \"castPerDayOffsetFormula\" : \"preparedOffsetFormula\"] || \"0\";\n\n        const max =\n          (level === 0 && book.hasCantrips) || Number.isFinite(spellsForLevel)\n            ? spellsForLevel +\n              getAbilityBonus(level) +\n              allLevelMod +\n              (RollPF.safeRollSync(offsetFormula, rollData).total ?? 0)\n            : NaN;\n\n        levelData.max = max;\n        if (!Number.isFinite(levelData.value)) levelData.value = max;\n      }\n    } else {\n      for (let level = book.hasCantrips ? 0 : 1; level < 10; level++) {\n        const levelData = book.spells[`spell${level}`];\n        let base = levelData.base;\n        if (Number.isNaN(base) || base === null) {\n          levelData.base = null;\n          levelData.max = 0;\n        } else if (book.autoSpellLevels && base >= 0) {\n          base += getAbilityBonus(level);\n          levelData.max = base;\n        } else {\n          levelData.max = base || 0;\n        }\n\n        if (!Number.isFinite(levelData.value)) {\n          levelData.value = levelData.max;\n        }\n      }\n    }\n\n    // Set spontaneous spell slots to something sane\n    for (let a = 0; a < 10; a++) {\n      book.spells[`spell${a}`].value ||= 0;\n    }\n\n    // Update spellbook slots\n    {\n      const slots = {};\n      for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n        slots[spellLevel] = new SpellbookSlots({\n          level: spellLevel,\n          max: book.spells[`spell${spellLevel}`].max || 0,\n          domain: book.domainSlotValue || 0,\n        });\n      }\n\n      // Slot usage\n      for (let level = 0; level < 10; level++) {\n        /** @type {pf1.documents.item.ItemSpellPF[]} */\n        const levelSpells = bookInfo.level[level]?.spells ?? [];\n        const lvlSlots = slots[level];\n        const levelData = book.spells[`spell${level}`];\n        levelData.slots = { used: 0, max: lvlSlots.max };\n\n        if (isSpontaneous) continue;\n\n        for (const spell of levelSpells) {\n          if (Number.isFinite(spell.maxCharges)) {\n            const slotCost = spell.slotCost;\n            const slots = spell.maxCharges * slotCost;\n            if (spell.isDomain) {\n              lvlSlots.domain -= slots;\n            } else {\n              lvlSlots.used += slots;\n            }\n            lvlSlots.value -= slots;\n          }\n        }\n        levelData.value = lvlSlots.value;\n\n        // Add slot statistics\n        levelData.slots.used = lvlSlots.used;\n        levelData.slots.remaining = levelData.slots.max - levelData.slots.used;\n        levelData.slots.excess = Math.max(0, -levelData.slots.remaining);\n        levelData.domain = { max: lvlSlots.domainMax, remaining: lvlSlots.domain };\n        levelData.domain.excess = Math.max(0, -levelData.domain.remaining);\n        levelData.mismatchSlots = -(\n          levelData.slots.excess +\n          levelData.domain.excess -\n          Math.max(0, levelData.slots.remaining)\n        );\n        if (levelData.mismatchSlots == 0) levelData.mismatchSlots = levelData.slots.remaining;\n        levelData.invalidSlots = levelData.mismatchSlots != 0 || levelData.slots.remaining != 0;\n      }\n\n      // Spells available hint text if auto spell levels is enabled\n      const maxLevelByAblScore = (spellbookAbility?.total ?? 0) - 10;\n\n      const allLevelModFormula = book.preparedAllOffsetFormula || \"0\";\n      const allLevelMod = RollPF.safeRollSync(allLevelModFormula, rollData).total ?? 0;\n\n      const casterType = book.casterType || \"high\";\n      const classLevel = Math.floor(Math.clamped(book.cl.autoSpellLevelTotal, 1, 20));\n\n      for (let spellLevel = 0; spellLevel < 10; spellLevel++) {\n        const spellLevelData = book.spells[`spell${spellLevel}`];\n        // Insufficient ability score for the level\n        if (maxLevelByAblScore < spellLevel) {\n          spellLevelData.hasIssues = true;\n          spellLevelData.lowAbilityScore = true;\n        }\n\n        spellLevelData.known = { unused: 0, max: 0 };\n        const domainSlotMax = spellLevel > 0 ? slots[spellLevel].domainMax ?? 0 : 0;\n        spellLevelData.preparation = { unused: 0, max: 0, domain: domainSlotMax };\n\n        let remaining = 0;\n        if (mode.isPrepared) {\n          // for prepared casters, just use the 'value' calculated above\n          remaining = spellLevelData.value;\n          spellLevelData.preparation.max = spellLevelData.max + domainSlotMax;\n        } else {\n          // spontaneous or hybrid\n          // if not prepared then base off of casts per day\n          let available = useAuto\n            ? pf1.config.casterProgression.spellsPreparedPerDay[mode.raw][casterType]?.[classLevel - 1][spellLevel]\n            : spellLevelData.max;\n          available += allLevelMod;\n\n          const formula = spellLevelData.preparedOffsetFormula || \"0\";\n          available += RollPF.safeRollSync(formula, rollData).total ?? 0;\n\n          // Leave record of max known\n          spellLevelData.known.max = available;\n\n          if (Number.isNaN(available)) {\n            spellLevelData.hasIssues = true;\n            spellLevelData.lowLevel = true;\n          }\n\n          // Count spell slots used\n          let dSlots = slots[spellLevel].domain;\n          const used =\n            bookInfo.level[spellLevel]?.spells.reduce((acc, /** @type {pf1.documents.item.ItemSpellPF} */ i) => {\n              const { preparation, atWill, domain } = i.system;\n              if (!atWill && preparation.value) {\n                const slotCost = i.slotCost;\n                if (domain && dSlots > 0) dSlots -= slotCost;\n                else acc += slotCost;\n              }\n              return acc;\n            }, 0) ?? 0;\n          slots[spellLevel].domainUnused = dSlots;\n          slots[spellLevel].used = used;\n\n          remaining = available - used;\n        }\n\n        const lvlSlots = slots[spellLevel];\n        // Detect domain slot problems\n        const domainSlotsRemaining = spellLevel > 0 ? lvlSlots.domain : 0;\n\n        spellLevelData.remaining = remaining;\n\n        // No more processing needed\n        if (remaining == 0 && domainSlotsRemaining <= 0) continue;\n\n        spellLevelData.hasIssues = true;\n\n        if (isSpontaneous) {\n          spellLevelData.known.unused = Math.max(0, remaining);\n          spellLevelData.known.excess = -Math.min(0, remaining);\n          if (useAuto) {\n            spellLevelData.invalidKnown = spellLevelData.known.unused != 0 || spellLevelData.known.excess != 0;\n            spellLevelData.mismatchKnown = remaining;\n          }\n        } else {\n          spellLevelData.preparation.unused = Math.max(0, remaining);\n        }\n      }\n    }\n\n    // Spell points\n    if (useSpellPoints) {\n      const formula = book.spellPoints.maxFormula || \"0\";\n      rollData.cl = book.cl.total;\n      rollData.ablMod = spellSlotAbilityMod;\n      const spellClass = book.class ?? \"\";\n      rollData.classLevel =\n        spellClass === \"_hd\"\n          ? rollData.attributes.hd?.total ?? rollData.details.level.value\n          : rollData.classes[spellClass]?.level || 0;\n\n      const roll = RollPF.safeRollSync(formula, rollData);\n      book.spellPoints.max = roll.total;\n    } else {\n      book.spellPoints.max = 0;\n    }\n\n    // Set spellbook ranges\n    book.range = new SpellRanges(book.cl.total);\n  }\n\n  /**\n   * Collect some basic spellbook info so it doesn't need to be gathered again for each spellbook.\n   *\n   * @internal\n   * @returns {object} Spellbook cache\n   */\n  _generateSpellbookCache() {\n    const bookKeys = Object.keys(this.system.attributes.spells.spellbooks);\n\n    const allSpells = this.itemTypes.spell;\n\n    const cache = {\n      spells: allSpells,\n      books: {},\n    };\n\n    // Prepare spellbooks\n    bookKeys.forEach((bookKey) => {\n      cache.books[bookKey] ??= new Spellbook(bookKey, this);\n    });\n\n    // Spread out spells to books\n    allSpells.forEach((spell) => {\n      const bookKey = spell.system.spellbook;\n      if (!bookKeys.includes(bookKey)) return console.error(\"Spell has invalid book\", spell);\n      cache.books[bookKey].addSpell(spell);\n    });\n\n    return cache;\n  }\n\n  /**\n   * Update all spellbooks\n   *\n   * @internal\n   * @param {object} [rollData] Roll data instance\n   * @param {object} [cache] Spellbook cache\n   */\n  updateSpellbookInfo(rollData, cache) {\n    rollData ??= this.getRollData({ refresh: true });\n    cache ??= this._generateSpellbookCache();\n\n    const spellbooks = this.system.attributes.spells.spellbooks;\n\n    // Set spellbook info\n    for (const bookKey of Object.keys(spellbooks)) {\n      this._updateSpellBook(bookKey, rollData, cache);\n    }\n\n    // usedSpellbooks backwards compatibility. Mostly unused by the system itself\n    Object.defineProperty(this.system.attributes.spells, \"usedSpellbooks\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"actor.system.attributes.spells.usedSpellbooks is deprecated with no replacement.\",\n          {\n            since: \"PF1 v10\",\n            until: \"PF1 v11\",\n          }\n        );\n\n        return Object.keys(spellbooks).filter((book) => spellbooks[book].inUse);\n      },\n    });\n  }\n\n  /**\n   * Called just before the first change is applied, and after every change is applied.\n   * Sets additional variables (such as spellbook range)\n   *\n   * @internal\n   */\n  refreshDerivedData() {\n    // Reset maximum dexterity bonus\n    this.system.attributes.maxDexBonus = null;\n    this.system.abilities.dex.maxBonus = this.system.abilities.dex.mod;\n\n    {\n      // Compute encumbrance\n      const encPen = this._computeEncumbrance();\n\n      // Apply armor penalties\n      const gearPen = this._applyArmorPenalties();\n\n      // Set armor check penalty\n      this.system.attributes.acp.encumbrance = encPen.acp;\n      this.system.attributes.acp.gear = gearPen.acp;\n      this.system.attributes.acp.total = Math.max(encPen.acp, gearPen.acp);\n      // Broken gear affects only skills\n      this.system.attributes.acp.skill = Math.max(encPen.acp, gearPen.acpSkill);\n\n      // Set maximum dexterity bonus\n      if (encPen.maxDexBonus != null || gearPen.maxDexBonus != null) {\n        this.system.attributes.maxDexBonus = Math.min(\n          encPen.maxDexBonus ?? Number.POSITIVE_INFINITY,\n          gearPen.maxDexBonus ?? Number.POSITIVE_INFINITY\n        );\n        this.system.abilities.dex.maxBonus = Math.min(\n          this.system.abilities.dex.maxBonus,\n          this.system.attributes.maxDexBonus\n        );\n      }\n    }\n  }\n\n  /**\n   * Augment the basic actor data with additional dynamic data.\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n\n    const race = this.race;\n    if (race) {\n      const creatureType = race?.system.creatureType || \"humanoid\";\n      this.system.traits ??= {};\n      this.system.traits.type = creatureType;\n      this.system.traits.humanoid = creatureType === \"humanoid\";\n      this.system.attributes ??= {};\n      this.system.attributes.quadruped ??= race?.system.quadruped ?? false;\n    }\n\n    this.prepareProficiencies();\n\n    // Reset roll data cache\n    // Some changes act wonky without this\n    // Example: `@skills.hea.rank >= 10 ? 6 : 3` doesn't work well without this\n    delete this._rollData;\n\n    // Update dependant data and resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    const natReach = this.system.traits.reach.total;\n    // Ensure reach never becomes negative value\n    if (natReach.melee < 0) natReach.melee = 0;\n    if (natReach.reach < 0) natReach.reach = 0;\n\n    // Prepare specific derived data\n    this.prepareSpecificDerivedData();\n\n    // Prepare CMB total\n    this.prepareCMB();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    this._prepareOverlandSpeeds();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update items\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    // Initialization is effectively complete at this point\n    this._initialized = true;\n\n    this._setSourceDetails();\n  }\n\n  /**\n   * Calculate overland speeds.\n   *\n   * @protected\n   */\n  _prepareOverlandSpeeds() {\n    for (const speed of Object.values(this.system.attributes?.speed ?? {})) {\n      speed.overland = speed.total > 0 ? pf1.utils.overlandSpeed(speed.total).speed : 0;\n    }\n  }\n\n  /**\n   * Prepare armor, weapon, and language proficiencies.\n   *\n   * @protected\n   */\n  prepareProficiencies() {\n    const actorData = this.system;\n    // Handle armor and weapon proficiencies for PCs\n    // NPCs are considered proficient with their armor\n    // Collect proficiencies from items, add them to actor's proficiency totals\n    const proficiencies = {\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n      languages: pf1.config.languages,\n    };\n    for (const [prof, translations] of Object.entries(proficiencies)) {\n      // Custom proficiency baseline from actor\n      const customProficiencies = actorData.traits[prof]?.custom || [];\n\n      // Iterate over all items to create one array of non-custom proficiencies\n      const proficiencies = this.items.reduce(\n        (profs, item) => {\n          // Check only items able to grant proficiencies\n          if (foundry.utils.hasProperty(item, `system.${prof}`)) {\n            // Get existing sourceInfo for item with this name, create sourceInfo if none is found\n            // Remember whether sourceInfo can be modified or has to be pushed at the end\n            let sInfo = getSourceInfo(this.sourceInfo, `system.traits.${prof}`).positive.find(\n              (o) => o.name === item.name\n            );\n            const hasInfo = !!sInfo;\n            if (!sInfo) sInfo = { name: item.name, value: [] };\n            else if (typeof sInfo.value === \"string\") sInfo.value = sInfo.value.split(\", \");\n\n            // Regular proficiencies\n            for (const proficiency of item.system[prof].value) {\n              // Add localized source info if item's info does not have this proficiency already\n              if (!sInfo.value.includes(proficiency)) sInfo.value.push(translations[proficiency]);\n              // Add raw proficiency key\n              if (!profs.includes(proficiency)) profs.push(proficiency);\n            }\n\n            // Collect trimmed but otherwise original proficiency strings, dedupe array for actor's total\n            const customProfs = item.system[prof].custom || [];\n            // Add readable custom profs to sources and overall collection\n            sInfo.value.push(...customProfs);\n            customProficiencies.push(...customProfs);\n\n            if (sInfo.value.length > 0) {\n              // Dedupe if adding to existing sourceInfo\n              if (hasInfo) sInfo.value = [...new Set(sInfo.value)];\n              // Transform arrays into presentable strings\n              sInfo.value = sInfo.value.join(\", \");\n              // If sourceInfo was not a reference to existing info, push it now\n              if (!hasInfo) getSourceInfo(this.sourceInfo, `system.traits.${prof}`).positive.push(sInfo);\n            }\n          }\n          return profs;\n        },\n        [...(actorData.traits[prof]?.value ?? [])] // Default proficiency baseline from actor\n      );\n\n      // Save collected proficiencies in actor's data\n      actorData.traits[prof] ??= {}; // In case the data structure is missing\n      actorData.traits[prof].total = [...proficiencies];\n      actorData.traits[prof].customTotal = [...customProficiencies];\n    }\n  }\n\n  /**\n   * Prepare total CMB value.\n   *\n   * @todo Move all the logic here to the Change system.\n   *\n   * @protected\n   */\n  prepareCMB() {\n    const shrAtk = this.system.attributes.attack.shared ?? 0,\n      genAtk = this.system.attributes.attack.general ?? 0,\n      cmbAbl = this.system.attributes.cmbAbility,\n      cmbAblMod = this.system.abilities[cmbAbl]?.mod ?? 0,\n      size = this.system.traits.size,\n      szCMBMod = pf1.config.sizeSpecialMods[size] ?? 0,\n      cmbBonus = this.system.attributes.cmb.bonus ?? 0,\n      cmb = shrAtk + genAtk + szCMBMod + cmbBonus + cmbAblMod;\n    this.system.attributes.cmb.total = cmb;\n  }\n\n  /**\n   * @protected\n   */\n  prepareSpecificDerivedData() {\n    if (Hooks.events.pf1PrepareDerivedActorData?.length) {\n      Hooks.callAll(\"pf1PrepareDerivedActorData\", this);\n    }\n\n    this.refreshDerivedData();\n\n    const attributes = this.system.attributes,\n      abilities = this.system.abilities;\n\n    // Set base ability modifier\n    for (const ab of Object.keys(abilities)) {\n      const total = abilities[ab].base;\n      const penalty = abilities[ab].penalty || 0;\n      const damage = abilities[ab].damage;\n      abilities[ab].baseMod = pf1.utils.getAbilityModifier(total, { penalty, damage });\n    }\n\n    const actorData = this.system;\n    const data = actorData;\n\n    // Round health\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n    const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[healthConfig.rounding];\n    for (const k of [\"hp\", \"vigor\"]) {\n      attributes[k].max = round(attributes[k].max);\n    }\n\n    // Offset relative health\n    for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n      const hp = this.system.attributes[key];\n      if (Number.isFinite(hp?.offset)) {\n        hp.value = hp.max + hp.offset;\n      }\n    }\n\n    // Shared attack bonuses\n    {\n      // Total\n      const totalAtk = attributes.bab.total - attributes.acp.attackPenalty - (attributes.energyDrain ?? 0);\n      attributes.attack.shared = totalAtk;\n    }\n\n    // Update wound threshold\n    this.updateWoundThreshold();\n\n    // Create arbitrary skill slots\n    for (const skillId of pf1.config.arbitrarySkills) {\n      if (data.skills[skillId] == null) continue;\n      const skill = data.skills[skillId];\n      skill.subSkills = skill.subSkills || {};\n      for (const subSkillId of Object.keys(skill.subSkills)) {\n        if (skill.subSkills[subSkillId] == null) delete skill.subSkills[subSkillId];\n      }\n    }\n\n    // Delete removed skills\n    for (const skillId of Object.keys(data.skills)) {\n      const skl = data.skills[skillId];\n      if (skl == null) {\n        delete data.skills[skillId];\n      }\n    }\n\n    // Mark background skills\n    for (const skillId of Object.keys(data.skills)) {\n      if (pf1.config.backgroundSkills.includes(skillId)) {\n        const skill = data.skills[skillId];\n        skill.background = true;\n        for (const subSkillId of Object.keys(skill.subSkills ?? {})) skill.subSkills[subSkillId].background = true;\n      }\n    }\n\n    // Combine AC types\n    for (const k of [\"ac.normal.total\", \"ac.shield.total\", \"ac.natural.total\"]) {\n      const v = foundry.utils.getProperty(actorData, k);\n      if (v) {\n        for (const k2 of [\"normal\", \"flatFooted\"]) {\n          attributes.ac[k2].total += v;\n        }\n      }\n    }\n\n    // Add Dexterity to AC\n    {\n      // get configured ability scores\n      const acAbl = attributes.ac.normal.ability ?? \"dex\";\n      const acTouchAbl = attributes.ac.touch.ability ?? \"dex\";\n      const cmdDexAbl = attributes.cmd.dexAbility ?? \"dex\";\n      let acAblMod = abilities[acAbl]?.mod ?? 0;\n      let acTouchAblMod = abilities[acTouchAbl]?.mod ?? 0;\n      const cmdDexAblMod = abilities[cmdDexAbl]?.mod ?? 0;\n      if (this.changeFlags[\"loseDexToAC\"]) {\n        acAblMod = Math.min(acAblMod, 0);\n        acTouchAblMod = Math.min(acTouchAblMod, 0);\n      }\n      const maxDex = attributes.maxDexBonus ?? null;\n      const ac = {\n        normal: maxDex !== null ? Math.min(maxDex, acAblMod) : acAblMod,\n        touch: maxDex !== null ? Math.min(maxDex, acTouchAblMod) : acTouchAblMod,\n        flatFooted: Math.min(0, acAblMod),\n      };\n      const acAblKey = {\n        normal: acAbl,\n        touch: acTouchAbl,\n        flatFooted: acAbl,\n      };\n      const cmd = {\n        total: cmdDexAblMod,\n        flatFootedTotal: Math.min(0, cmdDexAblMod),\n      };\n      for (const [k, v] of Object.entries(ac)) {\n        attributes.ac[k].total += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.ac.${k}.total`).positive.push({\n          value: v,\n          name: pf1.config.abilities[acAblKey[k]],\n        });\n      }\n      for (const [k, v] of Object.entries(cmd)) {\n        attributes.cmd[k] += v;\n        getSourceInfo(this.sourceInfo, `system.attributes.cmd.${k}`).positive.push({\n          value: v,\n          name: pf1.config.abilities[cmdDexAbl],\n        });\n      }\n    }\n\n    // Reduce final speed under certain circumstances\n    {\n      let reducedSpeed = false;\n      const sInfo = { name: \"\", value: game.i18n.localize(\"PF1.ReducedMovementSpeed\") };\n\n      // from encumbrance\n      const encLevel = attributes.encumbrance.level;\n      if (encLevel > 0) {\n        const encLevels = pf1.config.encumbranceLevels;\n        if (encLevel >= encLevels.heavy) {\n          if (!this.changeFlags.noHeavyEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.HeavyEncumbrance\");\n          }\n        } else if (encLevel >= encLevels.medium) {\n          if (!this.changeFlags.noMediumEncumbrance) {\n            reducedSpeed = true;\n            sInfo.name = game.i18n.localize(\"PF1.MediumEncumbrance\");\n          }\n        }\n      }\n\n      const armor = { type: 0 };\n      const eqData = this.equipment;\n      if (eqData) this._prepareArmorData(eqData.armor, armor);\n\n      // Wearing heavy armor\n      if (armor.type == pf1.config.armorTypes.heavy && !this.changeFlags.heavyArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.heavy\");\n      }\n      // Wearing medium armor\n      else if (armor.type == pf1.config.armorTypes.medium && !this.changeFlags.mediumArmorFullSpeed) {\n        reducedSpeed = true;\n        sInfo.name = game.i18n.localize(\"PF1.Subtypes.Item.equipment.armor.Types.medium\");\n      }\n\n      for (const speedKey of Object.keys(this.system.attributes.speed)) {\n        const speedValue = this.system.attributes.speed[speedKey].total;\n        // Save speed unaffected by speed maluses here (not counting negative changes)\n        // TODO: Somehow make this ignore additional set operators\n        this.system.attributes.speed[speedKey].unhindered = speedValue; // @since PF1 v10\n\n        if (reducedSpeed && speedValue > 0) {\n          this.system.attributes.speed[speedKey].total = this.constructor.getReducedMovementSpeed(speedValue);\n          getSourceInfo(this.sourceInfo, `system.attributes.speed.${speedKey}.total`).negative.push(sInfo);\n        }\n      }\n    }\n\n    // Add encumbrance source details\n    let encACPPPenalty = null,\n      encMaxDex = null;\n    switch (attributes.encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium: {\n        encACPPPenalty = 3;\n        encMaxDex = 3;\n        break;\n      }\n      case pf1.config.encumbranceLevels.heavy: {\n        encACPPPenalty = 6;\n        encMaxDex = 1;\n        break;\n      }\n    }\n    const encLabel = game.i18n.localize(\"PF1.Encumbrance\");\n    if (encACPPPenalty !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n        name: encLabel,\n        value: encACPPPenalty,\n      });\n    }\n    if (encMaxDex !== null) {\n      getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n        name: encLabel,\n        value: encMaxDex,\n      });\n      let maxDexLabel = new Intl.NumberFormat(\"nu\", { signDisplay: \"always\" }).format(encMaxDex);\n      maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.normal.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n      });\n      getSourceInfo(this.sourceInfo, \"system.attributes.ac.touch.total\").negative.push({\n        name: encLabel,\n        value: maxDexLabel,\n      });\n    }\n\n    this.updateSpellbookInfo();\n  }\n\n  /**\n   * Returns this actor's labels for use with sheets.\n   *\n   * @protected\n   * @returns {Record<string, string>}\n   */\n  getLabels() {\n    const labels = {};\n\n    labels.alignment = pf1.config.alignments[this.system.details.alignment];\n\n    // Speed\n    labels.speed = {};\n    for (const [key, obj] of Object.entries(this.system.attributes.speed ?? {})) {\n      const dist = pf1.utils.convertDistance(obj.total);\n      labels.speed[key] = `${dist[0]} ${pf1.config.measureUnitsShort[dist[1]]}`;\n    }\n\n    return labels;\n  }\n\n  /**\n   * Computes armor penalties for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from armor.\n   */\n  _applyArmorPenalties() {\n    let attackACPPenalty = 0; // ACP to attack penalty from lacking proficiency. Stacks infinitely.\n    const acp = { armor: 0, shield: 0 };\n    const broken = { armor: { value: 0, item: null }, shield: { value: 0, item: null } };\n    const mdex = { armor: null, shield: null };\n\n    this.itemTypes.equipment\n      .filter((item) => item.system.equipped)\n      .forEach((item) => {\n        const eqType = item.system.subType;\n        const isShieldOrArmor = [\"armor\", \"shield\"].includes(eqType);\n        let itemACP = Math.abs(item.system.armor.acp);\n        if (item.system.masterwork === true && isShieldOrArmor) itemACP = Math.max(0, itemACP - 1);\n\n        if (isShieldOrArmor) {\n          itemACP = Math.max(0, itemACP + (this.system.attributes?.acp?.[`${eqType}Bonus`] ?? 0));\n        }\n\n        if (itemACP) {\n          if (item.isBroken) {\n            broken[eqType].value = itemACP;\n            broken[eqType].item = item;\n\n            const bsInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.find(\n              (o) => o.itemId === item.id\n            );\n            if (bsInfo) bsInfo.value = itemACP;\n            else {\n              getSourceInfo(this.sourceInfo, \"system.attributes.acp.skill\").negative.push({\n                name: `${item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n                itemId: item.id,\n                value: itemACP,\n              });\n            }\n          }\n\n          const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.find(\n            (o) => o.itemId === item.id\n          );\n\n          if (sInfo) sInfo.value = itemACP;\n          else {\n            getSourceInfo(this.sourceInfo, \"system.attributes.acp.total\").negative.push({\n              name: item.name,\n              itemId: item.id,\n              value: itemACP,\n            });\n          }\n        }\n\n        if (isShieldOrArmor) {\n          if (itemACP > acp[eqType]) acp[eqType] = itemACP;\n          if (!item.getProficiency(false)) attackACPPenalty += itemACP;\n        }\n\n        if (item.system.armor.dex !== null && isShieldOrArmor) {\n          const mDex = Number.parseInt(item.system.armor.dex, 10);\n          if (Number.isInteger(mDex)) {\n            const mod = this.system.attributes?.mDex?.[`${eqType}Bonus`] ?? 0;\n            const itemMDex = mDex + mod;\n            mdex[eqType] = Math.min(itemMDex, mdex[eqType] ?? Number.POSITIVE_INFINITY);\n\n            const sInfo = getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.find(\n              (o) => o.itemId === item.id\n            );\n            if (sInfo) sInfo.value = mDex;\n            else {\n              getSourceInfo(this.sourceInfo, \"system.attributes.maxDexBonus\").negative.push({\n                name: item.name,\n                itemId: item.id,\n                value: mDex,\n                ignoreNull: false,\n              });\n            }\n\n            // Add max dex to AC, too.\n            let maxDexLabel = new Intl.NumberFormat(\"nu\", { signDisplay: \"always\" }).format(mDex);\n            maxDexLabel = `${game.i18n.localize(\"PF1.MaxDexShort\")} ${maxDexLabel}`;\n            for (const p of [\"system.attributes.ac.normal.total\", \"system.attributes.ac.touch.total\"]) {\n              // Use special maxDex id to ensure only the worst is shown\n              const sInfoA = getSourceInfo(this.sourceInfo, p).negative.find((o) => o.id === \"maxDex\");\n              if (sInfoA) {\n                if (mDex < sInfoA.value) {\n                  sInfoA.value = maxDexLabel;\n                  sInfoA.itemId = item.id;\n                  sInfoA.name = item.name;\n                }\n              } else {\n                getSourceInfo(this.sourceInfo, p).negative.push({\n                  name: item.name,\n                  value: maxDexLabel,\n                  itemId: item.id,\n                  id: \"maxDex\",\n                });\n              }\n            }\n          }\n        }\n      });\n\n    // Add Broken to sources\n    {\n      for (const eqType of Object.keys(broken)) {\n        const value = broken[eqType].value;\n        if (value == 0) continue;\n        const brokenId = broken[eqType].item.id;\n        const sInfo = getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.find(\n          (o) => o.brokenId === brokenId\n        );\n        if (sInfo) sInfo.value = value;\n        else\n          getSourceInfo(this.sourceInfo, `system.attributes.acp.${eqType}Bonus`).negative.push({\n            name: `${broken[eqType].item.name} (${game.i18n.localize(\"PF1.Broken\")})`,\n            brokenId,\n            value,\n          });\n      }\n    }\n\n    // Return result\n    const totalACP = acp.armor + acp.shield;\n    const result = {\n      maxDexBonus: null,\n      acp: totalACP,\n      acpSkill: totalACP + broken.armor.value + broken.shield.value,\n    };\n    this.system.attributes.acp.gear = totalACP;\n    if (mdex.armor !== null || mdex.shield !== null)\n      result.maxDexBonus = Math.min(mdex.armor ?? Number.POSITIVE_INFINITY, mdex.shield ?? Number.POSITIVE_INFINITY);\n\n    // Set armor penalty to attack rolls\n    this.system.attributes.acp.attackPenalty = attackACPPenalty;\n\n    return result;\n  }\n\n  /**\n   * @internal\n   */\n  prepareItemLinks() {\n    for (const item of this.items) {\n      const links = item.system.links;\n      if (!links) continue;\n\n      for (const type of Object.keys(links)) {\n        for (const link of links[type]) {\n          const linkedItem = fromUuidSync(link.uuid, { relative: this });\n          if (!linkedItem) continue;\n\n          // Detect bad links pointing to other actors\n          if (linkedItem.actor && linkedItem.actor !== this) {\n            console.error(\"Invalid item link:\", { type, uuid: link.uuid, actor: this, item, linked: linkedItem });\n            continue;\n          }\n\n          switch (type) {\n            case \"charges\": {\n              linkedItem.links.charges = item;\n              linkedItem.prepareLinks();\n              break;\n            }\n            case \"children\": {\n              linkedItem.links.parent = item;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _setSourceDetails() {\n    const actorData = this.system;\n    const sourceDetails = {};\n    // Get empty source arrays\n    for (const b of Object.keys(pf1.config.buffTargets)) {\n      const buffTargets = getChangeFlat.call(this, b, null);\n      for (const bt of buffTargets) {\n        if (!sourceDetails[bt]) sourceDetails[bt] = [];\n      }\n    }\n    // Add additional source arrays not covered by changes\n    sourceDetails[\"system.attributes.bab.total\"] = [];\n\n    // Add base values to certain bonuses\n    sourceDetails[\"system.attributes.ac.normal.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.ac.touch.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.ac.flatFooted.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.cmd.total\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n    sourceDetails[\"system.attributes.cmd.flatFootedTotal\"].push({ name: game.i18n.localize(\"PF1.Base\"), value: 10 });\n\n    // Add ability score data\n    for (const [a, abl] of Object.entries(actorData.abilities)) {\n      sourceDetails[`system.abilities.${a}.total`].push({ name: game.i18n.localize(\"PF1.Base\"), value: abl.value });\n      // Add ability penalty, damage and drain\n      if (abl.damage > 0) {\n        sourceDetails[`system.abilities.${a}.mod`].push({\n          name: game.i18n.localize(\"PF1.AbilityDamage\"),\n          value: -Math.floor(Math.abs(abl.damage) / 2),\n        });\n      }\n      if (abl.drain > 0) {\n        sourceDetails[`system.abilities.${a}.total`].push({\n          name: game.i18n.localize(\"PF1.AbilityDrain\"),\n          value: -Math.abs(abl.drain),\n        });\n      }\n    }\n\n    // Add wound threshold data\n    const hpconf = game.settings.get(\"pf1\", \"healthConfig\").variants;\n    const hpconfvariant = this.type === \"npc\" ? hpconf.npc : hpconf.pc;\n    const wtUsage = hpconfvariant.useWoundThresholds;\n    if (wtUsage > 0) {\n      const wtData = this.getWoundThresholdData({ healthConfig: hpconfvariant });\n\n      if (wtData.level > 0) {\n        const penalty = -wtData.penalty;\n        for (const fk of pf1.config.woundThresholdChangeTargets) {\n          const flats = getChangeFlat.call(this, fk, \"untyped\", penalty);\n          for (const k of flats) {\n            if (!k) continue;\n            sourceDetails[k].push({\n              name: pf1.config.woundThresholdConditions[wtData.level],\n              value: penalty,\n            });\n          }\n        }\n      }\n    }\n\n    const dexDenied = this.changeFlags.loseDexToAC === true;\n\n    // Add extra data\n    const rollData = this.getRollData();\n    for (const [changeTarget, changeGrp] of Object.entries(this.sourceInfo)) {\n      for (const grp of Object.values(changeGrp)) {\n        sourceDetails[changeTarget] = sourceDetails[changeTarget] || [];\n        for (const src of grp) {\n          if (!src.operator) src.operator = \"add\";\n          // TODO: Separate source name from item type label\n          const label = this.constructor._getSourceLabel(src);\n          let srcValue =\n            src.value != null\n              ? src.value\n              : RollPF.safeRollAsync(src.formula || \"0\", rollData, [changeTarget, src, this], {\n                  suppressError: !this.isOwner,\n                }).total;\n          if (src.operator === \"set\") {\n            let displayValue = srcValue;\n            if (src.change?.isDistance) displayValue = pf1.utils.convertDistance(displayValue)[0];\n            srcValue = game.i18n.format(\"PF1.SetTo\", { value: displayValue });\n          }\n          if (!(src.operator === \"add\" && srcValue === 0) || src.ignoreNull === false) {\n            // Account for dex denied denying dodge bonuses\n            if (dexDenied && srcValue > 0 && src.modifier === \"dodge\" && src.operator === \"add\" && src.change?.isAC)\n              continue;\n\n            sourceDetails[changeTarget].push({\n              name: label.replace(/[[\\]]/g, \"\"),\n              modifier: src.modifier || \"\",\n              value: srcValue,\n            });\n          }\n        }\n      }\n    }\n\n    this.sourceDetails = sourceDetails;\n  }\n\n  /**\n   * @internal\n   */\n  _getInherentTotalsKeys() {\n    // Determine base keys\n    const keys = {\n      \"attributes.ac.normal.total\": 10,\n      \"attributes.ac.touch.total\": 10,\n      \"attributes.ac.flatFooted.total\": 10,\n      \"attributes.bab.total\": 0,\n      \"attributes.cmd.total\": 10,\n      \"attributes.cmd.flatFootedTotal\": 10,\n      \"attributes.acp.armorBonus\": 0,\n      \"attributes.acp.shieldBonus\": 0,\n      \"attributes.acp.gear\": 0,\n      \"attributes.acp.encumbrance\": 0,\n      \"attributes.acp.total\": 0,\n      \"attributes.acp.skill\": 0,\n      \"attributes.acp.attackPenalty\": 0,\n      \"attributes.maxDexBonus\": null,\n      \"ac.normal.total\": 0,\n      \"ac.normal.base\": 0,\n      \"ac.normal.enh\": 0,\n      \"ac.normal.misc\": 0,\n      \"ac.natural.total\": 0,\n      \"ac.natural.base\": 0,\n      \"ac.natural.misc\": 0,\n      \"ac.natural.enh\": 0,\n      \"ac.shield.total\": 0,\n      \"ac.shield.base\": 0,\n      \"ac.shield.enh\": 0,\n      \"ac.shield.misc\": 0,\n      \"attributes.sr.total\": 0,\n      \"attributes.init.bonus\": 0,\n      \"attributes.init.total\": this.system.attributes.init.value ?? 0,\n      \"attributes.cmb.bonus\": 0,\n      \"attributes.cmb.total\": 0,\n      \"attributes.cmb.value\": 0,\n      \"attributes.hp.max\": this.system.attributes.hp.base ?? 0,\n      \"attributes.vigor.max\": this.system.attributes.vigor.base ?? 0,\n      \"attributes.wounds.max\": this.system.attributes.wounds.base ?? 0,\n      \"attributes.wounds.threshold\": 0,\n      \"attributes.attack.general\": 0,\n      \"attributes.attack.melee\": 0,\n      \"attributes.attack.natural\": 0,\n      \"attributes.attack.ranged\": 0,\n      \"attributes.attack.thrown\": 0,\n      \"attributes.attack.shared\": 0,\n      \"attributes.attack.critConfirm\": 0,\n      \"attributes.mDex\": { armorBonus: 0, shieldBonus: 0 },\n      \"attributes.damage.general\": 0,\n      \"attributes.damage.weapon\": 0,\n      \"attributes.damage.natural\": 0,\n      \"attributes.damage.melee\": 0, // Melee weapon\n      \"attributes.damage.meleeAll\": 0,\n      \"attributes.damage.ranged\": 0, // Ranged weapon\n      \"attributes.damage.rangedAll\": 0,\n      \"attributes.damage.thrown\": 0, // Thrown weapon\n      \"attributes.damage.spell\": 0,\n      \"attributes.damage.shared\": 0,\n      \"attributes.woundThresholds.level\": 0,\n      \"attributes.woundThresholds.mod\": 0,\n      \"attributes.woundThresholds.override\": -1,\n      \"attributes.woundThresholds.penaltyBase\": 0,\n      \"attributes.woundThresholds.penalty\": 0,\n      \"abilities.str.checkMod\": 0,\n      \"abilities.str.total\": 0,\n      \"abilities.dex.checkMod\": 0,\n      \"abilities.dex.total\": 0,\n      \"abilities.con.checkMod\": 0,\n      \"abilities.con.total\": 0,\n      \"abilities.int.checkMod\": 0,\n      \"abilities.int.total\": 0,\n      \"abilities.wis.checkMod\": 0,\n      \"abilities.wis.total\": 0,\n      \"abilities.cha.checkMod\": 0,\n      \"abilities.cha.total\": 0,\n      \"attributes.spells.spellbooks.primary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.secondary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.concentration.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.concentration.total\": 0,\n      \"attributes.spells.spellbooks.primary.cl.total\": 0,\n      \"attributes.spells.spellbooks.secondary.cl.total\": 0,\n      \"attributes.spells.spellbooks.tertiary.cl.total\": 0,\n      \"attributes.spells.spellbooks.spelllike.cl.total\": 0,\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n      \"details.feats.bonus\": 0,\n      \"details.skills.bonus\": 0,\n      \"attributes.speed.land.add\": 0,\n      \"attributes.speed.swim.add\": 0,\n      \"attributes.speed.fly.add\": 0,\n      \"attributes.speed.climb.add\": 0,\n      \"attributes.speed.burrow.add\": 0,\n      \"attributes.savingThrows.fort.total\": this.system.attributes.savingThrows.fort.base ?? 0,\n      \"attributes.savingThrows.ref.total\": this.system.attributes.savingThrows.ref.base ?? 0,\n      \"attributes.savingThrows.will.total\": this.system.attributes.savingThrows.will.base ?? 0,\n    };\n\n    // Determine skill keys\n    try {\n      const skillKeys = getChangeFlat.call(this, \"skills\");\n      for (const k of skillKeys) {\n        keys[k.replace(/^system\\./, \"\")] = 0;\n      }\n    } catch (err) {\n      console.error(\"Could not determine skills for an actor\", this);\n    }\n\n    return keys;\n  }\n\n  /**\n   * Data to reset base value of, but only if missing.\n   *\n   * @private\n   * @see {@link _resetInherentTotals}\n   * @returns {Record<string,number>}\n   */\n  _getBaseValueFillKeys() {\n    return [\n      { parent: \"abilities.str\", key: \"base\", value: 0 },\n      { parent: \"abilities.dex\", key: \"base\", value: 0 },\n      { parent: \"abilities.con\", key: \"base\", value: 0 },\n      { parent: \"abilities.int\", key: \"base\", value: 0 },\n      { parent: \"abilities.wis\", key: \"base\", value: 0 },\n      { parent: \"abilities.cha\", key: \"base\", value: 0 },\n    ];\n  }\n\n  /**\n   * @protected\n   */\n  _resetInherentTotals() {\n    const keys = this._getInherentTotalsKeys();\n\n    // Reset totals\n    for (const [k, v] of Object.entries(keys)) {\n      try {\n        foundry.utils.setProperty(this.system, k, v);\n      } catch (err) {\n        console.error(err, k);\n      }\n    }\n\n    for (const data of this._getBaseValueFillKeys()) {\n      const { parent, key, value } = data;\n      const o = getProperty(this.system, parent);\n      if (!o) continue; // Not all actor types have these\n      o[key] ??= value;\n    }\n  }\n\n  /**\n   * Return reduced movement speed.\n   *\n   * @example\n   * pf1.documents.actor.ActorPF.getReducedMovementSpeed(30); // => 20\n   *\n   * @param {number} value - The non-reduced movement speed.\n   * @returns {number} The reduced movement speed.\n   */\n  static getReducedMovementSpeed(value) {\n    return value - Math.floor(value / 5 / 3) * 5;\n  }\n\n  /**\n   * Return increased amount of spell slots by ability score modifier.\n   *\n   * @example\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(2, 1); // => 1\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 1); // => 2\n   * pf1.documents.actor.ActorPF.getSpellSlotIncrease(6, 7); // => 0\n   *\n   * @param {number} mod - The associated ability modifier.\n   * @param {number} level - Spell level.\n   * @returns {number} Amount of spell levels to increase.\n   */\n  static getSpellSlotIncrease(mod, level) {\n    if (level === 0) return 0;\n    if (mod <= 0) return 0;\n    return Math.max(0, Math.ceil((mod + 1 - level) / 4));\n  }\n\n  /**\n   * Return the amount of experience required to gain a certain character level.\n   *\n   * @abstract\n   * @param {number} level - The desired level\n   * @returns {number} - The XP required\n   */\n  getLevelExp(level) {\n    return 0; // Only used by PCs\n  }\n\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Socket Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.diff === false || context.recursive === false) return; // Don't diff if we were told not to diff\n\n    if (!changed.system) return; // No system updates.\n\n    const oldData = this.system;\n\n    this._syncProtoTokenSize(changed);\n\n    // Offset HP values\n    const attributes = changed.system.attributes;\n    if (attributes) {\n      for (const key of [\"hp\", \"wounds\", \"vigor\"]) {\n        const hp = attributes[key];\n        if (!hp) continue;\n        if (hp.value !== undefined && hp.offset === undefined) {\n          const max = hp.max ?? oldData.attributes[key]?.max ?? 0;\n          hp.offset = hp.value - max;\n        }\n        // Do not ever keep .value\n        delete hp.value;\n      }\n\n      // Convert excess vigor damage to wounds\n      const vigor = attributes.vigor;\n      if (vigor?.offset < 0) {\n        const maxVigor = oldData.attributes.vigor.max;\n        const excessVigorDamage = -(maxVigor + vigor.offset);\n        if (excessVigorDamage > 0) {\n          attributes.wounds ??= {};\n          attributes.wounds.offset ??= oldData.attributes?.wounds?.offset ?? 0;\n          attributes.wounds.offset -= excessVigorDamage;\n          vigor.offset = -maxVigor;\n        }\n      }\n    }\n\n    if (changed.system.attributes?.quadruped !== undefined) {\n      const quad = changed.system.attributes.quadruped;\n      const quadRace = this.race?.system.quadruped ?? false;\n      // Null if setting qudruped to same as race (no override)\n      if (quad === quadRace) changed.system.attributes.quadruped = null;\n    }\n\n    // Make certain variables absolute\n    const abilities = changed.system.abilities;\n    if (abilities) {\n      const absoluteKeys = [\"userPenalty\", \"damage\", \"drain\"];\n      const keys = Object.keys(abilities);\n      for (const abl of keys) {\n        const ablData = abilities[abl];\n        if (!ablData) continue; // e.g. if null from being deleted for homebrew\n        for (const absKey of absoluteKeys) {\n          if (ablData[absKey] !== undefined) {\n            ablData[absKey] = Math.abs(ablData[absKey]);\n          }\n        }\n      }\n    }\n\n    const energyDrain = changed.system.attributes?.energyDrain;\n    if (energyDrain !== undefined) {\n      changed.system.attributes.energyDrain = Math.abs(energyDrain);\n    }\n\n    // Backwards compatibility\n    const conditions = changed.system.attributes?.conditions;\n\n    // Never allow updates to the new condtions location\n    if (changed.system.conditions !== undefined) {\n      delete changed.system.conditions;\n    }\n\n    if (conditions) {\n      foundry.utils.logCompatibilityWarning(\n        \"Toggling conditions via Actor.update() is deprecated in favor of Actor.setCondition()\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n\n      // Prevent data storage\n      delete changed.system.attributes.conditions;\n\n      // Toggle AEs\n      await this.setConditions(conditions);\n    }\n  }\n\n  /**\n   * Synchronize prototype token sizing with actor size.\n   *\n   * @internal\n   * @param {object} changed - Pre-uppdate data\n   */\n  _syncProtoTokenSize(changed) {\n    const sizeKey = changed.system.traits?.size;\n    if (!sizeKey) return;\n\n    if (this.token) return;\n\n    const staticSize =\n      changed.prototypeToken?.flags?.pf1?.staticSize ?? this.prototypeToken.getFlag(\"pf1\", \"staticSize\") ?? false;\n    if (staticSize) return;\n\n    const size = pf1.config.tokenSizes[sizeKey];\n    if (!size) return;\n\n    changed.prototypeToken ??= {};\n    if (changed.prototypeToken?.width === undefined) {\n      changed.prototypeToken.width = size.w;\n    }\n    if (changed.prototypeToken?.height === undefined) {\n      changed.prototypeToken.height = size.h;\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {string} userId\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    // No system data updated\n    if (!changed.system) return;\n\n    const sourceUser = game.user.id === userId;\n\n    let initializeVision = false,\n      refreshLighting = false;\n\n    if (foundry.utils.hasProperty(changed.system, \"traits.senses\")) {\n      initializeVision = true;\n      if (changed.system.traits.senses.ll) {\n        refreshLighting = true;\n      }\n    } else if (changed.flags?.pf1?.visionSharing) {\n      initializeVision = true;\n      refreshLighting = true;\n    }\n\n    if (initializeVision || refreshLighting) {\n      if (this.testUserPermission(game.user, \"OBSERVER\")) {\n        const visionUpdate = {\n          refreshLighting: true,\n          refreshVision: true,\n        };\n\n        // Ensure vision immediately updates\n        if (initializeVision) {\n          for (const token of this.getActiveTokens(false, true)) {\n            token._syncSenses();\n          }\n          visionUpdate.initializeVision = true;\n        }\n\n        // Ensure LLV functions correctly\n        if (refreshLighting) {\n          visionUpdate.initializeLighting = true;\n        }\n\n        canvas.perception.update(visionUpdate, true);\n      }\n    }\n\n    if (sourceUser) {\n      const sizeKey = changed.system.traits?.size;\n      if (sizeKey !== undefined) {\n        this._updateTokenSize(sizeKey);\n      }\n    }\n  }\n\n  /**\n   * Resize token sizes based on actor size.\n   *\n   * Ignores tokens with static size set.\n   *\n   * @todo Add option to update token size on all scenes.\n   *\n   * @internal\n   * @param {string} sizeKey - New size key\n   * @param {object} [options] - Additional options\n   * @returns {Promise<TokenDocument[]>|null} - Updated token documents, or null if no update was performed.\n   * @throws {Error} - On invalid parameters\n   */\n  async _updateTokenSize(sizeKey, options = {}) {\n    const size = pf1.config.tokenSizes[sizeKey];\n    if (!size) throw new Error(`Size key \"${sizeKey}\" is invalid`);\n    const scene = canvas.scene;\n    if (!scene) return null;\n\n    // Get relevant tokens\n    const tokens = this.token\n      ? [this.token]\n      : this.getActiveTokens(false, true).filter((token) => !token.getFlag(\"pf1\", \"staticSize\"));\n\n    const protoTexture = this.prototypeToken?.texture ?? {};\n\n    const updates = tokens.map((t) => ({\n      _id: t.id,\n      width: size.w,\n      height: size.h,\n      texture: {\n        scaleX: size.scale * (protoTexture.scaleX || 1),\n        scaleY: size.scale * (protoTexture.scaleY || 1),\n      },\n    }));\n\n    return TokenDocument.implementation.updateDocuments(updates, { parent: scene });\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {Item|Actor} parent - Parent document\n   * @param {\"items\"|\"effects\"} collection - Collection name\n   * @param {Item[]|ActiveEffect[]} documents - Created documents\n   * @param {object[]} result - Creation data for the documents\n   * @param {object} context - Create context options\n   * @param {string} userId - Triggering user's ID\n   */\n  _onCreateDescendantDocuments(parent, collection, documents, result, context, userId) {\n    super._onCreateDescendantDocuments(...arguments);\n\n    if (userId !== game.user.id) return;\n\n    if (collection === \"items\") {\n      // Apply race size to actor\n      const race = documents.find((d) => d.type === \"race\");\n      if (race?.system.size) {\n        if (this.system.traits.size !== race.system.size) this.update({ \"system.traits.size\": race.system.size });\n      }\n    }\n\n    if (collection === \"effects\") {\n      if (context.pf1?.updateConditionTracks !== false) {\n        this._handleConditionTracks(documents, context);\n      }\n    }\n  }\n\n  /**\n   * Handle condition track toggling post active effect creation if there's still some issues.\n   *\n   * @internal\n   * @param {ActiveEffect[]} documents Updated active effect documents\n   * @returns {Promise}\n   */\n  async _handleConditionTracks(documents) {\n    // Record of previously update conditions that didn't get notified about\n    const previousConditions = {};\n\n    const conditions = {};\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const ae of documents) {\n      for (const statusId of ae.statuses ?? []) {\n        // Skip non-conditions\n        if (!pf1.registry.conditions.has(statusId)) continue;\n\n        // Mark this condition for notification\n        previousConditions[statusId] = true;\n\n        // Process condition tracks\n        for (const conditionGroup of tracks) {\n          if (!conditionGroup.includes(statusId)) continue;\n          // Disable other conditions in the track\n          for (const disableConditionId of conditionGroup) {\n            if (disableConditionId === statusId) continue;\n            conditions[disableConditionId] = false;\n          }\n        }\n      }\n    }\n\n    this._conditionToggleNotify(previousConditions);\n\n    if (!foundry.utils.isEmpty(conditions)) {\n      return this.setConditions(conditions);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {*} parent\n   * @param {\"items\"|\"effects\"} collection\n   * @param {Item|ActiveEffect[]} documents\n   * @param {string[]} ids\n   * @param {object} context - Delete context\n   * @param {string} userId\n   */\n  _onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId) {\n    super._onDeleteDescendantDocuments(parent, collection, documents, ids, context, userId);\n\n    if (collection === \"effects\") {\n      const updatedConditions = {};\n      for (const ae of documents) {\n        for (const statusId of ae.statuses ?? []) {\n          // Toggle off only if it's valid ID and there isn't any other AEs that have same condition still\n          if (pf1.registry.conditions.has(statusId) && !this.statuses.has(statusId)) {\n            updatedConditions[statusId] = false;\n          }\n        }\n      }\n\n      if (context?.pf1?.updateConditionTracks !== false) {\n        this._conditionToggleNotify(updatedConditions);\n      }\n    }\n\n    // Following process is done only on triggering user\n    if (game.user.id !== userId) return;\n\n    if (collection === \"items\") {\n      this._cleanItemLinksTo(documents);\n\n      // Delete child linked items\n      const toRemove = new Set();\n\n      // Remove linked children with item\n      const _enumChildren = (item) => {\n        toRemove.add(item.id);\n\n        const links = item.getLinkedItemsSync(\"children\");\n        for (const link of links) {\n          if (toRemove.has(link.id)) continue;\n          const child = item.actor.items.get(link.id);\n          if (child) _enumChildren(child);\n        }\n      };\n\n      // Find children\n      for (const item of documents) _enumChildren(item);\n      // Remove already deleted items\n      for (const id of ids) toRemove.delete(id);\n\n      if (toRemove.size > 0) {\n        this.deleteEmbeddedDocuments(\"Item\", Array.from(toRemove));\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @param {pf1.documents.item.ItemPF[]} items - Item documents to clean links to.\n   */\n  async _cleanItemLinksTo(items) {\n    const updates = [];\n    // Clean up references to this item\n    for (const deleted of items) {\n      const uuid = deleted.getRelativeUUID(this);\n      for (const item of this.items) {\n        const updateData = await item.removeItemLink(uuid, { commit: false });\n        if (updateData) {\n          updateData._id = item.id;\n          updates.push(updateData);\n        }\n      }\n    }\n\n    if (updates.length) {\n      return this.updateEmbeddedDocuments(\"Item\", updates);\n    }\n  }\n\n  /**\n   * @todo - The condition notification needs to be smarter.\n   *\n   * @internal\n   * @param conditions\n   */\n  _conditionToggleNotify(conditions = {}) {\n    for (const [conditionId, state] of Object.entries(conditions)) {\n      Hooks.callAll(\"pf1ToggleActorCondition\", this, conditionId, state);\n    }\n  }\n\n  /**\n   * @internal\n   * @param {ItemPF} item - the item to add to the actor's resources\n   * @param {object} [options] - extra options\n   * @param {boolean} [options.warnOnDuplicate] - Skips warning if item tag already exists in dictionary flags\n   * @returns {boolean} True if resources were set\n   */\n\n  updateItemResources(item, { warnOnDuplicate = true } = {}) {\n    if (item.type === \"spell\") return false;\n    if (!item.isCharged) return false;\n    if (item.isSingleUse) return false;\n    if (item.isPhysical) return false;\n\n    const tag = item.system.tag;\n    if (!tag) console.error(\"Attempting create resource on tagless item\", item);\n\n    if (warnOnDuplicate && this.system.resources[tag] && this.isOwner) {\n      const msg = game.i18n.format(\"PF1.Warning.DuplicateTag\", {\n        actor: this.uuid,\n        item: item.name,\n        tag,\n      });\n      ui.notifications.warn(msg, { console: false });\n      console.warn(msg, item);\n    }\n\n    const res = new Resource(item);\n    this.system.resources[tag] = res;\n\n    return true;\n  }\n\n  /* -------------------------------------------- */\n  /*  Rolls                                       */\n  /* -------------------------------------------- */\n\n  /**\n   * @deprecated - See {@link pf1.documents.item.ItemAttackPF.fromItem ItemAttackPF.fromItem()}\n   * @param {pf1.documents.item.ItemWeaponPF} item - Weapon to create attack from\n   * @returns {Item|undefined} - Created item.\n   */\n  async createAttackFromWeapon(item) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.createAttackFromWeapon() is deprecated in favor of ItemAttackPF.fromItem()\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const attackItem = pf1.documents.item.ItemAttackPF.fromItem(item);\n\n    // Create attack\n    const [newItem] = await this.createEmbeddedDocuments(\"Item\", [attackItem]);\n    if (!newItem) throw new Error(\"Failed to create attack from weapon\");\n\n    // Create link\n    await item.createItemLink(\"children\", \"data\", newItem, newItem.id);\n\n    // Notify user\n    ui.notifications.info(game.i18n.format(\"PF1.NotificationCreatedAttack\", { item: item.name }));\n\n    // Disable quick use of weapon\n    await item.update({ \"system.showInQuickbar\": false });\n\n    return newItem;\n  }\n\n  /**\n   * Enable and configure a new spellbook.\n   *\n   * @example\n   * // Create spellbook for inquisitor\n   * actor.createSpellbook({ type: \"spontaneous\", progression: \"med\", ability: \"wis\", spells: \"divine\", class: \"inquisitor\", cantrips: true, domain: 0 });\n   *\n   * @param {object} [casting] - Book casting configuration\n   * @param {\"prepared\"|\"spontaneous\"|\"hybrid\"} [casting.type=\"prepared\"] - Spellbook type\n   * @param {\"high\"|\"med\"|\"low\"} [casting.progression=\"high\"] - Casting progression type\n   * @param {string} [casting.ability=\"int\"] - Spellcasting ability score ID\n   * @param {\"arcane\"|\"divine\"|\"psychic\"|\"alchemy\"} [casting.spells=\"arcane\"] - Spell/spellcasting type\n   * @param {string} [casting.class=\"_hd\"] - Class tag\n   * @param {boolean} [casting.cantrips=true] - Has cantrips?\n   * @param {number} [casting.domain=1] - Domain/School slots\n   * @param {number} [casting.offset] - Level offset\n   * @returns {Promise<this>} - Promise to updated document\n   */\n  createSpellbook(casting = {}) {\n    const books = this.system.attributes.spells.spellbooks ?? {};\n    const oldBook = casting.class\n      ? Object.entries(books).find(([_, book]) => !!book.class && book.class === casting.class)\n      : null;\n\n    let bookId;\n    if (oldBook) {\n      if (oldBook[1].inUse) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.SpellbookExists\"));\n      bookId = oldBook[0]; // Reuse old book\n    } else {\n      const available = Object.entries(books).find(([bookId, bookData]) => bookData.inUse !== true);\n      if (available === undefined) return void ui.notifications.warn(game.i18n.localize(\"PF1.Error.NoFreeSpellbooks\"));\n      bookId = available[0];\n    }\n\n    // Add defaults when unconfigured\n    // `class` causes problems if destructured, hence why it is here.\n    casting.type ??= \"prepared\";\n    casting.class ??= \"_hd\";\n    casting.progression ??= \"high\";\n    casting.spells ??= \"arcane\";\n    casting.ability ??= \"int\";\n    casting.cantrips ??= true;\n    casting.domain ??= 1;\n    casting.offset ??= 0;\n    if (casting.offset !== 0) casting.offset = `${casting.offset}`;\n\n    const updateData = {\n      [`system.attributes.spells.spellbooks.${bookId}`]: {\n        inUse: true,\n        kind: casting.spells,\n        class: casting.class,\n        spellPreparationMode: casting.type,\n        casterType: casting.progression,\n        ability: casting.ability,\n        psychic: casting.spells === \"psychic\",\n        arcaneSpellFailure: casting.spells === \"arcane\",\n        hasCantrips: casting.cantrips,\n        domainSlotValue: casting.domain,\n        \"cl.autoSpellLevelCalculationFormula\": casting.offset || \"\",\n      },\n    };\n\n    return this.update(updateData);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Retrieve information about a skill.\n   *\n   * @example\n   * actor.getSkillInfo(\"per\"); // Perception skill info\n   * actor.getSkillInfo(\"crf.alchemy\"); // Craft (Alchemy) subskill info\n   *\n   * @param {string} skillId - Skill ID\n   * @param {object} [options] - Additional options\n   * @param {{ skills: {[key: string]: SkillData}}} [options.rollData] - Roll data instance to use.\n   * @throws {Error} - If defined skill is not found.\n   * @returns {SkillInfo}\n   */\n  getSkillInfo(skillId, { rollData } = {}) {\n    const skillIdParts = skillId.split(\".\");\n    if (skillIdParts.length > 2) skillIdParts.splice(1, 1);\n\n    const mainSkillId = skillIdParts.shift(),\n      subSkillId = skillIdParts.pop(),\n      isSubSkill = !!subSkillId;\n\n    // Reconstruct skillId with new shorter version to ensure format\n    skillId = [mainSkillId, subSkillId].filterJoin(\".\");\n\n    rollData ??= this.getRollData();\n    const parentSkill = isSubSkill ? this.getSkillInfo(mainSkillId, { rollData }) : null;\n\n    /** @type {SkillInfo} */\n    const skill = subSkillId\n      ? parentSkill.subSkills?.[subSkillId]\n      : foundry.utils.deepClone(rollData.skills[mainSkillId]);\n\n    if (!skill) throw new Error(`Invalid skill ID '${skillId}'`);\n\n    skill.journal ||= pf1.config.skillCompendiumEntries[isSubSkill ? mainSkillId : skillId];\n    skill.name ||= pf1.config.skills[skillId] || skillId;\n    skill.id = skillId;\n\n    if (isSubSkill) {\n      skill.fullName = `${parentSkill.name} (${skill.name})`;\n      skill.parentSkill = parentSkill;\n    } else {\n      skill.fullName = skill.name;\n    }\n\n    return skill;\n  }\n\n  /**\n   * Roll a Skill Check\n   *\n   * @example\n   * await actor.rollSkill(\"per\", { skipDialog: true, bonus: \"1d6\", dice: \"2d20kh\" });\n   *\n   * @param {string} skillId      The skill id (e.g. \"per\", \"prf.prf1\", or \"crf.alchemy\")\n   * @param {ActorRollOptions} [options={}]      Options which configure how the skill check is rolled\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSkill(skillId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const skillIdParts = skillId.split(\".\");\n    const mainSkillId = skillIdParts[0],\n      subSkillId = skillIdParts.length > 1 ? skillIdParts.at(-1) : null;\n    // Reconstruct skill ID to ensure it is valid for everything else.\n    skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n    const skillDataPathPart = subSkillId ? `${mainSkillId}.subSkills.${subSkillId}` : mainSkillId;\n\n    const skl = this.getSkillInfo(skillId);\n    const haveParentSkill = !!subSkillId;\n\n    // Add contextual attack string\n    const rollData = this.getRollData();\n    const noteObjects = this.getContextNotes(`skill.${skillId}`);\n    if (haveParentSkill) noteObjects.push(...this.getContextNotes(`skill.${mainSkillId}`, false));\n    const notes = this.formatContextNotes(noteObjects, rollData);\n\n    // Add untrained note\n    if (skl.rt && !skl.rank) {\n      notes.push(game.i18n.localize(\"PF1.Untrained\"));\n    }\n\n    // Gather changes\n    const parts = [];\n    const changes = getHighestChanges(\n      this.changes.filter((c) => {\n        const cf = c.getTargets(this);\n\n        if (haveParentSkill && cf.includes(`system.skills.${mainSkillId}.mod`)) return true;\n        return cf.includes(`system.skills.${skillDataPathPart}.mod`);\n      }),\n      { ignoreTarget: true }\n    );\n\n    // Add ability modifier\n    if (skl.ability) {\n      parts.push(`@abilities.${skl.ability}.mod[${pf1.config.abilities[skl.ability]}]`);\n    }\n\n    // Add rank\n    if (skl.rank > 0) {\n      parts.push(`${skl.rank}[${game.i18n.localize(\"PF1.SkillRankPlural\")}]`);\n      if (skl.cs) {\n        parts.push(`${pf1.config.classSkillBonus}[${game.i18n.localize(\"PF1.CSTooltip\")}]`);\n      }\n    }\n\n    // Add armor check penalty\n    if (skl.acp && rollData.attributes.acp.skill !== 0) {\n      parts.push(`-@attributes.acp.skill[${game.i18n.localize(\"PF1.ACPLong\")}]`);\n    }\n\n    // Add Wound Thresholds info\n    if (rollData.attributes.woundThresholds?.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push(label);\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Add changes\n    for (const c of changes) {\n      if (!c.value) continue;\n      // Hide complex change formulas in parenthesis.\n      if (typeof c.value === \"string\" && RollPF.parse(c.value).length > 1) {\n        parts.push(`(${c.value})[${c.flavor}]`);\n      } else {\n        parts.push(`${c.value}[${c.flavor}]`);\n      }\n    }\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SkillCheck\", { skill: skl.fullName }),\n      chatTemplateData: { properties: props },\n      compendium: { entry: pf1.config.skillCompendiumEntries[skillId] ?? skl.journal, type: \"JournalEntry\" },\n      subject: { skill: skillId },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollSkill\", this, rollOptions, skillId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    if (result) Hooks.callAll(\"pf1ActorRollSkill\", this, result, skillId);\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll basic BAB check\n   *\n   * @param {ActorRollOptions} [options] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollBAB(options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts: [`${this.system.attributes.bab.total}[${game.i18n.localize(\"PF1.BABAbbr\")}]`],\n      subject: { core: \"bab\" },\n      flavor: game.i18n.localize(\"PF1.BAB\"),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollBab\", this, rollOptions) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollBab\", this, result);\n    return result;\n  }\n\n  /**\n   * Roll a basic CMB check for this actor\n   *\n   * @deprecated\n   * @param {ActorRollOptions & {ranged: boolean, ability: string | null}} [options={}]\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollCMB(options = {}) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.rollCMB() is deprecated in favor of ActorPF.rollAttack({maneuver:true})\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return this.rollAttack({ maneuver: true, ...options });\n  }\n\n  /**\n   * Roll a generic attack\n   *\n   * @example\n   * await actor.rollAttack({ ranged: true }); // Basic ranged attack\n   * await actor.rollAttack({ maneuver: true }); // Basic melee maneuver\n   *\n   * @param {ActorRollOptions} [options={}]\n   * @param {boolean} [options.maneuver=false] - Whether this is weapon or maneuver check.\n   * @param {boolean} [options.ranged=false] - Melee or ranged.\n   * @param {boolean} [options.ability=null] - Attack ability. If not defined, appropriate one is chosen based on the ranged option.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAttack({ maneuver = false, ranged = false, ability = null, ...options } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    if (options.melee !== undefined) {\n      foundry.utils.logCompatibilityWarning(\"ActorPF.rollAttack() melee parameter has been deprecated.\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      ranged = !options.melee;\n      delete options.melee;\n    }\n\n    const rangeLabel = {\n      melee: \"PF1.Melee\",\n      ranged: \"PF1.Ranged\",\n    };\n\n    let actionType;\n    if (!maneuver) actionType = ranged ? \"rwak\" : \"mwak\";\n    else actionType = ranged ? \"rcman\" : \"mcman\";\n\n    const atkData = {\n      ...pf1.components.ItemAction.defaultData,\n      name: !ranged ? game.i18n.localize(\"PF1.Melee\") : game.i18n.localize(\"PF1.Ranged\"),\n      actionType,\n    };\n\n    // Alter attack ability\n    const atkAbl = this.system.attributes?.attack?.[`${ranged ? \"ranged\" : \"melee\"}Ability`];\n    atkData.ability.attack = ability ?? (atkAbl || (ranged ? \"dex\" : \"str\"));\n\n    // Alter activation type\n    atkData.activation.type = \"attack\";\n    atkData.activation.unchained.type = \"attack\";\n\n    // Generate temporary item\n    /** @type {pf1.documents.item.ItemAttackPF} */\n    const atk = new Item.implementation(\n      {\n        type: \"attack\",\n        name: !maneuver ? game.i18n.localize(\"TYPES.Item.weapon\") : game.i18n.localize(\"PF1.CMBAbbr\"),\n        system: {\n          actions: [atkData],\n        },\n      },\n      { parent: this }\n    );\n\n    return atk.use(options);\n  }\n\n  /**\n   * Roll a Caster Level check using a particular spellbook of this actor\n   *\n   * @example\n   * await actor.rollCL(\"primary\");\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollCL(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData || this.getRollData();\n    rollData.cl = spellbook.cl.total;\n\n    // Set up roll parts\n    const parts = [];\n\n    const describePart = (value, label) => parts.push(`${value}[${label}]`);\n    const srcDetails = (s) => s?.reverse().forEach((d) => describePart(d.value, d.name, -10));\n    srcDetails(this.sourceDetails[`system.attributes.spells.spellbooks.${bookId}.cl.total`]);\n\n    // Add contextual caster level string\n    const notes = this.getContextNotesParsed(`spell.cl.${bookId}`);\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push(pf1.config.woundThresholdConditions[wT.level]);\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"cl\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.CasterLevelCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollCl\", this, rollOptions, bookId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollCl\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * Roll a concentration check using a particular spellbook of this actor\n   *\n   * @param {string} bookId Spellbook identifier\n   * @param {ActorRollOptions} [options={}] Roll options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollConcentration(bookId, options = {}) {\n    const spellbook = this.system.attributes.spells.spellbooks[bookId];\n    const rollData = options.rollData || this.getRollData();\n    rollData.cl = spellbook.cl.total;\n    rollData.mod = this.system.abilities[spellbook.ability]?.mod ?? 0;\n\n    if (\n      Hooks.call(\"actorRoll\", \"pf1PreActorRollConcentration\", undefined, this, \"concentration\", bookId, options) ===\n      false\n    )\n      return;\n\n    // Set up roll parts\n    const parts = [];\n\n    const describePart = (value, label) => parts.push(`${value}[${label}]`);\n    const srcDetails = (s) => s?.reverse().forEach((d) => describePart(d.value, d.name, -10));\n    srcDetails(this.sourceDetails[`system.attributes.spells.spellbooks.${bookId}.concentration.total`]);\n\n    // Add contextual concentration string\n    const notes = this.getContextNotesParsed(`spell.concentration.${bookId}`);\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) notes.push(game.i18n.localize(pf1.config.woundThresholdConditions[wT.level]));\n    // TODO: Make the penalty show separate of the CL.total.\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      subject: { core: \"concentration\", spellbook: bookId },\n      flavor: game.i18n.localize(\"PF1.ConcentrationCheck\"),\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollConcentration\", this, rollOptions, bookId) === false) return;\n    const result = pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollConcentration\", this, result, bookId);\n    return result;\n  }\n\n  /**\n   * @protected\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.damageResistances=true] If false, damage resistances (DR, ER) are omitted.\n   * @param {boolean} [options.damageVulnerabilities=true] If false, damage vulnerabilities are omitted.\n   */\n  getDefenseHeaders({ damageResistances = true, damageVulnerabilities = true } = {}) {\n    const actorData = this.system;\n    const headers = [];\n\n    const reSplit = pf1.config.re.traitSeparator;\n    const misc = [];\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n\n    if (damageResistances) {\n      // Damage reduction\n      if (actorData.traits.dr.length) {\n        headers.push({ header: game.i18n.localize(\"PF1.DamRed\"), value: actorData.traits.dr.split(reSplit) });\n      }\n      // Energy resistance\n      if (actorData.traits.eres.length) {\n        headers.push({ header: game.i18n.localize(\"PF1.EnRes\"), value: actorData.traits.eres.split(reSplit) });\n      }\n    }\n    if (damageVulnerabilities) {\n      // Damage vulnerabilities\n      if (actorData.traits.dv.value.length || actorData.traits.dv.custom.length) {\n        const value = [\n          ...actorData.traits.dv.value.map((obj) => damageTypes[obj]),\n          ...(actorData.traits.dv.custom || []),\n        ];\n        headers.push({ header: game.i18n.localize(\"PF1.DamVuln\"), value: value });\n      }\n    }\n    // Condition resistance\n    if (actorData.traits.cres.length) {\n      headers.push({ header: game.i18n.localize(\"PF1.ConRes\"), value: actorData.traits.cres.split(reSplit) });\n    }\n    // Immunities\n    if (\n      actorData.traits.di.value.length ||\n      actorData.traits.di.custom.length ||\n      actorData.traits.ci.value.length ||\n      actorData.traits.ci.custom.length\n    ) {\n      const value = [\n        ...actorData.traits.di.value.map((obj) => damageTypes[obj]),\n        ...(actorData.traits.di.custom || []),\n        ...actorData.traits.ci.value.map((obj) => pf1.config.conditionTypes[obj]),\n        ...(actorData.traits.ci.custom || []),\n      ];\n      headers.push({ header: game.i18n.localize(\"PF1.ImmunityPlural\"), value: value });\n    }\n    // Spell Resistance\n    if (actorData.attributes.sr.total > 0) {\n      misc.push(game.i18n.format(\"PF1.SpellResistanceNote\", { value: actorData.attributes.sr.total }));\n    }\n\n    if (misc.length > 0) {\n      headers.push({ header: game.i18n.localize(\"PF1.MiscShort\"), value: misc });\n    }\n\n    return headers;\n  }\n\n  /**\n   * @protected\n   * @returns\n   */\n  getInitiativeContextNotes() {\n    const notes = this.getContextNotes(\"misc.init\").reduce((arr, o) => {\n      for (const n of o.notes) arr.push(...n.split(/[\\n\\r]+/));\n      return arr;\n    }, []);\n\n    let notesHTML;\n    if (notes.length > 0) {\n      // Format notes if they're present\n      const notesHTMLParts = [];\n      notes.forEach((note) => notesHTMLParts.push(`<span class=\"tag\">${note}</span>`));\n      notesHTML =\n        '<div class=\"flexcol property-group gm-sensitive\"><label>' +\n        game.i18n.localize(\"PF1.Notes\") +\n        '</label> <div class=\"flexrow tag-list\">' +\n        notesHTMLParts.join(\"\") +\n        \"</div></div>\";\n    }\n\n    return [notes, notesHTML];\n  }\n\n  /**\n   * Roll initiative for one or multiple Combatants associated with this actor.\n   * If no combat exists, GMs have the option to create one.\n   * If viewing a full Actor document, all Tokens which map to that actor will be targeted for initiative rolls.\n   * If viewing a synthetic Token actor, only that particular Token will be targeted for an initiative roll.\n   *\n   * @example\n   * await actor.rollInitiative({ dice: \"2d20kh\", createCombatants: true, skipDialog: true });\n   *\n   * @override\n   * @see {@link pf1.documents.CombatPF#rollInitiative}\n   * @param {object} [options={}] Options which configure how initiative is rolled\n   * @param {boolean} [options.createCombatants=false] - Create new Combatant entries for tokens associated with this actor.\n   * @param {boolean} [options.rerollInitiative=false] - Reroll initiative for existing Combatants\n   * @param {string|null} [options.dice=null] - Formula override for dice to roll\n   * @param {string|null} [options.bonus=null] - Formula for bonus to initiative\n   * @param {boolean} [options.skipDialog] - Skip roll dialog\n   * @param {string} [options.rollMode] - Roll mode override\n   * @param {TokenDocumentPF} [options.token=this.token] - For which token this initiative roll is for\n   * @returns {Promise<pf1.documents.CombatPF|null>} The updated Combat document in which initiative was rolled, or null if no initiative was rolled\n   */\n  async rollInitiative({\n    createCombatants = false,\n    rerollInitiative = false,\n    initiativeOptions = {},\n    dice = null,\n    bonus = null,\n    rollMode = null,\n    skipDialog,\n    token,\n  } = {}) {\n    token ||= this.token;\n\n    // Obtain (or create) a combat encounter\n    let combat = game.combat;\n    if (!combat) {\n      if (game.user.isGM) {\n        const cls = getDocumentClass(\"Combat\");\n        combat = await cls.create({ scene: canvas.scene?.id, active: true });\n      } else {\n        ui.notifications.warn(\"COMBAT.NoneActive\", { localize: true });\n        return null;\n      }\n    }\n\n    // Create new combatants\n    if (createCombatants) {\n      const tokens = this.isToken ? [this.token] : this.getActiveTokens().map((t) => t.document);\n      const toCreate = [];\n      if (tokens.length) {\n        for (const t of tokens) {\n          if (t.inCombat) continue;\n          toCreate.push({ tokenId: t.id, sceneId: t.parent.id, actorId: this.id, hidden: t.hidden });\n        }\n      } else toCreate.push({ actorId: this.id, hidden: false });\n      await combat.createEmbeddedDocuments(\"Combatant\", toCreate);\n    }\n\n    // Roll initiative for combatants\n    const combatants = combat.combatants\n      .filter((c) => {\n        if (token && c.token?.id !== token.id) return false;\n        if (c.actor?.id !== this.id) return false;\n        return rerollInitiative || c.initiative === null;\n      })\n      .map((c) => c.id);\n\n    // No combatants. Possibly from reroll being disabled.\n    if (combatants.length == 0) return combat;\n\n    foundry.utils.mergeObject(initiativeOptions, { d20: dice, bonus, rollMode, skipDialog });\n    await combat.rollInitiative(combatants, initiativeOptions);\n    return combat;\n  }\n\n  /**\n   * Roll a specific saving throw\n   *\n   * @example\n   * await actor.rollSavingThrow(\"ref\", { skipDialog: true, dice: \"2d20kh\", bonus: \"4\" });\n   *\n   * @param {\"ref\"|\"fort\"|\"will\"} savingThrowId Identifier for saving throw type.\n   * @param {ActorRollOptions} [options={}] Roll options.\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollSavingThrow(savingThrowId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = this.getRollData();\n    const noteObjects = this.getContextNotes(`savingThrow.${savingThrowId}`);\n    const notes = this.formatContextNotes(noteObjects, rollData);\n\n    const parts = [];\n\n    // Get base\n    const base = this.system.attributes.savingThrows[savingThrowId]?.base;\n    if (base) parts.push(`${base}[${game.i18n.localize(\"PF1.Base\")}]`);\n\n    // Add changes\n    let changeBonus = [];\n    const changes = this.changes.filter((c) => [\"allSavingThrows\", savingThrowId].includes(c.target));\n    {\n      // Get damage bonus\n      changeBonus = getHighestChanges(\n        changes.filter((c) => {\n          return c.operator !== \"set\";\n        }),\n        { ignoreTarget: true }\n      ).reduce((cur, c) => {\n        if (c.value)\n          cur.push({\n            value: c.value,\n            source: c.flavor,\n          });\n        return cur;\n      }, []);\n    }\n    for (const c of changeBonus) {\n      parts.push(`${c.value}[${c.source}]`);\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push(label);\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    // Roll saving throw\n    const props = this.getDefenseHeaders({ damageResistances: false, damageVulnerabilities: false });\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n    const label = pf1.config.savingThrows[savingThrowId];\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.SavingThrowRoll\", { save: label }),\n      subject: { save: savingThrowId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollSave\", this, rollOptions, savingThrowId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollSave\", this, result, savingThrowId);\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Roll an Ability Test\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\n   *\n   * @example\n   * await actor.rollAbilityTest(\"str\");\n   *\n   * @param {string} abilityId - The ability ID (e.g. \"str\")\n   * @param {object} [options={}] - Additional options\n   * @returns {Promise<ChatMessage|object|void>} The chat message if one was created, or its data if not. `void` if the roll was cancelled.\n   */\n  async rollAbilityTest(abilityId, options = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n\n    // Add contextual notes\n    const rollData = options.rollData || this.getRollData();\n    const noteObjects = this.getContextNotes(`abilityChecks.${abilityId}`);\n    const notes = this.formatContextNotes(noteObjects, rollData);\n\n    const label = pf1.config.abilities[abilityId];\n    const abl = this.system.abilities[abilityId];\n\n    const parts = [`@abilities.${abilityId}.mod[${label}]`];\n    if (abl.checkMod != 0) {\n      const changes = this.sourceDetails[`system.abilities.${abilityId}.checkMod`];\n      for (const c of changes) parts.push(`${c.value}[${c.name}]`);\n    }\n    if (this.system.attributes.energyDrain) {\n      parts.push(\"-@attributes.energyDrain\");\n    }\n\n    // Wound Threshold penalty\n    if (rollData.attributes.woundThresholds.penalty > 0) {\n      const label = pf1.config.woundThresholdConditions[rollData.attributes.woundThresholds.level];\n      notes.push(label);\n      parts.push(`- @attributes.woundThresholds.penalty[${label}]`);\n    }\n\n    const props = [];\n    if (notes.length > 0) props.push({ header: game.i18n.localize(\"PF1.Notes\"), value: notes });\n\n    const token = options.token ?? this.token;\n\n    const rollOptions = {\n      ...options,\n      parts,\n      rollData,\n      flavor: game.i18n.format(\"PF1.AbilityTest\", { ability: label }),\n      subject: { ability: abilityId },\n      chatTemplateData: { properties: props },\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n    };\n    if (Hooks.call(\"pf1PreActorRollAbility\", this, rollOptions, abilityId) === false) return;\n    const result = await pf1.dice.d20Roll(rollOptions);\n    Hooks.callAll(\"pf1ActorRollAbility\", this, result, abilityId);\n    return result;\n  }\n\n  /**\n   * Show defenses in chat\n   *\n   * @param {object} [options={}] Additional options\n   * @param {string | null} [options.rollMode=null]   The roll mode to use for the roll; defaults to the user's current preference when `null`.\n   * @param {TokenDocument} [options.token] Relevant token if any.\n   */\n  async displayDefenseCard({ rollMode = null, token } = {}) {\n    if (!this.isOwner) {\n      return void ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n    }\n    const rollData = this.getRollData();\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n\n    // Add contextual AC notes\n    const acNoteObjects = this.getContextNotes(\"misc.ac\");\n    const acNotes = this.formatContextNotes(acNoteObjects, rollData);\n    if (this.system.attributes.acNotes) acNotes.push(...this.system.attributes.acNotes.split(/[\\n\\r]+/));\n\n    // Add contextual CMD notes\n    const cmdNoteObjects = this.getContextNotes(\"misc.cmd\");\n    const cmdNotes = this.formatContextNotes(cmdNoteObjects, rollData);\n    if (this.system.attributes.cmdNotes) cmdNotes.push(...this.system.attributes.cmdNotes.split(/[\\n\\r]+/));\n\n    // Add contextual SR notes\n    const srNoteObjects = this.getContextNotes(\"misc.sr\");\n    const srNotes = this.formatContextNotes(srNoteObjects, rollData);\n    if (this.system.attributes.srNotes) srNotes.push(...this.system.attributes.srNotes.split(/[\\n\\r]+/));\n\n    // BUG: No specific saving throw notes are included\n    const saveNotesObjects = this.getContextNotes(\"allSavingThrows\");\n    const saveNotes = this.formatContextNotes(saveNotesObjects, rollData);\n    if (this.system.attributes.saveNotes) saveNotes.push(...this.system.attributes.saveNotes.split(/[\\n\\r]+/));\n\n    // Add misc data\n    const reSplit = pf1.config.re.traitSeparator;\n    // Damage Reduction\n    const drNotes = Object.values(this.parseResistances(\"dr\"));\n\n    // Energy Resistance\n    const energyResistance = Object.values(this.parseResistances(\"eres\"));\n\n    // Damage Immunity\n    if (this.system.traits.di.value.length || this.system.traits.di.custom.length) {\n      const values = [\n        ...this.system.traits.di.value.map((obj) => damageTypes[obj]),\n        ...(this.system.traits.di.custom || []),\n      ];\n      energyResistance.push(...values.map((o) => game.i18n.format(\"PF1.ImmuneTo\", { immunity: o })));\n    }\n    // Damage Vulnerability\n    if (this.system.traits.dv.value.length || this.system.traits.dv.custom.length) {\n      const values = [\n        ...this.system.traits.dv.value.map((obj) => damageTypes[obj]),\n        ...(this.system.traits.dv.custom || []),\n      ];\n      energyResistance.push(...values.map((o) => game.i18n.format(\"PF1.VulnerableTo\", { vulnerability: o })));\n    }\n    // Conditions\n    const conditions = Object.entries(this.system.conditions ?? {})\n      .filter(([_, enabled]) => enabled)\n      .map(([id]) => pf1.registry.conditions.get(id))\n      .filter((c) => c?.showInDefense)\n      .map((c) => c.name);\n\n    // Wound Threshold penalty\n    const wT = this.getWoundThresholdData();\n    if (wT.valid) {\n      const wTlabel = pf1.config.woundThresholdConditions[wT.level];\n      acNotes.push(wTlabel);\n      cmdNotes.push(wTlabel);\n    }\n\n    // Get actor's token\n    token ??= this.token;\n\n    // Create message\n    const actorData = this.system;\n    const templateData = {\n      actor: this,\n      name: token?.name ?? this.name,\n      tokenUuid: token?.uuid ?? null,\n      ac: {\n        normal: actorData.attributes.ac.normal.total,\n        touch: actorData.attributes.ac.touch.total,\n        flatFooted: actorData.attributes.ac.flatFooted.total,\n        notes: acNotes,\n      },\n      cmd: {\n        normal: actorData.attributes.cmd.total,\n        flatFooted: actorData.attributes.cmd.flatFootedTotal,\n        notes: cmdNotes,\n      },\n      misc: {\n        sr: actorData.attributes.sr.total,\n        srNotes: srNotes,\n        drNotes: drNotes,\n        energyResistance: energyResistance,\n        conditions: conditions,\n      },\n      saves: {\n        notes: saveNotes,\n      },\n    };\n    // Add regeneration and fast healing\n    if ((actorData.traits?.fastHealing || \"\").length || (actorData.traits?.regen || \"\").length) {\n      templateData.regen = {\n        regen: actorData.traits.regen,\n        fastHealing: actorData.traits.fastHealing,\n      };\n    }\n\n    rollMode ??= game.settings.get(\"core\", \"rollMode\");\n\n    const chatData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/defenses.hbs\", templateData),\n      speaker: ChatMessage.implementation.getSpeaker({ actor: this, token, alias: token?.name }),\n      rollMode,\n      flags: {\n        core: {\n          canPopout: true,\n        },\n        pf1: {\n          subject: \"defenses\",\n        },\n      },\n    };\n\n    // Apply roll mode\n    ChatMessage.implementation.applyRollMode(chatData, rollMode);\n\n    return ChatMessage.implementation.create(chatData);\n  }\n\n  /**\n   * @internal\n   * @param key\n   */\n  _deprecatePF1PrefixConditions(key) {\n    if (/^pf1_/.test(key)) {\n      const newKey = key.replace(/^pf1_/, \"\");\n      foundry.utils.logCompatibilityWarning(`Condition \"${key}\" is deprecated in favor of \"${newKey}\"`, {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n      key = newKey;\n    }\n    return key;\n  }\n\n  /**\n   * Easy way to toggle a condition.\n   *\n   * @example\n   * await actor.toggleCondition(\"dazzled\");\n   *\n   * @param {boolean} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @returns {object} Condition ID to boolean mapping of actual updates.\n   */\n  async toggleCondition(conditionId) {\n    return this.setCondition(conditionId, !this.hasCondition(conditionId));\n  }\n\n  /**\n   * Easy way to set a condition.\n   *\n   * @example\n   * await actor.setCondition(\"dazzled\", true);\n   * await actor.setCondition(\"sleep\", { duration: { seconds: 60 } });\n   *\n   * @param {string} conditionId - A direct condition key, as per {@link pf1.registry.conditions}, such as `shaken` or `dazed`.\n   * @param {object|boolean} enabled - Whether to enable (true) the condition, or disable (false) it. Or object for merging into the active effect as part of enabling.\n   * @param {object} [context] Update context\n   * @returns {object} Condition ID to boolean mapping of actual updates.\n   */\n  async setCondition(conditionId, enabled, context) {\n    if (typeof enabled !== \"boolean\" && foundry.utils.getType(enabled) !== \"Object\")\n      throw new TypeError(\"Actor.setCondition() enabled state must be a boolean or plain object\");\n    return this.setConditions({ [conditionId]: enabled }, context);\n  }\n\n  /**\n   * Set state of multiple conditions.\n   * Also handles condition tracks to minimize number of updates.\n   *\n   * @example\n   * await actor.setConditions({ blind: true, sleep: false, shaken:true });\n   *\n   * @param {object} conditions Condition ID to boolean (or update data) mapping of new condition states. See {@link setCondition()}\n   * @param {object} [context] Update context\n   * @returns {object} Condition ID to boolean mapping of actual updates.\n   */\n  async setConditions(conditions = {}, context = {}) {\n    conditions = foundry.utils.deepClone(conditions);\n\n    // Backgrounds compatibility\n    for (const key of Object.keys(conditions)) {\n      const newKey = this._deprecatePF1PrefixConditions(key);\n      if (newKey !== key) {\n        conditions[newKey] = conditions[key];\n        delete conditions[key];\n      }\n    }\n\n    // Handle Condition tracks\n    const tracks = pf1.registry.conditions.trackedConditions();\n    for (const conditionGroup of tracks) {\n      const newTrackState = conditionGroup.find((c) => conditions[c] === true);\n      if (!newTrackState) continue;\n      const disableTrackEntries = conditionGroup.filter((c) => c !== newTrackState);\n      for (const key of disableTrackEntries) {\n        conditions[key] = false;\n      }\n    }\n\n    // Create update data\n    const toDelete = [],\n      toCreate = [];\n\n    for (const [conditionId, value] of Object.entries(conditions)) {\n      const currentCondition = pf1.registry.conditions.get(conditionId);\n      if (currentCondition === undefined) {\n        console.error(\"Unrecognized condition:\", conditionId);\n        delete conditions[conditionId];\n        continue;\n      }\n\n      const oldAe = this.hasCondition(conditionId) ? this.effects.find((ae) => ae.statuses.has(conditionId)) : null;\n\n      // Create\n      if (value) {\n        if (!oldAe) {\n          const aeData = {\n            flags: {\n              pf1: {\n                autoDelete: true,\n              },\n            },\n            statuses: [conditionId],\n            name: currentCondition.name,\n            icon: currentCondition.texture,\n            label: currentCondition.name,\n          };\n\n          if (typeof value !== \"boolean\") {\n            foundry.utils.mergeObject(aeData, value);\n          }\n\n          toCreate.push(aeData);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n      // Delete\n      else {\n        if (oldAe) {\n          toDelete.push(oldAe.id);\n        } else {\n          delete conditions[conditionId];\n        }\n      }\n    }\n\n    // Perform updates\n    // Inform update handlers they don't need to do work\n    context.pf1 ??= {};\n    context.pf1.updateConditionTracks = false;\n\n    if (toDelete.length) {\n      const deleteContext = foundry.utils.deepClone(context);\n      // Prevent double render\n      if (context.trender && toCreate.length) deleteContext.render = false;\n      // Without await the deletions may not happen at all, presumably due to race condition, if AEs are also created.\n      await this.deleteEmbeddedDocuments(\"ActiveEffect\", toDelete, context);\n    }\n    if (toCreate.length) {\n      const createContext = foundry.utils.deepClone(context);\n      await this.createEmbeddedDocuments(\"ActiveEffect\", toCreate, context);\n    }\n\n    this._conditionToggleNotify(conditions);\n\n    return conditions;\n  }\n\n  /**\n   * Easy way to determine whether this actor has a condition.\n   *\n   * @example\n   * actor.hasCondition(\"grappled\");\n   *\n   * @param {string} conditionId - A direct condition key, as per pf1.registry.conditions, such as `shaken` or `dazed`.\n   * @returns {boolean} Condition state\n   */\n  hasCondition(conditionId) {\n    conditionId = this._deprecatePF1PrefixConditions(conditionId);\n    return this.statuses.has(conditionId);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Helper function for actor energy resistance and damage reduction feedback.\n   *\n   * @protected\n   * @param {string} damage Value to check resistances for. Either \"dr\" or \"eres\".\n   * @returns {object} Entry to label mapping of resistances or reductions.\n   */\n  parseResistances(damage) {\n    const format = (amount, type, operator, type2) => {\n      let translatedType = type;\n      if (type2) {\n        switch (operator) {\n          case false: {\n            // Combine with AND\n            translatedType = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedAnd\", {\n              type1: type,\n              type2: type2,\n            });\n            break;\n          }\n          default:\n          case true: {\n            // Combine with OR\n            translatedType = game.i18n.format(\"PF1.Application.DamageResistanceSelector.CombinationFormattedOr\", {\n              type1: type,\n              type2: type2,\n            });\n            break;\n          }\n        }\n      }\n\n      return damage === \"dr\" ? `${amount}/${translatedType}` : `${translatedType} ${amount}`;\n    };\n\n    const damages = this.system.traits[damage];\n    const resistances = {};\n    damages.value.forEach((entry, counter) => {\n      const { amount, operator } = entry;\n      const type1 =\n        pf1.registry.damageTypes.get(entry.types[0])?.name ??\n        pf1.registry.materialTypes.get(entry.types[0])?.name ??\n        pf1.config.damageResistances[entry.types[0]] ??\n        \"-\";\n      const type2 =\n        pf1.registry.damageTypes.get(entry.types[1])?.name ??\n        pf1.registry.materialTypes.get(entry.types[1])?.name ??\n        pf1.config.damageResistances[entry.types[1]] ??\n        \"\";\n\n      resistances[`${counter + 1}`] = format(amount, type1, operator, type2);\n    });\n\n    if (damages.custom.length) {\n      damages.custom.split(pf1.config.re.traitSeparator).forEach((entry, counter) => {\n        const re = /(?<value>\\d+)/.exec(entry);\n        const amount = parseInt(re?.groups.value || \"0\");\n        const type = entry.replace(/\\d+\\s*\\/?/, \"\").trim();\n\n        resistances[`custom${counter + 1}`] = format(amount, type, null, \"\");\n      });\n    }\n\n    return resistances;\n  }\n\n  /**\n   * Wrapper for the static function, taking this actor as the only target.\n   *\n   * @see {@link ActorPF.applyDamage}\n   *\n   * @example\n   * await actor.applyDamage(10); // Cause 10 damage\n   * await actor.applyDamage(-10): // Heal 10 damage\n   * await actor.applyDamage(3, { asWounds: true }); // Apply 3 damage directly to Wounds instead of Vigor\n   *\n   * @param {number} value Value to adjust health by.\n   * @param {object} options Additional options.\n   */\n  async applyDamage(value, options = {}) {\n    return this.constructor.applyDamage(\n      value,\n      foundry.utils.mergeObject(options, {\n        targets: [this],\n      })\n    );\n  }\n\n  /**\n   * Apply rolled dice damage to the token or tokens which are currently controlled.\n   * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\n   * If Shift is held, will prompt for adjustments based on damage reduction and energy resistances\n   *\n   * @param {number} value - The amount of damage to deal.\n   * @param {object} [options] - Object containing default settings for overriding\n   * @param {boolean} [options.forceDialog=true] - Forces the opening of a Dialog as if Shift was pressed\n   * @param {string} [options.reductionDefault] - Default value for Damage Reduction\n   * @param {boolean} [options.asNonlethal] - Marks the damage as non-lethal\n   * @param {Array.<Token|Actor>} [options.targets=null] - Override the targets to apply damage to\n   * @param {number} [options.critMult=0] - Critical multiplier as needed for Wounds & Vigor variant health rule. Set to 0 for non-critical hits.\n   * @param {boolean} [options.asWounds=false] - Apply damage to wounds directly instead of vigor, as needed for Wounds & Vigor variant health rule.\n   * @param {Event} [options.event] - Triggering event, if any\n   * @param {Element} [options.element] - Triggering element, if any.\n   * @param {ChatMessage} [options.message] - Chat message reference if any. This is to help modules, the system does not use it.\n   * @param {DamageInstance[]} [options.instances] - Individual instances of damage. This is not processed currently.\n   * @returns {Promise<false|Actor[]>} - False if cancelled or array of updated actors.\n   */\n  static async applyDamage(\n    value = 0,\n    {\n      forceDialog = false,\n      reductionDefault = \"\",\n      asNonlethal = false,\n      targets = null,\n      critMult = 0,\n      asWounds = false,\n      instances = [],\n      event,\n      element,\n      message = null,\n    } = {}\n  ) {\n    if (value == 0 || !Number.isFinite(value)) return void console.warn(\"Attempting to apply 0 damage.\");\n\n    const promises = [];\n    let controlled = canvas.tokens.controlled,\n      healingInvert = 1;\n\n    // Override targets, if supplied\n    if (targets instanceof Array) {\n      controlled = targets.filter((o) => o instanceof Token || o instanceof Actor);\n    }\n\n    const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n\n    const numReg = /(\\d+)/g,\n      sliceReg = /[^,;\\n]+/g;\n\n    const _submit = async function (form, multiplier) {\n      if (form) {\n        value = form.find('[name=\"damage\"]').val();\n        let dR = form.find('[name=\"damage-reduction\"]').val();\n        value = value.length ? RollPF.safeRollSync(value).total : 0;\n        dR = dR.length ? RollPF.safeRollSync(dR).total : 0;\n        if (multiplier < 0) {\n          value = Math.ceil(value * multiplier);\n          value = Math.min(value - dR, 0);\n        } else {\n          value = Math.floor(value * (multiplier ?? 1));\n          value = Math.max(value - dR, 0);\n        }\n        const checked = [...form.find(\".tokenAffected:checked\")].map((tok) => tok.name.replace(\"affect.\", \"\"));\n        controlled = controlled.filter((con) => checked.includes(con.id));\n      }\n\n      if (value == 0) return void console.warn(\"Attempting to apply 0 damage.\"); // Early exit\n\n      for (const t of controlled) {\n        const a = t instanceof Token ? t.actor : t;\n\n        if (!a.isOwner) {\n          ui.notifications.warn(game.i18n.format(\"PF1.Error.NoActorPermissionAlt\", { name: this.name }));\n          continue;\n        }\n\n        const actorType = { character: \"pc\", npc: \"npc\" }[a.type];\n        const useWoundsAndVigor = healthConfig.variants[actorType]?.useWoundsAndVigor ?? false,\n          hp = !useWoundsAndVigor ? a.system.attributes.hp : a.system.attributes.vigor,\n          tmp = hp.temp || 0;\n\n        const updateData = {};\n\n        if (useWoundsAndVigor) {\n          const currentHealth = hp.value;\n          let woundAdjust = 0;\n\n          if (asWounds) {\n            woundAdjust -= value;\n            value = 0;\n          }\n\n          // Temp HP adjustment\n          const dt = value > 0 ? Math.min(tmp, value) : 0;\n          value -= dt;\n\n          // Nonlethal damage\n          if (asNonlethal && value > 0) {\n            if (currentHealth > 0) {\n              value = Math.min(currentHealth, value);\n            } else {\n              woundAdjust -= critMult > 1 ? critMult : 1;\n              value = 0; // No other bleedover to wounds\n            }\n          }\n\n          // Create update data\n          if (dt != 0) updateData[\"system.attributes.vigor.temp\"] = tmp - dt;\n          if (value != 0) {\n            let newHP = Math.min(currentHealth - value, hp.max);\n            if (value > 0) {\n              if (newHP < 0) {\n                woundAdjust -= -newHP;\n                if (critMult > 0) woundAdjust -= critMult;\n                newHP = 0;\n              }\n            }\n\n            if (newHP != hp.value) updateData[\"system.attributes.vigor.value\"] = newHP;\n          }\n\n          if (woundAdjust != 0) {\n            const wounds = a.system.attributes.wounds;\n            updateData[\"system.attributes.wounds.value\"] = Math.clamped(wounds.value + woundAdjust, 0, wounds.max);\n          }\n        }\n        // Normal Hit Points\n        else {\n          // Nonlethal damage\n          let nld = 0;\n          if (asNonlethal && value > 0) {\n            nld = Math.min(hp.max - hp.nonlethal, value);\n            value -= nld;\n          }\n\n          // Temp HP adjustment\n          const dt = value > 0 ? Math.min(tmp, value) : 0;\n\n          // Create update data\n          if (nld != 0) updateData[\"system.attributes.hp.nonlethal\"] = hp.nonlethal + nld;\n          if (dt != 0) updateData[\"system.attributes.hp.temp\"] = tmp - dt;\n          const newHp = Math.min(hp.value - (value - dt), hp.max);\n          if (newHp != hp.value) updateData[\"system.attributes.hp.value\"] = newHp;\n        }\n\n        promises.push(a.update(updateData));\n      }\n      return Promise.all(promises);\n    };\n\n    if (pf1.skipConfirmPrompt ? !forceDialog : forceDialog) {\n      if (value < 0) {\n        healingInvert = -1;\n        value = -1 * value;\n      }\n\n      const tokens = controlled.map((tok) => {\n        const isToken = tok instanceof Token;\n        const actor = isToken ? tok.actor : tok;\n\n        return {\n          _id: isToken ? tok.id : actor.id,\n          name: isToken ? tok.name : actor.name,\n          isToken,\n          dr: Object.values(actor.parseResistances(\"dr\")),\n          eres: Object.values(actor.parseResistances(\"eres\")),\n          di: [...actor.system.traits.di.value, ...(actor.system.traits.di.custom || [])],\n          dv: [...actor.system.traits.dv.value, ...(actor.system.traits.dv.custom || [])],\n          checked: true,\n        };\n      });\n\n      // Dialog configuration and callbacks\n      const template = \"systems/pf1/templates/apps/damage-dialog.hbs\";\n\n      const dialogData = {\n        damage: value,\n        healing: healingInvert == -1 ? true : false,\n        damageReduction: reductionDefault,\n        tokens,\n        nonlethal: asNonlethal,\n        asWounds,\n        critMult,\n        instances,\n      };\n\n      const content = await renderTemplate(template, dialogData);\n\n      return Dialog.wait(\n        {\n          title: healingInvert > 0 ? game.i18n.localize(\"PF1.ApplyDamage\") : game.i18n.localize(\"PF1.ApplyHealing\"),\n          content,\n          buttons: {\n            normal: {\n              label: game.i18n.localize(\"PF1.Apply\"),\n              callback: (html) => _submit.call(this, html, 1 * healingInvert),\n            },\n            half: {\n              label: game.i18n.localize(\"PF1.ApplyHalf\"),\n              callback: (html) => _submit.call(this, html, 0.5 * healingInvert),\n            },\n          },\n          default: \"normal\",\n          close: (html) => false,\n          render: (inp) => {\n            function swapSelected() {\n              const checked = [...inp[0].querySelectorAll('.selected-tokens input[type=\"checkbox\"]')];\n              checked.forEach((chk) => (chk.checked = !chk.checked));\n            }\n            /**\n             * @param {Element} e\n             */\n            function setReduction(e) {\n              inp[0].querySelector('input[name=\"damage-reduction\"]').value =\n                e.currentTarget.innerText.match(numReg) ?? \"\";\n            }\n            /**\n             * @param {WheelEvent} event\n             */\n            function mouseWheelAdd(event) {\n              const el = event.currentTarget;\n\n              //Digits with optional sign only\n              if (/[^\\d+-]|(?:\\d[+-])/.test(el.value.trim())) return;\n\n              const value = parseFloat(el.value) || 0;\n              const increase = -Math.sign(event.originalEvent.deltaY);\n\n              el.value = (value + increase).toString();\n            }\n\n            inp.on(\"click\", 'a[name=\"swap-selected\"]', swapSelected);\n            inp.on(\"click\", 'a[name=\"clear-reduction\"], p.notes a', setReduction);\n            inp.on(\"wheel\", \"input\", mouseWheelAdd);\n          },\n        },\n        {\n          classes: [...Dialog.defaultOptions.classes, \"pf1\", \"apply-hit-points\"],\n        },\n        {\n          focus: true,\n        }\n      );\n    } else return _submit();\n  }\n\n  /**\n   * Returns effective Wound Threshold multiplier with rules and overrides applied.\n   *\n   * @protected\n   * @param {object} [options]\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {number} Multiplier\n   */\n  getWoundThresholdMultiplier({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").variants[this.type === \"npc\" ? \"npc\" : \"pc\"];\n\n    const wt = this.system.attributes?.woundThresholds ?? {};\n    const override = wt.override ?? -1;\n    return override >= 0 && healthConfig.allowWoundThresholdOverride ? override : healthConfig.useWoundThresholds;\n  }\n\n  /**\n   * Returns Wound Threshold relevant data.\n   *\n   * @protected\n   * @param {object} [options]\n   * @param {object} [options.healthConfig] - PC/NPC health config variant data\n   * @returns {{level:number,penalty:number,multiplier:number,valid:boolean}}\n   */\n  getWoundThresholdData({ healthConfig } = {}) {\n    healthConfig ??= game.settings.get(\"pf1\", \"healthConfig\").variants[this.type === \"npc\" ? \"npc\" : \"pc\"];\n\n    const wt = this.system.attributes?.woundThresholds ?? {};\n\n    const woundMult = this.getWoundThresholdMultiplier({ healthConfig }),\n      woundLevel = wt.level || 0,\n      woundPenalty = woundLevel * woundMult + (wt.mod || 0);\n\n    return {\n      level: woundLevel,\n      penalty: woundPenalty,\n      multiplier: woundMult,\n      valid: woundLevel > 0 && woundMult > 0,\n    };\n  }\n\n  /**\n   * Updates attributes.woundThresholds.level variable.\n   *\n   * @protected\n   */\n  updateWoundThreshold() {\n    const hpconf = game.settings.get(\"pf1\", \"healthConfig\").variants;\n    const variant = this.type === \"npc\" ? hpconf.npc : hpconf.pc;\n    const usage = variant.useWoundThresholds;\n    const vigor = variant.useWoundsAndVigor;\n    const wt = this.system.attributes.woundThresholds;\n    // Null if WT is not in use, or it is combined with Wounds & Vigor\n    if (!usage || vigor) {\n      wt.level = 0;\n      wt.penaltyBase = 0;\n      wt.penalty = 0;\n      wt.mod = 0;\n      return;\n    }\n    const hp = this.system.attributes.hp,\n      curHP = hp.value,\n      tempHP = hp.temp ?? 0,\n      maxHP = hp.max;\n\n    let level = usage > 0 ? Math.clamped(4 - Math.ceil(((curHP + tempHP) / maxHP) * 4), 0, 3) : 0;\n    if (Number.isNaN(level)) level = 0; // Division by 0 due to max HP on new actors.\n\n    const wtMult = this.getWoundThresholdMultiplier({ healthConfig: variant });\n    const wtMod = wt.mod ?? 0;\n\n    wt.level = level;\n    wt.penaltyBase = level * wtMult; // To aid relevant formulas\n    wt.penalty = level * wtMult + wtMod;\n\n    const penalty = wt.penalty;\n    const changeFlatKeys = pf1.config.woundThresholdChangeTargets;\n    // TODO: Convert to changes\n    if (penalty != 0) {\n      for (const fk of changeFlatKeys) {\n        const flats = getChangeFlat.call(this, fk, \"untyped\", -penalty);\n        for (const k of flats) {\n          if (!k) continue;\n          const curValue = foundry.utils.getProperty(this, k) ?? 0;\n          foundry.utils.setProperty(this, k, curValue - penalty);\n        }\n      }\n    }\n  }\n\n  /**\n   * @type {Array<string>} - Array of all skill IDs relevant to this actor.\n   */\n  get allSkills() {\n    const result = [];\n    for (const [key, skillData] of Object.entries(this.system.skills)) {\n      if (!skillData) continue;\n      result.push(key);\n      for (const subKey of Object.keys(skillData.subSkills ?? {})) {\n        result.push(`${key}.${subKey}`);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An array of all context note data for this actor.\n   *\n   * @type {{notes: Array<pf1.components.ContextNote>, item: ItemPF}[]}\n   */\n  get allNotes() {\n    return this.items\n      .filter((item) => item.isActive && item.system.contextNotes?.length > 0)\n      .map((item) => ({ notes: item.system.contextNotes, item }));\n  }\n\n  /**\n   * @returns {ItemPF[]} All items on this actor, including those in containers.\n   */\n  get allItems() {\n    return [...this.containerItems, ...Array.from(this.items)];\n  }\n\n  /**\n   * Generates an array with all the active context-sensitive notes for the given context on this actor.\n   *\n   * @param {string|Handlebars.SafeString} context - The context to draw from.\n   * @param {boolean} [all=true] - Retrieve notes meant for all.\n   */\n  getContextNotes(context, all = true) {\n    if (context.string) context = context.string;\n    const result = this.allNotes;\n\n    // Attacks\n    if (context.match(/^attacks\\.(.+)/)) {\n      const key = RegExp.$1;\n      for (const note of result) {\n        note.notes = note.notes.filter((o) => o.target === key).map((o) => o.text);\n      }\n\n      return result;\n    }\n\n    // Skill\n    if (context.match(/^skill\\.(.+)/)) {\n      const skillKey = RegExp.$1;\n      const skill = this.getSkillInfo(skillKey);\n      const ability = skill.ability;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes\n          .filter((n) => [context, `${ability}Skills`].includes(n.target) || (all && n.target === \"skills\"))\n          .map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    // Saving throws\n    if (context.match(/^savingThrow\\.(.+)/)) {\n      const saveKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes\n          .filter((n) => [saveKey, \"allSavingThrows\"].includes(n.target))\n          .map((n) => n.text);\n      }\n\n      if (this.system.attributes.saveNotes != null && this.system.attributes.saveNotes !== \"\") {\n        result.push({ notes: [this.system.attributes.saveNotes], item: null });\n      }\n\n      return result;\n    }\n\n    // Ability checks\n    if (context.match(/^abilityChecks\\.(.+)/)) {\n      const ablKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes\n          .filter((n) => [`${ablKey}Checks`, \"allChecks\"].includes(n.target))\n          .map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    // Misc\n    if (context.match(/^misc\\.(.+)/)) {\n      const miscKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === miscKey).map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    if (context.match(/^spell\\.concentration\\.([a-z]+)$/)) {\n      const spellbookKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === \"concentration\").map((n) => n.text);\n      }\n\n      const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[spellbookKey]?.concentrationNotes;\n      if (spellbookNotes?.length) {\n        result.push({ notes: spellbookNotes.split(/[\\n\\r]+/), item: null });\n      }\n\n      return result;\n    }\n\n    if (context.match(/^spell\\.cl\\.([a-z]+)$/)) {\n      const spellbookKey = RegExp.$1;\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === \"cl\").map((n) => n.text);\n      }\n\n      const spellbookNotes = this.system.attributes?.spells?.spellbooks?.[spellbookKey]?.clNotes;\n      if (spellbookNotes?.length) {\n        result.push({ notes: spellbookNotes.split(/[\\n\\r]+/), item: null });\n      }\n\n      return result;\n    }\n\n    if (context.match(/^spell\\.effect$/)) {\n      for (const noteSource of result) {\n        noteSource.notes = noteSource.notes.filter((n) => n.target === \"spellEffect\").map((n) => n.text);\n      }\n\n      return result;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a list of already parsed context notes.\n   *\n   * @param {string} context - The context to draw notes from.\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.roll=true] Whether to roll inline rolls or not.\n   * @returns {string[]} The resulting notes, already parsed.\n   */\n  getContextNotesParsed(context, { roll = true } = {}) {\n    const noteObjects = this.getContextNotes(context);\n\n    return noteObjects.reduce((cur, o) => {\n      for (const note of o.notes) {\n        const enrichOptions = {\n          rollData: o.item != null ? o.item.getRollData() : this.getRollData(),\n          rolls: roll,\n          async: false,\n          relativeTo: this,\n        };\n        cur.push(enrichHTMLUnrolled(note, enrichOptions));\n      }\n\n      return cur;\n    }, []);\n  }\n\n  /**\n   * @param notes\n   * @param rollData\n   * @param root0\n   * @param root0.roll\n   * @returns {Array<string>}\n   */\n  formatContextNotes(notes, rollData, { roll = true } = {}) {\n    const result = [];\n    rollData ??= this.getRollData();\n    for (const noteObj of notes) {\n      rollData.item = {};\n      if (noteObj.item != null) rollData = noteObj.item.getRollData();\n\n      for (const note of noteObj.notes) {\n        result.push(\n          ...note\n            .split(/[\\n\\r]+/)\n            .map((subnote) => enrichHTMLUnrolled(subnote, { rollData, rolls: roll, relativeTo: this }))\n        );\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @typedef {object} MobilityPenaltyResult\n   * @property {number|null} maxDexBonus - The maximum dexterity bonus allowed for this result.\n   * @property {number} acp - The armor check penalty of this result.\n   */\n\n  /**\n   * Computes encumbrance values for this actor.\n   *\n   * @internal\n   * @returns {MobilityPenaltyResult} The resulting penalties from encumbrance.\n   */\n  _computeEncumbrance() {\n    // Init base data\n    this.system.attributes ??= {};\n    const attributes = this.system.attributes;\n    attributes.encumbrance ??= {};\n    const encumbrance = attributes.encumbrance;\n\n    const carry = this.getCarryCapacity();\n    // Set levels\n    encumbrance.levels = carry;\n    encumbrance.levels.carry = carry.heavy * 2;\n    encumbrance.levels.drag = carry.heavy * 5;\n\n    const carriedWeight = Math.max(0, this.getCarriedWeight());\n    encumbrance.carriedWeight = Math.round(carriedWeight * 10) / 10;\n\n    // Determine load level\n    let encLevel = pf1.config.encumbranceLevels.light;\n    if (carriedWeight > 0) {\n      if (carriedWeight > encumbrance.levels.medium) encLevel = pf1.config.encumbranceLevels.heavy;\n      else if (carriedWeight > encumbrance.levels.light) encLevel = pf1.config.encumbranceLevels.medium;\n    }\n    encumbrance.level = encLevel;\n\n    const result = {\n      maxDexBonus: null,\n      acp: 0,\n    };\n\n    switch (encumbrance.level) {\n      case pf1.config.encumbranceLevels.medium:\n        result.acp = 3;\n        result.maxDexBonus = 3;\n        break;\n      case pf1.config.encumbranceLevels.heavy:\n        result.acp = 6;\n        result.maxDexBonus = 1;\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * @internal\n   * @returns {number} - Total coin weight in lbs\n   */\n  _calculateCoinWeight() {\n    const divisor = game.settings.get(\"pf1\", \"coinWeight\");\n    if (!divisor) return 0;\n    return Object.values(this.system.currency || {}).reduce((total, coins) => total + (coins || 0), 0) / divisor;\n  }\n\n  /**\n   * Calculate current carry capacity limits.\n   *\n   * @returns {{light:number,medium:number,heavy:number}}\n   */\n  getCarryCapacity() {\n    // Determine carrying capacity\n    const carryCapacity = this.system.details?.carryCapacity ?? {};\n    const carryStr = this.system.abilities.str.total + carryCapacity.bonus?.total;\n    let carryMultiplier = carryCapacity.multiplier?.total;\n    const size = this.system.traits.size;\n    if (this.system.attributes.quadruped) carryMultiplier *= pf1.config.encumbranceMultipliers.quadruped[size];\n    else carryMultiplier *= pf1.config.encumbranceMultipliers.normal[size];\n    const table = pf1.config.encumbranceLoads;\n\n    let heavy = Math.floor(table[carryStr] * carryMultiplier);\n    if (carryStr >= table.length) {\n      const multiplierCount = (carryStr - (table.length - 1)) / 10;\n      heavy = Math.floor(table[table.length - 1] * Math.pow(4, multiplierCount) * carryMultiplier);\n    }\n    // Convert to world unit system\n    heavy = pf1.utils.convertWeight(heavy);\n\n    return {\n      light: Math.floor(heavy / 3),\n      medium: Math.floor((heavy / 3) * 2),\n      heavy: heavy,\n    };\n  }\n\n  /**\n   * Determines carried weight.\n   *\n   * @returns {number} - kg or lbs of all carried things, including currency\n   */\n  getCarriedWeight() {\n    const weight = this.items\n      .filter((i) => i.isPhysical && i.system.carried !== false)\n      .reduce((cur, o) => cur + o.system.weight.total, this._calculateCoinWeight());\n\n    return pf1.utils.convertWeight(weight);\n  }\n\n  /**\n   * Total coinage in both weighted and weightless.\n   *\n   * @deprecated Use {@link ActorPF.getTotalMergedCurrency} instead.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=false] - Use copper for calculations and return.\n   * @returns {number} - The total amount of currency, in gold pieces.\n   */\n  mergeCurrency({ inLowestDenomination = false } = {}) {\n    foundry.utils.logCompatibilityWarning(\n      \"ActorPF.mergeCurrency() is deprecated in favor of ActorPF.getTotalCurrency()\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n\n    return this.getTotalCurrency({ inLowestDenomination }, { v2: true });\n  }\n\n  /**\n   * Get total currency in category.\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category.\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Return result in lowest denomination. If false, returns gold instead.\n   * @returns {number} - Total currency in category.\n   */\n  getCurrency(category = \"currency\", { inLowestDenomination = true } = {}) {\n    const currencies = this.system[category];\n    if (!currencies) {\n      console.error(`Currency type \"${category}\" not found.`);\n      return NaN;\n    }\n    const total = currencies.pp * 1000 + currencies.gp * 100 + currencies.sp * 10 + currencies.cp;\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Total coinage in both weighted and weightless.\n   *\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.inLowestDenomination=true] - Use copper for calculations and return.\n   * @param {object} [deprecated] - Deprecated options\n   * @returns {number} - The total amount of currency, in copper pieces.\n   */\n  getTotalCurrency(options, deprecated) {\n    if (typeof options === \"string\" || options === undefined) {\n      foundry.utils.logCompatibilityWarning(\n        \"ActorPF.getTotalCurrency() parameters changed. Options are now the first and only parameter. Old behaviour is found in getCurrency()\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n\n      return this.getCurrency(options, deprecated);\n    }\n\n    options ??= {};\n    options.inLowestDenomination ??= true;\n\n    const total =\n      this.getCurrency(\"currency\", { inLowestDenomination: true }) +\n      this.getCurrency(\"altCurrency\", { inLowestDenomination: true });\n    return options.inLowestDenomination ? total : total / 100;\n  }\n\n  /**\n   * Converts currencies of the given category to the given currency type\n   *\n   * @see {@link pf1.utils.currency.convert}\n   *\n   * @param {\"currency\"|\"altCurrency\"} [category=\"currency\"] - Currency category, altCurrency is for weightless\n   * @param {CoinType} [type=\"pp\"] - Target currency.\n   * @returns {Promise<this>|undefined} Updated document or undefined if no update occurred.\n   */\n  convertCurrency(category = \"currency\", type = \"pp\") {\n    const cp = this.getCurrency(category, { inLowestDenomination: true });\n    if (!Number.isFinite(cp)) {\n      console.error(`Invalid total currency \"${cp}\" in \"${category}\" category`);\n      return;\n    }\n\n    const currency = pf1.utils.currency.convert(cp, type);\n\n    return this.update({ system: { [category]: currency } });\n  }\n\n  /**\n   * Prepare armor/shield data for roll data\n   *\n   * @internal\n   * @param {object} equipment Equipment info\n   * @param {string} equipment.id Item ID\n   * @param {string} equipment.type Armor/Shield type\n   * @param {object} armorData Armor data object\n   */\n  _prepareArmorData({ id, type } = {}, armorData) {\n    armorData.type = type ?? null;\n\n    const itemData = this.items.get(id)?.system;\n    if (!itemData) return;\n\n    armorData.ac = itemData.armor.value ?? 0;\n    armorData.enh = itemData.armor.enh ?? 0;\n    armorData.total = armorData.ac + armorData.enh;\n    if (!Number.isFinite(armorData.total)) armorData.total = 0;\n  }\n\n  /**\n   * Retrieve data used to fill in roll variables.\n   *\n   * @example\n   * await new Roll(\"1d20 + \\@abilities.wis.mod[Wis]\", actor.getRollData()).toMessage();\n   *\n   * @override\n   * @param {object} [options] - Additional options\n   * @returns {object}\n   */\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Add denied Dex to AC\n    result.conditions ??= {};\n    result.conditions.loseDexToAC = this.changeFlags?.loseDexToAC ?? false;\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Set size index\n    const sizeChart = Object.keys(pf1.config.sizeChart);\n    result.size = sizeChart.indexOf(result.traits.size);\n\n    // Add more info for formulas\n    result.armor = { type: 0, total: 0, ac: 0, enh: 0 };\n    result.shield = { type: 0, total: 0, ac: 0, enh: 0 };\n\n    // Determine equipped armor type\n    const eqData = this.equipment;\n    if (eqData) {\n      this._prepareArmorData(eqData.armor, result.armor);\n      this._prepareArmorData(eqData.shield, result.shield);\n    }\n\n    // Add spellbook info\n    result.spells = result.attributes.spells.spellbooks;\n    for (const [k, book] of Object.entries(result.spells)) {\n      book.abilityMod = result.abilities[book.ability]?.mod ?? 0;\n      // Add alias\n      if (book.class && book.class !== \"_hd\") result.spells[book.class] ??= book;\n    }\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n    result.bFlags = Object.fromEntries(\n      Object.entries(this.itemFlags?.boolean ?? {}).map(([key, { sources }]) => [key, sources.length > 0 ? 1 : 0])\n    );\n\n    result.range = this.system.traits?.reach?.total ?? NaN;\n\n    // Add class info\n    result.classes = this.classes;\n    const negLevels = result.attributes.energyDrain ?? 0;\n    if (negLevels > 0 && result.classes) {\n      for (const cls of Object.values(result.classes)) {\n        cls.level = Math.max(0, cls.unlevel - negLevels);\n      }\n    }\n\n    // Map HP ability\n    const hpAbility = result.abilities[result.attributes.hpAbility];\n    Object.defineProperty(result.attributes, \"hpAbility\", {\n      get() {\n        return hpAbility;\n      },\n    });\n\n    // @since PF1 v10\n    result.alignment = pf1.utils.parseAlignment(this.system.details?.alignment || \"tn\");\n\n    this._rollData = result;\n\n    // Call hook\n    if (Hooks.events[\"pf1GetRollData\"]?.length > 0) Hooks.callAll(\"pf1GetRollData\", this, result);\n\n    return result;\n  }\n\n  /**\n   * Get melee and reach maximum ranges.\n   *\n   * @param {ActorSize|number} size - Actor size as size key or number\n   * @param {ActorStature} stature - Actor stature\n   * @returns {{melee:number,reach:number}} - Ranges\n   */\n  static getReach(size = \"med\", stature = \"tall\") {\n    let effectiveSize = size >= 0 ? size : Object.keys(pf1.config.sizeChart).indexOf(size);\n    // Long creatures count as one size smaller\n    if (stature !== \"tall\" && effectiveSize > 0) effectiveSize -= 1;\n\n    const reachStruct = (melee, reach) => ({ melee, reach });\n\n    switch (effectiveSize) {\n      case 0: // Fine\n      case 1: // Diminutive\n        return reachStruct(0, 0);\n      case 2: // Tiny\n        return reachStruct(0, 5);\n      default:\n      case 3: // Small\n      case 4: // Medium\n        return reachStruct(5, 10);\n      case 5: // Large\n        return reachStruct(10, 20);\n      case 6: // Huge\n        return reachStruct(15, 30);\n      case 7: // Gargantuan\n        return reachStruct(20, 40);\n      case 8: // Colossal\n        return reachStruct(30, 60);\n    }\n  }\n\n  /**\n   * @protected\n   * @returns\n   */\n  getQuickActions() {\n    return this.items\n      .filter(\n        (o) =>\n          o.isActive &&\n          o.system.showInQuickbar === true &&\n          [\"weapon\", \"equipment\", \"consumable\", \"attack\", \"spell\", \"feat\"].includes(o.type) &&\n          !o.showUnidentifiedData\n      )\n      .sort((a, b) => a.sort - b.sort)\n      .map((item) => {\n        const qi = {\n          item,\n          name: item.name,\n          id: item.id,\n          type: item.type,\n          img: item.img,\n          get isSingleUse() {\n            return item.isSingleUse;\n          },\n          get haveAnyCharges() {\n            return this.item.isCharged && Number.isFinite(this.maxCharge);\n          },\n          get maxCharge() {\n            return item.maxCharges;\n          },\n          get charges() {\n            return this.item.charges;\n          },\n        };\n\n        // Fill in charge details\n        qi.isCharged = qi.haveAnyCharges;\n        if (qi.isCharged) {\n          let chargeCost = item.defaultAction?.getChargeCost() ?? item.getDefaultChargeCost();\n          if (chargeCost == 0) qi.isCharged = false;\n\n          qi.recharging = chargeCost < 0;\n          chargeCost = Math.abs(chargeCost);\n\n          if (chargeCost != 0) {\n            qi.max = qi.maxCharge;\n            qi.uses = qi.charges;\n\n            // Maximum charging\n            if (qi.recharging) {\n              qi.uses = Math.ceil((qi.max - qi.uses) / chargeCost);\n              qi.max = Math.ceil(qi.max / chargeCost);\n            }\n            // Actual uses\n            else {\n              qi.uses = Math.floor(qi.uses / chargeCost);\n              qi.max = Math.floor(qi.max / chargeCost);\n            }\n          }\n        } else {\n          const action = item.defaultAction;\n          // Add fake charges for ammo using items\n          if (action?.ammoType) {\n            const ammo = item.defaultAmmo;\n            if (ammo) {\n              qi.isCharged = true;\n              qi.uses = ammo.system.quantity || 0;\n            }\n          }\n        }\n\n        return qi;\n      });\n  }\n\n  /**\n   * @internal\n   */\n  refreshAbilityModifiers() {\n    for (const k of Object.keys(this.system.abilities)) {\n      const total = this.system.abilities[k].total;\n      const penalty = Math.abs(this.system.abilities[k].penalty || 0);\n      const damage = this.system.abilities[k].damage;\n      const newMod = pf1.utils.getAbilityModifier(total, { penalty, damage });\n      this.system.abilities[k].mod = newMod;\n    }\n  }\n\n  /**\n   * @override\n   * @protected\n   * @param {object} json\n   * @returns {Promise<this>}\n   */\n  async importFromJSON(json) {\n    // Import from JSON\n    const data = JSON.parse(json);\n    delete data._id;\n    data.effects = [];\n\n    // Update data\n    return this.update(data, { diff: false, recursive: false });\n  }\n\n  /**\n   * Return feat counts.\n   *\n   * @typedef FeatCounts\n   * @type {object}\n   * @property {number} max - The maximum allowed feats.\n   * @property {number} active - The current number of active feats.\n   * @property {number} owned - The current number of feats, active or not.\n   * @property {number} levels - Feats gained by levels specifically\n   * @property {number} mythic - Mythic feats\n   * @property {number} formula - Feats gained by custom formula on the feats tab\n   * @property {number} changes - Feats gained via Changes\n   * @property {number} disabled - Disabled feats\n   * @property {number} excess - Feats over maximum allowed\n   * @property {number} missing - Feats under maximum allowed\n   * @returns {FeatCounts} An object with a property `value` which refers to the current used feats, and `max` which refers to the maximum available feats.\n   */\n  getFeatCount() {\n    const feats = this.itemTypes.feat.filter((o) => o.subType === \"feat\");\n\n    const result = {\n      max: 0,\n      active: feats.filter((o) => o.isActive).length,\n      owned: feats.length,\n      levels: 0,\n      mythic: 0,\n      formula: 0,\n      changes: 0,\n      disabled: 0,\n      excess: 0,\n      missing: 0,\n    };\n\n    Object.defineProperty(result, \"value\", {\n      get() {\n        foundry.utils.logCompatibilityWarning(\"getFeatCount().value is deprecated in favor of getFeatCount().active\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n\n        return this.active;\n      },\n    });\n\n    const isMindless = this.system.abilities?.int?.value === null;\n\n    // Ignore classes for feats with mindless\n    // Mindless gets other bonuses to feats beyond these...\n    // ... since they can be explicit \"gains X feat\", homebrew, or other impossible to account for.\n    if (!isMindless) {\n      // Add feat count by level\n      result.levels = Math.ceil(this.system.attributes.hd.total / 2);\n      result.max += result.levels;\n\n      // Mythic feats\n      // https://aonprd.com/Rules.aspx?Name=Mythic%20Heroes&Category=Mythic%20Rules\n      // Gained at 1, 3, 5, etc.\n      result.mythic = Math.ceil(this.system.details.mythicTier / 2);\n      result.max += result.mythic;\n    }\n\n    // Bonus feat formula\n    const bonusRoll = RollPF.safeRollSync(this.system.details?.bonusFeatFormula || \"0\", this.getRollData());\n    result.formula = bonusRoll.total;\n    result.max += result.formula;\n    if (bonusRoll.err) {\n      console.error(\n        `An error occurred in the Bonus Feat Formula of actor \"${this.name}\" [${this.id}].`,\n        {\n          formula: this.system.details?.bonusFeatFormula,\n          actor: this,\n        },\n        bonusRoll.err\n      );\n    }\n\n    // Bonuses from changes\n    result.changes = getHighestChanges(\n      this.changes.filter((c) => {\n        if (c.target !== \"bonusFeats\") return false;\n        return c.operator !== \"set\";\n      }),\n      { ignoreTarget: true }\n    ).reduce((cur, c) => cur + c.value, 0);\n    result.max += result.changes;\n\n    // Count totals\n    const diff = result.max - result.active;\n    result.missing = Math.max(0, diff);\n    result.excess = Math.max(0, -diff);\n    result.disabled = result.owned - result.active;\n\n    return result;\n  }\n\n  /**\n   * Check if actor has item with specified boolean flag.\n   *\n   * @param {string} flagName - The name/key of the flag to search for.\n   * @returns {boolean} Whether this actor has any owned item with the given flag.\n   */\n  hasItemBooleanFlag(flagName) {\n    return this.itemFlags.boolean[flagName] != null;\n  }\n\n  /**\n   * Restore spellbook used slots and spellpoints.\n   *\n   * @param {object} [options] Additional options\n   * @param {boolean} [options.commit=true] If false, return update data object instead of directly updating the actor.\n   * @param {object} [options.rollData] Roll data\n   * @returns {Promise<this|object>} Result of update or the update data.\n   */\n  async resetSpellbookUsage({ commit = true, rollData } = {}) {\n    const actorData = this.system;\n    const updateData = {};\n\n    rollData ??= this.getRollData();\n\n    // Update spellbooks\n    for (const [bookId, spellbook] of Object.entries(actorData.attributes.spells.spellbooks)) {\n      if (!spellbook.inUse) continue;\n\n      // Restore spellbooks using spell points\n      if (spellbook.spellPoints.useSystem) {\n        // Try to roll restoreFormula, fall back to restoring max spell points\n        let restorePoints = spellbook.spellPoints.max;\n        if (spellbook.spellPoints.restoreFormula) {\n          const restoreRoll = await RollPF.safeRollAsync(spellbook.spellPoints.restoreFormula, rollData);\n          if (restoreRoll.err) console.error(restoreRoll.err, spellbook.spellPoints.restoreFormula);\n          else restorePoints = Math.min(spellbook.spellPoints.value + restoreRoll.total, spellbook.spellPoints.max);\n        }\n        updateData[`system.attributes.spells.spellbooks.${bookId}.spellPoints.value`] = restorePoints;\n      }\n      // Restore spell slots\n      else {\n        for (let level = 0; level < 10; level++) {\n          updateData[`system.attributes.spells.spellbooks.${bookId}.spells.spell${level}.value`] =\n            spellbook.spells[`spell${level}`]?.max ?? 0;\n        }\n      }\n    }\n\n    if (commit) return this.update(updateData);\n    return updateData;\n  }\n\n  /**\n   * Recharge all owned items.\n   *\n   * @see {@link pf1.documents.item.ItemPF.recharge}\n   *\n   * @example\n   * await actor.rechargeItems(); // Recharge items with default settings.\n   * await actor.rechargeItems({ period: \"week\" }); // Recharge items as if week had passed.\n   *\n   * @param {RechargeActorItemsOptions} [options] - Additional options\n   * @returns {Promise<Item[]|object[]>} - Result of an update or the update data.\n   */\n  async rechargeItems({ commit = true, ...rechargeOptions } = {}) {\n    const actorData = this.system;\n    const itemUpdates = [];\n\n    // Update charged items\n    // TODO: Await all item recharges in one go.\n    for (const item of this.items) {\n      const itemUpdate = (await item.recharge({ ...rechargeOptions, commit: false })) ?? {};\n      itemUpdate.system ??= {};\n\n      // Update charged actions\n      // TODO: Move to ItemPF.recharge()\n      if (item.system.actions?.length > 0 && (rechargeOptions.period || \"day\") === \"day\") {\n        const actions = item.toObject().system.actions;\n        let _changed = false;\n        for (const actionData of actions) {\n          // TODO: Handle time period correctly\n          if (actionData.uses?.self?.per === \"day\") {\n            const maxUses = actionData.uses.self.max || 0;\n            if (actionData.uses.self.value < maxUses) {\n              actionData.uses.self.value = maxUses;\n              _changed = true;\n            }\n          }\n        }\n\n        if (_changed) {\n          itemUpdate.system.actions = actions;\n        }\n      }\n\n      // Append update to queue\n      if (!foundry.utils.isEmpty(itemUpdate.system)) {\n        itemUpdate._id = item.id;\n        itemUpdates.push(itemUpdate);\n      }\n    }\n\n    if (commit) {\n      if (itemUpdates.length) return this.updateEmbeddedDocuments(\"Item\", itemUpdates);\n    } else return itemUpdates;\n    return [];\n  }\n\n  /**\n   * Handler for character healing during rest.\n   *\n   * @protected\n   * @param {object} options Resting options.\n   * @returns {object} Update data object\n   */\n  _restingHeal(options = {}) {\n    const actorData = this.system,\n      hp = actorData.attributes.hp,\n      wounds = actorData.attributes?.wounds,\n      vigor = actorData.attributes?.vigor;\n\n    const { hours, longTermCare } = options;\n    const updateData = {};\n\n    const hd = actorData.attributes.hd.total;\n\n    // Base healing\n    const heal = {\n      hp: hd,\n      abl: 1,\n      nonlethal: hours * hd,\n      vigor: vigor?.max ?? 0,\n      wounds: wounds?.max > 0 ? 1 : 0,\n    };\n\n    // -- Normal Hit Points ---\n\n    // Full day of resting\n    if (hours >= 24) {\n      heal.hp += 1;\n      heal.wounds += Math.floor(hd / 2);\n      heal.abl += 1;\n    }\n    // Long term care\n    if (longTermCare === true) {\n      heal.hp *= 2;\n      heal.abl *= 2;\n      heal.wounds *= 2;\n    }\n\n    updateData[\"system.attributes.hp.value\"] = Math.min(hp.value + heal.hp, hp.max);\n    updateData[\"system.attributes.hp.nonlethal\"] = Math.max(0, (hp.nonlethal || 0) - heal.nonlethal);\n    for (const [key, abl] of Object.entries(actorData.abilities)) {\n      const dmg = Math.abs(abl.damage);\n      updateData[`system.abilities.${key}.damage`] = Math.max(0, dmg - heal.abl);\n    }\n\n    // --- Wounds & Vigor ---\n\n    // Secondary actors don't use W&V rules\n    if (wounds?.max && vigor?.max) {\n      updateData[\"system.attributes.wounds.value\"] = Math.min(wounds.value + heal.wounds, wounds.max);\n      updateData[\"system.attributes.vigor.value\"] = Math.min(vigor.value + heal.vigor, vigor.max);\n    }\n\n    return updateData;\n  }\n\n  /**\n   * Perform all changes related to an actor resting, including restoring HP, ability scores, item uses, etc.\n   *\n   * @example\n   * await actor.performRest();\n   *\n   * @see {@link hookEvents!pf1PreActorRest pf1PreActorRest hook}\n   * @see {@link hookEvents!pf1ActorRest pf1ActorRest hook}\n   * @param {Partial<ActorRestOptions>} options - Options affecting an actor's resting\n   * @returns {Promise<ActorRestData | void>} Updates applied to the actor, if resting was completed\n   */\n  async performRest(options = {}) {\n    const { restoreHealth = true, longTermCare = false, restoreDailyUses = true, hours = 8, verbose = false } = options;\n    const actorData = this.system;\n\n    const updateData = {};\n    // Restore health and ability damage\n    if (restoreHealth === true) {\n      const healUpdate = this._restingHeal(options);\n      foundry.utils.mergeObject(updateData, healUpdate);\n    }\n\n    let itemUpdates = [];\n    // Restore daily uses of spells, feats, etc.\n    if (restoreDailyUses === true) {\n      const spellbookUpdates = await this.resetSpellbookUsage({ commit: false });\n      foundry.utils.mergeObject(updateData, spellbookUpdates);\n\n      // Recharge all items (including spells for prepared spellbooks)\n      itemUpdates = await this.rechargeItems({ commit: false, updateData, period: \"day\" });\n    }\n\n    options = { restoreHealth, restoreDailyUses, longTermCare, hours };\n    const allowed = Hooks.call(\"pf1PreActorRest\", this, options, updateData, itemUpdates);\n    if (allowed === false) return;\n\n    const context = { pf1: { action: \"rest\", restOptions: options } };\n\n    if (itemUpdates.length) await this.updateEmbeddedDocuments(\"Item\", itemUpdates, foundry.utils.deepClone(context));\n    if (!foundry.utils.isEmpty(updateData.system)) await this.update(updateData, foundry.utils.deepClone(context));\n\n    Hooks.callAll(\"pf1ActorRest\", this, options, updateData, itemUpdates);\n\n    if (verbose) {\n      const message = restoreDailyUses ? \"PF1.FullRestMessage\" : \"PF1.RestMessage\";\n      ui.notifications.info(game.i18n.format(message, { name: this.token?.name ?? this.name, hours }));\n    }\n\n    return { options, updateData, itemUpdates };\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  async modifyTokenAttribute(attribute, value, isDelta = false, isBar = true) {\n    let doc = this;\n    const current = foundry.utils.getProperty(this.system, attribute),\n      updates = {};\n\n    const isResource = current instanceof Resource;\n    if (isResource) doc = current.item;\n\n    if (!doc) return;\n    const updateData = {};\n\n    // Hit points\n    if (attribute === \"attributes.hp\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.hp.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.hp.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Wounds & Vigor\n    else if (attribute === \"attributes.vigor\") {\n      if (!isDelta) value = (current.temp + current.value - value) * -1;\n      let dt = value;\n      if (current.temp > 0 && value < 0) {\n        dt = Math.min(0, current.temp + value);\n        updates[\"system.attributes.vigor.temp\"] = Math.max(0, current.temp + value);\n      }\n      updates[\"system.attributes.vigor.value\"] = Math.min(current.value + dt, current.max);\n    }\n    // Relative\n    else if (isDelta) {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.min(current.value + value, current.max);\n      } else {\n        if (isBar)\n          updates[`system.${attribute}.value`] = Math.clamped(current.value + value, current.min || 0, current.max);\n        else updates[`system.${attribute}`] = current + value;\n      }\n    }\n    // Absolute\n    else {\n      if (isResource) {\n        updates[\"system.uses.value\"] = Math.clamped(value, 0, current.max);\n      } else {\n        if (isBar) updates[`system.${attribute}.value`] = Math.min(value, current.max);\n        else updates[`system.${attribute}`] = value;\n      }\n    }\n\n    const allowed = Hooks.call(\"modifyTokenAttribute\", { attribute, value, isDelta, isBar }, updates);\n    return allowed !== false ? doc.update(updates) : this;\n  }\n\n  /**\n   * The VisionSharingSheet instance for this actor\n   *\n   * @type {VisionSharingSheet}\n   */\n  get visionSharingSheet() {\n    this._visionSharingSheet ??= new VisionSharingSheet(this);\n    return this._visionSharingSheet;\n  }\n}\n\n/**\n * @typedef {object} ActorRestOptions\n * Options given to {@link ActorPF.performRest} affecting an actor's resting.\n * @property {boolean} [restoreHealth=true] - Whether the actor's health should be restored.\n * @property {boolean} [restoreDailyUses=true] - Whether daily uses of spells and abilities should be restored.\n * @property {boolean} [longTermCare=false] - Whether additional hit and ability score points should be restored through the Heal skill.\n * @property {number} [hours=8] - The number of hours the actor will rest.\n * @property {boolean} [verbose=false] - Display notification once rest processing finishes.\n */\n\n/**\n * @typedef {object} ActorRestData\n * @property {ActorRestOptions} options - Options for resting\n * @property {object} updateData - Updates applied to the actor\n * @property {object[]} itemUpdates - Updates applied to the actor's items\n */\n\n/**\n * @typedef {object} DamageInstance\n * @property {number} value - Total damage in this instance\n * @property {object} types - Damage type data\n * @property {string} types.custom - Custom damage types\n * @property {string[]} types.values - Standard damage types\n */\n","import { ActorPF } from \"./actor/actor-pf.mjs\";\nimport { getActorFromId, getItemOwner } from \"../utils/lib.mjs\";\n\n/**\n * Various functions dealing with the creation and usage of macros.\n *\n * @module macros\n */\n\n/**\n * Create a Macro from an Item drop, or get an existing one.\n *\n * @param {object} item The item data\n * @param {string} actor The actor ID\n * @param {object} uuid\n * @param {number} slot The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createItemMacro = async (uuid, slot) => {\n  const item = fromUuidSync(uuid);\n  const command = `fromUuidSync(\"${uuid}\").use();`;\n  let macro = game.macros.contents.find((m) => m.name === item.name && m.data.command === command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: item.name,\n        type: \"script\",\n        img: item.img,\n        command: command,\n        flags: { \"pf1.itemMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create action use macro from dropped action.\n *\n * @param {string} actionId Action ID\n * @param {string} uuid UUID to parent item\n * @param {number} slot Hotbar slot to assign to\n * @returns {Promise<User>} The updated User\n */\nexport const createActionMacro = async (actionId, uuid, slot) => {\n  const item = fromUuidSync(uuid);\n\n  const action = item?.actions.get(actionId);\n\n  if (!action) {\n    return void ui.notifications.error(\n      game.i18n.format(\"PF1.Error.ActionNotFound\", { id: actionId, item: item?.name, actor: item?.actor?.name })\n    );\n  }\n\n  const command = `fromUuidSync(\"${uuid}\")\\n\\t.actions.get(\"${actionId}\")\\n\\t.use();`;\n\n  let macro = game.macros.contents.find((m) => m.name === item.name && m.data.command === command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: `${action.name} (${item.name})`,\n        type: \"script\",\n        img: action.img || item.img,\n        command,\n        flags: { pf1: { actionMacro: { item: uuid, action: actionId } } },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from skill data to roll an actor's skill, or get an existing one.\n *\n * @async\n * @param {string} skillId - The skill's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSkillMacro = async (skillId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const skillInfo = actor.getSkillInfo(skillId);\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSkill(\"${skillId}\");`;\n  const name = game.i18n.format(\"PF1.RollSkillMacroName\", { actor: actor.name, skill: skillInfo.fullName });\n  let macro = game.macros.contents.find((m) => m.name === name && m.data.command === command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command: command,\n        flags: { \"pf1.skillMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro from save data to roll an actor's save, or get an existing one.\n *\n * @async\n * @param {string} saveId - The save's identifier\n * @param {string} uuid - The actor's UUID\n * @param {number} slot - The hotbar slot to use\n * @returns {Promise<User>} The updated User\n */\nexport const createSaveMacro = async (saveId, uuid, slot) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const saveName = game.i18n.localize(\"PF1.SavingThrow\" + saveId.capitalize());\n\n  const command = `fromUuidSync(\"${actor.uuid}\")\\n\\t.rollSavingThrow(\"${saveId}\");`;\n  const name = game.i18n.format(\"PF1.RollSaveMacroName\", { actor: actor.name, type: saveName });\n  let macro = game.macros.contents.find((m) => m.name === name && m.data.command === command);\n  if (!macro) {\n    macro = await Macro.create(\n      {\n        name: name,\n        type: \"script\",\n        img: \"systems/pf1/icons/items/inventory/dice.jpg\",\n        command: command,\n        flags: { \"pf1.saveMacro\": true },\n      },\n      { displaySheet: false }\n    );\n  }\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n\n/**\n * Create a Macro to roll one of various checks for an actor\n *\n * @async\n * @param {string} type The type of macro to create\n * @param {string} uuid The actor's UUID\n * @param {number} slot The hotbar slot to use\n * @param {object} [data] Additional context data\n * @returns {Promise<User|void>} The updated User, if an update is triggered\n */\nexport const createMiscActorMacro = async (type, uuid, slot, data) => {\n  const actor = fromUuidSync(uuid);\n  if (!actor) return;\n\n  const getBookLabel = (bookId) => actor.system.attributes?.spells?.spellbooks?.[bookId]?.label;\n\n  let name,\n    img,\n    command = `fromUuidSync(\"${actor.uuid}\")\\n\\t`;\n  switch (type) {\n    case \"defenses\":\n      command += `.displayDefenseCard();`;\n      name = game.i18n.format(\"PF1.DisplayDefensesMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/items/armor/shield-light-metal.png\";\n      break;\n    case \"cmb\":\n      command += `.rollAttack({maneuver:true});`;\n      name = game.i18n.format(\"PF1.RollCMBMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/feats/improved-grapple.jpg\";\n      break;\n    case \"cl\": {\n      const { bookId } = data;\n      command += `.rollCL(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollCLMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/spells/wind-grasp-eerie-3.jpg\";\n      break;\n    }\n    case \"concentration\": {\n      const { bookId } = data;\n      command += `.rollConcentration(\"${bookId}\");`;\n      name = game.i18n.format(\"PF1.RollConcentrationMacroName\", { actor: actor.name, book: getBookLabel(bookId) });\n      img = \"systems/pf1/icons/skills/light_01.jpg\";\n      break;\n    }\n    case \"bab\":\n      command += `.rollBAB();`;\n      name = game.i18n.format(\"PF1.RollBABMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/yellow_08.jpg\";\n      break;\n    case \"initiative\":\n      command += \".rollInitiative();\";\n      name = game.i18n.format(\"PF1.RollInitiativeMacroName\", { actor: actor.name });\n      img = \"systems/pf1/icons/skills/weapon_41.jpg\";\n      break;\n    case \"attack\": {\n      const { attack } = data;\n      const isMelee = attack === \"melee\";\n      command += `.rollAttack({ ranged: ${isMelee ? \"false\" : \"true\"}});`;\n      name = game.i18n.format(isMelee ? \"PF1.RollMeleeMacroName\" : \"PF1.RollRangedMacroName\", { actor: actor.name });\n      img = isMelee ? \"systems/pf1/icons/skills/weapon_23.jpg\" : \"systems/pf1/icons/skills/arrow_07.jpg\";\n      break;\n    }\n    case \"abilityScore\": {\n      const { ability } = data;\n      command += `.rollAbilityTest(\"${ability}\");`;\n      name = game.i18n.format(\"PF1.RollAbilityMacroName\", {\n        actor: actor.name,\n        ability: CONFIG.PF1.abilities[ability],\n      });\n      img = \"systems/pf1/icons/skills/blue_35.jpg\";\n      break;\n    }\n  }\n\n  if (!name) return;\n\n  let macro = game.macros.contents.find((o) => o.name === name && o.command === command);\n  macro ??= await Macro.create(\n    {\n      name,\n      type: \"script\",\n      img,\n      command,\n      flags: { pf1: { type, actor: uuid } },\n    },\n    { displaySheet: false }\n  );\n\n  return game.user.assignHotbarMacro(macro, slot);\n};\n","/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {object} data  - Render options\n */\nexport function hideRollInfo(cm, jq, data) {\n  const whisper = cm.whisper || [];\n  const isBlind = whisper.length && cm.blind;\n  const isVisible = whisper.length ? whisper.includes(game.user.id) || (cm.isAuthor && !isBlind) : true;\n  if (!isVisible) {\n    jq.find(\".dice-formula\").text(\"???\");\n    jq.find(\".dice-total\").text(\"?\");\n    jq.find(\".dice\").text(\"\");\n    jq.find(\".success\").removeClass(\"success\");\n    jq.find(\".failure\").removeClass(\"failure\");\n  }\n}\n\n/**\n * Generates an info block containing an item's identified info for GMs\n *\n * @remarks This HTML has to be generated in a synchronous way, as adding to a rendered chat message's content\n *          will cause erratic scrolling behaviour.\n * @param {ChatMessagePFIdentifiedInfo} info - An object containing the item's identified info\n * @returns {string} HTML string containing the info block\n */\nfunction getIdentifiedBlock(info) {\n  const hasCombinedName = info.actionName && !info.actionDescription;\n  return (\n    _templateCache[\"systems/pf1/templates/chat/parts/gm-description.hbs\"]?.(\n      { ...info, hasCombinedName },\n      { allowProtoMethodsByDefault: true, allowProtoPropertiesByDefault: true }\n    ) ?? \"\"\n  );\n}\n\n/**\n * Add GM-sensitive info for GMs and hide GM-sensitive info for players\n *\n * @param {ChatMessagePF} cm - The chat message\n * @param {JQuery} html - The chat message's HTML\n * @param {object} data - Data used to render the chat message\n */\nexport function hideGMSensitiveInfo(cm, html, data) {\n  // Handle adding of GM-sensitive info\n  if (game.user.isGM) {\n    // Show identified info box for GM if item was unidentified when rolled\n    const identifiedInfo = cm.flags.pf1?.identifiedInfo ?? {};\n    const { identified = true } = identifiedInfo;\n    if (!identified && cm.hasItemSource) {\n      const cardContent = html.find(\".card-content\");\n      cardContent.append(getIdentifiedBlock(identifiedInfo));\n    }\n    // Return early, as the rest of the function handles removing already existing info\n    return;\n  }\n\n  // Hide info that's always sensitive, no matter the card's owner\n  html.find(\".gm-sensitive-always\").remove();\n\n  // Hide info about unowned tokens\n  html.find(\"[data-gm-sensitive-uuid]\").each((a, elem) => {\n    // Quickly hide element\n    elem = $(elem);\n    elem.hide();\n\n    // Then check for stuff\n    const uuid = elem.data(\"gm-sensitive-uuid\");\n    if (!uuid) return;\n\n    let obj = fromUuidSync(uuid);\n    // If token or token document, get actor for testing user permissions\n    // TODO: This should no longer be necessary with Foundry v11, unlinked actors give actor directly.\n    if (obj instanceof Token || obj instanceof TokenDocument) obj = obj.actor;\n\n    //  Show element again, since we have permission\n    if (obj?.testUserPermission && obj.testUserPermission(game.user, \"OBSERVER\")) {\n      elem.show();\n    }\n    // Remove element completely, since we don't have permission\n    else {\n      elem.remove();\n    }\n  });\n\n  const actor = ChatMessage.getSpeakerActor(cm.speaker);\n  // Exit if allowed to see, followup is for hiding info\n  if (actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n  // Hide info\n  html.find(\".gm-sensitive\").remove();\n\n  // Alter GM inner texts\n  html.find(\"[data-gm-sensitive-inner]\").each((a, elem) => {\n    if (!game.settings.get(\"pf1\", \"obscureSaveDCs\") && elem.dataset.action === \"save\") return;\n\n    elem = $(elem);\n    elem.text(elem.data(\"gm-sensitive-inner\"));\n    elem.removeData(\"gm-sensitive-inner\");\n  });\n\n  if (game.settings.get(\"pf1\", \"obscureInlineRolls\")) {\n    // Turn rolls into raw strings\n    html.find(\".inline-roll\").each((a, elem) => {\n      if (!elem.dataset.roll) return;\n\n      let roll;\n      try {\n        roll = Roll.fromJSON(unescape(elem.dataset.roll));\n      } catch (err) {\n        console.error(`Inline roll in chat message ${cm.id} had invalid data`, err);\n        return;\n      }\n\n      const nroll = Roll.defaultImplementation.safeRollSync(`${roll.total}`);\n      elem.dataset.roll = escape(JSON.stringify(nroll));\n      delete elem.dataset.tooltip;\n      elem.classList.add(\"obfuscated\");\n    });\n  }\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterAmmoRecovery(cm, jq) {\n  const recoveryData = cm.getFlag(\"pf1\", \"ammoRecovery\");\n  if (!recoveryData) return;\n\n  jq.find(\".chat-attack .ammo[data-ammo-id]\").each((a, el) => {\n    const attackIndex = el.closest(\".chat-attack\").dataset.index;\n    const ammoId = el.dataset.ammoId;\n    const data = recoveryData[attackIndex]?.[ammoId];\n    if (!data) return;\n    const { recovered } = data;\n    $(el)\n      .find(\".inline-action\")\n      .each((i, ia) => {\n        // TODO: Disable button & track proper quantities\n        // TODO: Mark partial recovery\n        if (recovered === undefined) return;\n        else if (recovered > 0) ia.classList.add(\"recovered\");\n        else ia.classList.add(\"recovery-failed\");\n      });\n  });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function alterTargetDefense(cm, jq) {\n  const defenseData = cm.getFlag(\"pf1\", \"targetDefense\");\n  if (!defenseData) return;\n\n  jq.find(\".attack-targets .saving-throws div[data-saving-throw]\").each((a, el) => {\n    const actorUUID = el.closest(\".target\").dataset.uuid;\n    const save = el.dataset.savingThrow;\n    const value = foundry.utils.getProperty(defenseData, `${actorUUID}.save.${save}`);\n    if (value == null) return;\n    $(el).find(\".value\").text(value.toString());\n  });\n}\n\n/**\n * @param app\n * @param html\n * @param data\n * @param conf\n */\nexport function applyAccessibilitySettings(app, html, data, conf) {}\n\n/**\n * Returns an inline roll string suitable for chat messages.\n *\n * @deprecated\n * @param {Roll} roll - The roll to be stringified\n * @param {object} [options] - Additional options affecting the inline roll\n * @param {boolean} [options.hide3d] - Whether the roll should be hidden from DsN\n * @returns {string} The inline roll string\n */\nexport function createInlineRollString(roll, { hide3d = true } = {}) {\n  foundry.utils.logCompatibilityWarning(\"pf1.utils.chat.createInlineRollString() is deprecated with no replacement\", {\n    since: \"PF1 v10\",\n    until: \"PF1 v11\",\n  });\n\n  const a = roll.toAnchor();\n  if (hide3d) a.classList.add(\"inline-dsn-hidden\");\n  return a.outerHTML;\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {HTMLElement} html - HTML element\n * @param recursive\n */\nexport async function hideInvisibleTargets(cm, html, recursive = false) {\n  const targetsElem = html.querySelector(\".pf1.chat-card .attack-targets\");\n  if (!targetsElem) return; // No targets\n\n  // Delay until canvas ready if it's not yet so.\n  if (!canvas.ready) {\n    if (recursive) return;\n    targetsElem.style.display = \"none\";\n    if (!game.settings.get(\"core\", \"noCanvas\")) {\n      Hooks.once(\"canvasReady\", () => hideInvisibleTargets(cm, html, true));\n    } else {\n      // Canvas disabled, remove targets\n      targetsElem.remove();\n    }\n    return;\n  }\n\n  const targetElems = targetsElem.querySelectorAll(\".target\");\n  const targets = Array.from(targetElems).map((elem) => ({ uuid: elem.dataset.uuid, elem }));\n\n  let hasVisible = false;\n  for (const t of targets) {\n    /** @type {TokenDocumentPF} */\n    const token = fromUuidSync(t.uuid);\n    if (!token) continue;\n    t.token = token.object;\n\n    const isVisible = t.token?.isVisible;\n    const isObserver = token.actor?.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER) ?? false;\n\n    // Hide if token invisible and user isn't observer of token\n    if (!isVisible && !isObserver) $(t.elem).hide();\n    else {\n      hasVisible = true;\n      $(t.elem).show();\n    }\n  }\n\n  // Hide targets if there's none visible to not reveal presence of invisible targets\n  if (!hasVisible) targetsElem.remove();\n  else targetElems.style.removeProperty(\"display\");\n}\n\nconst getTokenByUuid = (uuid) => fromUuidSync(uuid)?.object;\n\n/**\n * Pan to defined token\n *\n * Provided here to allow overriding the behaviour.\n *\n * @internal\n * @param {Token} token - Token to pan to\n * @param {number} [duration=250] - Animation duration\n */\nexport function panToToken(token, duration = 250) {\n  canvas.animatePan({ ...token.center, duration });\n}\n\n/**\n * @param {ChatMessage} cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n */\nexport function addTargetCallbacks(cm, jq) {\n  const targetElems = jq[0].querySelectorAll(\".attack-targets .target[data-uuid]\");\n\n  // Define getter functions\n  /**\n   * @param {HTMLElement} elem\n   * @returns {TokenPF|undefined}\n   */\n  function _getTokenByElem(elem) {\n    return fromUuidSync(elem?.dataset.uuid ?? \"\")?.object;\n  }\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {HTMLElement}\n   */\n  const _getRootTargetElement = function (elem) {\n    if (elem.dataset.uuid) return elem;\n    return elem.closest(\"[data-uuid]\");\n  };\n\n  function _mouseEnterCallback(event, uuid) {\n    getTokenByUuid(uuid)?._onHoverIn(event, { hoverOutOthers: false });\n  }\n\n  function _mouseLeaveCallback(event, uuid) {\n    getTokenByUuid(uuid)?._onHoverOut(event);\n  }\n\n  function _imageClickCallback(event, uuid) {\n    event.preventDefault();\n\n    const token = getTokenByUuid(uuid);\n    if (!token?.actor.testUserPermission(game.user, CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER)) return;\n\n    const toggle = event.shiftKey;\n\n    if (!toggle || (!token.controlled && toggle)) pf1.utils.chat.panToToken(token);\n\n    if (token.actor.isOwner) {\n      if (token.controlled) {\n        if (toggle) token.release();\n      } else {\n        token.control({ releaseOthers: !toggle });\n      }\n    }\n  }\n\n  // Add callbacks\n  for (let elem of targetElems) {\n    const uuid = elem.dataset.uuid;\n    const t = fromUuidSync(uuid);\n    if (!t) continue;\n\n    // Image element events\n    const imgElem = elem.querySelector(\".target-image\");\n    imgElem.addEventListener(\"pointerenter\", (ev) => _mouseEnterCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"pointerleave\", (ev) => _mouseLeaveCallback(ev, uuid), { passive: true });\n    imgElem.addEventListener(\"click\", (ev) => _imageClickCallback(ev, uuid));\n\n    // Misc element events\n    elem = $(elem);\n    elem.find(\".ac\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetACClick(cm, jq, t.actor, event);\n    });\n\n    elem.find(\".saving-throws .click\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      const t = fromUuidSync(uuid);\n      if (!t?.actor) return;\n      pf1.utils.chat.targetSavingThrowClick(cm, jq, t.actor, event);\n    });\n  }\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Actor} actor - Actor instance\n * @param {Event} event - Triggering event\n */\nexport async function targetACClick(cm, jq, actor, event) {\n  actor.displayDefenseCard({ rollMode: \"selfroll\" });\n}\n\n/**\n * @param {ChatMessage}  cm - Chat message instance\n * @param {JQuery<HTMLElement>} jq - JQuery instance\n * @param {Actor} actor - Actor instance\n * @param {Event} event - Triggering event\n */\nexport async function targetSavingThrowClick(cm, jq, actor, event) {\n  const elem = event.currentTarget;\n  const save = elem.dataset.savingThrow;\n\n  const message = await actor.rollSavingThrow(save, { event });\n  const total = message?.rolls?.[0]?.total;\n\n  // Replace saving throw value on original chat card's target\n  if (total != null) {\n    const actorUUID = elem.closest(\".target\").dataset.uuid;\n    await cm.setFlag(\"pf1\", \"targetDefense\", { [actorUUID]: { save: { [save]: total } } });\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\n\nconst actorHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Actor.documentClasses[type] ?? ActorBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ActorPFProxy = new Proxy(ActorBasePF, actorHandler);\n","import { ItemBasePF } from \"./item-base.mjs\";\n\nconst itemHandler = {\n  construct(_, args) {\n    const type = args[0]?.type;\n    const cls = CONFIG.Item.documentClasses[type] ?? ItemBasePF;\n    return new cls(...args);\n  },\n};\n\nexport const ItemPFProxy = new Proxy(ItemBasePF, itemHandler);\n","/**\n * PF1 Configuration Values\n *\n * A dictionary of dictionaries providing configuration data like formulae,\n * translation keys, and other configuration values. Translations keys are\n * assumed to get replaced by their proper translation when the system is loaded.\n *\n * The PF1 object may be adjusted to influence the system's behaviour during runtime.\n * It is available as `pf1.config` as well as through `CONFIG.PF1`.\n *\n * @module\n */\nexport const re = {\n  traitSeparator: /\\s*[;]\\s*/g,\n};\n\n/**\n * The set of Ability Scores used within the system\n *\n * @enum {string}\n */\nexport const abilities = {\n  str: \"PF1.AbilityStr\",\n  dex: \"PF1.AbilityDex\",\n  con: \"PF1.AbilityCon\",\n  int: \"PF1.AbilityInt\",\n  wis: \"PF1.AbilityWis\",\n  cha: \"PF1.AbilityCha\",\n};\n\n/**\n * The set of Ability Scores used within the system in short form\n */\nexport const abilitiesShort = {\n  str: \"PF1.AbilityShortStr\",\n  dex: \"PF1.AbilityShortDex\",\n  con: \"PF1.AbilityShortCon\",\n  int: \"PF1.AbilityShortInt\",\n  wis: \"PF1.AbilityShortWis\",\n  cha: \"PF1.AbilityShortCha\",\n};\n\n/**\n * The point cost to increase an ability score using Point Buy\n */\nexport const abilityCost = {\n  7: -4,\n  8: -2,\n  9: -1,\n  10: 0,\n  11: 1,\n  12: 2,\n  13: 3,\n  14: 5,\n  15: 7,\n  16: 10,\n  17: 13,\n  18: 17,\n};\n\n/**\n * Point buy calculator.\n */\nexport const pointBuy = {\n  low: { label: \"PF1.Application.PointBuy.Type.low\", points: 10 },\n  standard: { label: \"PF1.Application.PointBuy.Type.standard\", points: 15 },\n  high: { label: \"PF1.Application.PointBuy.Type.high\", points: 20 },\n  epic: { label: \"PF1.Application.PointBuy.Type.epic\", points: 25 },\n};\n\n/**\n * At which levels you receive how many new ability points.\n */\nexport const levelAbilityScores = {\n  4: 1,\n  8: 1,\n  12: 1,\n  16: 1,\n  20: 1,\n};\n\n/**\n * Valid hit die sizes.\n */\nexport const hitDieSizes = [6, 8, 10, 12];\n\n/**\n * Data for the feature associated with ability scores gained from leveling.\n */\nexport const levelAbilityScoreFeature = {\n  img: \"systems/pf1/icons/skills/affliction_10.jpg\",\n  name: \"PF1.LevelUp.AbilityScore.Item.Name\",\n  system: {\n    description: {\n      value: \"PF1.LevelUp.AbilityScore.Item.Desc\",\n    },\n    subType: \"misc\",\n  },\n  type: \"feat\",\n};\n\n/**\n * The set of Saving Throws\n */\nexport const savingThrows = {\n  fort: \"PF1.SavingThrowFort\",\n  ref: \"PF1.SavingThrowRef\",\n  will: \"PF1.SavingThrowWill\",\n};\n\n/**\n * The types of classes\n */\nexport const classTypes = {\n  base: \"PF1.Subtypes.Item.class.base.Single\",\n  prestige: \"PF1.Subtypes.Item.class.prestige.Single\",\n  npc: \"PF1.Subtypes.Item.class.npc.Single\",\n  racial: \"PF1.Subtypes.Item.class.racial.Single\",\n  mythic: \"PF1.Subtypes.Item.class.mythic.Single\",\n};\n\n/**\n * Valid options for a class's BAB progression\n */\nexport const classBAB = {\n  low: \"PF1.Low\",\n  med: \"PF1.Medium\",\n  high: \"PF1.High\",\n  custom: \"PF1.Custom\",\n};\n\n/**\n * Valid options for a class's saving throw bonus progression\n */\nexport const classSavingThrows = {\n  low: \"PF1.Poor\",\n  high: \"PF1.Good\",\n  custom: \"PF1.Custom\",\n};\n\n/**\n * The formulae for BAB progressions\n */\nexport const classBABFormulas = {\n  low: \"floor(@hitDice * 0.5)\",\n  med: \"floor(@hitDice * 0.75)\",\n  high: \"@hitDice\",\n  custom: \"0\",\n};\n\nexport const classFractionalBABFormulas = {\n  low: \"@hitDice * 0.5\", // 1/2\n  med: \"@hitDice * 0.75\", // 3/4\n  high: \"@hitDice\", // 1/1\n  custom: \"0\",\n};\n\n/**\n * The formulae for saving throw progressions by class type\n */\nexport const classSavingThrowFormulas = {\n  base: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  prestige: {\n    low: \"floor((1 + @hitDice) / 3)\",\n    high: \"floor((1 + @hitDice) / 2)\",\n  },\n  npc: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  racial: {\n    low: \"floor(@hitDice / 3)\",\n    high: \"2 + floor(@hitDice / 2)\",\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n};\nexport const classFractionalSavingThrowFormulas = {\n  goodSaveBonus: \"2\",\n  base: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  prestige: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  npc: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  racial: {\n    low: \"@hitDice / 3\",\n    high: \"@hitDice / 2\",\n    goodSave: true,\n  },\n  mythic: {\n    low: \"0\",\n    high: \"0\",\n  },\n  custom: {\n    low: \"0\",\n    high: \"0\",\n  },\n};\n\n/**\n * Item types that can have class associations.\n *\n * TODO: Move this to item metadata.\n */\nexport const classAssociations = [\"feat\", \"attack\"];\n\n/**\n * The choices available for favoured class bonuses\n */\nexport const favouredClassBonuses = {\n  hp: \"PF1.FavouredClass.Bonuses.hp\",\n  skill: \"PF1.FavouredClass.Bonuses.skill\",\n  alt: \"PF1.FavouredClass.Bonuses.alt\",\n};\n\n/**\n * Icons used for favoured class bonus choices\n */\nexport const favouredClassBonusIcons = {\n  hp: \"fa-heartbeat\",\n  skill: \"fa-wrench\",\n  alt: \"fa-tag\",\n};\n\n/**\n * The set of Armor Classes\n */\nexport const ac = {\n  normal: \"PF1.ACNormal\",\n  touch: \"PF1.ACTouch\",\n  flatFooted: \"PF1.ACFlatFooted\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Character alignment options\n */\nexport const alignments = {\n  lg: \"PF1.Alignments.lg\",\n  ng: \"PF1.Alignments.ng\",\n  cg: \"PF1.Alignments.cg\",\n  ln: \"PF1.Alignments.ln\",\n  tn: \"PF1.Alignments.tn\",\n  cn: \"PF1.Alignments.cn\",\n  le: \"PF1.Alignments.le\",\n  ne: \"PF1.Alignments.ne\",\n  ce: \"PF1.Alignments.ce\",\n};\n\n/**\n * Character alignment options in their short form\n */\nexport const alignmentsShort = {\n  lg: \"PF1.Alignments.Short.lg\",\n  ng: \"PF1.Alignments.Short.ng\",\n  cg: \"PF1.Alignments.Short.cg\",\n  ln: \"PF1.Alignments.Short.ln\",\n  tn: \"PF1.Alignments.Short.tn\",\n  cn: \"PF1.Alignments.Short.cn\",\n  le: \"PF1.Alignments.Short.le\",\n  ne: \"PF1.Alignments.Short.ne\",\n  ce: \"PF1.Alignments.Short.ce\",\n};\n\n/**\n * Extra damage reduction types\n *\n * @alpha\n */\nexport const damageResistances = {\n  lawful: \"PF1.Alignments.l\",\n  chaotic: \"PF1.Alignments.c\",\n  good: \"PF1.Alignments.g\",\n  evil: \"PF1.Alignments.e\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * The set of Armor Proficiencies which a character may have\n */\nexport const armorProficiencies = {\n  lgt: \"PF1.Proficiency.Armor.light\",\n  med: \"PF1.Proficiency.Armor.medium\",\n  hvy: \"PF1.Proficiency.Armor.heavy\",\n  shl: \"PF1.Proficiency.Armor.shield\",\n  twr: \"PF1.Proficiency.Armor.tower\",\n};\n\n/**\n * The set of broad Weapon Proficiencies a character may have\n */\nexport const weaponProficiencies = {\n  simple: \"PF1.Proficiency.Weapon.simple\",\n  martial: \"PF1.Proficiency.Weapon.martial\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * This describes the ways that an ability can be activated.\n */\nexport const abilityActivationTypes = {\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  swift: \"PF1.Activation.swift.Single\",\n  immediate: \"PF1.Activation.immediate.Single\",\n  move: \"PF1.Activation.move.Single\",\n  standard: \"PF1.Activation.standard.Single\",\n  full: \"PF1.Activation.fullRound.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  round: \"PF1.Activation.round.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n};\n\n/**\n * This describes plurals for activation types.\n */\nexport const abilityActivationTypesPlurals = {\n  free: \"PF1.Activation.free.Plural\",\n  swift: \"PF1.Activation.swift.Plural\",\n  immediate: \"PF1.Activation.immediate.Plural\",\n  move: \"PF1.Activation.move.Plural\",\n  standard: \"PF1.Activation.standard.Plural\",\n  full: \"PF1.Activation.fullRound.Plural\",\n  attack: \"PF1.Activation.attack.Plural\",\n  round: \"PF1.Activation.round.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n};\n\n/**\n * This describes the ways that an ability can be activated when using\n * Unchained rules.\n */\nexport const abilityActivationTypes_unchained = {\n  nonaction: \"PF1.Activation.nonaction.Single\",\n  passive: \"PF1.Activation.passive.Single\",\n  free: \"PF1.Activation.free.Single\",\n  reaction: \"PF1.Activation.reaction.Single\",\n  action: \"PF1.Activation.action.Single\",\n  attack: \"PF1.Activation.attack.Single\",\n  aoo: \"PF1.Activation.aoo.Single\",\n  minute: \"PF1.Activation.minute.Single\",\n  hour: \"PF1.Activation.hour.Single\",\n  special: \"PF1.Activation.special.Single\",\n};\n\n/**\n * This describes plurals for the ways that an ability can be activated when\n * using Unchained rules.\n */\nexport const abilityActivationTypesPlurals_unchained = {\n  passive: \"PF1.Activation.passive.Plural\",\n  free: \"PF1.Activation.free.Plural\",\n  reaction: \"PF1.Activation.reaction.Plural\",\n  action: \"PF1.Activation.action.Plural\",\n  minute: \"PF1.Activation.minute.Plural\",\n  hour: \"PF1.Activation.hour.Plural\",\n  special: \"PF1.Activation.special.Plural\",\n};\n\n/**\n * The possible conditions when using Wound Threshold rules\n */\nexport const woundThresholdConditions = {\n  0: \"PF1.WoundLevel.healthy\",\n  1: \"PF1.WoundLevel.grazed\",\n  2: \"PF1.WoundLevel.wounded\",\n  3: \"PF1.WoundLevel.critical\",\n};\n\n/**\n * Change targets affected by Wound Thresholds.\n */\nexport const woundThresholdChangeTargets = [\n  \"~attackCore\",\n  \"cl\",\n  \"allSavingThrows\",\n  \"ac\",\n  //\"cmd\", // valid target but is inherited from \"ac\"\n  \"skills\",\n  \"allChecks\",\n  //\"init\", // inherited from allChecks\n  //\"abilityChecks\", // inherited from allChecks\n];\n\nexport const divineFocus = {\n  0: \"\",\n  1: \"PF1.SpellComponents.DFVariants.DF\",\n  2: \"PF1.SpellComponents.DFVariants.MDF\",\n  3: \"PF1.SpellComponents.DFVariants.FDF\",\n};\n\n/**\n * The measure template types available for actions.\n *\n * They're the same as Foundry's measure templates, so it's copy of CONFIG.MeasuredTemplate.types.\n *\n * @deprecated - Use `CONFIG.MeasuredTemplate.types` instead.\n */\nexport const measureTemplateTypes = CONFIG.MeasuredTemplate.types;\n\n/* -------------------------------------------- */\n\n/**\n * The possible creature sizes\n */\nexport const actorSizes = {\n  fine: \"PF1.ActorSize.fine\",\n  dim: \"PF1.ActorSize.dim\",\n  tiny: \"PF1.ActorSize.tiny\",\n  sm: \"PF1.ActorSize.sm\",\n  med: \"PF1.ActorSize.med\",\n  lg: \"PF1.ActorSize.lg\",\n  huge: \"PF1.ActorSize.huge\",\n  grg: \"PF1.ActorSize.grg\",\n  col: \"PF1.ActorSize.col\",\n};\n\n/**\n * Armor & shield cost multipliers for different creature sizes.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorCost = {\n  humanoid: {\n    fine: 0.5,\n    dim: 0.5,\n    tiny: 0.5,\n    sm: 1,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  nonhumanoid: {\n    fine: 1,\n    dim: 1,\n    tiny: 1,\n    sm: 2,\n    med: 2,\n    lg: 4,\n    huge: 8,\n    grg: 16,\n    col: 32,\n  },\n};\n\n/**\n * Armor weight multipliers for different creature sizes.\n *\n * The values are same for both humanoid and non-humanoid.\n *\n * @see https://aonprd.com/Rules.aspx?Name=Armor%20for%20Unusual%20Creatures&Category=Armor\n */\nexport const armorWeight = {\n  fine: 0.1,\n  dim: 0.1,\n  tiny: 0.1,\n  sm: 0.5,\n  med: 1,\n  lg: 2,\n  huge: 5,\n  grg: 8,\n  col: 12,\n};\n\n/**\n * The possible creature sizes in their one-letter form\n */\nexport const sizeChart = {\n  fine: \"F\",\n  dim: \"D\",\n  tiny: \"T\",\n  sm: \"S\",\n  med: \"M\",\n  lg: \"L\",\n  huge: \"H\",\n  grg: \"G\",\n  col: \"C\",\n};\n\n/**\n * @typedef {object} TokenSize\n * @property {number} w - Width, in cells\n * @property {number} h - Height, in cells\n * @property {number} scale - Scale ratio\n */\n\n/**\n * The size values for Tokens according to the creature's size\n *\n * @type {Record<string,TokenSize>}\n */\nexport const tokenSizes = {\n  fine: { w: 1, h: 1, scale: 0.45 },\n  dim: { w: 1, h: 1, scale: 0.6 },\n  tiny: { w: 1, h: 1, scale: 0.75 },\n  sm: { w: 1, h: 1, scale: 0.9 },\n  med: { w: 1, h: 1, scale: 1 },\n  lg: { w: 2, h: 2, scale: 1 },\n  huge: { w: 3, h: 3, scale: 1 },\n  grg: { w: 4, h: 4, scale: 1 },\n  col: { w: 6, h: 6, scale: 1 },\n};\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeMods = {\n  fine: 8,\n  dim: 4,\n  tiny: 2,\n  sm: 1,\n  med: 0,\n  lg: -1,\n  huge: -2,\n  grg: -4,\n  col: -8,\n};\n\n/**\n * The size modifier applied to creatures not of medium size\n */\nexport const sizeSpecialMods = {\n  fine: -8,\n  dim: -4,\n  tiny: -2,\n  sm: -1,\n  med: 0,\n  lg: 1,\n  huge: 2,\n  grg: 4,\n  col: 8,\n};\n\n/**\n * The size modifier applied to fly checks of creatures not of medium size\n */\nexport const sizeFlyMods = {\n  fine: 8,\n  dim: 6,\n  tiny: 4,\n  sm: 2,\n  med: 0,\n  lg: -2,\n  huge: -4,\n  grg: -6,\n  col: -8,\n};\n\n/**\n * The size modifier applied to stealth checks of creatures not of medium size\n */\nexport const sizeStealthMods = {\n  fine: 16,\n  dim: 12,\n  tiny: 8,\n  sm: 4,\n  med: 0,\n  lg: -4,\n  huge: -8,\n  grg: -12,\n  col: -16,\n};\n\n/**\n * Vehicle properties based on size and type\n */\nexport const vehicles = {\n  size: {\n    lg: {\n      label: \"PF1.ActorSize.lg\",\n      space: \"PF1.Vehicles.Space.Large\",\n    },\n    huge: {\n      label: \"PF1.ActorSize.huge\",\n      space: \"PF1.Vehicles.Space.Huge\",\n    },\n    grg: {\n      label: \"PF1.ActorSize.grg\",\n      space: \"PF1.Vehicles.Space.Gargantuan\",\n    },\n    col: {\n      label: \"PF1.ActorSize.col\",\n      space: \"PF1.Vehicles.Space.Colossal\",\n    },\n  },\n  type: {\n    land: \"PF1.Vehicles.Types.Land\",\n    sea: \"PF1.Vehicles.Types.Sea\",\n    air: \"PF1.Vehicles.Types.Air\",\n  },\n};\n\n/**\n * The possible options for a creature's maneuverability\n */\nexport const flyManeuverabilities = {\n  clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n  poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n  average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n  good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n  perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n};\n\n/**\n * The bonus values for a creature's maneuverability\n */\nexport const flyManeuverabilityValues = {\n  clumsy: -8,\n  poor: -4,\n  average: 0,\n  good: 4,\n  perfect: 8,\n};\n\n/**\n * Overland speeds\n */\nexport const overlandSpeed = {\n  imperial: {\n    // Default\n    // 1 mi per 10 ft\n    default: {\n      per: 10,\n      out: 1,\n      unit: \"mi\",\n    },\n  },\n  metric: {\n    // Metric system, used by German translation\n    // 1.5 km per 3 m\n    rounded: {\n      per: 3,\n      out: 1.5,\n      unit: \"km\",\n    },\n    // Exact metric system, used by Spanish translation\n    // 1.6 km per 3 m\n    exact: {\n      per: 3,\n      out: 1.6,\n      unit: \"km\",\n    },\n  },\n};\n\n/* -------------------------------------------- */\n\n/**\n * An array of maximum carry capacities, where the index is the ability/strength score.\n */\n// prettier-ignore\nexport const encumbranceLoads = [\n  0,\n  10,\n  20,\n  30,\n  40,\n  50,\n  60,\n  70,\n  80,\n  90,\n  100,\n  115,\n  130,\n  150,\n  175,\n  200,\n  230,\n  260,\n  300,\n  350,\n  400,\n  460,\n  520,\n  600,\n  700,\n  800,\n  920,\n  1040,\n  1200,\n  1400,\n  1600,\n];\n\n/**\n * Encumbrance levels for light, medium, and heavy loads.\n *\n * @see {@link ActorPF._computeEncumbrance ActorPF.system.encumbrance.level}\n * @readonly\n * @enum {number}\n */\nexport const encumbranceLevels = {\n  light: 0,\n  medium: 1,\n  heavy: 2,\n};\n\n/**\n * Encumbrance multipliers applied due to a creature's size for bi- and\n * quadrupedal creatures.\n */\nexport const encumbranceMultipliers = {\n  normal: {\n    fine: 0.125,\n    dim: 0.25,\n    tiny: 0.5,\n    sm: 0.75,\n    med: 1,\n    lg: 2,\n    huge: 4,\n    grg: 8,\n    col: 16,\n  },\n  quadruped: {\n    fine: 0.25,\n    dim: 0.5,\n    tiny: 0.75,\n    sm: 1,\n    med: 1.5,\n    lg: 3,\n    huge: 6,\n    grg: 12,\n    col: 24,\n  },\n};\n\n/**\n * Damage multipliers from ability score.\n */\nexport const abilityDamageMultipliers = [\n  { value: 0.5, label: \"×0.5\" },\n  { value: 1, label: \"×1\" },\n  { value: 1.5, label: \"×1.5\" },\n  { value: 2, label: \"×2\" },\n  { value: 2.5, label: \"×2.5\" },\n];\n\n/**\n * Ability damage multipliers inherited from held options\n */\nexport const abilityDamageHeldMultipliers = {\n  oh: 0.5,\n  normal: 1,\n  \"2h\": 1.5,\n};\n\n/* -------------------------------------------- */\n\n/**\n * Classification types for item action types\n */\nexport const itemActionTypes = {\n  mwak: \"PF1.ActionTypes.mwak\",\n  rwak: \"PF1.ActionTypes.rwak\",\n  twak: \"PF1.ActionTypes.twak\",\n  msak: \"PF1.ActionTypes.msak\",\n  rsak: \"PF1.ActionTypes.rsak\",\n  mcman: \"PF1.ActionTypes.mcman\",\n  rcman: \"PF1.ActionTypes.rcman\",\n  spellsave: \"PF1.ActionTypes.spellSave\",\n  save: \"PF1.ActionTypes.save\",\n  heal: \"PF1.ActionTypes.heal\",\n  other: \"PF1.ActionTypes.other\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the lengths of time over which an item can have limited use ability\n */\nexport const limitedUsePeriods = {\n  single: \"PF1.LimitedUses.Periods.single\",\n  round: \"PF1.LimitedUses.Periods.round\",\n  day: \"PF1.LimitedUses.Periods.day\",\n  week: \"PF1.LimitedUses.Periods.week\",\n  charges: \"PF1.LimitedUses.Periods.charges\",\n};\n\n/**\n * Order of limited use periods from smallest to biggest, omitting periods with no relation to time.\n */\nexport const limitedUsePeriodOrder = [\"round\", \"day\", \"week\"];\n\n/* -------------------------------------------- */\n\n/**\n * The various equipment types and their subtypes\n */\nexport const equipmentTypes = {\n  armor: {\n    _label: \"PF1.Subtypes.Item.equipment.armor.Single\",\n    lightArmor: \"PF1.Subtypes.Item.equipment.armor.Types.light\",\n    mediumArmor: \"PF1.Subtypes.Item.equipment.armor.Types.medium\",\n    heavyArmor: \"PF1.Subtypes.Item.equipment.armor.Types.heavy\",\n  },\n  shield: {\n    _label: \"PF1.Subtypes.Item.equipment.shield.Single\",\n    lightShield: \"PF1.Subtypes.Item.equipment.shield.Types.light\",\n    heavyShield: \"PF1.Subtypes.Item.equipment.shield.Types.heavy\",\n    towerShield: \"PF1.Subtypes.Item.equipment.shield.Types.tower\",\n    other: \"PF1.Subtypes.Item.equipment.shield.Types.misc\",\n  },\n  wondrous: {\n    _label: \"PF1.Subtypes.Item.equipment.wondrous.Single\",\n  },\n  clothing: {\n    _label: \"PF1.Subtypes.Item.equipment.clothing.Single\",\n  },\n  other: {\n    _label: \"PF1.Other\",\n  },\n};\n\n/**\n * The slots equipment can occupy, sorted by category\n */\nexport const equipmentSlots = {\n  armor: {\n    armor: \"PF1.EquipSlots.armor\",\n  },\n  shield: {\n    shield: \"PF1.EquipSlots.shield\",\n  },\n  wondrous: {\n    slotless: \"PF1.EquipSlots.none\",\n    head: \"PF1.EquipSlots.head\",\n    headband: \"PF1.EquipSlots.headband\",\n    eyes: \"PF1.EquipSlots.eyes\",\n    shoulders: \"PF1.EquipSlots.shoulders\",\n    neck: \"PF1.EquipSlots.neck\",\n    chest: \"PF1.EquipSlots.chest\",\n    body: \"PF1.EquipSlots.body\",\n    belt: \"PF1.EquipSlots.belt\",\n    wrists: \"PF1.EquipSlots.wrists\",\n    hands: \"PF1.EquipSlots.hands\",\n    ring: \"PF1.EquipSlots.ring\",\n    feet: \"PF1.EquipSlots.feet\",\n  },\n  clothing: {\n    clothing: \"PF1.EquipSlots.clothing\",\n  },\n  other: {\n    other: \"PF1.Other\",\n  },\n};\n\nexport const implantTypes = {\n  cybertech: \"PF1.Subtypes.Item.implant.cybertech.Single\",\n};\n\n/**\n * The slots implants can occupy.\n */\nexport const implantSlots = {\n  cybertech: {\n    none: \"PF1.Cybertech.Slots.none\",\n    arm: \"PF1.Cybertech.Slots.arm\",\n    body: \"PF1.Cybertech.Slots.body\",\n    brain: \"PF1.Cybertech.Slots.brain\",\n    ears: \"PF1.Cybertech.Slots.ears\",\n    eyes: \"PF1.Cybertech.Slots.eyes\",\n    head: \"PF1.Cybertech.Slots.head\",\n    legs: \"PF1.Cybertech.Slots.legs\",\n  },\n};\n\n/**\n * The subtypes for loot items\n */\nexport const lootTypes = {\n  gear: \"PF1.Subtypes.Item.loot.gear.Plural\",\n  tool: \"PF1.Subtypes.Item.loot.tool.Plural\",\n  ammo: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n  food: \"PF1.Subtypes.Item.loot.food.Plural\",\n  herb: \"PF1.Subtypes.Item.loot.herb.Plural\",\n  adventuring: \"PF1.Subtypes.Item.loot.adventuring.Plural\",\n  animal: \"PF1.Subtypes.Item.loot.animal.Plural\",\n  animalGear: \"PF1.Subtypes.Item.loot.animalGear.Plural\",\n  reagent: \"PF1.Subtypes.Item.loot.reagent.Plural\",\n  remedy: \"PF1.Subtypes.Item.loot.remedy.Plural\",\n  treasure: \"PF1.Subtypes.Item.loot.treasure.Plural\",\n  tradeGoods: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n  vehicle: \"PF1.Subtypes.Item.loot.vehicle.Plural\",\n  entertainment: \"PF1.Subtypes.Item.loot.entertainment.Plural\",\n  misc: \"PF1.Subtypes.Item.loot.misc.Plural\",\n};\n\n/**\n * Loot types that should not be equippable.\n */\nexport const unequippableLoot = [\n  \"food\",\n  \"herb\",\n  \"reagent\",\n  \"treasure\",\n  \"tradeGoods\",\n  \"vehicle\",\n  \"entertainment\",\n  \"ammo\",\n];\n\n/**\n * The subtypes for ammo type loot items\n */\nexport const ammoTypes = {\n  arrow: \"PF1.AmmoType.arrow\",\n  bolt: \"PF1.AmmoType.bolt\",\n  repeatingBolt: \"PF1.AmmoType.repeatingBolt\",\n  slingBullet: \"PF1.AmmoType.slingBullet\",\n  gunBullet: \"PF1.AmmoType.gunBullet\",\n  dragoonBullet: \"PF1.AmmoType.dragoonBullet\",\n  dart: \"PF1.AmmoType.dart\",\n  siege: \"PF1.AmmoType.siege\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Enumerate the valid consumable types which are recognized by the system\n */\nexport const consumableTypes = {\n  potion: \"PF1.Subtypes.Item.consumable.potion.Single\",\n  poison: \"PF1.Subtypes.Item.consumable.poison.Single\",\n  drug: \"PF1.Subtypes.Item.consumable.drug.Single\",\n  scroll: \"PF1.Subtypes.Item.consumable.scroll.Single\",\n  wand: \"PF1.Subtypes.Item.consumable.wand.Single\",\n  rod: \"PF1.Subtypes.Item.consumable.rod.Single\",\n  staff: \"PF1.Subtypes.Item.consumable.staff.Single\",\n  misc: \"PF1.Misc\",\n};\n\nexport const attackTypes = {\n  weapon: \"PF1.Subtypes.Item.attack.weapon.Single\",\n  natural: \"PF1.Subtypes.Item.attack.natural.Single\",\n  ability: \"PF1.Subtypes.Item.attack.ability.Single\",\n  racialAbility: \"PF1.Subtypes.Item.attack.racialAbility.Single\",\n  item: \"PF1.Item\",\n  misc: \"PF1.Misc\",\n};\n\nexport const featTypes = {\n  feat: \"PF1.Subtypes.Item.feat.feat.Single\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Single\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Single\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Single\",\n  misc: \"PF1.Misc\",\n  template: \"PF1.Subtypes.Item.feat.template.Single\",\n};\n\nexport const featTypesPlurals = {\n  feat: \"PF1.Subtypes.Item.feat.feat.Plural\",\n  classFeat: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n  trait: \"PF1.Subtypes.Item.feat.trait.Plural\",\n  racial: \"PF1.Subtypes.Item.feat.racial.Plural\",\n  template: \"PF1.Subtypes.Item.feat.template.Plural\",\n};\n\nexport const traitTypes = {\n  combat: \"PF1.Trait.combat\",\n  magic: \"PF1.Trait.magic\",\n  faith: \"PF1.Trait.faith\",\n  social: \"PF1.Trait.social\",\n  campaign: \"PF1.Trait.campaign\",\n  cosmic: \"PF1.Trait.cosmic\",\n  equipment: \"PF1.Trait.equipment\",\n  exemplar: \"PF1.Trait.exemplar\",\n  faction: \"PF1.Trait.faction\",\n  family: \"PF1.Trait.family\",\n  mount: \"PF1.Trait.mount\",\n  race: \"PF1.Trait.race\",\n  region: \"PF1.Trait.region\",\n  religion: \"PF1.Trait.religion\",\n  drawback: \"PF1.Trait.drawback\",\n};\n\n/**\n * Ability types, each with their short and their long form\n */\nexport const abilityTypes = {\n  na: {\n    long: \"PF1.AbilityTypes.na.Label\",\n    short: \"PF1.AbilityTypes.na.Short\",\n  },\n  ex: {\n    long: \"PF1.AbilityTypes.ex.Label\",\n    short: \"PF1.AbilityTypes.ex.Short\",\n  },\n  su: {\n    long: \"PF1.AbilityTypes.su.Label\",\n    short: \"PF1.AbilityTypes.su.Short\",\n  },\n  sp: {\n    long: \"PF1.AbilityTypes.sp.Label\",\n    short: \"PF1.AbilityTypes.sp.Short\",\n  },\n};\n\n/* -------------------------------------------- */\n\n/**\n * The valid currency denominations supported by the game system\n */\nexport const currencies = {\n  pp: \"PF1.Currency.Abbr.pp\",\n  gp: \"PF1.Currency.Abbr.gp\",\n  sp: \"PF1.Currency.Abbr.sp\",\n  cp: \"PF1.Currency.Abbr.cp\",\n};\n\n/**\n * Resultant armor types for an actor's worn armor as per their roll data\n *\n * @see {@link ActorPF.getRollData ActorRollData.armor.type}\n * @readonly\n * @enum {number}\n */\nexport const armorTypes = {\n  none: 0,\n  light: 1,\n  medium: 2,\n  heavy: 3,\n};\n\n/**\n * Resultant shield types for an actor's worn shield\n *\n * @see {@link ActorPF.getRollData ActorRollData.shield.type}\n * @readonly\n * @enum {number}\n */\nexport const shieldTypes = {\n  none: 0,\n  other: 1, // buckler\n  light: 2,\n  heavy: 3,\n  tower: 4,\n};\n\n/**\n * The types of bonus modifiers\n */\nexport const bonusTypes = {\n  untyped: \"PF1.ModifierType.untyped\",\n  untypedPerm: \"PF1.ModifierType.untypedPerm\",\n  base: \"PF1.ModifierType.base\",\n  enh: \"PF1.ModifierType.enhancement\",\n  dodge: \"PF1.ModifierType.dodge\",\n  haste: \"PF1.ModifierType.haste\",\n  inherent: \"PF1.ModifierType.inherent\",\n  deflection: \"PF1.ModifierType.deflection\",\n  morale: \"PF1.ModifierType.morale\",\n  luck: \"PF1.ModifierType.luck\",\n  sacred: \"PF1.ModifierType.sacred\",\n  insight: \"PF1.ModifierType.insight\",\n  resist: \"PF1.ModifierType.resistance\",\n  profane: \"PF1.ModifierType.profane\",\n  trait: \"PF1.ModifierType.trait\",\n  racial: \"PF1.ModifierType.racial\",\n  size: \"PF1.ModifierType.size\",\n  competence: \"PF1.ModifierType.competence\",\n  circumstance: \"PF1.ModifierType.circumstance\",\n  alchemical: \"PF1.ModifierType.alchemical\",\n};\n\n/**\n * An array of stacking bonus types by their keys for {@link bonusTypes}\n */\nexport const stackingBonusTypes = [\"untyped\", \"untypedPerm\", \"dodge\", \"racial\", \"circumstance\"];\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n/**\n * Valid options for the range of abilities and spells\n */\nexport const distanceUnits = {\n  none: \"PF1.None\",\n  personal: \"PF1.Distance.personal\",\n  touch: \"PF1.Distance.touch\",\n  melee: \"PF1.Distance.melee\",\n  reach: \"PF1.Distance.reach\",\n  close: \"PF1.Distance.close\",\n  medium: \"PF1.Distance.medium\",\n  long: \"PF1.Distance.long\",\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  spec: \"PF1.Special\",\n  seeText: \"PF1.SeeText\",\n  unlimited: \"PF1.Unlimited\",\n};\n\nexport const measureUnits = {\n  ft: \"PF1.Distance.ft\",\n  mi: \"PF1.Distance.mi\",\n  m: \"PF1.Distance.m\",\n  km: \"PF1.Distance.km\",\n};\n\nexport const measureUnitsShort = {\n  ft: \"PF1.Distance.ftShort\",\n  mi: \"PF1.Distance.miShort\",\n  m: \"PF1.Distance.mShort\",\n  km: \"PF1.Distance.kmShort\",\n};\n\nexport const actorStatures = {\n  tall: \"PF1.StatureTall\",\n  long: \"PF1.StatureLong\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * This Object defines the various lengths of time which can occur in PF1\n */\nexport const timePeriods = {\n  inst: \"PF1.Time.Period.inst.Label\",\n  turn: \"PF1.Time.Period.turn.Label\",\n  round: \"PF1.Time.Period.round.Label\",\n  minute: \"PF1.Time.Period.minute.Label\",\n  hour: \"PF1.Time.Period.hour.Label\",\n  day: \"PF1.Time.Period.day.Label\",\n  month: \"PF1.Time.Period.month.Label\",\n  year: \"PF1.Time.Period.year.Label\",\n  perm: \"PF1.Time.Period.perm.Label\",\n  seeText: \"PF1.SeeText\",\n  spec: \"PF1.Special\",\n};\n\n/**\n * Short form labels for time periods, and valid options for buff durations.\n */\nexport const timePeriodsShort = {\n  turn: \"PF1.Time.Period.turn.Short\",\n  round: \"PF1.Time.Period.round.Short\",\n  minute: \"PF1.Time.Period.minute.Short\",\n  hour: \"PF1.Time.Period.hour.Short\",\n};\n\n/**\n * Duration end events\n *\n * Used by buffs to decide when exactly their duration ends.\n */\nexport const durationEndEvents = {\n  turnStart: \"PF1.Time.Turn.Start\",\n  initiative: \"PF1.Initiative\",\n  turnEnd: \"PF1.Time.Turn.End\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * This Object determines spells gained and cast per level\n */\nexport const casterProgression = {\n  castsPerDay: {\n    prepared: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 0],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 0],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 0],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2],\n        [Number.POSITIVE_INFINITY, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 1, 1],\n        [Number.POSITIVE_INFINITY, 3, 2, 2, 1],\n        [Number.POSITIVE_INFINITY, 3, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 1],\n        [Number.POSITIVE_INFINITY, 4, 3, 2, 2],\n        [Number.POSITIVE_INFINITY, 4, 3, 3, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3, 2],\n      ],\n      med: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 4],\n        [Number.POSITIVE_INFINITY, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 5],\n        [Number.POSITIVE_INFINITY, 6, 3],\n        [Number.POSITIVE_INFINITY, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 5, 3],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 4],\n        [Number.POSITIVE_INFINITY, 6, 6, 6, 6, 6, 6, 6, 6, 6],\n      ],\n    },\n    hybrid: {\n      high: [\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 4],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    prestige: {\n      low: [\n        [Number.POSITIVE_INFINITY, 1],\n        [Number.POSITIVE_INFINITY, 2],\n        [Number.POSITIVE_INFINITY, 3],\n        [Number.POSITIVE_INFINITY, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 2],\n        [Number.POSITIVE_INFINITY, 4, 3],\n        [Number.POSITIVE_INFINITY, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 4, 4, 2],\n        [Number.POSITIVE_INFINITY, 5, 4, 3],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n        [Number.POSITIVE_INFINITY, 5, 4, 3, 1],\n      ],\n    },\n  },\n  spellsPreparedPerDay: {\n    prepared: {\n      low: [\n        [null],\n        [null],\n        [null],\n        [null, 0],\n        [null, 1],\n        [null, 1],\n        [null, 1, 0],\n        [null, 1, 1],\n        [null, 2, 1],\n        [null, 2, 1, 0],\n        [null, 2, 1, 1],\n        [null, 2, 2, 1],\n        [null, 3, 2, 1, 0],\n        [null, 3, 2, 1, 1],\n        [null, 3, 2, 2, 1],\n        [null, 3, 3, 2, 1],\n        [null, 4, 3, 2, 1],\n        [null, 4, 3, 2, 2],\n        [null, 4, 3, 3, 2],\n        [null, 4, 4, 3, 3],\n      ],\n      med: [\n        [3, 1],\n        [4, 2],\n        [4, 3],\n        [4, 3, 1],\n        [4, 4, 2],\n        [5, 4, 3],\n        [5, 4, 3, 1],\n        [5, 4, 4, 2],\n        [5, 5, 4, 3],\n        [5, 5, 4, 3, 1],\n        [5, 5, 4, 4, 2],\n        [5, 5, 5, 4, 3],\n        [5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 4, 3, 1],\n        [5, 5, 5, 5, 4, 4, 2],\n        [5, 5, 5, 5, 5, 4, 3],\n        [5, 5, 5, 5, 5, 5, 4],\n        [5, 5, 5, 5, 5, 5, 5],\n      ],\n      high: [\n        [3, 1],\n        [4, 2],\n        [4, 2, 1],\n        [4, 3, 2],\n        [4, 3, 2, 1],\n        [4, 3, 3, 2],\n        [4, 4, 3, 2, 1],\n        [4, 4, 3, 3, 2],\n        [4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 3, 2, 1],\n        [4, 4, 4, 4, 4, 4, 4, 3, 3, 2],\n        [4, 4, 4, 4, 4, 4, 4, 4, 3, 3],\n        [4, 4, 4, 4, 4, 4, 4, 4, 4, 4],\n      ],\n    },\n    spontaneous: {\n      low: [\n        [2],\n        [3],\n        [4],\n        [4, 2],\n        [5, 3],\n        [5, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 5, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 6, 5, 4],\n        [6, 6, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 5, 4],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n        [6, 6, 6, 6, 5],\n      ],\n      med: [\n        [4, 2],\n        [5, 3],\n        [6, 4],\n        [6, 4, 2],\n        [6, 4, 3],\n        [6, 4, 4],\n        [6, 5, 4, 2],\n        [6, 5, 4, 3],\n        [6, 5, 4, 4],\n        [6, 5, 5, 4, 2],\n        [6, 6, 5, 4, 3],\n        [6, 6, 5, 4, 4],\n        [6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 5, 5, 4, 2],\n        [6, 6, 6, 6, 5, 4, 3],\n        [6, 6, 6, 6, 5, 4, 4],\n        [6, 6, 6, 6, 5, 5, 4],\n        [6, 6, 6, 6, 6, 5, 5],\n      ],\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    hybrid: {\n      high: [\n        [4, 2],\n        [5, 2],\n        [5, 3],\n        [6, 3, 1],\n        [6, 4, 2],\n        [7, 4, 2, 1],\n        [7, 5, 3, 2],\n        [8, 5, 3, 2, 1],\n        [8, 5, 4, 3, 2],\n        [9, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 3, 2],\n        [9, 5, 5, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 2, 1],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 2],\n        [9, 5, 5, 4, 4, 4, 3, 3, 3, 3],\n      ],\n    },\n    prestige: {\n      low: [\n        [null, 2],\n        [null, 3],\n        [null, 4],\n        [null, 4, 2],\n        [null, 4, 3],\n        [null, 4, 4],\n        [null, 5, 4, 2],\n        [null, 5, 4, 3],\n        [null, 5, 4, 4],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n        [null, 5, 5, 4, 2],\n      ],\n    },\n  },\n};\n\n/* -------------------------------------------- */\n\n/**\n * Character senses options\n */\nexport const senses = {\n  bs: \"PF1.Sense.blindsight\",\n  bse: \"PF1.Sense.blindsense\",\n  dv: \"PF1.Sense.darkvision\",\n  ts: \"PF1.Sense.tremorsense\",\n  tr: \"PF1.Sense.trueseeing\",\n  ll: \"PF1.Sense.lowlight\",\n  si: \"PF1.Sense.seeInvis\",\n  sid: \"PF1.Sense.seeInDark\",\n  sc: \"PF1.Sense.scent\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * The set of skill which can be trained in PF1\n */\nexport const skills = {\n  acr: \"PF1.SkillAcr\",\n  apr: \"PF1.SkillApr\",\n  art: \"PF1.SkillArt\",\n  blf: \"PF1.SkillBlf\",\n  clm: \"PF1.SkillClm\",\n  crf: \"PF1.SkillCrf\",\n  dip: \"PF1.SkillDip\",\n  dev: \"PF1.SkillDev\",\n  dis: \"PF1.SkillDis\",\n  esc: \"PF1.SkillEsc\",\n  fly: \"PF1.SkillFly\",\n  han: \"PF1.SkillHan\",\n  hea: \"PF1.SkillHea\",\n  int: \"PF1.SkillInt\",\n  kar: \"PF1.SkillKAr\",\n  kdu: \"PF1.SkillKDu\",\n  ken: \"PF1.SkillKEn\",\n  kge: \"PF1.SkillKGe\",\n  khi: \"PF1.SkillKHi\",\n  klo: \"PF1.SkillKLo\",\n  kna: \"PF1.SkillKNa\",\n  kno: \"PF1.SkillKNo\",\n  kpl: \"PF1.SkillKPl\",\n  kre: \"PF1.SkillKRe\",\n  lin: \"PF1.SkillLin\",\n  lor: \"PF1.SkillLor\",\n  per: \"PF1.SkillPer\",\n  prf: \"PF1.SkillPrf\",\n  pro: \"PF1.SkillPro\",\n  rid: \"PF1.SkillRid\",\n  sen: \"PF1.SkillSen\",\n  slt: \"PF1.SkillSlt\",\n  spl: \"PF1.SkillSpl\",\n  ste: \"PF1.SkillSte\",\n  sur: \"PF1.SkillSur\",\n  swm: \"PF1.SkillSwm\",\n  umd: \"PF1.SkillUMD\",\n};\n\n/**\n * Compendium journal entries containing details about {@link skills}\n */\nexport const skillCompendiumEntries = {\n  acr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.gGfJO90ZuRT4sZ9X\",\n  apr: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.QGxoGsSIAOoe5dTW\",\n  art: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.vH2PLto0QPzkG4io\",\n  blf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.kRK5XwVBvcMi35w2\",\n  clm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ZAwjVOTwsBpZRgw4\",\n  crf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.3E8pxbjI8MD3JbfQ\",\n  dip: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.uB9Fy36RUjibxqvt\",\n  dev: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.cSdUATLHBFfw3v4s\",\n  dis: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xg25z3GIpS590NDW\",\n  esc: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.DTNlXXg77s3178WJ\",\n  fly: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.iH69GIwm8BjecrPN\",\n  han: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.IrVgSeMcAM8rAh2B\",\n  hea: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.nHbYSOoe1SzqEO9w\",\n  int: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.KNn8uxHu23phKC0y\",\n  kar: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kdu: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  ken: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kge: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  khi: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  klo: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kna: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kno: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kpl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  kre: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.BWeqgXSZvUQl68vt\",\n  lin: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.SqLm3Deag2FpP8ty\",\n  lor: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.rExcBHs5GTiWLlo8\",\n  per: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.2h6hz5AkTDxKPFxr\",\n  prf: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.emzBKDFNkNnC7N8u\",\n  pro: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.224EaK0K72NhCeRi\",\n  rid: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xQbTtefpEfEaOYo7\",\n  sen: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.ka0VQGItdrWw3paO\",\n  slt: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.joza8kAIiImrPft7\",\n  spl: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.VRD7jxiIAxKPt6EF\",\n  ste: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.wRWHk7tCUHR99PzD\",\n  sur: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.pLdYavy4nssLEoGV\",\n  swm: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.xhmDhOXuBbfVcD0Q\",\n  umd: \"Compendium.pf1.pf1e-rules.x175kVqUfLGPt8tC.JournalEntryPage.A8j7nF6qHwuGEC2E\",\n};\n\n/**\n * An array of {@link skills} that can have arbitrary subskills\n */\nexport const arbitrarySkills = [\"art\", \"crf\", \"lor\", \"prf\", \"pro\"];\n\n/**\n * An array of {@link skills} that are considered background skills.\n */\nexport const backgroundSkills = [\n  \"apr\",\n  \"art\",\n  \"crf\",\n  \"han\",\n  \"ken\",\n  \"kge\",\n  \"khi\",\n  \"kno\",\n  \"lin\",\n  \"lor\",\n  \"prf\",\n  \"pro\",\n  \"slt\",\n];\n\n/**\n * Array of skills that are only shown with background skills optional rule enabled.\n */\nexport const backgroundOnlySkills = [\"lor\", \"art\"];\n\n/*\n * Number of background skills per level gained from valid classes.\n */\nexport const backgroundSkillsPerLevel = 2;\n\n/**\n * Valid class types to grant background skills.\n */\nexport const backgroundSkillClasses = [\"base\", \"prestige\"];\n\n/**\n * Valid class types to grant favored class bonuses.\n *\n * @remarks\n * - Prestige is included due to Favored Prestige Class feat.\n * - NPC is also valid as it is not omitted by any rules about favored class.\n * - Only mythic paths and racial HD are omitted.\n * @see https://www.aonprd.com/Rules.aspx?ID=344\n */\nexport const favoredClassTypes = [\"base\", \"prestige\", \"npc\"];\n\n/**\n * Bonus modifier granted to class skills.\n */\nexport const classSkillBonus = 3;\n\n/* -------------------------------------------- */\n\nexport const classCasterType = {\n  sorcerer: \"high\",\n  wizard: \"high\",\n  cleric: \"high\",\n  oracle: \"high\",\n  druid: \"high\",\n  psychic: \"high\",\n  shaman: \"high\",\n  witch: \"high\",\n  alchemist: \"med\",\n  bard: \"med\",\n  hunter: \"med\",\n  inquisitor: \"med\",\n  investigator: \"med\",\n  magus: \"med\",\n  mesmerist: \"med\",\n  occultist: \"med\",\n  skald: \"med\",\n  spiritualist: \"med\",\n  summoner: \"med\",\n  \"unchained Summoner\": \"med\",\n  antipaladin: \"low\",\n  bloodrager: \"low\",\n  medium: \"low\",\n  paladin: \"low\",\n  ranger: \"low\",\n};\n\nexport const spellcasting = {\n  type: {\n    spontaneous: \"PF1.SpellPrepSpontaneous\",\n    prepared: \"PF1.SpellPrepPrepared\",\n    hybrid: \"PF1.Arcanist\",\n  },\n  spells: {\n    arcane: \"PF1.Spellcasting.Type.Arcane\",\n    divine: \"PF1.Spellcasting.Type.Divine\",\n    psychic: \"PF1.Spellcasting.Type.Psychic\",\n    alchemy: \"PF1.Spellcasting.Type.Alchemy\",\n  },\n};\n\nexport const spellDescriptors = {\n  acid: \"PF1.SpellDescriptors.acid\",\n  air: \"PF1.SpellDescriptors.air\",\n  chaotic: \"PF1.SpellDescriptors.chaotic\",\n  cold: \"PF1.SpellDescriptors.cold\",\n  curse: \"PF1.SpellDescriptors.curse\",\n  darkness: \"PF1.SpellDescriptors.darkness\",\n  death: \"PF1.SpellDescriptors.death\",\n  disease: \"PF1.SpellDescriptors.disease\",\n  draconic: \"PF1.SpellDescriptors.draconic\",\n  earth: \"PF1.SpellDescriptors.earth\",\n  electricity: \"PF1.SpellDescriptors.electricity\",\n  emotion: \"PF1.SpellDescriptors.emotion\",\n  evil: \"PF1.SpellDescriptors.evil\",\n  fear: \"PF1.SpellDescriptors.fear\",\n  fire: \"PF1.SpellDescriptors.fire\",\n  force: \"PF1.SpellDescriptors.force\",\n  good: \"PF1.SpellDescriptors.good\",\n  languageDependent: \"PF1.SpellDescriptors.languageDependent\",\n  lawful: \"PF1.SpellDescriptors.lawful\",\n  light: \"PF1.SpellDescriptors.light\",\n  meditative: \"PF1.SpellDescriptors.meditative\",\n  mindAffecting: \"PF1.SpellDescriptors.mindAffecting\",\n  pain: \"PF1.SpellDescriptors.pain\",\n  poison: \"PF1.SpellDescriptors.poison\",\n  ruse: \"PF1.SpellDescriptors.ruse\",\n  shadow: \"PF1.SpellDescriptors.shadow\",\n  sonic: \"PF1.SpellDescriptors.sonic\",\n  water: \"PF1.SpellDescriptors.water\",\n};\n\nexport const magicAuraByLevel = {\n  spell: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 4 },\n    { power: \"strong\", level: 7 },\n    { power: \"overwhelming\", level: 10 },\n  ],\n  item: [\n    { power: \"faint\", level: 1 },\n    { power: \"moderate\", level: 6 },\n    { power: \"strong\", level: 12 },\n    { power: \"overwhelming\", level: 21 },\n  ],\n};\n\nexport const auraStrengths = {\n  1: \"PF1.Aura.Strength.faint\",\n  2: \"PF1.Aura.Strength.moderate\",\n  3: \"PF1.Aura.Strength.strong\",\n  4: \"PF1.Aura.Strength.overwhelming\",\n};\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n\n// Weapon Types\nexport const weaponTypes = {\n  simple: {\n    _label: \"PF1.WeaponTypeSimple\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  martial: {\n    _label: \"PF1.WeaponTypeMartial\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  exotic: {\n    _label: \"PF1.WeaponTypeExotic\",\n    light: \"PF1.WeaponSubtypeLight\",\n    \"1h\": \"PF1.WeaponSubtypeOneHanded\",\n    \"2h\": \"PF1.WeaponSubtypeTwoHanded\",\n    ranged: \"PF1.WeaponSubtypeRanged\",\n  },\n  misc: {\n    _label: \"PF1.Misc\",\n    splash: \"PF1.WeaponTypeSplash\",\n    other: \"PF1.Other\",\n  },\n};\n\n// Weapon hold types\nexport const weaponHoldTypes = {\n  normal: \"PF1.WeaponHoldTypeNormal\",\n  \"2h\": \"PF1.WeaponHoldTypeTwoHanded\",\n  oh: \"PF1.WeaponHoldTypeOffhand\",\n};\n\n/**\n * Weapon groups that a weapon can belong to\n */\nexport const weaponGroups = {\n  axes: \"PF1.WeaponGroup.axes\",\n  bladesHeavy: \"PF1.WeaponGroup.bladesHeavy\",\n  bladesLight: \"PF1.WeaponGroup.bladesLight\",\n  bows: \"PF1.WeaponGroup.bows\",\n  close: \"PF1.WeaponGroup.close\",\n  crossbows: \"PF1.WeaponGroup.crossbows\",\n  double: \"PF1.WeaponGroup.double\",\n  firearms: \"PF1.WeaponGroup.firearms\",\n  flails: \"PF1.WeaponGroup.flails\",\n  hammers: \"PF1.WeaponGroup.hammers\",\n  monk: \"PF1.WeaponGroup.monk\",\n  natural: \"PF1.WeaponGroup.natural\",\n  polearms: \"PF1.WeaponGroup.polearms\",\n  siegeEngines: \"PF1.WeaponGroup.siegeEngines\",\n  spears: \"PF1.WeaponGroup.spears\",\n  thrown: \"PF1.WeaponGroup.thrown\",\n  tribal: \"PF1.WeaponGroup.tribal\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Define the set of weapon property flags which can exist on a weapon\n */\nexport const weaponProperties = {\n  ato: \"PF1.WeaponProperty.Automatic\",\n  blc: \"PF1.WeaponProperty.Blocking\",\n  brc: \"PF1.WeaponProperty.Brace\",\n  dea: \"PF1.WeaponProperty.Deadly\",\n  dst: \"PF1.WeaponProperty.Distracting\",\n  dbl: \"PF1.WeaponProperty.Double\",\n  dis: \"PF1.WeaponProperty.Disarm\",\n  fin: \"PF1.WeaponProperty.Finesse\",\n  frg: \"PF1.WeaponProperty.Fragile\",\n  grp: \"PF1.WeaponProperty.Grapple\",\n  imp: \"PF1.WeaponProperty.Improvised\",\n  mnk: \"PF1.WeaponProperty.Monk\",\n  nnl: \"PF1.WeaponProperty.NonLethal\",\n  prf: \"PF1.WeaponProperty.Performance\",\n  rch: \"PF1.WeaponProperty.Reach\",\n  sct: \"PF1.WeaponProperty.Scatter\",\n  sma: \"PF1.WeaponProperty.SemiAutomatic\",\n  slf: \"PF1.WeaponProperty.SlowFiring\",\n  snd: \"PF1.WeaponProperty.Sunder\",\n  spc: \"PF1.WeaponProperty.Special\",\n  thr: \"PF1.WeaponProperty.Thrown\",\n  trp: \"PF1.WeaponProperty.Trip\",\n};\n\n/**\n * The components required for casting a spell\n */\nexport const spellComponents = {\n  verbal: \"PF1.SpellComponents.Type.verbal.Abbr\",\n  somatic: \"PF1.SpellComponents.Type.somatic.Abbr\",\n  thought: \"PF1.SpellComponents.Type.thought.Abbr\",\n  emotion: \"PF1.SpellComponents.Type.emotion.Abbr\",\n  material: \"PF1.SpellComponents.Type.material.Abbr\",\n  focus: \"PF1.SpellComponents.Type.focus.Abbr\",\n  divineFocus: \"PF1.SpellComponents.Type.divineFocus.Abbr\",\n};\n\n/**\n * Spell schools\n */\nexport const spellSchools = {\n  abj: \"PF1.SpellSchools.abj\",\n  con: \"PF1.SpellSchools.con\",\n  div: \"PF1.SpellSchools.div\",\n  enc: \"PF1.SpellSchools.enc\",\n  evo: \"PF1.SpellSchools.evo\",\n  ill: \"PF1.SpellSchools.ill\",\n  nec: \"PF1.SpellSchools.nec\",\n  trs: \"PF1.SpellSchools.tra\",\n  uni: \"PF1.SpellSchools.uni\",\n  misc: \"PF1.Misc\",\n};\n\n/**\n * Spell levels\n */\nexport const spellLevels = {\n  0: \"PF1.SpellLevels.0\",\n  1: \"PF1.SpellLevels.1\",\n  2: \"PF1.SpellLevels.2\",\n  3: \"PF1.SpellLevels.3\",\n  4: \"PF1.SpellLevels.4\",\n  5: \"PF1.SpellLevels.5\",\n  6: \"PF1.SpellLevels.6\",\n  7: \"PF1.SpellLevels.7\",\n  8: \"PF1.SpellLevels.8\",\n  9: \"PF1.SpellLevels.9\",\n};\n\n/* -------------------------------------------- */\n\n/**\n * Condition types for condition immunities and resistances selection\n */\nexport const conditionTypes = {\n  bleed: \"PF1.Condition.bleed\",\n  blind: \"PF1.Condition.blind\",\n  confuse: \"PF1.Condition.confused\",\n  daze: \"PF1.Condition.dazed\",\n  dazzle: \"PF1.Condition.dazzled\",\n  deaf: \"PF1.Condition.deaf\",\n  deathEffects: \"PF1.Condition.deathEffects\",\n  disease: \"PF1.Condition.disease\",\n  energyDrain: \"PF1.Condition.energyDrain\",\n  fatigue: \"PF1.Condition.fatigued\",\n  fear: \"PF1.Condition.fear\",\n  mindAffecting: \"PF1.Condition.mindAffecting\",\n  poison: \"PF1.Condition.poison\",\n  sicken: \"PF1.Condition.sickened\",\n  paralyze: \"PF1.Condition.paralyzed\",\n  petrify: \"PF1.Condition.petrified\",\n  polymorph: \"PF1.Condition.polymorph\",\n  stun: \"PF1.Condition.stunned\",\n  sleep: \"PF1.Condition.sleep\",\n};\n\nexport const buffTypes = {\n  temp: \"PF1.Subtypes.Item.buff.temp.Single\",\n  spell: \"PF1.Subtypes.Item.buff.spell.Single\",\n  feat: \"PF1.Subtypes.Item.buff.feat.Single\",\n  perm: \"PF1.Subtypes.Item.buff.perm.Single\",\n  item: \"PF1.Subtypes.Item.buff.item.Single\",\n  misc: \"PF1.Subtypes.Item.buff.misc.Single\",\n};\n\n/**\n * Formula for determining extra attacks for BAB iteratives\n */\nexport const iterativeExtraAttacks = \"min(3, ceil(@bab / 5) - 1)\";\n\n/**\n * Formula for determining attack modifier for BAB iteratives\n */\nexport const iterativeAttackModifier = \"@attackCount * -5\";\n\n/**\n * Extra Attacks configurations\n *\n * @example\n * Custom additional option\n * ```js\n * turboMonk: {\n *   label: \"Turbo Monk\",\n *   iteratives: true,\n *   count: \"floor(@bab / 3)\",\n *   bonus: \"@attackCount * -2\",\n *   manual: true,\n * }\n * ```\n */\nexport const extraAttacks = {\n  // Standard: BAB iteratives\n  standard: {\n    label: \"PF1.ExtraAttacks.Standard\",\n    iteratives: true,\n    manual: false,\n    formula: false,\n  },\n  // Advanced: BAB iteratives + manual extra attacks and custom formula\n  advanced: {\n    label: \"PF1.ExtraAttacks.Advanced\",\n    iteratives: true,\n    manual: true,\n    formula: true,\n  },\n  // Chained Monk's Flurry of Blows\n  // Requires BAB override\n  // TODO: Make attack handling allow flurries to use normal iteratives.\n  flurry: {\n    label: \"PF1.ExtraAttacks.Flurry\",\n    count: \"min(4, ceil(@bab / 5)) + ceil((@class.level - 7) / 7)\",\n    bonus: \"-(floor((@attackCount+1) / 2) * 5 + @fullAttack * 2)\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    iteratives: false,\n    manual: false,\n    formula: false,\n  },\n  // Unchained Monk's Flurry of Blows\n  unflurry: {\n    label: \"PF1.ExtraAttacks.UnFlurry\",\n    count: \"min(4, ceil(@bab / 5)) + floor((@class.level + 9) / 10)\",\n    bonus: \"max(0, @attackCount - floor((@class.level + 9) / 10)) * -5\",\n    flavor: \"PF1.ExtraAttacks.FlurryFlavor\",\n    iteratives: false,\n    manual: false,\n    formula: false,\n  },\n  // Custom: No BAB iteratives but with manual extra attacks and custom formula\n  custom: {\n    label: \"PF1.ExtraAttacks.Custom\",\n    iteratives: false,\n    manual: true,\n    formula: true,\n  },\n};\n\n/**\n * Dictionaries of conditional modifier targets, each with a label and sub-categories\n */\nexport const conditionalTargets = {\n  attack: {\n    _label: \"PF1.AttackRollPlural\",\n    allAttack: \"PF1.All\",\n    hasteAttack: \"PF1.Haste\",\n    rapidShotAttack: \"PF1.RapidShot\",\n  },\n  damage: {\n    _label: \"PF1.Damage\",\n    allDamage: \"PF1.All\",\n    hasteDamage: \"PF1.Haste\",\n    rapidShotDamage: \"PF1.RapidShot\",\n  },\n  size: {\n    _label: \"PF1.Size\",\n  },\n  critMult: {\n    _label: \"PF1.CriticalMultiplier\",\n  },\n  effect: {\n    _label: \"PF1.Effects\",\n  },\n  misc: {\n    _label: \"PF1.MiscShort\",\n  },\n};\n\n/**\n * Dictionaries of change/buff targets, each with a label and a category it belongs to,\n * as well as a sort value that determines this buffTarget's priority when Changes are applied.\n */\nexport const buffTargets = /** @type {const} */ ({\n  acpA: { label: \"PF1.ACPArmor\", category: \"misc\", sort: 10000 },\n  acpS: { label: \"PF1.ACPShield\", category: \"misc\", sort: 11000 },\n  mDexA: { label: \"PF1.MaxDexArmor\", category: \"misc\", sort: 20000 },\n  mDexS: { label: \"PF1.MaxDexShield\", category: \"misc\", sort: 21000 },\n  reach: { label: \"PF1.BuffTarReach\", category: \"misc\", sort: 50000 },\n  str: { label: \"PF1.AbilityStr\", category: \"ability\", sort: 30000 },\n  dex: { label: \"PF1.AbilityDex\", category: \"ability\", sort: 31000 },\n  con: { label: \"PF1.AbilityCon\", category: \"ability\", sort: 32000 },\n  int: { label: \"PF1.AbilityInt\", category: \"ability\", sort: 33000 },\n  wis: { label: \"PF1.AbilityWis\", category: \"ability\", sort: 34000 },\n  cha: { label: \"PF1.AbilityCha\", category: \"ability\", sort: 35000 },\n  strMod: { label: \"PF1.AbilityStrMod\", category: \"ability\", sort: 40000 },\n  dexMod: { label: \"PF1.AbilityDexMod\", category: \"ability\", sort: 41000 },\n  conMod: { label: \"PF1.AbilityConMod\", category: \"ability\", sort: 42000 },\n  intMod: { label: \"PF1.AbilityIntMod\", category: \"ability\", sort: 43000 },\n  wisMod: { label: \"PF1.AbilityWisMod\", category: \"ability\", sort: 44000 },\n  chaMod: { label: \"PF1.AbilityChaMod\", category: \"ability\", sort: 45000 },\n  strPen: { label: \"PF1.AbilityStrPen\", category: \"ability\", sort: 50000 },\n  dexPen: { label: \"PF1.AbilityDexPen\", category: \"ability\", sort: 51000 },\n  conPen: { label: \"PF1.AbilityConPen\", category: \"ability\", sort: 52000 },\n  intPen: { label: \"PF1.AbilityIntPen\", category: \"ability\", sort: 53000 },\n  wisPen: { label: \"PF1.AbilityWisPen\", category: \"ability\", sort: 54000 },\n  chaPen: { label: \"PF1.AbilityChaPen\", category: \"ability\", sort: 55000 },\n  skills: { label: \"PF1.BuffTarAllSkills\", category: \"skills\", sort: 50000 },\n  unskills: { label: \"PF1.BuffTarUntrainedSkills\", category: \"skills\", sort: 100000 },\n  carryStr: { label: \"PF1.CarryStrength\", category: \"misc\", sort: 60000 },\n  carryMult: { label: \"PF1.CarryMultiplier\", category: \"misc\", sort: 61000 },\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\", sort: 70000 },\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\", sort: 71000 },\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\", sort: 72000 },\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\", sort: 73000 },\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\", sort: 74000 },\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\", sort: 75000 },\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\", sort: 80000 },\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\", sort: 81000 },\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\", sort: 82000 },\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\", sort: 83000 },\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\", sort: 84000 },\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\", sort: 85000 },\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\", sort: 86000 },\n  landSpeed: { label: \"PF1.Movement.Mode.land\", category: \"speed\", sort: 90000 },\n  climbSpeed: { label: \"PF1.Movement.Mode.climb\", category: \"speed\", sort: 91000 },\n  swimSpeed: { label: \"PF1.Movement.Mode.swim\", category: \"speed\", sort: 92000 },\n  burrowSpeed: { label: \"PF1.Movement.Mode.burrow\", category: \"speed\", sort: 93000 },\n  flySpeed: { label: \"PF1.Movement.Mode.fly\", category: \"speed\", sort: 94000 },\n  allSpeeds: { label: \"PF1.BuffTarAllSpeeds\", category: \"speed\", sort: 95000 },\n  ac: { label: \"PF1.BuffTarACGeneric\", category: \"defense\", sort: 100000 },\n  aac: { label: \"PF1.BuffTarACArmor\", category: \"defense\", sort: 101000 },\n  sac: { label: \"PF1.BuffTarACShield\", category: \"defense\", sort: 102000 },\n  nac: { label: \"PF1.BuffTarACNatural\", category: \"defense\", sort: 103000 },\n  tac: { label: \"PF1.BuffTarACTouch\", category: \"defense\", sort: 104000 },\n  ffac: { label: \"PF1.BuffTarACFlatFooted\", category: \"defense\", sort: 105000 },\n  bab: { label: \"PF1.BAB\", category: \"attack\", sort: 111000 },\n  \"~attackCore\": { label: \"\", category: \"attack\", sort: 112000 },\n  attack: { label: \"PF1.BuffTarAllAttackRolls\", category: \"attack\", sort: 110000 },\n  mattack: { label: \"PF1.BuffTarMeleeAttack\", category: \"attack\", sort: 111000 },\n  nattack: { label: \"PF1.BuffTarNaturalAttack\", category: \"attack\", sort: 112000 },\n  rattack: { label: \"PF1.BuffTarRangedAttack\", category: \"attack\", sort: 113000 },\n  tattack: { label: \"PF1.BuffTarThrownAttack\", category: \"attack\", sort: 114000 },\n  damage: { label: \"PF1.BuffTarAllDamageRolls\", category: \"damage\", sort: 120000 },\n  wdamage: { label: \"PF1.WeaponDamage\", category: \"damage\", sort: 121000 },\n  mwdamage: { label: \"PF1.MeleeWeaponDamage\", category: \"damage\", sort: 121100 },\n  rwdamage: { label: \"PF1.RangedWeaponDamage\", category: \"damage\", sort: 121200 },\n  twdamage: { label: \"PF1.ThrownWeaponDamage\", category: \"damage\", sort: 121300 },\n  rdamage: { label: \"PF1.AllRangedDamage\", category: \"damage\", sort: 122100 },\n  mdamage: { label: \"PF1.AllMeleeDamage\", category: \"damage\", sort: 122200 },\n  ndamage: { label: \"PF1.NaturalAttackDamage\", category: \"damage\", sort: 123000 },\n  sdamage: { label: \"PF1.SpellDamage\", category: \"damage\", sort: 124000 },\n  critConfirm: { label: \"PF1.CriticalConfirmation\", category: \"attack\", sort: 130000 },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\", sort: 140000 },\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\", sort: 141000 },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\", sort: 142000 },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\", sort: 143000 },\n  cmb: { label: \"PF1.CMB\", category: \"attack\", sort: 150000 },\n  cmd: { label: \"PF1.CMD\", category: \"defense\", sort: 151000 },\n  ffcmd: { label: \"PF1.CMDFlatFooted\", category: \"defense\", sort: 152000 },\n  init: { label: \"PF1.Initiative\", category: \"misc\", sort: 160000 },\n  mhp: { label: \"PF1.HitPoints\", category: \"health\", sort: 170000 },\n  wounds: { label: \"PF1.Wounds\", category: \"health\", sort: 180000 },\n  vigor: { label: \"PF1.Vigor\", category: \"health\", sort: 181000 },\n  spellResist: { label: \"PF1.SpellResistance\", category: \"defense\", sort: 190000 },\n  bonusFeats: { label: \"PF1.BuffTarBonusFeats\", category: \"misc\", sort: 200000 },\n  bonusSkillRanks: { label: \"PF1.BuffTarBonusSkillRanks\", category: \"skills\", sort: 210000 },\n  concentration: { label: \"PF1.Concentration\", category: \"spell\", sort: 220000 },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\", sort: 230000 },\n  dc: { label: \"PF1.SpellDC\", category: \"spell\", sort: 240000 },\n});\n\n/**\n * Categories grouping related {@link BuffTarget change targets} in the selector UI.\n */\nexport const buffTargetCategories = /** @type {const} */ ({\n  defense: { label: \"PF1.Defense\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  attack: { label: \"PF1.Attack\" },\n  damage: { label: \"PF1.Damage\" },\n  ability: { label: \"PF1.AbilityScore\" },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\" },\n  health: { label: \"PF1.Health\" },\n  skills: { label: \"PF1.Skills\" },\n  skill: { label: \"PF1.BuffTarSpecificSkill\" },\n  speed: { label: \"PF1.Movement.Speed\" },\n  spell: { label: \"PF1.BuffTarSpells\" },\n  misc: { label: \"PF1.Misc\" },\n});\n\nexport const contextNoteTargets = {\n  attack: { label: \"PF1.AttackRollPlural\", category: \"attacks\" },\n  critical: { label: \"PF1.CriticalHitPlural\", category: \"attacks\" },\n  effect: { label: \"PF1.Effects\", category: \"attacks\" },\n  melee: { label: \"PF1.Melee\", category: \"attacks\" },\n  meleeWeapon: { label: \"PF1.MeleeWeapon\", category: \"attacks\" },\n  meleeSpell: { label: \"PF1.MeleeSpell\", category: \"attacks\" },\n  ranged: { label: \"PF1.Ranged\", category: \"attacks\" },\n  rangedWeapon: { label: \"PF1.RangedWeapon\", category: \"attacks\" },\n  rangedSpell: { label: \"PF1.RangedSpell\", category: \"attacks\" },\n  cmb: { label: \"PF1.CMB\", category: \"attacks\" },\n  allSavingThrows: { label: \"PF1.BuffTarAllSavingThrows\", category: \"savingThrows\" },\n  fort: { label: \"PF1.SavingThrowFort\", category: \"savingThrows\" },\n  ref: { label: \"PF1.SavingThrowRef\", category: \"savingThrows\" },\n  will: { label: \"PF1.SavingThrowWill\", category: \"savingThrows\" },\n  skills: { label: \"PF1.BuffTarAllSkills\", category: \"skills\" },\n  strSkills: { label: \"PF1.BuffTarStrSkills\", category: \"skills\" },\n  dexSkills: { label: \"PF1.BuffTarDexSkills\", category: \"skills\" },\n  conSkills: { label: \"PF1.BuffTarConSkills\", category: \"skills\" },\n  intSkills: { label: \"PF1.BuffTarIntSkills\", category: \"skills\" },\n  wisSkills: { label: \"PF1.BuffTarWisSkills\", category: \"skills\" },\n  chaSkills: { label: \"PF1.BuffTarChaSkills\", category: \"skills\" },\n  allChecks: { label: \"PF1.BuffTarAllAbilityChecks\", category: \"abilityChecks\" },\n  strChecks: { label: \"PF1.BuffTarStrChecks\", category: \"abilityChecks\" },\n  dexChecks: { label: \"PF1.BuffTarDexChecks\", category: \"abilityChecks\" },\n  conChecks: { label: \"PF1.BuffTarConChecks\", category: \"abilityChecks\" },\n  intChecks: { label: \"PF1.BuffTarIntChecks\", category: \"abilityChecks\" },\n  wisChecks: { label: \"PF1.BuffTarWisChecks\", category: \"abilityChecks\" },\n  chaChecks: { label: \"PF1.BuffTarChaChecks\", category: \"abilityChecks\" },\n  spellEffect: { label: \"PF1.BuffTarSpellEffect\", category: \"spell\" },\n  concentration: { label: \"PF1.Concentration\", category: \"spell\" },\n  cl: { label: \"PF1.CasterLevel\", category: \"spell\" },\n  ac: { label: \"PF1.ACNormal\", category: \"defense\" },\n  cmd: { label: \"PF1.CMD\", category: \"defense\" },\n  sr: { label: \"PF1.SpellResistance\", category: \"defense\" },\n  init: { label: \"PF1.Initiative\", category: \"misc\" },\n};\n\nexport const contextNoteCategories = {\n  attacks: { label: \"PF1.Attacks\" },\n  savingThrows: { label: \"PF1.SavingThrowPlural\" },\n  skills: { label: \"PF1.Skills\" },\n  skill: { label: \"PF1.BuffTarSpecificSkill\" },\n  abilityChecks: { label: \"PF1.BuffTarAbilityChecks\" },\n  spell: { label: \"PF1.BuffTarSpells\" },\n  defense: { label: \"PF1.Defense\" },\n  misc: { label: \"PF1.Misc\" },\n};\n\n/**\n * A list of Golarion's languages\n */\nexport const languages = {\n  aboleth: \"PF1.Language.aboleth\",\n  abyssal: \"PF1.Language.abyssal\",\n  aklo: \"PF1.Language.aklo\",\n  ancientosiriani: \"PF1.Language.ancientosiriani\",\n  androffan: \"PF1.Language.androffan\",\n  aquan: \"PF1.Language.aquan\",\n  auran: \"PF1.Language.auran\",\n  azlanti: \"PF1.Language.azlanti\",\n  boggard: \"PF1.Language.boggard\",\n  catfolk: \"PF1.Language.catfolk\",\n  celestial: \"PF1.Language.celestial\",\n  common: \"PF1.Language.common\",\n  cyclops: \"PF1.Language.cyclops\",\n  dark: \"PF1.Language.dark\",\n  draconic: \"PF1.Language.draconic\",\n  drowsign: \"PF1.Language.drowsign\",\n  druidic: \"PF1.Language.druidic\",\n  dwarven: \"PF1.Language.dwarven\",\n  dziriak: \"PF1.Language.dziriak\",\n  elven: \"PF1.Language.elven\",\n  giant: \"PF1.Language.giant\",\n  gnoll: \"PF1.Language.gnoll\",\n  gnome: \"PF1.Language.gnome\",\n  goblin: \"PF1.Language.goblin\",\n  grippli: \"PF1.Language.grippli\",\n  halfling: \"PF1.Language.halfling\",\n  hallit: \"PF1.Language.hallit\",\n  ignan: \"PF1.Language.ignan\",\n  infernal: \"PF1.Language.infernal\",\n  jistka: \"PF1.Language.jistka\",\n  kasatha: \"PF1.Language.kasatha\",\n  kelish: \"PF1.Language.kelish\",\n  lashunta: \"PF1.Language.lashunta\",\n  munavri: \"PF1.Language.munavri\",\n  necril: \"PF1.Language.necril\",\n  orc: \"PF1.Language.orc\",\n  orvian: \"PF1.Language.orvian\",\n  osiriani: \"PF1.Language.osiriani\",\n  polyglot: \"PF1.Language.polyglot\",\n  protean: \"PF1.Language.protean\",\n  reptoid: \"PF1.Language.reptoid\",\n  rougarou: \"PF1.Language.rougarou\",\n  samsaran: \"PF1.Language.samsaran\",\n  sasquatch: \"PF1.Language.sasquatch\",\n  shadowtongue: \"PF1.Language.shadowtongue\",\n  shoanti: \"PF1.Language.shoanti\",\n  skald: \"PF1.Language.skald\",\n  sphinx: \"PF1.Language.sphinx\",\n  strix: \"PF1.Language.strix\",\n  sylvan: \"PF1.Language.sylvan\",\n  syrinx: \"PF1.Language.syrinx\",\n  taldane: \"PF1.Language.taldane\",\n  tekritanin: \"PF1.Language.tekritanin\",\n  tengu: \"PF1.Language.tengu\",\n  terran: \"PF1.Language.terran\",\n  thassilonian: \"PF1.Language.thassilonian\",\n  tien: \"PF1.Language.tien\",\n  treant: \"PF1.Language.treant\",\n  triaxian: \"PF1.Language.triaxian\",\n  undercommon: \"PF1.Language.undercommon\",\n  vanaran: \"PF1.Language.vanaran\",\n  varisian: \"PF1.Language.varisian\",\n  vegepygmy: \"PF1.Language.vegepygmy\",\n  vishkanya: \"PF1.Language.vishkanya\",\n  vudrani: \"PF1.Language.vudrani\",\n  yaddithian: \"PF1.Language.yaddithian\",\n};\n\n/**\n * Creature types\n */\nexport const creatureTypes = {\n  aberration: \"PF1.CreatureTypes.aberration\",\n  animal: \"PF1.CreatureTypes.animal\",\n  construct: \"PF1.CreatureTypes.construct\",\n  dragon: \"PF1.CreatureTypes.dragon\",\n  fey: \"PF1.CreatureTypes.fey\",\n  humanoid: \"PF1.CreatureTypes.humanoid\",\n  magicalBeast: \"PF1.CreatureTypes.magicalBeast\",\n  monstrousHumanoid: \"PF1.CreatureTypes.monstrousHumanoid\",\n  ooze: \"PF1.CreatureTypes.ooze\",\n  outsider: \"PF1.CreatureTypes.outsider\",\n  plant: \"PF1.CreatureTypes.plant\",\n  undead: \"PF1.CreatureTypes.undead\",\n  vermin: \"PF1.CreatureTypes.vermin\",\n};\n\nexport const spellRangeFormulas = {\n  close: \"25 + floor(@cl / 2) * 5\",\n  medium: \"100 + @cl * 10\",\n  long: \"400 + @cl * 40\",\n};\n\n/**\n * An array containing the damage dice progression for size adjustments\n */\nexport const sizeDie = [\n  \"1\",\n  \"1d2\",\n  \"1d3\",\n  \"1d4\",\n  \"1d6\",\n  \"1d8\",\n  \"1d10\",\n  \"2d6\",\n  \"2d8\",\n  \"3d6\",\n  \"3d8\",\n  \"4d6\",\n  \"4d8\",\n  \"6d6\",\n  \"6d8\",\n  \"8d6\",\n  \"8d8\",\n  \"12d6\",\n  \"12d8\",\n  \"16d6\",\n  \"16d8\",\n];\n\n/**\n * Arrays of Character Level XP Requirements by XP track\n */\n// prettier-ignore\nexport const CHARACTER_EXP_LEVELS = {\n  slow: [\n    0,\n    3000,\n    7500,\n    14000,\n    23000,\n    35000,\n    53000,\n    77000,\n    115000,\n    160000,\n    235000,\n    330000,\n    475000,\n    665000,\n    955000,\n    1350000,\n    1900000,\n    2700000,\n    3850000,\n    5350000,\n  ],\n  medium: [\n    0,\n    2000,\n    5000,\n    9000,\n    15000,\n    23000,\n    35000,\n    51000,\n    75000,\n    105000,\n    155000,\n    220000,\n    315000,\n    445000,\n    635000,\n    890000,\n    1300000,\n    1800000,\n    2550000,\n    3600000,\n  ],\n  fast: [\n    0,\n    1300,\n    3300,\n    6000,\n    10000,\n    15000,\n    23000,\n    34000,\n    50000,\n    71000,\n    105000,\n    145000,\n    210000,\n    295000,\n    425000,\n    600000,\n    850000,\n    1200000,\n    1700000,\n    2400000,\n  ],\n};\n\n/**\n * An array of Challenge Rating XP Levels\n */\n// prettier-ignore\nexport const CR_EXP_LEVELS = [\n  200,\n  400,\n  600,\n  800,\n  1200,\n  1600,\n  2400,\n  3200,\n  4800,\n  6400,\n  9600,\n  12800,\n  19200,\n  25600,\n  38400,\n  51200,\n  76800,\n  102400,\n  153600,\n  204800,\n  307200,\n  409600,\n  614400,\n  819200,\n  1228800,\n  1638400,\n  2457600,\n  3276800,\n  4915200,\n  6553600,\n  9830400,\n];\n\nexport const temporaryRollDataFields = {\n  actor: [\n    \"d20\",\n    \"attackBonus\",\n    \"attackCount\",\n    \"formulaicAttack\",\n    \"damageBonus\",\n    \"pointBlankBonus\",\n    \"rapidShotPenalty\",\n    \"powerAttackBonus\",\n    \"powerAttackPenalty\",\n    \"conditionals\",\n    \"concentrationBonus\",\n    \"formulaBonus\",\n    \"dcBonus\",\n    \"chargeCostBonus\",\n    \"chargeCost\",\n    \"sizeBonus\",\n    \"bonus\",\n    \"critMult\",\n    \"ablMult\",\n    \"ablDamage\",\n    \"cl\",\n    \"sl\",\n    \"class\",\n    \"ablMod\",\n    \"item\",\n    \"action\",\n    \"level\",\n    \"mod\",\n  ],\n};\n\nexport const defaultIcons = {\n  items: {\n    attack: \"icons/svg/explosion.svg\",\n    buff: \"icons/svg/ice-aura.svg\",\n    class: \"icons/svg/paralysis.svg\",\n    consumable: \"icons/svg/tankard.svg\",\n    container: \"icons/svg/barrel.svg\",\n    equipment: \"icons/svg/combat.svg\",\n    feat: \"icons/svg/book.svg\",\n    loot: \"icons/svg/item-bag.svg\",\n    race: \"icons/svg/wing.svg\",\n    spell: \"icons/svg/daze.svg\",\n    weapon: \"icons/svg/sword.svg\",\n  },\n  actors: {\n    character: \"icons/svg/mystery-man.svg\",\n    npc: \"icons/svg/terror.svg\",\n    haunt: \"icons/svg/stoned.svg\",\n    basic: \"icons/svg/castle.svg\",\n    trap: \"icons/svg/net.svg\",\n    vehicle: \"icons/svg/stone-path.svg\",\n  },\n};\n\n/**\n * Sheet item section configuration.\n */\nexport const sheetSections = {\n  classes: {\n    class: {\n      label: \"PF1.ClassPlural\",\n      filters: [{ type: \"class\" }],\n      interface: {\n        types: true,\n        level: true,\n        create: true,\n      },\n      create: { type: \"class\", system: { subType: \"base\" } },\n      sort: 1_000,\n    },\n  },\n  combat: {\n    weapon: {\n      label: \"PF1.Subtypes.Item.attack.weapon.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"weapon\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\" } },\n      sort: 1_000,\n    },\n    natural: {\n      label: \"PF1.Subtypes.Item.attack.natural.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"natural\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"natural\" } },\n      sort: 2_000,\n    },\n    ability: {\n      label: \"PF1.Subtypes.Item.attack.ability.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"ability\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"ability\" } },\n      sort: 3_000,\n    },\n    racialAbility: {\n      label: \"PF1.Subtypes.Item.attack.racialAbility.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"racialAbility\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"racialAbility\" } },\n      sort: 4_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.attack.item.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"item\" } },\n      sort: 5_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.attack.misc.Plural\",\n      filters: [{ type: \"attack\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n      },\n      create: { type: \"attack\", system: { subType: \"misc\" } },\n      sort: 6_000,\n    },\n  },\n  inventory: {\n    weapon: {\n      label: \"PF1.InventoryWeapons\",\n      filters: [{ type: \"weapon\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n      },\n      create: { type: \"weapon\" },\n      sort: 1_000,\n    },\n    armor: {\n      label: \"PF1.ArmorOrShield\",\n      filters: [{ type: \"equipment\", subTypes: [\"armor\", \"shield\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      create: { type: \"equipment\", system: { subType: \"armor\", equipmentSubtype: \"lightArmor\", slot: \"\" } },\n      sort: 2_000,\n    },\n    equipment: {\n      label: \"PF1.InventoryEquipment\",\n      filters: [{ type: \"equipment\", subTypes: [\"wondrous\", \"other\", \"clothing\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      create: { type: \"equipment\", system: { subType: \"wondrous\", slot: \"slotless\" } },\n      sort: 3_000,\n    },\n    implants: {\n      label: \"PF1.InventoryImplants\",\n      filters: [{ type: \"implant\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: true,\n        slots: true,\n      },\n      labels: {\n        equip: \"PF1.Implanted\",\n      },\n      create: { type: \"implant\", system: { subType: \"cybertech\" } },\n      sort: 4_000,\n    },\n    consumable: {\n      label: \"PF1.InventoryConsumables\",\n      filters: [{ type: \"consumable\" }],\n      interface: {\n        create: true,\n        actions: true,\n        equip: false,\n      },\n      create: { type: \"consumable\" },\n      sort: 5_000,\n    },\n    gear: {\n      label: \"PF1.Subtypes.Item.loot.gear.Plural\",\n      filters: [\n        {\n          type: \"loot\",\n          subTypes: [\"gear\", \"adventuring\", \"tool\", \"reagent\", \"remedy\", \"herb\", \"animal\", \"animalGear\"],\n        },\n      ],\n      interface: {\n        create: true,\n        actions: true,\n        equip: () => !pf1.config.unequippableLoot.includes(\"gear\"),\n      },\n      create: { type: \"loot\", system: { subType: \"gear\" } },\n      sort: 6_000,\n    },\n    ammo: {\n      label: \"PF1.Subtypes.Item.loot.ammo.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"ammo\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: () => !pf1.config.unequippableLoot.includes(\"ammo\"),\n      },\n      create: { type: \"loot\", system: { subType: \"ammo\" } },\n      sort: 8_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.loot.misc.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"misc\", \"food\", \"entertainment\", \"vehicle\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true, // Misc covers more than just misc loot\n      },\n      create: { type: \"loot\", system: { subType: \"misc\" } },\n      sort: 9_000,\n    },\n    tradeGoods: {\n      label: \"PF1.Subtypes.Item.loot.tradeGoods.Plural\",\n      filters: [{ type: \"loot\", subTypes: [\"tradeGoods\", \"treasure\"] }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: () => !pf1.config.unequippableLoot.includes(\"tradeGoods\"),\n      },\n      create: { type: \"loot\", system: { subType: \"tradeGoods\" } },\n      sort: 15_000,\n    },\n    container: {\n      label: \"PF1.InventoryContainers\",\n      filters: [{ type: \"container\" }],\n      interface: {\n        create: true,\n        actions: false,\n        equip: true,\n      },\n      create: { type: \"container\" },\n      sort: 20_000,\n    },\n  },\n  features: {\n    feat: {\n      label: \"PF1.Subtypes.Item.feat.feat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"feat\" } },\n      sort: 2_000,\n    },\n    classFeat: {\n      label: \"PF1.Subtypes.Item.feat.classFeat.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"classFeat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"classFeat\" } },\n      sort: 1_000,\n    },\n    trait: {\n      label: \"PF1.Subtypes.Item.feat.trait.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"trait\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"trait\" } },\n      sort: 3_000,\n    },\n    racial: {\n      label: \"PF1.Subtypes.Item.feat.racial.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"racial\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"racial\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.feat.misc.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n        types: true,\n      },\n      create: { type: \"feat\", system: { subType: \"misc\" } },\n      sort: 15_000,\n    },\n    template: {\n      label: \"PF1.Subtypes.Item.feat.template.Plural\",\n      filters: [{ type: \"feat\", subTypes: [\"template\"] }],\n      interface: {\n        create: true,\n        actions: false,\n      },\n      create: { type: \"feat\", system: { subType: \"template\" } },\n      sort: 6_000,\n    },\n  },\n  buffs: {\n    feat: {\n      label: \"PF1.Subtypes.Item.buff.feat.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"feat\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"feat\" } },\n      sort: 5_000,\n    },\n    item: {\n      label: \"PF1.Subtypes.Item.buff.item.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"item\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"item\" } },\n      sort: 4_000,\n    },\n    misc: {\n      label: \"PF1.Subtypes.Item.buff.misc.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"misc\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"misc\" } },\n      sort: 10_000,\n    },\n    perm: {\n      label: \"PF1.Subtypes.Item.buff.perm.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"perm\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"perm\" } },\n      sort: 6_000,\n    },\n    spell: {\n      label: \"PF1.Subtypes.Item.buff.spell.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"spell\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"spell\" } },\n      sort: 2_000,\n    },\n    temp: {\n      label: \"PF1.Subtypes.Item.buff.temp.Plural\",\n      filters: [{ type: \"buff\", subTypes: [\"temp\"] }],\n      interface: {\n        create: true,\n        actions: true,\n      },\n      create: { type: \"buff\", system: { subType: \"temp\" } },\n      sort: 1_000,\n    },\n  },\n  // Spells section is not used quite like the others\n  spells: {\n    spell: {\n      interface: {\n        create: true,\n      },\n      create: { type: \"spell\", system: { school: \"abj\" } },\n    },\n  },\n  // Lite sheet and secondary sheet items\n  combatlite: {\n    attacks: {\n      label: \"PF1.AbilityPlural\",\n      filters: [{ type: \"attack\" }],\n      interface: {\n        create: true,\n        types: true,\n      },\n      create: { type: \"attack\", system: { subType: \"weapon\" } },\n    },\n  },\n  // Misc section is only informal for sheet handling of special cases\n  misc: {\n    race: {\n      create: { type: \"race\" },\n    },\n  },\n};\n\n// Prepare sheet sections with data available later\n// ... allowing module modification also.\nHooks.once(\"setup\", () => {\n  for (const [catKey, category] of Object.entries(sheetSections)) {\n    for (const [sectKey, section] of Object.entries(category)) {\n      section.category = catKey;\n      section.id = sectKey;\n      section.path = `${catKey}.${sectKey}`;\n\n      section.label = game.i18n.localize(section.label);\n\n      const iface = section.interface;\n      if (typeof iface?.equip === \"function\") {\n        iface.equip = iface.equip();\n      }\n    }\n  }\n});\n","/**\n * Action type to change context mapping.\n *\n * @see {@link pf1.documents.item.ItemPF.prototype.getContextChanges}\n */\nexport const actionTypeToContext = {\n  mwak: \"mwdamage\",\n  twak: \"twdamage\",\n  rwak: \"rwdamage\",\n  msak: \"sdamage\",\n  rsak: \"sdamage\",\n  spellsave: \"sdamage\",\n};\n\n/**\n * Message visibility\n *\n * Message visibility mode (roll mode) to non-roll message mapping.\n *\n * This will be obsoleted by Foundry ~v13\n */\nexport const messageVisibility = {\n  publicroll: \"PF1.Chat.Visibility.Public\",\n  gmroll: \"PF1.Chat.Visibility.Private\",\n  blindroll: \"PF1.Chat.Visibility.Blind\",\n  selfroll: \"PF1.Chat.Visibility.Self\",\n};\n","import { naturalSort } from \"@utils\";\n\n/**\n * @typedef {object} FilterChoice\n * @property {string} label - The label for this choice visible to the user; will be localized\n * @property {string} key - The key for this choice used to identify it\n * @property {boolean} [active] - Whether this choice is currently active\n */\n\n/**\n * A basic filter class containing common functionality for all filters.\n *\n * Inheriting classes should define the following static properties: {@link label}, {@link indexField}.\n * Inheriting classes may define the following static properties: {@link type}.\n *\n * @abstract\n */\nexport class BaseFilter {\n  /**\n   * The label for this filter visible to the user.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static label = \"\";\n\n  /**\n   * The field this filter checks against its choices.\n   * Will also be added to the `compendiumIndexFields` of the document's `CONFIG` object.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static indexField = \"\";\n\n  /**\n   * A convenience property to define a single `type` this filter applies to.\n   *\n   * @see {@link types}\n   * @see {@link handledTypes}\n   */\n  static type = \"\";\n\n  /**\n   * The `type`s of document this filter applies to.\n   *\n   * @see {Actor#type}\n   * @see {Item#type}\n   * @see {@link handledTypes}\n   * @type {string[]}\n   */\n  static types = [];\n\n  /**\n   * The handlebars template used to render this filter.\n   *\n   * @type {string}\n   */\n  static TEMPLATE = \"\";\n\n  /**\n   * The ID of this filter used to identify it in its browser's filters.\n   *\n   * @type {string}\n   */\n  id;\n\n  /**\n   * A {@link Collection} of {@link FilterChoice}s for this filter.\n   *\n   * @type {Collection<FilterChoice> | null}\n   */\n  choices = null;\n\n  /**\n   * A reference to the {@link CompendiumBrowser} this filter is used in.\n   *\n   * @type {pf1.applications.compendiumBrowser.CompendiumBrowser | null}\n   */\n  compendiumBrowser = null;\n\n  /**\n   * @param {pf1.applications.compendiumBrowser.CompendiumBrowser} compendiumBrowser - The compendium browser this filter is used in.\n   */\n  constructor(compendiumBrowser) {\n    this.compendiumBrowser = compendiumBrowser;\n    Object.defineProperty(this, \"id\", { value: foundry.utils.randomID(), writable: false, configurable: false });\n    this.registerIndexFields();\n  }\n\n  /**\n   * The authoritative `Set` of `type`s this filter applies to.\n   *\n   * @type {Set<string>}\n   */\n  static get handledTypes() {\n    return new Set([this.type, ...this.types].filter((type) => type));\n  }\n\n  /**\n   * Whether this filter has any active choices.\n   *\n   * @type {boolean}\n   */\n  get active() {\n    return this.choices?.some((choice) => choice.active) ?? false;\n  }\n\n  /**\n   * The number of active choices.\n   *\n   * @type {number}\n   */\n  get activeChoiceCount() {\n    return this.choices?.filter((choice) => choice.active).length ?? 0;\n  }\n\n  /**\n   * Adds the index fields checked by this filter to the document's `CONFIG` object,\n   * so that {@link CompendiumCollection#getIndex} will include them.\n   */\n  registerIndexFields() {\n    if (!this.compendiumBrowser) return;\n    const documentName = this.compendiumBrowser.constructor.documentName;\n\n    // Fields with double underscore are added in the mapping process and not part of Foundry's index\n    if (this.constructor.indexField.startsWith(\"__\")) return;\n\n    const compendiumIndexFields = CONFIG[documentName]?.compendiumIndexFields;\n    if (\n      compendiumIndexFields &&\n      this.constructor.indexField &&\n      !compendiumIndexFields.includes(this.constructor.indexField)\n    ) {\n      compendiumIndexFields?.push(this.constructor.indexField);\n    }\n  }\n\n  /**\n   * Prepare the filter for use.\n   * This step expects the compendium browser to have gathered its entries.\n   */\n  setup() {\n    this.prepareChoices();\n  }\n\n  /**\n   * Prepare the choices for this filter. This is called after the compendium browser has gathered its entries.\n   * By default, this will generate a list of choices from the index field of all entries in the compendium.\n   */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection();\n  }\n\n  /**\n   * Returns whether this filter has _more than_ the given number of choices.\n   * Defaults to 1, as a single choice allows for no real filtering.\n   *\n   * @param {number} [number=1] - The number of choices to check for\n   * @returns {boolean} - Whether this filter has more than the given number of choices\n   */\n  hasChoices(number = 1) {\n    return this.choices?.size > number;\n  }\n\n  /**\n   * Reset all choices and controls to their default state (inactive)\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Check whether an entry matches this filter.\n   * If the filter is not active, this will always return true.\n   *\n   * @abstract\n   * @param {object} entry - The entry to check against this filter\n   * @returns {boolean} - Whether the entry matches this filter\n   */\n  applyFilter(entry) {}\n\n  /**\n   * Provide data necessary to render this filter.\n   * The data object generated by {@link BaseFilter#getData} contains the minimum data not only required\n   * by the filter itself, but also by the rendering {@link CompendiumBrowser}.\n   *\n   * @returns {object}} The data object for this filter\n   */\n  getData() {\n    return {\n      id: this.id,\n      template: this.constructor.TEMPLATE,\n      label: game.i18n.localize(this.constructor.label),\n      active: this.active,\n      activeCount: this.activeChoiceCount,\n      choices: this.choices?.contents ?? [],\n      field: this.constructor.indexField,\n    };\n  }\n\n  /**\n   * Activate event listeners for this filter.\n   *\n   * @abstract\n   * @param {HTMLElement} html - The rendered HTML element for this filter only\n   */\n  activateListeners(html) {}\n}\n","// https://github.com/farzher/fuzzysort v2.0.4\r\n/*\r\n  SublimeText-like Fuzzy Search\r\n\r\n  fuzzysort.single('fs', 'Fuzzy Search') // {score: -16}\r\n  fuzzysort.single('test', 'test') // {score: 0}\r\n  fuzzysort.single('doesnt exist', 'target') // null\r\n\r\n  fuzzysort.go('mr', [{file:'Monitor.cpp'}, {file:'MeshRenderer.cpp'}], {key:'file'})\r\n  // [{score:-18, obj:{file:'MeshRenderer.cpp'}}, {score:-6009, obj:{file:'Monitor.cpp'}}]\r\n\r\n  fuzzysort.go('mr', ['Monitor.cpp', 'MeshRenderer.cpp'])\r\n  // [{score: -18, target: \"MeshRenderer.cpp\"}, {score: -6009, target: \"Monitor.cpp\"}]\r\n\r\n  fuzzysort.highlight(fuzzysort.single('fs', 'Fuzzy Search'), '<b>', '</b>')\r\n  // <b>F</b>uzzy <b>S</b>earch\r\n*/\r\n\r\n// UMD (Universal Module Definition) for fuzzysort\r\n;((root, UMD) => {\r\n  if(typeof define === 'function' && define.amd) define([], UMD)\r\n  else if(typeof module === 'object' && module.exports) module.exports = UMD()\r\n  else root['fuzzysort'] = UMD()\r\n})(this, _ => {\r\n  'use strict'\r\n\r\n  var single = (search, target) => {                                                                                                                                                                                                                        if(search=='farzher')return{target:\"farzher was here (^-^*)/\",score:0,_indexes:[0]}\r\n    if(!search || !target) return NULL\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    if(!isObj(target)) target = getPrepared(target)\r\n\r\n    var searchBitflags = preparedSearch.bitflags\r\n    if((searchBitflags & target._bitflags) !== searchBitflags) return NULL\r\n\r\n    return algorithm(preparedSearch, target)\r\n  }\r\n\r\n\r\n  var go = (search, targets, options) => {                                                                                                                                                                                                                  if(search=='farzher')return[{target:\"farzher was here (^-^*)/\",score:0,_indexes:[0],obj:targets?targets[0]:NULL}]\r\n    if(!search) return options&&options.all ? all(search, targets, options) : noResults\r\n\r\n    var preparedSearch = getPreparedSearch(search)\r\n    var searchBitflags = preparedSearch.bitflags\r\n    var containsSpace  = preparedSearch.containsSpace\r\n\r\n    var threshold = options&&options.threshold || INT_MIN\r\n    var limit     = options&&options['limit']  || INT_MAX // for some reason only limit breaks when minified\r\n\r\n    var resultsLen = 0; var limitedCount = 0\r\n    var targetsLen = targets.length\r\n\r\n    // This code is copy/pasted 3 times for performance reasons [options.keys, options.key, no keys]\r\n\r\n    // options.key\r\n    if(options && options.key) {\r\n      var key = options.key\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n        var target = getValue(obj, key)\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result.score < threshold) continue\r\n\r\n        // have to clone result so duplicate targets from different obj can each reference the correct obj\r\n        result = {target:result.target, _targetLower:'', _targetLowerCodes:NULL, _nextBeginningIndexes:NULL, _bitflags:0, score:result.score, _indexes:result._indexes, obj:obj} // hidden\r\n\r\n        if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n        else {\r\n          ++limitedCount\r\n          if(result.score > q.peek().score) q.replaceTop(result)\r\n        }\r\n      }\r\n\r\n    // options.keys\r\n    } else if(options && options.keys) {\r\n      var scoreFn = options['scoreFn'] || defaultScoreFn\r\n      var keys = options.keys\r\n      var keysLen = keys.length\r\n      for(var i = 0; i < targetsLen; ++i) { var obj = targets[i]\r\n        var objResults = new Array(keysLen)\r\n        for (var keyI = 0; keyI < keysLen; ++keyI) {\r\n          var key = keys[keyI]\r\n          var target = getValue(obj, key)\r\n          if(!target) { objResults[keyI] = NULL; continue }\r\n          if(!isObj(target)) target = getPrepared(target)\r\n\r\n          if((searchBitflags & target._bitflags) !== searchBitflags) objResults[keyI] = NULL\r\n          else objResults[keyI] = algorithm(preparedSearch, target)\r\n        }\r\n        objResults.obj = obj // before scoreFn so scoreFn can use it\r\n        var score = scoreFn(objResults)\r\n        if(score === NULL) continue\r\n        if(score < threshold) continue\r\n        objResults.score = score\r\n        if(resultsLen < limit) { q.add(objResults); ++resultsLen }\r\n        else {\r\n          ++limitedCount\r\n          if(score > q.peek().score) q.replaceTop(objResults)\r\n        }\r\n      }\r\n\r\n    // no keys\r\n    } else {\r\n      for(var i = 0; i < targetsLen; ++i) { var target = targets[i]\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n\r\n        if((searchBitflags & target._bitflags) !== searchBitflags) continue\r\n        var result = algorithm(preparedSearch, target)\r\n        if(result === NULL) continue\r\n        if(result.score < threshold) continue\r\n        if(resultsLen < limit) { q.add(result); ++resultsLen }\r\n        else {\r\n          ++limitedCount\r\n          if(result.score > q.peek().score) q.replaceTop(result)\r\n        }\r\n      }\r\n    }\r\n\r\n    if(resultsLen === 0) return noResults\r\n    var results = new Array(resultsLen)\r\n    for(var i = resultsLen - 1; i >= 0; --i) results[i] = q.poll()\r\n    results.total = resultsLen + limitedCount\r\n    return results\r\n  }\r\n\r\n\r\n  var highlight = (result, hOpen, hClose) => {\r\n    if(typeof hOpen === 'function') return highlightCallback(result, hOpen)\r\n    if(result === NULL) return NULL\r\n    if(hOpen === undefined) hOpen = '<b>'\r\n    if(hClose === undefined) hClose = '</b>'\r\n    var highlighted = ''\r\n    var matchesIndex = 0\r\n    var opened = false\r\n    var target = result.target\r\n    var targetLen = target.length\r\n    var indexes = result._indexes\r\n    indexes = indexes.slice(0, indexes.len).sort((a,b)=>a-b)\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n      if(indexes[matchesIndex] === i) {\r\n        ++matchesIndex\r\n        if(!opened) { opened = true\r\n          highlighted += hOpen\r\n        }\r\n\r\n        if(matchesIndex === indexes.length) {\r\n          highlighted += char + hClose + target.substr(i+1)\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false\r\n          highlighted += hClose\r\n        }\r\n      }\r\n      highlighted += char\r\n    }\r\n\r\n    return highlighted\r\n  }\r\n  var highlightCallback = (result, cb) => {\r\n    if(result === NULL) return NULL\r\n    var target = result.target\r\n    var targetLen = target.length\r\n    var indexes = result._indexes\r\n    indexes = indexes.slice(0, indexes.len).sort((a,b)=>a-b)\r\n    var highlighted = ''\r\n    var matchI = 0\r\n    var indexesI = 0\r\n    var opened = false\r\n    var result = []\r\n    for(var i = 0; i < targetLen; ++i) { var char = target[i]\r\n      if(indexes[indexesI] === i) {\r\n        ++indexesI\r\n        if(!opened) { opened = true\r\n          result.push(highlighted); highlighted = ''\r\n        }\r\n\r\n        if(indexesI === indexes.length) {\r\n          highlighted += char\r\n          result.push(cb(highlighted, matchI++)); highlighted = ''\r\n          result.push(target.substr(i+1))\r\n          break\r\n        }\r\n      } else {\r\n        if(opened) { opened = false\r\n          result.push(cb(highlighted, matchI++)); highlighted = ''\r\n        }\r\n      }\r\n      highlighted += char\r\n    }\r\n    return result\r\n  }\r\n\r\n\r\n  var indexes = result => result._indexes.slice(0, result._indexes.len).sort((a,b)=>a-b)\r\n\r\n\r\n  var prepare = (target) => {\r\n    if(typeof target !== 'string') target = ''\r\n    var info = prepareLowerInfo(target)\r\n    return {'target':target, _targetLower:info._lower, _targetLowerCodes:info.lowerCodes, _nextBeginningIndexes:NULL, _bitflags:info.bitflags, 'score':NULL, _indexes:[0], 'obj':NULL} // hidden\r\n  }\r\n\r\n\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n  // Below this point is only internal code\r\n\r\n\r\n  var prepareSearch = (search) => {\r\n    if(typeof search !== 'string') search = ''\r\n    search = search.trim()\r\n    var info = prepareLowerInfo(search)\r\n\r\n    var spaceSearches = []\r\n    if(info.containsSpace) {\r\n      var searches = search.split(/\\s+/)\r\n      searches = [...new Set(searches)] // distinct\r\n      for(var i=0; i<searches.length; i++) {\r\n        if(searches[i] === '') continue\r\n        var _info = prepareLowerInfo(searches[i])\r\n        spaceSearches.push({lowerCodes:_info.lowerCodes, _lower:searches[i].toLowerCase(), containsSpace:false})\r\n      }\r\n    }\r\n\r\n    return {lowerCodes: info.lowerCodes, bitflags: info.bitflags, containsSpace: info.containsSpace, _lower: info._lower, spaceSearches: spaceSearches}\r\n  }\r\n\r\n\r\n\r\n  var getPrepared = (target) => {\r\n    if(target.length > 999) return prepare(target) // don't cache huge targets\r\n    var targetPrepared = preparedCache.get(target)\r\n    if(targetPrepared !== undefined) return targetPrepared\r\n    targetPrepared = prepare(target)\r\n    preparedCache.set(target, targetPrepared)\r\n    return targetPrepared\r\n  }\r\n  var getPreparedSearch = (search) => {\r\n    if(search.length > 999) return prepareSearch(search) // don't cache huge searches\r\n    var searchPrepared = preparedSearchCache.get(search)\r\n    if(searchPrepared !== undefined) return searchPrepared\r\n    searchPrepared = prepareSearch(search)\r\n    preparedSearchCache.set(search, searchPrepared)\r\n    return searchPrepared\r\n  }\r\n\r\n\r\n  var all = (search, targets, options) => {\r\n    var results = []; results.total = targets.length\r\n\r\n    var limit = options && options.limit || INT_MAX\r\n\r\n    if(options && options.key) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var target = getValue(obj, options.key)\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n        target.score = INT_MIN\r\n        target._indexes.len = 0\r\n        var result = target\r\n        result = {target:result.target, _targetLower:'', _targetLowerCodes:NULL, _nextBeginningIndexes:NULL, _bitflags:0, score:target.score, _indexes:NULL, obj:obj} // hidden\r\n        results.push(result); if(results.length >= limit) return results\r\n      }\r\n    } else if(options && options.keys) {\r\n      for(var i=0;i<targets.length;i++) { var obj = targets[i]\r\n        var objResults = new Array(options.keys.length)\r\n        for (var keyI = options.keys.length - 1; keyI >= 0; --keyI) {\r\n          var target = getValue(obj, options.keys[keyI])\r\n          if(!target) { objResults[keyI] = NULL; continue }\r\n          if(!isObj(target)) target = getPrepared(target)\r\n          target.score = INT_MIN\r\n          target._indexes.len = 0\r\n          objResults[keyI] = target\r\n        }\r\n        objResults.obj = obj\r\n        objResults.score = INT_MIN\r\n        results.push(objResults); if(results.length >= limit) return results\r\n      }\r\n    } else {\r\n      for(var i=0;i<targets.length;i++) { var target = targets[i]\r\n        if(!target) continue\r\n        if(!isObj(target)) target = getPrepared(target)\r\n        target.score = INT_MIN\r\n        target._indexes.len = 0\r\n        results.push(target); if(results.length >= limit) return results\r\n      }\r\n    }\r\n\r\n    return results\r\n  }\r\n\r\n\r\n  var algorithm = (preparedSearch, prepared, allowSpaces=false) => {\r\n    if(allowSpaces===false && preparedSearch.containsSpace) return algorithmSpaces(preparedSearch, prepared)\r\n\r\n    var searchLower = preparedSearch._lower\r\n    var searchLowerCodes = preparedSearch.lowerCodes\r\n    var searchLowerCode = searchLowerCodes[0]\r\n    var targetLowerCodes = prepared._targetLowerCodes\r\n    var searchLen = searchLowerCodes.length\r\n    var targetLen = targetLowerCodes.length\r\n    var searchI = 0 // where we at\r\n    var targetI = 0 // where you at\r\n    var matchesSimpleLen = 0\r\n\r\n    // very basic fuzzy match; to remove non-matching targets ASAP!\r\n    // walk through target. find sequential matches.\r\n    // if all chars aren't found then exit\r\n    for(;;) {\r\n      var isMatch = searchLowerCode === targetLowerCodes[targetI]\r\n      if(isMatch) {\r\n        matchesSimple[matchesSimpleLen++] = targetI\r\n        ++searchI; if(searchI === searchLen) break\r\n        searchLowerCode = searchLowerCodes[searchI]\r\n      }\r\n      ++targetI; if(targetI >= targetLen) return NULL // Failed to find searchI\r\n    }\r\n\r\n    var searchI = 0\r\n    var successStrict = false\r\n    var matchesStrictLen = 0\r\n\r\n    var nextBeginningIndexes = prepared._nextBeginningIndexes\r\n    if(nextBeginningIndexes === NULL) nextBeginningIndexes = prepared._nextBeginningIndexes = prepareNextBeginningIndexes(prepared.target)\r\n    var firstPossibleI = targetI = matchesSimple[0]===0 ? 0 : nextBeginningIndexes[matchesSimple[0]-1]\r\n\r\n    // Our target string successfully matched all characters in sequence!\r\n    // Let's try a more advanced and strict test to improve the score\r\n    // only count it as a match if it's consecutive or a beginning character!\r\n    var backtrackCount = 0\r\n    if(targetI !== targetLen) for(;;) {\r\n      if(targetI >= targetLen) {\r\n        // We failed to find a good spot for this search char, go back to the previous search char and force it forward\r\n        if(searchI <= 0) break // We failed to push chars forward for a better match\r\n\r\n        ++backtrackCount; if(backtrackCount > 200) break // exponential backtracking is taking too long, just give up and return a bad match\r\n\r\n        --searchI\r\n        var lastMatch = matchesStrict[--matchesStrictLen]\r\n        targetI = nextBeginningIndexes[lastMatch]\r\n\r\n      } else {\r\n        var isMatch = searchLowerCodes[searchI] === targetLowerCodes[targetI]\r\n        if(isMatch) {\r\n          matchesStrict[matchesStrictLen++] = targetI\r\n          ++searchI; if(searchI === searchLen) { successStrict = true; break }\r\n          ++targetI\r\n        } else {\r\n          targetI = nextBeginningIndexes[targetI]\r\n        }\r\n      }\r\n    }\r\n\r\n    // check if it's a substring match\r\n    var substringIndex = prepared._targetLower.indexOf(searchLower, matchesSimple[0]) // perf: this is slow\r\n    var isSubstring = ~substringIndex\r\n    if(isSubstring && !successStrict) { // rewrite the indexes from basic to the substring\r\n      for(var i=0; i<matchesSimpleLen; ++i) matchesSimple[i] = substringIndex+i\r\n    }\r\n    var isSubstringBeginning = false\r\n    if(isSubstring) {\r\n      isSubstringBeginning = prepared._nextBeginningIndexes[substringIndex-1] === substringIndex\r\n    }\r\n\r\n    { // tally up the score & keep track of matches for highlighting later\r\n      if(successStrict) { var matchesBest = matchesStrict; var matchesBestLen = matchesStrictLen }\r\n      else { var matchesBest = matchesSimple; var matchesBestLen = matchesSimpleLen }\r\n\r\n      var score = 0\r\n\r\n      var extraMatchGroupCount = 0\r\n      for(var i = 1; i < searchLen; ++i) {\r\n        if(matchesBest[i] - matchesBest[i-1] !== 1) {score -= matchesBest[i]; ++extraMatchGroupCount}\r\n      }\r\n      var unmatchedDistance = matchesBest[searchLen-1] - matchesBest[0] - (searchLen-1)\r\n\r\n      score -= (12+unmatchedDistance) * extraMatchGroupCount // penality for more groups\r\n\r\n      if(matchesBest[0] !== 0) score -= matchesBest[0]*matchesBest[0]*.2 // penality for not starting near the beginning\r\n\r\n      if(!successStrict) {\r\n        score *= 1000\r\n      } else {\r\n        // successStrict on a target with too many beginning indexes loses points for being a bad target\r\n        var uniqueBeginningIndexes = 1\r\n        for(var i = nextBeginningIndexes[0]; i < targetLen; i=nextBeginningIndexes[i]) ++uniqueBeginningIndexes\r\n\r\n        if(uniqueBeginningIndexes > 24) score *= (uniqueBeginningIndexes-24)*10 // quite arbitrary numbers here ...\r\n      }\r\n\r\n      if(isSubstring)          score /= 1+searchLen*searchLen*1 // bonus for being a full substring\r\n      if(isSubstringBeginning) score /= 1+searchLen*searchLen*1 // bonus for substring starting on a beginningIndex\r\n\r\n      score -= targetLen - searchLen // penality for longer targets\r\n      prepared.score = score\r\n\r\n      for(var i = 0; i < matchesBestLen; ++i) prepared._indexes[i] = matchesBest[i]\r\n      prepared._indexes.len = matchesBestLen\r\n\r\n      return prepared\r\n    }\r\n  }\r\n  var algorithmSpaces = (preparedSearch, target) => {\r\n    var seen_indexes = new Set()\r\n    var score = 0\r\n    var result = NULL\r\n\r\n    var first_seen_index_last_search = 0\r\n    var searches = preparedSearch.spaceSearches\r\n    for(var i=0; i<searches.length; ++i) {\r\n      var search = searches[i]\r\n\r\n      result = algorithm(search, target)\r\n      if(result === NULL) return NULL\r\n\r\n      score += result.score\r\n\r\n      // dock points based on order otherwise \"c man\" returns Manifest.cpp instead of CheatManager.h\r\n      if(result._indexes[0] < first_seen_index_last_search) {\r\n        score -= first_seen_index_last_search - result._indexes[0]\r\n      }\r\n      first_seen_index_last_search = result._indexes[0]\r\n\r\n      for(var j=0; j<result._indexes.len; ++j) seen_indexes.add(result._indexes[j])\r\n    }\r\n\r\n    // allows a search with spaces that's an exact substring to score well\r\n    var allowSpacesResult = algorithm(preparedSearch, target, /*allowSpaces=*/true)\r\n    if(allowSpacesResult !== NULL && allowSpacesResult.score > score) {\r\n      return allowSpacesResult\r\n    }\r\n\r\n    result.score = score\r\n\r\n    var i = 0\r\n    for (let index of seen_indexes) result._indexes[i++] = index\r\n    result._indexes.len = i\r\n\r\n    return result\r\n  }\r\n\r\n\r\n  var prepareLowerInfo = (str) => {\r\n    var strLen = str.length\r\n    var lower = str.toLowerCase()\r\n    var lowerCodes = [] // new Array(strLen)    sparse array is too slow\r\n    var bitflags = 0\r\n    var containsSpace = false // space isn't stored in bitflags because of how searching with a space works\r\n\r\n    for(var i = 0; i < strLen; ++i) {\r\n      var lowerCode = lowerCodes[i] = lower.charCodeAt(i)\r\n\r\n      if(lowerCode === 32) {\r\n        containsSpace = true\r\n        continue // it's important that we don't set any bitflags for space\r\n      }\r\n\r\n      var bit = lowerCode>=97&&lowerCode<=122 ? lowerCode-97 // alphabet\r\n              : lowerCode>=48&&lowerCode<=57  ? 26           // numbers\r\n                                                             // 3 bits available\r\n              : lowerCode<=127                ? 30           // other ascii\r\n              :                                 31           // other utf8\r\n      bitflags |= 1<<bit\r\n    }\r\n\r\n    return {lowerCodes:lowerCodes, bitflags:bitflags, containsSpace:containsSpace, _lower:lower}\r\n  }\r\n  var prepareBeginningIndexes = (target) => {\r\n    var targetLen = target.length\r\n    var beginningIndexes = []; var beginningIndexesLen = 0\r\n    var wasUpper = false\r\n    var wasAlphanum = false\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      var targetCode = target.charCodeAt(i)\r\n      var isUpper = targetCode>=65&&targetCode<=90\r\n      var isAlphanum = isUpper || targetCode>=97&&targetCode<=122 || targetCode>=48&&targetCode<=57\r\n      var isBeginning = isUpper && !wasUpper || !wasAlphanum || !isAlphanum\r\n      wasUpper = isUpper\r\n      wasAlphanum = isAlphanum\r\n      if(isBeginning) beginningIndexes[beginningIndexesLen++] = i\r\n    }\r\n    return beginningIndexes\r\n  }\r\n  var prepareNextBeginningIndexes = (target) => {\r\n    var targetLen = target.length\r\n    var beginningIndexes = prepareBeginningIndexes(target)\r\n    var nextBeginningIndexes = [] // new Array(targetLen)     sparse array is too slow\r\n    var lastIsBeginning = beginningIndexes[0]\r\n    var lastIsBeginningI = 0\r\n    for(var i = 0; i < targetLen; ++i) {\r\n      if(lastIsBeginning > i) {\r\n        nextBeginningIndexes[i] = lastIsBeginning\r\n      } else {\r\n        lastIsBeginning = beginningIndexes[++lastIsBeginningI]\r\n        nextBeginningIndexes[i] = lastIsBeginning===undefined ? targetLen : lastIsBeginning\r\n      }\r\n    }\r\n    return nextBeginningIndexes\r\n  }\r\n\r\n\r\n  var cleanup = () => { preparedCache.clear(); preparedSearchCache.clear(); matchesSimple = []; matchesStrict = [] }\r\n\r\n  var preparedCache       = new Map()\r\n  var preparedSearchCache = new Map()\r\n  var matchesSimple = []; var matchesStrict = []\r\n\r\n\r\n  // for use with keys. just returns the maximum score\r\n  var defaultScoreFn = (a) => {\r\n    var max = INT_MIN\r\n    var len = a.length\r\n    for (var i = 0; i < len; ++i) {\r\n      var result = a[i]; if(result === NULL) continue\r\n      var score = result.score\r\n      if(score > max) max = score\r\n    }\r\n    if(max === INT_MIN) return NULL\r\n    return max\r\n  }\r\n\r\n  // prop = 'key'              2.5ms optimized for this case, seems to be about as fast as direct obj[prop]\r\n  // prop = 'key1.key2'        10ms\r\n  // prop = ['key1', 'key2']   27ms\r\n  var getValue = (obj, prop) => {\r\n    var tmp = obj[prop]; if(tmp !== undefined) return tmp\r\n    var segs = prop\r\n    if(!Array.isArray(prop)) segs = prop.split('.')\r\n    var len = segs.length\r\n    var i = -1\r\n    while (obj && (++i < len)) obj = obj[segs[i]]\r\n    return obj\r\n  }\r\n\r\n  var isObj = (x) => { return typeof x === 'object' } // faster as a function\r\n  // var INT_MAX = 9007199254740991; var INT_MIN = -INT_MAX\r\n  var INT_MAX = Infinity; var INT_MIN = -INT_MAX\r\n  var noResults = []; noResults.total = 0\r\n  var NULL = null\r\n\r\n\r\n  // Hacked version of https://github.com/lemire/FastPriorityQueue.js\r\n  var fastpriorityqueue=r=>{var e=[],o=0,a={},v=r=>{for(var a=0,v=e[a],c=1;c<o;){var s=c+1;a=c,s<o&&e[s].score<e[c].score&&(a=s),e[a-1>>1]=e[a],c=1+(a<<1)}for(var f=a-1>>1;a>0&&v.score<e[f].score;f=(a=f)-1>>1)e[a]=e[f];e[a]=v};return a.add=(r=>{var a=o;e[o++]=r;for(var v=a-1>>1;a>0&&r.score<e[v].score;v=(a=v)-1>>1)e[a]=e[v];e[a]=r}),a.poll=(r=>{if(0!==o){var a=e[0];return e[0]=e[--o],v(),a}}),a.peek=(r=>{if(0!==o)return e[0]}),a.replaceTop=(r=>{e[0]=r,v()}),a}\r\n  var q = fastpriorityqueue() // reuse this\r\n\r\n\r\n  // fuzzysort is written this way for minification. all names are mangeled unless quoted\r\n  return {'single':single, 'go':go, 'highlight':highlight, 'prepare':prepare, 'indexes':indexes, 'cleanup':cleanup}\r\n}) // UMD\r\n\r\n// TODO: (feature) frecency\r\n// TODO: (perf) use different sorting algo depending on the # of results?\r\n// TODO: (perf) preparedCache is a memory leak\r\n// TODO: (like sublime) backslash === forwardslash\r\n// TODO: (perf) prepareSearch seems slow\r\n","import { naturalSort } from \"@utils\";\nimport { BaseFilter } from \"./filters/base.mjs\";\nimport fuzzysort from \"fuzzysort\";\n\n/**\n * The basic compendium browser class allowing the browsing of compendiums by utilising their indexes.\n *\n * Extending classes must define the following static properties if the browser is not meant to browse Item documents: {@link documentName}.\n * Extending classes should define the following static properties: {@link typeName}, {@link filterClasses}.\n *\n * @abstract\n */\nexport class CompendiumBrowser extends Application {\n  /**\n   * The document name of entries this browser displays.\n   *\n   * @abstract\n   * @type {\"Actor\" | \"Item\"}\n   */\n  static documentName = \"Item\";\n\n  /**\n   * A localisation string used in the browser's title.\n   *\n   * @abstract\n   * @type {string}\n   */\n  static typeName;\n\n  /**\n   * An array of classes extending {@link BaseFilter} that should be used for this browser.\n   *\n   * @type {Array<typeof BaseFilter>}\n   */\n  static filterClasses = [];\n\n  /**\n   * The template used to render individual entries in the browser.\n   *\n   * @type {string}\n   */\n  static ENTRY_TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/entries.hbs\";\n\n  /**\n   * A `Promise` that resolves once all pack indexes have been loaded.\n   *\n   * @internal\n   * @type {Map<string, Promise<void>>}\n   */\n  static #indexingPromises = new Map();\n\n  /**\n   * The set of filters to apply to the compendium index.\n   *\n   * @type {Collection<BaseFilter>}\n   */\n  filters = new foundry.utils.Collection();\n\n  /**\n   * The types of entries this browser handles, as per a document's `type` property.\n   *\n   * @type {Set<string>}\n   */\n  handledTypes = new Set();\n\n  /**\n   * Compendium packs this browser gets entries from.\n   *\n   * @type {CompendiumCollection[]}\n   */\n  packs = [];\n\n  /**\n   * A set of filters that were expanded by the user, and should stay expanded upon re-render.\n   *\n   * @type {Set<string>}\n   */\n  expandedFilters = new Set();\n\n  /**\n   * The {@link Collection} of index entries this browser is aware of.\n   *\n   * @readonly\n   * @type {Collection<IndexEntry>}\n   */\n  entries;\n\n  /**\n   * The current search query entered by the user.\n   *\n   * @private\n   * @type {string}\n   */\n  _query = \"\";\n\n  /**\n   * An object containing data used to render the loading spinner and related text.\n   *\n   * @private\n   * @type {object | null}\n   */\n  _loadingInfo = null;\n\n  /**\n   * Whether the browser and its data have been set up using {@link CompendiumBrowser.setup}.\n   *\n   * @private\n   * @internal\n   * @type {boolean}\n   */\n  #setup = false;\n\n  constructor(options = {}) {\n    super(options);\n    /**\n     * All index entries this compendium browser is aware of.\n     *\n     * @type {Collection<object>}\n     */\n    Object.defineProperty(this, \"entries\", { value: new Collection() });\n    this.initialize();\n    this._debouncedRender = foundry.utils.debounce(this.render, 300);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      template: \"systems/pf1/templates/apps/compendium-browser/compendium-browser.hbs\",\n      classes: [\"pf1\", \"app\", \"compendium-browser\"],\n      id: `pf1-compendium-browser-${this.name}`,\n      width: 800,\n      height: window.innerHeight - 60,\n      top: 30,\n      left: 40,\n      resizable: true,\n      scrollY: [\".filter-container\"],\n      dragDrop: [{ dragSelector: \".directory-item\", dropSelector: null }],\n    });\n  }\n\n  /**\n   * Initialize all {@link CompendiumBrowser}s found in {@link pf1.applications.compendiumBrowser}\n   * and register them in {@link pf1.applications.compendiums}.\n   */\n  static initializeBrowsers() {\n    const compendiums = pf1.applications.compendiums;\n    const compendiumClasses = pf1.applications.compendiumBrowser;\n    compendiums.items = new compendiumClasses.ItemBrowser();\n    compendiums.feats = new compendiumClasses.FeatBrowser();\n    compendiums.spells = new compendiumClasses.SpellBrowser();\n    compendiums.classes = new compendiumClasses.ClassBrowser();\n    compendiums.races = new compendiumClasses.RaceBrowser();\n    compendiums.bestiary = new compendiumClasses.CreatureBrowser();\n    compendiums.buffs = new compendiumClasses.BuffBrowser();\n  }\n\n  /**\n   * Request indexes of all packs of a document type to be loaded.\n   * This method should only ever be called as {@link CompendiumBrowser.getIndexes} to ensure Promises are properly bundled.\n   *\n   * @param {string[]} packNames - The names of the packs to load indexes for\n   * @see {@link CompendiumBrowser.#indexingPromise}\n   * @returns {Promise<void>} A `Promise` that resolves once all indexes have been loaded\n   */\n  static getIndexes(packNames = []) {\n    const packs = packNames.map((name) => game.packs.get(name));\n    const resultPromise = [];\n    for (const pack of packs) {\n      if (!this.#indexingPromises.has(pack.collection)) {\n        this.#indexingPromises.set(pack.collection, pack.getIndex());\n      }\n      resultPromise.push(this.#indexingPromises.get(pack.collection));\n    }\n    return Promise.all(resultPromise).finally(() => {\n      for (const pack of packs) {\n        this.#indexingPromises.delete(pack.collection);\n      }\n    });\n  }\n\n  /**\n   * Map an entry from a compendium to the format used by the browser.\n   *\n   * @param {object} entry - The entry to map\n   * @param {CompendiumCollection} pack - The compendium the entry is from\n   * @returns {IndexEntry} The mapped entry\n   */\n  static _mapEntry(entry, pack) {\n    // NOTE: This decouples the entry from the compendium; it will no longer be refreshed automatically, but changes will stick\n    const result = foundry.utils.deepClone(entry);\n    // Add default `system` data for the entry's type, as pruned compendium data omits default values\n    result.system = foundry.utils.mergeObject(game.model[this.documentName][entry.type], result.system, {\n      inplace: false,\n    });\n    // Add `pack` related fields to allow filtering by pack and label display\n    result.__pack = pack.collection;\n    result.__packLabel = pack.metadata.label;\n\n    result.__uuid = pack.getUuid(entry._id);\n    // Prepare `__name` field for fuzzy search optimisation\n    result.__name = fuzzysort.prepare(entry.name.normalize(\"NFKD\"));\n    return result;\n  }\n\n  /**\n   * Renders an array of {@link IndexEntry} objects into HTML.\n   *\n   * @private\n   * @param {IndexEntry[]} entries - The entries to render\n   * @returns {Promise<string>} The rendered HTML\n   */\n  static async _renderEntries(entries) {\n    return renderTemplate(this.ENTRY_TEMPLATE, { entries });\n  }\n\n  /** @inheritDoc */\n  get title() {\n    return game.i18n.format(\"PF1.CompendiumBrowserTitle\", { type: game.i18n.localize(this.constructor.typeName) });\n  }\n\n  /**\n   * Perform minimal preparation steps to initialize the compendium browser.\n   * Add filters and determine which compendiums include data relevant to this browser.\n   *\n   * @protected\n   */\n  initialize() {\n    this.filters?.clear();\n    for (const cls of this.constructor.filterClasses) {\n      if (!(cls.prototype instanceof BaseFilter)) {\n        throw new Error(`Filter class ${cls.name} does not extend BaseFilter`);\n      }\n      const filter = new cls(this);\n      this.filters.set(filter.id, filter);\n      // Add all types handled by that filter to the browser's list of handled types\n      cls.handledTypes.forEach((type) => this.handledTypes.add(type));\n    }\n    this.packs = game.packs.filter((pack) => this.isPackIncluded(pack));\n    this._loadingInfo = {\n      indexCount: this.packs.length,\n      entryCount: this.packs.reduce(\n        (acc, pack) => acc + pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length,\n        0\n      ),\n    };\n  }\n\n  /**\n   * Check whether a compendium should be included in the browser.\n   *\n   * @param {CompendiumCollection} pack - The compendium to test\n   * @returns {boolean} Whether the compendium should be included\n   */\n  isPackIncluded(pack) {\n    // Only include enabled packs with the right document type made for PF1\n    if (pack.config.pf1?.disabled) return false;\n    if (pack.documentName !== this.constructor.documentName) return false;\n    if (pack.metadata.system !== game.system.id) return false;\n\n    // Skip if pack is not visible to current user\n    if (!pack.visible) return false;\n\n    // Avoid unnecessarily adding packs that don't contain any relevant entries\n    if (pack.index.contents.filter((entry) => this.handledTypes.has(entry.type)).length === 0) return false;\n\n    // Don't skip the compendium\n    return true;\n  }\n\n  /**\n   * Perform the initial setup of the compendium browser.\n   * This includes requesting the index of all relevant compendiums if necessary and preparing the filters.\n   *\n   * @returns {Promise<void>}\n   */\n  async setup() {\n    this.#setup = false;\n    this.entries?.clear();\n    await CompendiumBrowser.getIndexes(this.packs.map((pack) => pack.collection));\n    const unorderedEntries = await Promise.all(this.packs.map((pack) => this.loadPackIndex(pack)));\n    naturalSort(unorderedEntries.flat(), \"name\").forEach((entry) => this.entries.set(`${entry.__uuid}`, entry));\n    this.filters.forEach((filter) => filter.setup());\n    this.#setup = true;\n  }\n\n  /**\n   * Load a compendium's index to prepare it for browsing.\n   *\n   * @param {CompendiumCollection} pack - The compendium to load\n   * @returns {Promise<IndexEntry[]>} The loaded index entries\n   */\n  async loadPackIndex(pack) {\n    if (pack.indexed === false) await CompendiumBrowser.getIndexes(pack.collection);\n    const index = pack.index;\n    return index\n      .filter((entry) => this.handledTypes.has(entry.type))\n      .map((entry) => {\n        try {\n          return this.constructor._mapEntry(entry, pack);\n        } catch (err) {\n          Hooks.onError(`CompendiumBrowser#_mapEntry`, err, {\n            msg: `${this.constructor.name} failed to map entry ${entry.name} [${entry._id}] from pack ${pack.collection}`,\n            log: \"error\",\n            entry,\n            pack,\n          });\n          return null;\n        }\n      })\n      .filter((entry) => entry !== null);\n  }\n\n  /**\n   * Get the current set of entries allowed by the filters.\n   *\n   * @returns {IndexEntry[]} The filtered entries\n   */\n  getFilteredEntries() {\n    let entries = this.entries.contents;\n\n    const activeFilters = this.filters.filter((filter) => filter.active);\n    if (activeFilters.length)\n      entries = entries.filter((entry) => activeFilters.every((filter) => filter.applyFilter(entry)));\n\n    if (this._query) {\n      const collator = new Intl.Collator(game.settings.get(\"core\", \"language\"), {\n        numeric: true,\n        ignorePunctuation: true,\n      });\n      entries = fuzzysort\n        .go(this._query.normalize(\"NFKD\"), entries, { key: \"__name\", threshold: -10000 })\n        .sort((a, b) => {\n          // Sort by score first, then alphabetically by name\n          if (a.score !== b.score) return b.score - a.score;\n          else return collator.compare(a.obj.name, b.obj.name);\n        })\n        .map((match) => match.obj);\n    }\n\n    return entries;\n  }\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    // Identify the focused element\n    const focus = this.element?.[0]?.querySelector(\":focus\");\n    const selectionStart = focus?.selectionStart;\n\n    // Render the application and restore focus\n    await super._render(force, options);\n    if (focus && focus.name) {\n      const input = this._element[0].querySelector(`[name=\"${focus.name}\"]`);\n      if (input && input.focus instanceof Function) {\n        input.focus();\n        if (selectionStart) input.selectionStart = input.selectionEnd = selectionStart;\n      }\n    }\n  }\n\n  /** @inheritDoc */\n  async getData() {\n    const context = await super.getData();\n    context.id = this.options.id;\n    context.query = this._query ?? \"\";\n    context.filters = this.filters\n      .filter((filter) => filter.hasChoices())\n      .map((filter) => ({\n        ...filter.getData(),\n        collapsed: this.expandedFilters.has(filter.id) ? \"\" : \"collapsed\",\n      }));\n\n    if (this.#setup) {\n      // Browser is set up, so we can render the entries\n      this._entries = this.getFilteredEntries();\n      context.entries = this._entries.slice(0, 100);\n      context.itemCount = this.entries.size;\n      context.filteredItemCount = this._entries.length;\n    } else {\n      // Browser is not set up, display a loading spinner\n      context.loading = true;\n      context.loadingInfo = this._loadingInfo;\n    }\n    return context;\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    /** @type {HTMLElement} */\n    const el = html[0];\n\n    // If the browser is not set up yet, start the process and render again once it is done\n    if (!this.#setup) {\n      this.setup().then(() => this.render());\n      // No listeners have to be activated yet, so we can return here\n      return;\n    }\n\n    this._initLazyScrolling(el);\n\n    // Activate listeners for filters, allowing them to define their own\n    el.querySelectorAll(\".filter-content\").forEach((filterContent) => {\n      const filter = this.filters.get(filterContent.closest(\".filter\").dataset.filterId);\n      filter.activateListeners(filterContent);\n    });\n\n    el.querySelector(\".directory-list\").addEventListener(\"click\", (event) => {\n      this._onClickEntry(event);\n    });\n\n    el.querySelector(\"button.reload\").addEventListener(\"click\", (event) => {\n      this._onReload(event);\n    });\n\n    el.querySelector(\"button.clear-filters\").addEventListener(\"click\", (event) => {\n      this._onClearFilters(event);\n    });\n\n    el.querySelectorAll(\".filter>h3\").forEach((header) => {\n      header.addEventListener(\"click\", (event) => {\n        this._onFilterHeaderClick(event);\n      });\n    });\n\n    el.querySelector(\"input[name=filter]\")?.addEventListener(\"input\", (event) => {\n      this._onCustomSearchFilter(event);\n    });\n\n    ContextMenu.create(this, html, \".directory-item\", this._getEntryContextOptions());\n  }\n\n  /**\n   * Store the current search filter query and re-render the application.\n   *\n   * @private\n   * @param {Event} event - The originating change event\n   */\n  _onCustomSearchFilter(event) {\n    event.preventDefault();\n    this._query = event.target.value;\n    this._debouncedRender();\n  }\n\n  /**\n   * Handle a click on an entry in the compendium browser.\n   *\n   * @private\n   * @param {Event} event - The originating click Event\n   */\n  async _onClickEntry(event) {\n    const li = event.target.closest(\".directory-item\");\n    if (!li) return;\n    const { uuid } = li.dataset;\n    const document = await fromUuid(uuid);\n    const collection = game.packs.get(document.pack);\n    return document.sheet.render(true, { editable: game.user.isGM && !collection.locked, focus: true });\n  }\n\n  /**\n   * Get the set of ContextMenu options which should be used for the compendium browser's entries.\n   *\n   * @protected\n   * @returns {object[]} - The Array of ContextMenu options\n   */\n  _getEntryContextOptions() {\n    return [\n      {\n        name: \"COMPENDIUM.ImportEntry\",\n        icon: '<i class=\"fas fa-download\"></i>',\n        condition: () => getDocumentClass(this.constructor.documentName).canUserCreate(game.user),\n        callback: async (li) => {\n          const collection = game.collections.get(this.constructor.documentName);\n          const uuid = li.data(\"uuid\");\n          const entry = this.entries.get(uuid);\n          return collection.importFromCompendium(game.packs.get(entry.__pack), entry._id, {}, { renderSheet: true });\n        },\n      },\n      {\n        name: \"PF1.CopyUuidToClipboard\",\n        icon: '<i class=\"fas fa-id-badge\"></i>',\n        callback: (li) => {\n          const uuid = li.data(\"uuid\");\n          game.clipboard.copyPlainText(uuid);\n          const label = game.i18n.localize(getDocumentClass(this.constructor.documentName).metadata.label);\n          ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"uuid\", id: uuid }));\n        },\n      },\n    ];\n  }\n\n  /** @inheritDoc */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /** @inheritDoc */\n  _onDragStart(event) {\n    const { uuid } = event.currentTarget.dataset;\n    event.dataTransfer.setData(\n      \"text/plain\",\n      JSON.stringify({\n        type: this.constructor.documentName,\n        uuid: uuid,\n      })\n    );\n\n    const html = this.element[0];\n    // Without the delay the following blocks the drag start\n    setTimeout(() => html.classList.add(\"active-drag\"), 0);\n    document.body.addEventListener(\"dragend\", () => html.classList.remove(\"active-drag\"), {\n      once: true,\n      passive: true,\n    });\n  }\n\n  /**\n   * Handle a click on the reset filters button, resetting all filters to their default state.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  _onClearFilters(_event) {\n    for (const filter of this.filters) {\n      filter.reset();\n    }\n    this._query = \"\";\n    this.expandedFilters.clear();\n    this.render();\n  }\n\n  /**\n   * Handle a click on the refresh button, re-running the setup process,\n   * and re-rendering the compendium browser afterwards.\n   *\n   * @private\n   * @param {Event} _event - The originating click event\n   */\n  async _onReload(_event) {\n    this.#setup = false;\n    this.initialize();\n    this.render();\n  }\n\n  /**\n   * Handle a click on a filter's title to collapse or expand it.\n   *\n   * @private\n   * @param {Event} event - The originating click event\n   */\n  _onFilterHeaderClick(event) {\n    const { filterId } = event.target.closest(\".filter\").dataset;\n    const filterContents = event.target.closest(\".filter\").querySelector(\".filter-content\");\n    if (this.expandedFilters.has(filterId)) {\n      this.expandedFilters.delete(filterId);\n      filterContents.classList.add(\"collapsed\");\n    } else {\n      this.expandedFilters.add(filterId);\n      filterContents.classList.remove(\"collapsed\");\n    }\n  }\n\n  /**\n   * Initializes lazy loading of entries so that they are only rendered when close-ish to being visible.\n   *\n   * @private\n   * @param {HTMLElement} html - The HTML element to initialize lazy loading for\n   */\n  _initLazyScrolling(html) {\n    const listEnd = html.querySelector(\".directory-bottom\");\n    if (listEnd) {\n      new IntersectionObserver(\n        async ([entry], observer) => {\n          if (entry.isIntersecting) {\n            // Append more entries to the list\n            const currentCount = html.querySelectorAll(\".directory-item\").length;\n            const newEntries = this._entries.slice(currentCount, currentCount + 50);\n            if (newEntries.length === 0) {\n              // No more entries to load with current filters\n              observer.unobserve(listEnd);\n            } else {\n              const newHtml = await this.constructor._renderEntries(newEntries);\n              listEnd.insertAdjacentHTML(\"beforebegin\", newHtml);\n              this._dragDrop[0].bind(html);\n            }\n          }\n        },\n        { root: html.querySelector(\".directory-list\"), rootMargin: \"300px\" }\n      ).observe(listEnd);\n    }\n  }\n}\n\n/**\n * @typedef {object} IndexEntry\n * @property {string} _id - The entry's ID\n * @property {string} name - The entry's name\n * @property {string} type - The entry's type\n * @property {string} img - The entry's image\n * @property {string} __pack - The {@link CompendiumCollection} this entry is from\n * @property {string} __packLabel - The label of the {@link CompendiumCollection} this entry is from\n * @property {string} __uuid - The UUID of this entry\n */\n","/**\n * A specialized form used to select types.\n *\n * @type {DocumentSheet}\n */\nexport class ActorTraitSelector extends DocumentSheet {\n  constructor(doc, options) {\n    super(doc, options);\n    // Enrich dialog identity\n    this.options.classes.push(options.subject);\n\n    // Get current values\n    let { value, custom } = foundry.utils.getProperty(doc.toObject(), this.attribute) ?? { value: [], custom: [] };\n    value ||= [];\n    custom ||= [];\n\n    this.attributes = { value, custom };\n  }\n\n  splitCustom(value) {\n    return value\n      .split(pf1.config.re.traitSeparator)\n      .map((c) => c.trim())\n      .filter((c) => !!c);\n  }\n\n  get title() {\n    return `${this.options.title} – ${this.object.name}`;\n  }\n\n  get id() {\n    return `trait-selector-${this.document.uuid.replaceAll(\".\", \"-\")}-${this.options.subject}`;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"trait-selector\"],\n      template: \"systems/pf1/templates/apps/trait-selector.hbs\",\n      width: 320,\n      height: \"auto\",\n      sheetConfig: false,\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a reference to the target attribute\n   *\n   * @type {string}\n   */\n  get attribute() {\n    return this.options.name;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Provide data to the HTML template for rendering\n   *\n   * @type {object}\n   */\n  getData() {\n    const { value, custom } = this.attributes;\n\n    // Populate choices\n    const choices = foundry.utils.deepClone(this.options.choices);\n    for (const [k, v] of Object.entries(choices)) {\n      choices[k] = {\n        label: v,\n        chosen: value.includes(k),\n      };\n    }\n\n    // Object type\n    const updateButton = this.object instanceof Actor ? \"PF1.UpdateActor\" : \"PF1.UpdateItem\";\n\n    // Return data\n    return {\n      choices,\n      custom: Array.from(new Set(custom)),\n      updateButton,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  async _updateDocument(event) {\n    await this._onSubmit(event, { preventRender: true });\n\n    // Unregister this app from doc to avoid re-renders\n    delete this.document.apps[this.appId];\n\n    const { custom, value } = this.attributes;\n    const updateData = { [this.attribute]: { value, custom } };\n    this.object.update(updateData);\n    this.close({ force: true });\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onCustomInput(event) {\n    // Consume input if semicolon is inserted\n    if (/;/.test(event.target.value)) {\n      event.preventDefault();\n      this.submit();\n    }\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onActiveCustomInput(event) {\n    if (event.isComposing) return;\n\n    switch (event.key) {\n      case \"Enter\": {\n        event.preventDefault();\n        this.submit();\n        break;\n      }\n      case \"Backspace\": {\n        if (event.target.value !== \"\") return;\n        if (event.repeat) return; // Ignore when backspace is held down\n        const last = this.form.querySelector(\".custom-tags .custom-tag:last-of-type\");\n        if (!last) return;\n        if (last.classList.contains(\"pre-delete\")) {\n          const tag = last.dataset.customTag;\n          this.attributes.custom = this.attributes.custom.filter((t) => t !== tag);\n          this.render();\n        } else {\n          last.classList.add(\"pre-delete\");\n        }\n        break;\n      }\n      default:\n        this.form.querySelector(\".custom-tags .custom-tag:last-of-type\")?.classList.remove(\"pre-delete\");\n        break;\n    }\n  }\n\n  _deleteCustomTag(event) {\n    const elem = event.target;\n    const tag = elem.dataset.customTag;\n    this.attributes.custom = this.attributes.custom.filter((t) => t !== tag);\n    this.render();\n  }\n\n  /**\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    // Custom tag handling\n    const customInput = this.form.querySelector(\"input[name='custom']\");\n    customInput.addEventListener(\"input\", this._onCustomInput.bind(this), { passive: true });\n    customInput.addEventListener(\"keydown\", this._onActiveCustomInput.bind(this));\n    this.form.querySelectorAll(\".custom-tags .custom-tag > a[data-action='delete']\").forEach((el) => {\n      el.addEventListener(\"click\", this._deleteCustomTag.bind(this), { passive: true });\n    });\n\n    // Submit button\n    this.form.querySelector(\"button[type='submit']\").addEventListener(\"click\", this._updateDocument.bind(this));\n  }\n\n  /**\n   * Update the Actor object with new trait data processed from the form\n   *\n   * @param event\n   * @param formData\n   * @private\n   */\n  _updateObject(event, formData) {\n    let { choices, custom } = foundry.utils.expandObject(formData);\n\n    choices = Object.entries(choices)\n      .filter(([_, v]) => v)\n      .map(([k]) => k);\n\n    if (custom?.length) this.attributes.custom.push(...this.splitCustom(custom));\n\n    this.attributes.value = choices;\n\n    this.render();\n  }\n}\n","const fields = foundry.data.fields;\n\n/**\n * The Base Registry class, providing shared functionality for all registries in the system.\n *\n * @abstract\n * @group Base Classes\n * @template {RegistryEntry} Model\n * @augments {foundry.utils.Collection<Model>}\n */\nexport class Registry extends foundry.utils.Collection {\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @type {typeof Model}\n   */\n  static model = null;\n\n  /**\n   * An array of data used to initialise this registry.\n   *\n   * @type {object[]} An array of data used to initialise this registry.\n   * @private\n   */\n  static _defaultData = [];\n\n  /**\n   * The class each of this registry's content is expected to be an instance of.\n   *\n   * @see {@link Registry.model}\n   * @type {Model}\n   */\n  model = null;\n\n  constructor() {\n    super();\n    Object.defineProperty(this, \"model\", { value: this.constructor.model, writable: false, enumerable: false });\n    this._initialize();\n  }\n\n  /**\n   * The name of the registry\n   *\n   * @type {string}\n   */\n  get name() {\n    return this.constructor.name;\n  }\n\n  /**\n   * Initializes the registry with its default data.\n   *\n   * @remarks This method is called automatically when the registry is instantiated.\n   *  It should be self-reliant and not require any other setup.\n   * @private\n   */\n  _initialize() {\n    this.clear();\n    for (const element of this.constructor._defaultData) {\n      try {\n        const content = new this.model({ ...element, namespace: \"pf1\" });\n        super.set(content.id, content);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    // Allow modules to register their own content\n    Hooks.callAll(`pf1Register${this.name}`, this);\n  }\n\n  /**\n   * Prepares the data of all entries in the registry.\n   */\n  setup() {\n    for (const element of this) {\n      element.prepareData();\n    }\n  }\n\n  /**\n   * Sets the value of a key in the registry.\n   *\n   * @param {string} id - ID of the value to set.\n   * @param {Model} content - The value to set.\n   * @returns {Registry} The registry itself, after the value has been set.\n   */\n  set(id, content) {\n    const cls = this.model;\n    if (!(content instanceof cls)) {\n      throw new Error(`Registry '${this.name}' can only register ${cls.name}`);\n    }\n    return super.set(id, content);\n  }\n\n  /**\n   * Registers a new instance of {@link Model} with the registry, using a partial of its data as the base.\n   *\n   * @example\n   * ```js\n   * pf1.registry.damageTypes.register(\"my-module\", \"my-damage-type\", {\n   *   name: \"My Damage Type\",\n   *   img: \"icons/svg/damage.svg\",\n   *   category: \"physical\",\n   * });\n   * ```\n   * @param {string} namespace - The namespace for which this value is registered.\n   * @param {string} id - The unique key of the value.\n   * @param {object} value - A {@link Partial} of the data to use as the base for the new value.\n   * @returns {Registry} The registry itself, after the value has been registered.\n   */\n  register(namespace, id, value) {\n    if (!namespace || !id) throw new Error(\"Registering requires both a namespace and an ID\");\n    if (this.has(id)) {\n      throw new Error(`Registry '${this.name}' already has a key '${id}'`);\n    }\n    return this.set(id, new this.model({ ...value, namespace, _id: id }));\n  }\n\n  /**\n   * Unregisters a value from the registry, or if no id is provided, all values belonging to the namespace.\n   *\n   * @param {string} namespace - The namespace for which this value is unregistered.\n   * @param {string} [id] - The unique key of the value, or `undefined` to unregister all values belonging to the namespace.\n   */\n  unregister(namespace, id) {\n    if (!namespace | !id) throw new Error(\"Unregistering requires both a namespace and an ID\");\n    if (id) {\n      const entry = this.get(id);\n      if (entry && entry.namespace === namespace) this.delete(id);\n      else throw new Error(`Registry '${this.name}' has no key '${id}'`);\n    } else {\n      for (const entry of this) {\n        if (entry.namespace === namespace) this.delete(entry.id);\n      }\n    }\n  }\n\n  /**\n   * Returns the contents of this registry as object, using ids as keys.\n   *\n   * @param {boolean} [source=false] - Whether to include the source data instead of its prepared data for each value.\n   * @returns {{ [id: string]: object }} The data of each value in the registry, by id\n   */\n  toObject(source = false) {\n    return Object.fromEntries(this.map((registryObject) => [registryObject.id, registryObject.toObject(source)]));\n  }\n\n  /**\n   * Returns an object of the registry's contents, with the id as key and the name as value.\n   *\n   * @returns {{ [id: string]: string }} The names of each value in the registry, by id\n   */\n  getLabels() {\n    return Object.fromEntries(this.map((registryObject) => [registryObject.id, registryObject.name]));\n  }\n}\n\n/**\n * The Base Registry Object class, providing shared functionality for all registry objects in the system.\n * For the required data, see {@link defineSchema}.\n *\n * @abstract\n * @group Base Classes\n */\nexport class RegistryEntry extends foundry.abstract.DataModel {\n  /** @override */\n  static defineSchema() {\n    return {\n      _id: new fields.StringField({ required: true, blank: false, readonly: true }),\n      name: new fields.StringField({ required: false, initial: \"\", localize: true }),\n      flags: new fields.ObjectField({ required: false, initial: {} }),\n      namespace: new fields.StringField({ required: true, blank: false }),\n    };\n  }\n\n  /**\n   * The unique key of the value.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * Prepares the data of the registry entry.\n   */\n  prepareData() {\n    this.reset();\n\n    // Localize fields marked for localization\n    for (const [name, field] of Object.entries(this.constructor.schema.fields)) {\n      if (field instanceof fields.StringField && field.options.localize === true)\n        this[name] = game.i18n.localize(this[name]);\n    }\n  }\n}\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single damage type entry in the {@link DamageTypes} registry.\n *\n * @group Damage Types\n */\nexport class DamageType extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      abbr: new fields.StringField({ required: false, blank: false, nullable: true, initial: null }),\n      icon: new fields.StringField({ required: false, initial: \"\" }),\n      img: new fields.FilePathField({ categories: [\"IMAGE\"] }),\n      category: new fields.StringField({\n        required: true,\n        blank: false,\n        initial: \"misc\",\n        choices: () => DamageTypes.CATEGORIES,\n      }),\n      isModifier: new fields.BooleanField({ required: false, initial: false }),\n      color: new fields.StringField({ required: true, initial: \"black\" }),\n    };\n  }\n}\n/**\n * The singleton registry of damage types.\n * At runtime this registry is accessible as `pf1.registry.damageTypes`.\n *\n * @group Damage Types\n * @see {@link Registry}\n * @see {@link DamageType}\n * @augments {Registry<DamageType>}\n */\nexport class DamageTypes extends Registry {\n  /** @inheritdoc */\n  static model = DamageType;\n\n  /**\n   * An array of allowed categories of damage types.\n   */\n  static CATEGORIES = /** @type {const} */ ([\"physical\", \"energy\", \"misc\"]);\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"untyped\",\n      name: \"PF1.DamageTypes.untyped.Label\",\n      icon: \"ra ra-uncertainty\",\n      category: \"misc\",\n    },\n    {\n      _id: \"slashing\",\n      name: \"PF1.DamageTypes.slashing.Label\",\n      abbr: \"PF1.DamageTypes.slashing.Abbr\",\n      icon: \"ra ra-sword\",\n      color: \"yellow\",\n      category: \"physical\",\n    },\n    {\n      _id: \"piercing\",\n      name: \"PF1.DamageTypes.piercing.Label\",\n      abbr: \"PF1.DamageTypes.piercing.Abbr\",\n      icon: \"ra ra-spear-head\",\n      color: \"blue\",\n      category: \"physical\",\n    },\n    {\n      _id: \"bludgeoning\",\n      name: \"PF1.DamageTypes.bludgeoning.Label\",\n      abbr: \"PF1.DamageTypes.bludgeoning.Abbr\",\n      icon: \"ra ra-large-hammer\",\n      color: \"red\",\n      category: \"physical\",\n    },\n    {\n      _id: \"fire\",\n      name: \"PF1.DamageTypes.fire.Label\",\n      icon: \"ra ra-fire\",\n      color: \"orange\",\n      category: \"energy\",\n    },\n    {\n      _id: \"cold\",\n      name: \"PF1.DamageTypes.cold.Label\",\n      icon: \"ra ra-frost-emblem\",\n      color: \"aqua\",\n      category: \"energy\",\n    },\n    {\n      _id: \"electric\",\n      name: \"PF1.DamageTypes.electricity.Label\",\n      icon: \"ra ra-lightning-bolt\",\n      color: \"yellow\",\n      category: \"energy\",\n    },\n    {\n      _id: \"acid\",\n      name: \"PF1.DamageTypes.acid.Label\",\n      icon: \"ra ra-acid\",\n      color: \"lime\",\n      category: \"energy\",\n    },\n    {\n      _id: \"sonic\",\n      name: \"PF1.DamageTypes.sonic.Label\",\n      icon: \"ra ra-horn-call\",\n      color: \"#00aedb\",\n      category: \"energy\",\n    },\n    {\n      _id: \"force\",\n      name: \"PF1.DamageTypes.force.Label\",\n      icon: \"ra ra-doubled\",\n      color: \"#a200ff\",\n      category: \"misc\",\n    },\n    {\n      _id: \"negative\",\n      name: \"PF1.DamageTypes.negative.Label\",\n      icon: \"ra ra-skull\",\n      color: \"#765898\",\n      category: \"misc\",\n    },\n    {\n      _id: \"positive\",\n      name: \"PF1.DamageTypes.positive.Label\",\n      icon: \"ra ra-sunbeams\",\n      color: \"#f8ed62\",\n      category: \"misc\",\n    },\n    {\n      _id: \"precision\",\n      name: \"PF1.Precision\",\n      icon: \"ra ra-archery-target\",\n      isModifier: true,\n    },\n    {\n      _id: \"nonlethal\",\n      name: \"PF1.Nonlethal\",\n      icon: \"ra ra-hand\",\n      isModifier: true,\n    },\n  ];\n}\n\n/**\n * {@inheritDoc DamageTypes}\n *\n * @group Damage Types\n * @type {DamageTypes}\n */\nexport let damageTypes;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single material type entry in the {@link MaterialTypes} registry.\n *\n * @group Material Types\n */\nexport class MaterialType extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      baseMaterial: new fields.StringField({ required: false, initial: \"steel\" }),\n      addon: new fields.BooleanField({ required: false, initial: false }),\n      basic: new fields.BooleanField({ required: false, initial: false }),\n      masterwork: new fields.BooleanField({ required: false, initial: false }),\n      allowed: new fields.SchemaField({\n        lightBlade: new fields.BooleanField({ required: false, initial: true }),\n        oneHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        twoHandBlade: new fields.BooleanField({ required: false, initial: true }),\n        rangedWeapon: new fields.BooleanField({ required: false, initial: true }),\n        buckler: new fields.BooleanField({ required: false, initial: true }),\n        lightShield: new fields.BooleanField({ required: false, initial: true }),\n        heavyShield: new fields.BooleanField({ required: false, initial: true }),\n        towerShield: new fields.BooleanField({ required: false, initial: true }),\n        lightArmor: new fields.BooleanField({ required: false, initial: true }),\n        mediumArmor: new fields.BooleanField({ required: false, initial: true }),\n        heavyArmor: new fields.BooleanField({ required: false, initial: true }),\n      }),\n      armor: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      shield: new fields.SchemaField({\n        acp: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        maxDex: new fields.NumberField({ required: false, initial: 0, integer: true }),\n        asf: new fields.NumberField({ required: false, initial: 0, integer: true }),\n      }),\n      hardness: new fields.NumberField({ required: false, initial: 10, integer: true, min: 0, positive: false }),\n      healthMultiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n      price: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        perPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        ammunition: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        oneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        twoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedOneHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        rangedTwoHandWeapon: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        shield: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        lightArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        mediumArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n        heavyArmor: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n      }),\n      weight: new fields.SchemaField({\n        multiplier: new fields.NumberField({ required: false, initial: 1.0, integer: false, positive: true }),\n        bonusPerPound: new fields.NumberField({ required: false, initial: 0.0, integer: false, positive: false }),\n      }),\n    };\n  }\n}\n/**\n * The singleton registry of material types.\n * At runtime this registry is accessible as `pf1.registry.materialTypes`.\n *\n * @group Material Types\n * @see {@link Registry}\n * @see {@link MaterialType}\n * @augments {Registry<MaterialType>}\n */\nexport class MaterialTypes extends Registry {\n  /** @inheritdoc */\n  static model = MaterialType;\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"cloth\",\n      name: \"PF1.Materials.Types.Cloth\",\n      basic: true,\n      hardness: 0,\n      healthMultiplier: 0.07,\n    },\n    {\n      _id: \"leather\",\n      name: \"PF1.Materials.Types.Leather\",\n      basic: true,\n      hardness: 2,\n      healthMultiplier: 0.17,\n    },\n    {\n      _id: \"adamantine\",\n      name: \"PF1.Materials.Types.Adamantine\",\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      hardness: 20,\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 60.0,\n        lightWeapon: 3000.0,\n        oneHandWeapon: 3000.0,\n        twoHandWeapon: 3000.0,\n        rangedOneHandWeapon: 3000.0,\n        rangedTwoHandWeapon: 3000.0,\n        lightArmor: 5000.0,\n        mediumArmor: 10000.0,\n        heavyArmor: 15000.0,\n      },\n    },\n    {\n      _id: \"alchemicalsilver\",\n      name: \"PF1.Materials.Types.AlchemicalSilver\",\n      addon: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      hardness: 8,\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 2.0,\n        lightWeapon: 20.0,\n        oneHandWeapon: 90.0,\n        twoHandWeapon: 180.0,\n        rangedOneHandWeapon: 90.0,\n        rangedTwoHandWeapon: 180.0,\n      },\n    },\n    {\n      _id: \"angelskin\",\n      name: \"PF1.Materials.Types.AngelSkin\",\n      baseMaterial: \"leather\",\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      hardness: 5,\n      healthMultiplier: 0.17,\n      price: {\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"aszite\",\n      name: \"PF1.Materials.Types.Aszite\",\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 750.0,\n        heavyArmor: 1000.0,\n      },\n      weight: {\n        multiplier: 1.1,\n      },\n    },\n    {\n      _id: \"blackwood\",\n      name: \"PF1.Materials.Types.Blackwood\",\n      baseMaterial: \"wood\",\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      hardness: 7,\n      price: {\n        perPound: 20.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"bloodcrystal\",\n      name: \"PF1.Materials.Types.BloodCrystal\",\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        ammunition: 30.0,\n        lightWeapon: 1500.0,\n        oneHandWeapon: 1500.0,\n        twoHandWeapon: 1500.0,\n        rangedOneHandWeapon: 1500.0,\n        rangedTwoHandWeapon: 1500.0,\n      },\n    },\n    {\n      _id: \"caphorite\",\n      name: \"PF1.Materials.Types.Caphorite\",\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n      },\n    },\n    {\n      _id: \"coldiron\",\n      name: \"PF1.Materials.Types.ColdIron\",\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"cryptstone\",\n      name: \"PF1.Materials.Types.Cryptstone\",\n      baseMaterial: \"stone\",\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"darkleafcloth\",\n      name: \"PF1.Materials.Types.DarkleafCloth\",\n      baseMaterial: \"leather\",\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: -10,\n      },\n      healthMultiplier: 4.0,\n      price: {\n        lightArmor: 750.0,\n        mediumArmor: 1500.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"darkwood\",\n      name: \"PF1.Materials.Types.Darkwood\",\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      hardness: 5,\n      price: {\n        perPound: 10.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"dragonhide\",\n      name: \"PF1.Materials.Types.Dragonhide\",\n      baseMaterial: \"leather\",\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        buckler: false,\n        towerShield: false,\n      },\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"druchite\",\n      name: \"PF1.Materials.Types.Druchite\",\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      healthMultiplier: 1.34,\n      price: {\n        ammunition: 12.0,\n        lightWeapon: 1200.0,\n        oneHandWeapon: 1200.0,\n        twoHandWeapon: 1200.0,\n        rangedOneHandWeapon: 1200.0,\n        rangedTwoHandWeapon: 1200.0,\n        lightArmor: 1000.0,\n        mediumArmor: 1500.0,\n        heavyArmor: 2000.0,\n      },\n    },\n    {\n      _id: \"eelhide\",\n      name: \"PF1.Materials.Types.EelHide\",\n      baseMaterial: \"leather\",\n      masterwork: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      armor: {\n        acp: -1,\n        maxDex: 1,\n      },\n      price: {\n        lightArmor: 1200.0,\n        mediumArmor: 1800.0,\n      },\n    },\n    {\n      _id: \"elysianbronze\",\n      name: \"PF1.Materials.Types.ElysianBronze\",\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"fireforgedsteel\",\n      name: \"PF1.Materials.Types.FireForgedSteel\",\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"frostforgedsteel\",\n      name: \"PF1.Materials.Types.FrostForgedSteel\",\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 600.0,\n        oneHandWeapon: 600.0,\n        twoHandWeapon: 600.0,\n        rangedOneHandWeapon: 600.0,\n        rangedTwoHandWeapon: 600.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"glaucite\",\n      name: \"PF1.Materials.Types.Glaucite\",\n      allowed: {\n        buckler: false,\n      },\n      hardness: 15,\n      price: {\n        multiplier: 3.0,\n      },\n      weight: {\n        multiplier: 1.5,\n      },\n    },\n    {\n      _id: \"greenwood\",\n      name: \"PF1.Materials.Types.Greenwood\",\n      baseMaterial: \"wood\",\n      masterwork: true,\n      price: {\n        perPound: 50.0,\n        ammunition: 6.0,\n        lightWeapon: 300.0,\n        oneHandWeapon: 300.0,\n        twoHandWeapon: 300.0,\n        rangedOneHandWeapon: 300.0,\n        rangedTwoHandWeapon: 300.0,\n        shield: 150.0,\n        lightArmor: 150.0,\n        mediumArmor: 150.0,\n        heavyArmor: 150.0,\n      },\n    },\n    {\n      _id: \"griffonmane\",\n      name: \"PF1.Materials.Types.GriffonMane\",\n      baseMaterial: \"cloth\",\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      hardness: 1,\n      healthMultiplier: 2.0,\n      price: {\n        perPound: 50.0,\n        lightArmor: 200.0,\n      },\n    },\n    {\n      _id: \"heatstoneplating\",\n      name: \"PF1.Materials.Types.HeatstonePlating\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightArmor: 800.0,\n        mediumArmor: 1000.0,\n      },\n      weight: {\n        bonusPerPound: 0.2,\n      },\n    },\n    {\n      _id: \"horacalcum\",\n      name: \"PF1.Materials.Types.Horacalcum\",\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      hardness: 15,\n      healthMultiplier: 1.25,\n      price: {\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        lightArmor: 10000.0,\n        mediumArmor: 30000.0,\n        heavyArmor: 60000.0,\n      },\n    },\n    {\n      _id: \"inubrix\",\n      name: \"PF1.Materials.Types.Inubrix\",\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      hardness: 5,\n      healthMultiplier: 0.34,\n      price: {\n        ammunition: 100.0,\n        lightWeapon: 5000.0,\n        oneHandWeapon: 5000.0,\n        twoHandWeapon: 5000.0,\n        rangedOneHandWeapon: 5000.0,\n        rangedTwoHandWeapon: 5000.0,\n      },\n    },\n    {\n      _id: \"lazurite\",\n      name: \"PF1.Materials.Types.Lazurite\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 1500.0,\n        mediumArmor: 2500.0,\n        heavyArmor: 3500.0,\n      },\n    },\n    {\n      _id: \"liquidglass\",\n      name: \"PF1.Materials.Types.LiquidGlass\",\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 250.0,\n        ammunition: 16.0,\n        lightWeapon: 800.0,\n        oneHandWeapon: 800.0,\n        twoHandWeapon: 800.0,\n        rangedOneHandWeapon: 800.0,\n        rangedTwoHandWeapon: 800.0,\n      },\n    },\n    {\n      _id: \"livingsteel\",\n      name: \"PF1.Materials.Types.LivingSteel\",\n      hardness: 15,\n      healthMultiplier: 1.16,\n      price: {\n        perPound: 250.0,\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 100.0,\n        lightArmor: 500.0,\n        mediumArmor: 1000.0,\n        heavyArmor: 1500.0,\n      },\n    },\n    {\n      _id: \"mithral\",\n      name: \"PF1.Materials.Types.Mithral\",\n      masterwork: true,\n      armor: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      shield: {\n        acp: 3,\n        maxDex: 2,\n        asf: -10,\n      },\n      hardness: 15,\n      price: {\n        shield: 1000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 4000.0,\n        heavyArmor: 9000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"noqual\",\n      name: \"PF1.Materials.Types.Noqual\",\n      armor: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      shield: {\n        acp: -3,\n        maxDex: 2,\n        asf: 20,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n        shield: 2000.0,\n        lightArmor: 4000.0,\n        mediumArmor: 8000.0,\n        heavyArmor: 12000.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"paueliel\",\n      name: \"PF1.Materials.Types.Paueliel\",\n      masterwork: true,\n      shield: {\n        acp: -2,\n      },\n      hardness: 7,\n      price: {\n        perPound: 15.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"pyresteel\",\n      name: \"PF1.Materials.Types.PyreSteel\",\n      allowed: {\n        buckler: false,\n      },\n      healthMultiplier: 0.5,\n      price: {\n        multiplier: 2.0,\n      },\n    },\n    {\n      _id: \"siccatite\",\n      name: \"PF1.Materials.Types.Siccatite\",\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"silversheen\",\n      name: \"PF1.Materials.Types.Silversheen\",\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        ammunition: 15.0,\n        lightWeapon: 750.0,\n        oneHandWeapon: 750.0,\n        twoHandWeapon: 750.0,\n        rangedOneHandWeapon: 750.0,\n        rangedTwoHandWeapon: 750.0,\n      },\n    },\n    {\n      _id: \"singingsteel\",\n      name: \"PF1.Materials.Types.SingingSteel\",\n      masterwork: true,\n      armor: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      shield: {\n        acp: -1,\n        maxDex: 1,\n        asf: -5,\n      },\n      healthMultiplier: 0.67,\n      price: {\n        perPound: 600.0,\n        ammunition: 120.0,\n        lightWeapon: 6000.0,\n        oneHandWeapon: 6000.0,\n        twoHandWeapon: 6000.0,\n        rangedOneHandWeapon: 6000.0,\n        rangedTwoHandWeapon: 6000.0,\n        shield: 7000.0,\n        lightArmor: 750.0,\n        mediumArmor: 9000.0,\n        heavyArmor: 12000.0,\n      },\n    },\n    {\n      _id: \"spiresteel\",\n      name: \"PF1.Materials.Types.SpireSteel\",\n      masterwork: true,\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        ammunition: 10.0,\n        lightWeapon: 2000.0,\n        oneHandWeapon: 2000.0,\n        twoHandWeapon: 2000.0,\n        rangedOneHandWeapon: 2000.0,\n        rangedTwoHandWeapon: 2000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 3000.0,\n      },\n    },\n    {\n      _id: \"steel\",\n      name: \"PF1.Materials.Types.Steel\",\n      basic: true,\n    },\n    {\n      _id: \"sunsilk\",\n      name: \"PF1.Materials.Types.Sunsilk\",\n      baseMaterial: \"cloth\",\n      addon: true,\n      allowed: {\n        lightBlade: false,\n        oneHandBlade: false,\n        twoHandBlade: false,\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n      },\n      price: {\n        lightArmor: 6000.0,\n        mediumArmor: 6000.0,\n        heavyArmor: 6000.0,\n      },\n    },\n    {\n      _id: \"sunsilver\",\n      name: \"PF1.Materials.Types.Sunsilver\",\n      masterwork: true,\n      hardness: 8,\n      healthMultiplier: 0.34,\n      price: {\n        perPound: 25.0,\n      },\n    },\n    {\n      _id: \"throneglass\",\n      name: \"PF1.Materials.Types.Throneglass\",\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 13000.0,\n        oneHandWeapon: 13000.0,\n        twoHandWeapon: 13000.0,\n      },\n    },\n    {\n      _id: \"viridium\",\n      name: \"PF1.Materials.Types.Viridium\",\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      hardness: 5,\n      price: {\n        ammunition: 20.0,\n        lightWeapon: 200.0,\n        oneHandWeapon: 200.0,\n        twoHandWeapon: 200.0,\n        rangedOneHandWeapon: 200.0,\n        rangedTwoHandWeapon: 200.0,\n      },\n    },\n    {\n      _id: \"voidglass\",\n      name: \"PF1.Materials.Types.Voidglass\",\n      price: {\n        lightWeapon: 1000.0,\n        oneHandWeapon: 1000.0,\n        twoHandWeapon: 1000.0,\n        rangedOneHandWeapon: 1000.0,\n        rangedTwoHandWeapon: 1000.0,\n        shield: 3000.0,\n        lightArmor: 1000.0,\n        mediumArmor: 2000.0,\n        heavyArmor: 4500.0,\n      },\n    },\n    {\n      _id: \"whipwood\",\n      name: \"PF1.Materials.Types.Whipwood\",\n      baseMaterial: \"wood\",\n      allowed: {\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        lightWeapon: 500.0,\n        oneHandWeapon: 500.0,\n        twoHandWeapon: 500.0,\n        rangedOneHandWeapon: 500.0,\n        rangedTwoHandWeapon: 500.0,\n      },\n    },\n    {\n      _id: \"wyroot\",\n      name: \"PF1.Materials.Types.Wyroot\",\n      baseMaterial: \"wood\",\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n    },\n    {\n      _id: \"bone\",\n      name: \"PF1.Materials.Types.Bone\",\n    },\n    {\n      _id: \"bronze\",\n      name: \"PF1.Materials.Types.Bronze\",\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"glass\",\n      name: \"PF1.Materials.Types.Glass\",\n      allowed: {\n        buckler: false,\n      },\n    },\n    {\n      _id: \"gold\",\n      name: \"PF1.Materials.Types.Gold\",\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 10.0,\n      },\n      weight: {\n        multiplier: 0.5,\n      },\n    },\n    {\n      _id: \"obsidian\",\n      name: \"PF1.Materials.Types.Obsidian\",\n      allowed: {\n        rangedWeapon: false,\n        buckler: false,\n        lightShield: false,\n        heavyShield: false,\n        towerShield: false,\n        lightArmor: false,\n        mediumArmor: false,\n        heavyArmor: false,\n      },\n      price: {\n        multiplier: 0.5,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"stone\",\n      name: \"PF1.Materials.Types.Stone\",\n      allowed: {\n        buckler: false,\n      },\n      price: {\n        multiplier: 0.25,\n      },\n      weight: {\n        multiplier: 0.75,\n      },\n    },\n    {\n      _id: \"wood\",\n      name: \"PF1.Materials.Types.Wood\",\n      baseMaterial: \"wood\",\n      basic: true,\n      hardness: 5,\n    },\n    {\n      _id: \"magic\",\n      name: \"PF1.Materials.Types.Magic\",\n      addon: true,\n    },\n    {\n      _id: \"epic\",\n      name: \"PF1.Materials.Types.Epic\",\n      addon: true,\n    },\n  ];\n}\n\n/**\n * {@inheritDoc MaterialTypes}\n *\n * @group Material Types\n * @type {MaterialTypes}\n */\nexport let materialTypes;\n","export class DamageTypeSelector extends FormApplication {\n  /**\n   * @internal\n   * @type {string}\n   */\n  path;\n  /**\n   * @internal\n   * @type {DamageTypes}\n   */\n  damage;\n\n  /**\n   * @param {object} object - Parent object\n   * @param {string} path - Path to damage data in object\n   * @param {DamageTypes} data - Damage data\n   * @param {object} options - Application options\n   */\n  constructor(object, path, data, options = {}) {\n    super(object, options);\n    this.path = path;\n    this.damage = foundry.utils.deepClone(data) || { values: [] };\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 720,\n      height: 590,\n      template: \"systems/pf1/templates/apps/damage-type-selector.hbs\",\n      scrollY: [\".damage-type-categories\", \".damage-modifiers\"],\n      closeOnSubmit: true,\n    });\n  }\n  get title() {\n    return game.i18n.localize(\"PF1.DamageType\");\n  }\n  get id() {\n    return `damage-types-${this.object.id}-${this.path.replaceAll(\".\", \"_\")}`;\n  }\n\n  get damageCategorySortOrder() {\n    return [\"physical\", \"energy\", \"misc\"];\n  }\n\n  async getData() {\n    const damageTypes = pf1.registry.damageTypes\n      .filter((damageType) => !damageType.isModifier)\n      .map((dt) => ({ ...dt, id: dt.id, enabled: this.damage.values.includes(dt.id) }));\n\n    const sortOrder = this.damageCategorySortOrder;\n\n    const context = {\n      damage: this.damage,\n      damageTypes,\n      damageModifiers: pf1.registry.damageTypes\n        .filter((o) => o.isModifier)\n        .map((dm) => ({ ...dm, id: dm.id, enabled: this.damage.values.includes(dm.id) })),\n      // Damage type categories\n      damageCategories: damageTypes\n        .reduce((cur, o) => {\n          let categoryObj = cur.find((o2) => o2.key === o.category);\n          if (!categoryObj) {\n            categoryObj = { key: o.category, label: `PF1.DamageTypeCategory.${o.category}`, types: [] };\n            cur.push(categoryObj);\n          }\n          categoryObj.types.push(o);\n          return cur;\n        }, [])\n        .sort((a, b) => {\n          const idxA = sortOrder.indexOf(a.key);\n          const idxB = sortOrder.indexOf(b.key);\n          if (idxA === -1 && idxB >= 0) return 1;\n          if (idxB === -1 && idxA >= 0) return -1;\n          if (idxA > idxB) return 1;\n          if (idxA < idxB) return -1;\n          return 0;\n        }),\n    };\n\n    return context;\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    html.find(`.damage-type`).on(\"click\", this._toggleDamageType.bind(this));\n    html.find(`*[name]`).on(\"change\", this._onChangeData.bind(this));\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onChangeData(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n    const dataPath = elem.name;\n\n    let value = elem.value;\n    if (elem.type === \"checkbox\") value = elem.checked;\n\n    switch (elem.dataset.dtype) {\n      case \"Boolean\":\n        value = Boolean(value);\n        break;\n      case \"Number\":\n        value = Number(value);\n        break;\n    }\n\n    foundry.utils.setProperty(this.damage, dataPath, value);\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _toggleDamageType(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const dt = a.dataset.id;\n\n    if (this.damage.values.includes(dt)) this.damage.values.splice(this.damage.values.indexOf(dt), 1);\n    else this.damage.values.push(dt);\n    this.render();\n  }\n\n  /**\n   * @override\n   * @param {Event} event\n   * @param {object} formData\n   */\n  async _updateObject(event, formData) {\n    return this.object.update({ [this.path]: this.damage });\n  }\n}\n\n/**\n * @typedef {object} DamageTypes\n * @property {string[]} values - Damage type IDs\n * @property {string} custom - Semicolon deliminated list of custom damage type.\n */\n","import { damageTypes } from \"module/registry/damage-types.mjs\";\nimport { materialTypes } from \"module/registry/material-types.mjs\";\nimport { DamageTypeSelector } from \"./damage-type-selector.mjs\";\n\n/**\n * Extend the FormApplication to handle creating, removing, and editing\n * and Actor's Damage Reduction and Energy Resistances.\n *\n */\nexport class ActorResistanceSelector extends FormApplication {\n  /** @override */\n  constructor(...args) {\n    super(...args);\n\n    /** Basic properties for handling operations */\n    // Prepare data and convert it into format compatible with the editor\n    this.isDR = this.options.isDR === true;\n\n    /** Working copy of our trait's data */\n    const resistances = foundry.utils.deepClone(foundry.utils.getProperty(this.object, this.attribute) ?? {});\n\n    /**\n     * Custom user input for damage sources\n     *\n     * @property\n     * @type {string}\n     */\n    this.custom = resistances.custom;\n\n    /**\n     * Original copy of the trait's entries\n     *\n     * @property\n     * @type {Object<string, any>}\n     */\n    this.originalEntries = resistances.value;\n    this.entries = resistances.value;\n\n    /** Processing Damage sources */\n    const damageOBJ = pf1.registry.damageTypes.filter((dType) => !dType.isModifier);\n    const damages = {};\n\n    // Loop through the registry to filter not-applicable damage sources\n    Object.values(damageOBJ)\n      .sort()\n      .forEach((dType) => {\n        // If we are looking for DR, we want to exclude types that are energy or not untyped\n        if ((dType.category === \"energy\" || dType.category === \"misc\") && this.isDR) {\n          return;\n        }\n\n        // If we are looking for ERES, we want to exclude types that are physical or untyped\n        if ((dType.category === \"physical\" || (dType.category === \"misc\" && dType.id === \"untyped\")) && !this.isDR) {\n          return;\n        }\n\n        damages[dType.id] = dType.name;\n      });\n\n    if (this.isDR) {\n      this.options.id = \"damage-resistance-selector\";\n\n      Object.keys(pf1.config.damageResistances).forEach((dType) => {\n        damages[dType] = pf1.config.damageResistances[dType];\n      });\n\n      pf1.registry.materialTypes.forEach((material) => {\n        if (\n          material.allowed.lightBlade ||\n          material.allowed.oneHandBlade ||\n          material.allowed.twoHandBlade ||\n          material.allowed.rangedWeapon\n        ) {\n          damages[material.id] = material.name;\n        }\n      });\n    }\n\n    /**\n     * A list of key-value pairs for dropdown damage types\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this.damages = damages;\n\n    /**\n     * A dropdown list of combination types for multiple damage types\n     *\n     * @property\n     * @type {Object<boolean, string>}\n     */\n    this.operators = {\n      true: \"PF1.Application.DamageResistanceSelector.CombinationOr\",\n      false: \"PF1.Application.DamageResistanceSelector.CombinationAnd\",\n    };\n  }\n\n  /** @override */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: \"energy-resistance-selector\",\n      classes: [\"pf1\", \"resistance\"],\n      template: \"systems/pf1/templates/apps/damage-resistance-selector.hbs\",\n      height: \"auto\",\n      closeOnSubmit: true,\n      submitOnClose: false,\n    });\n  }\n\n  /** @override */\n  get title() {\n    return game.i18n.localize(\"PF1.Application.DamageResistanceSelector.\" + (this.isDR ? \"DR\" : \"ER\") + \"Title\");\n  }\n\n  get attribute() {\n    return this.options.name;\n  }\n\n  get fields() {\n    return this.options.fields.split(\";\");\n  }\n\n  get dtypes() {\n    return this.options.dtypes.split(\";\");\n  }\n\n  get dataCount() {\n    return this.fields.length;\n  }\n\n  /**\n   * Fetches simple data for the interface\n   *\n   */\n  getData() {\n    return {\n      custom: this.custom,\n      damages: this.damages,\n      operators: this.operators,\n      entries: this.entries,\n      fields: this.fields,\n      dtypes: this.dtypes,\n      isDR: this.isDR,\n    };\n  }\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    html.find(\".resistance-control\").click(this._onResistanceControl.bind(this));\n\n    html.find(\"tr td input\").change(this._onResistanceChange.bind(this));\n    html.find(\"tr td select\").change(this._onResistanceChange.bind(this));\n    html.find(\"input[name=custom]\").change(this._onResistanceCustomChange.bind(this));\n  }\n\n  /**\n   * Updates the actor with the new resistances\n   *\n   * @override\n   * @param {Event} event\n   * @param {any} formData\n   * @returns  The updated actor\n   */\n  async _updateObject(event, formData) {\n    const updateData = {};\n\n    const entries = this.entries.map((value) => {\n      // Ensure no matter what, we have values\n      value.types[0] ??= \"\";\n      value.types[1] ??= \"\";\n\n      if (value.types[0] === \"\" && value.types[1] !== \"\") {\n        value.types[0] = value.types[1];\n        value.types[1] = \"\";\n      }\n      if (value.types[0] === value.types[1]) {\n        value.types[1] = \"\";\n      }\n\n      // Convert from string key to boolean value\n      value.operator = String(value.operator).toLowerCase() === \"true\";\n      return value;\n    });\n\n    updateData[this.attribute + \".value\"] = entries;\n    updateData[this.attribute + \".custom\"] = this.custom;\n\n    return this.object.update(updateData);\n  }\n\n  /**\n   * A trigger for an operation to add or delete a resistance entry\n   *\n   * @param {Event} event - The action and associated data that triggered the operation\n   * @returns A call to render (refresh) the UI\n   */\n  async _onResistanceControl(event) {\n    event.preventDefault();\n    const target = event.currentTarget;\n\n    // Add a new blank entry\n    if (target.classList.contains(\"add-resistance\")) {\n      const obj = {\n        amount: 0,\n        types: [this.isDR ? \"\" : \"fire\", \"\"],\n        operator: true,\n      };\n\n      this.entries.push(obj);\n\n      return this.render();\n    }\n\n    // Delete an existign entry instead\n    if (target.classList.contains(\"delete-resistance\")) {\n      const tr = target.closest(\"tr\");\n      const index = parseInt(tr.dataset.index);\n      this.entries.splice(index, 1);\n      return this.render();\n    }\n  }\n\n  /**\n   * A triggered operation when any inputs or dropdowns are interacted\n   * with to save the data from UI\n   *\n   * @param {Event} event\n   */\n  async _onResistanceChange(event) {\n    const target = event.currentTarget;\n\n    const tr = target.closest(\"tr.resistance\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = target.dataset.index;\n    const value = target.value;\n    let updateValue = null;\n\n    // Sanity-check our updated value\n    if (target.dataset.dtype === \"Number\") {\n      let val = parseFloat(value);\n      if (isNaN(val)) val = 0;\n      updateValue = Math.floor(val * 100) / 100;\n    } else if (target.dataset.dtype === \"Boolean\") updateValue = value === \"true\";\n    else updateValue = value;\n\n    // Process the value into the types array or assign to an entry property\n    switch (index2) {\n      case \"types0\":\n        this.entries[index].types[0] = updateValue;\n        break;\n      case \"types1\":\n        this.entries[index].types[1] = updateValue;\n        break;\n      default:\n        this.entries[index][index2] = updateValue;\n        break;\n    }\n  }\n\n  /**\n   * A triggered operation when the user modifies the custom input section\n   *\n   * @param {Event} event\n   */\n  async _onResistanceCustomChange(event) {\n    const target = event.currentTarget;\n\n    this.custom = target.value;\n  }\n}\n","export class ActorRestDialog extends DocumentSheet {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return foundry.utils.mergeObject(options, {\n      classes: [\"pf1\", \"actor-rest\"],\n      template: \"systems/pf1/templates/apps/actor-rest.hbs\",\n      width: 500,\n      closeOnSubmit: true,\n    });\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.document;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the special traits selection window to include the Actor name\n   *\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Rest\")}: ${this.actor.name}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Update the Actor using the configured options\n   * Remove/unset any flags which are no longer configured\n   *\n   * @param event\n   * @param formData\n   */\n  async _updateObject(event, formData) {\n    this.actor.performRest(formData);\n  }\n}\n","export class PointBuyCalculator extends DocumentSheet {\n  constructor(...args) {\n    super(...args);\n\n    const actorAbl = this.actor.system.abilities;\n\n    this.abilities = [];\n    for (const [k, name] of Object.entries(pf1.config.abilities)) {\n      this.abilities.push({\n        key: k,\n        name: name,\n        value: actorAbl[k]?.value ?? 10,\n      });\n    }\n\n    const ablValues = Object.keys(pf1.config.abilityCost).map((i) => Number(i));\n    this.min = Math.min(...ablValues);\n    this.max = Math.max(...ablValues);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"pointbuy-calculator\"],\n      template: \"systems/pf1/templates/apps/point-buy-calculator.hbs\",\n      width: 320,\n      height: \"auto\",\n      closeOnSubmit: false,\n      submitOnClose: false,\n    });\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.Application.PointBuy.Title\")}: ${this.object.name}`;\n  }\n\n  get actor() {\n    return this.document;\n  }\n\n  getData() {\n    const usedPoints = this.getSpentPoints();\n\n    const pointBuy = pf1.config.pointBuy;\n    const limitsArr = Object.entries(pointBuy).map(([key, ldata]) => ({ ...ldata, key }));\n    limitsArr.sort((a, b) => a.points - b.points);\n\n    // Find most relevant category\n    let closest = limitsArr[0].key;\n    for (const l of limitsArr) {\n      const prev = pointBuy[closest].points;\n      if (prev < usedPoints) closest = l.key;\n    }\n\n    return {\n      abilities: this.abilities,\n      points: usedPoints,\n      limits: limitsArr,\n      closest,\n      invalidPoints: pointBuy[closest].points !== usedPoints,\n    };\n  }\n\n  getSpentPoints() {\n    let result = 0;\n\n    for (const a of this.abilities) {\n      result += pf1.config.abilityCost[a.value];\n    }\n\n    return result;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".control\").click(this._onAbilityControl.bind(this));\n  }\n\n  _onAbilityControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const ablKey = a.closest(\".ability\").dataset.ability;\n    const abl = this.abilities.find((o) => o.key === ablKey);\n\n    if (a.classList.contains(\"add\")) {\n      abl.value = Math.min(this.max, abl.value + 1);\n    } else if (a.classList.contains(\"subtract\")) {\n      abl.value = Math.max(this.min, abl.value - 1);\n    }\n    this.render();\n  }\n\n  _updateObject() {\n    const updateData = {};\n    for (const a of this.abilities) {\n      updateData[`system.abilities.${a.key}.value`] = a.value;\n    }\n    this.actor.update(updateData);\n\n    this.close();\n  }\n}\n","export class Widget_ItemPicker {\n  constructor(callback, { items, columns = 3 } = {}) {\n    /**\n     * @property\n     * The HTML element that represents this widget.\n     */\n    this.element = null;\n\n    /**\n     * @property\n     * The callback to fire if an item is clicked.\n     */\n    this.callback = callback;\n\n    /**\n     * @typedef Widget_ItemPicker_Item\n     * @type {object}\n     * @property {string} value\n     * @property {string} label\n     */\n    /**\n     * @property\n     * @type Widget_ItemPicker_Item[]\n     * The items in this widget.\n     */\n    this._items = items;\n\n    /**\n     * @property\n     * @type {number}\n     * The maximum amount of columns shown.\n     */\n    this.columns = columns;\n  }\n\n  render(parentElem) {\n    // Generate widget\n    const rootElem = $($.parseHTML('<div class=\"widget item-picker\"></div>'));\n    // Add rows\n    let rowElem;\n    for (let a = 0; a < this._items.length; a++) {\n      const item = this._items[a];\n      if (a % this.columns === 0) {\n        rowElem = $($.parseHTML('<div class=\"row\"></div>'));\n        rootElem.append(rowElem);\n      }\n\n      const itemElem = $($.parseHTML(`<div class=\"item\" value=\"${item.value}\">${item.label}</div>`));\n      const widthRate = Math.floor(10000 / this.columns) / 100;\n      itemElem.css(\"flex\", `0 0 calc(${widthRate}% - 4px)`);\n      rowElem.append(itemElem);\n    }\n\n    // Replace parent element\n    if (!(parentElem instanceof jQuery)) parentElem = $(parentElem);\n    rootElem.css(\"position\", \"absolute\");\n    rootElem.css(\"left\", `${parentElem[0].offsetLeft}px`);\n    rootElem.css(\"position\", `${parentElem[0].offsetBottom}px`);\n    parentElem.parent().append(rootElem);\n\n    this.element = rootElem;\n\n    window.setTimeout(() => {\n      this.activateListeners(rootElem);\n    }, 10);\n  }\n\n  activateListeners(html) {\n    // Click item callback\n    html.find(\".item\").click(this._onClickItem.bind(this));\n\n    // Cancel widget\n    this._cancelCallback = this._onCancel.bind(this);\n    document.addEventListener(\"click\", this._cancelCallback);\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    const target = event.target;\n    let node = target;\n    if (node === this.element[0]) return;\n    while (node.parentNode) {\n      if (node === this.element[0]) return;\n      node = node.parentNode;\n    }\n\n    this.cancel();\n  }\n\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    this.callback($(a).attr(\"value\"));\n  }\n\n  cancel() {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    this.element.remove();\n  }\n}\n","/**\n * Level-up and class addition handler.\n */\nexport class LevelUpForm extends FormApplication {\n  /**\n   * @internal\n   * @type {ActorPF}\n   */\n  actor;\n\n  /**\n   * Relevant token if any.\n   *\n   * @internal\n   * @type {TokenDocument}\n   */\n  token;\n\n  /**\n   * Temporary clone of the actor for seeing the results of various modifications with.\n   *\n   * @internal\n   * @type {ActorPF}\n   */\n  simulacra;\n\n  /**\n   * Temporary clone of the class to simulate changes.\n   *\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  mold;\n\n  config = {\n    health: { manual: null, type: null, value: 0 },\n    fcb: { choice: \"none\", unavailable: false, available: true },\n    visibility: null,\n    feats: 0,\n    abilityScore: {\n      new: 0,\n      used: 0,\n      get available() {\n        return this.new - this.used;\n      },\n    },\n  };\n\n  static ICONS = {\n    fcb: {\n      none: \"\",\n      hp: \"systems/pf1/icons/skills/green_19.jpg\",\n      skill: \"systems/pf1/icons/items/inventory/dice.jpg\",\n      alt: \"systems/pf1/icons/skills/affliction_22.jpg\",\n    },\n    health: {\n      auto: \"\",\n      manual: \"systems/pf1/icons/skills/green_19.jpg\",\n      roll: \"systems/pf1/icons/items/inventory/dice.jpg\",\n    },\n  };\n\n  useBackgroundSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n  /**\n   * @internal\n   * @param {Actor} actor\n   * @param {Item} item\n   * @param {object} options\n   */\n  constructor(actor, item = null, options = {}) {\n    super(item, options);\n\n    if (item?.type !== \"class\") throw new Error(\"Can not level-up non-class items.\");\n\n    this.actor = actor ?? item?.actor ?? options.actor;\n\n    if (!this.actor) throw new Error(\"LevelUpForm needs an actor\");\n\n    this.token = this.actor?.token ?? options.token;\n\n    delete this.options.actor;\n    delete this.options.token;\n\n    this.config.isMythic = item.subType === \"mythic\";\n\n    this.config.level = {\n      old: item.system.level,\n      new: item.system.level + 1,\n      levelUp: item.system.level > 0,\n      hd: {\n        old: this.actor.system.attributes.hd.total,\n        new: null,\n      },\n    };\n\n    const config = this.config;\n    this.config.abilityScore.upgrades = Object.fromEntries(\n      Object.entries(pf1.config.abilities).map(([key, label]) => [\n        key,\n        {\n          ...this.actor.system.abilities[key],\n          key,\n          label,\n          added: 0,\n          bonus: 0,\n          get isEnhanced() {\n            return this.total !== this.base;\n          },\n          get isNull() {\n            return this.base === null;\n          },\n          get isValid() {\n            return !this.isNull;\n          },\n          get isAvailable() {\n            return this.isValid && config.abilityScore.available > 0;\n          },\n          get isModified() {\n            return this.added != 0;\n          },\n        },\n      ])\n    );\n\n    // By default hide NPCs for GMs\n    if (!this.actor.hasPlayerOwner) this.config.visibility = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    this._initData();\n    this._initChoices();\n  }\n\n  /**\n   * @type {pf1.documents.item.ItemClassPF}\n   */\n  get item() {\n    return this.object;\n  }\n\n  set item(cls) {\n    this.object = cls;\n  }\n\n  get id() {\n    const parent = this.actor.uuid.replaceAll(\".\", \"-\");\n    const tag = this.item.system.tag || pf1.utils.createTag(this.item.name);\n    return `level-up-${parent}-class-${tag}`;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"level-up\"],\n      template: \"systems/pf1/templates/apps/level-up.hbs\",\n      scrollY: [\"section\"],\n      width: 820,\n      height: \"auto\",\n      submitOnChange: true,\n      submitOnClose: false,\n      closeOnSubmit: false,\n      resizable: true,\n    });\n  }\n\n  get title() {\n    if (this.isLevelUp)\n      return game.i18n.format(\"PF1.LevelUp.Increase\", { class: this.item.name }) + ` – ${this.actor.name}`;\n    else return game.i18n.format(\"PF1.LevelUp.Add\", { class: this.item.name }) + ` – ${this.actor.name}`;\n  }\n\n  get isLevelUp() {\n    return this.item.system.level > 0;\n  }\n\n  get isNewClass() {\n    return !this.isLevelUp;\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {Item} item - Class item\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item|null|undefined>} - Updated class item if updated or null if process was cancelled. Undefined if this re-opened existing dialog.\n   */\n  static async increaseLevel(actor, item, { token } = {}) {\n    const app = Object.values(actor.apps).find((o) => o instanceof LevelUpForm && o._element && o.item === item);\n\n    if (app) app.render(true, { focus: true });\n    else return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  /**\n   * @param {Actor} actor - Owning actor\n   * @param {object} itemData - Class item data\n   * @param {object} [options={}] - Additional options\n   * @param {TokenDocument} [options.token] - Associated token\n   * @returns {Promise<Item|null>}\n   */\n  static async addClassWizard(actor, itemData, { token } = {}) {\n    // Add class item\n    const item = new Item.implementation(itemData, { parent: actor });\n    // Alter initial data\n    item.updateSource({ system: { hp: 0, level: 0 } });\n    item.reset();\n\n    // Add level up form for new class\n    return new Promise((resolve) => new this(actor, item, { token, resolve }).render(true, { focus: true }));\n  }\n\n  _prepareAssociations() {\n    if (this.config.associations) return;\n\n    const newLevel = this.config.level.new;\n\n    const assocs =\n      this.item.system.links?.classAssociations\n        ?.filter((a) => a.level === newLevel)\n        ?.map((a) => ({ ...fromUuidSync(a.uuid || \"\"), uuid: a.uuid })) ?? [];\n\n    this.config.associations = assocs;\n  }\n\n  async getData() {\n    const hpOptions = game.settings.get(\"pf1\", \"healthConfig\").getClassHD(this.item);\n\n    const itemData = this.item.toObject();\n\n    const fcb = this.config.fcb;\n    fcb.hp = itemData.system.fc?.hp?.value || 0;\n    fcb.skill = itemData.system.fc?.skill?.value || 0;\n    fcb.alt = itemData.system.fc?.alt?.value || 0;\n\n    const result = {\n      ...this.config,\n      item: itemData,\n      document: this.item,\n      actor: this.actor,\n      config: pf1.config,\n      labels: {\n        fcb: {\n          skill: \"PF1.LevelUp.FC.Skill.Label\",\n          hp: \"PF1.LevelUp.FC.HP.Label\",\n          none: \"PF1.LevelUp.FC.None.Label\",\n          alt: \"PF1.LevelUp.FC.Alt.Label\",\n        },\n      },\n      fcb,\n      abilityScore: this.config.abilityScore,\n      icons: this.constructor.ICONS,\n      visibilityOptions: pf1.const.messageVisibility,\n      useBackgroundSkills: this.useBackgroundSkills,\n    };\n\n    // Disallow self roll for non-GMs.\n    if (!game.user.isGM) delete result.visibilityOptions.selfroll;\n\n    result.health.rate = Math.round(hpOptions.rate * 100);\n\n    const hd = this.config.level.hd.total;\n    result.abilityScore.new = pf1.config.levelAbilityScores[hd] ?? 0;\n\n    result.health.value = result.health.delta;\n    switch (result.health.type) {\n      case \"manual\":\n        result.health.value += result.health.raw;\n        break;\n      case \"auto\":\n        result.health.value = result.health.raw;\n        break;\n      case \"roll\":\n        result.health.value = result.health.raw;\n        break;\n    }\n\n    result.skills.delta.ranks = result.skills.delta.adv;\n\n    // Apply FCB\n    result.health.bonus = 0;\n    switch (result.fcb.choice) {\n      case \"hp\":\n        result.health.value += 1;\n        result.health.bonus += 1;\n        break;\n      case \"skill\":\n        result.skills.delta.ranks += 1;\n        break;\n    }\n\n    // Apply abl mod\n    //result.health.value += result.health.ability.mod;\n\n    // Next ability score\n    result.abilityScore.next = this._getNextAbilityScoreLandmark();\n\n    result.ready = this.isReady();\n\n    return result;\n  }\n\n  /**\n   * Determine if this level-up is finalized.\n   *\n   * @returns {boolean}\n   */\n  isReady() {\n    if (this.config.isMythic) return true;\n    if (!this.config.health.type) return false;\n    return this.config.abilityScore.available == 0;\n  }\n\n  /**\n   * Get level at which next ability score is gained.\n   *\n   * @internal\n   * @returns {number|null}\n   */\n  _getNextAbilityScoreLandmark() {\n    if (this.config.isMythic) return null;\n\n    const hd = this.config.level.hd.total;\n\n    const current = pf1.config.levelAbilityScores[hd] ?? 0;\n    if (current > 0) return null;\n\n    // Next ability score\n    const gains = Object.entries(pf1.config.levelAbilityScores)\n      .map(([level, gained]) => Number(level))\n      .filter((level) => level > hd);\n\n    return gains[0] ?? null;\n  }\n\n  /**\n   * Default health selection if auto health is not used.\n   *\n   * @internal\n   * @returns {string}\n   */\n  _getDefaultHealthOption() {\n    if (this.item.subType === \"mythic\") return \"static\";\n    if (this.config.health.auto) return \"auto\";\n    if (this.config.health.maximized) return \"max\";\n    return \"roll\";\n  }\n\n  /**\n   * Default hit points.\n   *\n   * @internal\n   * @returns {number}\n   */\n  _getDefaultHitPoints() {\n    return Math.ceil(1 + (this.item.system.hd - 1) / 2);\n  }\n\n  _prepareHealthData() {\n    const hpConf = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConf.getClassHD(this.item);\n    const { auto, rate } = clsConf;\n\n    this.config.health.auto = auto;\n    this.config.health.manual ??= this._getDefaultHitPoints();\n    this.config.health.hitDie = this.item.system.hd || 8;\n\n    let delta = 0;\n    if (this.config.isMythic) {\n      delta = this.item.system.hd;\n    }\n    // Calculate auto health\n    else if (auto) {\n      const round = { up: Math.ceil, nearest: Math.round, down: Math.floor }[hpConf.rounding];\n      const dieHealth = 1 + (this.item.system.hd - 1) * rate;\n      // Continuous\n      if (hpConf.continuous) {\n        const { new: newHD, old: oldHD } = this.config.level.hd;\n        const newHP = newHD + round(newHD * dieHealth);\n        const oldHP = oldHD + round(oldHD * dieHealth);\n        delta = newHP - oldHP;\n      }\n      // Discrete\n      else {\n        delta = round(dieHealth);\n      }\n    }\n    // Manual health\n    else {\n      delta += this.config.health.manual;\n    }\n\n    this.config.health.delta = delta;\n\n    // Con mod\n    const hpAbl = this.simulacra.system.attributes?.hpAbility;\n    const hpMod = this.simulacra.system.abilities[hpAbl]?.mod ?? 0;\n    this.config.health.ability = { key: hpAbl, mod: hpMod };\n  }\n\n  _initData() {\n    this._prepareAssociations();\n\n    const cfg = this.config;\n\n    cfg.fcb.available = this.isFavouredClass();\n    cfg.fcb.unavailable = !cfg.fcb.available;\n\n    // Create temporary actor to get correct values for the new level\n    if (!this.simulacra) {\n      const actorData = this.actor.toObject();\n      const id = this.item.id ?? \"MOLD000000000000\";\n      // New items don't yet exist on actor, so we add simulation of one to the simulacra\n      if (!this.item.id) {\n        const itemData = this.item.toObject();\n        itemData._id = id;\n        actorData.items.push(itemData);\n      }\n      this.simulacra = new Actor.implementation(actorData);\n      this.mold = this.simulacra.items.get(id);\n    }\n\n    // Determine differences between current and new level\n    this.oldLevel ??= this.getLevelData(cfg.level.old);\n    const newLevel = this.getLevelData(cfg.level.new);\n    this.newLevel = newLevel;\n    cfg.level.hd = {\n      new: newLevel.hd,\n      old: this.oldLevel.hd,\n      total: newLevel.totalHD,\n    };\n    cfg.level.feats = newLevel.feats - this.oldLevel.feats;\n    // Saves\n    const oldSaves = this.actor.system.attributes?.savingThrows;\n    if (oldSaves) {\n      const newSaves = this.simulacra.system.attributes?.savingThrows;\n      cfg.level.fort = newSaves.fort.total - oldSaves.fort.total;\n      cfg.level.ref = newSaves.ref.total - oldSaves.ref.total;\n      cfg.level.will = newSaves.will.total - oldSaves.will.total;\n    }\n    cfg.level.bab = this.simulacra.system.attributes?.bab?.total - this.actor.system.attributes?.bab?.total;\n\n    cfg.health.raw = newLevel.hp - this.oldLevel.hp;\n\n    cfg.skills = {\n      new: newLevel.skills,\n      old: this.oldLevel.skills,\n    };\n\n    cfg.skills.delta = {\n      adv: cfg.skills.new.value - cfg.skills.old.value,\n      bg: cfg.skills.new.bg - cfg.skills.old.bg,\n    };\n    cfg.level.skills = cfg.skills.delta.adv + cfg.skills.delta.bg;\n\n    this._prepareHealthData();\n  }\n\n  getLevelData(level) {\n    const tempActor = this.simulacra;\n    const cls = this.mold;\n    cls.updateSource({ \"system.level\": level });\n    tempActor.reset();\n\n    let rollData = {};\n\n    const isMindless = tempActor.system.abilities?.int?.value === null;\n\n    // Rank counting\n    let advSkillRanks = 0;\n    let bgSkillRanks = 0;\n\n    const intMod = !isMindless ? tempActor.system.abilities?.int?.mod ?? 0 : 0;\n\n    tempActor.itemTypes.class\n      .filter((cls) => cls.subType !== \"mythic\")\n      .forEach((cls) => {\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        if (perLevel > 0) advSkillRanks += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (this.useBackgroundSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) bgSkillRanks += bgranks;\n        }\n      });\n\n    if (tempActor.system.details?.bonusSkillRankFormula) {\n      rollData = tempActor.getRollData();\n      const roll = Roll.defaultImplementation.safeRollSync(tempActor.system.details.bonusSkillRankFormula, rollData);\n      if (roll.err) console.error(`An error occurred in the Bonus Skill Rank formula of actor ${tempActor.name}.`);\n      advSkillRanks += roll.total || 0;\n    }\n\n    advSkillRanks += tempActor.system.details?.skills?.bonus || 0;\n\n    const feats = tempActor.getFeatCount().max;\n\n    return {\n      skills: { value: advSkillRanks, bg: bgSkillRanks },\n      feats,\n      hd: cls.hitDice,\n      totalHD: tempActor.system.attributes.hd.total,\n      hp: tempActor.system.attributes.hp.max,\n      bab: cls.system.babBase,\n      fort: cls.system.savingThrows?.fort?.base || 0,\n      ref: cls.system.savingThrows?.ref?.base || 0,\n      will: cls.system.savingThrows?.will?.base || 0,\n    };\n  }\n\n  /**\n   * @returns {boolean} Whether this form's associated class is a favoured class.\n   * @todo Add better logic for determining this <26-01-22, Furyspark>\n   */\n  isFavouredClass() {\n    return pf1.config.favoredClassTypes.includes(this.item.subType);\n  }\n\n  async _updateObject(event, formData) {\n    const mhp = this.config.health.manual;\n\n    foundry.utils.mergeObject(this.config, foundry.utils.expandObject(formData));\n\n    if (mhp !== this.config.health.manual) {\n      this._prepareHealthData();\n      // Assume adjusting manual health means user wants to use it\n      this.config.health.type = \"manual\";\n    }\n\n    return this.render();\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".ability-scores .ability-score .operator\").on(\"click\", this._onClickAbilityScoreOperator.bind(this));\n\n    // Allow opening class association items for inspection\n    html.find(\".item-list .item\").on(\"click\", this._openItemSheet.bind(this));\n\n    // Save button\n    html.find('button[data-action=\"commit\"]').on(\"click\", this._onCommit.bind(this));\n\n    // Manual/raw button\n    html.find('button[data-action=\"skip\"]').on(\"click\", this._onSkip.bind(this));\n  }\n\n  async _openItemSheet(event) {\n    const el = event.currentTarget;\n    const uuid = el.dataset.itemUuid;\n    const item = await fromUuid(uuid);\n    item.sheet.render(true, { focus: true });\n  }\n\n  _onClickAbilityScoreOperator(event) {\n    event.preventDefault();\n\n    const a = event.currentTarget;\n    const operator = a.dataset.operator;\n    const ablKey = a.closest(\".ability-score\").dataset.key;\n\n    const add = this._adjustAbilityScore(ablKey, operator);\n\n    const abls = this.config.abilityScore;\n    const upgrades = abls.upgrades[ablKey];\n\n    upgrades.value += add;\n    upgrades.added += add;\n    abls.used += add;\n\n    this.simulacra.updateSource({ system: { abilities: { [ablKey]: { value: upgrades.value } } } });\n\n    // Cross-pollinate new data\n    mergeObject(upgrades, this.simulacra.system.abilities[ablKey]);\n    this._initData();\n\n    this.render();\n  }\n\n  _initChoices() {\n    this._initFCBChoices();\n    this._initHPChoices();\n  }\n\n  _initFCBChoices() {\n    if (!this.config.fcb.available) return;\n\n    // Pre-select highest FCB\n    const { hp, skill, alt } = this.item.system.fc;\n    const fcb = [\n      { id: \"hp\", value: hp?.value || 0 },\n      { id: \"skill\", value: skill?.value || 0 },\n      { id: \"alt\", value: alt?.value || 0 },\n    ].sort((a, b) => b.value - a.value);\n\n    const highest = fcb[0];\n    if (highest.value > 0) this.config.fcb.choice = highest.id;\n  }\n\n  _initHPChoices() {\n    this.config.health.type = this._getDefaultHealthOption();\n\n    const hpConf = game.settings.get(\"pf1\", \"healthConfig\");\n    const clsConf = hpConf.getClassHD(this.item);\n\n    if (clsConf.maximized) {\n      const maxHDlimit = hpConf.maximized;\n\n      const maximized = this.actor.itemTypes.class.reduce((maximized, cls) => {\n        if (!hpConf.getClassHD(this.item).maximized) return maximized;\n        return maximized + cls.hitDice;\n      }, 0);\n\n      const maxLeft = hpConf.maximized - maximized;\n      this.config.health.maximized = Math.max(0, maxLeft);\n\n      // Maximize auto health, too.\n      if (maxLeft > 0) {\n        this.config.health.delta = this.config.health.hitDie;\n        this.config.health.type = \"max\";\n      }\n    }\n  }\n\n  /**\n   * @param {string} key - Ability score key\n   * @param {string} op - Operator clicked\n   * @returns {number} - Actual ability score adjustment\n   */\n  _adjustAbilityScore(key, op = null) {\n    switch (op) {\n      case \"add\":\n        return 1;\n      default:\n        return 0;\n      case \"subtract\":\n        return -1;\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  async close(options) {\n    this.resolve?.(null);\n    return super.close(options);\n  }\n\n  /**\n   * Get effective health roll formula.\n   *\n   * @internal\n   * @param {string} type\n   * @returns {string}\n   */\n  _getHealthFormula(type) {\n    const dieSize = this.item.system.hd;\n    switch (type) {\n      case \"static\":\n        return `${dieSize}`;\n      default:\n        return `1d${dieSize}`;\n    }\n  }\n\n  /**\n   * Spoof roll, for maximized, auto and manual health.\n   *\n   * @internal\n   * @param {Roll} roll\n   * @param {number} value\n   * @returns {Roll}\n   */\n  _spoofHealthRoll(roll, value) {\n    const data = roll.toJSON();\n    data.total = value;\n    data.terms[0].results[0].result = value;\n    return Roll.defaultImplementation.fromData(data);\n  }\n\n  /**\n   * Generate roll instance for the health gain.\n   *\n   * @internal\n   * @param {string} type\n   * @param {string} formula\n   * @returns {Roll}\n   */\n  _getHealthRoll(type, formula) {\n    const roll = Roll.defaultImplementation.safeRollAsync(formula);\n    switch (type) {\n      case \"auto\":\n      case \"max\":\n        return this._spoofHealthRoll(roll, this.config.health.delta);\n      case \"manual\":\n        return this._spoofHealthRoll(roll, this.config.health.manual);\n      default:\n        return roll;\n    }\n  }\n\n  /**\n   * Commit level-up\n   *\n   * @internal\n   * @param {Event} event\n   */\n  async _onCommit(event) {\n    this._disableSheet();\n\n    const cfg = this.config;\n    const itemData = this.item.toObject().system;\n    const updateData = {};\n\n    const newLevel = itemData.level + 1;\n    const cardData = {\n      level: {\n        previous: itemData.level,\n        new: newLevel,\n      },\n      newFeatures: this.config.associations,\n      hp: {},\n    };\n\n    const formula = this._getHealthFormula(cfg.health.type);\n    const roll = this._getHealthRoll(cfg.health.type, formula);\n\n    const labels = {\n      manual: \"PF1.LevelUp.Chat.Health.Manual\",\n      roll: \"PF1.LevelUp.Chat.Health.Roll\",\n      max: \"PF1.LevelUp.Chat.Health.Auto\",\n      auto: \"PF1.LevelUp.Chat.Health.Auto\",\n      static: \"PF1.LevelUp.Chat.Health.Static\",\n    };\n\n    cardData.hp = {\n      label: labels[cfg.health.type],\n      roll: roll,\n      add: roll.toAnchor().outerHTML,\n    };\n\n    const hpValue = roll.total || 0;\n    updateData.hp = (itemData.hp || 0) + hpValue;\n\n    // Apply FCB\n    if (cfg.fcb.choice in itemData.fc) {\n      const key = cfg.fcb.choice;\n      const value = itemData.fc?.[key]?.value ?? 0;\n      foundry.utils.setProperty(updateData, `fc.${key}.value`, value + 1);\n\n      const fcKey = { hp: \"HP\", skill: \"Skill\", alt: \"Alt\" }[key];\n      cardData.fc = { type: key, label: `PF1.FavouredClassBonus.${fcKey}` };\n    }\n\n    // Gather information\n    const oldFeatCount = this.actor.getFeatCount();\n\n    const itemUpdates = [],\n      newItems = [];\n\n    // Apply ability score changes\n    const ablUpdate = this._updateAbilityScore();\n    if (ablUpdate) {\n      if (ablUpdate.update) itemUpdates.push(ablUpdate.itemData);\n      else newItems.push(ablUpdate.itemData);\n\n      cardData.ability = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n        if (added == 0) return rv;\n        rv[key] = added;\n        return rv;\n      }, {});\n    }\n\n    updateData.level = newLevel;\n    let cls = this.item;\n    // Update existing class item\n    if (cls.actor && cls.id) {\n      itemUpdates.unshift({ system: updateData, _id: cls.id });\n    }\n    // Create new class item\n    else {\n      cls.updateSource({ system: updateData });\n      newItems.unshift(cls.toObject());\n    }\n\n    // Add items\n    if (newItems.length) {\n      await this.actor.createEmbeddedDocuments(\"Item\", newItems, { render: itemUpdates.length == 0 });\n    }\n\n    if (itemUpdates.length) {\n      const newItems = await this.actor.updateEmbeddedDocuments(\"Item\", itemUpdates);\n      cls = newItems.find((i) => i.type === \"class\");\n      if (cls) this.item = cls;\n    }\n\n    // Prepare remaining chat card info\n\n    // Add extra info (new feats, skill ranks, etc.)\n    const ex = {};\n    cardData.extra = ex;\n\n    // Show new feat count\n    const featCount = this.actor.getFeatCount();\n    featCount.new = Math.max(0, featCount.max - oldFeatCount.max);\n    ex.feats = featCount;\n    ex.enabled = featCount.new > 0;\n\n    // Create chat message\n    await this.createChatMessage(cardData);\n\n    // Resolve promise and close interface\n    this.resolve?.(cls);\n    this.close();\n  }\n\n  async _onSkip(event) {\n    event.preventDefault();\n\n    this._disableSheet();\n\n    const updateData = { system: { level: this.config.level.new } };\n\n    let cls = this.item;\n\n    // Old class\n    if (cls.id && cls.actor === this.actor) {\n      await cls.update(updateData);\n    }\n    // New class item\n    else {\n      cls.updateSource(updateData);\n      cls = await Item.implementation.create(cls.toObject(), { parent: this.actor });\n    }\n\n    // Open class sheet for manual adjustment\n    cls.sheet.render(true, { focus: true });\n\n    this.resolve?.(null);\n    this.close();\n  }\n\n  // Disable all buttons and inputs and set progress indicator\n  _disableSheet() {\n    const html = this.element[0];\n    const form = html.querySelector(\"form\");\n    form.style.cursor = \"progress\";\n    form.querySelectorAll(\"button,input,select\").forEach((button) => {\n      button.disabled = true;\n      button.style.cursor = \"progress\";\n    });\n  }\n\n  _updateAbilityScore() {\n    // No ability score upgrades this level\n    if (!this.config.abilityScore.upgrades) return;\n\n    const choices = Object.entries(this.config.abilityScore.upgrades).reduce((rv, [key, { added }]) => {\n      if (added == 0) return rv;\n      rv[key] = added;\n      return rv;\n    }, {});\n\n    if (Object.keys(choices).length === 0) return;\n\n    const result = { choices };\n\n    const item = this.actor.itemTypes.feat.find((o) => o.getFlag(\"pf1\", \"levelUp\") === true);\n\n    // Add level up ability score feature if it doesn't exist yet\n    if (!item) {\n      let itemData = pf1.config.levelAbilityScoreFeature;\n      itemData = foundry.utils.mergeObject(\n        itemData,\n        {\n          system: {\n            changes: Object.entries(choices).reduce((cur, [target, formula]) => {\n              const change = foundry.utils.mergeObject(pf1.components.ItemChange.defaultData, {\n                subTarget: target,\n                formula: `${formula}`,\n                modifier: \"untypedPerm\",\n              });\n\n              cur.push(change);\n              return cur;\n            }, []),\n          },\n          flags: {\n            pf1: {\n              levelUp: true,\n            },\n          },\n        },\n        { inplace: false }\n      );\n\n      return { itemData, update: false };\n    }\n    // If a level up ability score feature already exists, update it\n    else {\n      const changes = foundry.utils.deepClone(item.toObject().system.changes ?? []);\n      for (const [target, formula] of Object.entries(choices)) {\n        const change = changes.find((o) => o.target === target);\n\n        // Update previous change\n        if (change) {\n          const prevValue = parseInt(change.formula);\n          if (!Number.isNaN(prevValue)) {\n            const newValue = prevValue + formula;\n            change.formula = `${newValue}`;\n            continue;\n          }\n        }\n\n        // Add new change\n        changes.push(\n          foundry.utils.mergeObject(pf1.components.ItemChange.defaultData, {\n            subTarget: target,\n            formula: `${formula}`,\n            modifier: \"untypedPerm\",\n          })\n        );\n      }\n\n      return { itemData: { \"system.changes\": changes, _id: item.id }, update: true };\n    }\n  }\n\n  async createChatMessage(cardData) {\n    const templateData = {\n      ...cardData,\n      config: pf1.config,\n      item: this.item,\n      actor: this.actor,\n    };\n\n    const rolls = cardData.hp?.roll ? [cardData.hp.roll] : [];\n\n    const messageData = {\n      content: await renderTemplate(\"systems/pf1/templates/chat/level-up.hbs\", templateData),\n      type: CONST.CHAT_MESSAGE_TYPES.OOC,\n      speaker: ChatMessage.getSpeaker({ actor: this.actor, token: this.token }),\n      rolls,\n      flags: {\n        pf1: {\n          subject: { class: \"levelUp\" },\n        },\n      },\n    };\n\n    let rollMode = this.config.visibility || game.settings.get(\"core\", \"rollMode\");\n    // Prevent self message from non-GMs.\n    if (!game.user.isGM && rollMode === CONST.DICE_ROLL_MODES.SELF) rollMode = CONST.DICE_ROLL_MODES.PRIVATE;\n\n    ChatMessage.implementation.applyRollMode(messageData, rollMode); // rollMode here sometimes has no effect?\n    return ChatMessage.create(messageData, { rollMode }); // rollMode here has no effect?\n  }\n}\n","export class CurrencyTransfer extends FormApplication {\n  constructor(\n    source = { actor: null, container: null, amount: {}, alt: false },\n    dest = { actor: null, container: null, amount: {}, alt: false },\n    options = {}\n  ) {\n    super(options);\n\n    if (source.actor) {\n      if (typeof source.actor === \"string\") source.actor = game.actors.get(source.actor);\n      if (source.actor.type == \"npc\") source.alt = false;\n    }\n    if (source.container) {\n      source.alt = false;\n      if (typeof source.container === \"string\")\n        source.container = source.actor ? source.actor.items.get(source.container) : game.items.get(source.container);\n    }\n    if (dest.actor) {\n      if (typeof dest.actor === \"string\") dest.actor = game.actors.get(dest.actor);\n      if (dest.actor.type == \"npc\") dest.alt = false;\n      else if (dest.actor === source.actor && !source.container && !dest.container) dest.alt = !source.alt;\n    }\n    if (dest.container) {\n      if (typeof dest.container === \"string\")\n        dest.container = dest.actor ? dest.actor.items.get(dest.container) : game.items.get(dest.container);\n    }\n\n    // Currency checks\n    if (source.container) {\n      source.amount = foundry.utils.mergeObject(source.container.system.currency, source.amount ?? {});\n    } else if (source.actor) {\n      source.amount = foundry.utils.mergeObject(\n        source.alt ? source.actor.system.altCurrency : source.actor.system.currency,\n        source.amount ?? {}\n      );\n    } else if (game.user.isGM) {\n      source.amount = foundry.utils.mergeObject({ pp: \"∞\", gp: \"∞\", sp: \"∞\", cp: \"∞\" }, source.amount ?? {});\n    } else {\n      ui.notification.warning(\"Cannot use Infinite currency transfer as non-gm.\");\n      return undefined;\n    }\n\n    if (!dest.actor && !dest.container) return undefined;\n\n    this.source = source;\n    this.dest = dest;\n  }\n\n  get title() {\n    let title;\n    if (!this.source.actor) {\n      if (this.source.container) title = this.source.container.name + \" \";\n      else title = \"∞ \";\n    } else {\n      title = this.source.actor.name + \" \";\n      if (this.source.container) title += `(${this.source.container.name}) `;\n    }\n    title += \"➤ \";\n    if (this.source.actor == this.dest.actor && (this.source.alt || this.dest.alt))\n      title += this.dest.alt ? game.i18n.localize(\"PF1.Currency.Weightless\") : game.i18n.localize(\"PF1.Currency.Label\");\n    else {\n      if (!this.dest.actor) title += this.dest.container.name;\n      else {\n        title += this.dest.actor.name;\n        if (this.dest.container) title += ` (${this.dest.container.name})`;\n      }\n    }\n    return title;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"currency-transfer\"],\n      template: \"systems/pf1/templates/apps/currency-transfer.hbs\",\n      width: 380,\n      height: 235,\n    });\n  }\n\n  /**\n   * Order of coin types, descending in value\n   *\n   * @type {CoinType[]}\n   */\n  static get order() {\n    return [\"pp\", \"gp\", \"sp\", \"cp\"]; // Object conversion ordering cannot be trusted in js\n  }\n\n  activateListeners(html) {\n    html.find(\"button.cur-range\").click(this._curRange.bind(this));\n\n    html.find(\"input\").on(\"input\", this._calcTotal.bind(this));\n    $(html.find(\"input\")[0]).trigger(\"input\");\n  }\n\n  _updateObject(event, formData) {\n    this.dest.amount = {\n      pp: formData.pp ?? 0,\n      gp: formData.gp ?? 0,\n      sp: formData.sp ?? 0,\n      cp: formData.cp ?? 0,\n    };\n    this.constructor.transfer(\n      this.source.container ? this.source.container : this.source.actor,\n      this.dest.container ? this.dest.container : this.dest.actor,\n      this.dest.amount,\n      this.source.alt,\n      this.dest.alt,\n      2\n    );\n  }\n\n  getData(_options = {}) {\n    return {\n      source: this.source,\n      dest: this.dest,\n      options: this.options,\n      title: this.title,\n      total:\n        this.source.amount.gp === \"∞\"\n          ? \"∞\"\n          : this.constructor.order.reduce((acc, c, idx) => acc + this.source.amount[c] * 10 ** (1 - idx), 0),\n    };\n  }\n\n  _curRange(ev) {\n    ev.preventDefault();\n    const button = ev.target.closest(\"button\");\n    const formField = button.closest(\".form-fields\");\n    const min = button.classList.contains(\"down\");\n    const input = formField.querySelector(\"input\");\n\n    if (min) input.value = \"\";\n    else input.value = formField.querySelector(\"span\").textContent;\n    $(input).trigger(\"input\");\n  }\n\n  _calcTotal(ev) {\n    const form = ev.target.closest(\".currency-transfer\");\n    const amounts = Object.fromEntries(\n      [...form.querySelectorAll(\"input\")].map((o) => [o.name, parseInt(o.value || 0)])\n    );\n    const value = this.constructor.order.reduce((acc, c, idx) => acc + amounts[c] * 10 ** (1 - idx), 0);\n\n    form.querySelector(\".currency-total .form-fields label\").textContent = Math.round(value * 100) / 100 + \" gp\";\n  }\n\n  async close(...args) {\n    super.close(...args);\n  }\n\n  static _failed(i18nKey) {\n    return void ui.notifications.error(\n      game.i18n.localize(\"PF1.Application.CurrencyTrancer.Failed\") + game.i18n.localize(i18nKey)\n    );\n  }\n\n  static async _directoryDrop(docDestId, event) {\n    event.preventDefault();\n\n    // try to extract the data\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"Currency\") return;\n\n    const destDoc = event.currentTarget.classList.contains(\"item\")\n      ? game.items.get(docDestId)\n      : game.actors.get(docDestId);\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    if (data.currency && sourceActor) {\n      return new CurrencyTransfer(\n        { actor: sourceActor, container: data.containerId, alt: data.alt },\n        {\n          actor: destDoc?.actor ?? destDoc,\n          container: destDoc.system.type === \"container\" ? destDoc.id : null,\n          amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n        }\n      ).render(true);\n    }\n  }\n\n  /**\n   * Transfer an amount of currency to a valid document\n   *\n   * @param {Document} sourceDoc ActorPF or ItemPF with currency\n   * @param {Document} destDoc ActorPF or ItemPF with currency\n   * @param {object|number} amount currency object containing transferred amount. Undefined keys will be assumed to be zero. Providing just a number will assume just gold\n   * @param {boolean} sourceAlt Use alt currency on source\n   * @param {boolean} destAlt Use alt currency on destination\n   * @param {number} [allowConversion=false] Attempts to make change with sourceDoc's currency limit\n   * @returns {boolean|object} false if failed, object containing amount transferred on success\n   */\n  static async transfer(sourceDoc, destDoc, amount, sourceAlt = false, destAlt = false, allowConversion = false) {\n    if ((!sourceDoc && !game.user.isGM) || !destDoc || !amount) return false;\n\n    if (typeof amount !== \"object\") amount = { gp: parseInt(amount) };\n\n    this.order.forEach((c) => (amount[c] = amount[c] ?? 0));\n    if (!Object.values(amount).find((a) => a > 0))\n      return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    let sourceCurrency = foundry.utils.deepClone(\n      sourceAlt ? sourceDoc?.system.altCurrency : sourceDoc?.system.currency\n    );\n    const destCurrency = foundry.utils.deepClone(destAlt ? destDoc.system.altCurrency : destDoc.system.currency);\n    if ((!sourceCurrency && !game.user.isGM) || !destCurrency) return false;\n    const originalSource = Object.assign(Object.fromEntries(this.order.map((o) => [o, Infinity])), sourceCurrency);\n\n    const totalAmount = this.order.reduce((acc, c, idx) => acc + amount[c] * 10 ** (1 - idx), 0);\n    const totalSource = this.order.reduce((acc, c, idx) => acc + sourceCurrency[c] * 10 ** (1 - idx), 0);\n\n    if (totalAmount > totalSource) return this._failed(\"PF1.Application.CurrencyTransfer.Insufficient\"), false;\n\n    if (sourceCurrency) {\n      this.order.some((a) => {\n        const newSource = sourceCurrency[a] - amount[a];\n\n        if (newSource < 0 && allowConversion) {\n          amount = this.convert(originalSource, totalAmount, allowConversion);\n          sourceCurrency = Object.fromEntries(this.order.map((o) => [o, originalSource[o] - amount[o]]));\n          return true;\n        } else sourceCurrency[a] = newSource;\n      });\n    }\n\n    if (!amount || Object.values(sourceCurrency).find((c) => c < 0)) return false;\n\n    if (!sourceDoc.isOwner || !destDoc.isOwner) {\n      if (!game.users.find((o) => o.active && o.isGM))\n        return this._failed(\"PF1.Application.CurrencyTransfer.GMRequired\"), false;\n\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"currencyTransfer\",\n        data: {\n          sourceActor: sourceDoc.actor?.uuid ?? sourceDoc.uuid,\n          destActor: destDoc.actor?.uuid ?? destDoc.uuid,\n          sourceContainer: sourceDoc.type === \"container\" ? sourceDoc.id : \"\",\n          destContainer: destDoc.type === \"container\" ? destDoc.id : \"\",\n          sourceAlt: sourceAlt,\n          destAlt: destAlt,\n          amount: amount,\n        },\n      });\n      return amount;\n    }\n\n    this.order.forEach((c) => (destCurrency[c] += amount[c]));\n    if (sourceDoc === destDoc)\n      return sourceDoc.update({\n        \"system.altCurrency\": sourceAlt ? sourceCurrency : destCurrency,\n        \"system.currency\": destAlt ? sourceCurrency : destCurrency,\n      });\n    if (sourceAlt) sourceDoc.update({ \"system.altCurrency\": sourceCurrency });\n    else sourceDoc.update({ \"system.currency\": sourceCurrency });\n    if (destAlt) destDoc.update({ \"system.altCurrency\": destCurrency });\n    else destDoc.update({ \"system.currency\": destCurrency });\n    return amount;\n  }\n\n  /**\n   * Convert totalAmount to a currency object containing\n   *\n   * @param {object} limit currency object containing max number of coins. Falsey values will assume infinity\n   * @param {number|object} totalAmount currency as gold pieces. If provided as a currency object, will convert to gold\n   * @returns {boolean|object} false if failed, currency object containing new amounts on conversion success\n   */\n  static convert(limit, totalAmount) {\n    if (!limit) limit = Object.fromEntries(this.order.map((o) => [o, Infinity]));\n    else limit = Object.assign({}, limit);\n    if (typeof totalAmount !== \"number\")\n      totalAmount = this.order.reduce((acc, cur, idx) => acc + totalAmount?.[cur] * 10 ** (1 - idx));\n    if (!totalAmount) return false;\n    const amount = {};\n    totalAmount =\n      this.order.reduce((acc, cur, idx) => {\n        const minRequired = Math.min(limit[cur], Math.floor((acc % 10000) / 10 ** (3 - idx))), //Start from left to allow clumping\n          inCopper = minRequired * 10 ** (3 - idx);\n        amount[cur] = minRequired;\n        limit[cur] -= minRequired;\n        return acc - inCopper;\n      }, totalAmount * 100) / 100; //Operate in copper pieces to avoid floating point errors\n    if (totalAmount < 0) return false;\n    return amount;\n  }\n}\n","import { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { ActorResistanceSelector } from \"@app/damage-resistance-selector.mjs\";\nimport { ActorRestDialog } from \"./actor-rest.mjs\";\nimport { CR, adjustNumberByStringCommand, openJournal, enrichHTMLUnrolledAsync } from \"@utils\";\nimport { PointBuyCalculator } from \"@app/point-buy-calculator.mjs\";\nimport { Widget_ItemPicker } from \"@app/item-picker.mjs\";\nimport { getSkipActionPrompt } from \"../../documents/settings.mjs\";\nimport { ItemPF } from \"@item/item-pf.mjs\";\nimport { applyAccessibilitySettings } from \"@utils/chat.mjs\";\nimport { LevelUpForm } from \"@app/level-up.mjs\";\nimport { CurrencyTransfer } from \"@app/currency-transfer.mjs\";\nimport { getHighestChanges } from \"@actor/utils/apply-changes.mjs\";\nimport { RollPF } from \"@dice/roll.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Extend the basic ActorSheet class to do all the PF things!\n * This sheet is an Abstract layer which is not used.\n *\n * @type {ActorSheet}\n */\nexport class ActorSheetPF extends ActorSheet {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * Track the set of item filters which are applied\n     *\n     * @type {Set}\n     */\n    this._filters = {\n      sections: {},\n      search: {},\n    };\n\n    /** Item search */\n    this.searchCompositioning = false; // for IME\n    this.searchRefresh = true; // Lock out same term search unless sheet also refreshes\n    this.searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n    this.searchDelayEvent = null; // setTimeout id\n    this.effectiveSearch = {}; // prevent searching the same thing\n\n    /**\n     * Track item updates from the actor sheet.\n     *\n     * @property\n     * @private\n     * @type {object[]}\n     */\n    this._itemUpdates = [];\n\n    /**\n     * Track hidden elements of the sheet.\n     *\n     * @property\n     */\n    this._hiddenElems = {};\n\n    /**\n     * @type {boolean} Whether the skills are currently locked.\n     * @property\n     * @private\n     */\n    this._skillsLocked = true;\n\n    /**\n     * @type {string[]} IDs of expanded items.\n     * @private\n     */\n    this._expandedItems = [];\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"actor\"],\n      scrollY: [\n        \".combat-attacks\",\n        \".item-groups-list\",\n        \".skills-list\",\n        \".traits\",\n        \".actor-notes\",\n        \".editor-content[data-edit='system.details.biography.value']\",\n      ],\n      dragDrop: [\n        { dragSelector: \"li.item[data-item-id]\" },\n        { dragSelector: \".currency .denomination\" },\n        { dragSelector: \".race-container.item[data-item-id]\" },\n        { dragSelector: \"li.skill[data-skill]\" },\n        { dragSelector: \"li.sub-skill[data-skill]\" },\n        { dragSelector: \".saving-throw[data-savingthrow]\" },\n        { dragSelector: \".attribute[data-attribute]\" },\n        { dragSelector: \".attribute[data-attack]\" },\n        { dragSelector: \"li.generic-defenses[data-drag]\" },\n        { dragSelector: \".ability-scores .ability[data-ability]\" },\n        { dragSelector: \".spellcasting-concentration[data-drag]\" },\n        { dragSelector: \".spellcasting-cl\" },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"summary\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='skillset']\",\n          contentSelector: \"section.skillset-body\",\n          initial: \"adventure\",\n          group: \"skills\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='spellbooks']\",\n          contentSelector: \"section.spellbooks-body\",\n          initial: \"primary\",\n          group: \"spellbooks\",\n        },\n      ],\n    };\n  }\n\n  get currentPrimaryTab() {\n    return this._tabs.find((t) => t.group === \"primary\")?.active || null;\n  }\n\n  get currentSpellbookKey() {\n    return this._tabs.find((t) => t.group === \"spellbooks\")?.active || \"primary\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n\n    const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n\n    const context = {\n      actor: this.actor,\n      document: this.actor,\n      effects: this.actor.effects,\n      options: this.options,\n      owner: isOwner,\n      itemTypes: this.actor.itemTypes,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      isCharacter: this.document.type === \"character\",\n      hasHD: true,\n      config: pf1.config,\n      isGM: game.user.isGM,\n      race: this.document.race != null ? this.document.race.toObject() : null,\n      usesAnySpellbook: Object.values(this.actor.system.attributes.spells.spellbooks).some((book) => book.inUse),\n      sourceData: {},\n      skillsLocked: this._skillsLocked,\n      units: {\n        weight:\n          pf1.utils.getWeightSystem() === \"metric\" ? game.i18n.localize(\"PF1.Kgs\") : game.i18n.localize(\"PF1.Lbs\"),\n        distance: {\n          tactical: isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft,\n          overland: isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi,\n        },\n      },\n      unchainedActions: game.settings.get(\"pf1\", \"unchainedActionEconomy\"),\n    };\n\n    Object.values(context.itemTypes).forEach((items) => items.sort((a, b) => (a.sort ?? 0) - (b.sort ?? 0)));\n\n    const rollData = this.document.getRollData();\n    context.rollData = rollData;\n    context.system = foundry.utils.deepClone(this.document.system);\n\n    context.inCharacterGeneration = this.inCharacterGeneration;\n\n    context.hasProficiencies = context.isCharacter || game.settings.get(\"pf1\", \"npcProficiencies\");\n\n    // BAB iteratives\n    if (!context.unchainedActions) {\n      const bab = context.rollData.attributes?.bab?.total;\n      if (bab > 0) {\n        const numAttacks = 1 + RollPF.safeRollSync(pf1.config.iterativeExtraAttacks, { bab }).total || 0;\n        const iters = Array.fromRange(numAttacks).map(\n          (attackCount) => bab + RollPF.safeRollSync(pf1.config.iterativeAttackModifier, { attackCount }).total\n        );\n        context.iteratives = `+${iters.join(\" / +\")}`;\n      }\n    }\n\n    // Show whether the item has currency\n    context.hasCurrency = Object.values(this.object.system.currency).some((o) => o > 0);\n    context.hasAltCurrency = Object.values(this.object.system.altCurrency).some((o) => o > 0);\n\n    // Enrich descriptions\n    const enrichHTMLOptions = {\n      secrets: isOwner,\n      rollData: context.rollData,\n      async: true,\n      relativeTo: this.actor,\n    };\n    const bio = context.system.details?.biography?.value;\n    const pBio = bio ? enrichHTMLUnrolledAsync(bio, enrichHTMLOptions) : Promise.resolve();\n    pBio.then((html) => (context.biographyHTML = html));\n    const notes = context.system.details?.notes?.value;\n    const pNotes = notes ? enrichHTMLUnrolledAsync(notes, enrichHTMLOptions) : Promise.resolve();\n    pNotes.then((html) => (context.notesHTML = html));\n    await Promise.all([pBio, pNotes]);\n\n    // The Actor and its Items\n    context.token = this.token;\n\n    context.items = this.document.items.map((item) => this._prepareItem(item));\n    context.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    context.labels = this.document.getLabels();\n    context.filters = this._filters;\n\n    // Generic melee and ranged attack bonuses, only present for sheet.\n    {\n      const attributes = context.system.attributes,\n        abilities = context.system.abilities,\n        sizeModifier = pf1.config.sizeMods[context.system.traits.size],\n        baseBonus = attributes.attack.shared + attributes.attack.general + sizeModifier,\n        meleeAbility = abilities[attributes.attack.meleeAbility]?.mod ?? 0,\n        rangedAbility = abilities[attributes.attack.rangedAbility]?.mod ?? 0;\n\n      context.genericAttacks = {\n        melee: {\n          ability: attributes.attack.meleeAbility,\n          abilityMod: meleeAbility,\n          modifier: baseBonus + attributes.attack.melee + meleeAbility,\n        },\n        ranged: {\n          ability: attributes.attack.rangedAbility,\n          abilityMod: rangedAbility,\n          modifier: baseBonus + attributes.attack.ranged + rangedAbility,\n        },\n      };\n    }\n\n    // Add inventory value\n    {\n      const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true });\n      const totalValue = pf1.utils.currency.split(cpValue);\n      context.labels.totalValue = game.i18n.format(\"PF1.TotalItemValue\", {\n        gp: totalValue.gp,\n        sp: totalValue.sp,\n        cp: totalValue.cp,\n      });\n    }\n\n    // Ability Scores\n    for (const [a, abl] of Object.entries(context.system.abilities)) {\n      abl.label = pf1.config.abilities[a];\n      abl.totalLabel = abl.total == null ? \"-\" : abl.total;\n    }\n\n    // Armor Class\n    for (const [a, ac] of Object.entries(context.system.attributes.ac)) {\n      ac.label = pf1.config.ac[a];\n    }\n\n    // Saving Throws\n    for (const [a, savingThrow] of Object.entries(context.system.attributes.savingThrows)) {\n      savingThrow.label = pf1.config.savingThrows[a];\n    }\n\n    // Update skill labels\n    for (const [skillId, skill] of Object.entries(context.system.skills ?? {})) {\n      skill.key = skillId;\n      skill.path = skillId;\n      skill.skillId = skillId;\n      skill.label = pf1.config.skills[skillId] || skill.name;\n      skill.arbitrary = pf1.config.arbitrarySkills.includes(skillId);\n      skill.compendiumEntry = pf1.config.skillCompendiumEntries[skillId] || skill.journal || null;\n      skill.untrained = skill.rt === true && !(skill.rank > 0);\n\n      if (skill.subSkills != null) {\n        for (const [subSkillId, subSkill] of Object.entries(skill.subSkills)) {\n          subSkill.key = `${skillId}.${subSkillId}`;\n          subSkill.path = `${skillId}.subSkills.${subSkillId}`;\n          subSkill.skillId = skillId;\n          subSkill.subSkillId = subSkillId;\n          subSkill.label ||= subSkill.name;\n          subSkill.compendiumEntry = subSkill.journal || null;\n          subSkill.untrained = subSkill.rt === true && !(subSkill.rank > 0);\n          subSkill.custom = true; // All subskills are custom\n        }\n      }\n    }\n\n    // Feat count\n    {\n      // Feat count\n      const feats = this.actor.getFeatCount();\n      // Additional values\n      feats.bonus = feats.formula + feats.changes;\n      feats.issues = 0;\n      if (feats.missing > 0 || feats.excess) feats.issues += 1;\n      if (feats.disabled > 0) feats.issues += 1;\n      context.featCount = feats;\n    }\n\n    // Update traits\n    this._prepareTraits(context.system.traits);\n    context.labels.senses = this._prepareSenseLabels();\n    context.dr = this.document.parseResistances(\"dr\");\n    context.eres = this.document.parseResistances(\"eres\");\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    // Prepare skillsets\n    this._prepareSkillsets(context);\n\n    this._prepareSkills(context, rollData);\n\n    // Fetch the game settings relevant to sheet rendering.\n    {\n      const actorType = { character: \"pc\", npc: \"npc\" }[this.document.type];\n      context.healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n      context.useWoundsAndVigor = context.healthConfig.variants[actorType].useWoundsAndVigor;\n    }\n\n    // Determine hidden elements\n    this._prepareHiddenElements();\n    context.hiddenElems = this._hiddenElems;\n\n    // Create a table of magic items, only for GM\n    if (game.user.isGM) {\n      context.magicItems = {\n        identified: [],\n        unidentified: [],\n      };\n      this.document.items\n        .filter((o) => {\n          if (!o.isPhysical) return false;\n          if (!o.system.carried) return false;\n          if (o.system.quantity === 0) return false;\n\n          const school = o.system.aura?.school;\n          const cl = o.system.cl;\n          return school?.length > 0 && cl > 0;\n        })\n        .forEach((item) => {\n          const itemData = {\n            name: item.name,\n            unidentifiedName: item.system.unidentified?.name,\n            img: item.img,\n            id: item.id,\n            cl: item.system.cl,\n            aura: {\n              strength: CONFIG.PF1.auraStrengths[item.auraStrength],\n              school: CONFIG.PF1.spellSchools[item.system.aura?.school] || item.system.aura?.school,\n            },\n            identifyDC: 15 + item.system.cl,\n            identified: item.system.identified === true,\n            quantity: item.system.quantity || 0,\n          };\n\n          if (itemData.identified) context.magicItems.identified.push(itemData);\n          else context.magicItems.unidentified.push(itemData);\n        });\n    }\n\n    // Prepare (interactive) labels\n    if (this.actor.itemTypes.class.length === 0) {\n      context.labels.firstClass = game.i18n\n        .format(\"PF1.Info_FirstClass\", {\n          html: `<a data-action=\"browse\" data-category=\"classes\" data-tooltip=\"PF1.BrowseClasses\">${game.i18n.localize(\n            \"PF1.Info_FirstClass_Compendium\"\n          )}</a>`,\n        })\n        .replace(/\\n+/, \"<br>\");\n    }\n\n    // Conditions\n    const conditions = this.actor.system.conditions;\n    // Get conditions that are inherited from items\n    const inheritedEffects = this.actor.appliedEffects.filter((ae) => ae.parent instanceof Item && ae.statuses.size);\n    context.conditions = pf1.registry.conditions.map((cond) => ({\n      id: cond.id,\n      img: cond.texture,\n      active: conditions[cond.id] ?? false,\n      items: new Set(inheritedEffects.filter((ae) => ae.statuses.has(cond.id)).map((ae) => ae.parent)),\n      get inherited() {\n        return this.items.size > 0;\n      },\n      label: cond.name,\n      compendium: cond.journal,\n    }));\n\n    // Return data to the sheet\n    return context;\n  }\n\n  /**\n   * Prepare item data for display.\n   *\n   * @protected\n   * @param {ItemPF} item - Original document\n   * @returns {object} - Data fed to the sheet\n   */\n  _prepareItem(item) {\n    const type = item.type;\n    const subType = item.subType;\n\n    const result = foundry.utils.deepClone(item.system);\n    result.document = item;\n    result.type = type;\n    result.id = item.id;\n    result.img = item.img;\n    result.isActive = item.isActive;\n    result.isPhysical = item.isPhysical ?? false;\n    result.isSingleUse = item.isSingleUse;\n    result.isCharged = item.isCharged;\n    result.hasResource = result.isCharged && !result.isSingleUse;\n    result.hasUses = result.uses?.max > 0;\n\n    const defaultAction = item.defaultAction;\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    result.labels = item.getLabels({ actionId: defaultAction?.id, rollData });\n    result.hasAction = item.hasAction || item.getScriptCalls(\"use\").length > 0;\n    if (defaultAction) {\n      result.hasAttack = defaultAction.hasAttack;\n      result.hasMultiAttack = defaultAction.hasMultiAttack;\n      result.hasDamage = defaultAction.hasDamage;\n      result.hasRange = defaultAction.hasRange;\n      result.hasEffect = defaultAction.hasEffect;\n      if (this._canShowRange(item)) {\n        result.range = foundry.utils.mergeObject(\n          defaultAction?.data?.range ?? {},\n          {\n            min: defaultAction?.getRange({ type: \"min\", rollData }),\n            max: defaultAction?.getRange({ type: \"max\", rollData }),\n          },\n          { inplace: false }\n        );\n      }\n      if (result.hasAttack) {\n        const attacks = defaultAction\n          .getAttacks({ full: true, resolve: true, conditionals: true, bonuses: true, rollData })\n          .map((atk) => atk.bonus);\n        result.attackArray = attacks;\n        const highest = Math.max(...attacks); // Highest bonus, with assumption the first might not be that.\n        result.attackSummary = `${attacks.length} (${highest < 0 ? highest : `+${highest}`}${\n          attacks.length > 1 ? \"/…\" : \"\"\n        })`;\n      }\n    }\n\n    result.sort = item.sort;\n    result.showUnidentifiedData = item.showUnidentifiedData;\n    result.name = item.name; // Copy name over from item to handle identified state correctly\n\n    if (result.isPhysical) {\n      result.quantity ||= 0;\n      result.isStack = result.quantity > 1;\n      result.destroyed = result.hp?.value <= 0;\n      result.isEmpty = result.quantity == 0;\n      result.isBroken = item.isBroken;\n      result.disabled ||= result.destroyed;\n    }\n\n    result.empty = false;\n    if (result.isCharged && !result.isSingleUse) {\n      // TODO: Do charge test in action selection instead of here\n      //const smallestUsage = Math.min(...item.actions.map((a) => a.getChargeCost()));\n      //const itemCharges = result.uses?.value != null ? result.uses.value : 1;\n      //if (itemCharges < smallestUsage) result.empty = true;\n    }\n\n    if (result.isPhysical && result.quantity <= 0) result.empty = true;\n    result.disabled = result.destroyed || (!result.isActive && !result.empty);\n\n    if (result.isPhysical) {\n      // Do not count unequipped physical items as disabled\n      if (item.system.equipped === false) result.disabled = false;\n      // Do not count unimplanted implants as disabled\n      else if (item.system.implanted === false) result.disabled = false;\n    }\n\n    result.typeLabel = game.i18n.localize(`PF1.Subtypes.Item.${type}.${subType}.Single`);\n\n    return result;\n  }\n\n  /**\n   * Determine if the item can have its range shown on this sheet.\n   *\n   * @protected\n   * @param {Item} item\n   * @returns {boolean}\n   */\n  _canShowRange(item) {\n    return item.type === \"attack\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Determine if this actor is in character generation state.\n   *\n   * @private\n   * @returns {boolean} True if character generation guides are desirable.\n   */\n  get inCharacterGeneration() {\n    return (\n      this.actor.system.attributes.hd.total <= 1 ||\n      Object.values(this.actor.system.abilities).every((abl) => abl.value === 10)\n    );\n  }\n\n  _prepareHiddenElements() {\n    // Hide spellbook info\n    const spellbooks = this.document.system.attributes?.spells?.spellbooks ?? {};\n    for (const k of Object.keys(spellbooks)) {\n      const key = `spellbook-info_${k}`;\n      if (this._hiddenElems[key] == null) this._hiddenElems[key] = true;\n    }\n  }\n\n  _prepareTraits(traits) {\n    const damageTypes = pf1.registry.damageTypes.getLabels();\n    const map = {\n      // \"dr\": PF1.damageTypes,\n      di: damageTypes,\n      dv: damageTypes,\n      ci: pf1.config.conditionTypes,\n      languages: pf1.config.languages,\n      armorProf: pf1.config.armorProficiencies,\n      weaponProf: pf1.config.weaponProficiencies,\n    };\n    for (const [t, choices] of Object.entries(map)) {\n      const trait = traits[t];\n      if (!trait) continue;\n      let values = [];\n      // Prefer total over value for dynamically collected proficiencies\n      if ([\"armorProf\", \"weaponProf\", \"languages\"].includes(t)) {\n        values = trait.total ?? trait.value;\n      } else if (trait.value) {\n        values = trait.value instanceof Array ? trait.value : [trait.value];\n      }\n      trait.selected = values.reduce((obj, t) => {\n        obj[t] = choices[t];\n        return obj;\n      }, {});\n\n      const custom = new Set();\n      // Prefer total over value for dynamically collected proficiencies\n      const customSource = trait.customTotal ? trait.customTotal : trait.custom;\n      if (customSource?.length) {\n        customSource.forEach((c, i) => (trait.selected[`custom${i + 1}`] = c));\n      }\n\n      trait.cssClass = !foundry.utils.isEmpty(trait.selected) ? \"\" : \"inactive\";\n    }\n  }\n\n  _prepareSenseLabels() {\n    const result = {};\n\n    const senses = this.actor.system.traits.senses ?? {};\n\n    for (const [key, value] of Object.entries(senses)) {\n      if (value === 0 || value === false) continue;\n      else if (key === \"ll\" && senses[key].enabled) {\n        result[key] = pf1.config.senses[key];\n      } else if (key === \"custom\") {\n        if (value.length) {\n          value\n            .split(pf1.config.re.traitSeparator)\n            .map((c) => c.trim())\n            .filter((c) => c)\n            .forEach((svalue, idx) => (result[`custom${idx + 1}`] = svalue));\n        }\n      } else if (value === true) {\n        result[key] = pf1.config.senses[key];\n      } else if (value > 0) {\n        const converted = pf1.utils.convertDistance(value);\n        result[key] = `${pf1.config.senses[key]} ${converted[0]} ${converted[1]}`;\n      }\n    }\n\n    return result;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Insert a spell into the spellbook object when rendering the character sheet\n   *\n   * @param {object} data     The Actor data being prepared\n   * @param {Array} spells    The spell data being prepared\n   * @param {string} bookKey  The key of the spellbook being prepared\n   * @private\n   */\n  _prepareSpellbook(data, spells, bookKey) {\n    const editable = this.isEditable;\n    const book = this.document.system.attributes.spells.spellbooks[bookKey];\n\n    const min = book.hasCantrips ? 0 : 1;\n    let max = 9;\n    if (book.autoSpellLevelCalculation) {\n      const cl = book.cl.autoSpellLevelTotal;\n\n      const castsPerDay =\n        pf1.config.casterProgression.castsPerDay[book.spellPreparationMode]?.[book.casterType]?.[cl - 1];\n      // Check against undefined protects against bad CL modifications.\n      max = castsPerDay !== undefined ? castsPerDay.length - 1 : 0;\n    } else {\n      if (book.casterType === \"low\") max = 4;\n      else if (book.casterType === \"med\") max = 6;\n    }\n\n    // Reduce spells to the nested spellbook structure\n    const spellbook = [];\n    for (let level = 0; level < 10; level++) {\n      const spellLevel = book.spells?.[`spell${level}`];\n      if (!spellLevel) {\n        console.error(`Bad data for spell level ${level} in spellbook \"${bookKey}\" for actor \"${this.actor.name}\"`);\n        continue;\n      }\n\n      const valid = !isNaN(spellLevel.max);\n\n      spellbook[level] = {\n        ...pf1.config.sheetSections.spells.spell,\n        id: `level-${level}`,\n        level,\n        valid,\n        usesSlots: true,\n        spontaneous: book.spontaneous,\n        canPrepare: data.actor.type === \"character\",\n        label: pf1.config.spellLevels[level],\n        items: [],\n        uses: spellLevel.value || 0,\n        hasIssues: spellLevel.hasIssues,\n        lowAbilityScore: spellLevel.lowAbilityScore,\n        lowLevel: spellLevel.lowLevel,\n        known: spellLevel.known,\n        preparation: spellLevel.preparation,\n        slots: spellLevel.slots,\n        invalidSlots: spellLevel.invalidSlots,\n        mismatchSlots: spellLevel.mismatchSlots,\n        invalidKnown: spellLevel.invalidKnown,\n        mismatchKnown: spellLevel.mismatchKnown,\n        domain: spellLevel.domain,\n        data: spellLevel,\n        isSchool: book.isSchool,\n      };\n    }\n\n    spells.forEach((spell) => {\n      const lvl = spell.level ?? min;\n      spellbook[lvl]?.items.push(spell);\n    });\n\n    for (let a = 0; a < 10; a++) {\n      if (spellbook[a]?.items.length === 0 && (a > max || a < min)) {\n        delete spellbook[a];\n      }\n    }\n\n    return spellbook;\n  }\n\n  /**\n   * Prepare adventure/background skill distinction if needed.\n   *\n   * @internal\n   * @param {object} context\n   */\n  _prepareSkillsets(context) {\n    const skills = context.system.skills;\n\n    const sets = {\n      all: { skills: {} },\n      adventure: { skills: {} },\n      background: { skills: {} },\n    };\n\n    // sort skills by label\n    const keys = Object.keys(skills).sort(function (a, b) {\n      if (skills[a].custom && !skills[b].custom) return 1;\n      if (!skills[a].custom && skills[b].custom) return -1;\n      return (\"\" + skills[a].label).localeCompare(skills[b].label);\n    });\n\n    keys.forEach((a) => {\n      const skl = skills[a];\n      // Include all but Lore and Artistry in all\n      if (!pf1.config.backgroundOnlySkills.includes(a)) sets.all.skills[a] = skl;\n      if (skl.background) sets.background.skills[a] = skl;\n      else sets.adventure.skills[a] = skl;\n    });\n\n    context.skillsets = sets;\n  }\n\n  /**\n   * Calculate used and available skill ranks.\n   *\n   * @internal\n   * @param {object} context\n   * @param {object} rollData\n   */\n  _prepareSkills(context, rollData) {\n    context.useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n\n    const abilities = context.system.abilities;\n\n    const isMindless = abilities?.int?.value === null;\n    const intMod = isMindless ? 0 : abilities?.int?.mod ?? 0;\n\n    // Rank counting\n    const skillRanks = { allowed: 0, used: 0, bgAllowed: 0, bgUsed: 0, sentToBG: 0 };\n\n    // Count used skill ranks\n    for (const skl of Object.values(context.rollData.skills)) {\n      if (skl.subSkills != null) {\n        for (const subSkl of Object.values(skl.subSkills)) {\n          if (context.useBGSkills && skl.background) {\n            skillRanks.bgUsed += subSkl.rank;\n          } else {\n            skillRanks.used += subSkl.rank;\n          }\n        }\n      } else if (context.useBGSkills && skl.background) {\n        skillRanks.bgUsed += skl.rank;\n      } else {\n        skillRanks.used += skl.rank;\n      }\n    }\n\n    // Allowed skill ranks from HD, classes, intelligence, FCB, etc.\n    this.document.itemTypes.class\n      .filter((cls) => cls.system.subType !== \"mythic\")\n      .forEach((cls) => {\n        // Favoured Class Bonus\n        if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n          skillRanks.allowed += cls.system.fc?.skill?.value || 0;\n        }\n\n        // Mindless get nothing else\n        if (isMindless) return;\n\n        const hd = cls.hitDice;\n        if (hd === 0) return;\n\n        const perLevel = cls.system.skillsPerLevel || 0;\n\n        // Int from HD still applies even if skills per level is zero.\n        skillRanks.allowed += Math.max(1, perLevel + intMod) * hd;\n\n        // Background skills\n        if (context.useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n          const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n          if (bgranks > 0) skillRanks.bgAllowed += bgranks;\n        }\n      });\n\n    // Calculate from changes\n    skillRanks.allowed += this.actor.system.details?.skills?.bonus || 0;\n\n    // Adventure skills transferred to background skills\n    if (context.useBGSkills && skillRanks.bgUsed > skillRanks.bgAllowed) {\n      skillRanks.sentToBG = skillRanks.bgUsed - skillRanks.bgAllowed;\n      skillRanks.allowed -= skillRanks.sentToBG;\n      skillRanks.bgAllowed += skillRanks.sentToBG;\n    }\n\n    context.skillRanks = skillRanks;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Compute the level and percentage of encumbrance for an Actor.\n   *\n   * @returns {object}               An object describing the character's encumbrance level\n   * @private\n   */\n  _computeEncumbrance() {\n    const system = this.actor.system;\n    const carriedWeight = system.attributes.encumbrance.carriedWeight;\n    const load = {\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n    };\n    const usystem = pf1.utils.getWeightSystem();\n    const carryLabel =\n      usystem === \"metric\"\n        ? game.i18n.format(\"PF1.CarryLabelKg\", { kg: carriedWeight })\n        : game.i18n.format(\"PF1.CarryLabel\", { lbs: carriedWeight });\n\n    const enc = {\n      pct: {\n        light: Math.clamped((carriedWeight * 100) / load.light, 0, 99.5),\n        medium: Math.clamped(((carriedWeight - load.light) * 100) / (load.medium - load.light), 0, 99.5),\n        heavy: Math.clamped(((carriedWeight - load.medium) * 100) / (load.heavy - load.medium), 0, 99.5),\n      },\n      encumbered: {\n        light: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.medium,\n        medium: system.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy,\n        heavy: system.attributes.encumbrance.carriedWeight >= system.attributes.encumbrance.levels.heavy,\n      },\n      light: system.attributes.encumbrance.levels.light,\n      medium: system.attributes.encumbrance.levels.medium,\n      heavy: system.attributes.encumbrance.levels.heavy,\n      aboveHead: system.attributes.encumbrance.levels.heavy,\n      offGround: system.attributes.encumbrance.levels.heavy * 2,\n      dragPush: system.attributes.encumbrance.levels.heavy * 5,\n      value: system.attributes.encumbrance.carriedWeight,\n      carryLabel: carryLabel,\n    };\n\n    return enc;\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param {JQuery} html The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Tooltips\n    html[0].addEventListener(\"pointermove\", (ev) => this._moveTooltips(ev), { passive: true });\n\n    // Activate Item Filters\n    const filterLists = html.find(\".filter-list\");\n    filterLists.each(this._initializeFilterItemList.bind(this));\n    filterLists.on(\"click\", \".filter-item\", this._onToggleFilter.bind(this));\n\n    // Search boxes\n    {\n      const sb = html.find(\".search-input\");\n      sb.on(\"keyup change\", this._searchFilterChange.bind(this));\n      sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n      this.searchRefresh = true;\n      // Filter tabs on followup refreshes\n      sb.each(function () {\n        if (this.value.length > 0) $(this).change();\n      });\n      html.find(\".clear-search\").on(\"click\", this._clearSearch.bind(this));\n    }\n\n    // Item summaries\n    html.find(\".item .item-name\").click((event) => this._onItemSummary(event));\n\n    // Allow opening items even if the sheet isn't editable.\n\n    // General items\n    html.find(\".item-edit\").on(\"click\", this._onItemEdit.bind(this));\n    // General items (right click)\n    html.find(\".item .item-name\").contextmenu(this._onItemEdit.bind(this));\n    // Quick items (right click)\n    html.find(\".quick-actions li\").contextmenu(this._onItemEdit.bind(this));\n    // Race item special right-click handler\n    html.find(\".race.item\").contextmenu(this._onItemEdit.bind(this));\n\n    // Spellbook config toggle\n    html.find(\"a.hide-show\").click(this._hideShowElement.bind(this));\n\n    // Open skill compendium entry\n    html.find(\"a.compendium-entry\").click(this._onOpenCompendiumEntry.bind(this));\n\n    // Open compendium browser\n    html.find('a[data-action=\"browse\"]').click(this._onOpenCompendiumBrowser.bind(this));\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      html.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add general text box (span) handler\n    html.find(\"span.text-box.direct\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Click to change text input\n    html.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n    html\n      .find('*[data-action=\"input-text\"].wheel-change')\n      .on(\"wheel\", (event) => this._onInputText(event.originalEvent));\n\n    // Select the whole text on click\n    html.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Abilities, Skills, Defenses and Traits\n    /* -------------------------------------------- */\n\n    // Ability Checks\n    html.find(\".ability-name\").click(this._onRollAbilityTest.bind(this));\n\n    // BAB Check\n    html.find(\".attribute.bab .rollable\").click(this._onRollBAB.bind(this));\n\n    // Generic attack weapon and CMB checks\n    html.find(\".attribute.attack .rollable\").click(this._onRollAttack.bind(this));\n\n    // Initiative Check\n    html.find(\".attribute.initiative .rollable\").click(this._onRollInitiative.bind(this));\n\n    // Saving Throw\n    html.find(\".saving-throw .rollable\").click(this._onRollSavingThrow.bind(this));\n\n    // Adjust skill rank\n    html.find(\"span.text-box.skill-rank\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Add arbitrary skill\n    html.find(\".skills .skill.arbitrary .skill-create\").click((ev) => this._onArbitrarySkillCreate(ev));\n\n    // Add custom skill\n    html.find(\".skills .controls > .skill-create\").click((ev) => this._onSkillCreate(ev));\n\n    // Edit skill\n    html.find(\".skills .skill > .controls > .skill-edit\").on(\"click\", (ev) => this._onSkillEdit(ev));\n    // Delete custom skill\n    html.find(\".skills .skill > .controls > .skill-delete\").click((ev) => this._onSkillDelete(ev));\n\n    // Item Action control\n    html.find(\".item-actions a.item-action\").click(this._itemActivationControl.bind(this));\n\n    // Roll Skill Checks\n    html.find(\".tab.skills .skill > .action.roll\").click(this._onRollSkillCheck.bind(this));\n\n    // Trait Selector\n    html.find(\".trait-selector\").click(this._onTraitSelector.bind(this));\n\n    // Resistance Selector\n    html.find(\".resistance-selector\").click(this._onResistanceSelector.bind(this));\n\n    // Display defenses\n    html.find(\".generic-defenses .rollable\").click((ev) => {\n      this.document.displayDefenseCard({ token: this.token });\n    });\n\n    // Rest\n    html.find(\".rest\").click(this._onRest.bind(this));\n\n    // Point Buy Calculator\n    html.find(\"button.pointbuy-calculator\").click(this._onPointBuyCalculator.bind(this));\n\n    // Alignment\n    html.find(\".control.alignment\").click(this._onControlAlignment.bind(this));\n\n    // Edit senses\n    html.find(\".senses-selector\").on(\"click\", this._onSensesSelector.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(\".item-create\").on(\"click\", (ev) => this._onItemCreate(ev));\n    html.find(\".item-delete\").on(\"click\", this._onItemDelete.bind(this));\n    html.find(\".item-give\").on(\"click\", this._onItemGive.bind(this));\n    html.find(\".item-split:not(.disabled)\").on(\"click\", this._onItemSplit.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").click((event) => this._onItemRoll(event));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick (un)equip item\n    html.find(\"a.item-control.item-equip\").click((ev) => {\n      this._quickEquipItem(ev);\n    });\n\n    // Quick carry item\n    html.find(\"a.item-control.item-carry\").click((ev) => {\n      this._quickCarryItem(ev);\n    });\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Quick toggle item property\n    html.find(\"a.item-control.item-toggle-prepared\").click(this._itemPreparedToggle.bind(this));\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick Action\n    html.find(\".quick-actions li\").click(this._quickAction.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Set item charges\n    html\n      .find(\".inventory-body .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setFeatUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setFeatUses.bind(this));\n      });\n\n    // Set attack charges\n    html\n      .find(\".attacks-body .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setFeatUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setFeatUses.bind(this));\n      });\n\n    // Dynamic tooltips\n\n    // Weight details tooltip\n    html[0].querySelectorAll(\".item-list .item[data-item-id] .item-detail.item-weight\").forEach((el) => {\n      el.addEventListener(\n        \"pointerenter\",\n        (ev) => {\n          const el0 = ev.currentTarget;\n          const item = this.actor.items.get(el0.closest(\"[data-item-id]\").dataset.itemId);\n          const weight = item?.system.weight?.converted;\n\n          if (weight && weight.total > 0) {\n            const contents = [];\n            const quantity = item.system.quantity || 0;\n            contents.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: weight.value }));\n            if (quantity > 1)\n              contents.push(\n                game.i18n.format(\"PF1.StackDetails.Stack\", { value: Math.floor(weight.value * 100 * quantity) / 100 })\n              );\n            if (weight.contents > 0) {\n              contents.push(game.i18n.format(\"PF1.StackDetails.Contents\", { value: weight.contents }));\n              contents.push(game.i18n.format(\"PF1.StackDetails.Total\", { value: weight.total }));\n            }\n\n            game.tooltip.activate(el0, {\n              text: contents.join(\"<br>\"),\n              direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n              cssClass: \"pf1\",\n            });\n          }\n        },\n        { passive: true }\n      );\n      el.addEventListener(\"pointerleave\", () => game.tooltip.deactivate(), { passive: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Feats\n    /* -------------------------------------------- */\n\n    html\n      .find(\".feats-body .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setFeatUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setFeatUses.bind(this));\n      });\n\n    /* -------------------------------------------- */\n    /*  Classes\n    /* -------------------------------------------- */\n\n    // Level Up\n    html.find(\".level-up\").click(this._onLevelUp.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Spells\n    /* -------------------------------------------- */\n\n    // Set specific spell's (max) uses\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='amount']\")\n      .on(\"wheel\", this._setSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setSpellUses.bind(this));\n      });\n    html\n      .find(\".item-list .spell-uses span.text-box[data-type='max']\")\n      .on(\"wheel\", this._setMaxSpellUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setMaxSpellUses.bind(this));\n      });\n\n    // Set spell level uses for spontaneous spellbooks\n    html\n      .find(\".spell-uses .spell-slots.spontaneous span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n    // Set base amount of spell uses for a given spell level\n    html.find(\".spell-uses .spell-max span.text-box\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n    });\n\n    // Set spell point amount\n    html\n      .find(\".spell-points-current .value span.text-box\")\n      .on(\"wheel\", this._adjustActorPropertyBySpan.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._adjustActorPropertyBySpan.bind(this));\n      });\n\n    html.find(\".spellcasting-concentration.rollable\").click(this._onRollConcentration.bind(this));\n\n    html.find(\".spellcasting-cl.rollable\").click(this._onRollCL.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Buffs\n    /* -------------------------------------------- */\n\n    html\n      .find(\".item-detail.item-active input[type='checkbox']\")\n      .off(\"change\")\n      .on(\"change\", this._setItemActive.bind(this));\n\n    html\n      .find(\".item-detail.item-level span.text-box\")\n      .on(\"wheel\", this._setBuffLevel.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setBuffLevel.bind(this));\n      });\n\n    // Toggle condition\n    html.find(\".condition .checkbox\").click(this._onToggleCondition.bind(this));\n    html.find(\".condition .checkbox\").on(\"contextmenu\", this._onEditCondition.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Skills\n    /* -------------------------------------------- */\n\n    html.find(\".skill-lock-button\").on(\"click\", this._onToggleSkillLock.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Links\n    /* -------------------------------------------- */\n\n    html\n      // \"pointerenter\" would be better, but Foundry tooltip behaves unpredictably with it.\n      .on(\"pointerover\", \"[data-tooltip-extended]\", this._activateExtendedTooltip.bind(this))\n      .on(\"pointerleave\", \"[data-tooltip-extended]\", () => game.tooltip.deactivate());\n  }\n\n  /**\n   * Handle extended tooltip on hover activation.\n   *\n   * Async to reduce UX impact.\n   *\n   * @private\n   * @param {Event} event\n   */\n  async _activateExtendedTooltip(event) {\n    const el = event.currentTarget;\n    const id = el.dataset.tooltipExtended;\n    if (!id) return;\n\n    const context = { actor: this.actor, bonusTypes: pf1.config.bonusTypes, config: pf1.config };\n    this._getTooltipContext(id, context);\n\n    context.sources = context.sources?.filter((list) => list.sources?.length > 0);\n\n    if (\n      !(\n        context.header ||\n        context?.paths?.length > 0 ||\n        context?.sources?.length > 0 ||\n        context?.details?.length > 0 ||\n        context?.notes?.length > 0\n      )\n    )\n      return;\n\n    for (const src of context.sources) {\n      src.sources = src.sources.map((s) => ({\n        ...s,\n        type: s.type || pf1.config.bonusTypes[s.modifier || \"untyped\"] || s.modifier,\n      }));\n    }\n\n    const template = document.createElement(\"template\");\n    template.innerHTML = renderCachedTemplate(\"systems/pf1/templates/extended-tooltip.hbs\", context);\n\n    Hooks.callAll(\"renderPF1ExtendedTooltip\", this, id, template);\n\n    game.tooltip.activate(el, {\n      content: template.content,\n      cssClass: \"pf1 extended\",\n      direction: el.dataset.tooltipDirection || undefined,\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} fullId - Target ID\n   * @param {object} context - Context object to store data into\n   * @throws {Error} - If provided ID is invalid.\n   */\n  _getTooltipContext(fullId, context) {\n    const actor = this.actor,\n      system = actor.system;\n\n    // Lazy roll data\n    const lazy = {\n      get rollData() {\n        this._rollData ??= actor.getRollData();\n        return this._rollData;\n      },\n    };\n\n    const getSource = (path) => this.actor.sourceDetails[path];\n\n    const getNotes = (context, all = true) => {\n      const noteObjs = actor.getContextNotes(context, all);\n      return actor.formatContextNotes(noteObjs, lazy.rollData, { roll: false });\n    };\n\n    const damageTypes = (d) =>\n      [\n        ...(d.values?.map((dv) => pf1.registry.damageTypes.get(dv)?.name || dv) ?? []),\n        ...(d.custom\n          ?.split(\";\")\n          .map((dv) => dv?.trim())\n          .filter((dv) => !!dv) ?? []),\n      ].flat();\n\n    let header, subHeader;\n    const details = [];\n    const paths = [];\n    const sources = [];\n    let notes;\n\n    const re = /^(?<id>[\\w-]+)(?:\\.(?<detail>.*))?$/.exec(fullId);\n    const { id, detail } = re?.groups ?? {};\n\n    switch (id) {\n      case \"level\":\n        paths.push({ path: \"@attributes.hd.total\", value: system.attributes?.hd?.total });\n        if (system.details?.mythicTier > 0) {\n          paths.push({ path: \"@details.mythicTier\", value: system.details.mythicTier });\n        }\n        break;\n      case \"hit-points\":\n        paths.push(\n          { path: \"@attributes.hp.value\", value: system.attributes.hp.value },\n          { path: \"@attributes.hp.max\", value: system.attributes.hp.max },\n          { path: \"@attributes.hp.temp\", value: system.attributes.hp.temp },\n          { path: \"@attributes.hp.nonlethal\", value: system.attributes.hp.nonlethal }\n        );\n        sources.push({ sources: getSource(\"system.attributes.hp.max\") });\n        break;\n      case \"vigor\": // Wounds & Vigor\n        paths.push(\n          { path: \"@attributes.vigor.value\", value: system.attributes.vigor.value },\n          { path: \"@attributes.vigor.temp\", value: system.attributes.vigor.temp },\n          { path: \"@attributes.vigor.max\", value: system.attributes.vigor.max }\n        );\n\n        sources.push({\n          sources: getSource(\"system.attributes.vigor.max\"),\n        });\n        break;\n      case \"wounds\": // Wounds & Vigor\n        paths.push(\n          { path: \"@attributes.wounds.value\", value: system.attributes.wounds.value },\n          { path: \"@attributes.wounds.max\", value: system.attributes.wounds.max },\n          { path: \"@attributes.wounds.threshold\", value: system.attributes.wounds.threshold }\n        );\n\n        sources.push({\n          sources: getSource(\"system.attributes.wounds.max\"),\n        });\n        break;\n      case \"speed\": {\n        const mode = detail;\n\n        sources.push(\n          { sources: getSource(`system.attributes.speed.${mode}.base`) },\n          { sources: getSource(`system.attributes.speed.${mode}.total`) }\n        );\n\n        // Add base speed\n        const speed = system.attributes.speed[mode];\n        const [tD] = pf1.utils.convertDistance(speed.total);\n        const [tB] = pf1.utils.convertDistance(speed.base);\n        const [tR] = pf1.utils.convertDistance(speed.unhindered);\n\n        const isMetricDist = pf1.utils.getDistanceSystem() === \"metric\";\n        const tU = isMetricDist ? pf1.config.measureUnitsShort.m : pf1.config.measureUnitsShort.ft;\n        paths.push(\n          { path: `@attributes.speed.${mode}.total`, value: tD, unit: tU },\n          { path: `@attributes.speed.${mode}.base`, value: tB, unit: tU },\n          { path: `@attributes.speed.${mode}.unhindered`, value: tR, unit: tU }\n        );\n        // Add overland speed if we have actual speed\n        if (tD > 0) {\n          const [oD] = pf1.utils.convertDistance(speed.overland);\n          const oU = isMetricDist ? pf1.config.measureUnitsShort.km : pf1.config.measureUnitsShort.mi;\n          paths.push({ path: `@attributes.speed.${mode}.overland`, value: oD, unit: oU });\n        }\n        break;\n      }\n      case \"flyManeuverability\":\n        paths.push({\n          path: \"@attributes.speed.fly.maneuverability\",\n          value: system.attributes.speed.fly.maneuverability,\n        });\n        break;\n      case \"ac\": {\n        const ac = system.attributes.ac[detail];\n        paths.push(\n          { path: `@attributes.ac.${detail}.total`, value: ac?.total },\n          { path: \"@armor.type\", value: lazy.rollData.armor?.type },\n          { path: \"@shield.type\", value: lazy.rollData.shield?.type }\n        );\n        sources.push({\n          sources: getSource(`system.attributes.ac.${detail}.total`),\n        });\n\n        notes = getNotes(\"misc.ac\");\n        break;\n      }\n      case \"cmd\":\n        paths.push({\n          path: `@attributes.cmd.${detail}`,\n          value: system.attributes.cmd[detail],\n        });\n\n        sources.push({\n          sources: getSource(`system.attributes.cmd.${detail}`),\n        });\n\n        notes = getNotes(`misc.cmd`);\n        break;\n      case \"save\":\n        paths.push({\n          path: `@attributes.savingThrows.${detail}.total`,\n          value: system.attributes.savingThrows[detail]?.total,\n        });\n\n        sources.push({\n          sources: getSource(`system.attributes.savingThrows.${detail}.total`),\n        });\n\n        notes = getNotes(`savingThrow.${detail}`);\n        break;\n      case \"sr\":\n        paths.push({\n          path: \"@attributes.sr.total\",\n          value: system.attributes.sr.total,\n        });\n\n        sources.push({\n          sources: getSource(\"system.attributes.sr.total\"),\n          untyped: true,\n        });\n\n        notes = getNotes(\"misc.sr\");\n        break;\n      case \"bab\":\n        paths.push({\n          path: \"@attributes.bab.total\",\n          value: system.attributes.bab.total,\n        });\n\n        sources.push({\n          sources: getSource(\"system.attributes.bab.total\"),\n          untyped: true,\n        });\n        break;\n      case \"cmb\":\n        paths.push({\n          path: \"@attributes.cmb.total\",\n          value: system.attributes.cmb.total,\n          // omit: + @attributes.attack.shared\n          // omit: + @attributes.attack.general\n        });\n\n        if (system.traits.size !== \"med\") {\n          sources.push({\n            sources: [{ name: game.i18n.localize(\"PF1.Size\"), value: pf1.config.sizeSpecialMods[system.traits.size] }],\n          });\n        }\n\n        sources.push({\n          sources: getSource(\"system.attributes.attack.shared\"),\n        });\n\n        if (system.attributes.cmbAbility) {\n          sources.push({\n            sources: [\n              {\n                name: pf1.config.abilities[system.attributes.cmbAbility],\n                value: system.abilities[system.attributes.cmbAbility]?.mod,\n              },\n            ],\n          });\n        }\n\n        sources.push(\n          { sources: getSource(\"system.attributes.attack.general\") },\n          { sources: getSource(\"system.attributes.cmb.bonus\") }\n        );\n\n        notes = [...getNotes(\"attacks.attack\"), ...getNotes(\"attacks.melee\"), ...getNotes(\"misc.cmb\")];\n        break;\n      case \"init\":\n        paths.push({\n          path: \"@attributes.init.total\",\n          value: system.attributes.init.total,\n        });\n\n        sources.push({\n          sources: getSource(\"system.attributes.init.total\"),\n        });\n\n        notes = getNotes(\"misc.init\");\n        break;\n      case \"abilityScore\": {\n        const abl = detail;\n        const ability = system.abilities[detail] ?? {};\n        paths.push(\n          { path: `@abilities.${abl}.total`, value: ability.total, sign: false },\n          { path: `@abilities.${abl}.value`, value: ability.value, sign: false },\n          { path: `@abilities.${abl}.mod`, value: ability.mod },\n          { path: `@abilities.${abl}.damage`, value: ability.damage, sign: false },\n          { path: `@abilities.${abl}.drain`, value: ability.drain, sign: false },\n          { path: `@abilities.${abl}.undrained`, value: ability.undrained, sign: false },\n          { path: `@abilities.${abl}.penalty`, value: ability.penalty, sign: false },\n          { path: `@abilities.${abl}.base`, value: ability.base, sign: false },\n          { path: `@abilities.${abl}.baseMod`, value: ability.baseMod }\n        );\n\n        sources.push(\n          { sources: getSource(`system.abilities.${abl}.total`) },\n          { sources: getSource(`system.abilities.${abl}.penalty`) },\n          {\n            label: game.i18n.localize(\"PF1.ModifierOnly\"),\n            sources: getSource(`system.abilities.${abl}.mod`),\n          },\n          {\n            label: game.i18n.localize(\"PF1.CheckOnly\"),\n            sources: getSource(`system.abilities.${abl}.checkMod`),\n          }\n        );\n\n        notes = getNotes(`abilityChecks.${abl}`);\n        break;\n      }\n      case \"acp\":\n        paths.push(\n          {\n            path: \"@attributes.acp.total\",\n            value: system.attributes.acp.total,\n          },\n          {\n            path: \"@attributes.acp.skill\",\n            value: system.attributes.acp.skill,\n          },\n          {\n            path: \"@attributes.acp.encumbrance\",\n            value: system.attributes.acp.encumbrance,\n          },\n          {\n            path: \"@attributes.acp.gear\",\n            value: system.attributes.acp.gear,\n          }\n        );\n\n        sources.push(\n          {\n            sources: getSource(\"system.attributes.acp.total\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: getSource(\"system.attributes.acp.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: getSource(\"system.attributes.acp.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      case \"max-dex\":\n        paths.push({\n          path: \"@attributes.maxDexBonus\",\n          value: system.attributes.maxDexBonus,\n        });\n\n        sources.push(\n          {\n            sources: getSource(\"system.attributes.maxDexBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.armor\"),\n            sources: getSource(\"system.attributes.mDex.armorBonus\"),\n            untyped: true,\n          },\n          {\n            label: game.i18n.localize(\"PF1.EquipSlots.shield\"),\n            sources: getSource(\"system.attributes.mDex.shieldBonus\"),\n            untyped: true,\n          }\n        );\n        break;\n      case \"asf\": {\n        // TODO: Make ASF proper change target\n        const asfSources = [];\n        this.actor.itemTypes.equipment\n          .filter((item) => item.isActive)\n          .reduce((cur, item) => {\n            const itemASF = item.system.spellFailure || 0;\n            if (itemASF > 0) asfSources.push({ name: item.name, value: `${itemASF}%` });\n            return cur + itemASF;\n          }, 0);\n\n        if (asfSources.length) {\n          sources.push({ sources: asfSources, untyped: true });\n        }\n        break;\n      }\n      case \"implants\": {\n        const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n        paths.push(\n          { path: \"@abilities.int.total\", value: lazy.rollData.abilities.int.total },\n          { path: \"@abilities.con.total\", value: lazy.rollData.abilities.con.total }\n        );\n        sources.push({\n          untyped: true,\n          sources: cybertech.map((item) => ({\n            name: item.name,\n            value: item.system.implant,\n          })),\n        });\n        break;\n      }\n      case \"size\":\n        paths.push({ path: \"@traits.size\", value: system.traits.size }, { path: \"@size\", value: lazy.rollData.size });\n        break;\n      case \"stature\":\n        paths.push({ path: \"@traits.stature\", value: system.traits.stature });\n        break;\n      case \"aura\":\n        paths.push({ path: \"@traits.aura.custom\", empty: true });\n        break;\n      case \"fastHeal\":\n        paths.push({ path: \"@traits.fastHealing\", empty: true });\n        break;\n      case \"regen\":\n        paths.push({ path: \"@traits.regen\", empty: true });\n        break;\n      case \"conditionResistance\":\n        paths.push({ path: \"@traits.cres\", empty: true });\n        break;\n      case \"conditionImmunity\":\n        paths.push({ path: \"@traits.ci.value\", empty: true }, { path: \"@traits.ci.custom\", empty: true });\n        break;\n      case \"energyResistance\":\n        paths.push({ path: \"@traits.eres.total\", empty: true });\n        break;\n      case \"damageReduction\":\n        paths.push({ path: \"@traits.dr.total\", empty: true });\n        break;\n      case \"damageImmunity\":\n        paths.push({ path: \"@traits.di.value\", empty: true }, { path: \"@traits.di.custom\", empty: true });\n        break;\n      case \"damageVulnerability\":\n        paths.push({ path: \"@traits.dv.value\", empty: true }, { path: \"@traits.dv.custom\", empty: true });\n        break;\n      case \"proficiency\":\n        switch (detail) {\n          case \"language\":\n            paths.push({ path: \"@traits.languages.total\", empty: true });\n            sources.push({ sources: getSource(\"system.traits.languages\"), left: true, untyped: true });\n            break;\n          case \"weapon\":\n            paths.push({ path: \"@traits.weaponProf.total\", empty: true });\n            sources.push({ sources: getSource(\"system.traits.weaponProf\"), left: true, untyped: true });\n            break;\n          case \"armor\":\n            paths.push({ path: \"@traits.armorProf.total\", empty: true });\n            sources.push({ sources: getSource(\"system.traits.armorProf\"), left: true, untyped: true });\n            break;\n        }\n        break;\n      case \"quadruped\": {\n        paths.push({ path: \"@attributes.quadruped\", value: String(system.attributes.quadruped) });\n        const race = this.actor.race;\n        if (race) {\n          sources.push({\n            untyped: true,\n            sources: [{ name: race.name, value: race.system.quadruped ?? false, isBoolean: true }],\n          });\n        }\n        break;\n      }\n      case \"negativeLevels\":\n        paths.push({ path: \"@attributes.energyDrain\", value: system.attributes.energyDrain, signed: false });\n        break;\n      case \"item\": {\n        const [itemId, target] = detail.split(\".\");\n        const item = this.actor.items.get(itemId);\n        if (!item) return;\n        switch (target) {\n          case \"level\":\n            paths.push({\n              path: `@classes.${item.system.tag}.level`,\n              value: item.system.level,\n            });\n            break;\n          case \"resources\": {\n            if (item.isCharged && item.system.uses?.max > 0) {\n              paths.push(\n                { path: `@resources.${item.system.tag}.value`, value: item.system.uses?.value },\n                { path: `@resources.${item.system.tag}.max`, value: item.system.uses?.max }\n              );\n            }\n            break;\n          }\n          case \"attacks\": {\n            const action = item.defaultAction;\n            const attacks =\n              action\n                ?.getAttacks({ full: true, resolve: true, conditionals: true, bonuses: true })\n                ?.map((atk) => atk.bonus) ?? [];\n\n            if (attacks.length == 0) return;\n\n            const formatter = new Intl.NumberFormat(\"nu\", { signDisplay: \"always\" });\n            header = attacks.map((n) => formatter.format(n)).join(\"/\");\n\n            sources.push({\n              sources: item.attackSources,\n            });\n            break;\n          }\n          case \"damage\": {\n            const action = item.defaultAction;\n            if (!action?.hasDamage) return;\n\n            const actionData = action.data;\n            const rollData = action.getRollData();\n\n            const dmgformula = pf1.utils.formula.actionDamage(action, { strict: false });\n\n            //header = dmgformula; // No different than on sheet\n\n            const dmgSources = [];\n\n            subHeader = game.i18n.localize(\"PF1.Details\");\n\n            const damage = action.data.damage;\n            for (const { formula, type } of damage.parts ?? []) {\n              dmgSources.push({\n                name: formula,\n                value: pf1.utils.formula.simplify(formula, rollData, { strict: false }),\n                type: damageTypes(type).join(\", \"),\n                //unvalued: true,\n              });\n            }\n            for (const { formula, type } of damage.nonCritParts ?? []) {\n              dmgSources.push({\n                name: formula,\n                value: pf1.utils.formula.simplify(formula, rollData, { strict: false }),\n                type: damageTypes(type).join(\", \"),\n                //unvalued: true,\n              });\n            }\n\n            const held = rollData.action?.held || rollData.item?.held || \"normal\";\n\n            const abl = actionData.ability?.damage;\n            if (abl) {\n              const max = actionData.ability?.max ?? Infinity;\n              const mod = Math.min(rollData.abilities[abl]?.mod ?? 0, max);\n              const mult = actionData.ability?.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n              dmgSources.push({\n                value: mod >= 0 ? Math.floor(mod * mult) : mod,\n                type: pf1.config.abilities[abl],\n              });\n            }\n\n            sources.push({ sources: dmgSources });\n\n            sources.push({\n              sources: action.allDamageSources.map((s) => ({\n                name: s.flavor,\n                ...s,\n                type: pf1.config.bonusTypes[s.type] || s.type,\n              })),\n            });\n\n            const hasOptionalConditionals = action?.data.conditionals.find((c) => !c.default);\n            if (hasOptionalConditionals) {\n              // <span class=\"span3\">+ {{localize \"PF1.Conditionals\"}}</span>\n            }\n\n            if (damage.critParts?.length) {\n              // <span class=\"span3\">+ {{localize \"PF1.OnCritBonusFormula\"}}</span>\n            }\n            break;\n          }\n          case \"range\": {\n            const action = item.defaultAction;\n            if (!action?.hasRange) return;\n\n            const maxIncr = action.data.range?.maxIncrements ?? 1;\n            if (maxIncr <= 1) return;\n\n            details.push({\n              key: game.i18n.localize(\"PF1.MaximumRangeIncrements\"),\n              value: action.data.range.maxIncrements,\n              left: true,\n            });\n\n            const rollData = action.getRollData();\n            const range = {\n              ...(action.data.range ?? {}),\n              min: action.getRange({ type: \"min\", rollData }),\n              max: action.getRange({ type: \"max\", rollData }),\n            };\n\n            const u = pf1.utils.convertDistance(0, \"ft\")[1];\n            const mu = pf1.utils.convertDistance(0, range.units)[1];\n\n            details.push({\n              key: game.i18n.localize(\"PF1.Range\"),\n              value: `${range.min} ${u} – ${range.max} ${mu}`,\n              left: true,\n            });\n            break;\n          }\n          default:\n            throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n        }\n        break;\n      }\n      case \"carryCapacity\":\n        paths.push(\n          { path: \"@attributes.encumbrance.level\", value: system.attributes.encumbrance.level },\n          { path: \"@details.carryCapacity.bonus.total\", value: system.details.carryCapacity.bonus.total },\n          { path: \"@details.carryCapacity.multiplier.total\", value: system.details.carryCapacity.multiplier.total }\n        );\n\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryStrength\"),\n          sources: getSource(\"system.details.carryCapacity.bonus.total\"),\n        });\n        sources.push({\n          label: game.i18n.localize(\"PF1.CarryMultiplier\"),\n          sources: getSource(\"system.details.carryCapacity.multiplier.total\"),\n        });\n        break;\n      case \"feats\": {\n        const isMindless = this.actor.system.abilities?.int?.value === null;\n        if (!isMindless) {\n          const levels = Math.ceil(this.actor.system.attributes.hd.total / 2);\n          if (levels > 0) {\n            sources.push({ sources: [{ name: game.i18n.localize(\"PF1.FromLevels\"), value: levels }], untyped: true });\n          }\n          const mythic = Math.ceil(this.actor.system.details.mythicTier / 2);\n          if (mythic > 0) {\n            sources.push({ sources: [{ name: game.i18n.localize(\"PF1.FromMythic\"), value: mythic }], untyped: true });\n          }\n        }\n\n        // Generate fake sources\n        const featSources = [];\n        // TODO: Move this to the real source info generation\n        this.actor.changes\n          .filter((c) => c.target === \"bonusFeats\")\n          .forEach((c) => {\n            if (c.parent || c.flavor) {\n              featSources.push({\n                name: c.parent?.name ?? c.flavor,\n                value: c.value,\n              });\n            }\n          });\n\n        const feats = this.actor.getFeatCount();\n        if (feats.formula !== 0) {\n          featSources.push({\n            name: game.i18n.localize(\"PF1.BonusFeatFormula\"),\n            value: feats.formula,\n          });\n        }\n        sources.push({ sources: featSources, untyped: true });\n        break;\n      }\n      case \"skills\": {\n        const useBGSkills = game.settings.get(\"pf1\", \"allowBackgroundSkills\");\n        const isMindless = system.abilities?.int?.value === null;\n\n        const skillSources = [];\n        const isBG = detail === \"background\";\n\n        let bgAllowed = 0;\n\n        this.actor.itemTypes.class\n          .filter((cls) => cls.system.subType !== \"mythic\")\n          .forEach((cls) => {\n            // Favoured Class Bonus\n            // Apply FCB regardless if mindless if user applied such\n            if (pf1.config.favoredClassTypes.includes(cls.subType)) {\n              const fcSkills = cls.system.fc?.skill?.value || 0;\n              if (fcSkills > 0 && !isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassFC\", { className: cls.name }),\n                  value: fcSkills,\n                  untyped: true,\n                });\n              }\n            }\n\n            // Mindless get nothing else\n            if (isMindless) return;\n\n            const hd = cls.hitDice;\n            if (hd === 0) return;\n\n            // Background skills\n            if (useBGSkills && pf1.config.backgroundSkillClasses.includes(cls.subType)) {\n              const bgranks = hd * pf1.config.backgroundSkillsPerLevel;\n              bgAllowed += bgranks;\n              if (bgranks > 0 && isBG) {\n                skillSources.push({\n                  name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                  value: bgranks,\n                  untyped: true,\n                });\n              }\n            }\n\n            if (!isBG) {\n              const perLevel = cls.system.skillsPerLevel || 0;\n              skillSources.push({\n                name: game.i18n.format(\"PF1.SourceInfoSkillRank_ClassBase\", { className: cls.name }),\n                value: perLevel * hd,\n                untyped: true,\n              });\n            }\n          });\n\n        // Ability ability score\n        if (!isBG && !isMindless) {\n          const intMod = system.abilities?.int?.mod;\n          if (intMod !== 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.AbilityInt\"),\n              value: intMod * system.attributes?.hd?.total,\n            });\n          }\n        }\n\n        // Count transfers for background skills\n        if (useBGSkills) {\n          let bgUsed = 0;\n\n          // Count used skill ranks\n          for (const skl of Object.values(lazy.rollData.skills)) {\n            if (skl.subSkills) {\n              for (const subSkl of Object.values(skl.subSkills)) {\n                if (skl.background) {\n                  bgUsed += subSkl.rank;\n                }\n              }\n            } else if (skl.background) {\n              bgUsed += skl.rank;\n            }\n          }\n\n          // Adventure skills transferred to background skills\n          const sentToBG = bgUsed - bgAllowed;\n          if (sentToBG > 0) {\n            skillSources.push({\n              name: game.i18n.localize(\"PF1.Transferred\"),\n              value: isBG ? sentToBG : -sentToBG,\n            });\n          }\n        }\n\n        sources.push(\n          {\n            sources: getSource(\"system.details.skills.bonus\"),\n            untyped: true,\n          },\n          {\n            sources: skillSources,\n            untyped: true,\n          }\n        );\n        break;\n      }\n      case \"skill\": {\n        const fullSkillId = detail,\n          skillIdParts = fullSkillId.split(\".\"),\n          mainId = skillIdParts.shift(),\n          subSkillId = skillIdParts.pop(),\n          skill = this.actor.getSkillInfo(fullSkillId, { rollData: lazy.rollData });\n\n        header = `<code>${skill.id}</code>`;\n\n        const path = subSkillId ? `${mainId}.subSkills.${subSkillId}` : mainId;\n\n        paths.push(\n          { path: `@skills.${path}.mod`, value: skill.mod },\n          { path: `@skills.${path}.rank`, value: skill.rank }\n        );\n\n        const acp = system.attributes?.acp?.skill || 0;\n\n        const skillSources = [];\n        // Add skill rank source\n        if (skill.rank > 0) {\n          skillSources.push({ name: game.i18n.localize(\"PF1.SkillRankPlural\"), value: skill.rank });\n\n          // Add class skill bonus source\n          if (skill.cs) {\n            skillSources.push({ name: game.i18n.localize(\"PF1.CSTooltip\"), value: pf1.config.classSkillBonus });\n          }\n        }\n\n        // Add ACP source\n        if (skill.acp && acp > 0) {\n          skillSources.push({ name: game.i18n.localize(\"PF1.ACPLong\"), value: -acp });\n        }\n\n        // Add ability modifier source\n        if (skill.ability) {\n          skillSources.push({\n            name: pf1.config.abilities[skill.ability],\n            value: lazy.rollData.abilities[skill.ability]?.mod ?? 0,\n          });\n        }\n\n        sources.push({ sources: skillSources }, { sources: getSource(`system.skills.${path}.mod`) });\n\n        notes = getNotes(`skill.${fullSkillId}`);\n        if (subSkillId) notes.push(...getNotes(`skill.${mainId}`, false));\n        break;\n      }\n      case \"spellbook\": {\n        const [bookId, target, subTarget] = detail.split(\".\");\n        const spellbook = system.attributes?.spells?.spellbooks?.[bookId];\n        switch (target) {\n          case \"class\": {\n            paths.push(\n              { path: \"@cl\", value: spellbook.cl.total },\n              { path: `@spells.${bookId}.cl.total`, value: spellbook.cl.total }\n            );\n\n            let cls;\n            // TODO: get proper spellbook roll data\n            if (spellbook.class === \"_hd\") cls = { level: lazy.rollData.attributes?.hd?.total };\n            cls = lazy.rollData.classes?.[spellbook.class];\n            if (cls) paths.push({ path: \"@class.level\", value: cls.level });\n\n            sources.push({\n              sources: getSource(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n            });\n            break;\n          }\n          case \"ability\": {\n            const ablMod = lazy.rollData.abilities[spellbook.ability]?.mod;\n            paths.push(\n              {\n                path: `@spells.${bookId}.abilityMod`,\n                value: ablMod,\n              },\n              {\n                path: \"@ablMod\",\n                value: ablMod,\n              }\n            );\n            break;\n          }\n          case \"level\":\n            paths.push({\n              path: `@spells.${bookId}.cl.total`,\n              value: spellbook.cl?.total,\n            });\n            sources.push({\n              sources: getSource(`system.attributes.spells.spellbooks.${bookId}.cl.total`),\n              untyped: true,\n            });\n            break;\n          case \"concentration\": {\n            paths.push({\n              path: `@spells.${bookId}.concentration.total`,\n              value: spellbook.concentration?.total,\n            });\n            sources.push({\n              sources: getSource(`system.attributes.spells.spellbooks.${bookId}.concentration.total`),\n              untyped: true,\n            });\n            break;\n          }\n          case \"range\": {\n            const unit = subTarget;\n            paths.push({\n              path: `@spells.${bookId}.range.${unit}`,\n              value: spellbook.range?.[unit],\n              unit:\n                pf1.utils.getDistanceSystem() === \"metric\"\n                  ? pf1.config.measureUnitsShort.m\n                  : pf1.config.measureUnitsShort.ft,\n            });\n            break;\n          }\n          case \"spellPoints\":\n            paths.push(\n              { path: `@spells.${bookId}.spellPoints.value`, value: spellbook.spellPoints.value },\n              { path: `@spells.${bookId}.spellPoints.max`, value: spellbook.spellPoints.max }\n            );\n\n            break;\n        }\n        break;\n      }\n      case \"spell\": {\n        const [itemId, target] = detail.split(\".\");\n        const item = this.actor.items.get(itemId);\n        switch (target) {\n          case \"material\": {\n            const materials = item.system.materials ?? {};\n            if (materials.focus) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.focus.Label\"),\n                value: materials.focus,\n              });\n            }\n            if (materials.value) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SpellComponents.Type.material.Label\"),\n                value: materials.value,\n              });\n            }\n            break;\n          }\n          case \"school\": {\n            if (item.system.subschool) {\n              details.push({\n                key: game.i18n.localize(\"PF1.SubSchool\"),\n                value: item.system.subschool,\n              });\n            }\n\n            if (item.system.descriptors?.total?.size) {\n              details.push({\n                key: game.i18n.localize(\"PF1.DescriptorPlural\"),\n                value: Array.from(item.system.descriptors?.total).join(\", \"),\n              });\n            }\n\n            const action = item.defaultAction;\n\n            if (action?.hasDamage) {\n              const types = action.data.damage?.parts?.map((d) => d.type).map(damageTypes) ?? [];\n\n              if (types.length) {\n                details.push({\n                  key: game.i18n.localize(\"PF1.Damage\"),\n                  value: types.join(\", \"),\n                });\n              }\n            }\n            break;\n          }\n        }\n        break;\n      }\n      // Generics\n      case \"generic\": {\n        const [target, subTarget] = detail.split(\".\");\n        switch (target) {\n          case \"attack\": {\n            paths.push(\n              { path: \"@attributes.attack.shared\", value: system.attributes.attack.shared },\n              { path: \"@attributes.attack.general\", value: system.attributes.attack.general },\n              { path: `@attributes.attack.${subTarget}`, value: system.attributes.attack[subTarget] }\n            );\n\n            const abl = system.attributes.attack[`${subTarget}Ability`];\n\n            sources.push(\n              { sources: getSource(\"system.attributes.attack.shared\") },\n              {\n                sources: [\n                  {\n                    name: pf1.config.abilities[abl] || abl,\n                    value: lazy.rollData.abilities[abl]?.mod,\n                  },\n                ],\n              }\n            );\n\n            if (system.traits.size !== \"med\") {\n              sources.push({\n                sources: [\n                  {\n                    name: game.i18n.localize(\"PF1.Size\"),\n                    value: pf1.config.sizeMods[system.traits.size],\n                  },\n                ],\n              });\n            }\n\n            sources.push({ sources: getSource(\"system.attributes.attack.general\") });\n            sources.push({ sources: getSource(`system.attributes.attack.${subTarget}`) });\n\n            notes = [...getNotes(\"attacks.attack\"), getNotes(`attacks.${subTarget}`)];\n\n            break;\n          }\n        }\n        break;\n      }\n      default:\n        throw new Error(`Invalid extended tooltip identifier \"${fullId}\"`);\n    }\n\n    context.header = header;\n    context.subHeader = subHeader;\n    context.details = details;\n    context.paths = paths;\n    context.sources = sources;\n    context.notes = notes ?? [];\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @protected\n   * @param {Event} event - Triggering event\n   * @param {Function} callback - Submission handler\n   */\n  _onSpanTextInput(event, callback) {\n    const el = event.target;\n    const parent = el.parentElement;\n\n    const isNumber = el.dataset.dtype === \"Number\" || el.type === \"number\";\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(\"INPUT\");\n    newEl.type = \"text\";\n    if (el.dataset?.dtype) {\n      newEl.dataset.dtype = el.dataset.dtype;\n      if (isNumber) newEl.size = 12; // HTML defaults to 20\n    }\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n    const name = el.getAttribute(\"name\"); // span has no .name attribute even if name=\"\" is used\n\n    let prevValue = 0,\n      maxValue;\n\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.document, name) || 0;\n      if (name.endsWith(\".value\") && !noCap && isNumber) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.document, maxName);\n      }\n    } else {\n      if (!el.classList.contains(\"placeholder\")) {\n        prevValue = isNumber ? parseFloat(el.innerText || \"0\") : el.innerText || \"\";\n      }\n    }\n\n    // Add constraints if they exist\n    if (el.dataset.min) newEl.min = el.dataset.min;\n    if (el.dataset.step) newEl.step = el.dataset.step;\n    if (el.dataset.max) newEl.max = el.dataset.max;\n\n    // Set value of new input element\n    newEl.value = `${prevValue || 0}`;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = isNumber ? parseFloat(el.dataset.clearValue || \"0\") : \"\";\n\n    // Replace span with input element\n    parent.replaceChild(newEl, el);\n\n    let changed;\n    newEl.addEventListener(\n      \"change\",\n      (event) => {\n        event.preventDefault();\n        event.stopPropagation(); // Prevent Foundry acting on this\n        changed = true;\n\n        let newValue;\n        if (allowRelative) {\n          newValue = adjustNumberByStringCommand(prevValue, newEl.value, maxValue, clearValue);\n          newEl.value = newValue;\n        } else {\n          newValue = parseFloat(newEl.value || \"0\");\n        }\n\n        // Reset if nothing changed\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n        // Pass it to callback\n        else {\n          newEl.readOnly = true;\n          callback.call(this, event, el);\n        }\n      },\n      { once: true }\n    );\n\n    newEl.addEventListener(\n      \"focusout\",\n      (event) => {\n        if (changed) return;\n\n        const newValue = parseFloat(newEl.value || \"0\");\n        if (newValue === prevValue) {\n          parent.replaceChild(el, newEl);\n        }\n      },\n      { passive: true, once: true }\n    );\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  /**\n   * @protected\n   * @param {Event} event\n   */\n  _moveTooltips(event) {\n    let elem = event.target;\n    if (!elem.matches(\".tooltip\")) elem = elem.closest(\".tooltip\");\n    if (elem) {\n      const tip = elem.querySelector(\".tooltipcontent\");\n      if (tip) {\n        const x = event.clientX;\n        const y = event.clientY + 24;\n        tip.style.cssText += `left:${x}px;top:${y}px;`;\n      }\n    }\n  }\n\n  _onDragSkillStart(event) {\n    const elem = event.currentTarget;\n    const skillElem = elem.closest(\".skill\");\n    const mainSkill = skillElem.dataset.skill;\n    const subSkill = skillElem.dataset.subSkill;\n\n    const result = {\n      type: \"skill\",\n      uuid: this.document.uuid,\n      skill: subSkill ? `${mainSkill}.${subSkill}` : mainSkill,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * @param {DragEvent} event\n   * @param {\"bab\"|\"cmb\"|\"defenses\"|\"concentration\"|\"cl\"|\"initiative\"|\"abilityScore\"|\"attack\"} type\n   * @param {string} [subType] Type specific subtype\n   */\n  _onDragMiscStart(event, type, subType) {\n    const result = {\n      type: type,\n      uuid: this.document.uuid,\n    };\n\n    switch (type) {\n      case \"bab\":\n      case \"cmb\":\n      case \"initiative\":\n      case \"defenses\":\n        // No special handling\n        break;\n      case \"concentration\":\n      case \"cl\": {\n        const elem = event.currentTarget.closest(\".tab.spellbook-group\");\n        result.bookId = elem.dataset.tab;\n        break;\n      }\n      case \"abilityScore\":\n        result.ability = subType;\n        break;\n      case \"attack\":\n        result.attack = subType;\n        break;\n      default:\n        throw new Error(`Unrecognized drag source: ${type}`);\n    }\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  _onDragSaveStart(event, type) {\n    const result = {\n      type: \"save\",\n      save: type,\n      uuid: this.document.uuid,\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(result));\n  }\n\n  /**\n   * Initialize Item list filters by activating the set of filters which are currently applied\n   *\n   * @private\n   * @param _i\n   * @param {Element} ul\n   */\n  _initializeFilterItemList(_i, ul) {\n    const filters = ul.querySelectorAll(\".filter-item\");\n    for (const li of filters) {\n      const set = (this._filters.sections[li.dataset.category] ??= new Set());\n      if (set.has(li.dataset.filter)) li.classList.add(\"active\");\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  async _onRest(event) {\n    event.preventDefault();\n\n    const skipDialog = pf1.documents.settings.getSkipActionPrompt();\n    if (skipDialog) {\n      const button = event.currentTarget;\n      button.disabled = true;\n      try {\n        await this.actor.performRest({ verbose: true });\n      } finally {\n        button.disabled = false;\n      }\n    } else {\n      const app = Object.values(this.document.apps).find((o) => {\n        return o instanceof ActorRestDialog && o._element;\n      });\n      if (app) app.render(true, { focus: true });\n      else new ActorRestDialog(this.document).render(true);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemRoll(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    if (item == null) return;\n    return item.displayCard(undefined, { token: this.token });\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setFeatUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.uses.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _setSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.value ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.preparation.value\", value);\n    if (prevValue < value) {\n      const maxValue = item.system.preparation.max ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(maxValue, value));\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n  _setMaxSpellUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n\n    const prevValue = item.system.preparation?.max ?? 0;\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setItemUpdate(item.id, \"system.preparation.max\", Math.max(0, value));\n    if (prevValue > value) {\n      const curValue = item.system.preparation.value ?? 0;\n      this.setItemUpdate(item.id, \"system.preparation.value\", Math.min(curValue, value));\n    }\n    if (value < 0) {\n      el.tagName === \"INPUT\" ? (el.value = 0) : (el.innerText = 0);\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _adjustActorPropertyBySpan(event, oldEl) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    this._mouseWheelAdd(event, el);\n\n    // Get base value\n    const rawValue = el.tagName === \"INPUT\" ? el.value : el.innerText;\n    let value = el.dataset.dtype === \"String\" ? rawValue : Number(rawValue);\n\n    // Adjust value if needed\n    const name = el.getAttribute(\"name\"); // .name is not available on non-inputs\n    if (name.match(/^system\\.abilities\\.([a-zA-Z0-9]+)\\.value$/)) {\n      if (Number.isNaN(parseInt(value))) value = null;\n      else value = parseInt(value);\n    }\n\n    // Add constraints if any\n    if (el.min) value = Math.max(Number(el.min), value);\n    if (el.max) value = Math.min(Number(el.max), value);\n    if (el.step) value = value.toNearest(Number(el.step));\n\n    let updateData;\n    if (name) {\n      if (value === getProperty(this.actor, name)) {\n        // Restore input\n        if (oldEl) el.parentElement.replaceChild(oldEl, el);\n        return;\n      }\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (event) => this._updateObject(event, this._getSubmitData(updateData)), {\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  _setBuffLevel(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    this._mouseWheelAdd(event, el);\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n\n    this.setItemUpdate(item.id, \"system.level\", value);\n\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  _hideShowElement(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const target = this.element.find(`.${a.dataset.for}`);\n\n    if (target.hasClass(\"hidden\")) {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-down\").addClass(\"fa-arrow-circle-up\");\n      target.removeClass(\"hidden\");\n      target.hide();\n      target.slideDown(200);\n\n      this._hiddenElems[a.dataset.for] = false;\n    } else {\n      $(a).find(\"i\").removeClass(\"fa-arrow-circle-up\").addClass(\"fa-arrow-circle-down\");\n      target.slideUp(200, () => target.addClass(\"hidden\"));\n\n      this._hiddenElems[a.dataset.for] = true;\n    }\n  }\n\n  _onToggleCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n\n    this.actor.toggleCondition(conditionId);\n  }\n\n  async _onEditCondition(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const conditionId = a.dataset.conditionId;\n    const cond = pf1.registry.conditions.get(conditionId);\n    if (!cond) throw new Error(`Invalid condition ID: ${conditionId}`);\n\n    let ae;\n\n    if (this.actor.statuses.has(conditionId)) {\n      const relevantAEs = [];\n      for (const ae of this.actor.allApplicableEffects()) {\n        if (!ae.active) continue;\n        if (ae.statuses.has(conditionId)) relevantAEs.push(ae);\n      }\n\n      // TODO: Add selector and remove this error message\n      if (relevantAEs.length > 1) {\n        return void ui.notifications.warn(\"PF1.Error.TooManyConditionSources\", { localize: true });\n      }\n\n      ae = relevantAEs[0];\n    }\n\n    const { bottom, left } = a.getBoundingClientRect();\n\n    const rounds = await pf1.utils.dialog.getNumber({\n      title: cond.name + \" – \" + game.i18n.localize(\"PF1.Duration\"),\n      initial: Math.floor((ae?.duration?.seconds ?? 0) / CONFIG.time.roundTime),\n      hint: game.i18n.localize(\"PF1.Time.Period.round.Label\"),\n      min: 0,\n      step: 1,\n      dialog: {\n        top: bottom + 20,\n        left: left - 20,\n      },\n    });\n\n    if (Number.isNaN(rounds)) return;\n\n    const updatedata = { \"duration.seconds\": rounds * CONFIG.time.roundTime };\n    if (ae) ae.update(updatedata);\n    else this.actor.setCondition(conditionId, updatedata);\n  }\n\n  /**\n   * Toggle skill lock.\n   *\n   * @param {MouseEvent} event\n   */\n  _onToggleSkillLock(event) {\n    event.preventDefault();\n    this._skillsLocked = !this._skillsLocked;\n\n    const target = event.currentTarget;\n    target.classList.toggle(\"unlocked\", !this._skillsLocked);\n\n    const tab = target.closest(\".tab\");\n    tab.classList.toggle(\"locked\", this._skillsLocked);\n\n    tab.querySelectorAll(\".lockable\").forEach((el) => {\n      if ([\"INPUT\", \"SELECT\"].includes(el.tagName)) {\n        el.disabled = this._skillsLocked;\n      } else {\n        el.classList.toggle(\"hide-contents\", this._skillsLocked);\n      }\n    });\n  }\n\n  /**\n   * Handle opening a compendium browser\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onOpenCompendiumBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const target = a.dataset.category;\n\n    pf1.applications.compendiums[target].render(true, { focus: true });\n  }\n\n  /**\n   * Handle opening a skill's compendium entry\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  async _onOpenCompendiumEntry(event) {\n    const uuid = event.currentTarget.dataset.compendiumEntry;\n\n    openJournal(uuid);\n  }\n\n  _onRollConcentration(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.document.rollConcentration(spellbookKey, { token: this.token });\n  }\n\n  _onRollCL(event) {\n    event.preventDefault();\n\n    const spellbookKey = $(event.currentTarget).closest(\".spellbook-group\").data(\"tab\");\n    this.document.rollCL(spellbookKey, { token: this.token });\n  }\n\n  _setItemActive(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const state = el.checked;\n    const itemId = el.closest(\".item\").dataset.itemId;\n\n    this.actor.items.get(itemId).setActive(state);\n  }\n\n  _onLevelUp(event) {\n    event.preventDefault;\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    return LevelUpForm.increaseLevel(this.actor, item, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   * @private\n   */\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this.openItemSummary(li);\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @param {JQuery<HTMLElement>} elem - The element to open. Likely will have the `item` class in CSS.\n   * @param {boolean} [instant=false] - Whether to instantly show the expansion (true), or animate it (false)\n   */\n  async openItemSummary(elem, { instant = false, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    const { description, properties } = await item.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    this._expandedItems = this._expandedItems.filter((o) => o !== itemId);\n    if (elem.classList.contains(\"expanded\")) {\n      const summary = elem.querySelector(\".item-summary\");\n      if (instant) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: description || game.i18n.localize(\"PF1.NoDescription\"),\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      content = await TextEditor.enrichHTML(content, { rollData, async: true, secrets: this.actor.isOwner });\n\n      const div = $(content);\n\n      if (instant) elem.append(...div);\n      else {\n        div.hide();\n        elem.append(...div);\n        div.slideDown(200);\n      }\n      this._expandedItems.push(itemId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onInputText(event) {\n    event.preventDefault();\n    const elem = event.target;\n\n    if (!elem || elem?.disabled) return;\n\n    elem.readOnly = false;\n    const value = foundry.utils.getProperty(this.document, elem.name);\n\n    const origValue = elem.value;\n    elem.value = value;\n\n    let changed = false;\n\n    const wheelEvent = event instanceof WheelEvent;\n    if (wheelEvent) {\n      this._mouseWheelAdd(event, elem);\n    } else {\n      elem.select();\n    }\n\n    const handler = (event) => {\n      // Clear selection if any\n      const s = document.getSelection();\n      if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n\n      if (wheelEvent) elem.removeEventListener(\"pointerout\", handler);\n      else {\n        elem.removeEventListener(\"focusout\", handler);\n        elem.removeEventListener(\"keydown\", keyHandler);\n      }\n      elem.removeEventListener(\"click\", handler);\n\n      changed ||= `${value}` !== elem.value;\n\n      if (changed) {\n        this._onSubmit(event);\n      } else {\n        elem.readOnly = true;\n        elem.value = origValue;\n      }\n    };\n    const keyHandler = (event) => {\n      if (event.key === \"Enter\") {\n        changed = true;\n        handler.call(this, event);\n      }\n    };\n\n    if (wheelEvent) {\n      elem.addEventListener(\"pointerout\", handler, { passive: true });\n      changed = true;\n    } else {\n      elem.addEventListener(\"focusout\", handler, { passive: true });\n      elem.addEventListener(\"keydown\", keyHandler, { passive: true });\n    }\n    elem.addEventListener(\"click\", handler, { passive: true });\n  }\n\n  /* -------------------------------------------- */\n\n  async _onArbitrarySkillCreate(event) {\n    event.preventDefault();\n    const skillId = $(event.currentTarget).parents(\".skill\").attr(\"data-skill\");\n    const mainSkillData = this.document.system.skills[skillId];\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: mainSkillData.ability,\n      rank: 0,\n      rt: mainSkillData.rt,\n      cs: mainSkillData.cs,\n      acp: mainSkillData.acp,\n    };\n\n    // Get tag\n    let count = 1;\n    let tag = `${skillId}${count}`;\n    while (mainSkillData.subSkills[tag] != null) {\n      count++;\n      tag = `${skillId}${count}`;\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${skillId}.subSkills.${tag}`] = skillData;\n    await this.document.update(updateData);\n\n    return this._editSkill(skillId, tag);\n  }\n\n  async _onSkillCreate(event) {\n    event.preventDefault();\n    const isBackground = $(event.currentTarget).parents(\".skills-list\").attr(\"data-background\") === \"true\";\n    const skillData = {\n      name: game.i18n.format(\"DOCUMENT.New\", { type: game.i18n.localize(\"PF1.Skill\") }),\n      ability: \"int\",\n      rank: 0,\n      mod: 0,\n      rt: false,\n      cs: false,\n      acp: false,\n      background: isBackground,\n      custom: true,\n    };\n\n    const baseName = skillData.name || \"skill\";\n    const baseTag = pf1.utils.createTag(baseName);\n    let tag = baseTag;\n    let count = 1;\n    while (this.document.system.skills[tag] != null) {\n      count++;\n      tag = baseTag + count.toString();\n    }\n\n    const updateData = {};\n    updateData[`system.skills.${tag}`] = skillData;\n    await this.document.update(updateData);\n\n    return this._editSkill(tag);\n  }\n\n  /**\n   * Opens a dialog to edit a skill.\n   *\n   * @param {string} skillId - The id of the skill in question.\n   * @param {string} [subSkillId] - The id of the subskill, if appropriate.\n   * @returns {Promise.<void>}\n   */\n  _editSkill(skillId, subSkillId) {\n    return new Promise((resolve) => {\n      const app = new pf1.applications.SkillEditor(this.document, skillId, subSkillId);\n      app.addCallback(resolve);\n      app.render(true);\n    });\n  }\n\n  _onSkillEdit(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n\n    return this._editSkill(mainSkillId, subSkillId);\n  }\n\n  _onSkillDelete(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".skill\");\n    const mainSkillId = el.dataset.skill;\n    const subSkillId = el.dataset.subSkill;\n    const skillId = subSkillId ? `${mainSkillId}.${subSkillId}` : mainSkillId;\n\n    const info = this.actor.getSkillInfo(skillId);\n\n    const deleteSkill = () => {\n      const updateData = {};\n      // Delete subskill\n      if (subSkillId) updateData[`system.skills.${mainSkillId}.subSkills.-=${subSkillId}`] = null;\n      // Delete main skill\n      else updateData[`system.skills.-=${mainSkillId}`] = null;\n      this.document.update(updateData);\n    };\n\n    if (getSkipActionPrompt()) {\n      deleteSkill();\n    } else {\n      Dialog.confirm({\n        title: game.i18n.format(\"PF1.DeleteSkillTitle\", { name: info.fullName }),\n        content: `<p>${game.i18n.localize(\"PF1.DeleteSkillConfirmation\")}</p>`,\n        yes: () => deleteSkill(),\n        rejectClose: true,\n      });\n    }\n  }\n\n  async _onPointBuyCalculator(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.document.apps).find((o) => {\n      return o instanceof PointBuyCalculator && o._element;\n    });\n    if (app) app.render(true, { focus: true });\n    else new PointBuyCalculator(this.document).render(true);\n  }\n\n  async _onSensesSelector(event) {\n    event.preventDefault();\n\n    const app = Object.values(this.document.apps).find((o) => {\n      return o instanceof pf1.applications.SensesSelector && o._element;\n    });\n    if (app) app.render(true, { focus: true });\n    else new pf1.applications.SensesSelector(this.document).render(true);\n  }\n\n  async _onControlAlignment(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const items = Object.entries(pf1.config.alignmentsShort).map(([value, label]) => ({ value, label }));\n    const w = new Widget_ItemPicker(\n      (alignment) => {\n        this.document.update({ \"system.details.alignment\": alignment });\n      },\n      { items, columns: 3 }\n    );\n    w.render($(a));\n  }\n\n  /**\n   * Activate an item from item control button.\n   *\n   * @param {MouseEvent} event Click event\n   */\n  _itemActivationControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    item.use({ ev: event, token: this.token });\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n\n    if (item.type === \"container\") newQuantity = Math.min(newQuantity, 1);\n\n    item.update({ \"system.quantity\": newQuantity });\n  }\n\n  async _quickEquipItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    item.setActive(!item.activeState);\n  }\n\n  async _quickCarryItem(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.carried\": !item.system.carried });\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    if (item.isPhysical) {\n      item.update({ \"system.identified\": !item.system.identified });\n    }\n  }\n\n  async _itemPreparedToggle(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n    const property = el.dataset.name;\n\n    const updateData = { system: {} };\n    foundry.utils.setProperty(updateData.system, property, foundry.utils.getProperty(item.system, property) ? 0 : 1);\n    item.update(updateData);\n  }\n\n  _prepareDuplicateItem(itemData, { rename = true } = {}) {\n    delete itemData._id;\n\n    delete itemData.system.links?.children;\n    delete itemData.system.links?.charges;\n\n    itemData.sort = itemData.sort + 1_000;\n\n    if (rename) {\n      // BUG: If unidentified item has same name, it won't be matched or modified\n      const searchUnusedName = (name) => {\n        let iter = 1;\n        let newName;\n        do {\n          iter += 1;\n          newName = `${name} (${iter})`;\n        } while (this.actor.items.getName(newName));\n        return newName;\n      };\n\n      // Eliminate previous iterator\n      itemData.name = itemData.name.replace(/\\s+\\(\\d+\\)$/, \"\");\n\n      itemData.name = searchUnusedName(itemData.name);\n    }\n\n    // TODO: itemData.system.unidentified?.name;\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.closest(\".item[data-item-id]\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n    const itemData = item.toObject();\n\n    this._prepareDuplicateItem(itemData);\n\n    const items = await this.document.createEmbeddedDocuments(\"Item\", [itemData]);\n    // Open sheet for new item\n    items?.forEach((item) => item.sheet.render(true));\n  }\n\n  _quickAction(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const itemId = a.dataset.itemId;\n    const item = this.document.items.get(itemId);\n    if (!item) return;\n\n    return item.use({ token: this.token });\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n    const category = a.dataset.category;\n\n    this.actor.convertCurrency(category, currencyType);\n  }\n\n  /**\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\n   *\n   * @private\n   * @param {Event} event\n   */\n  _onItemCreate(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const [categoryId, sectionId] = el.dataset.create?.split(\".\") ?? [];\n    const createData = pf1.config.sheetSections[categoryId]?.[sectionId]?.create;\n    if (!createData) throw new Error(`No creation data found for \"${categoryId}.${sectionId}\"`);\n    createData.type ||= el.dataset.type;\n    const type = createData.type;\n    const subType = createData.system?.subType;\n    const typeName = game.i18n.localize(\n      subType ? `PF1.Subtypes.Item.${type}.${subType}.Single` : CONFIG.Item.typeLabels[type]\n    );\n\n    const itemData = foundry.utils.mergeObject(\n      {\n        name: game.i18n.format(\"PF1.NewItem\", { type: typeName }),\n        system: {},\n      },\n      createData,\n      { inplace: false }\n    );\n\n    // Add type specific data\n    if (type === \"spell\") {\n      itemData.system.level = parseInt(el.dataset.level);\n      itemData.system.spellbook = el.dataset.book;\n    }\n\n    const newItem = new Item.implementation(itemData);\n\n    this._sortNewItem(newItem);\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => this._isItemSameSubGroup(newItem, oldItem))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      // Ensure no duplicate names occur\n      const baseName = newItem.name;\n      let newName = baseName;\n      let i = 2;\n      const names = new Set(oldItems.map((i) => i.name));\n      while (names.has(newName)) {\n        newName = `${baseName} (${i++})`;\n      }\n\n      if (newName !== newItem.name) newItem.updateSource({ name: newName });\n    }\n\n    return this.document.createEmbeddedDocuments(\"Item\", [newItem.toObject()], { renderSheet: true });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle editing an existing Owned Item for the Actor\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.document.items.get(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true });\n  }\n\n  /**\n   * Handle deleting an existing Owned Item for the Actor\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.document.items.get(li.dataset.itemId);\n\n    if (getSkipActionPrompt()) {\n      item.delete();\n    } else {\n      button.disabled = true;\n\n      const msg = `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`;\n      Dialog.confirm({\n        title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }),\n        content: msg,\n        yes: () => {\n          item.delete();\n          button.disabled = false;\n        },\n        no: () => (button.disabled = false),\n        rejectClose: true,\n      }).then(null, () => (button.disabled = false));\n    }\n  }\n\n  async _onItemGive(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    const targets = game.actors.filter((a) => a !== this.actor && (a.isOwner || a.hasPlayerOwner));\n    if (targets.length === 0) ui.notifications.warn(\"PF1.Error.NoGiftTargets\", { localize: true });\n\n    const targetActorId = await pf1.utils.dialog.getActor({\n      title: game.i18n.localize(\"PF1.GiveItemToActor\"),\n      actors: targets,\n    });\n\n    const target = game.actors.get(targetActorId);\n    if (!target) throw new Error(`Invalid actor ID as gift target: \"${targetActorId}\"`);\n\n    if (target.isOwner) {\n      const docs = await target.createEmbeddedDocuments(\"Item\", [item.toObject()]);\n      // Delete only if item was successfully created\n      if (docs.length > 0) await item.delete();\n    } else {\n      game.socket.emit(\"system.pf1\", {\n        eventType: \"giveItem\",\n        targetActor: target.uuid,\n        item: item.uuid,\n      });\n      // Deleting will be performed on the gm side as well to prevent race conditions\n    }\n  }\n\n  async _onItemSplit(event) {\n    event.preventDefault();\n\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.actor.items.get(itemId);\n\n    const quantity = item.system.quantity;\n    if (quantity < 2) throw new Error(\"Can't split stack with less than 2 items\");\n\n    const options = {\n      total: quantity,\n      title: game.i18n.format(\"PF1.Dialog.SplitItem.Title\", { name: item.name }),\n    };\n\n    const result = await pf1.applications.SplitStack.wait(options);\n    if (!result) return;\n\n    const [keep, split] = result;\n\n    const itemData = item.toObject();\n    itemData.system.quantity = split;\n\n    this._prepareDuplicateItem(itemData, { rename: false });\n\n    await Item.implementation.createDocuments([itemData], { parent: this.actor });\n    await item.update({ \"system.quantity\": keep });\n  }\n\n  /**\n   * Handle rolling an Ability check, either a test or a saving throw\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onRollAbilityTest(event) {\n    event.preventDefault();\n    const ability = event.currentTarget.closest(\".ability\").dataset.ability;\n    this.document.rollAbilityTest(ability, { token: this.token });\n  }\n\n  _onRollBAB(event) {\n    event.preventDefault();\n    this.document.rollBAB({ token: this.token });\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  _onRollAttack(event) {\n    event.preventDefault();\n    /** @type {HTMLElement} */\n    let el = event.target;\n    if (!el.classList.contains(\"rollable\")) el = el.closest(\".rollable\");\n\n    const maneuver = el.dataset.type !== \"weapon\";\n    const ranged = el.dataset.ranged === \"true\";\n\n    this.document.rollAttack({ maneuver, ranged, token: this.token });\n  }\n\n  _onRollInitiative(event) {\n    event.preventDefault();\n    this.document.rollInitiative({\n      createCombatants: true,\n      rerollInitiative: game.user.isGM,\n      token: this.token,\n    });\n  }\n\n  _onRollSavingThrow(event) {\n    event.preventDefault();\n    const savingThrow = event.currentTarget.closest(\".saving-throw\").dataset.savingthrow;\n    this.document.rollSavingThrow(savingThrow, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) throw new Error(`Section \"${section.path}\" lacks filters`);\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Organize and classify Owned Items\n   *\n   * @param data\n   * @private\n   */\n  _prepareItems(data) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Partition items by category\n    const [items, spells, other] = data.items.reduce(\n      (arr, item) => {\n        if (item.type === \"spell\") arr[1].push(item);\n        else if (item.isPhysical) arr[0].push(item);\n        else arr[2].push(item);\n        return arr;\n      },\n      [[], [], []]\n    );\n\n    // Organize Spellbook\n    let hasASF = false;\n    let hasSpellbooks = false;\n    const spellbookSections = {};\n    const spellbooks = data.system.attributes.spells.spellbooks;\n    for (const [bookId, spellbook] of Object.entries(spellbooks)) {\n      // Required for spellbook selection in settings\n      spellbookSections[bookId] = { ...spellbook };\n      // The rest are unnecssary processing if spellbook is not enabled\n      if (!spellbook.inUse) continue;\n      hasSpellbooks = true;\n      const book = spellbookSections[bookId];\n      const spellbookSpells = spells.filter((obj) => obj.spellbook === bookId);\n      book.sections = this._prepareSpellbook(data, spellbookSpells, bookId);\n      book.prepared = spellbookSpells.filter(\n        (obj) => obj.preparation.mode === \"prepared\" && obj.preparation.prepared\n      ).length;\n      book.rollData = data.rollData.spells[bookId];\n      book.classId = spellbook.class;\n      book.class = data.rollData.classes[spellbook.class];\n      if (spellbook.arcaneSpellFailure) hasASF = true;\n    }\n\n    if (hasASF) {\n      // TODO: Make ASF proper change target\n      const asf = this.actor.itemTypes.equipment\n        .filter((item) => item.isActive)\n        .reduce((cur, item) => {\n          const itemASF = item.system.spellFailure || 0;\n          return cur + itemASF;\n        }, 0);\n\n      data.asf = {\n        total: asf,\n      };\n    }\n\n    // Class selection list, only used by spellbooks\n    if (hasSpellbooks) {\n      const lang = game.settings.get(\"core\", \"language\");\n      const allClasses = this.actor.itemTypes.class\n        .map((cls) => [cls.system.tag, cls.name])\n        .sort(([_0, a], [_1, b]) => a.localeCompare(b, lang));\n      allClasses.unshift([\"_hd\", game.i18n.localize(\"PF1.HitDie\")]);\n      data.classList = Object.fromEntries(allClasses);\n    }\n\n    // Implant capacity\n    const ct = game.settings.get(\"pf1\", \"cybertech\");\n    // All implanted cybertech applies, even disabled as long as they're implanted\n    const cybertech = this.actor.itemTypes.implant.filter((i) => i.subType === \"cybertech\" && i.system.implanted);\n    if (ct || cybertech.length) {\n      const load = cybertech.reduce((total, item) => total + (item.system.implant || 0), 0);\n      const abilities = this.actor.system.abilities ?? {};\n      data.implants = {\n        load,\n        max: Math.min(abilities.int?.total, abilities.con?.total),\n      };\n    }\n\n    // Organize Inventory\n    for (const i of items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Remove implant section if cybertech is disabled and no implants are present\n    if (!ct && this.actor.itemTypes.implant.length === 0) {\n      inventory.findSplice((cat) => cat.id === \"implants\");\n    }\n\n    // Organize Features\n    const featureSections = Object.values(pf1.config.sheetSections.features)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const ablType = i.abilityType;\n      i.typelabel = pf1.config.abilityTypes[ablType]?.short || pf1.config.abilityTypes.na.short;\n\n      const section = featureSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    if (this.actor.itemTypes.feat.length) {\n      const section = featureSections.find((f) => f.path === \"features.feat\");\n      section.issues = {\n        found: data.featCount?.issues > 0,\n        missing: data.featCount?.missing || 0,\n        excess: data.featCount?.excess || 0,\n        get discrepancy() {\n          return Math.abs(this.missing - this.excess);\n        },\n      };\n    }\n\n    // Buffs\n    const buffSections = Object.values(pf1.config.sheetSections.buffs)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of other) {\n      const section = buffSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Attacks\n    const attackSections = Object.values(pf1.config.sheetSections.combat)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // TODO: Support weapons in combat tab\n    for (const i of other) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    // Classes\n    const classSections = Object.values(pf1.config.sheetSections.classes)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    for (const i of other) {\n      const section = classSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    const categories = [\n      { key: \"inventory\", sections: inventory },\n      { key: \"features\", sections: featureSections },\n      { key: \"buffs\", sections: buffSections },\n      { key: \"attacks\", sections: attackSections },\n    ];\n\n    for (const [bookId, sb] of Object.entries(spellbookSections)) {\n      if (!sb.inUse) continue;\n      if (!sb.sections) console.warn(bookId, sb);\n      categories.push({ key: `spellbook-${bookId}`, sections: sb.sections });\n    }\n\n    for (const { key, sections } of categories) {\n      const set = this._filters.sections[key];\n      for (const section of sections) {\n        if (!section) continue;\n        section._hidden = set?.size > 0 && !set.has(section.id);\n      }\n    }\n\n    // Assign and return\n    data.inventory = inventory;\n    data.spellbookData = spellbookSections;\n    data.features = featureSections;\n    data.buffs = buffSections;\n    data.attacks = attackSections;\n    data.classes = classSections;\n    data.quickActions = this.document.getQuickActions();\n  }\n\n  /**\n   * Handle rolling a Skill check\n   *\n   * @param {Event} event   The originating click event\n   * @private\n   */\n  _onRollSkillCheck(event) {\n    event.preventDefault();\n    const el = event.target;\n    const skill = el.dataset.skill;\n    const subSkill = el.dataset.subSkill;\n    const skillId = subSkill ? `${skill}.${subSkill}` : skill;\n\n    this.document.rollSkill(skillId, { token: this.token });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle toggling of filters to display a different set of owned items\n   *\n   * @param {Event} event     The click event which triggered the toggle\n   * @private\n   */\n  _onToggleFilter(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget;\n    const { category, filter } = li.dataset;\n    const set = (this._filters.sections[category] ??= new Set());\n    const filterCount = set.size;\n\n    const tabLikeFilters = game.settings.get(\"pf1\", \"invertSectionFilterShiftBehaviour\")\n      ? !event.shiftKey\n      : event.shiftKey;\n\n    if (tabLikeFilters) {\n      for (const f of Array.from(set)) {\n        if (f !== filter) {\n          set.delete(f);\n        }\n      }\n    }\n\n    if (set.has(filter)) set.delete(filter);\n    else set.add(filter);\n    this.render();\n  }\n\n  _searchFilterCommit(event) {\n    const actor = this.actor;\n    const search = this._filters.search[event.target.dataset.category].toLowerCase();\n    const category = event.target.dataset.category;\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch[category] === search && !this.searchRefresh) return;\n    this.effectiveSearch[category] = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = actor.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  _clearSearch(event) {\n    const sb = $(event.target).prev(\".search-input\");\n    this._filters.search[sb.get(0).dataset.category] = \"\";\n    sb.val(\"\").change();\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const category = event.target.dataset.category;\n    const changed = this._filters.search[category] !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this._filters.search[category] = search;\n\n    if (event.type === \"keyup\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const label = a.parentElement.querySelector(\"label\");\n    const choices =\n      a.dataset.options in pf1.registry ? pf1.registry[a.dataset.options].getLabels() : pf1.config[a.dataset.options];\n    const options = {\n      name: a.dataset.for,\n      title: label.innerText,\n      subject: a.dataset.options,\n      choices: choices,\n    };\n\n    let app = Object.values(this.document.apps).find(\n      (app) => app instanceof ActorTraitSelector && app.options.name === options.name\n    );\n    app ??= new ActorTraitSelector(this.document, options);\n    app.render(true, { focus: true });\n  }\n\n  /**\n   * Handle spawning the ActorResistanceSelector application which allows a number entry of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onResistanceSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const options = {\n      name: a.dataset.for,\n      title: a.innerText,\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n      width: a.dataset.options === \"dr\" ? 575 : 450,\n      isDR: a.dataset.options === \"dr\" ? true : false,\n    };\n\n    const app = Object.values(this.document.apps).find((o) => {\n      return o instanceof ActorResistanceSelector && o.options.name === options.name && o._element;\n    });\n    if (app) app.render(true, { focus: true });\n    else new ActorResistanceSelector(this.document, options).render(true);\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  async _render(...args) {\n    // Trick to avoid error on elements with changing name\n    let focus = this.element.find(\":focus\");\n    focus = focus.length ? focus[0] : null;\n    if (focus?.name?.match(/^system\\.skills\\.(?:[a-zA-Z0-9]*)\\.name$/)) focus.blur();\n\n    const result = await super._render(...args);\n\n    // Create placeholders\n    this._createPlaceholders(this.element);\n\n    // Apply accessibility settings\n    applyAccessibilitySettings(this, this.element, {}, game.settings.get(\"pf1\", \"accessibilityConfig\"));\n\n    return result;\n  }\n\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n\n    // Re-open item summaries\n    for (const itemId of this._expandedItems) {\n      // Only display summaries of items that are still present\n      if (this.object.items.has(itemId)) {\n        const elem = html.find(`.item-list>.item[data-item-id=\"${itemId}\"]`)[0];\n        if (elem) this.openItemSummary(elem, { instant: true });\n      } else {\n        // Delete itemIds belonging to items no longer found in the actor\n        this._expandedItems.findSplice((o) => o === itemId);\n      }\n    }\n\n    return html;\n  }\n\n  async _onSubmit(event, { updateData = null, preventClose = false, preventRender = false } = {}) {\n    event.preventDefault();\n\n    if (this._itemUpdates?.length) preventRender = true;\n\n    await super._onSubmit(event, { updateData, preventClose, preventRender });\n\n    // Update items\n    await this._updateItems();\n  }\n\n  async _updateItems() {\n    const promises = [];\n\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const item = this.document.items.get(d._id);\n      if (!item) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      delete d._id;\n      await item.update(d);\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    const { currency, amount, containerId, alt } = data;\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: containerId, alt },\n      { actor: this.actor, amount: Object.fromEntries([[currency, parseInt(amount)]]) }\n    ).render(true);\n  }\n\n  /**\n   * @override\n   */\n  async _onDropItem(event, data) {\n    if (!this.actor.isOwner) return void ui.notifications.warn(\"PF1.Error.NoActorPermission\", { localize: true });\n\n    const sourceItem = await Item.implementation.fromDropData(data);\n\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n    const sameActor = sourceItem.actor === this.actor && !data.containerId;\n\n    const itemData = game.items.fromCompendium(sourceItem, {\n      clearFolder: true,\n      keepId: sameActor,\n      clearSort: !sameActor,\n    });\n\n    // Handle item sorting within the same actor\n    if (sameActor) return this._onSortItem(event, itemData);\n\n    // Make item unidentified if ALT is held\n    if (sourceItem.isPhysical) {\n      if (game.user.isGM && event.altKey) {\n        itemData.system.identified = false;\n      }\n    }\n\n    // Create the owned item\n    this._alterDropItemData(itemData, sourceItem);\n    const rv = await this._onDropItemCreate(itemData);\n\n    // Remove from container if item was successfully created\n    if (data.containerId && rv?.length && sourceActor === this.actor) {\n      const container = this.actor.allItems.find((o) => o.id === data.containerId);\n      if (container) container.deleteContainerContent(data.itemId);\n    }\n\n    return rv;\n  }\n\n  /**\n   * @internal\n   * @param {object} data - Item data\n   * @param {pf1.documents.item.ItemPF} source - Source item\n   */\n  _alterDropItemData(data, source) {\n    // Identify source location\n    const fromCompendium = !!source.pack;\n    const fromActor = !!source.parent;\n    const fromItemsDir = !fromCompendium && !fromActor && !!source.id;\n\n    // Items for NPC should be unidentified by default\n    if (\n      this.actor.type === \"npc\" &&\n      source.isPhysical &&\n      fromCompendium &&\n      // We need to check if the item either have Caster Level beyond 0 or it's a drug or poison\n      (source.system?.cl > 0 || [\"drug\", \"poison\"].includes(source.system.subType))\n    ) {\n      data.system.identified = false;\n    }\n\n    // Set spellbook to currently viewed one\n    if (data.type === \"spell\") {\n      data.system.spellbook = this.currentSpellbookKey;\n    }\n\n    // Apply actor size to physical items, assuming they're appropriately sized for them\n    // But do so only when the drop originates from compendium or items directory\n    if (source.isPhysical) {\n      if (fromCompendium || fromItemsDir) {\n        data.system.size = this.actor.system.traits?.size || \"med\";\n      }\n    }\n  }\n\n  /**\n   * Tests if two items in same sub-group.\n   *\n   * @private\n   * @param {ItemPF} item0\n   * @param {ItemPF} item1\n   * @returns {boolean}\n   */\n  _isItemSameSubGroup(item0, item1) {\n    if (item0.type === \"spell\") {\n      return item0.system.spellbook === item1.system.spellbook && item0.system.level === item1.system.level;\n    }\n\n    if (item0.subType) return item0.subType === item1.subType;\n\n    // Assume everything else is only categorized by main type\n    return true;\n  }\n\n  /**\n   * Sort item at the bottom of the list instead of seemingly random position\n   *\n   * @private\n   * @param {ItemPF} item - Temporary item to do sorting on.\n   */\n  _sortNewItem(item) {\n    const type = item.type;\n\n    // Get old items of same general category\n    const oldItems = this.actor.itemTypes[type]\n      .filter((oldItem) => this._isItemSameSubGroup(item, oldItem))\n      .sort((a, b) => b.sort - a.sort);\n\n    if (oldItems.length) {\n      item.updateSource({\n        sort: oldItems[0].sort + CONST.SORT_INTEGER_DENSITY,\n      });\n    }\n  }\n\n  async _onDropItemCreate(itemData) {\n    const itemDatas = itemData instanceof Array ? itemData : [itemData];\n\n    const creationData = [];\n    for (const itemData of itemDatas) {\n      delete itemData._id;\n\n      // Assign associated class if actor has only one class\n      if (itemData.type === \"feat\" && itemData.system?.subType === \"classFeat\") {\n        // Available classes ordered by level\n        const classes = [...this.actor.itemTypes.class].sort((a, b) => (b.system.level || 0) - (a.system.level || 0));\n        if (classes.length === 0) {\n          // Nothing to do\n        }\n        // Only one choice\n        else if (classes.length === 1) {\n          itemData.system.class = classes[0].system.tag;\n        }\n        // Query which class to associate with\n        else {\n          const options = {\n            actor: this.actor,\n            empty: true,\n            items: classes,\n            selected: classes[0]?._id,\n          };\n\n          const appOptions = {\n            title: `${game.i18n.format(\"PF1.SelectSpecific\", {\n              specifier: game.i18n.localize(\"TYPES.Item.class\"),\n            })} - ${itemData.name} - ${this.actor.name}`,\n          };\n\n          const clsId = await pf1.applications.ItemSelector.wait(options, appOptions);\n          if (clsId) {\n            const cls = this.actor.items.get(clsId);\n            itemData.system.class = cls.system.tag;\n          }\n          // TODO: Cancel if dialog was closed or no class was selected?\n        }\n      }\n\n      // Import spell as consumable\n      if (itemData.type === \"spell\" && this.currentPrimaryTab !== \"spellbook\") {\n        const spells = this.actor.system.attributes?.spells ?? {};\n        const spellType = spells.spellbooks?.[this.currentSpellbookKey]?.kind || \"arcane\";\n\n        const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n          spellType,\n          actor: this.actor,\n          allowSpell: spells.usedSpellbooks?.length > 0,\n        });\n\n        if (resultData) {\n          creationData.push(resultData);\n          continue;\n        } else if (resultData === null) continue;\n        // else continue with regular spell creation\n      }\n\n      const newItem = new Item.implementation(itemData);\n      this._sortNewItem(newItem);\n\n      // Choose how to import class\n      if (itemData.type === \"class\") {\n        if (!(event && event.shiftKey)) {\n          // Set new class to be always level 1\n          newItem.updateSource({ system: { level: 1 } });\n\n          const cls = await LevelUpForm.addClassWizard(this.actor, newItem.toObject(), { token: this.token });\n          if (cls && itemDatas.length === 1) this._focusTabByItem(cls);\n          continue;\n        }\n      }\n\n      creationData.push(newItem.toObject());\n    }\n\n    if (creationData.length === 1) this._focusTabByItem(creationData[0]);\n\n    return this.document.createEmbeddedDocuments(\"Item\", creationData);\n  }\n\n  /**\n   * Focuses certain tab based on provided item.\n   *\n   * @internal\n   * @param {*} item\n   */\n  _focusTabByItem(item) {\n    let tabId;\n    switch (item.type) {\n      case \"race\":\n      case \"class\":\n        tabId = \"summary\";\n        break;\n      case \"spell\":\n        tabId = \"spellbook\";\n        break;\n      case \"buff\":\n        tabId = \"buffs\";\n        break;\n      case \"feat\":\n        tabId = \"feats\";\n        break;\n      case \"weapon\":\n      case \"equipment\":\n      case \"consumable\":\n      case \"loot\":\n      case \"container\":\n        tabId = \"inventory\";\n        break;\n      case \"attack\":\n        tabId = \"combat\";\n        break;\n    }\n\n    if (tabId) this.activateTab(tabId, \"primary\");\n  }\n\n  /**\n   * Allow drag start always.\n   * Foundry blocks this if sheet is not editable, which blocks copying items.\n   *\n   * @override\n   * @param {string} selector Selector string\n   */\n  _canDragStart(selector) {\n    // Conditionally block currency transfer\n    if (selector.includes(\".denomination\")) return this.isEditable;\n    return true;\n  }\n\n  _onDragStart(event) {\n    const elem = event.target;\n    if (elem.classList.contains(\"denomination\")) {\n      const isAlt = elem.classList.contains(\"alt-currency\");\n      const denomination = elem.dataset.denomination;\n      const currency = isAlt ? this.actor.system.altCurrency : this.actor.system.currency;\n      const dragData = {\n        actorUuid: this.actor.uuid,\n        type: \"Currency\",\n        alt: isAlt,\n        currency: denomination,\n        amount: currency[denomination],\n      };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n    } else if (elem.dataset?.skill) {\n      this._onDragSkillStart(event);\n    } else if (elem.dataset?.attribute) {\n      this._onDragMiscStart(event, elem.dataset.attribute);\n    } else if (elem.dataset?.drag) {\n      this._onDragMiscStart(event, elem.dataset.drag);\n    } else if (elem.dataset?.savingthrow) {\n      this._onDragSaveStart(event, elem.dataset.savingthrow);\n    } else if (elem.dataset?.ability) {\n      this._onDragMiscStart(event, \"abilityScore\", elem.dataset.ability);\n    } else if (elem.dataset?.attack) {\n      this._onDragMiscStart(event, \"attack\", elem.dataset.attack);\n    } else {\n      super._onDragStart(event);\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n\n  _updateObject(event, formData) {\n    // Translate CR\n    const cr = formData[\"system.details.cr.base\"];\n    if (typeof cr === \"string\") formData[\"system.details.cr.base\"] = CR.fromString(cr);\n\n    // Update from elements with 'data-name'\n    {\n      const elems = this.element.find(\"*[data-name]\");\n      const changedData = {};\n      for (const el of elems) {\n        const name = el.dataset.name;\n        let value;\n        if (el.nodeName === \"INPUT\") value = el.value;\n        else if (el.nodeName === \"SELECT\") value = el.options[el.selectedIndex].value;\n\n        if (el.dataset.dtype === \"Number\") value = Number(value);\n        else if (el.dataset.dtype === \"Boolean\") value = Boolean(value);\n\n        if (foundry.utils.getProperty(this.document.system, name) !== value) {\n          changedData[name] = value;\n        }\n      }\n\n      for (const [k, v] of Object.entries(changedData)) {\n        formData[k] = v;\n      }\n    }\n\n    this.searchRefresh = true;\n\n    return super._updateObject(event, formData);\n  }\n\n  calculateTotalItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.actor.items.filter((item) => item.isPhysical && item.system.price != null);\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: 1, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  calculateSellItemValue({ inLowestDenomination = false, recursive = false } = {}) {\n    const items = this.document.items.filter((o) => o.system.price != null);\n    const sellMultiplier = this.document.getFlag(\"pf1\", \"sellMultiplier\") || 0.5;\n    const total = items.reduce((cur, i) => {\n      return cur + i.getValue({ recursive, sellValue: sellMultiplier, inLowestDenomination: true });\n    }, 0);\n    return inLowestDenomination ? total : total / 100;\n  }\n\n  _createPlaceholders(html) {\n    const elems = html.find(\"span[data-placeholder]\");\n    for (const el of elems) {\n      if (!el.innerText) {\n        el.classList.add(\"placeholder\");\n        el.innerText = el.dataset.placeholder;\n      }\n    }\n  }\n}\n","/**\n * Default dead sheet when no other exist.\n */\nexport class ActorSheetPFBasic extends ActorSheet {}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\nimport { LevelUpForm } from \"../level-up.mjs\";\n\n/**\n * An Actor sheet for player character type actors in the PF system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFCharacter extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"character\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/character-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const data = await super.getData();\n    const xpSettings = game.settings.get(\"pf1\", \"experienceConfig\");\n\n    // Experience Tracking\n    data.disableExperience = xpSettings.disable;\n    data.showXpBar = !xpSettings.disable;\n    if (!xpSettings.disable) {\n      data.minimumExperience = this.actor.getLevelExp(Math.max(0, (this.actor.system.details.level.value ?? 0) - 1), {\n        rollData: data.rollData,\n      });\n    }\n\n    data.hasClasses = this.actor.itemTypes.class.length > 0;\n\n    const hpSettings = game.settings.get(\"pf1\", \"healthConfig\");\n    data.woundThresholds = hpSettings.variants.pc;\n\n    // Add level up buttons to classes\n    if (xpSettings.disable !== true && data.hasClasses) {\n      const xp = this.actor.system.details?.xp;\n      if (xp && xp.value >= xp.max) {\n        data.levelUp = true;\n\n        // Max level check\n        const xpTrack = xpSettings.track;\n        if ([\"fast\", \"medium\", \"slow\"].includes(xpTrack)) {\n          const level = this.actor.system.details.level.value;\n          const levels = pf1.config.CHARACTER_EXP_LEVELS[xpTrack];\n          if (level >= levels.length) {\n            data.levelUp = false;\n          }\n        }\n      }\n    } else {\n      data.levelUp = true;\n    }\n\n    // Return data for rendering\n    return data;\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\nimport { CR } from \"../../utils/lib.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\n/**\n * An Actor sheet for NPC type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFNPC extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return { ...options, classes: [...options.classes, \"npc\"], width: 800, height: 840 };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet.hbs\";\n  }\n\n  // static get name() {\n  //   return game.i18n.localize(\"PF1.ActorSheetPFNPC\");\n  // }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const data = await super.getData();\n\n    // Challenge Rating\n    data.labels.cr = CR.fromNumber(this.actor.system.details?.cr?.total ?? 0);\n\n    const hpSettings = game.settings.get(\"pf1\", \"healthConfig\");\n    data.woundThresholds = hpSettings.variants.npc;\n\n    data.levelUp = true;\n\n    return data;\n  }\n\n  /* -------------------------------------------- */\n  /*  Object Updates                              */\n  /* -------------------------------------------- */\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Activate event listeners using the prepared sheet HTML\n   *\n   * @param html {HTML}   The prepared HTML object ready to be rendered into the DOM\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Adjust CR\n    html.find(\"span.text-box.cr-input\").on(\"click\", (event) => {\n      this._onSpanTextInput(event, this._adjustCR.bind(this));\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  async _adjustCR(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    const value = CR.fromString(el.tagName === \"INPUT\" ? el.value : el.innerText);\n    const name = el.getAttribute(\"name\");\n    let updateData;\n    if (name) {\n      updateData = { [name]: value };\n    }\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", async (ev) => this._updateObject(event, this._getSubmitData(updateData)), {\n        //passive: true, // Causes Foundry to error\n        once: true,\n      });\n    } else {\n      this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLite extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"lite\"],\n      width: 440,\n      height: 640,\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\", group: \"primary\" },\n      ],\n    };\n  }\n\n  get template() {\n    if (!game.user.isGM && this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/npc-sheet-lite.hbs\";\n  }\n\n  async getData() {\n    const context = await super.getData();\n    context.hasHD = false;\n    return context;\n  }\n\n  _prepareItems(data) {\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of data.items) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    data.attacks = attackSections;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\n\nexport class ActorSheetPFNPCLoot extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"loot\"],\n      tabs: [\n        { navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"inventory\", group: \"primary\" },\n      ],\n      width: 620,\n      height: 420,\n    };\n  }\n\n  get template() {\n    return \"systems/pf1/templates/actors/npc-sheet-loot.hbs\";\n  }\n\n  get currentPrimaryTab() {\n    return \"inventory\";\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return \"gp\";\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    data.isLootSheet = true;\n    data.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    data.totalValue = pf1.utils.currency.split(cpValue);\n    data.sellValue = pf1.utils.currency.split(cpSellValue);\n\n    // Set labels\n    if (!data.labels) data.labels = {};\n    data.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", data.totalValue);\n    data.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", data.sellValue);\n\n    // Alter inventory columns\n    for (const section of data.inventory) {\n      section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n    }\n\n    data.labels.currency = `PF1.Currency.Inline.${this.itemValueDenomination}`;\n\n    return data;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  _prepareItem(item) {\n    const result = super._prepareItem(item);\n\n    if (item.isPhysical) {\n      result.price = item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) / 100;\n    }\n\n    return result;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\nimport { CR } from \"@utils/lib.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFHaunt extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"haunt\"],\n      width: 820,\n      height: 700,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/haunt-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const data = {\n      owner: isOwner,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      system: this.document.system,\n      hasHD: false,\n    };\n\n    // Challenge Rating\n    data.labels = {\n      cr: CR.fromNumber(data.system.details.cr.total),\n    };\n\n    const notes = data.system.details?.notes?.value ?? \"\";\n    data.notesHTML = notes\n      ? await TextEditor.enrichHTML(notes, {\n          secrets: isOwner,\n          rollData: data.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // The Actor and its Items\n    data.actor = this.actor;\n    data.token = this.token;\n    data.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(data);\n\n    return data;\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param data\n   * @private\n   * @override\n   */\n  _prepareItems(data) {\n    const [attacks] = data.items.reduce(\n      (arr, item) => {\n        item.img = item.img || Item.implementation.getDefaultArtwork(item);\n        item.hasUses = item.uses && item.uses.max > 0;\n        item.isCharged = [\"day\", \"week\", \"charges\"].includes(foundry.utils.getProperty(item, \"uses.per\"));\n\n        const itemCharges =\n          foundry.utils.getProperty(item, \"uses.value\") != null ? foundry.utils.getProperty(item, \"uses.value\") : 1;\n\n        if (item.type === \"attack\") arr[0].push(item);\n        return arr;\n      },\n      [[]]\n    );\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    data.attacks = attackSections;\n  }\n}\n","import { ActorSheetPFNPC } from \"./npc-sheet.mjs\";\nimport { CR } from \"@utils/lib.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n *\n * @type {ActorSheetPF}\n */\nexport class ActorSheetPFTrap extends ActorSheetPFNPC {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"trap\"],\n      width: 500,\n      height: 560,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/trap-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const data = {\n      owner: isOwner,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      system: this.document.system,\n      hasHD: false,\n    };\n\n    // Challenge Rating\n    data.labels = {\n      cr: CR.fromNumber(data.system.details.cr.total),\n    };\n\n    const notes = data.system.details?.notes?.value ?? \"\";\n    data.notesHTML = notes\n      ? await TextEditor.enrichHTML(notes, {\n          secrets: isOwner,\n          rollData: data.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // The Actor and its Items\n    data.actor = this.actor;\n    data.token = this.token;\n    data.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(data);\n\n    return data;\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param data\n   * @private\n   * @override\n   */\n  _prepareItems(data) {\n    const [attacks] = data.items.reduce(\n      (arr, item) => {\n        item.img = item.img || Item.implementation.getDefaultArtwork(item);\n        item.hasUses = item.uses && item.uses.max > 0;\n        item.isCharged = [\"day\", \"week\", \"charges\"].includes(foundry.utils.getProperty(item, \"uses.per\"));\n\n        const itemCharges =\n          foundry.utils.getProperty(item, \"uses.value\") != null ? foundry.utils.getProperty(item, \"uses.value\") : 1;\n\n        if (item.type === \"attack\") arr[0].push(item);\n        return arr;\n      },\n      [[]]\n    );\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    data.attacks = attackSections;\n  }\n}\n","import { ActorSheetPF } from \"./actor-sheet.mjs\";\n\n/**\n * An Actor sheet for Vehicle type characters in the game system.\n * Extends the base ActorSheetPF class.\n */\nexport class ActorSheetPFVehicle extends ActorSheetPF {\n  /**\n   * Define default rendering options for the NPC sheet\n   *\n   * @returns {object}\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"vehicle\"],\n      width: 680,\n      height: 680,\n      tabs: [{ navSelector: \"nav.tabs\", contentSelector: \"section.primary-body\", initial: \"summary\" }],\n      scrollY: [\".tab.summary\"],\n    };\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /**\n   * Get the correct HTML template path to use for rendering this particular sheet\n   *\n   * @type {string}\n   */\n  get template() {\n    if (this.actor.limited) return \"systems/pf1/templates/actors/limited-sheet.hbs\";\n    return \"systems/pf1/templates/actors/vehicle-sheet.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Add some extra data when rendering the sheet to reduce the amount of logic required within the template.\n   */\n  async getData() {\n    const isOwner = this.document.isOwner;\n    const context = {\n      owner: isOwner,\n      system: this.actor.system,\n      limited: this.document.limited,\n      editable: this.isEditable,\n      cssClass: isOwner ? \"editable\" : \"locked\",\n      config: pf1.config,\n      isGM: game.user.isGM,\n      labels: {\n        currency: `PF1.Currency.Inline.${this.itemValueDenomination}`,\n      },\n      isLootSheet: true, // inventory include unwanted data otherwise\n    };\n\n    context.system = foundry.utils.deepClone(this.document.system);\n\n    context.vehicleSizes = Object.fromEntries(\n      Object.entries(pf1.config.vehicles.size).map(([key, data]) => [key, data.label])\n    );\n\n    const notes = context.system.details?.notes?.value ?? \"\";\n    context.notesHTML = notes\n      ? await TextEditor.enrichHTML(notes, {\n          secrets: isOwner,\n          rollData: context.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // The Actor and its Items\n    context.actor = this.actor;\n    context.token = this.token;\n    context.items = this.document.items\n      .map((item) => this._prepareItem(item))\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Prepare owned items\n    this._prepareItems(context);\n\n    //context.sellMultiplier = this.actor.getFlag(\"pf1\", \"sellMultiplier\");\n\n    const baseCurrency = this.actor.getTotalCurrency({ inLowestDenomination: true });\n    context.hasCurrency = true; // Never fade currency field for this\n\n    // Get total value\n    const cpValue = this.calculateTotalItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n    const cpSellValue = this.calculateSellItemValue({ inLowestDenomination: true, recursive: true }) + baseCurrency;\n\n    context.totalValue = pf1.utils.currency.split(cpValue);\n    context.sellValue = pf1.utils.currency.split(cpSellValue);\n    context.labels.totalValue = game.i18n.format(\"PF1.Containers.TotalValue\", context.totalValue);\n    context.labels.sellValue = game.i18n.format(\"PF1.Containers.SellValue\", context.sellValue);\n\n    // Compute encumbrance\n    context.encumbrance = this._computeEncumbrance();\n\n    return context;\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /**\n   * Organize and classify Owned Items - We just need attacks\n   *\n   * @param context\n   * @private\n   * @override\n   */\n  _prepareItems(context) {\n    const [attacks] = context.items.reduce(\n      (arr, item) => {\n        item.img = item.img || Item.implementation.getDefaultArtwork(item);\n        item.hasUses = item.uses && item.uses.max > 0;\n        item.isCharged = [\"day\", \"week\", \"charges\"].includes(foundry.utils.getProperty(item, \"uses.per\"));\n\n        const itemCharges =\n          foundry.utils.getProperty(item, \"uses.value\") != null ? foundry.utils.getProperty(item, \"uses.value\") : 1;\n\n        if (item.type === \"attack\") arr[0].push(item);\n        return arr;\n      },\n      [[]]\n    );\n\n    const attackSections = Object.values(pf1.config.sheetSections.combatlite)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n    for (const i of attacks) {\n      const section = attackSections.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(\"Could not find a sheet section for\", i.name);\n      }\n    }\n\n    context.attacks = attackSections;\n\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Alter inventory columns\n    for (const section of inventory) {\n      section.interface = { ...section.interface, value: true, actions: false, noEquip: true };\n    }\n\n    const items = context.items.filter((i) => i.isPhysical);\n\n    // Organize Inventory\n    for (const i of items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      }\n    }\n\n    context.inventory = inventory;\n  }\n\n  /** @type {CoinType} */\n  get itemValueDenomination() {\n    return \"gp\";\n  }\n\n  _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    // Convert distances back to backend imperial format\n    const convertibleKeys = [\"maxSpeed\", \"acceleration\"];\n    for (const key of convertibleKeys) {\n      const value = formData.system.details[key];\n      if (Number.isFinite(value)) {\n        formData.system.details[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n}\n","export class SpeedEditor extends DocumentSheet {\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      classes: [\"pf1\", \"speed-editor\"],\n      template: \"systems/pf1/templates/apps/speed-editor.hbs\",\n      width: 320,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n    };\n  }\n\n  get id() {\n    return `${this.object.uuid}-movement-editor`;\n  }\n\n  get title() {\n    const actor = this.document.actor;\n    let title = `${game.i18n.localize(\"PF1.Movement.Label\")}: ${this.document.name}`;\n    if (actor) title += ` — ${actor.name}`;\n    return title;\n  }\n\n  static get movementKeys() {\n    return [\"land\", \"swim\", \"fly\", \"climb\", \"burrow\"];\n  }\n\n  async getData() {\n    const itemData = this.document.system;\n    const context = {\n      system: itemData,\n      speeds: {},\n      units: game.i18n.localize(\n        pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n      ),\n      flyManeuverability: {\n        clumsy: \"PF1.Movement.FlyManeuverability.Quality.clumsy\",\n        poor: \"PF1.Movement.FlyManeuverability.Quality.poor\",\n        average: \"PF1.Movement.FlyManeuverability.Quality.average\",\n        good: \"PF1.Movement.FlyManeuverability.Quality.good\",\n        perfect: \"PF1.Movement.FlyManeuverability.Quality.perfect\",\n      },\n    };\n\n    this.constructor.movementKeys.forEach((key) => {\n      let value = itemData.speeds?.[key];\n      if (value > 0) value = pf1.utils.convertDistance(value)[0];\n      context.speeds[key] = value;\n    });\n\n    context.speeds.flyManeuverability = itemData.speeds.flyManeuverability || \"average\";\n\n    return context;\n  }\n\n  async _updateObject(event, formData) {\n    // Convert data back\n    for (const [key, value] of Object.entries(formData)) {\n      if (Number.isNumeric(value)) {\n        formData[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    }\n\n    return super._updateObject(event, formData);\n  }\n}\n","/**\n * @typedef {object} Widget_CategorizedItemPicker~Item\n * @property {string} key - The key of the item.\n * @property {string} [label] - The label of the item.\n * @property {string} [icon] - The icon of the item.\n */\n\n/**\n * @typedef {object} Widget_CategorizedItemPicker~Category\n * @property {string} key - The key of the category.\n * @property {string} label - The label of the category.\n * @property {Widget_CategorizedItemPicker~Item[]} items - All the items associated with this category.\n */\n\n/**\n * Item picker widget.\n */\nexport class Widget_CategorizedItemPicker extends Application {\n  constructor(options, categories, callback, selected) {\n    super(options);\n\n    /**\n     * Objects containing category and item data.\n     *\n     * @type {Widget_CategorizedItemPicker~Category[]}\n     */\n    this.categories = categories;\n\n    /**\n     * Previously selected category and item\n     *\n     * @type {object}\n     * @property {string} category Selected category.\n     * @property {string} item Selected item in that category.\n     */\n    this.selected = selected;\n\n    /**\n     * Callback fired when an item has been selected.\n     *\n     * @type {Function}\n     */\n    this.callback = callback;\n\n    /**\n     * Track hidden elements of the sheet.\n     *\n     * @property\n     * @type {Object<string, string>}\n     */\n    this._hiddenElems = {};\n\n    if (options.classes?.length) {\n      this.options.classes.push(...options.classes);\n    }\n  }\n\n  get template() {\n    return \"systems/pf1/templates/widgets/categorized-item-picker.hbs\";\n  }\n\n  getData(options) {\n    const data = super.getData(options);\n\n    data.categories = [];\n    data.items = [];\n\n    for (const cat of this.categories) {\n      data.categories.push({\n        key: cat.key,\n        label: cat.label,\n      });\n\n      for (const item of cat.items) {\n        data.items.push(\n          foundry.utils.mergeObject(\n            {\n              category: cat.key,\n            },\n            item\n          )\n        );\n      }\n    }\n\n    return data;\n  }\n\n  activateListeners(html) {\n    // Click an item\n    html.find(\".item\").click(this._onClickItem.bind(this));\n\n    // Expand/minimize category\n    html.find(\".category a\").click(this._onClickCategory.bind(this));\n\n    // Pre-select old category\n    if (this.selected?.category) {\n      html.find(`.category a[data-category=\"${this.selected.category}\"]`).click();\n      if (this.selected?.item) {\n        html\n          .find(`.item[data-category=\"${this.selected.category}\"][data-value=\"${this.selected.item}\"]`)\n          .first()\n          .addClass(\"pre-select\");\n      }\n    }\n\n    // Cancel widget\n    window.setTimeout(() => {\n      if (this._cancelCallback) document.removeEventListener(\"click\", this._cancelCallback);\n      this._cancelCallback = this._onCancel.bind(this);\n      document.addEventListener(\"click\", this._cancelCallback);\n    }, 10);\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      width: 480,\n      height: 480,\n      classes: [...options.classes, \"pf1\", \"categorized-item-picker\"],\n    };\n  }\n\n  _onClickItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const result = a.dataset.value;\n    this.callback(result);\n    this.close();\n  }\n\n  _onClickCategory(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const html = $(this.element);\n\n    // Deactivate all categories\n    html.find(\".item-picker-categories\").children().removeClass(\"active\");\n\n    // Activate clicked category\n    $(a).closest(\".category\").addClass(\"active\");\n\n    // Hide all items\n    html.find(\".item-picker-items\").children().hide();\n\n    // Show items\n    html.find(`.item-picker-items .item[data-category=\"${a.dataset.category}\"]`).show();\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    // Don't cancel if this widget was clicked\n    let node = event.target;\n    if (node === this.element[0]) return;\n    while (node.parentNode) {\n      if (node === this.element[0]) return;\n      node = node.parentNode;\n    }\n\n    this.close();\n  }\n\n  async close(...args) {\n    document.removeEventListener(\"click\", this._cancelCallback);\n    return super.close(...args);\n  }\n}\n\nHooks.on(\"renderWidget_CategorizedItemPicker\", (app, html, data) => {\n  html.find(\".pre-select\")[0]?.scrollIntoView({ block: \"nearest\" });\n});\n","import { adjustNumberByStringCommand, getBuffTargetDictionary, getBuffTargets, enrichHTMLUnrolledAsync } from \"@utils\";\nimport { ItemPF } from \"@item/item-pf.mjs\";\nimport { ActorTraitSelector } from \"@app/trait-selector.mjs\";\nimport { SpeedEditor } from \"@app/speed-editor.mjs\";\nimport { Widget_CategorizedItemPicker } from \"@app/categorized-item-picker.mjs\";\nimport { getSkipActionPrompt } from \"../../documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\n/**\n * Override and extend the core ItemSheet implementation to handle game system specific item types\n *\n * @type {ItemSheet}\n */\nexport class ItemSheetPF extends ItemSheet {\n  constructor(...args) {\n    super(...args);\n\n    // Add item type to selectors\n    this.options.classes.push(`type-${this.item.type}`);\n\n    this.items = [];\n\n    /**\n     * Track action updates from the item sheet.\n     *\n     * @property\n     * @private\n     * @type {object[]}\n     */\n    this._actionUpdates = [];\n\n    // Activate more reasonable default links sub-tab per item type.\n    // Related core issue: https://github.com/foundryvtt/foundryvtt/issues/9748\n    const links = this._tabs.find((t) => t.group === \"links\");\n    if (this.item.type === \"class\") {\n      links.active = \"classAssociations\";\n    } else if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      links.active = \"charges\";\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 620,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [\".tab\", \".buff-flags\", \".editor-content\"],\n      dragDrop: [\n        {\n          dragSelector: \"li.action-part\",\n          dropSelector: \".tab.details\",\n        },\n        {\n          dragSelector: \".tab.changes li.change\",\n          dropSelector: null,\n        },\n        {\n          dragSelector: \".tab.links .item-name\",\n          dropSelector: \".tab.links .tab[data-group='links']\",\n        },\n      ],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='links']\",\n          contentSelector: \"section.links-body\",\n          initial: \"children\",\n          group: \"links\",\n        },\n        {\n          navSelector: \"nav.tabs[data-group='description']\",\n          contentSelector: \"section.description-body\",\n          initial: \"identified\",\n          group: \"description\",\n        },\n      ],\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string}\n   */\n  get template() {\n    const path = \"systems/pf1/templates/items\";\n    return `${path}/${this.item.type}.hbs`;\n  }\n\n  get title() {\n    const actor = this.actor;\n    if (actor) return `${super.title} – ${actor.name}`;\n    return super.title;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const lang = game.settings.get(\"core\", \"language\");\n\n    /** @type {ItemPF} */\n    const item = this.item,\n      itemData = item.system;\n\n    const actor = item.actor,\n      actorData = actor?.system;\n\n    const defaultAction = item.defaultAction;\n\n    const rollData = defaultAction?.getRollData() ?? item.getRollData();\n\n    const context = {\n      item,\n      name: item.name,\n      system: itemData,\n      itemType: game.i18n.localize(CONFIG.Item.typeLabels[item.type]),\n      rollData,\n      config: pf1.config,\n      owned: !!actor,\n      owner: item.isOwner,\n      editable: this.isEditable,\n      isGM: game.user.isGM,\n      labels: item.getLabels({ rollData }),\n      canClassLink: pf1.config.classAssociations.includes(item.type) && !!rollData.classes,\n      inContainer: item.inContainer ?? false,\n      // Include raw tag data (from source to not get autofilled tag)\n      tag: this.item._source.system.tag,\n    };\n\n    if (context.canClassLink) {\n      context.hasClassLink = !!item.system.class;\n      context.classes = {};\n      for (const [classTag, classData] of Object.entries(rollData.classes)) {\n        context.classes[classTag] = classData.name;\n      }\n    }\n\n    // Include sub-items\n    context.items = item.items?.map((i) => i.toObject()) ?? [];\n\n    // Add hit die size options for classes\n    if (item.type === \"class\") {\n      context.hitDieSizes = context.config.hitDieSizes.reduce((all, size) => {\n        all[size] = game.i18n.format(\"PF1.DieSize\", { size });\n        return all;\n      }, {});\n\n      context.isMythic = this.item.subType === \"mythic\";\n\n      if (item.system.wealth) {\n        const context = { formula: item.system.wealth, item: this.item };\n        const max = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          maximize: true,\n        })?.total;\n        const min = Roll.defaultImplementation.safeRollSync(item.system.wealth, undefined, context, undefined, {\n          minimize: true,\n        })?.total;\n        if (max > 0) {\n          context.wealth ??= {};\n          context.wealth.average = (max + min) / 2;\n        }\n      }\n    }\n\n    if (item.links.charges) context.inheritCharges = item.links.charges;\n    context.isCharged = ![\"single\", \"\", undefined].includes(itemData.uses?.per);\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n\n    context.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.limitedUsePeriods.single;\n    context.isRechargeable = pf1.config.limitedUsePeriodOrder.includes(itemData.uses?.per);\n\n    // Item type identifiers\n    context.isPhysical = itemData.quantity !== undefined;\n    context.isNaturalAttack = itemData.subType === \"natural\";\n    context.isSpell = item.type === \"spell\";\n    context.isImplant = item.type === \"implant\";\n\n    context.hasAction = item.hasAction;\n    context.hasAttack = item.hasAttack;\n    context.hasDamage = item.hasDamage;\n    context.showBothDescriptions = context.isGM && context.isPhysical;\n    context.showUnidentifiedData = item.showUnidentifiedData;\n    context.showIdentified = !item.showUnidentifiedData;\n    context.showIdentifiedData = context.showIdentified;\n    if (context.showIdentified) context.showBothDescriptions = true;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n\n    // Identification information\n    context.identify ??= {};\n    context.identify.dc = 0;\n    const auraStrength = rollData.item.auraStrength;\n    if (auraStrength) {\n      context.aura = {\n        strength: auraStrength,\n        strengthLabel: pf1.config.auraStrengths[auraStrength],\n        school:\n          pf1.config.spellSchools[itemData.aura.school] || itemData.aura.school || game.i18n.localize(\"PF1.Unknown\"),\n      };\n\n      context.identify.dc = 15 + rollData.item.cl;\n      context.identify.curse = context.identify.dc + 10;\n    }\n\n    // Add spellcasting configuration\n    if (item.type === \"class\") {\n      context.casting = {\n        types: pf1.config.spellcasting.type,\n        spells: pf1.config.spellcasting.spells,\n        progression: {\n          high: \"PF1.High\",\n          med: \"PF1.Medium\",\n          low: \"PF1.Low\",\n        },\n      };\n\n      if (!item.actor) context.hasSpellbook = true; // Not true, but avoids unwanted behaviour.\n      else {\n        context.hasSpellbook = Object.values(rollData.spells ?? {}).find(\n          (book) => !!book.class && book.class === itemData.tag && book.inUse\n        );\n      }\n    }\n\n    /** @type {DescriptionAttribute[]} */\n    context.descriptionAttributes = [];\n\n    // Override description attributes\n    if (context.isPhysical) {\n      // Add quantity\n      context.descriptionAttributes.push({\n        isNumber: true,\n        name: \"system.quantity\",\n        label: game.i18n.localize(\"PF1.Quantity\"),\n        value: itemData.quantity || 0,\n        decimals: 0,\n        id: \"data-quantity\",\n        constraints: {\n          min: 0,\n          step: 1,\n        },\n      });\n\n      // Add weight\n      context.descriptionAttributes.push({\n        isNumber: true,\n        name: \"system.weight.value\",\n        label: game.i18n.localize(\"PF1.Weight\"),\n        value: itemData.weight.converted.total,\n        fakeValue: true,\n        inputValue: itemData.weight.converted.value,\n        decimals: 2,\n        tooltip: \"weight\",\n        id: \"data-weight-value\",\n        constraints: {\n          min: 0,\n          step: 0.01,\n        },\n      });\n\n      // Add price\n      if (context.isGM) {\n        context.descriptionAttributes.push(\n          {\n            isNumber: true,\n            name: \"system.price\",\n            label: game.i18n.localize(\"PF1.Price\"),\n            value: item.getValue({ sellValue: 1 }),\n            decimals: 2,\n            tooltip: \"price\",\n            id: \"data-price\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          },\n          {\n            isNumber: true,\n            name: \"system.unidentified.price\",\n            label: game.i18n.localize(\"PF1.UnidentifiedPriceShort\"),\n            value: item.getValue({ sellValue: 1, forceUnidentified: true }),\n            decimals: 2,\n            id: \"data-unidentifiedPrice\",\n            constraints: {\n              min: 0,\n              step: 0.01,\n            },\n          }\n        );\n      } else if (context.showUnidentifiedData) {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          name: \"system.unidentified.price\",\n          fakeName: true,\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: 2,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      } else {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          name: \"system.price\",\n          label: game.i18n.localize(\"PF1.Price\"),\n          value: item.getValue({ sellValue: 1 }),\n          decimals: 2,\n          tooltip: \"price\",\n          id: \"data-price\",\n          constraints: {\n            min: 0,\n            step: 0.01,\n          },\n        });\n      }\n\n      // Add hit points\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isNumber: true,\n          isRange: true,\n          label: game.i18n.localize(\"PF1.HPShort\"),\n          value: {\n            name: \"system.hp.value\",\n            value: itemData.hp?.value || 0,\n            constraints: {\n              step: 1,\n              max: itemData.hp?.max || 0,\n            },\n          },\n          max: {\n            name: \"system.hp.max\",\n            value: itemData.hp?.max || 0,\n            constraints: {\n              min: 0,\n              step: 1,\n            },\n          },\n        });\n\n        // Add hardness\n        context.descriptionAttributes.push({\n          isNumber: true,\n          label: game.i18n.localize(\"PF1.Hardness\"),\n          name: \"system.hardness\",\n          decimals: 0,\n          value: itemData.hardness || 0,\n          constraints: {\n            min: 0,\n            step: 1,\n          },\n        });\n      }\n\n      let disableEquipping = false;\n      if (item.inContainer) {\n        // Apply similar logic as in .adjustContained()\n        if (item.type === \"weapon\") disableEquipping = true;\n        else if (item.type === \"equipment\") {\n          if ([\"armor\", \"shield\", \"clothing\"].includes(item.subType)) {\n            disableEquipping = true;\n          }\n          // For items not matching the above, only slotless are allowed\n          else if ([\"wondrous\", \"other\"].includes(item.subType) && itemData.slot !== \"slotless\") {\n            disableEquipping = true;\n          }\n        } else if (context.isImplant) {\n          disableEquipping = true;\n        }\n      }\n\n      // Add equipped/implanted flag\n      if (context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.implanted\",\n          label: game.i18n.localize(\"PF1.Implanted\"),\n          value: itemData.implanted,\n          disabled: disableEquipping,\n        });\n      } else {\n        // Certain loot types don't have equipped\n        if (item.type === \"loot\" && pf1.config.unequippableLoot.includes(this.item.subType)) disableEquipping = true;\n\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.equipped\",\n          label: game.i18n.localize(\"PF1.Equipped\"),\n          value: itemData.equipped,\n          disabled: disableEquipping,\n        });\n      }\n\n      // Add carried flag\n      context.descriptionAttributes.push({\n        isBoolean: true,\n        name: \"system.carried\",\n        label: game.i18n.localize(\"PF1.Carried\"),\n        value: itemData.carried || item.system.implanted || false,\n        disabled: item.inContainer || item.system.implanted || false,\n      });\n    }\n\n    if (context.isPhysical || item.isQuasiPhysical) {\n      // Add broken flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.broken\",\n          label: game.i18n.localize(\"PF1.Broken\"),\n          value: itemData.broken,\n          disabled: context.isNaturalAttack,\n        });\n      }\n\n      // Add masterwork flag\n      if (!context.isImplant) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.masterwork\",\n          label: game.i18n.localize(\"PF1.Masterwork\"),\n          value: itemData.masterwork,\n          disabled: context.isNaturalAttack,\n        });\n      }\n    }\n\n    if (context.isPhysical) {\n      // Add identified flag for GM\n      if (game.user.isGM) {\n        context.descriptionAttributes.push({\n          isBoolean: true,\n          name: \"system.identified\",\n          label: game.i18n.localize(\"PF1.Identified\"),\n          value: itemData.identified ?? true,\n          disabled: !game.user.isGM,\n        });\n      }\n    }\n\n    // Prepare feat specific stuff\n    if (item.type === \"feat\") {\n      context.isClassFeature = itemData.subType === \"classFeat\";\n      context.isTemplate = itemData.subType === \"template\";\n    }\n\n    if ([\"class\", \"feat\", \"race\"].includes(item.type)) {\n      // Add skill list\n      if (!actor) {\n        context.skills = Object.entries(pf1.config.skills).reduce((cur, [skillId, label]) => {\n          cur[skillId] = { name: label, classSkill: itemData.classSkills?.[skillId] === true };\n          return cur;\n        }, {});\n      } else {\n        // Get sorted skill list from config, custom skills get appended to bottom of list\n        const skills = foundry.utils.mergeObject(foundry.utils.deepClone(pf1.config.skills), actorData.skills ?? {});\n        context.skills = Object.entries(skills).reduce((cur, [skillId, skillIdata]) => {\n          const name = pf1.config.skills[skillId] || skillIdata.name;\n          cur[skillId] = { name: name, classSkill: item.system.classSkills?.[skillId] === true };\n          return cur;\n        }, {});\n      }\n    }\n\n    // Prepare attack-specific stuff\n    if (item.type === \"attack\") {\n      context.materialCategories = this._prepareMaterialsAndAddons(\n        \"weapon\",\n        \"all\",\n        itemData.subType,\n        itemData.material?.normal.value\n      );\n\n      context.alignmentTypes = this._prepareAlignments(itemData.alignments);\n    }\n\n    const material = this.item.type === \"equipment\" ? this.item.system.armor?.material : this.item.system.material;\n    if (material?.addon?.length) {\n      context.materialAddons =\n        material.addon.reduce((obj, v) => {\n          obj[v] = true;\n          return obj;\n        }, {}) ?? {};\n    }\n\n    // Prepare weapon specific stuff\n    if (item.type === \"weapon\") {\n      context.isRanged = itemData.weaponSubtype === \"ranged\" || itemData.properties[\"thr\"] === true;\n\n      // Prepare categories for weapons\n      context.weaponCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.weaponTypes)) {\n        context.weaponCategories.types[k] = v._label;\n      }\n      const type = itemData.subType;\n      if (type in pf1.config.weaponTypes) {\n        for (const [k, v] of Object.entries(pf1.config.weaponTypes[type])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.weaponCategories.subTypes[k] = v;\n        }\n      }\n\n      context.materialCategories = this._prepareMaterialsAndAddons(\n        item.type,\n        itemData.weaponSubtype,\n        null,\n        itemData.material?.normal.value\n      );\n\n      context.alignmentTypes = this._prepareAlignments(itemData.alignments);\n    }\n\n    // Prepare equipment specific stuff\n    if (item.type === \"equipment\") {\n      // Prepare categories for equipment\n      context.equipmentCategories = { types: {}, subTypes: {} };\n      for (const [k, v] of Object.entries(pf1.config.equipmentTypes)) {\n        context.equipmentCategories.types[k] = v._label;\n      }\n      const subType = itemData.subType;\n      if (subType in pf1.config.equipmentTypes) {\n        for (const [k, v] of Object.entries(pf1.config.equipmentTypes[subType])) {\n          // Add static targets\n          if (!k.startsWith(\"_\")) context.equipmentCategories.subTypes[k] = v;\n        }\n      }\n\n      // Prepare slots for equipment\n      context.equipmentSlots = pf1.config.equipmentSlots.wondrous;\n\n      // Whether the current equipment type has multiple slots\n      context.hasMultipleSlots = item.hasSlots;\n\n      context.hasSubCategory = [\"armor\", \"shield\"].includes(subType);\n\n      // Prepare materials where they're needed.\n      if ([\"armor\", \"shield\"].includes(item.subType)) {\n        context.materialCategories = this._prepareMaterialsAndAddons(\n          item.type,\n          itemData.equipmentSubtype,\n          itemData.subType,\n          itemData.armor.material?.normal.value ?? \"\"\n        );\n      }\n    }\n\n    if (item.type === \"implant\") {\n      context.subTypes = pf1.config.implantTypes;\n\n      context.isCybertech = item.subType === \"cybertech\";\n      if (context.isCybertech) context.slots = pf1.config.implantSlots.cybertech;\n    }\n\n    let topDescription;\n\n    // Prepare spell specific stuff\n    if (context.isSpell) {\n      let spellbook = null;\n      if (actor) {\n        const bookId = itemData.spellbook;\n        spellbook = actorData?.attributes.spells?.spellbooks[bookId];\n      }\n\n      context.isSpontaneousLike = spellbook?.spontaneous || spellbook?.spellPoints?.useSystem || false;\n      context.isPreparedSpell = !context.isSpontaneousLike;\n      context.usesSpellpoints = spellbook != null ? spellbook.spellPoints?.useSystem ?? false : false;\n      context.isAtWill = itemData.atWill;\n      context.spellbooks = actorData?.attributes.spells.spellbooks ?? {};\n      context.spellbookChoices = Object.fromEntries(\n        Object.entries(context.spellbooks)\n          .filter(([_, { inUse }]) => inUse)\n          .map(([key, { label }]) => [key, label])\n          .sort(([_0, n0], [_1, n1]) => n0.localeCompare(n1, lang))\n      );\n\n      topDescription = renderCachedTemplate(\n        \"systems/pf1/templates/internal/spell-description.hbs\",\n        item.getDescriptionData({ rollData })\n      );\n\n      // Reverse mapping of pf1.config.divineFocus for readability\n      const dfVariants = { DF: 1, MDF: 2, FDF: 3 };\n      itemData.components ??= {};\n      const df = itemData.components.divineFocus;\n      // Force intrinsic DF components\n      if (df === dfVariants.MDF) itemData.components.material = true;\n      if (df === dfVariants.FDF) itemData.components.focus = true;\n\n      // Generate component list according to spellbook\n      const c = { ...itemData.components };\n      context.components = c;\n      if (spellbook) {\n        const isDivine = spellbook.kind === \"divine\";\n        if (isDivine) {\n          if (df === dfVariants.FDF) c.focus = false;\n          if (df === dfVariants.MDF) c.material = false;\n        } else {\n          c.divineFocus = false;\n        }\n      }\n\n      // Material for spells to emulate\n      context.materialCategories = this._prepareMaterialsAndAddons(\n        \"spell\",\n        \"all\",\n        itemData.subType,\n        itemData.material?.normal.value\n      );\n\n      context.alignmentTypes = this._prepareAlignments(itemData.alignments);\n    }\n\n    if (this.item.type === \"buff\") {\n      context.noDurationTiming = !itemData.duration.units || itemData.duration.units === \"turn\";\n    }\n\n    // Prepare class specific stuff\n    if (item.type === \"class\") {\n      context.isMythicPath = itemData.subType === \"mythic\";\n\n      for (const [a, s] of Object.entries(itemData.savingThrows)) {\n        s.label = pf1.config.savingThrows[a];\n      }\n      for (const [a, s] of Object.entries(itemData.fc)) {\n        s.label = pf1.config.favouredClassBonuses[a];\n      }\n\n      context.isBaselikeClass = pf1.config.favoredClassTypes.includes(itemData.subType);\n      context.isRacialHD = itemData.subType === \"racial\";\n      context.isNPCClass = itemData.subType === \"npc\";\n      context.isPCClass = !context.isNPCClass && !context.isRacialHD;\n\n      const healthConfig = game.settings.get(\"pf1\", \"healthConfig\");\n      context.healthConfig = healthConfig.getClassHD(this.item);\n\n      // Add skill list\n      if (!actor) {\n        context.skills = Object.entries(pf1.config.skills).reduce((cur, [skillId, label]) => {\n          cur[skillId] = { name: label, classSkill: itemData.classSkills?.[skillId] === true };\n          return cur;\n        }, {});\n      } else {\n        // Get sorted skill list from config, custom skills get appended to bottom of list\n        const skills = foundry.utils.mergeObject(foundry.utils.deepClone(pf1.config.skills), actorData.skills ?? {});\n        context.skills = Object.entries(skills).reduce((cur, [skillId, skillData]) => {\n          const name = pf1.config.skills[skillId] != null ? pf1.config.skills[skillId] : skillData.name;\n          cur[skillId] = { name: name, classSkill: itemData.classSkills?.[skillId] === true };\n          return cur;\n        }, {});\n      }\n    }\n\n    if (item.type === \"consumable\") {\n      context.hasSpellType = [\"potion\", \"scroll\", \"wand\", \"staff\"].includes(item.subType);\n    }\n\n    // Prepare ammunition\n    context.canUseAmmo = !context.isNaturalAttack && item.type !== \"spell\";\n    if (context.canUseAmmo && item.system.ammo?.type) {\n      context.defaultAmmo = actor?.items.get(item.getFlag(\"pf1\", \"defaultAmmo\"));\n      if (context.defaultAmmo) {\n        context.invalidDefaultAmmo = context.defaultAmmo.system.extraType !== item.system.ammo.type;\n      }\n    }\n\n    // Prepare {value: [], custom: []} objects\n    const profs = {\n      armorProf: pf1.config.armorProficiencies,\n      descriptors: pf1.config.spellDescriptors,\n      languages: pf1.config.languages,\n      weaponGroups: pf1.config.weaponGroups,\n      weaponProf: pf1.config.weaponProficiencies,\n    };\n\n    for (const [t, choices] of Object.entries(profs)) {\n      if (!itemData[t]) continue;\n\n      const trait = foundry.utils.deepClone(itemData[t]);\n      context[t] = trait;\n\n      let values = [];\n      if (trait.value) {\n        values = trait.value instanceof Array ? trait.value : [trait.value];\n      }\n      trait.selected = values.reduce((obj, t) => {\n        obj[t] = choices[t];\n        return obj;\n      }, {});\n\n      // Add custom entry\n      if (trait.custom?.length) {\n        trait.custom.forEach((c, i) => (trait.selected[`custom${i + 1}`] = c));\n      }\n      trait.active = !foundry.utils.isEmpty(trait.selected);\n    }\n\n    // Prepare stuff for changes\n    if (item.changes?.size) {\n      const buffTargets = getBuffTargets(actor);\n      let showPriority = false;\n      context.changes =\n        item.changes?.map((/** @type {ItemChange} */ ch) => {\n          const target = buffTargets[ch.target];\n          const typeLabel = pf1.config.bonusTypes[ch.type];\n          const chData = {\n            change: ch,\n            isValid: !!target,\n            label: target?.label ?? ch.target,\n            isDeferred: ch.isDeferred,\n            isAdd: ch.operator === \"add\",\n            isSet: ch.operator === \"set\",\n            ...ch,\n            isValidType: !!typeLabel,\n            typeLabel: typeLabel || ch.type,\n            id: ch.id,\n          };\n          chData.priority ||= 0;\n          if (chData.priority != 0) showPriority = true;\n          return chData;\n        }) ?? [];\n\n      context.changePriority = showPriority;\n    }\n\n    // Prepare stuff for items with context notes\n    if (itemData.contextNotes) {\n      // TODO: Remove .toObject() and move the supporting data to the datamodel\n      context.contextNotes = itemData.contextNotes.map((cn) => cn.toObject());\n      const noteTargets = getBuffTargets(actor, \"contextNotes\");\n      context.contextNotes.forEach((n) => {\n        const target = noteTargets[n.target];\n        n.isValid = !!target;\n        n.label = target?.label ?? n.target;\n      });\n    }\n\n    // Prepare condition display\n    context.conditions = item.effects\n      .filter((e) => !e.disabled && e.statuses.size)\n      .map((e) => Array.from(e.statuses))\n      .flat()\n      .map((s) => pf1.registry.conditions.get(s)?.name || s);\n\n    if (item.system.conditions?.all?.size) {\n      context.system.conditions.selected = item.system.conditions?.all?.map(\n        (c) => pf1.registry.conditions.get(c)?.name || c\n      );\n\n      context.conditions = context.conditions.concat(Array.from(context.system.conditions.selected));\n    }\n\n    context.conditions = new Set(context.conditions.sort((a, b) => a.localeCompare(b)));\n\n    // Add distance units\n    context.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    if (item.type !== \"spell\") {\n      for (const d of [\"close\", \"medium\", \"long\"]) {\n        delete context.distanceUnits[d];\n      }\n    }\n\n    // Parse notes\n    if (itemData.attackNotes) {\n      const value = itemData.attackNotes;\n      foundry.utils.setProperty(context, \"notes.attack\", value);\n    }\n\n    // Add item flags\n    this._prepareItemFlags(context);\n\n    // Add actions\n    context.actions = this.item.actions;\n\n    context.distanceUnit = game.i18n.localize(\n      pf1.utils.getDistanceSystem() === \"imperial\" ? \"PF1.Distance.ftShort\" : \"PF1.Distance.mShort\"\n    );\n\n    // Prepare speeds\n    if (item.type === \"race\") {\n      context.speeds = [];\n      for (const key of [\"land\", \"fly\", \"swim\", \"climb\", \"burrow\"]) {\n        const value = item.system.speeds?.[key] ?? 0;\n        if (value == 0) continue;\n        let descriptor;\n        if (key === \"fly\") {\n          const fm = item.system.speeds.flyManeuverability || \"average\";\n          descriptor = `PF1.Movement.FlyManeuverability.Quality.${fm}`;\n        }\n        context.speeds.push({\n          value: pf1.utils.convertDistance(value)[0],\n          mode: key,\n          label: `PF1.Movement.Mode.${key}`,\n          descriptor,\n        });\n      }\n    }\n\n    // Content source, fill in from registry\n    if (context.showIdentifiedData) {\n      this._prepareContentSource(context);\n    }\n\n    // Trailing async awaits to ensure they're all awaited in one go instead of sequentially\n\n    // Add descriptions\n    const description = context.showIdentified ? this.item.getDescription({ rollData, header: false }) : null;\n\n    context.descriptionHTML = {\n      identified: null,\n      unidentified: null,\n    };\n    const enrichOptions = {\n      secrets: context.owner,\n      rollData: rollData,\n      async: true,\n      relativeTo: this.actor,\n    };\n    const pIdentDesc = description ? enrichHTMLUnrolledAsync(description, enrichOptions) : Promise.resolve();\n    pIdentDesc.then((html) => (context.descriptionHTML.identified = html));\n    const unidentDesc = itemData.description?.unidentified;\n    const pUnidentDesc = unidentDesc ? enrichHTMLUnrolledAsync(unidentDesc, enrichOptions) : Promise.resolve();\n    pUnidentDesc.then((html) => (context.descriptionHTML.unidentified = html));\n\n    const pTopDesc = topDescription\n      ? TextEditor.enrichHTML(topDescription, {\n          rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : Promise.resolve();\n    pTopDesc.then((html) => (context.topDescription = html));\n\n    // Add script calls\n    const pScripts = this._prepareScriptCalls(context);\n\n    // Add links\n    const pLinks = this._prepareLinks(context);\n\n    await Promise.all([pIdentDesc, pUnidentDesc, pTopDesc, pScripts, pLinks]);\n\n    return context;\n  }\n\n  _prepareContentSource(context) {\n    const sources = this._getContentSources();\n    if (sources.length == 0) return;\n\n    const main = this._selectContentSource(sources);\n\n    context.bookSources = {\n      all: sources,\n      main,\n    };\n\n    if (sources.length > 1) {\n      context.bookSources.extras = sources.filter((s) => s !== main);\n    }\n  }\n\n  _selectContentSource(sources) {\n    if (sources?.length === 0) return null;\n\n    sources.sort((a, b) => b.datestamp - a.datestamp);\n\n    return sources[0];\n  }\n\n  _getContentSources() {\n    const sources = this.item.system.sources ?? [];\n\n    return sources.map((source) => {\n      const registry = pf1.registry.sources.get(source?.id) ?? {};\n      const { publisher, date, abbr, name, edition } = registry;\n\n      return {\n        publisher,\n        date,\n        abbr,\n        name,\n        edition,\n        ...source,\n        title: source.title || registry.name,\n        registry,\n        datestamp: Date.parse(source.date || registry.date),\n      };\n    });\n  }\n\n  _prepareMaterialsAndAddons(itemType, itemSubtype, subType, chosenMaterial = \"\") {\n    const materialList = {};\n    const addonList = [];\n    const basicList = {};\n\n    pf1.registry.materialTypes.forEach((material) => {\n      if (this._isMaterialAllowed(itemType, itemSubtype, subType, material)) {\n        materialList[material.id] = material.name;\n      }\n\n      if (\n        material.addon && // Filter addons by chosen material\n        !(\n          (material.id === \"alchemicalsilver\" && [\"adamantine\", \"coldiron\", \"mithral\"].includes(chosenMaterial)) ||\n          ([\"heatstoneplating\", \"lazurite\", \"sunsilk\"].includes(material.id) && itemType === \"weapon\")\n        )\n      ) {\n        addonList.push({ key: material.id, name: material.name });\n      }\n\n      if (material.basic) {\n        // Filter basic materials\n        basicList[material.id] = material.name;\n      }\n    });\n\n    return {\n      materials: materialList,\n      addons: addonList,\n      basics: basicList,\n    };\n  }\n\n  _prepareAlignments(alignments) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: foundry.utils.deepClone(alignments),\n    };\n  }\n\n  /**\n   * Check if a given material is okay to be added to our materials list\n   * for the item sheet.\n   *\n   * @param {string} itemType - Whether we're checking weapons or equipment\n   * @param {string} itemSubtype - Item-specific typing to filter with\n   * @param {string} subType - Only relevant with shields, since \"other\" is used in both shield and general gear\n   * @param {pf1.registry.MaterialType} material - The Material object from the registry that has our needed metadata\n   * @returns {boolean}\n   */\n  _isMaterialAllowed(itemType, itemSubtype, subType, material) {\n    // Let's end this early if we can never be allowed\n    if (material.addon || material.basic) return false;\n\n    // Check whether the material is allowed for the given item\n    switch (itemType) {\n      case \"weapon\": {\n        switch (itemSubtype) {\n          case \"light\":\n            return material.allowed.lightBlade;\n          case \"1h\":\n            return material.allowed.oneHandBlade;\n          case \"2h\":\n            return material.allowed.twoHandBlade;\n          case \"ranged\":\n            return material.allowed.rangedWeapon;\n          case \"all\": // We're prepping an Attack and don't care (don't have the info anyways)\n            return true;\n          default:\n            // Shouldn't find this\n            return false;\n        }\n      }\n      case \"equipment\": {\n        if (subType === \"shield\") return material.allowed.buckler;\n        return material.allowed[itemSubtype];\n      }\n    }\n\n    return true; // Finally made it through the gauntlet!\n  }\n\n  _prepareLinks(context) {\n    context.links = {\n      list: [],\n    };\n\n    // Add charges link type\n    if ([\"feat\", \"consumable\", \"attack\", \"equipment\"].includes(this.item.type)) {\n      context.links.list.push({\n        id: \"charges\",\n        label: game.i18n.localize(\"PF1.LinkTypeCharges\"),\n        help: game.i18n.localize(\"PF1.LinkHelpCharges\"),\n        items: [],\n      });\n    }\n\n    // Add class associations\n    if (this.item.type === \"class\") {\n      context.links.list.push({\n        id: \"classAssociations\",\n        label: game.i18n.localize(\"PF1.LinkTypeClassAssociations\"),\n        help: game.i18n.localize(\"PF1.LinkHelpClassAssociations\"),\n        fields: {\n          level: {\n            type: \"Number\",\n            label: game.i18n.localize(\"PF1.Level\"),\n          },\n        },\n        items: [],\n      });\n    }\n\n    // Add children link type\n    context.links.list.push({\n      id: \"children\",\n      label: game.i18n.localize(\"PF1.LinkTypeChildren\"),\n      help: game.i18n.localize(\"PF1.LinkHelpChildren\"),\n      items: [],\n    });\n\n    context.links.list.push({\n      id: \"supplements\",\n      label: game.i18n.localize(\"PF1.LinkTypeSupplements\"),\n      help: game.i18n.localize(\"PF1.LinkHelpSupplements\"),\n      fields: {\n        /*\n        // TODO: Add child link creation toggle\n        asChild: {\n          type: \"Boolean\",\n          label: game.i18n.localize(\"PF1.AsChild\"),\n        },\n        */\n      },\n      items: [],\n    });\n\n    // Post process data\n    const item = this.item,\n      actor = item.actor;\n    for (const links of context.links.list) {\n      const items = item.system.links?.[links.id] || [];\n      for (let index = 0; index < items.length; index++) {\n        const linkData = foundry.utils.deepClone(items[index]);\n        linkData.index = index; // Record index so sorted lists maintain data cohesion\n\n        const linkedItem = fromUuidSync(linkData.uuid, { relative: actor });\n        if (!linkedItem) linkData.broken = true;\n        linkData.img = linkedItem?.img || Item.implementation.getDefaultArtwork(linkedItem);\n\n        // Fill in name if it's not in the local data\n        linkData.name ||= linkedItem?.name;\n\n        // Add item to stack\n        links.items.push(linkData);\n      }\n    }\n  }\n\n  _prepareItemFlags(context) {\n    const flags = context.system.flags ?? {};\n    context.flags ??= {};\n    context.flags.boolean = flags.boolean ?? {};\n    context.flags.dictionary = flags.dictionary ?? {};\n  }\n\n  async _prepareScriptCalls(context) {\n    context.scriptCalls = null;\n\n    const categories = pf1.registry.scriptCalls.filter((category) => {\n      if (!category.itemTypes.includes(this.item.type)) return false;\n      return !(category.hidden === true && !game.user.isGM);\n    });\n    // Don't show the Script Calls section if there are no categories for this item type\n    if (!categories.length) return;\n\n    context.scriptCalls = {};\n\n    // Iterate over all script calls, and adjust data\n    const scriptCalls = this.item.scriptCalls ?? [];\n\n    // Create categories, and assign items to them\n    for (const { id, name, info } of categories) {\n      context.scriptCalls[id] = {\n        name,\n        tooltip: info,\n        items: scriptCalls.filter((sc) => sc.category === id && !sc.hide),\n        dataset: {\n          category: id,\n        },\n      };\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Form Submission                             */\n  /* -------------------------------------------- */\n\n  /**\n   * Extend the parent class _updateObject method to ensure that damage ends up in an Array\n   *\n   * @param event\n   * @param formData\n   * @private\n   */\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n\n    const system = formData.system;\n    const links = system.links;\n\n    if (links) {\n      const oldLinks = this.item.system?.links ?? {};\n      // Handle links arrays\n      for (const [linkType, typedLinks] of Object.entries(links)) {\n        if (Array.isArray(typedLinks)) continue; // Already handled by something else\n\n        // Maintain array and merge new data in\n        links[linkType] = foundry.utils.deepClone(oldLinks[linkType] ?? []);\n        for (const [index, linkData] of Object.entries(typedLinks)) {\n          links[linkType][index] = foundry.utils.mergeObject(links[linkType][index] ?? {}, linkData);\n        }\n      }\n    }\n\n    // Ensure values are stored as lbs\n    if (system.weight) {\n      if (system.weight?.value !== undefined) {\n        const wmult = this.item.getWeightMultiplier();\n        system.weight.value = pf1.utils.convertWeightBack(system.weight.value / wmult);\n      }\n      if (system.weight.reduction?.value !== undefined) {\n        system.weight.reduction.value = pf1.utils.convertWeightBack(system.weight.reduction.value);\n      }\n    }\n\n    // Change currencies with relative values\n    // @TODO: Create a common relative input handler.\n    const relativeKeys = [\"currency.pp\", \"currency.gp\", \"currency.sp\", \"currency.cp\"];\n    for (const key of relativeKeys) {\n      const value = foundry.utils.getProperty(system, key);\n      if (typeof value !== \"string\") continue;\n\n      // Add or subtract values\n      let newValue;\n      if (value.match(/(\\+|-)(\\d+)/)) {\n        const operator = RegExp.$1;\n        let value = parseInt(RegExp.$2);\n        if (operator === \"-\") value = -value;\n        const originalValue = foundry.utils.getProperty(this.item.system, key);\n        newValue = originalValue + value;\n      } else if (value.match(/^[0-9]+$/)) {\n        newValue = parseInt(value);\n      } else if (value === \"\") {\n        newValue = 0;\n      } else {\n        // Invalid strings\n        newValue = 0;\n        // Trigger warning for bad value\n        if (event.target.name === `system.${key}`) {\n          event.target.setCustomValidity(game.i18n.localize(\"PF1.Warning.InvalidInput\"));\n        }\n      }\n\n      foundry.utils.setProperty(system, key, Math.max(0, newValue));\n    }\n\n    // Adjust Material Addons\n    // The available addons can change depending in the chosen material,\n    // so we need to get the values to build the addons on the item.\n    const material = this.item.type === \"equipment\" ? system.armor?.material : system.material;\n    if (material?.addon) {\n      // Convert to array\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    // Update the Item\n    return super._updateObject(event, formData);\n  }\n\n  /* -------------------------------------------- */\n\n  _onHoverTooltip(event) {\n    const type = event.target.dataset.tooltipType;\n    const content = [];\n    switch (type) {\n      case \"weight\":\n        this._onHoverWeightTooltip(event, content);\n        break;\n      case \"price\":\n        this._onHoverPriceTooltip(event, content);\n        break;\n    }\n    return content.join(\"<br>\");\n  }\n\n  _onHoverWeightTooltip(event, content) {\n    const unit = game.i18n.localize(pf1.utils.getWeightSystem() === \"metric\" ? \"PF1.Kgs\" : \"PF1.Lbs\");\n    // TODO: better i18n support\n    const mValue = `${this.item.system.weight.converted.value} ${unit}`;\n\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: mValue }));\n  }\n\n  _onHoverPriceTooltip(event, content) {\n    const cp = this.item.getValue({ sellValue: 1, single: true, inLowestDenomination: true });\n    const c = pf1.utils.currency.split(cp);\n    const inline = [];\n    Object.entries(c).forEach(([key, value]) => {\n      if (value > 0) inline.push(game.i18n.format(`PF1.Currency.Inline.${key}`, { value }));\n    });\n\n    content.push(game.i18n.format(\"PF1.StackDetails.Base\", { value: inline.join(\", \") }));\n  }\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula || \"0\");\n      await roll.evaluate();\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.classList.add(\"invalid\");\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    // Formulas not meant for checks or other rolls must be deterministic\n    // TODO: Make this selection better\n    if (!el.classList.contains(\"roll\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.Warning.FormulaMustBeDeterministic\";\n        el.classList.add(\"invalid\");\n        el.setCustomValidity(game.i18n.localize(\"PF1.Warning.FormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  /**\n   * Activate listeners for interactive item sheet events\n   *\n   * @param {JQuery<HTMLElement>} html\n   */\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    const hasActor = !!this.actor;\n\n    if (this.item.isPhysical) {\n      html.find(\".details-tooptip\").each((i, el) => {\n        el.addEventListener(\n          \"pointermove\",\n          (ev) => {\n            const content = this._onHoverTooltip(ev);\n            if (content) {\n              game.tooltip.activate(el, {\n                text: content,\n                direction: TooltipManager.TOOLTIP_DIRECTIONS.RIGHT,\n                cssClass: \"pf1\",\n              });\n            }\n          },\n          { passive: true }\n        );\n        el.addEventListener(\"pointerleave\", (ev) => game.tooltip.deactivate(), { passive: true });\n      });\n    }\n\n    // Tooltips\n    html.mousemove((ev) => this._moveTooltips(ev));\n\n    // Action interactions\n    html\n      .find(\".actions .item-list .item .item-name\")\n      // Edit action\n      .on(\"contextmenu\", this._onActionEdit.bind(this))\n      // Action summaries\n      .on(\"click\", this._onActionSummary.bind(this));\n\n    // Action control\n    html.find(\".actions .action-controls a\").on(\"click\", this._onActionControl.bind(this));\n\n    // Open help browser\n    html.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n\n    // Open entry/trait editor/viewer\n    html.find(\".entry-selector\").click(this._onEntrySelector.bind(this));\n    html.find(\".trait-selector\").click(this._onTraitSelector.bind(this));\n\n    // Content source editor\n    html\n      .find(\".content-source .control a.edit\")\n      .click(() => pf1.applications.ContentSourceEditor.open(this.item, { editable: this.isEditable }));\n\n    // Mark proficiency in indeterminate state if not forced but actor has it.\n    if (\n      hasActor &&\n      this.item.system.proficient !== true &&\n      [\"weapon\", \"equipment\", \"attack\"].includes(this.item.type)\n    ) {\n      if (this.item.isProficient) {\n        const proficiency = html.find(\"input[name='system.proficient']\")[0];\n        if (proficiency) proficiency.indeterminate = true;\n      }\n    }\n\n    // Mark broken in indeterminate state if it's automatically designated broken but not explicitly\n    if (this.item.isPhysical) {\n      if (this.item.isBroken && this.item.system.broken !== true) {\n        const broken = html.find(\"input[name='system.broken']\")[0];\n        if (broken) {\n          broken.indeterminate = true;\n          broken.dataset.tooltip = \"PF1.AutoBroken\";\n        }\n      }\n    }\n\n    // Allow editing and viewing visible scripts\n    html.find(\".script-calls .item-list .item\").contextmenu(this._onScriptCallEdit.bind(this));\n    html.find(\".script-calls .item-control\").click(this._onScriptCallControl.bind(this));\n\n    // Add warning about formulas\n    html.find(\"input.formula\").each(async (_, el) => this._validateFormula(el));\n\n    // Linked item clicks\n    html\n      .find(\".tab[data-tab='links'] .links-item .item-name .source-item\")\n      .on(\"click\", this._openLinkedItem.bind(this));\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) {\n      html.find(\"span.text-box\").addClass(\"readonly\");\n      return;\n    }\n\n    // Add drop handler to textareas\n    html.find(\"textarea, .notes input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Create new change\n    html.find(\".tab.changes .controls a.add-change\").click(this._onCreateChange.bind(this));\n\n    // Open Changes editor\n    html[0]\n      .querySelectorAll(\".tab.changes .changes .controls a.menu\")\n      .forEach((el) => el.addEventListener(\"pointerenter\", this._onOpenChangeMenu.bind(this), { passive: true }));\n\n    // Modify note changes\n    html.find(\".context-note-control\").click(this._onNoteControl.bind(this));\n    html.find(\".context-note .context-note-target\").click(this._onNoteTargetControl.bind(this));\n\n    // Create attack\n    if ([\"weapon\"].includes(this.item.type)) {\n      html.find(\"button[name='create-attack']\").click(this._createAttack.bind(this));\n    }\n\n    // Create spellbook\n    if (this.item.type === \"class\") {\n      html.find(\"button[name='create-spellbook']\").click(this._createSpellbook.bind(this));\n    }\n\n    // Effect notes and footnotes\n    html.find(\".card-notes .controls a\").click(this._onCardNoteControl.bind(this));\n\n    // Listen to field entries\n    html.find(\".item-selector\").click(this._onItemSelector.bind(this));\n\n    html.find(\".link-control\").click(this._onLinkControl.bind(this));\n\n    // Click to change text input\n    html.find('*[data-action=\"input-text\"]').click((event) => this._onInputText(event));\n\n    // Select the whole text on click\n    html.find(\".select-on-click\").click(this._selectOnClick.bind(this));\n\n    html.find(\".speed-editor\").click(this._onSpeedEdit.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Actions\n    /* -------------------------------------------- */\n\n    // Modify action charges\n    html\n      .find(\".action-parts .item-uses span.text-box.value\")\n      .on(\"wheel\", this._setActionUses.bind(this))\n      .on(\"click\", (event) => {\n        this._onSpanTextInput(event, this._setActionUses.bind(this));\n      });\n\n    // Open charge source with right click\n    html.find(\".item-link[data-item-id]\").on(\"contextmenu\", (event) => {\n      event.preventDefault();\n      const itemId = event.currentTarget.dataset.itemId;\n      const item = this.actor.items.get(itemId);\n      item?.sheet.render(true, { focus: true });\n    });\n\n    /* -------------------------------------------- */\n    /*  Links\n    /* -------------------------------------------- */\n\n    html.find('a[data-action=\"compendium\"]').click(this._onOpenCompendium.bind(this));\n\n    /* -------------------------------------------- */\n    /*  Script Calls\n    /* -------------------------------------------- */\n\n    html.find(\".script-calls .item-list[data-category]\").on(\"drop\", this._onScriptCallDrop.bind(this));\n  }\n\n  _onSpanTextInput(event, callback = null) {\n    const el = event.currentTarget;\n    const parent = el.parentElement;\n\n    // Replace span element with an input (text) element\n    const newEl = document.createElement(`INPUT`);\n    newEl.type = \"text\";\n    if (el.dataset?.dtype) newEl.dataset.dtype = el.dataset.dtype;\n\n    // Set value of new input element\n    let prevValue = el.innerText;\n    if (el.classList.contains(\"placeholder\")) prevValue = \"\";\n\n    const noCap = el.classList.contains(\"no-value-cap\");\n\n    const name = el.getAttribute(\"name\");\n    let maxValue;\n    if (name) {\n      newEl.setAttribute(\"name\", name);\n      prevValue = foundry.utils.getProperty(this.item, name) ?? \"\";\n      if (typeof prevValue !== \"string\") prevValue = prevValue.toString();\n\n      if (name.endsWith(\".value\") && !noCap) {\n        const maxName = name.replace(/\\.value$/, \".max\");\n        maxValue = foundry.utils.getProperty(this.item, maxName);\n      }\n    }\n    newEl.value = prevValue;\n\n    // Toggle classes\n    const forbiddenClasses = [\"placeholder\", \"direct\", \"allow-relative\"];\n    for (const cls of el.classList) {\n      if (!forbiddenClasses.includes(cls)) newEl.classList.add(cls);\n    }\n\n    // Replace span with input element\n    const allowRelative = el.classList.contains(\"allow-relative\"),\n      clearValue = parseFloat(el.dataset.clearValue || \"0\");\n    parent.replaceChild(newEl, el);\n    let changed = false;\n    newEl.addEventListener(\"keypress\", (event) => {\n      if (event.key !== \"Enter\") return;\n      changed = true;\n      if (allowRelative) {\n        const number = adjustNumberByStringCommand(parseFloat(prevValue), newEl.value, maxValue, clearValue);\n        newEl.value = number;\n      }\n\n      if (newEl.value.toString() === prevValue.toString()) {\n        this.render();\n      } else if (typeof callback === \"function\") {\n        callback.call(this, event);\n      }\n    });\n    newEl.addEventListener(\"focusout\", (event) => {\n      if (!changed) {\n        changed = true;\n        if (allowRelative && parseFloat(prevValue) !== parseFloat(newEl.value)) {\n          const number = adjustNumberByStringCommand(parseFloat(prevValue), newEl.value, maxValue, clearValue);\n          newEl.value = number;\n        }\n\n        if (newEl.value.toString() === prevValue.toString()) {\n          this.render();\n        } else if (typeof callback === \"function\") {\n          callback.call(this, event);\n        }\n      }\n    });\n\n    // Select text inside new element\n    newEl.focus();\n    newEl.select();\n  }\n\n  _mouseWheelAdd(event, el) {\n    const isInput = el.tagName === \"INPUT\";\n    const { originalEvent } = event;\n\n    if (originalEvent && originalEvent instanceof WheelEvent && originalEvent.ctrlKey) {\n      event.preventDefault();\n      const value = (isInput ? parseFloat(el.value) : parseFloat(el.innerText)) || 0;\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(originalEvent.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n\n      if (isInput) {\n        el.value = value + amount * increase;\n      } else {\n        el.innerText = (value + amount * increase).toString();\n      }\n    }\n  }\n\n  _setActionUses(event) {\n    if (!(event.originalEvent instanceof MouseEvent)) event.preventDefault();\n    const el = event.currentTarget;\n    const actionId = el.closest(\".item[data-action-id]\").dataset.actionId;\n    const action = this.item.actions.get(actionId);\n\n    this._mouseWheelAdd(event, el);\n\n    const value = el.tagName === \"INPUT\" ? Number(el.value) : Number(el.innerText);\n    this.setActionUpdate(action.id, \"uses.self.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateActions(), { passive: true, once: true });\n    } else this._updateActions();\n  }\n\n  setActionUpdate(id, key, value) {\n    let obj = this._actionUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._actionUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  async _updateActions() {\n    const promises = [];\n\n    const updates = this._actionUpdates;\n    this._actionUpdates = [];\n\n    // Memorize variables in document\n    for (const d of updates) {\n      const action = this.item.actions.get(d._id);\n      if (!action) {\n        console.error(\"Item update for non-existing item:\", d._id, d);\n        continue;\n      }\n      await action.update(d);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  _onOpenCompendium(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const target = a.dataset.actionTarget;\n\n    pf1.applications.compendiums[target].render(true, { focus: true });\n  }\n\n  async _onScriptCallControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const script = this.item.scriptCalls ? this.item.scriptCalls.get(a.closest(\".item\")?.dataset.itemId) : null;\n    const group = a.closest(\".item-list\");\n    const category = group.dataset.category;\n\n    // Create item\n    if (a.classList.contains(\"item-create\")) {\n      await this._onSubmit(event, { preventRender: true });\n      const newScripts = await pf1.components.ItemScriptCall.create([{ category, type: \"script\" }], {\n        parent: this.item,\n      });\n      newScripts?.forEach((script) => script.edit());\n      return;\n    }\n    // Delete item\n    else if (script && a.classList.contains(\"item-delete\")) {\n      const list = (this.item.system.scriptCalls || []).filter((o) => o._id !== script.id);\n      const updateData = { \"system.scriptCalls\": list };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Edit item\n    else if (script && a.classList.contains(\"item-edit\")) {\n      script.edit();\n    }\n    // Toggle hidden\n    else if (script && a.classList.contains(\"item-hide\")) {\n      await this._onSubmit(event, { preventRender: true });\n      script.update({ hidden: !script.hidden });\n    }\n  }\n\n  _onScriptCallEdit(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n\n    /** @type {pf1.components.ItemScriptCall} */\n    const script = this.item.scriptCalls?.get(el.dataset.itemId);\n    script?.edit({ editable: this.isEditable });\n  }\n\n  /**\n   * @protected\n   * @param {Event} event\n   */\n  _moveTooltips(event) {\n    let elem = event.target;\n    if (!elem.matches(\".tooltip\")) elem = elem.closest(\".tooltip\");\n    if (elem) {\n      const tip = elem.querySelector(\".tooltipcontent\");\n      if (tip) {\n        const x = event.clientX;\n        const y = event.clientY + 24;\n        tip.style.cssText += `left:${x}px;top:${y}px;`;\n      }\n    }\n  }\n\n  async _onTextAreaDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n\n    // Insert link\n    if (link) {\n      elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n      return this._onSubmit(event); // Save\n    }\n  }\n\n  async _onScriptCallDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const { uuid, type } = eventData;\n    if (type !== \"Macro\") return;\n\n    // Submit data\n    if (uuid) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const elem = event.currentTarget;\n      const category = elem.dataset.category;\n      const list = this.item.system.scriptCalls ?? [];\n      return pf1.components.ItemScriptCall.create([{ type: \"macro\", value: uuid, category, name: \"\", img: \"\" }], {\n        parent: this.item,\n      });\n    }\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /**\n   * By default, returns true only for GM\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const elem = event.target;\n\n    // Drag action\n    const actionId = elem.dataset.actionId;\n    if (actionId) {\n      const action = this.item.actions.get(actionId);\n      const obj = { type: \"action\", uuid: this.item.uuid, actionId: action.id, data: action.data };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag Change\n    const changeId = elem.dataset.changeId;\n    if (changeId) {\n      const ch = this.item.changes.get(changeId);\n      const obj = { type: \"pf1Change\", data: ch.data, changeId, uuid: this.item.uuid };\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n\n    // Drag link\n    if (elem.matches(\".links-item .item-name\")) {\n      const el = elem.closest(\"[data-uuid]\");\n      const type = el.closest(\"[data-tab]\")?.dataset.tab;\n      let uuid = el.dataset.uuid;\n      if (type === \"children\") {\n        // Transform relative UUID into absolute\n        uuid = fromUuidSync(uuid, { relative: this.actor })?.uuid;\n      }\n      const index = Number(el.dataset.index);\n      const link = this.item.system.links?.[type]?.[index];\n      const obj = { type: \"Item\", uuid, pf1Link: {} };\n      if (link) obj.pf1Link.level = link.level;\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(obj));\n      return;\n    }\n  }\n\n  /**\n   * Allow non-GM to drag&drop actions and items (for containers) to this sheet.\n   *\n   * @override\n   * @protected\n   */\n  _canDragDrop() {\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!this.isEditable) return;\n\n    const data = TextEditor.getDragEventData(event);\n    const { type, uuid } = data;\n    /** @type {ItemPF} */\n    const item = this.item;\n\n    const srcItem = uuid ? fromUuidSync(uuid) : null;\n\n    switch (type) {\n      // Handle actions\n      case \"action\": {\n        const actionId = data.actionId;\n        // Re-order\n        if (srcItem === item) {\n          const targetActionID = event.target?.closest(\".item[data-action-id]\")?.dataset?.actionId;\n          const prevActions = foundry.utils.deepClone(item.toObject().system.actions);\n\n          let targetIdx;\n          if (!targetActionID) targetIdx = prevActions.length - 1;\n          else targetIdx = prevActions.indexOf(prevActions.find((o) => o._id === targetActionID));\n          const srcIdx = prevActions.indexOf(prevActions.find((o) => o._id === actionId));\n\n          const [actionData] = prevActions.splice(srcIdx, 1);\n          prevActions.splice(targetIdx, 0, actionData);\n          await this.object.update({ \"system.actions\": prevActions });\n        }\n        // Add to another item\n        else {\n          const prevActions = foundry.utils.deepClone(item.toObject().system.actions ?? []);\n          data.data._id = foundry.utils.randomID(16);\n          prevActions.splice(prevActions.length, 0, data.data);\n          await this.object.update({ \"system.actions\": prevActions });\n        }\n        break;\n      }\n      case \"pf1Change\": {\n        const chData = data.data;\n        // Sort in same item\n        if (srcItem === item) {\n          const el = event.target.matches(\"li.change\") ? event.target : event.target.closest(\"li.change\");\n          if (!el) return;\n          const targetChangeId = el.dataset.changeId;\n          if (chData._id === targetChangeId) {\n            // Dropped onto self, ignore.\n          } else {\n            // Re-arrange\n            /** @type {Array<object>} */\n            const changes = item.toObject().system.changes ?? [];\n            const removed = changes.findSplice((c) => c._id === chData._id);\n            if (!removed) return;\n            const idx = changes.findIndex((c) => c._id === targetChangeId);\n            if (idx >= 0) {\n              changes.splice(idx, 0, removed);\n              return item.update({ \"system.changes\": changes });\n            }\n          }\n        }\n        // Duplicate\n        else {\n          delete chData._id;\n          this.activateTab(\"changes\", \"primary\");\n          return pf1.components.ItemChange.create([chData], { parent: item });\n        }\n        break;\n      }\n      case \"Item\": {\n        // Add drop handler to link tabs\n        const linksTab = event.target.closest(\".tab.links .tab[data-group='links']\");\n        if (linksTab) {\n          this._onLinksDrop(event, data);\n        }\n        break;\n      }\n    }\n  }\n\n  async _onLinksDrop(event, data) {\n    const elem = event.target;\n    let linkType = elem.closest(\"[data-tab]\").dataset.tab;\n\n    // Default selection for dropping on tab instead of body\n    if (linkType === \"links\") linkType = \"children\";\n\n    // Try to extract the data\n    if (!data.type) throw new Error(\"Invalid drop data received\");\n\n    const targetItem = await fromUuid(data.uuid);\n    if (!targetItem || !(targetItem instanceof Item))\n      throw new Error(`UUID did not resolve to valid item: ${data.uuid}`);\n\n    let dataType,\n      itemLink = data.uuid;\n    // Case 1 - Import from a Compendium pack\n    if (targetItem.pack) {\n      dataType = \"compendium\";\n    }\n    // Case 2 - Import from same actor\n    else if (targetItem.actor === this.item.actor) {\n      dataType = \"data\";\n      itemLink = targetItem.getRelativeUUID(this.actor);\n    }\n\n    // Case 3 - Import from World Document\n    else {\n      dataType = \"world\";\n    }\n\n    // Add extra data\n    const extraData = {};\n    switch (linkType) {\n      case \"classAssociations\": {\n        const level = data.pf1Link?.level;\n        if (Number.isNumeric(level)) extraData.level = level;\n        break;\n      }\n    }\n\n    await this.item.createItemLink(linkType, dataType, targetItem, itemLink, extraData);\n  }\n\n  /**\n   * Handle spawning the ActorTraitSelector application which allows a checkbox of multiple trait options\n   *\n   * @param {Event} event   The click event which originated the selection\n   * @private\n   */\n  _onTraitSelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: game.i18n.localize(a.dataset.title),\n      subject: a.dataset.options,\n      choices: pf1.config[a.dataset.options],\n    };\n\n    switch (a.dataset.options) {\n      case \"conditions\": {\n        options.choices = pf1.registry.conditions.getLabels();\n        break;\n      }\n    }\n\n    new ActorTraitSelector(this.item, options).render(true);\n  }\n\n  _onSpeedEdit(event) {\n    event.preventDefault();\n\n    let app = Object.values(ui.windows).find(\n      (oldApp) => oldApp instanceof SpeedEditor && oldApp.document === this.item\n    );\n    app ??= new SpeedEditor(this.item);\n    app.render(true, { focus: true });\n  }\n\n  /**\n   * Toggle inline display of an item's summary/description by expanding or hiding info div\n   *\n   * @param {JQuery.ClickEvent<HTMLElement>} event - The click event on the item\n   * @private\n   */\n  async _onActionSummary(event) {\n    event.preventDefault();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    // Check whether pseudo-item belongs to another collection\n    const action = this.item.actions.get(li.dataset.actionId);\n\n    const rollData = action.getRollData();\n\n    // For actions (embedded into a parent item), show only the action's summary instead of a complete one\n    const { actionDescription, properties } = await action.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    if (li.classList.contains(\"expanded\")) {\n      const summary = li.querySelector(\".item-summary\");\n      $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: actionDescription || game.i18n.localize(\"PF1.NoDescription\"),\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      content = await TextEditor.enrichHTML(content, { rollData, async: true, secrets: this.item.isOwner });\n\n      const div = $(content);\n      div.hide();\n      li.append(...div);\n      div.slideDown(200);\n    }\n    li.classList.toggle(\"expanded\");\n  }\n\n  /**\n   * Open linked item sheet.\n   *\n   * @param {Event} event\n   */\n  async _openLinkedItem(event) {\n    event.preventDefault();\n    const el = event.target.closest(\".links-item[data-uuid],.links-item[data-item-id]\");\n    const { uuid } = el.dataset;\n\n    const item = await fromUuid(uuid, { relative: this.actor });\n    item.sheet.render(true, { focus: true });\n  }\n\n  async _onActionControl(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const a = event.currentTarget;\n\n    const getUniqueActionName = (baseName) => {\n      baseName = baseName.replace(/\\s*\\(\\d+\\)$/, \"\"); // Strip existing number\n      let name = baseName;\n      const names = new Set(this.item.actions?.map((act) => act.name) ?? []);\n      let iter = 1;\n      // Find unique name\n      while (names.has(name)) name = `${baseName} (${iter++})`;\n      return name;\n    };\n\n    // Edit action\n    if (a.classList.contains(\"edit-action\")) {\n      return this._onActionEdit(event);\n    }\n    // Add action\n    else if (a.classList.contains(\"add-action\")) {\n      await this._onSubmit(event, { preventRender: true });\n\n      const baseName = [\"weapon\", \"attack\"].includes(this.item.type)\n        ? game.i18n.localize(\"PF1.Attack\")\n        : game.i18n.localize(\"PF1.Use\");\n\n      const newActionData = {\n        name: getUniqueActionName(baseName),\n      };\n\n      const newActions = await pf1.components.ItemAction.create([newActionData], { parent: this.item });\n      newActions.forEach((action) => action.sheet.render(true));\n      return;\n    }\n    // Remove action\n    else if (a.classList.contains(\"delete-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const action = this.item.actions.get(li.dataset.actionId);\n\n      const confirmed = getSkipActionPrompt()\n        ? true\n        : await Dialog.confirm({\n            title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: action.name }),\n            content: `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`,\n            yes: () => true,\n            no: () => false,\n            close: () => false,\n            rejectClose: false,\n          });\n\n      if (confirmed === true) {\n        await this._onSubmit(event, { preventRender: true });\n        action.delete();\n      }\n    }\n    // Duplicate action\n    else if (a.classList.contains(\"duplicate-action\")) {\n      const li = a.closest(\".item[data-action-id]\");\n      const actions = this.item.toObject().system.actions ?? [];\n      const action = foundry.utils.deepClone(actions.find((act) => act._id === li.dataset.actionId) ?? {});\n      action.name = getUniqueActionName(action.name);\n      action._id = foundry.utils.randomID(16);\n      actions.push(action);\n      const updateData = { \"system.actions\": actions };\n      await this._updateObject(event, this._getSubmitData(updateData));\n      this.item.actions.get(action._id)?.sheet.render(true);\n    }\n  }\n\n  async _onActionEdit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const li = event.target.closest(\".item[data-action-id]\");\n    this.item.actions.get(li.dataset.actionId).sheet.render(true);\n  }\n\n  async _onOpenChangeMenu(event) {\n    const el = event.target;\n\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n\n    const content = document.createElement(\"div\");\n    content.innerHTML = await renderTemplate(\"systems/pf1/templates/items/parts/item-change-tooltip.hbs\", { changeId });\n\n    content.querySelector(\".duplicate\").addEventListener(\"click\", (ev) => this._onDuplicateChange(ev, el));\n    content.querySelector(\".delete\").addEventListener(\"click\", (ev) => this._onDeleteChange(ev, el));\n    content.querySelector(\".edit\").addEventListener(\"click\", (ev) => this._onEditChange(ev, el));\n\n    await game.tooltip.activate(el, {\n      content,\n      locked: true,\n      direction: TooltipManager.TOOLTIP_DIRECTIONS.LEFT,\n      cssClass: \"pf1 change-menu\",\n    });\n  }\n\n  /**\n   * @internal\n   * @param {Event} event - Click event\n   */\n  _onEditChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    const change = this.item.changes.get(changeId);\n    if (change) {\n      game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      return void pf1.applications.ChangeEditor.wait(change);\n    }\n  }\n\n  _onDuplicateChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    if (!changeId) return;\n    const changes = this.item.toObject().system.changes ?? [];\n    const old = changes.find((c) => c._id === changeId);\n    if (old) {\n      game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n      delete old._id;\n      return pf1.components.ItemChange.create([old], { parent: this.item });\n    }\n  }\n\n  _onDeleteChange(event) {\n    event.preventDefault();\n    const el = event.target;\n    const changeId = el.dataset.changeId;\n    game.tooltip.dismissLockedTooltip(el.closest(\".locked-tooltip\"));\n    this.item.changes.get(changeId)?.delete();\n  }\n\n  async _onCreateChange(event) {\n    event.preventDefault();\n\n    const [change] = await pf1.components.ItemChange.create([{ modifier: \"untyped\" }], { parent: this.item });\n    if (change) pf1.applications.ChangeEditor.wait(change);\n  }\n\n  async _onNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Add new note\n    if (a.classList.contains(\"add-note\")) {\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.push(new pf1.components.ContextNote().toObject());\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a note\n    if (a.classList.contains(\"delete-note\")) {\n      const li = a.closest(\".context-note\");\n      const contextNotes = this.item.toObject().system.contextNotes || [];\n      contextNotes.splice(Number(li.dataset.note), 1);\n      const updateData = { \"system.contextNotes\": contextNotes };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  _onNoteTargetControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Prepare categories and changes to display\n    const li = a.closest(\".context-note\");\n    const noteIndex = Number(li.dataset.note);\n    const note = this.item.system.contextNotes[noteIndex];\n    const categories = getBuffTargetDictionary(this.item.actor, \"contextNotes\");\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    const part1 = note?.target?.split(\".\")[0];\n    const category = pf1.config.contextNoteTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { title: \"PF1.Application.ContextNoteTargetSelector.Title\" },\n      categories,\n      (key) => {\n        if (key) {\n          const updateData = {};\n          updateData[`system.contextNotes.${noteIndex}.target`] = key;\n          this.item.update(updateData);\n        }\n      },\n      { category, item: note?.target }\n    );\n    w.render(true);\n  }\n\n  async _onLinkControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Delete link\n    if (a.classList.contains(\"delete-link\")) {\n      const { type, uuid, index } = a.dataset;\n      const links = this.item.toObject().system.links?.[type] ?? [];\n\n      const deleted = links.splice(Number(index), 1);\n\n      // Sanity check: Should happen only if update sneaks in between render and click\n      if (deleted.uuid && deleted.uuid !== uuid) throw new Error(\"Link deletion UUID mismatch\");\n\n      // Call hook for deleting a link\n      Hooks.callAll(\"pf1DeleteItemLink\", this.item, deleted, type);\n\n      const updateData = { \"system.links\": { [type]: links } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Makes a readonly text input editable, and focus it.\n   *\n   * @param {Event} event\n   * @private\n   */\n  _onInputText(event) {\n    event.preventDefault();\n\n    /** @type {HTMLElement} */\n    const elem = event.target;\n\n    elem.readOnly = false;\n\n    // Get and set real value\n    const { inputValue } = elem.dataset;\n    let origValue = inputValue ?? foundry.utils.getProperty(this.item, elem.name);\n    const displayValue = elem.value;\n    elem.value = origValue;\n    elem.select();\n\n    // Restore old display on unfocus if nothing was changed\n    elem.addEventListener(\n      \"blur\",\n      () => {\n        if (typeof origValue === \"number\") origValue = origValue.toString();\n        if (origValue === elem.value) {\n          elem.readOnly = true;\n          elem.value = displayValue;\n        }\n\n        // Clear selection\n        const s = document.getSelection();\n        if (s.anchorNode === elem || s.anchorNode === elem.parentElement) s.removeAllRanges();\n      },\n      { once: true, passive: true }\n    );\n  }\n\n  async _createAttack(event) {\n    if (!this.actor) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n\n    await this._onSubmit(event, { preventRender: true });\n\n    const sourceItem = this.item;\n\n    const attackItem = pf1.documents.item.ItemAttackPF.fromItem(sourceItem);\n\n    // Show in quickbar only if if the original item is there\n    attackItem.system.showInQuickbar = sourceItem.system.showInQuickbar;\n\n    // Create attack\n    const newItem = await Item.implementation.create(attackItem, { parent: this.actor });\n    if (!newItem) throw new Error(\"Failed to create attack from weapon\");\n\n    // Disable quick use of weapon\n    await sourceItem.update({ \"system.showInQuickbar\": false });\n\n    // Create link\n    await sourceItem.createItemLink(\"children\", \"data\", newItem, newItem.getRelativeUUID(this.actor));\n\n    // Notify user\n    ui.notifications.info(game.i18n.format(\"PF1.NotificationCreatedAttack\", { item: sourceItem.name }));\n  }\n\n  async _createSpellbook(event) {\n    event.preventDefault();\n    if (this.item.actor == null) throw new Error(game.i18n.localize(\"PF1.Error.ItemNoOwner\"));\n    await this._onSubmit(event, { preventRender: true });\n\n    await this.item.actor.createSpellbook({ ...this.item.system.casting, class: this.item.system.tag });\n\n    // HACK: The above does not re-render the item sheet for some reason\n    this.render();\n  }\n\n  _onEntrySelector(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const options = {\n      name: a.dataset.for,\n      title: a.dataset.title,\n      flag: a.dataset.flag === \"true\",\n      boolean: a.dataset.boolean === \"true\",\n      flat: a.dataset.flat === \"true\",\n      fields: a.dataset.fields,\n      dtypes: a.dataset.dtypes,\n    };\n\n    pf1.applications.EntrySelector.open(this.item, options);\n  }\n\n  async _onItemSelector(event) {\n    event.preventDefault();\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n    // This functionm should never be called without an actor\n    if (!this.actor) throw new Error(\"No actor to find items from.\");\n\n    const { type, subType, kind, empty, selected, label, name } = event.currentTarget.dataset;\n\n    const filter = (item) => {\n      if (type && item.type !== type) return false;\n      if (subType && item.subType !== subType) return false;\n      if (subType === \"ammo\" && kind) {\n        if (item.system.extraType !== kind) return false;\n      }\n      return true;\n    };\n\n    const options = {\n      actor: this.actor,\n      empty: empty === \"true\" || empty !== \"false\",\n      filter,\n      selected,\n    };\n\n    const appOptions = {\n      title: `${game.i18n.format(\"PF1.SelectSpecific\", { specifier: game.i18n.localize(label) })} - ${this.actor.name}`,\n      id: `${this.item.uuid}-item-selector`,\n    };\n\n    const item = await pf1.applications.ItemSelector.wait(options, appOptions);\n    if (item === null) return;\n\n    this.item.update({ [name]: item });\n  }\n\n  /**\n   * Control effect notes and footnotes\n   *\n   * @internal\n   * @param {Event} event\n   * @returns\n   */\n  async _onCardNoteControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const name = a.dataset.name;\n    const action = a.dataset.action;\n\n    const notes = foundry.utils.getProperty(this.item.toObject(), name) ?? [];\n\n    switch (action) {\n      case \"add\": {\n        notes.push(\"\");\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      case \"delete\": {\n        notes.splice(Number(a.dataset.index), 1);\n        const updateData = { [name]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  _selectOnClick(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    el.select();\n  }\n}\n\n/**\n * @typedef {object} DescriptionAttribute\n * @property {string} name - Data path to which the input will be written\n * @property {boolean} [fakeName] - Is player lied to about what they're editing. Unused.\n * @property {string} id\n * @property {boolean} [isNumber] - Whether the input is a number (text input)\n * @property {boolean} [isBoolean] - Whether the input is a boolean (checkbox)\n * @property {boolean} [isRange] - Whether this is a dual input for a value and a maximum value\n * @property {string} label - The label for the input\n * @property {string | boolean | number | {value: string | number, name: string}} value - The value that is show in the sidebar.\n *   Ranges require an object with `value` and `name` properties.\n * @property {{value: string | number, name: string}} [max] - Maximum value for a range input\n * @property {number} [decimals] - Number of decimals to display for `number`s\n * @property {boolean} [fakeValue] - Is {@link DescriptionAttribute#inputValue} actually used.\n * @property {string} [inputValue] - Value that will appear in the input field when it is edited,\n *                                   overriding the default value retrieved from the item data\n *                                   using {@link DescriptionAttribute#name}\n */\n","import { ItemSheetPF } from \"./item-sheet.mjs\";\nimport { getSkipActionPrompt } from \"../../documents/settings.mjs\";\nimport { CurrencyTransfer } from \"../currency-transfer.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\nexport class ItemSheetPF_Container extends ItemSheetPF {\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * @type {string[]} IDs of expanded items.\n     * @private\n     */\n    this._expandedItems = [];\n\n    /**\n     * Track the set of item filters which are applied\n     *\n     * @type {Set}\n     */\n    this._filters = {\n      search: { container: \"\" },\n    };\n\n    /** Item search */\n    this.searchCompositioning = false; // for IME\n    this.searchRefresh = true; // Lock out same term search unless sheet also refreshes\n    this.searchDelay = 250; // arbitrary ?ms for arbitrarily decent reactivity; MMke this configurable?\n    this.searchDelayEvent = null; // setTimeout id\n    this.effectiveSearch = \"\"; // prevent searching the same thing\n\n    /**\n     * Track item updates from the actor sheet.\n     *\n     * @type {object[]}\n     */\n    this._itemUpdates = [];\n\n    /**\n     * Override item sheet initial tab.\n     * Assumes first tab definitionis the main tab.\n     */\n    this.options.tabs[0].initial = \"contents\"; // Doesn't actually do anything\n    this._tabs[0].active = \"contents\"; // Actual override\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 800,\n      classes: [\"pf1\", \"sheet\", \"item\"],\n      scrollY: [\".item-groups-list\"],\n      dragDrop: [\n        { dragSelector: \"li.item[data-item-id]\", dropSelector: '.tab[data-tab=\"contents\"]' },\n        { dragSelector: \"label.denomination\" },\n      ],\n    });\n  }\n\n  /**\n   * Return a dynamic reference to the HTML template path used to render this Item Sheet\n   *\n   * @returns {string}\n   */\n  get template() {\n    return \"systems/pf1/templates/items/container.hbs\";\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Prepare item sheet data\n   * Start with the base item data and extending with additional properties for rendering.\n   */\n  async getData() {\n    const data = await super.getData();\n\n    data.units = {\n      weight: pf1.utils.getWeightSystem() === \"metric\" ? game.i18n.localize(\"PF1.Kgs\") : game.i18n.localize(\"PF1.Lbs\"),\n    };\n\n    // Add filters\n    data.filters = this._filters;\n\n    // The item's items\n    data.items = this.item.items.reduce((cur, item) => {\n      const itemData = item.system;\n      const i = { ...item };\n      i.id = item.id; // Alias\n      cur.push(i);\n      i.type = item.type;\n      i.subType = item.subType;\n      i.document = item;\n      i.labels = item.getLabels();\n      i.hasAttack = item.hasAttack;\n      i.hasDamage = item.hasDamage;\n      i.hasAction = item.hasAction || item.isCharged;\n      i.showUnidentifiedData = item.showUnidentifiedData;\n\n      //i.price = item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) / 100;\n\n      if (item.isPhysical) {\n        i.quantity = itemData.quantity || 0;\n        i.isStack = i.quantity > 1;\n        i.destroyed = itemData.hp?.value <= 0;\n        i.isEmpty = i.quantity <= 0;\n        i.isBroken = item.isBroken;\n      }\n\n      if (!i.isEmpty && item.isCharged && !itemData.isSingleUse) {\n        if (item.charges <= 0) i.isEmpty = true;\n      }\n\n      i.disabled = i.destroyed || false;\n\n      return cur;\n    }, []);\n    data.items.sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n    // Show whether the item has currency\n    data.hasCurrency = Object.values(this.object.system.currency).some((o) => o > 0);\n\n    // Prepare inventory\n    this._prepareContents(data);\n\n    // Get contents weight\n    const usystem = pf1.utils.getWeightSystem();\n    data.weight = {\n      contents: this.item.system.weight.converted.contents,\n      units: usystem === \"metric\" ? game.i18n.localize(\"PF1.Kgs\") : game.i18n.localize(\"PF1.Lbs\"),\n    };\n\n    // Get contents value\n    const coinage = pf1.utils.currency.merge(this.item.system.currency);\n\n    const cpValue =\n      this.item.getValue({ recursive: true, sellValue: 1, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, sellValue: 1, inLowestDenomination: true }) -\n      coinage;\n    const cpSellValue =\n      this.item.getValue({ recursive: true, inLowestDenomination: true }) -\n      this.item.getValue({ recursive: false, inLowestDenomination: true }) -\n      coinage;\n\n    data.totalValue = pf1.utils.currency.split(cpValue);\n    data.sellValue = pf1.utils.currency.split(cpSellValue);\n    data.currency = pf1.utils.currency.split(coinage);\n\n    // Set value labels\n    data.labels ??= {};\n    data.labels.totalValue = game.i18n.format(\"PF1.SplitValue\", data.totalValue);\n    data.labels.sellValue = game.i18n.format(\"PF1.SplitValue\", data.sellValue);\n    data.labels.currency = game.i18n.format(\"PF1.SplitValue\", data.currency);\n\n    return data;\n  }\n\n  /**\n   * Filters item by {@link pf1.config.sheetSections sheet section} config.\n   *\n   * @internal\n   * @param {Item} item - Item to filter\n   * @param {object} section - Section to filter by\n   * @returns {boolean}\n   */\n  _applySectionFilter(item, section) {\n    if (!section.filters) throw new Error(`Section \"${section.path}\" lacks filters`);\n    return section.filters.some((filter) => {\n      if (filter.type === item.type) {\n        return filter.subTypes?.includes(item.subType) ?? true;\n      }\n      return false;\n    });\n  }\n\n  _prepareContents(data) {\n    // Categorize items as inventory, spellbook, features, and classes\n    const inventory = Object.values(pf1.config.sheetSections.inventory)\n      .map((data) => ({ ...data }))\n      .sort((a, b) => a.sort - b.sort);\n\n    // Partition items by category\n    const items = data.items.reduce((arr, item) => {\n      item.img = item.img || DEFAULT_TOKEN;\n      item.isStack = item.system.quantity ? item.system.quantity > 1 : false;\n      item.hasUses = item.system.uses && item.system.uses.max > 0;\n      item.isCharged = [\"day\", \"week\", \"charges\"].includes(item.system.uses?.per);\n      item.price = item.system.identified === false ? item.system.unidentified?.price ?? 0 : item.system.price ?? 0;\n\n      const itemQuantity = item.system.quantity || 0;\n      const itemCharges = item.system.uses?.value || 0;\n      item.empty = itemQuantity <= 0 || (item.isCharged && itemCharges <= 0);\n      item.destroyed = item.system.hp?.value <= 0;\n      item.disabled = item.empty || item.destroyed;\n\n      arr.push(item);\n      return arr;\n    }, []);\n\n    // Organize Inventory\n    for (const i of items) {\n      const section = inventory.find((section) => this._applySectionFilter(i, section));\n      if (section) {\n        section.items ??= [];\n        section.items.push(i);\n      } else {\n        console.warn(`Could not find section for item \"${i.name}\"`, i);\n      }\n    }\n\n    data.inventory = inventory;\n  }\n\n  async _renderInner(...args) {\n    const html = await super._renderInner(...args);\n\n    // Re-open item summaries\n    for (const itemId of this._expandedItems) {\n      // Only display summaries of items that are still present\n      if (this.document.items.has(itemId)) {\n        const elem = html.find(`.item-list>.item[data-item-id=\"${itemId}\"]`)[0];\n        if (elem) this._openItemSummary(elem, { animation: false });\n      } else {\n        // Delete itemIds belonging to items no longer found in the actor\n        this._expandedItems.findSplice((o) => o === itemId);\n      }\n    }\n\n    return html;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    /* -------------------------------------------- */\n    /*  Inventory\n    /* -------------------------------------------- */\n\n    // Owned Item management\n    html.find(`.tab[data-tab=\"contents\"] .item-create`).click((ev) => this._onItemCreate(ev));\n    html.find(`.tab[data-tab=\"contents\"] .item-edit`).click(this._onItemEdit.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-delete`).click(this._onItemDelete.bind(this));\n    html.find(`.tab[data-tab=\"contents\"] .item-take`).click(this._onItemTake.bind(this));\n\n    html\n      .find(\".item .item-name\")\n      // Quick edit item\n      .contextmenu(this._onItemEdit.bind(this))\n      // Open item summary\n      .click(this._onItemSummary.bind(this));\n\n    // Quick (un)identify item\n    html.find(\"a.item-control.item-identify\").click((ev) => {\n      this._quickIdentifyItem(ev);\n    });\n\n    // Duplicate item\n    html.find(\"a.item-control.item-duplicate\").click(this._duplicateItem.bind(this));\n\n    // Quick add item quantity\n    html.find(\"a.item-control.item-quantity-add\").click((ev) => {\n      this._quickChangeItemQuantity(ev, 1);\n    });\n    // Quick subtract item quantity\n    html.find(\"a.item-control.item-quantity-subtract\").click((ev) => {\n      this._quickChangeItemQuantity(ev, -1);\n    });\n\n    // Quick Item Action control\n    html.find(\".item-actions a\").click((ev) => this._quickItemActionControl(ev));\n\n    // Set item uses\n    html\n      .find(\".item-detail.item-uses input[type='text']:not(:disabled)\")\n      .off(\"change\")\n      .change(this._setItemUses.bind(this))\n      .on(\"wheel\", this._setItemUses.bind(this));\n\n    // Convert currency\n    html.find(\"a.convert-currency\").click(this._convertCurrency.bind(this));\n\n    // Item Rolling\n    html.find(\".item .item-image\").click((event) => this._onItemRoll(event));\n\n    // Search box\n    const sb = html.find(\".search-input\");\n    sb.on(\"keyup change\", this._searchFilterChange.bind(this));\n    sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n    this.searchRefresh = true;\n    // Filter following refresh\n    sb.each(function () {\n      if (this.value.length > 0) $(this).change();\n    });\n    html.find(\".clear-search\").on(\"click\", this._clearSearch.bind(this));\n  }\n\n  _onItemCreate(event) {\n    event.preventDefault();\n    const header = event.currentTarget;\n    const type = header.dataset.type;\n    const typeName = header.dataset.typeName || header.dataset.type;\n    const itemData = {\n      name: `New ${typeName.capitalize()}`,\n      type: type,\n      system: {\n        subType: header.dataset.subType,\n      },\n    };\n\n    return this.item.createContainerContent(itemData, { renderSheet: true });\n  }\n\n  _onItemEdit(event) {\n    event.preventDefault();\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.getContainerContent(li.dataset.itemId);\n\n    item.sheet.render(true, { focus: true, editable: this.isEditable });\n  }\n\n  _onItemSummary(event) {\n    event.preventDefault();\n    const li = event.target.closest(\".item[data-item-id]\");\n    this._openItemSummary(li);\n  }\n\n  /**\n   * @internal\n   * @param {Element} elem\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.animation=true]\n   * @param {object} [options.rollData]\n   */\n  async _openItemSummary(elem, { animation = true, rollData } = {}) {\n    // Check whether pseudo-item belongs to another collection\n    const itemId = elem.dataset.itemId;\n    const item = this.document.items.get(itemId);\n\n    rollData ??= item.defaultAction?.getRollData() ?? item.getRollData();\n\n    const { description, properties } = await item.getChatData({ chatcard: false, rollData });\n\n    // Toggle summary\n    this._expandedItems = this._expandedItems.filter((o) => o !== itemId);\n    if (elem.classList.contains(\"expanded\")) {\n      const summary = elem.querySelector(\".item-summary\");\n      if (!animation) summary.remove();\n      else $(summary).slideUp(200, () => summary.remove());\n    } else {\n      const templateData = {\n        description: description || game.i18n.localize(\"PF1.NoDescription\"),\n        properties,\n      };\n      let content = await renderTemplate(\"systems/pf1/templates/actors/parts/actor-item-summary.hbs\", templateData);\n      content = await TextEditor.enrichHTML(content, { rollData, async: true, secrets: this.document.isOwner });\n\n      const div = $(content);\n\n      if (!animation) elem.append(...div);\n      else {\n        div.hide();\n        elem.append(...div);\n        div.slideDown(200);\n      }\n      this._expandedItems.push(itemId);\n    }\n    elem.classList.toggle(\"expanded\");\n  }\n\n  _onItemDelete(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    if (button.disabled) return;\n\n    const li = event.currentTarget.closest(\".item\");\n    if (getSkipActionPrompt()) {\n      this.item.deleteContainerContent(li.dataset.itemId);\n    } else {\n      button.disabled = true;\n\n      const item = this.document.items.get(li.dataset.itemId);\n\n      const msg = `<p>${game.i18n.localize(\"PF1.DeleteItemConfirmation\")}</p>`;\n      Dialog.confirm({\n        title: game.i18n.format(\"PF1.DeleteItemTitle\", { name: item.name }),\n        content: msg,\n        yes: () => {\n          this.item.deleteContainerContent(li.dataset.itemId);\n          button.disabled = false;\n        },\n        no: () => (button.disabled = false),\n        rejectClose: true,\n      }).then(null, () => (button.disabled = false));\n    }\n  }\n\n  async _onItemTake(event) {\n    event.preventDefault();\n\n    const li = event.currentTarget.closest(\".item\");\n    const item = this.item.getContainerContent(li.dataset.itemId);\n\n    if (this.actor) {\n      await this.actor.createEmbeddedDocuments(\"Item\", [item.toObject()]);\n      await this.item.deleteContainerContent(item._id);\n    }\n  }\n\n  _onDragStart(event) {\n    // Create drag data for an owned item\n    const elem = event.currentTarget;\n    let dragData;\n    if (elem.classList.contains(\"denomination\")) {\n      if (!this.item.testUserPermission(game.user, 3)) return;\n      dragData = {\n        type: \"Currency\",\n        alt: elem.classList.contains(\"alt-currency\"),\n        currency: [...elem.classList].find((o) => /[pgsc]p/.test(o)),\n        containerId: this.item.id,\n        amount: parseInt(elem.nextElementSibling.textContent || elem.nextElementSibling.value),\n      };\n    } else {\n      const item = this.item.getContainerContent(elem.dataset.itemId);\n      dragData = {\n        type: \"Item\",\n        data: item.toObject(),\n        containerId: this.item.id,\n      };\n      dragData.itemId = item.id;\n    }\n\n    // Add actor to drag data\n    dragData.actorUuid = this.item.actor?.uuid;\n\n    // Set data transfer\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Try to extract the data\n    const data = TextEditor.getDragEventData(event);\n\n    const item = this.item;\n\n    // Handle the drop with a Hooked function\n    const allowed = Hooks.call(\"pf1DropContainerSheetData\", item, this, data);\n    if (allowed === false) return;\n\n    // Handle different data types\n    switch (data.type) {\n      case \"Item\":\n        return this._onDropItem(event, data);\n      case \"Currency\": {\n        return this._onDropCurrency(event, data);\n      }\n    }\n  }\n\n  async _onDropCurrency(event, data) {\n    const sourceActor = await fromUuid(data.actorUuid || \"\");\n\n    return new CurrencyTransfer(\n      { actor: sourceActor, container: data.containerId, alt: data.alt },\n      {\n        actor: this.actor,\n        container: this.item.id,\n        amount: Object.fromEntries([[data.currency, parseInt(data.amount)]]),\n      }\n    ).render(true);\n  }\n\n  async _onDropItem(event, data) {\n    if (!this.item.isOwner) return void ui.notifications.warn(\"PF1.Error.NoItemPermission\", { localize: true });\n\n    const { actorUuid, containerId } = data;\n    const item = await Item.implementation.fromDropData(data);\n    let sourceActor = actorUuid ? await fromUuid(actorUuid) : null;\n    sourceActor ??= item.actor;\n\n    const sameActor = sourceActor && sourceActor === this.item.actor;\n\n    const itemData = game.items.fromCompendium(item, { clearFolder: true, keepId: sameActor, clearSort: !sameActor });\n\n    // Sort item\n    if (sameActor && containerId === this.item.id) {\n      return this._onSortItem(event, itemData);\n    }\n\n    // Create consumable from spell\n    if (itemData.type === \"spell\") {\n      const resultData = await pf1.documents.item.ItemSpellPF.toConsumablePrompt(itemData, {\n        allowSpell: false,\n        actor: this.item.actor,\n      });\n      if (resultData) return this.item.createContainerContent(resultData);\n      else return false;\n    }\n\n    // Create or transfer item\n    if (item.isPhysical) {\n      await this.item.createContainerContent(itemData);\n      // TODO: Verify item was created so we don't delete source item without reason\n\n      if (sameActor) {\n        if (containerId) {\n          sourceActor.containerItems\n            .find((i) => i.id === data.itemId && i.parentItem?.id === containerId)\n            ?.parentItem.deleteContainerContent(data.itemId);\n        } else {\n          sourceActor.items.get(item.id)?.delete();\n        }\n      }\n    }\n  }\n\n  async _quickIdentifyItem(event) {\n    event.preventDefault();\n    if (!game.user.isGM) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.CantIdentify\"));\n    }\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.getContainerContent(itemId);\n\n    const isIdentified = item.system.identified;\n    if (isIdentified !== undefined) {\n      return item.update({ \"system.identified\": !isIdentified });\n    }\n  }\n\n  async _duplicateItem(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const itemId = $(a).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.getContainerContent(itemId);\n    const itemData = item.toObject();\n\n    delete itemData.system?.links?.children;\n    delete itemData.system?.links?.charges;\n\n    delete itemData._id;\n    itemData.name = `${itemData.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    if (item.isPhysical && !item.system.identified) {\n      itemData.system.unidentified.name = `${item.system.unidentified.name} (${game.i18n.localize(\"PF1.Copy\")})`;\n    }\n    if (itemData.system.links?.children) delete itemData.system.links.children;\n\n    return this.item.createContainerContent(itemData);\n  }\n\n  async _quickChangeItemQuantity(event, add = 1) {\n    event.preventDefault();\n    if (event.shiftKey) add *= 5;\n    if (event.ctrlKey) add *= 10;\n\n    const itemId = $(event.currentTarget).parents(\".item\").attr(\"data-item-id\");\n    const item = this.item.getContainerContent(itemId);\n\n    const curQuantity = item.system.quantity || 0;\n    let newQuantity = Math.max(0, curQuantity + add);\n    if (item.type === \"container\" && newQuantity > 1) newQuantity = 1;\n    return item.update({ \"system.quantity\": newQuantity });\n  }\n\n  /**\n   * Handles click events to trigger the use of an item.\n   *\n   * @protected\n   * @param {MouseEvent} event - The originating click event\n   */\n  _quickItemActionControl(event) {\n    event.preventDefault();\n    const itemId = $(event.currentTarget).closest(\".item\").attr(\"data-item-id\");\n    const item = this.item.getContainerContent(itemId);\n    item.use({ ev: event });\n  }\n\n  async _setItemUses(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const itemId = el.closest(\".item\").dataset.itemId;\n    const item = this.item.getContainerContent(itemId);\n\n    this._mouseWheelAdd(event.originalEvent, el);\n\n    const value = Number(el.value);\n    this.setItemUpdate(item._id, \"system.uses.value\", value);\n\n    // Update on lose focus\n    if (event.originalEvent instanceof MouseEvent) {\n      el.addEventListener(\"pointerleave\", () => this._updateItems(), { passive: true, once: true });\n    } else this._updateItems();\n  }\n\n  async _updateItems() {\n    const promises = [];\n\n    const updates = this._itemUpdates;\n    this._itemUpdates = [];\n\n    for (const data of updates) {\n      const item = this.item.items.get(data._id);\n      if (!item) continue;\n\n      delete data._id;\n      if (item.testUserPermission(game.user, \"OWNER\")) promises.push(item.update(data));\n    }\n\n    return Promise.all(promises);\n  }\n\n  setItemUpdate(id, key, value) {\n    let obj = this._itemUpdates.find((o) => o._id === id);\n    if (!obj) {\n      obj = { _id: id };\n      this._itemUpdates.push(obj);\n    }\n\n    obj[key] = value;\n  }\n\n  _mouseWheelAdd(event, el) {\n    if (event && event instanceof WheelEvent) {\n      const value = parseFloat(el.value);\n      if (Number.isNaN(value)) return;\n\n      const increase = -Math.sign(event.deltaY);\n      const amount = parseFloat(el.dataset.wheelStep) || 1;\n      el.value = value + amount * increase;\n    }\n  }\n\n  _convertCurrency(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const currencyType = a.dataset.type;\n\n    this.item.convertCurrency(currencyType);\n  }\n\n  /**\n   * @override\n   */\n  _onSortItem(event, itemData) {\n    const items = this.document.items;\n\n    // Get the drag source and its siblings\n    const source = items.get(itemData._id);\n\n    // Get the drop target\n    const dropTarget = event.target.closest(\".item\");\n    const targetId = dropTarget ? dropTarget.dataset.itemId : null;\n    const target = items.get(targetId);\n\n    // Don't sort on yourself\n    if (targetId === source.id) return;\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings = [];\n    for (const el of dropTarget.parentElement.children) {\n      const siblingId = el.dataset.itemId;\n      if (siblingId && siblingId !== source.id) {\n        const item = items.get(el.dataset.itemId);\n        // Only take same typed siblings\n        if (item.type !== source.type) continue;\n        siblings.push(item);\n      }\n    }\n\n    // Don't sort if target has no siblings\n    if (siblings.length == 0) return;\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort(source, { target, siblings });\n    const updateData = sortUpdates.map((u) => {\n      const update = u.update;\n      update._id = u.target._id;\n      return update;\n    });\n\n    // Perform the update\n    return this.item.updateContainerContents(updateData);\n  }\n\n  /**\n   * Handle rolling of an item from the Actor sheet, obtaining the Item instance and dispatching to it's roll method\n   *\n   * @param event\n   * @private\n   */\n  _onItemRoll(event) {\n    event.preventDefault();\n    const itemId = event.currentTarget.closest(\".item\").dataset.itemId;\n    const item = this.item.getContainerContent(itemId);\n\n    if (item == null) return;\n    return item.displayCard();\n  }\n\n  /** Item Search */\n\n  _searchFilterCommit(event) {\n    const container = this.item;\n    const search = this._filters.search.container.toLowerCase();\n\n    // TODO: Do not refresh if same search term, unless the sheet has updated.\n    if (this.effectiveSearch === search && !this.searchRefresh) return;\n\n    this.effectiveSearch = search;\n    this.searchRefresh = false;\n\n    const matchSearch = (name) => name.toLowerCase().includes(search); // MKAhvi: Bad method for i18n support.\n\n    $(event.target)\n      .closest(\".tab\")\n      .find(\".item-list .item\")\n      .each(function () {\n        const jq = $(this);\n        if (search?.length > 0) {\n          const item = container.items.get(this.dataset.itemId);\n          if (matchSearch(item.name)) jq.show();\n          else jq.hide();\n        } else jq.show();\n      });\n  }\n\n  _clearSearch(event) {\n    this._filters.search.container = \"\";\n    $(event.target).prev(\".search-input\").val(\"\").change();\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.searchCompositioning = event.type === \"compositionstart\";\n  }\n\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const search = event.target.value;\n    const changed = this._filters.search.container !== search;\n\n    if (this.searchCompositioning || changed) clearTimeout(this.searchDelayEvent); // reset\n    if (this.searchCompositioning) return;\n\n    this._filters.search.container = search;\n\n    if (event.type === \"keyup\") {\n      // Delay search\n      if (changed) this.searchDelayEvent = setTimeout(() => this._searchFilterCommit(event), this.searchDelay);\n    } else this._searchFilterCommit(event);\n  }\n}\n","/**\n * Derivate of Foundry's Item.createDialog() functionality.\n */\nexport class ItemCreateDialog extends FormApplication {\n  /**\n   * @param {object} [data] - Initial item data\n   * @param {object} [options] - Optional configuration\n   * @param {Function} [options.resolve] - Resolve callback\n   * @param {*} [options.pack=null] - Pack reference given to Item.create()\n   * @param {*} [options.parent=null] - Parent reference given to Item.create()\n   * @param {object} [options.options] - FormApplication options\n   */\n  constructor(data = {}, { resolve, pack = null, parent = null, options = {} } = {}) {\n    super(data, options);\n\n    this.resolve = resolve;\n    this.pack = pack;\n    this.parent = parent;\n\n    this._updateCreationData(data);\n  }\n\n  get title() {\n    return game.i18n.format(\"DOCUMENT.Create\", { type: game.i18n.localize(\"DOCUMENT.Item\") });\n  }\n\n  get template() {\n    return \"systems/pf1/templates/widgets/item-create.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      closeOnSubmit: false,\n      submitOnChange: true,\n      submitOnClose: false,\n      height: \"auto\",\n      classes: [...options.classes, \"pf1\", \"create-document\", \"create-item\"],\n    };\n  }\n\n  get initialData() {\n    return this.object;\n  }\n\n  /** @type {object} */\n  createData = {};\n\n  getSubtypes(type) {\n    switch (type) {\n      case \"class\":\n        return pf1.config.classTypes;\n      case \"race\":\n        return null;\n      case \"attack\":\n        return pf1.config.attackTypes;\n      case \"feat\":\n        return pf1.config.featTypes;\n      case \"weapon\":\n        return Object.entries(pf1.config.weaponTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"equipment\":\n        return Object.entries(pf1.config.equipmentTypes).reduce((all, [key, value]) => {\n          all[key] = value._label;\n          return all;\n        }, {});\n      case \"consumable\":\n        return pf1.config.consumableTypes;\n      case \"loot\":\n        return pf1.config.lootTypes;\n      case \"spell\":\n        return null;\n      case \"buff\":\n        return pf1.config.buffTypes;\n      case \"implant\":\n        return pf1.config.implantTypes;\n      case \"container\":\n        return null;\n      default:\n        return null;\n    }\n  }\n\n  getData() {\n    const lang = game.settings.get(\"core\", \"language\");\n\n    const folders = this.parent ? [] : game.folders.filter((f) => f.type === \"Item\" && f.displayed);\n\n    const createData = this.createData;\n\n    let subtypes = this.getSubtypes(createData.type);\n    if (!subtypes && createData.system?.subType !== undefined) delete createData.system.subType;\n    if (subtypes) {\n      subtypes = Object.fromEntries(\n        Object.entries(subtypes).sort(([key0, label0], [key1, label1]) => label0.localeCompare(label1, lang))\n      );\n    }\n\n    const types = Object.fromEntries(\n      Object.entries(CONFIG.Item.typeLabels).sort(([key0, label0], [key1, label1]) =>\n        label0.localeCompare(label1, lang)\n      )\n    );\n    delete types.base; // base is Foundry's unusable default\n\n    return {\n      folders,\n      name: createData.name,\n      defaultName: Item.implementation.defaultName(),\n      folder: createData.folder,\n      hasFolders: folders.length > 0,\n      type: createData.type,\n      types,\n      subtype: createData.system?.subType || null,\n      subtypes,\n    };\n  }\n\n  /**\n   * @param {JQuery} jq jQuery HTML instance\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    this.form.querySelector(\"button.create-document\").addEventListener(\"click\", this._createItem.bind(this));\n  }\n\n  _updateObject(event, formData) {\n    const data = foundry.utils.expandObject(formData);\n\n    this._updateCreationData(data);\n\n    this.render();\n  }\n\n  _updateCreationData(data = {}) {\n    // Fill in default type if missing\n    data.type ||= CONFIG.Item.defaultType || game.documentTypes.Item[1];\n\n    this.createData = foundry.utils.mergeObject(this.initialData, data, { inplace: false });\n    this.createData.system ??= {};\n\n    // Clean up data\n    if (!data.folder && !this.initialData.folder) delete this.createData.folder;\n\n    const subtypes = this.getSubtypes(this.createData.type);\n    if (!subtypes) delete this.createData.system.subType;\n\n    return this.createData;\n  }\n\n  /**\n   * @param {Event} event\n   */\n  async _createItem(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    await this.submit({ preventRender: true });\n\n    let createData = this._updateCreationData(this.createData);\n    createData.name ||= Item.implementation.defaultName();\n    createData = new Item.implementation(createData).toObject();\n\n    const options = {};\n    if (this.pack) options.pack = this.pack;\n    if (this.parent) options.parent = this.parent;\n    options.renderSheet = true;\n\n    const promise = Item.implementation.create(createData, options);\n\n    this.resolve?.(promise);\n    this.close();\n  }\n\n  close(options = {}) {\n    this.resolve?.(null);\n    return super.close(options);\n  }\n\n  /**\n   * Wait for dialog to the resolved.\n   *\n   * @param {object} [data] Initial data to pass to the constructor.\n   * @param {object} [options] Options to pass to the constructor.\n   * @returns {Promise<Item|null>} Created item or null.\n   */\n  static waitPrompt(data, options = {}) {\n    return new Promise((resolve) => {\n      options.resolve = resolve;\n      new this(data, options).render(true, { focus: true });\n    });\n  }\n}\n","export class ItemActionSheet extends FormApplication {\n  constructor(...args) {\n    super(...args);\n\n    this.item.apps[this.appId] = this;\n    this.action.apps[this.appId] = this;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      template: \"systems/pf1/templates/apps/item-action.hbs\",\n      classes: [\"pf1\", \"sheet\", \"action\", \"item-action\"],\n      width: 580,\n      height: 720,\n      closeOnSubmit: false,\n      submitOnClose: true,\n      submitOnChange: true,\n      resizable: true,\n      scrollY: [\".tab\"],\n      tabs: [\n        {\n          navSelector: \"nav.tabs[data-group='primary']\",\n          contentSelector: \"section.primary-body\",\n          initial: \"description\",\n          group: \"primary\",\n        },\n      ],\n      dragDrop: [\n        {\n          dragSelector: \"li.conditional\",\n          dropSelector: 'div[data-tab=\"conditionals\"]',\n        },\n      ],\n    });\n  }\n  get title() {\n    return `${this.item.name}: ${this.action.name}`;\n  }\n  get id() {\n    return `item-${this.item.uuid}-action-${this.action.id}`;\n  }\n\n  /** @type {ItemAction} */\n  get action() {\n    return this.object;\n  }\n  /** @type {ItemPF} */\n  get item() {\n    return this.action.item;\n  }\n  /** @type {ActorPF} */\n  get actor() {\n    return this.item.actor;\n  }\n\n  async getData() {\n    const action = this.action;\n    const item = this.item;\n    const actor = this.actor;\n\n    const context = {\n      config: pf1.config,\n      editable: this.isEditable,\n      user: game.user,\n      action,\n      item,\n      actor,\n      img: action.img,\n      tag: pf1.utils.createTag(action.name), // Tag placeholder\n      damageTypes: pf1.registry.damageTypes.toObject(),\n      rollData: action.getRollData(),\n    };\n\n    context.data = foundry.utils.mergeObject(action.constructor.defaultData, foundry.utils.deepClone(action.data), {\n      inplace: false,\n    });\n\n    // Action Details\n    context.hasAttack = action.hasAttack;\n    context.actionType = context.data.actionType;\n    context.isHealing = context.actionType === \"heal\";\n    context.hasDamage = action.hasDamage;\n    context.isCombatManeuver = action.isCombatManeuver;\n    context.canCrit = action.hasAttack && action.data.ability?.critMult > 1;\n    // Can have crit and non-crit damage, or simply show them if they've been defined.\n    context.hasCritDamage = context.canCrit || context.data.damage?.critParts?.length > 0;\n    context.hasNonCritDamage = context.canCrit || context.data.damage?.nonCritParts?.length > 0;\n\n    context.isCharged = action.isCharged;\n    context.isSelfCharged = action.isSelfCharged;\n    const chargedUsePeriods = new Set([...Object.keys(pf1.config.limitedUsePeriods), \"charges\"]);\n    chargedUsePeriods.delete(\"single\"); // Single is special\n    context.limitedUsePeriods = { ...pf1.config.limitedUsePeriods };\n    if (!item.isPhysical) delete context.limitedUsePeriods.single;\n    context.showMaxChargeFormula = chargedUsePeriods.has(context.data.uses.self.per);\n    if (action.hasRange) {\n      context.canInputRange = [\"ft\", \"mi\", \"spec\"].includes(context.data.range.units);\n      context.canInputMinRange = [\"ft\", \"mi\", \"spec\"].includes(context.data.range.minUnits);\n    }\n\n    context.canInputDuration = ![\"\", \"turn\", \"inst\", \"perm\", \"seeText\"].includes(context.data.duration?.units || \"\");\n\n    // Action Details\n    context.itemName = item.name;\n    context.itemEnh = item.system.enh || 0;\n    context.isSpell = item.type === \"spell\";\n    context.usesSpellPoints = item.spellbook?.spellPoints.useSystem;\n    context.defaultChargeFormula = item.getDefaultChargeFormula();\n    context.owned = actor != null;\n    context.parentOwned = actor != null;\n    context.owner = item.isOwner;\n    context.isGM = game.user.isGM;\n    context.unchainedActionEconomy = game.settings.get(\"pf1\", \"unchainedActionEconomy\");\n    context.activation = action.activation;\n    context.hasActivationType = context.activation.type;\n    context.abilityActivationTypes = context.unchainedActionEconomy\n      ? pf1.config.abilityActivationTypes_unchained\n      : pf1.config.abilityActivationTypes;\n\n    // Add description\n    const description = context.data.description;\n    context.descriptionHTML = description\n      ? await TextEditor.enrichHTML(description, {\n          secrets: context.owner,\n          rollData: context.rollData,\n          async: true,\n          relativeTo: this.actor,\n        })\n      : null;\n\n    // Show additional ranged properties\n    context.showMaxRangeIncrements = context.data.range.units === \"ft\";\n\n    // Prepare attack specific stuff\n    if (item.type === \"attack\") {\n      context.isWeaponAttack = item.system.subType === \"weapon\";\n      context.isNaturalAttack = item.system.subType === \"natural\";\n    }\n\n    context.canUseAmmo = context.isNaturalAttack !== true;\n    context.usesAmmo = !!action.ammoType;\n    context.inheritedAmmoType = item?.system.ammo?.type;\n\n    if (context.usesAmmo) {\n      context.inheritedMisfire = item?.system.ammo?.misfire ?? null;\n    }\n\n    // Add distance units\n    context.distanceUnits = foundry.utils.deepClone(pf1.config.distanceUnits);\n    if (item.type !== \"spell\") {\n      for (const d of [\"close\", \"medium\", \"long\"]) {\n        delete context.distanceUnits[d];\n      }\n    }\n    // Set whether to show minimum range input\n    context.minRangeAvailable = [\"reach\", \"ft\", \"mi\", \"seeText\"].includes(context.data.range.units);\n\n    // Prepare stuff for actions with conditionals\n    if (context.data.conditionals) {\n      for (const conditional of context.data.conditionals) {\n        for (const modifier of conditional.modifiers) {\n          modifier.targets = action.getConditionalTargets();\n          modifier.subTargets = action.getConditionalSubTargets(modifier.target);\n          modifier.conditionalModifierTypes = action.getConditionalModifierTypes(modifier.target);\n          modifier.conditionalCritical = action.getConditionalCritical(modifier.target);\n        }\n      }\n    }\n\n    // Add materials and addons\n    context.materialCategories = this._prepareMaterialsAndAddons();\n\n    context.materialAddons =\n      this.action.data.material?.addon?.reduce((obj, v) => {\n        obj[v] = true;\n        return obj;\n      }, {}) ?? {};\n\n    // Can hold (attacks & weapons only and only if they have attack rolls)\n    context.canHold = action.hasAttack;\n    // Inherited held option's name if any\n    context.inheritedHeld =\n      context.canHold && [\"attack\", \"weapon\"].includes(item.type)\n        ? pf1.config.weaponHoldTypes[context.item.system.held]\n        : null;\n\n    // Add alignments\n    context.alignmentTypes = this._prepareAlignments(this.action.alignments);\n    this.alignments = context.alignmentTypes?.values; // Use a deep clone we've already made to track our progress.\n\n    // Ability damage multiplier from held\n    const held = context.rollData.action.held || context.rollData.item.held || \"normal\";\n    context.heldAbilityMultiplier = pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n\n    // Power attack multiplier if inherited\n    context.paMultiplier = action.getPowerAttackMult({ rollData: context.rollData });\n\n    // Prepare attack configuration\n    context.extraAttacksTypes = Object.fromEntries([\n      ...Object.entries(pf1.config.extraAttacks).map(([key, { label }]) => [key, label]),\n    ]);\n\n    context.extraAttacksConfig = { ...pf1.config.extraAttacks[action.data.extraAttacks?.type] };\n    context.extraAttacksConfig.allowCustom = context.extraAttacksConfig.manual || context.extraAttacksConfig.formula;\n\n    return context;\n  }\n\n  _prepareMaterialsAndAddons() {\n    const materialList = {};\n    const addonList = [];\n    pf1.registry.materialTypes.forEach((material) => {\n      if (\n        material.allowed.lightBlade ||\n        material.allowed.oneHandBlade ||\n        material.allowed.twoHandBlade ||\n        material.allowed.rangedWeapon\n      ) {\n        if (!material.addon && !material.basic) {\n          materialList[material.id] = material.name;\n        } else if (!material.basic && ![\"heatstoneplating\", \"lazurite\", \"sunsilk\"].includes(material.id)) {\n          addonList.push({ key: material.id, name: material.name });\n        }\n      }\n    });\n\n    return {\n      materials: materialList,\n      addons: addonList,\n    };\n  }\n\n  _prepareAlignments(alignments = {}) {\n    const alignmentChoices = {};\n\n    Object.keys(pf1.config.damageResistances).forEach((dType) => {\n      if (![\"magic\", \"epic\"].includes(dType)) alignmentChoices[dType] = pf1.config.damageResistances[dType];\n    });\n\n    return {\n      choices: alignmentChoices,\n      values: alignments,\n    };\n  }\n\n  /**\n   * Copy from core DocumentSheet#isEditable\n   */\n  get isEditable() {\n    const parentItem = this.item;\n    let editable = this.options.editable && parentItem.isOwner;\n    if (parentItem.pack) {\n      const pack = game.packs.get(parentItem.pack);\n      if (pack.locked) editable = false;\n    }\n    return editable;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    if (!this.isEditable) return;\n\n    // Modify action image\n    html.find(\"img[data-edit]\").click((ev) => this._onEditImage(ev));\n\n    // Add drop handler to textareas\n    html.find(\"textarea, .card-notes input[type='text']\").on(\"drop\", this._onTextAreaDrop.bind(this));\n\n    // Modify attack formula\n    html.find(\".attack-control\").click(this._onAttackControl.bind(this));\n\n    // Modify damage formula\n    html.find(\".damage-control\").click(this._onDamageControl.bind(this));\n    html.find(\".damage-type-visual\").on(\"click\", this._onClickDamageType.bind(this));\n\n    // Note control\n    html.find(\".card-notes .controls a\").click(this._onNoteEntryControl.bind(this));\n\n    // Modify conditionals\n    html.find(\".conditional-control\").click(this._onConditionalControl.bind(this));\n\n    // Handle Alignment tristate checkboxes\n    html.find(\".alignmentCheckbox\").on(\"change\", (event) => {\n      this._onAlignmentChecked(event);\n    });\n\n    const alignmentItems = $(\".alignmentCheckbox.actionCheckbox\").each((index, item) => {\n      const type = $(item).attr(\"data-type\");\n      if (!(this.alignments[type] || this.alignments[type] === false)) {\n        item.indeterminate = true;\n      }\n    });\n  }\n\n  _onDragStart(event) {\n    const elem = event.currentTarget;\n\n    // Drag conditional\n    if (elem.dataset?.conditional) {\n      const conditional = this.object.conditionals.get(elem.dataset?.conditional);\n      event.dataTransfer.setData(\"text/plain\", JSON.stringify(conditional.data));\n    }\n  }\n\n  /**\n   * Foundry defauts to isGM check.\n   *\n   * @override\n   */\n  _canDragStart(selector) {\n    return this.isEditable;\n  }\n\n  /**\n   * Foundry defauts to isGM check.\n   *\n   * @override\n   */\n  _canDragDrop(selector) {\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const data = TextEditor.getDragEventData(event);\n    let type;\n    // Surface-level check for conditional\n    if (data.default != null && typeof data.name === \"string\" && Array.isArray(data.modifiers)) type = \"conditional\";\n\n    const action = this.object;\n    // Handle conditionals\n    if (type === \"conditional\") {\n      // Check targets and other fields for valid values, reset if necessary\n      for (const modifier of data.modifiers) {\n        if (!Object.keys(action.getConditionalTargets()).includes(modifier.target)) modifier.target = \"\";\n        let keys;\n        for (let [k, v] of Object.entries(modifier)) {\n          switch (k) {\n            case \"subTarget\":\n              keys = Object.keys(action.getConditionalSubTargets(modifier.target));\n              break;\n            case \"type\":\n              keys = Object.keys(action.getConditionalModifierTypes(modifier.target));\n              break;\n            case \"critical\":\n              keys = Object.keys(action.getConditionalCritical(modifier.target));\n              break;\n          }\n          if (!keys?.includes(v)) v = keys?.[0] ?? \"\";\n        }\n      }\n\n      // Renew conditional ID\n      data._id = foundry.utils.randomID(16);\n\n      // Append conditional\n      const conditionals = foundry.utils.deepClone(action.data.conditionals || []);\n      conditionals.push(data);\n      await this.object.update({ conditionals });\n    }\n  }\n\n  async _onNoteEntryControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const key = a.dataset.name;\n\n    switch (a.dataset.action) {\n      // Add\n      case \"add\": {\n        const notes = foundry.utils.deepClone(foundry.utils.getProperty(this.object.data, key) ?? []);\n        notes.push(\"\");\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n      // Delete\n      case \"delete\": {\n        const index = Number(a.dataset.index);\n        const notes = foundry.utils.deepClone(foundry.utils.getProperty(this.object.data, key));\n        notes.splice(index, 1);\n        const updateData = { [key]: notes };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  async _onConditionalControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    await this._onSubmit(event, { preventRender: true }); // Submit any unsaved changes\n\n    // Add new conditional\n    if (a.classList.contains(\"add-conditional\")) {\n      return pf1.components.ItemConditional.create([{}], { parent: this.object });\n    }\n    // Remove a conditional\n    else if (a.classList.contains(\"delete-conditional\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.object.conditionals.get(li.dataset.conditional);\n      return conditional.delete();\n    }\n    // Add a new conditional modifier\n    else if (a.classList.contains(\"add-conditional-modifier\")) {\n      const li = a.closest(\".conditional\");\n      const conditional = this.object.conditionals.get(li.dataset.conditional);\n      return pf1.components.ItemConditionalModifier.create([{}], { parent: conditional });\n    }\n    // Remove a conditional modifier\n    else if (a.classList.contains(\"delete-conditional-modifier\")) {\n      const li = a.closest(\".conditional-modifier\");\n      const conditional = this.object.conditionals.get(li.dataset.conditional);\n      const modifier = conditional.modifiers.get(li.dataset.modifier);\n      return modifier.delete();\n    }\n  }\n\n  /**\n   * Add or remove a damage part from the damage formula\n   *\n   * @param {Event} event     The original click event\n   * @returns {Promise}\n   * @private\n   */\n  async _onDamageControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    const list = a.closest(\".damage\");\n    const path = list.dataset.key || \"damage.parts\";\n    const k2 = path.split(\".\").slice(0, -1).join(\".\");\n    const k3 = path.split(\".\").slice(-1).join(\".\");\n\n    // Add new damage component\n    if (a.classList.contains(\"add-damage\")) {\n      // Get initial data\n      const damageTypeBase = pf1.components.ItemAction.defaultDamageType;\n      const initialData = {\n        formula: \"\",\n        type: damageTypeBase,\n      };\n\n      // Add data\n      const damage = foundry.utils.getProperty(this.action.data, k2);\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      damageParts.push(initialData);\n      const updateData = { [path]: damageParts };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove a damage component\n    else if (a.classList.contains(\"delete-damage\")) {\n      const li = a.closest(\".damage-part\");\n      const damage = foundry.utils.deepClone(foundry.utils.getProperty(this.action.data, k2));\n      const damageParts = foundry.utils.getProperty(damage, k3) ?? [];\n      if (damageParts.length) {\n        damageParts.splice(Number(li.dataset.damagePart), 1);\n        const updateData = { [path]: damageParts };\n        return this._updateObject(event, this._getSubmitData(updateData));\n      }\n    }\n  }\n\n  async _onClickDamageType(event) {\n    event.preventDefault();\n    const clickedElement = event.currentTarget;\n\n    // Check for normal damage part\n    const damageIndex = clickedElement.closest(\".damage-part\")?.dataset.damagePart;\n    const damagePart = clickedElement.closest(\".damage\")?.dataset.key;\n    if (damageIndex != null && damagePart != null) {\n      const app = new pf1.applications.DamageTypeSelector(\n        this.action,\n        `${damagePart}.${damageIndex}.type`,\n        foundry.utils.getProperty(this.object.data, damagePart)[damageIndex].type\n      );\n      return app.render(true);\n    }\n\n    // Check for conditional\n    const conditionalElement = clickedElement.closest(\".conditional\");\n    const modifierElement = clickedElement.closest(\".conditional-modifier\");\n    if (conditionalElement && modifierElement) {\n      const conditional = this.object.conditionals.get(conditionalElement.dataset.conditional);\n      const modifier = conditional.modifiers.get(modifierElement.dataset.modifier);\n      const app = new pf1.applications.DamageTypeSelector(modifier, \"damageType\", modifier.data.damageType);\n      return app.render(true);\n    }\n  }\n\n  async _onAttackControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    const manualExtraAttacks = foundry.utils.deepClone(this.action.data.extraAttacks?.manual ?? []);\n\n    // Add new attack component\n    if (a.classList.contains(\"add-attack\")) {\n      manualExtraAttacks.push({ formula: \"\", name: \"\" });\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n    // Remove an attack component\n    else if (a.classList.contains(\"delete-attack\")) {\n      const li = a.closest(\".attack-part\");\n      manualExtraAttacks.splice(Number(li.dataset.attackPart), 1);\n      const updateData = { extraAttacks: { manual: manualExtraAttacks } };\n      return this._updateObject(event, this._getSubmitData(updateData));\n    }\n  }\n\n  /**\n   * Clone of item/actor sheet image editor callback.\n   *\n   * @protected\n   * @param {Event} event\n   */\n  _onEditImage(event) {\n    const attr = event.currentTarget.dataset.edit;\n    const current = foundry.utils.getProperty(this.action.data, attr);\n    const fp = new FilePicker({\n      type: \"image\",\n      current,\n      callback: (path) => this.action.update({ img: path }),\n      top: this.position.top + 40,\n      left: this.position.left + 10,\n    });\n    fp.browse();\n  }\n\n  async _onTextAreaDrop(event) {\n    event.preventDefault();\n\n    const eventData = TextEditor.getDragEventData(event.originalEvent);\n    if (!eventData) return;\n\n    const elem = event.currentTarget;\n    const link = await TextEditor.getContentLink(eventData, { relativeTo: this.actor });\n\n    // Insert link\n    if (link) {\n      elem.value = !elem.value ? link : elem.value + \"\\n\" + link;\n\n      return this._onSubmit(event); // Save\n    }\n  }\n\n  async _onAlignmentChecked(event) {\n    const el = event.target;\n    const previousValue = this.alignments[el.dataset.type];\n\n    // Move from one phase to the next in our tristate checkbox\n    el.checked = previousValue === false;\n    el.indeterminate = previousValue === true;\n\n    if (el.checked) {\n      this.alignments[el.dataset.type] = true;\n    } else if (el.indeterminate) {\n      this.alignments[el.dataset.type] = null;\n    } else {\n      this.alignments[el.dataset.type] = false;\n    }\n  }\n\n  async _updateObject(event, formData) {\n    // Handle conditionals array\n    const conditionalData = foundry.utils.deepClone(this.object.data.conditionals);\n    Object.entries(formData)\n      .filter((o) => o[0].startsWith(\"conditionals\"))\n      .forEach((o) => {\n        let reResult;\n        // Handle conditional modifier\n        if ((reResult = o[0].match(/^conditionals.([0-9]+).modifiers.([0-9]+).(.+)$/))) {\n          const conditionalIdx = parseInt(reResult[1]);\n          const modifierIdx = parseInt(reResult[2]);\n          const conditional =\n            conditionalData[conditionalIdx] ?? foundry.utils.deepClone(this.object.data.conditionals[conditionalIdx]);\n          const path = reResult[3];\n          foundry.utils.setProperty(conditional.modifiers[modifierIdx], path, o[1]);\n        }\n        // Handle conditional\n        else if ((reResult = o[0].match(/^conditionals.([0-9]+).(.+)$/))) {\n          const conditionalIdx = parseInt(reResult[1]);\n          const conditional =\n            conditionalData[conditionalIdx] ?? foundry.utils.deepClone(this.object.data.conditionals[conditionalIdx]);\n          const path = reResult[2];\n          foundry.utils.setProperty(conditional, path, o[1]);\n        }\n      });\n    formData[\"conditionals\"] = conditionalData;\n\n    formData = foundry.utils.expandObject(formData);\n\n    // Adjust Material Addons object to array\n    const material = formData.material;\n    if (material?.addon) {\n      material.addon = Object.entries(material.addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n    }\n\n    if (formData.alignments) {\n      // Adjust Alignment Types (this is necessary to handle null values for inheritance)\n      for (const [key, value] of Object.entries(this.alignments)) {\n        formData.alignments[key] = value;\n      }\n    }\n\n    // Uniform style for\n    if (formData.measureTemplate) {\n      if (formData.measureTemplate.color) {\n        const c = Color.fromString(formData.measureTemplate.color);\n        if (Number.isFinite(Number(c))) formData.measureTemplate.color = c.toString();\n        else console.warn(\"Invalid color provided to template\", formData.measureTemplate.color, this.action);\n      }\n    }\n\n    // Do not add image if it's same as parent item\n    if (formData.img === this.item?.img) delete formData.img;\n\n    return this.action.update(formData);\n  }\n\n  async close(options) {\n    delete this.item.apps[this.appId];\n    delete this.action.apps[this.appId];\n    this.action._sheet = null;\n    return super.close(options);\n  }\n}\n","import * as baseFilter from \"./base.mjs\";\nimport { naturalSort } from \"@utils\";\nimport fuzzysort from \"fuzzysort\";\n\nexport class CheckboxFilter extends baseFilter.BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/checkbox-filter.hbs\";\n\n  /**\n   * The minimum number of choices that must be present before the filter will show a search box.\n   * Booleans can be used to override this check.\n   *\n   * @type {number | boolean}\n   */\n  static MIN_SEARCH_CHOICES = 10;\n\n  /**\n   * The boolean operator used to combine choices of this filter.\n   * If \"OR\", an entry will be included if at least one active choice matches.\n   * If \"AND\", an entry will only be included if all active choices match.\n   *\n   * @type {BooleanOperator}\n   */\n  booleanOperator = BOOLEAN_OPERATOR.NONE;\n\n  /**\n   * A string used to determine which choices are shown.\n   *\n   * @type {string}\n   * @private\n   */\n  _choiceQuery = \"\";\n\n  constructor(...args) {\n    super(...args);\n    this._debouncedFilterChoices = foundry.utils.debounce(this._onCustomSearchFilter, 100);\n  }\n\n  /**\n   * Generate a {@link Collection} of {@link FilterChoice}s from a {@link CONFIG} object.\n   *\n   * @param {Record<string, string> | Record<string, Record<string, string>>} configObject - The object to generate choices from; can be a Record<string, string> or\n   * @param {object} [options={}] - Options determining how the choices are generated.\n   * @param {string} [options.labelKey=\"_label\"] - The key to use to determine the label if the configObject is a Record<string, object>; will be ignored if the configObject is a Record<string, string>.\n   * @param {boolean} [options.innerSet=false] - Whether choices should be generated from direct properties of the configObject, or from the properties of the inner objects.\n   * @returns {Collection<FilterChoice>} - A Collection of {@link FilterChoice}s\n   */\n  static getChoicesFromConfig(configObject, { labelKey = \"_label\", innerSet = false } = {}) {\n    /** @type {Collection<FilterChoice>} */\n    const choices = new foundry.utils.Collection();\n    for (const [key, value] of Object.entries(configObject)) {\n      if (innerSet) {\n        for (const [innerKey, innerValue] of Object.entries(value)) {\n          if (innerKey === labelKey) continue;\n          choices.set(innerKey, { key: innerKey, label: innerValue });\n        }\n      } else {\n        if (typeof value === \"object\" && value[labelKey]) {\n          choices.set(key, { key, label: value[labelKey] });\n        } else if (typeof value === \"string\") {\n          choices.set(key, { key, label: value });\n        }\n      }\n    }\n    return choices;\n  }\n\n  /**\n   * Whether this filter provides controls in addition to its choices.\n   *\n   * @type {boolean}\n   */\n  get hasControls() {\n    return this.booleanOperator !== BOOLEAN_OPERATOR.NONE || this.choices.size >= this.constructor.MIN_SEARCH_CHOICES;\n  }\n\n  get hasSearch() {\n    if (this.choices.size >= this.constructor.MIN_SEARCH_CHOICES) return true;\n    return this.constructor.MIN_SEARCH_CHOICES ?? false;\n  }\n\n  /** @inheritDoc */\n  setup() {\n    super.setup();\n    this.prepareBooleanOperator();\n  }\n\n  /**\n   * Prepare the boolean operator for this filter.\n   */\n  prepareBooleanOperator() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    // Find the first entry that has data in the field and use its data\n    let fieldData;\n    entries.find((entry) => {\n      return (fieldData = foundry.utils.getProperty(entry, this.constructor.indexField));\n    });\n    if ([\"Array\", \"Object\"].includes(foundry.utils.getType(fieldData))) this.booleanOperator = BOOLEAN_OPERATOR.AND;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const observedValues = new Set(\n      entries.flatMap((entry) => {\n        const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n        if (Array.isArray(data)) {\n          if (data.length === 0) return [];\n          else return data;\n        }\n        if (typeof data === \"object\" && data !== null) {\n          const keys = Object.keys(data);\n          if (keys.length === 0) return [];\n          else return keys;\n        }\n        if (data == null) return [];\n        if (typeof data === \"string\" && data.trim() === \"\") return [];\n        return [data];\n      })\n    );\n    this.choices = new foundry.utils.Collection(\n      naturalSort(\n        [...observedValues].map((value) => ({ key: value, label: game.i18n.localize(`${value}`) })),\n        \"label\"\n      ).map((choice) => [`${choice.key}`, choice])\n    );\n  }\n\n  /**\n   * Toggle the active state of a choice, or set it to a specific state.\n   *\n   * @param {string} key - The key of the choice to toggle\n   * @param {boolean | null} [state=null] - The state to set the choice to. If null, the choice will be toggled.\n   * @returns {boolean} - The new state of the choice\n   * @throws {Error} - If the choice does not exist in this filter\n   */\n  toggleChoice(key, state = null) {\n    const choice = this.choices?.get(key);\n    if (!choice) throw new Error(`Choice ${key} does not exist in this filter.`);\n    if (state === null) choice.active = !choice.active;\n    else choice.active = state;\n    return choice.active;\n  }\n\n  /** @inheritDoc */\n  reset() {\n    super.reset();\n    this.prepareBooleanOperator();\n    this._choiceQuery = \"\";\n    this.choices?.forEach((choice) => (choice.active = false));\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const activeChoices = this.choices.filter((choice) => choice.active);\n    // If no choices are active, this filter applies no conditions\n    if (activeChoices.length === 0) return true;\n\n    // If the filter is active, but the entry does not match the filter's types, the entry cannot match\n    const types = this.constructor.handledTypes;\n    if (types.size && !types.has(entry.type)) return false;\n\n    /** @type {string | string[] | Record<string, boolean>} */\n    const data = foundry.utils.getProperty(entry, this.constructor.indexField);\n\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    if (Array.isArray(data)) {\n      return activeChoices[testMethod]((choice) => data.includes(choice.key));\n    } else if (typeof data === \"object\" && data !== null) {\n      return activeChoices[testMethod]((choice) => choice.key in data && data[choice.key] !== false);\n    } else {\n      return activeChoices.some((choice) => {\n        return data == choice.key;\n      });\n    }\n  }\n\n  /** @inheritDoc */\n  getData() {\n    return {\n      ...super.getData(),\n      hasControls: this.hasControls,\n      boolean: this.booleanOperator,\n      hasSearch: this.choices.size > this.constructor.MIN_SEARCH_CHOICES,\n      choiceQuery: this._choiceQuery,\n    };\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    super.activateListeners(html);\n    this._onCustomSearchFilter(null, html);\n    html.querySelector(\"button.boolean\")?.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      if (this.booleanOperator === BOOLEAN_OPERATOR.OR) this.booleanOperator = BOOLEAN_OPERATOR.AND;\n      else this.booleanOperator = BOOLEAN_OPERATOR.OR;\n      this.compendiumBrowser.render();\n    });\n    html\n      .querySelector(\"input[name=choice-query]\")\n      ?.addEventListener(\"input\", (event) => this._debouncedFilterChoices(event, html));\n    html.addEventListener(\"change\", (event) => {\n      if (event.target.type === \"checkbox\") {\n        const checkbox = event.target;\n        const choiceKey = /filter.\\w*.choice.(?<choice>.*)/.exec(checkbox.name)?.groups?.choice;\n        if (choiceKey) {\n          this.toggleChoice(choiceKey, checkbox.checked);\n          this.compendiumBrowser.render();\n        }\n      }\n    });\n  }\n\n  /**\n   * Filter this filter's choices based on a string query.\n   *\n   * @protected\n   * @param {Event} event - The originating input event\n   * @param {HTMLElement} html - The rendered HTML of this filter\n   */\n  _onCustomSearchFilter(event, html) {\n    if (event) {\n      event.preventDefault();\n      this._choiceQuery = SearchFilter.cleanQuery(event.target.value);\n    }\n\n    const matchingChoices = fuzzysort\n      .go(this._choiceQuery, this.choices.contents, {\n        key: \"label\",\n        threshold: -10000,\n      })\n      .map((result) => `${result.obj.key}`);\n    const choiceSet = new Set(matchingChoices);\n\n    for (const li of html.querySelectorAll(\"li.filter-choice\")) {\n      const choiceKey = li.dataset.choice;\n      if (choiceKey) {\n        if (choiceSet.has(choiceKey) || !this._choiceQuery) li.classList.remove(\"hidden\");\n        else li.classList.add(\"hidden\");\n      }\n    }\n    if (this._choiceQuery && matchingChoices.length === 0)\n      html.querySelector(\"span.no-choices\")?.classList.remove(\"hidden\");\n    else html.querySelector(\"span.no-choices\")?.classList.add(\"hidden\");\n  }\n}\n\n/** @typedef {typeof BOOLEAN_OPERATOR[keyof typeof BOOLEAN_OPERATOR]} BooleanOperator */\n/**\n * States for the boolean operator of a filter.\n */\nexport const BOOLEAN_OPERATOR = /** @type {const} */ ({\n  AND: \"AND\",\n  OR: \"OR\",\n  NONE: false,\n});\n","import { BaseFilter } from \"./base.mjs\";\n\n/**\n * A filter that allows the user to input a minimum and maximum value.\n */\nexport class NumberRangeFilter extends BaseFilter {\n  static TEMPLATE = \"systems/pf1/templates/apps/compendium-browser/minmax-filter.hbs\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    const inputs = [\n      { key: \"min\", label: \"PF1.Minimum\", placeholder: \"0\" },\n      { key: \"max\", label: \"PF1.Maximum\", placeholder: \"∞\" },\n    ];\n    this.choices = new foundry.utils.Collection(\n      inputs.map((input) => [input.key, { ...input, label: game.i18n.localize(input.label) }])\n    );\n  }\n\n  /** @inheritDoc */\n  reset() {\n    this.choices.forEach((choice) => {\n      choice.value = null;\n      choice.active = false;\n    });\n  }\n\n  /** @inheritDoc */\n  activateListeners(html) {\n    html.addEventListener(\"change\", (event) => {\n      const input = event.target;\n      const value = input.value;\n      const key = input.name.split(\"choice.\").pop();\n      const choice = this.choices.get(key);\n      if (choice) {\n        choice.value = Number(value) || null;\n        choice.active = Boolean(value);\n      }\n      this.compendiumBrowser.render();\n    });\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField) ?? 0;\n    const min = this.choices.get(\"min\").value ?? 0;\n    const max = this.choices.get(\"max\").value ?? Number.POSITIVE_INFINITY;\n    if (value < min) return false;\n    if (value > max) return false;\n    return true;\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { NumberRangeFilter } from \"./number-range.mjs\";\n\nexport class ItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static indexField = \"type\";\n  static types = [\"weapon\", \"equipment\", \"consumable\", \"container\", \"loot\", \"implant\"];\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = new foundry.utils.Collection(\n      [\n        { key: \"weapon\", label: game.i18n.localize(\"TYPES.Item.weapon\") },\n        { key: \"equipment\", label: game.i18n.localize(\"TYPES.Item.equipment\") },\n        { key: \"consumable\", label: game.i18n.localize(\"TYPES.Item.consumable\") },\n        { key: \"container\", label: game.i18n.localize(\"TYPES.Item.container\") },\n        { key: \"loot\", label: game.i18n.localize(\"PF1.Misc\") },\n        { key: \"implant\", label: game.i18n.localize(\"TYPES.Item.implant\") },\n      ].map((choice) => [choice.key, choice])\n    );\n  }\n}\n\nexport class WeaponTypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponType\";\n  static indexField = \"system.subType\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes);\n  }\n}\n\nexport class WeaponSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponSubtype\";\n  static indexField = \"system.weaponSubtype\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponTypes, { innerSet: true });\n  }\n}\n\nexport class WeaponPropertyFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponProperties\";\n  static indexField = \"system.properties\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponProperties);\n  }\n}\n\nexport class WeaponGroupFilter extends CheckboxFilter {\n  static label = \"PF1.WeaponGroups\";\n  static indexField = \"system.weaponGroups.value\";\n  static type = \"weapon\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.weaponGroups);\n  }\n}\n\nexport class EquipmentTypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentType\";\n  static indexField = \"system.subType\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes);\n  }\n}\n\nexport class EquipmentSubtypeFilter extends CheckboxFilter {\n  static label = \"PF1.EquipmentSubtype\";\n  static indexField = \"system.equipmentSubtype\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentTypes, { innerSet: true });\n  }\n}\n\nexport class ItemSlotFilter extends CheckboxFilter {\n  static label = \"PF1.Slot\";\n  static indexField = \"system.slot\";\n  static type = \"equipment\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.equipmentSlots, { innerSet: true });\n  }\n}\n\nexport class ConsumableTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ConsumableType\";\n  static indexField = \"system.subType\";\n  static type = \"consumable\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.consumableTypes);\n  }\n}\n\nexport class MiscItemTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Misc\";\n  static indexField = \"system.subType\";\n  static type = \"loot\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.lootTypes);\n  }\n}\n\nexport class ItemPriceFilter extends NumberRangeFilter {\n  static label = \"PF1.Price\";\n  static indexField = \"system.price\";\n}\n\nexport class ItemCasterLevelFilter extends NumberRangeFilter {\n  static label = \"PF1.CasterLevel\";\n  static indexField = \"system.cl\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { naturalSort } from \"@utils\";\n\nexport class PackFilter extends CheckboxFilter {\n  static label = \"PF1.Compendium\";\n  static indexField = \"__pack\";\n\n  /** @override */\n  prepareChoices() {\n    const entries = this.compendiumBrowser?.entries.contents;\n    const usedPacks = this.compendiumBrowser?.packs\n      ?.filter((pack) => entries.some((entry) => entry.__pack === pack.collection))\n      .map((pack) => ({ key: pack.collection, label: pack.metadata.label }));\n    const orderedPacks = naturalSort(usedPacks, \"label\").map((pack) => [pack.key, pack]);\n    this.choices = new foundry.utils.Collection(orderedPacks);\n  }\n}\n\nexport class TagFilter extends CheckboxFilter {\n  static label = \"PF1.Tags\";\n  static indexField = \"system.tags\";\n}\n","import { BOOLEAN_OPERATOR, CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class SpellSchoolFilter extends CheckboxFilter {\n  static label = \"PF1.SpellSchool\";\n  static indexField = \"system.school\";\n  static type = \"spell\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.spellSchools);\n  }\n}\n\nexport class SpellSubSchoolFilter extends CheckboxFilter {\n  static label = \"PF1.SubSchool\";\n  static indexField = \"system.subschool\";\n  static type = \"spell\";\n}\n\nexport class SpellDescriptorFilter extends CheckboxFilter {\n  static label = \"PF1.Descriptor\";\n  static indexField = \"system.descriptors\";\n  static type = \"spell\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    super.prepareChoices();\n    const choices = this.choices;\n\n    // this changes the value (the UI visible choice) to the translation from the config for pre-defined descriptors\n    const configChoices = this.constructor.getChoicesFromConfig(pf1.config.spellDescriptors);\n    configChoices.forEach((choice) => {\n      choices.set(choice.key, choice);\n    });\n    this.choices = choices;\n  }\n}\n\nexport class SpellLearnedByClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static indexField = \"system.learnedAt.class\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedByDomainFilter extends CheckboxFilter {\n  static label = \"PF1.Domain\";\n  static indexField = \"system.learnedAt.domain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedBySubdomainFilter extends CheckboxFilter {\n  static label = \"PF1.SubDomain\";\n  static indexField = \"system.learnedAt.subDomain\";\n  static type = \"spell\";\n}\n\nexport class SpellLearnedByBloodlineFilter extends CheckboxFilter {\n  static label = \"PF1.Bloodline\";\n  static indexField = \"system.learnedAt.bloodline\";\n  static type = \"spell\";\n}\n\nexport class SpellLevelFilter extends CheckboxFilter {\n  static label = \"PF1.SpellLevel\";\n  static indexField = \"system.level\";\n  static type = \"spell\";\n\n  /** @override */\n  prepareChoices() {\n    const choices = this.constructor.getChoicesFromConfig(pf1.config.spellLevels);\n    choices.forEach((choice) => {\n      choice.key = Number(choice.key);\n    });\n    this.choices = choices;\n  }\n\n  /** @override */\n  applyFilter(entry) {\n    const activeLearnedAtFilters = this.compendiumBrowser.filters.filter(\n      (filter) => filter.active && filter.constructor.indexField.startsWith(\"system.learnedAt.\")\n    );\n\n    // Fall back to checking whether _anything_ can learn the spell at that level\n    if (activeLearnedAtFilters.length === 0) return super.applyFilter(entry);\n\n    // Otherwise, check whether active filters match the spell's learnedAt\n    const testMethod = this.booleanOperator === BOOLEAN_OPERATOR.OR ? \"some\" : \"every\";\n    const activeLevelChoices = this.choices.filter((choice) => choice.active);\n\n    // Require either any of the active filters to match if OR, or all filters to return a match if AND\n    return activeLearnedAtFilters[testMethod]((filter) => {\n      /** @type {Record<string, number>} */\n      const learnedAt = foundry.utils.getProperty(entry, filter.constructor.indexField) ?? {};\n      const activeLearnedAtChoices = filter.choices.filter((choice) => choice.active);\n      // Require either one of the classes etc. to match if OR, or all classes etc. to match if AND\n      return activeLearnedAtChoices[testMethod]((learnedAtChoice) => {\n        const learnedAtLevel = learnedAt[learnedAtChoice.key];\n        return activeLevelChoices[testMethod]((levelChoice) => levelChoice.key === learnedAtLevel);\n      });\n    });\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class FeatTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"feat\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.featTypes);\n  }\n}\n\nexport class FeatClassFilter extends CheckboxFilter {\n  static label = \"PF1.Classes\";\n  static type = \"feat\";\n  static indexField = \"system.associations.classes\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class ClassTypeFilter extends CheckboxFilter {\n  static label = \"PF1.ClassType\";\n  static type = \"class\";\n  static indexField = \"system.subType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classTypes);\n  }\n}\n\nexport class ClassHitDieFilter extends CheckboxFilter {\n  static label = \"PF1.HitDie\";\n  static type = \"class\";\n  static indexField = \"system.hd\";\n}\n\nexport class ClassBaseAttackBonusFilter extends CheckboxFilter {\n  static label = \"PF1.BAB\";\n  static type = \"class\";\n  static indexField = \"system.bab\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classBAB);\n  }\n}\n\nexport class ClassSkillPointsFilter extends CheckboxFilter {\n  static label = \"PF1.SkillsPerLevel\";\n  static type = \"class\";\n  static indexField = \"system.skillsPerLevel\";\n}\n\nclass ClassSavingThrowFilter extends CheckboxFilter {\n  static type = \"class\";\n  static savingThrow = \"\";\n  static get label() {\n    return pf1.config.savingThrows[this.savingThrow] ?? \"\";\n  }\n  static get indexField() {\n    return `system.savingThrows.${this.savingThrow}.value`;\n  }\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.classSavingThrows);\n    this.choices.set(\"none\", { label: game.i18n.localize(\"PF1.None\"), key: \"none\" });\n  }\n\n  /** @inheritDoc */\n  applyFilter(entry) {\n    const result = super.applyFilter(entry);\n    const value = foundry.utils.getProperty(entry, this.constructor.indexField);\n    const noneFilterResult = this.choices.get(\"none\").active && value === \"\";\n    return result || noneFilterResult;\n  }\n}\n\nexport class ClassFortitudeFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"fort\";\n}\n\nexport class ClassReflexFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"ref\";\n}\n\nexport class ClassWillFilter extends ClassSavingThrowFilter {\n  static savingThrow = \"will\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class CreatureTypeFilter extends CheckboxFilter {\n  static label = \"PF1.CreatureType\";\n  static type = \"race\";\n  static indexField = \"system.creatureType\";\n\n  /** @inheritDoc */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.creatureTypes);\n  }\n}\n\nexport class CreatureSubTypeFilter extends CheckboxFilter {\n  static label = \"PF1.RaceSubtypePlural\";\n  static type = \"race\";\n  static indexField = \"system.subTypes\";\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\n\nexport class BuffTypeFilter extends CheckboxFilter {\n  static label = \"PF1.Type\";\n  static type = \"buff\";\n  static indexField = \"system.subType\";\n\n  /** @override */\n  prepareChoices() {\n    this.choices = this.constructor.getChoicesFromConfig(pf1.config.buffTypes);\n  }\n}\n","import { CheckboxFilter } from \"./checkbox.mjs\";\nimport { CR } from \"@utils\";\n\nexport class CreatureCRFilter extends CheckboxFilter {\n  static label = \"PF1.ChallengeRatingShort\";\n  static indexField = \"system.details.cr.base\";\n  static types = [\"character\", \"npc\"];\n\n  /** @override */\n  prepareChoices() {\n    super.prepareChoices();\n    const choices = this.choices.contents\n      .map((choice) => Number(choice.key))\n      .sort((a, b) => a - b)\n      .map((cr) => {\n        const label = CR.fromNumber(cr);\n        return [cr.toString(), { key: cr, label: label }];\n      });\n    this.choices = new foundry.utils.Collection(choices);\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as buffFilters from \"./filters/buff.mjs\";\n\nexport class BuffBrowser extends CompendiumBrowser {\n  static documentName = \"Item\";\n  static typeName = \"PF1.Buffs\";\n  static filterClasses = [commonFilters.PackFilter, buffFilters.BuffTypeFilter, commonFilters.TagFilter];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as classFilters from \"./filters/class.mjs\";\n\nexport class ClassBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Classes\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    classFilters.ClassTypeFilter,\n    classFilters.ClassHitDieFilter,\n    classFilters.ClassBaseAttackBonusFilter,\n    classFilters.ClassSkillPointsFilter,\n    classFilters.ClassFortitudeFilter,\n    classFilters.ClassReflexFilter,\n    classFilters.ClassWillFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport { PackFilter } from \"./filters/common.mjs\";\nimport * as creatureFilters from \"./filters/creature.mjs\";\n\nexport class CreatureBrowser extends CompendiumBrowser {\n  static documentName = \"Actor\";\n  static typeName = \"PF1.Creatures\";\n  static filterClasses = [PackFilter, creatureFilters.CreatureCRFilter];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as featFilter from \"./filters/feat.mjs\";\n\nexport class FeatBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Feats\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    featFilter.FeatTypeFilter,\n    featFilter.FeatClassFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as itemFilters from \"./filters/item.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\n\nexport class ItemBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Items\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    itemFilters.ItemTypeFilter,\n    itemFilters.WeaponTypeFilter,\n    itemFilters.WeaponSubtypeFilter,\n    itemFilters.WeaponPropertyFilter,\n    itemFilters.WeaponGroupFilter,\n    itemFilters.EquipmentTypeFilter,\n    itemFilters.EquipmentSubtypeFilter,\n    itemFilters.ItemSlotFilter,\n    itemFilters.ConsumableTypeFilter,\n    itemFilters.MiscItemTypeFilter,\n    itemFilters.ItemPriceFilter,\n    itemFilters.ItemCasterLevelFilter,\n    commonFilters.TagFilter,\n  ];\n\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n\n    // Remove equipmentSubtype if the item subtype should not have one\n    const { subType, equipmentSubtype } = result.system;\n    if (subType) {\n      const equipmentSubtypes = Object.keys(pf1.config.equipmentTypes[subType] ?? {}).filter((o) => !o.startsWith(\"_\"));\n      if (equipmentSubtypes.length === 0) {\n        // Clear equipmentSubtype if subType has no equipmentSubtypes\n        result.system.equipmentSubtype = \"\";\n      } else if (!equipmentSubtypes.includes(equipmentSubtype)) {\n        // Default to first equipmentSubtype if current equipmentSubtype is invalid\n        result.system.equipmentSubtype = equipmentSubtypes.at(0);\n      }\n    }\n\n    return result;\n  }\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as raceFilters from \"./filters/race.mjs\";\n\nexport class RaceBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Races\";\n  static filterClasses = [\n    commonFilters.PackFilter,\n    raceFilters.CreatureTypeFilter,\n    raceFilters.CreatureSubTypeFilter,\n    commonFilters.TagFilter,\n  ];\n}\n","import { CompendiumBrowser } from \"./compendium-browser.mjs\";\nimport * as commonFilters from \"./filters/common.mjs\";\nimport * as spellFilter from \"./filters/spell.mjs\";\n\nexport class SpellBrowser extends CompendiumBrowser {\n  static typeName = \"PF1.Spells\";\n  static types = [\"spell\"];\n  static filterClasses = [\n    commonFilters.PackFilter,\n    spellFilter.SpellSchoolFilter,\n    spellFilter.SpellSubSchoolFilter,\n    spellFilter.SpellDescriptorFilter,\n    spellFilter.SpellLearnedByClassFilter,\n    spellFilter.SpellLearnedByDomainFilter,\n    spellFilter.SpellLearnedBySubdomainFilter,\n    spellFilter.SpellLearnedByBloodlineFilter,\n    spellFilter.SpellLevelFilter,\n    commonFilters.TagFilter,\n  ];\n  /** @override */\n  static _mapEntry(entry, pack) {\n    const result = super._mapEntry(entry, pack);\n    // HACK: This transforms the string into an array.\n    // Tt's completely hardcoded for English; should be replaced with proper AI word recognition :)\n    {\n      result.system.subschool =\n        entry.system.subschool\n          ?.split(/,|\\bor\\b/)\n          .map((type) => {\n            /** @type {string} */\n            let typeString = type.trim();\n            if (typeString.includes(\"see text\")) return \"see text\";\n            if (typeString.startsWith(\"or\")) typeString = typeString.replace(\"or\").trim();\n            return typeString;\n          })\n          .filter((typeString) => typeString.length) ?? [];\n    }\n\n    {\n      const value = entry.system.descriptors?.value ?? [];\n      const custom = (entry.system.descriptors?.custom ?? [])\n        .flatMap((c) =>\n          c?.split(/,|\\bor\\b/).map((type) => {\n            /** @type {string} */\n            let typeString = type.trim();\n            if (typeString.includes(\"see text\")) return \"see text\";\n            if (typeString.startsWith(\"or\")) typeString = typeString.replace(\"or\").trim();\n            return typeString;\n          })\n        )\n        .filter((typeString) => typeString?.length);\n      const values = [...value, ...custom].map((descriptor) => {\n        const entries = Object.entries(pf1.config.spellDescriptors);\n        const match = entries.find(([k, v]) => k === descriptor || v === descriptor);\n        return match?.[0] ?? descriptor;\n      });\n      result.system.descriptors = [...new Set(values)];\n    }\n\n    /** @type {Record<string, Record<string, number>>} */\n    const learnedAtData = entry.system.learnedAt ?? {};\n    const learnedAtLevels = Object.values(learnedAtData)\n      .map((learnedAtSource) => Object.values(learnedAtSource))\n      .flat();\n    if (entry.system.level) learnedAtLevels.push(entry.system.level);\n    // NOTE: This results in `level` being a number[] instead of a number like in the source data.\n    result.system.level = [...new Set(learnedAtLevels)];\n\n    return result;\n  }\n}\n","import { getSkipActionPrompt } from \"../documents/settings.mjs\";\n\nexport class ActionSelector extends Application {\n  /**\n   * @param {ItemPF} item - The item for which to choose an attack\n   * @param {object} [options={}] - Application options\n   * @param {object} [useOptions={}] - Use options\n   */\n  constructor(item, options = {}, useOptions = {}) {\n    super(options);\n\n    this.useOptions = useOptions;\n    this.item = item;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      template: \"systems/pf1/templates/apps/action-select.hbs\",\n      classes: [...options.classes, \"pf1\", \"action-selector\"],\n      width: 400,\n    };\n  }\n\n  get title() {\n    return game.i18n.format(\"PF1.Application.ActionSelector.Title\", {\n      actor: this.item.actor.name ?? \"\",\n      item: this.item.name,\n    });\n  }\n\n  async getData() {\n    const result = await super.getData();\n\n    result.item = this.item.toObject();\n    result.actions = this.item.actions;\n\n    return result;\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    html.find(\".action\").on(\"click\", this._onClickAction.bind(this));\n  }\n\n  _onClickAction(event) {\n    event.preventDefault();\n\n    const actionId = event.currentTarget.dataset?.action;\n    const result = this.item.use({ ...this.useOptions, actionId, skipDialog: getSkipActionPrompt() });\n    this.resolve?.(result);\n    this.close();\n  }\n\n  close(...args) {\n    this.resolve?.();\n    super.close(...args);\n  }\n\n  /**\n   * @param {ItemPF} item\n   * @param {object} options\n   * @param {object} renderOptions - Options passed to application rendering\n   * @returns {Promise<ChatMessage|object|undefined>} - Result of ItemPF.use() for selected action\n   */\n  static async open(item, options = {}, renderOptions = {}) {\n    return new Promise((resolve) => {\n      const selector = new this(item, undefined, options);\n      selector.resolve = resolve;\n      selector.render(true, { focus: true, ...renderOptions });\n    });\n  }\n}\n","import { ActionUse, ActionUseAttack } from \"../action-use/action-use.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\nexport class AttackDialog extends Application {\n  /**\n   * @param {pf1.actionUse.ActionUse} actionUse\n   * @param {object} appOptions\n   */\n  constructor(actionUse, appOptions = {}) {\n    super(appOptions);\n\n    this.actionUse = actionUse;\n    this.object = actionUse.action;\n\n    const action = actionUse.action;\n    const shared = actionUse.shared;\n    this.shared = shared;\n\n    this.useOptions = shared.useOptions ?? {};\n\n    this.rollData = shared.rollData;\n\n    this.initAmmoUsage();\n    this.initAttacks();\n\n    this.base = {\n      cl: this.rollData.cl ?? 0,\n      sl: this.rollData.sl ?? 0,\n    };\n\n    const isNaturalAttack = action.item.subType === \"natural\",\n      isPrimaryAttack = isNaturalAttack ? action.data.naturalAttack.primaryAttack !== false : true;\n\n    const useOptions = this.useOptions;\n\n    this.flags = {\n      \"power-attack\": useOptions.powerAttack ?? false,\n      \"primary-attack\": useOptions.primaryAttack ?? isPrimaryAttack,\n      \"cl-check\": useOptions.clCheck ?? action.clCheck === true,\n      \"measure-template\": useOptions.measureTemplate ?? true,\n      \"haste-attack\": useOptions.haste,\n      manyshot: useOptions.manyshot,\n      \"rapid-shot\": useOptions.rapidShot,\n    };\n\n    let damageMult = this.damageMult;\n    if (useOptions.abilityMult != null) damageMult = useOptions.abilityMult;\n\n    this.attributes = {\n      d20: this.rollData.d20 ?? \"\",\n      \"attack-bonus\": \"\",\n      \"damage-bonus\": \"\",\n      \"cl-offset\": \"0\",\n      \"sl-offset\": \"0\",\n      rollMode: shared.rollMode || game.settings.get(\"core\", \"rollMode\"),\n      \"damage-ability-multiplier\": damageMult,\n      held: useOptions.held || this.rollData.action?.held || this.rollData.item?.held || \"normal\",\n    };\n\n    this.conditionals = {};\n    action.conditionals?.contents.forEach((conditional, idx) => {\n      this.conditionals[`conditional.${idx}`] = conditional.data.default === true;\n    });\n\n    if (useOptions.haste) this._toggleExtraAttack(\"haste-attack\", true);\n    if (useOptions.manyshot) this._toggleExtraAttack(\"manyshot\", true);\n    if (useOptions.rapidShot) this._toggleExtraAttack(\"rapid-shot\", true);\n\n    // Callback for AttackDialog.show()\n    this.resolve = null;\n  }\n\n  get damageMult() {\n    const rollData = this.rollData;\n    const held = rollData.action?.held || rollData.item?.held || \"1h\";\n    let damageMult = rollData.action?.ability?.damageMult ?? pf1.config.abilityDamageHeldMultipliers[held] ?? 1;\n\n    const isPrimaryAttack = this.flags[\"primary-attack\"];\n    if (!isPrimaryAttack) {\n      damageMult = rollData.action.naturalAttack?.secondary?.damageMult ?? 0.5;\n    }\n\n    return damageMult;\n  }\n\n  /** @type {pf1.components.ItemAction} */\n  get action() {\n    return this.object;\n  }\n\n  get title() {\n    const action = this.action,\n      item = action.item,\n      actor = action.actor;\n\n    if (actor) return `${action.name} (${item.name}) – ${actor.name}`;\n    return `${action.name} (${item.name})`;\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      template: \"systems/pf1/templates/apps/attack-roll-dialog.hbs\",\n      classes: [\"pf1\", \"attack-dialog\"],\n      width: 440,\n      height: \"auto\",\n      closeOnSubmit: true,\n      sheetConfig: false,\n      submitOnChange: false,\n      submitOnClose: false,\n    };\n  }\n\n  getData() {\n    const action = this.action,\n      item = action.item;\n\n    const context = {\n      data: this.rollData,\n      item,\n      action,\n      config: pf1.config,\n      rollMode: game.settings.get(\"core\", \"rollMode\"),\n      rollModes: CONFIG.Dice.rollModes,\n      hasAttack: action.hasAttack,\n      hasDamage: action.hasDamage,\n      hasDamageAbility: action.data.ability?.damage ?? \"\" !== \"\",\n      isNaturalAttack: item.system.subType === \"natural\",\n      isWeaponAttack: item.system.subType === \"weapon\",\n      isRanged: action.isRanged,\n      isMeleeWeaponAttackAction: action.data.actionType === \"mwak\",\n      isRangedWeaponAttackAction: action.isRanged && !action.isCombatManeuver,\n      isAttack: item.type === \"attack\",\n      isWeapon: item.type === \"weapon\",\n      isSpell: item.type === \"spell\",\n      isFeat: item.type === \"feat\",\n      isHealing: action.isHealing,\n      hasTemplate: action.hasTemplate,\n      attacks: this.attacks,\n      flags: this.flags,\n      attributes: this.attributes,\n      conditionals: this.conditionals,\n      usesAmmo: !!this.action.ammoType,\n      ammo: this.actionUse.getAmmo(),\n    };\n\n    // Determine if power attack mode should be displayed\n    context.canConfigureHeld =\n      context.flags[\"power-attack\"] &&\n      !context.isRanged &&\n      (context.isAttack || context.isWeapon) &&\n      !context.isNaturalAttack;\n\n    if (!Number.isFinite(action.data.ability?.damageMult)) {\n      context.canConfigureHeld = true;\n    }\n\n    return context;\n  }\n\n  activateListeners(html) {\n    // Form changing\n    html.find(`.flags input[type=\"checkbox\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input.attribute`).on(\"change\", this._onChangeAttribute.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"concentration\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"cl-check\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`input[type=\"checkbox\"][name=\"measure-template\"]`).on(\"change\", this._onToggleFlag.bind(this));\n    html.find(`select`).on(\"change\", this._onSelectChange.bind(this));\n    html.find(`.conditionals input[type=\"checkbox\"]`).on(\"change\", this._onToggleConditional.bind(this));\n\n    // Dropdown menu\n    html.find(\".ammo-select\").on(\"click\", this._onAmmoSelectClick.bind(this));\n    html.find(\".ammo-select .ammo-item .controls a\").on(\"click\", this._onAmmoControlClick.bind(this));\n    html.find(\".ammo-select .ammo-item\").on(\"click\", this._onAmmoClick.bind(this));\n    html.on(\"click\", this._unfocusElements.bind(this));\n\n    // Button hover\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerenter\", this._hideExtraAttacks.bind(this));\n    html.find(`button[name=\"attack_single\"]`).on(\"pointerleave\", this._showExtraAttacks.bind(this));\n\n    // Button press\n    html.find(`button[name=\"attack_single\"]`).on(\"click\", (ev) => this.resolveAttack(ev, false));\n    html.find(`button[name=\"attack_full\"]`).on(\"click\", (ev) => this.resolveAttack(ev, true));\n  }\n\n  _onSelectChange(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.options[elem.selectedIndex].value;\n    this.render();\n  }\n\n  _hideExtraAttacks(event) {\n    const elems = this.element.find(\".attacks .attack\").filter((index, elem) => parseInt(elem.dataset.index) > 0);\n    elems.addClass(\"disabled\");\n  }\n\n  _showExtraAttacks(event) {\n    this.element.find(\".attacks .attack\").removeClass(\"disabled\");\n  }\n\n  /**\n   * @internal\n   * @param {object} [options] - Additional options\n   * @param {boolean} [options.render=true] - Call render\n   * @param {Event} event\n   */\n  _onToggleFlag(event) {\n    if (event?.cancelable) event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.flags[elem.name] = elem.checked === true;\n\n    // Add or remove haste, rapid-shot or manyshot attack\n    switch (elem.name) {\n      case \"haste-attack\":\n      case \"rapid-shot\":\n      case \"manyshot\": {\n        this._toggleExtraAttack(elem.name, elem.checked);\n        break;\n      }\n      case \"primary-attack\":\n        // Update damage mult to match primary/secondary default\n        this.attributes[\"damage-ability-multiplier\"] = this.damageMult;\n        break;\n    }\n\n    this.render();\n  }\n\n  _toggleExtraAttack(type, enabled = true) {\n    if (enabled) {\n      const translationString = {\n        \"haste-attack\": \"PF1.Haste\",\n        \"rapid-shot\": \"PF1.RapidShot\",\n        manyshot: \"PF1.Manyshot\",\n      };\n\n      // Correlate manyshot with the first attack, add the others at the end\n      const place = type === \"manyshot\" ? 1 : this.attacks.length;\n\n      this.attacks.splice(\n        place,\n        0,\n        new ActionUseAttack(game.i18n.localize(translationString[type]), \"\", null, { abstract: true, type })\n      );\n      this.setAttackAmmo(place, this.action.item.getFlag(\"pf1\", \"defaultAmmo\"));\n    } else {\n      this.attacks.findSplice((o) => o.type === type);\n    }\n  }\n\n  _onToggleConditional(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.conditionals[elem.name] = elem.checked === true;\n    this.render();\n  }\n\n  _onAmmoSelectClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const listElem = elem.querySelector(\"ul\");\n\n    // Filter to NOT act when clicking on the list child element\n    if (!event.target.closest(\"ul\")) {\n      // Set classes for CSS\n      listElem.classList.toggle(\"open\");\n      const isOpen = listElem.classList.contains(\"open\");\n      if (isOpen) elem.classList.add(\"focus\");\n      else elem.classList.remove(\"focus\");\n    }\n  }\n\n  _onAmmoClick(event) {\n    const elem = event.target;\n    // Don't do anything if this click was actually on its controls\n    if (elem.closest(\".controls\") && !elem.classList.contains(\"controls\")) return;\n\n    event.preventDefault();\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    const attackIndex = parseInt(elem.closest(\".attack\").dataset.index);\n\n    // Set ammo\n    this.setAttackAmmo(attackIndex, ammoId === \"null\" ? null : ammoId);\n    this.render();\n  }\n\n  async _onAmmoControlClick(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    const ammoId = elem.closest(\".ammo-item\").dataset.id;\n    switch (elem.dataset.type) {\n      case \"set-default\":\n        if (ammoId === \"null\") await this.action.item.unsetFlag(\"pf1\", \"defaultAmmo\");\n        else await this.action.item.setFlag(\"pf1\", \"defaultAmmo\", ammoId);\n        // Apply CSS class, since we can't do a render in here and keep the dropdown menu open\n        elem\n          .closest(\"ul\")\n          .querySelectorAll(\".ammo-item\")\n          .forEach((o) => o.classList.remove(\"default\"));\n        if (ammoId !== \"null\") elem.closest(\".ammo-item\").classList.add(\"default\");\n        break;\n      case \"set-all\":\n        for (let a = 0; a < this.attacks.length; a++) {\n          this.setAttackAmmo(a, ammoId);\n        }\n        this.render();\n    }\n  }\n\n  _unfocusElements(event) {\n    // Close ammo select\n    if (this.element[0].querySelector(\".ammo-select\") != null && !event.target.closest(\".ammo-select\")) {\n      const elem = this.element[0].querySelector(\".ammo-select\");\n      elem.classList.remove(\"focus\");\n      elem.querySelector(\"ul\").classList.remove(\"open\");\n    }\n  }\n\n  _onChangeAttribute(event) {\n    event.preventDefault();\n\n    const elem = event.currentTarget;\n    this.attributes[elem.name] = elem.value;\n\n    // Also change roll data, if appropriate\n    switch (elem.name) {\n      case \"cl-offset\":\n        this.rollData.cl = this.base.cl + parseInt(elem.value);\n        break;\n      case \"sl-offset\":\n        this.rollData.sl = this.base.sl + parseInt(elem.value);\n        break;\n      case \"damage-ability-multiplier\":\n        foundry.utils.setProperty(this.rollData, \"action.ability.damageMult\", elem.value);\n        break;\n      case \"held\":\n        foundry.utils.setProperty(this.rollData, \"action.held\", elem.value);\n        break;\n    }\n\n    this.render();\n  }\n\n  initAttacks() {\n    this.attacks = this.shared.attacks;\n\n    for (const atk of this.attacks) {\n      atk.attackBonusTotal = RollPF.safeRollAsync(atk.attackBonus, this.rollData).total ?? 0;\n    }\n\n    // Set ammo usage\n    if (this.action.ammoType) {\n      const ammoId = this.action.item.getFlag(\"pf1\", \"defaultAmmo\");\n      if (ammoId != null) {\n        for (let a = 0; a < this.attacks.length; a++) {\n          this.setAttackAmmo(a, ammoId);\n        }\n      }\n    }\n  }\n\n  // Initializes ammo usage, which helps avoid being able to overuse ammo\n  initAmmoUsage() {\n    this.ammoUsage = this.actionUse.getAmmo().reduce((cur, o) => {\n      cur[o.id] = {\n        quantity: o.quantity,\n        used: 0,\n      };\n\n      return cur;\n    }, {});\n  }\n\n  setAttackAmmo(attackIndex, ammoId = null) {\n    if (!this.action.ammoType) return;\n\n    const atk = this.attacks[attackIndex];\n    const curAmmo = atk.ammo?.id;\n    const ammoItem = this.action.actor?.items.get(ammoId) ?? null;\n    const abundant = ammoItem?.system.abundant ?? false;\n\n    // Check if ammo exists\n    if (ammoId && this.ammoUsage[ammoId] == null) ammoId = null;\n\n    if (!ammoId) {\n      atk.ammo = null;\n      // Remove from ammo usage tracker\n      if (curAmmo != null) {\n        this.ammoUsage[curAmmo].used--;\n      }\n      return;\n    }\n\n    // Don't allow overusage\n    if (!abundant && this.ammoUsage[ammoId].used >= this.ammoUsage[ammoId].quantity) return;\n\n    atk.ammo = this.actionUse.getAmmo().find((o) => o.id === ammoId);\n\n    // Add to ammo usage tracker\n    if (curAmmo) this.ammoUsage[curAmmo].used--;\n    this.ammoUsage[ammoId].used++;\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   * @param {boolean} fullAttack\n   */\n  resolveAttack(event, fullAttack = true) {\n    event.preventDefault();\n\n    const form = new FormDataExtended(this.element.find(\"form\")[0]).object;\n    form.fullAttack = fullAttack;\n\n    this.resolve(form);\n    this.close();\n  }\n\n  async close(options = {}) {\n    this.resolve(null);\n    return super.close(options);\n  }\n\n  /**\n   * @returns {Promise<object|null>} - Attack configuration object or null if rejected\n   */\n  show() {\n    return new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.render(true);\n    });\n  }\n}\n","import { SemanticVersion } from \"../utils/semver.mjs\";\n\nexport class ChangeLogWindow extends FormApplication {\n  constructor(lastVersion) {\n    super({}, {});\n\n    this.lastVersion = lastVersion;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return foundry.utils.mergeObject(options, {\n      id: \"changelog\",\n      classes: [\"pf1\", \"changelog\"],\n      template: \"systems/pf1/templates/apps/changelog.hbs\",\n      width: 500,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    });\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.Title\")} ~ ${game.i18n.localize(\"PF1.Changelog\")}`;\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    data.dontShowAgain = game.settings.get(\"pf1\", \"dontShowChangelog\");\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"systems/pf1/CHANGELOG.md\");\n\n    const promise = new Promise((resolve) => {\n      xhr.onload = () => {\n        if (xhr.status === 200) {\n          data.changelog = this._processChangelog(xhr.response);\n          resolve(data);\n        }\n      };\n    });\n    xhr.send(null);\n\n    return promise;\n  }\n\n  _processChangelog(md) {\n    const converter = new showdown.Converter();\n\n    // Cut off irrelevant changelog entries\n    let lines = md.split(/[\\n\\r]/);\n    if (this.lastVersion) {\n      for (let a = 0; a < lines.length; a++) {\n        const line = lines[a];\n        if (line.match(/##\\s+([0-9]+\\.[0-9]+\\.[0-9]+)/)) {\n          const version = SemanticVersion.fromString(RegExp.$1);\n          if (!version.isHigherThan(this.lastVersion)) {\n            lines = lines.slice(0, a);\n            break;\n          }\n        }\n      }\n    }\n\n    return converter.makeHtml(lines.join(\"\\n\"));\n  }\n\n  async _updateObject(event, formData) {\n    if (formData.dontShowAgain != null) {\n      await game.settings.set(\"pf1\", \"dontShowChangelog\", formData.dontShowAgain);\n    }\n  }\n}\n","export class EntrySelector extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n\n    if (options.title) this.subtitle = game.i18n.localize(options.title);\n\n    // Prepare data and convert it into format compatible with the editor\n    this.isFlag = this.options.flag === true;\n    this.isBoolean = this.options.boolean === true;\n    this.isFlat = this.options.flat === true;\n    const data = foundry.utils.deepClone(\n      foundry.utils.getProperty(this.object, this.attribute) ?? (this.isFlag ? {} : [])\n    );\n\n    this.originalEntries = data;\n    this.entries = this.isFlag ? (this.isBoolean ? Object.keys(data).map((d) => [d]) : Object.entries(data)) : data;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"entry\"],\n      template: \"systems/pf1/templates/apps/entry-selector.hbs\",\n      width: 320,\n      height: \"auto\",\n      closeOnSubmit: true,\n      submitOnClose: false,\n      submitOnChange: false,\n    };\n  }\n\n  get id() {\n    // BUG?: Hypothetical: Behaves poorly on container items?\n    return `entry-selector-item-${this.object.uuid}-${this.options.name}`;\n  }\n\n  get title() {\n    const item = this.object;\n    const actor = item.actor;\n    const title = this.subtitle ?? game.i18n.localize(\"PF1.Application.EntrySelector.Title\");\n    if (item) {\n      if (actor) {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleOwned\", {\n          item: item.name,\n          actor: actor.name,\n          title,\n        });\n      } else {\n        return game.i18n.format(\"PF1.Application.EntrySelector.TitleIsolated\", { item: item.name, title });\n      }\n    } else {\n      return title;\n    }\n  }\n\n  get attribute() {\n    return this.options.name;\n  }\n\n  get fields() {\n    return this.options.fields.split(\";\");\n  }\n\n  get dtypes() {\n    return this.options.dtypes.split(\";\");\n  }\n\n  get dataCount() {\n    return this.fields.length;\n  }\n\n  getData() {\n    const entries = this.entries.map((entry) =>\n      this.isFlat ? [entry, this.dtypes[entry]] : entry.map((o2, a) => [o2, this.dtypes[a]])\n    );\n\n    return {\n      entries: entries,\n      fields: this.fields,\n      isFlat: this.isFlat,\n    };\n  }\n\n  activateListeners(html) {\n    if (!this.isEditable) return;\n\n    html.find(\".entry-control\").click(this._onEntryControl.bind(this));\n\n    html.find('tr td input[type=\"text\"]').change(this._onEntryChange.bind(this));\n  }\n\n  async _updateObject(event, formData) {\n    const updateData = {};\n\n    if (this.isFlag) {\n      // Convert editor data for flags\n      const newKeys = new Set(); // Needed for deletion detection\n      const entries = this.entries.forEach(([key, value]) => {\n        newKeys.add(key);\n        updateData[`${this.attribute}.${key}`] = this.isBoolean ? true : value;\n      });\n      // Handle deletions\n      const oldKeys = Object.keys(this.originalEntries);\n      oldKeys.forEach((key) => {\n        if (!newKeys.has(key)) updateData[`${this.attribute}.-=${key}`] = null;\n      });\n    } else {\n      updateData[this.attribute] = this.entries;\n    }\n\n    return this.object.update(updateData);\n  }\n\n  async _onEntryControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    if (a.classList.contains(\"add-entry\")) {\n      if (this.isFlat) {\n        const dataType = this.dtypes[a];\n        if (dataType === \"Number\") this.entries.push(0);\n        else this.entries.push(\"\");\n      } else {\n        const obj = [];\n        for (let a = 0; a < this.dataCount; a++) {\n          const dataType = this.dtypes[a];\n          if (dataType === \"Number\") obj.push(0);\n          else obj.push(\"\");\n        }\n        this.entries.push(obj);\n      }\n      return this.render();\n    }\n\n    if (a.classList.contains(\"delete-entry\")) {\n      const tr = a.closest(\"tr\");\n      const index = parseInt(tr.dataset.index);\n      this.entries.splice(index, 1);\n      return this.render();\n    }\n  }\n\n  async _onEntryChange(event) {\n    const a = event.currentTarget;\n\n    const tr = a.closest(\"tr.entry\");\n    const index = parseInt(tr.dataset.index);\n    const index2 = parseInt(a.dataset.index);\n    const value = a.value;\n\n    if (a.dataset.dtype === \"Number\") {\n      let v = parseFloat(value);\n      if (isNaN(v)) v = 0;\n      if (this.isFlat) this.entries[index] = Math.floor(v * 100) / 100;\n      else this.entries[index][index2] = Math.floor(v * 100) / 100;\n    } else {\n      if (this.isFlat) this.entries[index] = value;\n      else this.entries[index][index2] = value;\n    }\n  }\n\n  /**\n   * Opens selector for chosen with with options or re-opens previously open app if such is found.\n   *\n   * @param {Item} item Item passed to constructor\n   * @param {object} options Options passed to constructor\n   */\n  static open(item, options) {\n    const app = new this(item, options);\n\n    const old = Object.values(ui.windows).find((oldApp) => oldApp instanceof this && oldApp.id === app.id);\n    if (old) old.render(false, { focus: true });\n    else app.render(true, { focus: true });\n  }\n}\n","/**\n * Item choice dialog.\n */\nexport class ItemSelector extends FormApplication {\n  constructor({ actor, items, filter, empty = true, selected = null } = {}, options) {\n    super(actor, options);\n\n    this.empty = empty;\n    this.selected = selected || \"\";\n    this.filterFunc = filter;\n    this.items = items ?? actor?.items;\n\n    if (!this.items) throw new Error(\"No items list provided.\");\n  }\n\n  get title() {\n    return this.options.title || game.i18n.localize(\"PF1.Application.ItemSelector.Title\");\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/item-select.hbs\";\n  }\n\n  static get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      classes: [\"pf1\", \"item-selector\"],\n      scrollY: [\".item-list\"],\n      height: \"auto\",\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      resizable: true,\n    };\n  }\n\n  getData() {\n    if (this.actor) this.items = this.actor.items;\n\n    const items = this.filterFunc ? this.items.filter(this.filterFunc) : [...this.items];\n    if (this.empty) {\n      items.unshift({\n        id: \"\",\n        img: \"icons/svg/cancel.svg\",\n        name: game.i18n.localize(\"PF1.None\"),\n      });\n    }\n\n    return {\n      empty: this.empty,\n      selected: this.selected || \"\",\n      items,\n    };\n  }\n\n  close(...args) {\n    super.close(...args);\n    this.resolve?.(null);\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const button = jq[0].querySelector(\"button.commit-select\");\n    if (button) {\n      button.addEventListener(\"click\", this._onSaveSelection.bind(this));\n    }\n  }\n\n  _onSaveSelection(event) {\n    this.resolve?.(this.selected || \"\");\n    this.close();\n  }\n\n  _updateObject(event, formData) {\n    this.selected = formData.selected;\n    this.render();\n  }\n\n  /**\n   * Render item selector and wait for it to resolve.\n   *\n   * @param {object} options - Options\n   * @param {Actor} [options.actor] - Actor to find items from.\n   * @param {Item[]} [options.items] - Items list. Used only if actor is undefined.\n   * @param {Function} options.filter - Filter function\n   * @param {boolean} [options.empty=true] - Allow empty selection.\n   * @param {string} [options.selected=null] - Already selected item ID.\n   * @param {object} [renderOptions] - Render options\n   * @param {object} [appOptions] - Application options\n   * @returns {Promise<string|null>} - Item ID or null if cancelled.\n   */\n  static wait({ actor, items, filter, empty = true, selected = null } = {}, appOptions, renderOptions) {\n    const old = Object.values(ui.windows).find(\n      (app) => app instanceof pf1.applications.ItemSelector && app.id === appOptions.id\n    );\n    if (old) {\n      old.render(false, { focus: true });\n      return null;\n    }\n\n    return new Promise((resolve) => {\n      const app = new this({ actor, items, filter, empty, selected }, appOptions);\n      app.resolve = resolve;\n      app.render(true, renderOptions);\n    });\n  }\n}\n","/**\n * An {@link Application} displaying documentation for the Pathfinder 1e system within Foundry.\n *\n * @augments Application\n */\nexport class HelpBrowserPF extends Application {\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _backwardHistory = [];\n  /**\n   * @type {HistoryEntry[]}\n   * @private\n   */\n  _forwardHistory = [];\n  /**\n   * The currently shown entry.\n   *\n   * @type {HistoryEntry}\n   * @private\n   */\n  _currentPage = { url: \"Help/Home\" };\n\n  /**\n   * The Markdown converter for this application.\n   *\n   * @type {showdown.Converter}\n   * @private\n   */\n  #converter;\n\n  /** @inheritdoc */\n  constructor(...args) {\n    super(...args);\n\n    this.#converter = new showdown.Converter({\n      extensions: [HelpBrowserPF.defaultExtensions],\n      noHeaderId: false,\n      ghCompatibleHeaderId: true,\n      prefixHeaderId: \"pf1-help-browser-\",\n    });\n  }\n\n  /** @inheritdoc */\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"help-browser\"],\n      template: \"systems/pf1/templates/apps/help-browser.hbs\",\n      minWidth: 800,\n      minHeight: 450,\n      width: 960,\n      height: 600,\n      resizable: true,\n      id: \"pf1-help-browser\",\n    });\n  }\n\n  /** @inheritdoc */\n  get title() {\n    return game.i18n.localize(\"PF1.Help.Label\");\n  }\n\n  /**\n   * The URL of the page currently displayed\n   *\n   * @type {string}\n   */\n  get currentUrl() {\n    return this._currentPage.url;\n  }\n\n  /** @override */\n  async getData() {\n    const data = await super.getData();\n\n    data.hasHistoryBack = this._backwardHistory.length > 0;\n    data.hasHistoryForward = this._forwardHistory.length > 0;\n\n    // Get markdown string from localisation, and parse it\n    data.pageContent = this.#converter.makeHtml(game.i18n.localize(`PF1.${this.currentUrl}`));\n    data.isHome = this.currentUrl === \"Help/Home\";\n\n    return data;\n  }\n\n  /**\n   * Opens a specific page in the help browser.\n   *\n   * @param {string} url - The help URL to open\n   */\n  openUrl(url) {\n    // Remove leading `/`, which are okay in the wiki, but not present in localisation files\n    if (url.startsWith(\"/\")) url = url.slice(1);\n    let header;\n    // Extract header from URL\n    [url, header] = url.split(\"#\");\n    if (this.currentUrl && url !== this.currentUrl) {\n      // Add new page to history\n      this._backwardHistory.push(this.getCurrentHistoryObject());\n      this._forwardHistory.splice(0, this._forwardHistory.length);\n    }\n    this._currentPage = { url };\n    this.render(true, { header: header });\n  }\n\n  /** @inheritdoc */\n  async _render(force, options) {\n    await super._render(force, options);\n    const contentElement = this.element.find(\".content\")[0];\n\n    if (this._currentPage.scrollTop) {\n      // Dirty timeout to wait for loading of images with unknown height\n      setTimeout(() => {\n        contentElement.scrollTop = this._currentPage.scrollTop;\n      }, 0);\n    } else if (options.header) {\n      const headerElement = document.getElementById(`pf1-help-browser-${options.header}`);\n      if (headerElement) {\n        setTimeout(() => {\n          headerElement.scrollIntoView({ block: \"start\" });\n        }, 0);\n      }\n    }\n  }\n\n  /**\n   * Returns a {@link HistoryEntry} containing a snapshot of the currently rendered state.\n   *\n   * @returns {HistoryEntry} The current state\n   */\n  getCurrentHistoryObject() {\n    const elem = this.element.find(\".content\")[0];\n    const scrollTop = elem?.scrollTop ?? 0;\n    return {\n      url: this.currentUrl,\n      scrollTop: scrollTop,\n    };\n  }\n\n  /** Go back one page in history. */\n  backInHistory() {\n    if (!this._backwardHistory.length) return;\n    this._forwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._backwardHistory.pop();\n    this.render();\n  }\n\n  /** Go forward one page in history. */\n  forwardInHistory() {\n    if (!this._forwardHistory.length) return;\n    this._backwardHistory.push(this.getCurrentHistoryObject());\n    this._currentPage = this._forwardHistory.pop();\n    this.render();\n  }\n\n  /** @param {JQuery<HTMLElement>} html - This application's HTML element */\n  activateListeners(html) {\n    // Remove href attributes to avoid actual browser page changes\n    const links = html.find(\"a[href]\");\n    for (const l of links) {\n      const href = l.getAttribute(\"href\");\n      l.removeAttribute(\"href\");\n      // Store target in dataset\n      l.dataset.url = href;\n    }\n    html.on(\"click\", \"a\", (event) => {\n      event.preventDefault();\n      const url = event.currentTarget.dataset.url;\n      if (url) this.openUrl(url);\n    });\n\n    // History buttons\n    html.find(\".history-back\").on(\"click\", this.backInHistory.bind(this));\n    html.find(\".history-forward\").on(\"click\", this.forwardInHistory.bind(this));\n    html.find(\".history-home\").on(\"click\", () => this.openUrl(\"Help/Home\"));\n  }\n\n  /**\n   * Extensions for the Markdown converter used by the help browser.\n   *\n   * @type {showdown.ShowdownExtension[]}\n   */\n  static get defaultExtensions() {\n    return [\n      // Replace image paths from the wiki with localised paths available in the current Foundry context\n      {\n        type: \"output\",\n        regex: /<img.*?src=\"(.+?)\".*?>/g,\n        replace: function (match, src, _offset, _string) {\n          const foundrySrc = game.i18n.localize(`PF1.${src.startsWith(\"/\") ? src.slice(1) : src}`);\n          return match.replace(src, foundry.utils.getRoute(`systems/pf1/${foundrySrc}`));\n        },\n      },\n      // Replace `::: <block>` with `<div class=\"<block>\">` and `:::` with `</div>\n      {\n        type: \"output\",\n        regex: /<p>:::(\\s\\w+)?<\\/p>/g,\n        replace: function (_match, blockName, _offset, _string) {\n          if (blockName) return `<div class=\"${blockName.slugify()}\">`;\n          else return \"</div>\";\n        },\n      },\n    ];\n  }\n}\n\n/**\n * The singleton instance of the {@link HelpBrowserPF} available at runtime.\n */\nexport const helpBrowser = new HelpBrowserPF();\n\n/**\n * @typedef {object} HistoryEntry\n * @property {string} url - URL of this history entry\n * @property {number} [scrollTop] - Scroll position of this history entry\n */\n","export class ScriptEditor extends FormApplication {\n  constructor(options = {}) {\n    super(options);\n\n    this.command = options.command || \"\";\n    this.name = options.name || null;\n\n    this.parent = options.parent;\n    this.script = options.script;\n\n    // Add editor title\n    if (this.name) this.options.title = this.parent ? `${this.parent.name}: ${this.name}` : this.name;\n    else this.options.title = this.parent?.name ?? game.i18n.localize(\"PF1.Unknown\");\n\n    this._promises = {\n      submit: [],\n    };\n  }\n\n  get id() {\n    return `script-call-${this.parent.uuid.replaceAll(\".\", \"-\")}-id-${this.script}`;\n  }\n\n  get isEditable() {\n    const item = this.parent;\n    let editable = this.options.editable && item.isOwner;\n    if (item.pack && game.packs.get(item.pack)?.locked) editable = false;\n    return editable;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"script-editor\"],\n      template: \"systems/pf1/templates/apps/script-editor.hbs\",\n      width: 640,\n      height: 560,\n    });\n  }\n\n  getData() {\n    const data = {};\n\n    data.command = this.command || \"\";\n    data.name = this.name;\n\n    return data;\n  }\n\n  awaitResult() {\n    let callback;\n    const promise = new Promise((resolve) => {\n      callback = resolve;\n    });\n    this._promises.submit.push({ callback, promise, resolved: false });\n    return promise;\n  }\n\n  activateListeners(html) {\n    // Open help browser\n    html.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  _updateObject(event, formData) {\n    this.command = formData[\"command\"];\n    this.name = formData[\"name\"] || null;\n\n    const result = {\n      command: this.command,\n      name: this.name,\n    };\n\n    this.resolvePromises(\"submit\", result);\n  }\n\n  resolvePromises(type, result) {\n    for (const p of this._promises[type]) {\n      if (!p.resolved) {\n        p.callback(result);\n        p.resolved = true;\n      }\n    }\n  }\n\n  async close(...args) {\n    super.close(...args);\n\n    this.resolvePromises(\"submit\", null);\n  }\n}\n","export class SensesSelector extends DocumentSheet {\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return foundry.utils.mergeObject(options, {\n      classes: [\"pf1\", \"senses-selector\"],\n      template: \"systems/pf1/templates/apps/senses-selector.hbs\",\n      width: 500,\n      closeOnSubmit: true,\n    });\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Configure the title of the special traits selection window to include the Actor name\n   *\n   * @type {string}\n   */\n  get title() {\n    return `${game.i18n.localize(\"PF1.Senses\")}: ${this.object.name}`;\n  }\n\n  /**\n   * Returns which keys to convert in distance or weight\n   */\n  static get convertKeys() {\n    return {\n      dv: \"distance\",\n      ts: \"distance\",\n      bse: \"distance\",\n      bs: \"distance\",\n      sc: \"distance\",\n      tr: \"distance\",\n    };\n  }\n\n  async getData() {\n    const actor = this.document;\n\n    const senses = foundry.utils.deepClone(actor.system.traits?.senses ?? {});\n    for (const [key, type] of Object.entries(this.constructor.convertKeys)) {\n      const value = senses[key];\n      if (type === \"distance\" && value > 0) {\n        senses[key] = pf1.utils.convertDistance(value)[0];\n      }\n    }\n\n    const isMetric = pf1.utils.getDistanceSystem() !== \"imperial\";\n\n    return {\n      noSystemVision:\n        !game.settings.get(\"pf1\", \"systemVision\") ||\n        (actor.token?.getFlag(\"pf1\", \"customVisionRules\") ??\n          actor.prototypeToken?.getFlag(\"pf1\", \"customVisionRules\")) ||\n        false,\n      senses,\n      isMetric,\n      gridUnits: isMetric ? game.i18n.localize(\"PF1.Distance.mShort\") : game.i18n.localize(\"PF1.Distance.ftShort\"),\n    };\n  }\n\n  async _updateObject(event, formData) {\n    formData = foundry.utils.expandObject(formData);\n    const senses = formData.system.traits.senses;\n\n    // Convert data back\n    Object.entries(this.constructor.convertKeys).forEach(([key, type]) => {\n      const value = senses[key];\n      if (value > 0 && type === \"distance\") {\n        senses[key] = pf1.utils.convertDistanceBack(value)[0];\n      }\n    });\n\n    // Delete undefined or disabled senses\n    // But only for linked actor since otherwise you can not override them to be disabled\n    if (!this.document.isToken) {\n      for (const [key, value] of Object.entries(senses)) {\n        if (!value) {\n          delete senses[key];\n          senses[`-=${key}`] = null;\n        }\n      }\n    }\n\n    // Update document\n    return super._updateObject(event, formData);\n  }\n}\n","import { openJournal } from \"../utils/lib.mjs\";\n\nexport class SkillEditor extends DocumentSheet {\n  constructor(actor, skillId, subSkillId, options = {}) {\n    super(actor, options);\n    this.skillId = skillId;\n    this.subSkillId = subSkillId;\n\n    this._callbacks = [];\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      width: 380,\n      template: \"systems/pf1/templates/apps/skill-editor.hbs\",\n      dragDrop: [{ dragSelector: null, dropSelector: \"*\" }],\n      classes: [...options.classes, \"pf1\", \"skill-editor\"],\n      submitOnChange: true,\n      closeOnSubmit: false,\n      submitOnClose: false,\n    };\n  }\n\n  get title() {\n    return `${game.i18n.localize(\"PF1.EditSkill\")}: ${this.skillName} – ${this.actor.name}`;\n  }\n\n  /** @type {ActorPF} */\n  get actor() {\n    return this.document;\n  }\n\n  /** @type {boolean} */\n  get isSubSkill() {\n    return !!this.subSkillId;\n  }\n\n  /** @type {boolean} */\n  get isStaticSkill() {\n    return pf1.config.skills[this.skillId] != null && !this.isSubSkill;\n  }\n\n  /** @type {object} */\n  get skill() {\n    if (this.isSubSkill) return this.actor.system.skills[this.skillId]?.subSkills[this.subSkillId];\n    return this.actor.system.skills[this.skillId];\n  }\n\n  /** @type {string} */\n  get skillName() {\n    return this.isStaticSkill ? pf1.config.skills[this.skillId] : this.skill.name;\n  }\n\n  /** @type {string} */\n  get skillTag() {\n    if (this.isStaticSkill) return this.skillId;\n    return this.isSubSkill ? this.subSkillId : this.skillId;\n  }\n\n  async getData() {\n    const data = await super.getData();\n\n    // Configuration\n    data.config = pf1.config;\n\n    // Skill data\n    data.skill = foundry.utils.mergeObject(\n      this.skill,\n      {\n        skillId: this.skillId,\n        subSkillId: this.subSkillId,\n        isSubSkill: this.isSubSkill,\n        name: this.skillName,\n        static: this.isStaticSkill,\n        tag: this.skillTag,\n      },\n      { inplace: false }\n    );\n\n    // Actor data\n    data.actorData = this.actor.toObject();\n\n    // Referenced documents\n    try {\n      const document = await fromUuid(data.skill.journal);\n      data.journal = document.toObject();\n      data.journal.uuid = data.skill.journal;\n      data.journal.documentType = document instanceof JournalEntryPage ? \"JournalEntryPage\" : \"JournalEntry\";\n    } catch (err) {\n      data.journal = null;\n    }\n\n    return data;\n  }\n\n  addCallback(fn) {\n    this._callbacks.push(fn);\n  }\n\n  async _updateObject(event, formData) {\n    event.preventDefault();\n\n    // Setup base update data\n    const updateData = { system: { skills: {} } };\n    const skillCoreUpdateData = updateData.system.skills;\n\n    formData = foundry.utils.expandObject(formData);\n    // Forcibly slugify provided tag to ensure it is not invalid (e.g. contain periods)\n    const tag = formData.tag?.slugify({ strict: true });\n    const newData = formData.skill;\n\n    // Track old IDs for rename related data deletion\n    const oldSubSkillId = this.subSkillId,\n      oldSkillId = this.skillId;\n\n    // Preserve some data\n    if (newData.journal === undefined) newData.journal ??= this.skill.journal;\n    if (newData.custom === undefined) newData.custom ??= this.skill.custom;\n\n    if (!this.isStaticSkill) {\n      newData.background ??= this.skill.background;\n    }\n\n    // Basic sanity check\n    if (!this.isStaticSkill && !tag) {\n      return void ui.notifications.error(game.i18n.localize(\"PF1.Error.EmptySkillTag\"));\n    }\n\n    const subSkillId = this.isSubSkill ? tag : null;\n    const skillId = !this.isSubSkill ? tag : this.skillId;\n\n    // Detect skill ID conflicts\n    const tagChanged = this.isSubSkill ? tag !== this.subSkillId : tag !== this.skillId;\n    if (tagChanged) {\n      const skillsData = this.isSubSkill ? this.actor.system.skills[skillId].subSkills : this.actor.system.skills;\n      if (tag in skillsData) {\n        const msgOpts = { tag: this.isSubSkill ? `${this.skillId}.subSkills.${tag}` : tag };\n        return void ui.notifications.error(game.i18n.format(\"PF1.Error.SkillTagAlreadyExists\", msgOpts));\n      }\n    }\n\n    // Change application's id by tag\n    if (tag) {\n      if (this.isSubSkill) this.subSkillId = tag;\n      else this.skillId = tag;\n    }\n\n    if (this.isSubSkill) {\n      skillCoreUpdateData[skillId] = { subSkills: { [subSkillId]: newData } };\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[skillId].subSkills[`-=${oldSubSkillId}`] = null;\n    } else {\n      skillCoreUpdateData[skillId] = newData;\n      // Delete old skill\n      if (tagChanged) skillCoreUpdateData[`-=${oldSkillId}`] = null;\n    }\n\n    return this.actor.update(updateData);\n  }\n\n  async close(...args) {\n    await super.close(...args);\n\n    this._callbacks.forEach((fn) => fn());\n  }\n\n  /**\n   * @override\n   */\n  _canDragDrop() {\n    // Allow non-GM to drop links as appropriate.\n    return this.isEditable;\n  }\n\n  async _onDrop(event) {\n    // Retrieve the dropped Journal Entry Page\n    const data = TextEditor.getDragEventData(event);\n    if (data.type !== \"JournalEntryPage\" && data.type !== \"JournalEntry\") return;\n    const document = await CONFIG[data.type].documentClass.implementation.fromDropData(data);\n    if (!document) return;\n\n    this._updateObject(event, this._getSubmitData({ \"skill.journal\": document.uuid }));\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Open compendium page\n    html.find(\".compendium-page\").on(\"click\", this._openCompendiumEntry.bind(this));\n    html.find(\".compendium-controls a\").on(\"click\", this._onCompendiumControls.bind(this));\n\n    // Submit\n    html.find(`button[type=\"submit\"]`).on(\"click\", (event) => {\n      event.preventDefault();\n      const valid = this.element[0].querySelector(\"form\").reportValidity();\n      if (valid) this.close({ submit: true });\n    });\n  }\n\n  async _openCompendiumEntry(event) {\n    event.preventDefault();\n    const elem = event.currentTarget.closest(\".compendium-entry\");\n\n    openJournal(elem.dataset.compendiumEntry);\n  }\n\n  async _onCompendiumControls(event) {\n    event.preventDefault();\n    const elem = event.currentTarget;\n\n    if (elem.classList.contains(\"delete\")) {\n      return this._updateObject(event, this._getSubmitData({ \"skill.journal\": null }));\n    }\n  }\n}\n","export class ContentSourceEditor extends DocumentSheet {\n  get title() {\n    const label = game.i18n.format(\"PF1.ContentSource.Title\", { name: this.document.name });\n    const actor = this.document.actor;\n    if (actor) return label + ` – ${actor.name}`;\n    return label;\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/content-source-editor.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      tabs: [\n        {\n          contentSelector: \"section.tabs\",\n          navSelector: \"nav.tabs[data-group='sources']\",\n          group: \"sources\",\n        },\n      ],\n      dragDrop: [{ dragSelector: \"nav.tabs .source\", dropSelector: null }],\n      width: 540,\n      height: \"auto\",\n      resizable: true,\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n      sheetConfig: false,\n      classes: [...options.classes, \"pf1\", \"content-source-editor\"],\n    };\n  }\n\n  /**\n   * @internal\n   * @override\n   * @returns {object}\n   */\n  getData() {\n    let canAdd = true;\n\n    let sources = this.document.system.sources ?? [];\n\n    // Prevent adding new sources if there's already an empty source\n    if (sources.some((src) => Object.keys(src).length === 0)) canAdd = false;\n\n    // Shallow clone sources for extra data\n    sources = sources.map((src) => {\n      const registry = pf1.registry.sources.get(src.id);\n      return {\n        ...src,\n        registry,\n      };\n    });\n\n    // Add default entry for editing when no entries exist\n    if (sources.length === 0) {\n      sources.push({ stub: true });\n      canAdd = false;\n    }\n\n    return {\n      sources,\n      registry: pf1.registry.sources,\n      uuid: this.document.uuid,\n      canAdd,\n    };\n  }\n\n  _getHeaderButtons() {\n    // HACK: Do not display import button\n    return super._getHeaderButtons().filter((b) => b.class !== \"import\");\n  }\n\n  /**\n   * @internal\n   * @param {Event} event\n   */\n  async _onAction(event) {\n    event.preventDefault();\n\n    const el = event.target;\n\n    if (el.classList.contains(\"disabled\")) return;\n\n    switch (el.dataset.action) {\n      case \"add\": {\n        this.form.disabled = true;\n        const sources = this.document.system.sources ?? [];\n        await this.document.update({ \"system.sources\": [...sources, {}] });\n        // Activate the newly created source tab\n        this.activateTab(`source-${sources.length}`);\n        break;\n      }\n      case \"delete\": {\n        const idx = Number(el.dataset.index);\n        if (Number.isFinite(idx) && idx >= 0) {\n          const src = this.document.system.sources[idx];\n          if (!src) return void this.render();\n          const name =\n            src.title || pf1.registry.sources.get(src.id)?.name || game.i18n.localize(\"PF1.ContentSource.NewEntry\");\n\n          const confirm = await Dialog.prompt({\n            title: game.i18n.format(\"PF1.ContentSource.DelTitle\", { entry: name }),\n            content: game.i18n.format(\"PF1.ContentSource.DelEntryDesc\", { entry: name }),\n            callback: () => true,\n            close: () => false,\n            rejectClose: false,\n          });\n\n          if (confirm !== true) return;\n\n          this.form.disabled = true;\n          const updated = await this.document.update({\n            \"system.sources\": this.document.system.sources.filter((_, sidx) => sidx !== idx),\n          });\n          if (!updated) this.render();\n        }\n        break;\n      }\n      default:\n        console.warn(\"Unrecognized action:\", el.dataset.action, el);\n        break;\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragStart(selector) {\n    if (this.document.inContainer) return false;\n    return true;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  _canDragDrop(selector) {\n    if (this.document.inContainer) return false;\n    return this.isEditable;\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  _onDragStart(event) {\n    const el = event.currentTarget;\n\n    const index = Number(el.dataset.index);\n    const src = this.document.system.sources?.[index];\n\n    if (!src) return false;\n\n    // Set drag data\n    const dragData = {\n      type: \"pf1ContentSourceEntry\",\n      uuid: this.document.uuid,\n      index,\n      data: {\n        ...src,\n      },\n    };\n\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(dragData));\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {DragEvent} event\n   */\n  async _onDrop(event) {\n    const dropData = TextEditor.getDragEventData(event);\n\n    switch (dropData.type) {\n      case \"pf1ContentSourceEntry\":\n        this._onDropContentSource(event, dropData);\n        break;\n    }\n  }\n\n  /**\n   * Handle content source drop\n   *\n   * @remarks\n   * - Does not work correctly when dealing with\n   * @internal\n   * @param {DragEvent} event\n   * @param {object} dropData\n   */\n  async _onDropContentSource(event, dropData) {\n    let el = event.target;\n    if (el.dataset.index === undefined) el = el.closest(\".source[data-index]\");\n    let dropIndex = Number(el?.dataset.index);\n\n    this.form.disabled = true;\n\n    const src = dropData.data;\n    const origin = fromUuidSync(dropData.uuid);\n    if (!origin) return;\n\n    // Sort\n    if (origin === this.document) {\n      if (!Number.isFinite(dropIndex) || dropIndex < 0) return;\n      if (dropIndex === dropData.index) return;\n      const sources = foundry.utils.deepClone(this.document.system.sources ?? []);\n      const [moved] = sources.splice(dropData.index, 1);\n      sources.splice(dropIndex, 0, moved);\n      this.document.update({ \"system.sources\": sources });\n    }\n    // Copy\n    else {\n      const sources = foundry.utils.deepClone(this.document.system.sources ?? []);\n\n      // Disallow same ID source copy\n      if (src.id && sources.some((osrc) => osrc.id === src.id)) return; // TODO: Add error notification?\n\n      // If dropped in odd location, add as last\n      if (!Number.isFinite(dropIndex)) dropIndex = sources.length;\n      sources.splice(dropIndex, 0, src);\n      this.document.update({ \"system.sources\": sources });\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    this.form\n      .querySelectorAll(\"header .control\")\n      .forEach((el) => el.addEventListener(\"click\", this._onAction.bind(this)));\n  }\n\n  /**\n   * Open editor application for defined document.\n   *\n   * @param {Actor|Item} document Item or Actor reference\n   * @returns {ContentSourceEditor} Reference to opened application.\n   */\n  static open(document) {\n    const app =\n      Object.values(ui.windows).find((app) => app instanceof this && app.object === document) ?? new this(document);\n    app.render(true, { focus: true });\n    return app;\n  }\n\n  _updateObject(event, updateData) {\n    updateData = foundry.utils.expandObject(updateData);\n\n    updateData.system.sources = Object.values(updateData.system.sources);\n\n    const sources = updateData.system.sources;\n    for (const source of sources) {\n      // Remove empty data\n      let empty = true;\n      for (const [key, value] of Object.entries(source)) {\n        if (value === null || value === \"\") {\n          delete source[key];\n        } else empty = false;\n      }\n\n      const registry = pf1.registry.sources.get(source.id);\n\n      // Empty data that is auto-filled from registry\n      if (registry) {\n        delete source.title;\n        delete source.publisher;\n      }\n\n      // Mark as empty for followup removal\n      if (empty) source.empty = true;\n    }\n\n    updateData.system.sources = updateData.system.sources.filter((s) => s.empty !== true);\n\n    return this.object.update(updateData);\n  }\n}\n","export class ExperienceDistributor extends FormApplication {\n  /**\n   * @type {number} - Bonus XP granted\n   */\n  _bonusXP = 0;\n\n  /**\n   * @type {XPDistributorActor[]} - Special actor data array\n   */\n  _actors = [];\n\n  /**\n   * @param {ActorPF[]} [actors] - Actors to add to this distributor.\n   * @param {object} [options] - Options for this application.\n   */\n  constructor(actors = [], options = {}) {\n    super(undefined, options);\n    this._actors = actors.map((o) => this.constructor.getActorData(o)).filter((o) => o != null);\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: [\"pf1\", \"xp-distributor\"],\n      title: game.i18n.localize(\"PF1.Application.XPDistributor.Title\"),\n      template: \"systems/pf1/templates/apps/xp-distributor.hbs\",\n      dragDrop: [{ dragSelector: null, dropSelector: \"form\" }],\n      submitOnChange: false,\n      submitOnClose: false,\n      closeOnSubmit: false,\n      width: 430,\n      height: 794,\n      resizable: true,\n      scrollY: [\".selectors\"],\n    });\n  }\n\n  getData() {\n    return {\n      // Add combatants\n      actors: {\n        characters: this.getCharacters(),\n        npcs: this.getNPCs(),\n      },\n\n      // Add labels\n      xp: {\n        total: this.getTotalExperience(),\n        split: this.getSplitExperience(),\n      },\n\n      bonusXP: this._bonusXP,\n    };\n  }\n\n  getCharacters() {\n    return this._actors.filter((o) => !o.isNPC);\n  }\n\n  getNPCs() {\n    return this._actors.filter((o) => o.isNPC);\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const html = this.form;\n\n    const addListener = (query, ev, callback) =>\n      html.querySelectorAll(query).forEach((elem) => elem.addEventListener(ev, callback));\n\n    addListener(\".character-selector .actor, .npc-selector .actor\", \"click\", this._onClickActor.bind(this));\n\n    addListener(\".bonus-xp input\", \"change\", (event) => {\n      event.preventDefault();\n\n      this._bonusXP = parseInt(event.currentTarget.value);\n      if (isNaN(this._bonusXP)) this._bonusXP = 0;\n\n      this.render();\n    });\n\n    addListener(\"button.cancel\", \"click\", this._onCancel.bind(this));\n    addListener(\"button[data-reward]\", \"click\", this._onSubmit.bind(this));\n  }\n\n  async _onDrop(event) {\n    event.preventDefault();\n    const data = TextEditor.getDragEventData(event);\n\n    if (data.type !== \"Actor\") return;\n\n    // Add actor\n    const actor = await pf1.documents.actor.ActorPF.fromDropData(data);\n\n    // Prevent duplicate characters (not NPCs)\n    if (actor.type !== \"character\" || this._actors.find((o) => o.actor === actor) == null) {\n      // Add actor to list\n      const actorData = this.constructor.getActorData(actor);\n      actorData.selected = true;\n      this._actors.push(actorData);\n\n      this.render();\n    }\n  }\n\n  _onClickActor(event) {\n    event.preventDefault();\n\n    const el = event.currentTarget;\n    const actorID = el.dataset.id;\n    const actor = this._actors.find((o) => o.id === actorID);\n\n    if (!actor) return;\n\n    if (actor.selected) {\n      actor.selected = false;\n      el.classList.remove(\"toggled\");\n    } else {\n      actor.selected = true;\n      el.classList.add(\"toggled\");\n    }\n\n    this.render();\n  }\n\n  async _onSubmit(event) {\n    event.preventDefault();\n\n    const button = event.currentTarget;\n    const splitEvently = button.dataset.reward === \"split\";\n\n    const value = splitEvently ? this.getSplitExperience() : this.getTotalExperience();\n\n    if (value > 0) {\n      const characters = this.getCharacters().filter((o) => o.selected);\n\n      for (const actorData of characters) {\n        const result = { value };\n        Hooks.callAll(\"pf1GainXp\", actorData.actor, result);\n        actorData.value = Math.floor(result.value);\n      }\n\n      const updates = characters\n        .filter((o) => o.value > 0 && Number.isSafeInteger(o.value))\n        .map((o) => ({\n          _id: o.actor.id,\n          \"system.details.xp.value\": o.actor.system.details.xp.value + o.value,\n        }));\n\n      Actor.implementation.updateDocuments(updates);\n    }\n\n    this.close();\n  }\n\n  _onCancel(event) {\n    event.preventDefault();\n\n    this.close();\n  }\n\n  /**\n   * Total experience the encounter is worth, including regular XP reward and bonus XP.\n   *\n   * @returns {number} - Total value\n   */\n  getTotalExperience() {\n    const npcs = this.getNPCs().filter((o) => o.selected);\n    return npcs.reduce((cur, o) => cur + o.xp, this._bonusXP);\n  }\n\n  /**\n   * Split experience, as split across all characters.\n   *\n   * @returns {number} - Reward value\n   */\n  getSplitExperience() {\n    const characters = this.getCharacters().filter((o) => o.selected);\n    if (characters.length == 0) return 0;\n\n    const xp = this.getTotalExperience();\n\n    return Math.floor(xp / characters.length);\n  }\n\n  /**\n   * @protected\n   * @param {Actor} actor\n   * @returns {XPDistributorActor}\n   */\n  static getActorData(actor) {\n    if (!(actor instanceof Actor)) return null;\n\n    const xp = actor.system.details?.xp?.value ?? 0;\n\n    return {\n      id: foundry.utils.randomID(16),\n      isNPC: actor.type !== \"character\",\n      actor,\n      selected: this._shouldActorBeSelected(actor),\n      xp,\n      xpString: xp.toLocaleString(),\n    };\n  }\n\n  /**\n   * Should the actor be selected by default.\n   *\n   * @param {Actor} actor\n   * @returns {boolean}\n   */\n  static _shouldActorBeSelected(actor) {\n    const isPC = actor.type === \"character\";\n    if (isPC) return true;\n\n    const isDefeated = actor.system.attributes?.hp?.value < 0;\n    return isDefeated;\n  }\n\n  /**\n   * Open XP distributor dialog based on passed combat instance.\n   *\n   * @param {Combat} combat - Combat instance\n   * @returns {ExperienceDistributor} - Application instance\n   */\n  static fromCombat(combat) {\n    const app = new this(combat.combatants.map((c) => c.actor));\n\n    if (app.getCharacters().length > 0) {\n      app.render(true);\n    } else {\n      app.close();\n    }\n\n    return app;\n  }\n}\n\n/**\n * @typedef {object} XPDistributorActor\n * @property {string} id - Internal reference ID\n * @property {ActorPF} actor - Actor instance\n * @property {boolean} isNPC - Is this an NPC?\n * @property {boolean} selected - Is the actor selected\n * @property {number} xp\n * @property {string} xpString\n */\n","import { getBuffTargetDictionary, getBuffTargets } from \"@utils\";\nimport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\n\n/**\n * Change Editor\n *\n * @since PF1 v10\n */\nexport class ChangeEditor extends ItemSheet {\n  /** @type {ItemChange} */\n  change;\n\n  constructor(change, options) {\n    super(change.parent, options);\n    this.change = change;\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"change-editor\"],\n      template: \"systems/pf1/templates/apps/change-editor.hbs\",\n      submitOnChange: true,\n      submitOnClose: true,\n      closeOnSubmit: false,\n      sheetConfig: false,\n      width: 460,\n      height: \"auto\",\n    };\n  }\n\n  /**\n   * @remarks Remove all header buttons except for close\n   * @override\n   */\n  _getHeaderButtons() {\n    return super._getHeaderButtons().filter((b) => b.class === \"close\");\n  }\n\n  /**\n   * Replace ID link creation.\n   *\n   * Synchronized with Foundry v11.315\n   *\n   * @override\n   */\n  _createDocumentIdLink(html) {\n    const title = html.find(\".window-title\");\n    const label = game.i18n.localize(\"PF1.Change\");\n    const idLink = document.createElement(\"a\");\n    idLink.classList.add(\"document-id-link\");\n    idLink.setAttribute(\"alt\", game.i18n.localize(\"PF1.Application.ChangeEditor.CopyId\"));\n    idLink.dataset.tooltip = `${label}: ${this.change.id}`;\n    idLink.dataset.tooltipDirection = \"UP\";\n    idLink.innerHTML = '<i class=\"fa-solid fa-passport\"></i>';\n    idLink.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      game.clipboard.copyPlainText(this.object.id);\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label, type: \"id\", id: this.change.id }));\n    });\n    title.append(idLink);\n  }\n\n  get title() {\n    let title = game.i18n.localize(\"PF1.Application.ChangeEditor.Label\");\n    title += \": \" + this.item.name;\n    if (this.actor) title += \" – \" + this.actor.name;\n    return title;\n  }\n\n  get id() {\n    return super.id + \"-Change-\" + this.change.id;\n  }\n\n  getData() {\n    const change = this.change,\n      actor = this.actor,\n      item = this.item;\n\n    const buffTargets = getBuffTargets(actor);\n    const target = buffTargets[change.target];\n\n    const context = {\n      config: pf1.config,\n      actor,\n      item,\n      change,\n      isAdd: change.operator === \"add\",\n      isSet: change.operator === \"set\",\n      isValid: !!target,\n      isValidType: !!pf1.config.bonusTypes[change.type],\n      isValidOp: [\"add\", \"set\"].includes(change.operator),\n      isDeferred: change.isDeferred,\n      label: target?.label || change.target,\n    };\n\n    return context;\n  }\n\n  _onChangeTargetControl(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    // Prepare categories and changes to display\n    const categories = getBuffTargetDictionary(this.item.actor);\n\n    // Sort specific categories\n    const sortable = new Set([\"skill\"]);\n    const lang = game.settings.get(\"core\", \"language\");\n    for (const category of categories) {\n      if (!sortable.has(category.key)) continue;\n      category.items.sort((a, b) => a.label.localeCompare(b.label, lang));\n    }\n\n    const part1 = this.change?.target?.split(\".\")[0];\n    const category = pf1.config.buffTargets[part1]?.category ?? part1;\n\n    // Show widget\n    const w = new Widget_CategorizedItemPicker(\n      { title: \"PF1.Application.ChangeTargetSelector.Title\", classes: [\"change-target-selector\"] },\n      categories,\n      (key) => {\n        if (key) {\n          this.change.update({ target: key });\n        }\n      },\n      { category, item: this.change?.target }\n    );\n    w.render(true);\n  }\n\n  _openHelpBrowser(event) {\n    event.preventDefault();\n    const a = event.currentTarget;\n\n    pf1.applications.helpBrowser.openUrl(a.dataset.url);\n  }\n\n  /**\n   * Validate input formula for basic errors.\n   *\n   * @internal\n   * @param {HTMLElement} el\n   */\n  async _validateFormula(el) {\n    const formula = el.value;\n    if (!formula) return;\n\n    let roll;\n    // Test if formula even works\n    try {\n      roll = Roll.create(formula);\n      await roll.evaluate();\n    } catch (e) {\n      el.dataset.tooltip = e.message;\n      el.setCustomValidity(e.message);\n      return;\n    }\n\n    // Deterministic formulas must be deterministic\n    if (el.classList.contains(\"deterministic\")) {\n      if (!roll.isDeterministic) {\n        el.dataset.tooltip = \"PF1.WarningFormulaMustBeDeterministic\";\n        el.setCustomValidity(game.i18n.localize(\"PF1.WarningFormulaMustBeDeterministic\"));\n      }\n    }\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n\n    // Modify changes\n    html.find(\".target .change-target\").click(this._onChangeTargetControl.bind(this));\n\n    // Open help browser\n    html.find(\"a.help-browser[data-url]\").click(this._openHelpBrowser.bind(this));\n\n    // Add warning about formulas\n    html.find(\"input.formula\").each(async (_, el) => this._validateFormula(el));\n\n    this.form.reportValidity();\n  }\n\n  /**\n   * @param {ItemChange} change - Change to modify\n   * @param {object} options - Application options\n   * @returns {Promise<void|ChangeEditor>} - Promise that resolves when the app is closed. Returns application instance if no new instance was created.\n   */\n  static async wait(change, options) {\n    const old = Object.values(ui.windows).find((app) => app.change === change && app instanceof this);\n    if (old) {\n      old.render(true, { focus: true });\n      return old;\n    }\n\n    return new Promise((resolve) => {\n      const app = new this(change, options);\n      app.resolve = resolve;\n      app.render(true, { focus: true });\n    });\n  }\n\n  /**\n   * @override\n   * @param {Event} event\n   * @param {object} formData\n   */\n  _updateObject(event, formData) {\n    //if (!this.form.checkValidity()) return;\n    const updateData = foundry.utils.expandObject(formData).change;\n    this.change.update(updateData);\n  }\n}\n","export class ItemDirectoryPF extends ItemDirectory {\n  /**\n   * Enrich default options for detecting identified/unidentified name changes\n   *\n   * @override\n   */\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    options.renderUpdateKeys.push(\"system.unidentified.name\", \"system.identified\");\n    return options;\n  }\n\n  /**\n   * Override Foundry's render to catch unidentified name changes (Foundry's \"k in d\" doesn't work).\n   *\n   * @override\n   */\n  async _render(force = false, context = {}) {\n    // Only re-render the sidebar directory for certain types of updates\n    const { action, data, documentType } = context;\n    if (action && ![\"create\", \"update\", \"delete\"].includes(action)) return this;\n    if (\n      documentType !== \"Folder\" &&\n      action === \"update\" &&\n      !data.some((d) => this.options.renderUpdateKeys.some((k) => foundry.utils.getProperty(d, k) !== undefined))\n    )\n      return;\n\n    // Re-build the tree and render\n    this.initialize();\n    // Skip ItemDirectory & SidebarDirectory _render, both of which use k in d culling\n    return SidebarTab.prototype._render.call(this, force, context);\n  }\n}\n","export class Troubleshooter extends Application {\n  // Are packs to be unlocked?\n  unlock = false;\n\n  // Migration state\n  migrating = { world: false, modules: false };\n\n  get title() {\n    return game.i18n.localize(\"PF1.Troubleshooter.Title\");\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/troubleshooter.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"troubleshooter\"],\n      id: \"pf1-troubleshooter\",\n      width: 460,\n    };\n  }\n\n  getData() {\n    return {\n      isGM: game.user.isGM,\n      unlockPacks: this.unlock,\n      migrating: this.migrating,\n      links: {\n        help: `<a data-action='help'>${game.i18n.localize(\"PF1.Troubleshooter.Steps.HelpLink\")}</a>`,\n        report: `<a href=\"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/issues\">${game.i18n.localize(\n          \"PF1.Troubleshooter.Steps.ReportLinkText\"\n        )}</a>`,\n        foundry: {\n          kb: `<a href=\"https://foundryvtt.com/kb/\">${game.i18n.localize(\"PF1.Troubleshooter.Steps.FoundryLink\")}</a>`,\n          discord: `<a href=\"https://discord.gg/foundryvtt\">Foundry VTT</a>`,\n          channel: \"#pf1\",\n        },\n        faq: \"https://gitlab.com/foundryvtt_pathfinder1e/foundryvtt-pathfinder1/-/wikis/FAQs\",\n        helpmodule: `<a href=\"https://foundryvtt.com/packages/find-the-culprit\">Find the Culprit</a>`,\n      },\n    };\n  }\n\n  /**\n   * @param {Event} event\n   */\n  async _runMigration(event) {\n    const unlock = this.unlock ?? false;\n\n    /** @type {Element} */\n    const el = event.target;\n    if (el.disabled) return;\n\n    el.classList.remove(\"finished\");\n    el.disabled = true;\n    el.classList.add(\"active\");\n\n    const target = el.dataset.target;\n    const top = el.closest(\".window-content\").getBoundingClientRect().top + 20;\n\n    switch (target) {\n      case \"world\":\n        this.migrating.world = true;\n        await pf1.migrations.migrateWorld({ unlock, dialog: { top } });\n        this.migrating.world = false;\n        break;\n      case \"modules\":\n        this.migrating.modules = true;\n        await pf1.migrations.migrateModules({ unlock, dialog: { top } });\n        this.migrating.modules = false;\n        break;\n      default:\n        throw new Error(`Unrecognized migration target: \"${target}\"`);\n    }\n\n    this.element[0].querySelector(\"form\").classList.remove(\"migrating\");\n    el.disabled = false;\n    el.classList.remove(\"active\");\n    el.classList.add(\"finished\");\n  }\n\n  _openHelp(event) {\n    pf1.applications.helpBrowser.openUrl(\"Help/Home\");\n  }\n\n  /**\n   * @param {JQuery} jq\n   * @override\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const [html] = jq;\n\n    const migrationButtons = html.querySelectorAll(\"button[data-action='migrate']\");\n\n    for (const button of migrationButtons) {\n      button.addEventListener(\"click\", this._runMigration.bind(this));\n    }\n\n    // React to external migration to minimal degree\n    if (pf1.migrations.isMigrating) {\n      this.migrating.world = true;\n      this.migrating.modules = true;\n      for (const button of migrationButtons) {\n        button.disabled = true;\n        button.classList.add(\"active\");\n      }\n\n      Hooks.once(\"pf1MigrationFinished\", () => {\n        for (const button of migrationButtons) {\n          button.disabled = false;\n          this.migrating.world = false;\n          this.migrating.modules = false;\n        }\n      });\n    }\n\n    html\n      .querySelector(\"input[name='unlock']\")\n      .addEventListener(\"change\", (event) => (this.unlock = event.target.checked));\n\n    html.querySelector(\"a[data-action='help']\").addEventListener(\"click\", this._openHelp.bind(this));\n  }\n\n  static open() {\n    new Troubleshooter().render(true, { focus: true });\n  }\n}\n","/**\n * Actor choice dialog.\n */\nexport class ActorSelector extends FormApplication {\n  static searchOptions = {\n    delay: 250,\n    value: \"\",\n    event: null,\n    compositioning: false,\n    effectiveSearch: \"\",\n  };\n\n  constructor(\n    {\n      actors,\n      filter,\n      disableUnowned = true,\n      ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED,\n      selected = null,\n      showUnowned = true,\n    } = {},\n    options\n  ) {\n    super({}, options);\n\n    this.actors = actors ?? [...game.actors];\n    this.disableUnowned = disableUnowned;\n    this.filterFunc = filter;\n    this.ownership = ownership;\n    this.search = { ...ActorSelector.searchOptions };\n    this.selected = selected || \"\";\n    this.showUnowned = showUnowned;\n\n    if (!this.actors) throw new Error(\"No actors list provided.\");\n  }\n\n  get title() {\n    return this.options.title || game.i18n.localize(\"PF1.Application.ActorSelector.Title\");\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/actor-select.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"actor-selector\"],\n      scrollY: [\".actor-list\"],\n      height: \"auto\",\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      resizable: true,\n    };\n  }\n\n  getData() {\n    const gmActive = !!game.users.activeGM;\n    let actorList = this.filterFunc ? this.actors.filter(this.filterFunc) : [...this.actors];\n\n    // Filter the list by the search term as well.\n    if (this.search.value) {\n      actorList = actorList.filter((actor) => actor.name.toLowerCase().includes(this.search.value.toLowerCase()));\n    }\n\n    // Make sure the list is sorted alphabetically\n    actorList.sort((a, b) => a.name.localeCompare(b.name));\n\n    // Prepare the data separately for owned and unowned actors.\n    const ownedActors = actorList\n      .filter((actor) => actor.isOwner)\n      .map((actor) => {\n        return {\n          id: actor.id,\n          name: actor.name,\n          img: actor.img,\n          isDisabled: false,\n        };\n      });\n\n    const unownedActors = actorList\n      .filter((actor) => !actor.isOwner && actor.testUserPermission(game.user, this.ownership))\n      .map((actor) => {\n        return {\n          id: actor.id,\n          name: actor.name,\n          img: actor.img,\n          isDisabled: !gmActive && this.disableUnowned,\n        };\n      });\n\n    return {\n      selected: this.selected || \"\",\n      ownedActors,\n      unownedActors,\n      showUnowned: game.user.isGM ? false : this.showUnowned,\n      searchTerm: this.search.value,\n    };\n  }\n\n  close(...args) {\n    super.close(...args);\n    this.resolve?.(null);\n  }\n\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    const button = jq[0].querySelector(\"button.commit-select\");\n\n    button.addEventListener(\"click\", this._onSaveSelection.bind(this));\n\n    const sb = jq.find(\".search-input\");\n    sb.on(\"keyup change\", this._searchFilterChange.bind(this));\n    sb.on(\"compositionstart compositionend\", this._searchFilterCompositioning.bind(this)); // for IME\n    jq.find(\".clear-search\").on(\"click\", this._clearSearch.bind(this));\n  }\n\n  _onSaveSelection(_event) {\n    this.resolve?.(this.selected || \"\");\n    this.close();\n  }\n\n  _updateObject(_event, formData) {\n    this.selected = formData.selected;\n    this.render();\n  }\n\n  /**\n   *  Process the search input and filter the actor list(s) on the fly.\n   *\n   * @param {Event} event - The triggering event\n   * @returns {void}\n   */\n  _searchFilterCommit(event) {\n    const searchTerm = this.search.value.toLowerCase();\n\n    // Skip if the search term is the same as the last one\n    if (this.search.effectiveSearch === searchTerm) return;\n    this.search.effectiveSearch = searchTerm;\n    this.render(true);\n  }\n\n  _clearSearch(event) {\n    const sb = $(event.target).prev(\".search-input\");\n    this.search.value = \"\";\n    sb.val(\"\").trigger(\"change\");\n  }\n\n  // IME related\n  _searchFilterCompositioning(event) {\n    this.search.compositioning = event.type === \"compositionstart\";\n  }\n\n  /**\n   * Update the search term and set a timeout to commit the search.\n   *\n   * @param {Event} event - The triggering event\n   * @returns {void}\n   */\n  _searchFilterChange(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Accept input only while not compositioning\n\n    const searchTerm = event.target.value;\n    const changed = this.search.value !== searchTerm;\n\n    if (this.search.compositioning || changed) clearTimeout(this.search.event); // reset\n    if (this.search.compositioning) return;\n\n    //if (unchanged) return; // nothing changed\n    this.search.value = searchTerm;\n\n    if (event.type === \"keyup\") {\n      // Delay search\n      if (changed) this.search.event = setTimeout(() => this._searchFilterCommit(event), this.search.delay);\n    } else {\n      this._searchFilterCommit(event);\n    }\n  }\n\n  /**\n   * Render actor selector and wait for it to resolve.\n   *\n   * @param {object} options - Options\n   * @param {Actor[]} [options.actors] - The actors list to choose from.\n   * @param {boolean} [options.disableUnowned=true] - Disable interactions with unowned actors.\n   * @param {Function} options.filter - Filter function\n   * @param {*} options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED - Minimum Ownership level\n   * @param {string} [options.selected=null] - Already selected actor ID.\n   * @param {boolean} [options.showUnowned=true] - Whether to show unowned actors.\n   * @param {object} [renderOptions] - Render options\n   * @param {object} [appOptions] - Application options\n   * @param options.ownership\n   * @returns {Promise<string|null>} - Actor ID or null if cancelled.\n   */\n  static wait(\n    {\n      actors,\n      filter,\n      disableUnowned = true,\n      ownership = CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED,\n      selected = null,\n      showUnowned = true,\n    } = {},\n    appOptions,\n    renderOptions\n  ) {\n    return new Promise((resolve) => {\n      const app = new this({ actors, filter, disableUnowned, ownership, selected, showUnowned }, appOptions);\n      app.resolve = resolve;\n      app.render(true, renderOptions);\n    });\n  }\n}\n","/**\n * Stack splitting dialog\n *\n * @example\n * ```js\n * const result = await pf1.applications.SplitStack.wait({ title: \"My Stuff\", initial: 50, total: 100 });\n * if (!result) throw new Error(\"Fsck!\");\n * const [keep,split] = result;\n * console.log(`I keep ${keep} and you get ${split}`);\n * ```\n */\nexport class SplitStack extends Dialog {\n  /**\n   * Wait for user interaction to finish.\n   *\n   * @param {object} options - Options\n   * @param {string} [options.title] - Dialog title\n   * @param {number} options.initial - Initial value\n   * @param {number} options.total - Total value to split.\n   * @param {number} [options.step] - Value stepping.\n   * @param {string[]} [options.css] - Optional CSS selectors to add to the dialog.\n   * @param {object} renderOptions - Render options to pass to Dialog\n   * @returns {number[]|null} - Number tuple, to keep and to split values. Null if cancelled.\n   */\n  static async wait({ title, initial = 1, step = 1, total, css = [] } = {}, renderOptions = {}) {\n    // Can't split\n    if (total <= 1) return null;\n    // Only one answer\n    if (total == 2) return [1, 1];\n\n    step ||= 1;\n    initial = Math.clamped(initial || 0, 1, total);\n    const max = total - 1;\n\n    const content = await renderTemplate(\"systems/pf1/templates/apps/split-stack.hbs\", {\n      initial,\n      keep: total - initial,\n      max,\n    });\n\n    return super.wait(\n      {\n        title,\n        content,\n        buttons: {\n          split: {\n            // icon: `<i class=\"fas fa-people-arrows></i>`,\n            label: game.i18n.localize(\"PF1.Split\"),\n            callback: async ([html]) => {\n              const splitValue = Math.clamped(html.querySelector(`input.split`).valueAsNumber, 1, max);\n              if (Number.isNumeric(splitValue)) {\n                return [Math.max(1, total - splitValue), splitValue];\n              }\n              return null;\n            },\n          },\n        },\n        render: ([html]) => {\n          const slider = html.querySelector(\"input.slider\");\n          const oldstack = html.querySelector(\"input.left\");\n          const newstack = html.querySelector(\"input.split\");\n          slider.addEventListener(\n            \"input\",\n            (ev) => {\n              const newval = ev.target.valueAsNumber;\n              newstack.value = newval;\n              oldstack.value = total - newval;\n            },\n            { passive: true }\n          );\n          newstack.addEventListener(\n            \"input\",\n            (ev) => {\n              let newval = ev.target.valueAsNumber;\n              if (newval > max) {\n                newstack.value = max;\n                newval = max;\n              } else if (newval < 1) {\n                newstack.value = 1;\n                newval = 1;\n              }\n              slider.value = newval;\n              oldstack.value = total - newval;\n            },\n            { passive: true }\n          );\n          oldstack.addEventListener(\"input\", (ev) => {\n            let newval = total - ev.target.valueAsNumber;\n            if (newval > total) {\n              oldstack.value = max;\n              newval = 1;\n            } else if (newval < 1) {\n              oldstack.value = 1;\n              newval = max;\n            }\n            newstack.value = newval;\n            slider.value = newval;\n          });\n        },\n        close: () => null,\n        default: \"split\",\n      },\n      {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"split-stack\", ...css],\n      },\n      renderOptions\n    );\n  }\n}\n","/**\n * The various {@link Application}s used by the Pathfinder 1e system.\n *\n * @module\n */\n\nimport { CompendiumBrowser } from \"./compendium-browser/compendium-browser.mjs\";\n\nexport * as actor from \"./actor/_module.mjs\";\nexport * as item from \"./item/_module.mjs\";\nexport * as component from \"./component/_module.mjs\";\nexport * as settings from \"./settings/_module.mjs\";\nexport * as compendiumBrowser from \"./compendium-browser/_module.mjs\";\n\nexport { ActionSelector } from \"./action-selector.mjs\";\nexport { AttackDialog } from \"./attack-dialog.mjs\";\nexport { Widget_CategorizedItemPicker } from \"./categorized-item-picker.mjs\";\nexport { ChangeLogWindow } from \"./change-log.mjs\";\nexport { CurrencyTransfer } from \"./currency-transfer.mjs\";\nexport { DamageTypeSelector } from \"./damage-type-selector.mjs\";\nexport { EntrySelector } from \"./entry-selector.mjs\";\nexport { ItemSelector } from \"./item-selector.mjs\";\nexport { HelpBrowserPF } from \"./help-browser.mjs\";\nexport { Widget_ItemPicker } from \"./item-picker.mjs\";\nexport { LevelUpForm } from \"./level-up.mjs\";\nexport { PointBuyCalculator } from \"./point-buy-calculator.mjs\";\nexport { ScriptEditor } from \"./script-editor.mjs\";\nexport { SensesSelector } from \"./senses-selector.mjs\";\nexport { SkillEditor } from \"./skill-editor.mjs\";\nexport { ContentSourceEditor } from \"./content-source-editor.mjs\";\nexport { TooltipPF } from \"./tooltip.mjs\";\nexport { ActorTraitSelector } from \"./trait-selector.mjs\";\nexport { VisionSharingSheet } from \"./vision-sharing.mjs\";\nexport { ExperienceDistributor } from \"./xp-distributor.mjs\";\nexport { ChangeEditor } from \"./change-editor.mjs\";\n\nexport { ItemDirectoryPF } from \"./sidebar/items-directory.mjs\";\nexport { Troubleshooter } from \"./troubleshooter.mjs\";\n\nexport { ActorSelector } from \"./actor-selector.mjs\";\nexport { SplitStack } from \"./split-stack.mjs\";\n\n/**\n * {@link CompendiumBrowser}s for the various compendiums.\n *\n * @type {Record<string, CompendiumBrowser>}\n */\nexport const compendiums = {};\nexport { helpBrowser } from \"./help-browser.mjs\";\n","export class ActiveEffectPF extends ActiveEffect {\n  /**\n   * @internal\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Creation context\n   * @param {User} user - Triggering user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const actor = this.actor;\n    if (!actor) return;\n\n    // Record current initiative\n    // But only if the current actor is in combat\n    const combat = actor.getCombatants()[0]?.combat;\n    if (combat) {\n      // Set flag only if it doesn't exist in the data already\n      if (this.getFlag(\"pf1\", \"initiative\") === undefined) {\n        this.updateSource({ \"flags.pf1.initiative\": combat.initiative });\n      }\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} data - Creation data\n   * @param {object} context - Context\n   * @param {string} userId - Triggering user\n   */\n  _onCreate(data, context, userId) {\n    super._onCreate(data, context, userId);\n\n    if (userId !== game.user.id) return;\n\n    if (this.parent instanceof Actor) return;\n\n    if (!this.isTracker) return;\n\n    if (!this.isSuppressed && !this.parent.isActive) {\n      this.parent.setActive(true, { pf1: { reason: \"effect-creation\" } });\n    }\n  }\n\n  /**\n   * @override\n   * @param {object} context - Delete context\n   * @param {string} userId - Triggering user\n   */\n  _onDelete(context, userId) {\n    super._onDelete(context, userId);\n\n    if (userId !== game.user.id) return;\n\n    if (this.parent instanceof Actor) return;\n    if (!this.isTracker) return;\n\n    // Disable associated buff if found\n    if (context.pf1?.delete !== this.parent.uuid && this.parent.isActive) {\n      context.pf1 ??= {};\n      context.pf1.startTime = this.duration.startTime;\n      this.parent.setActive(false, context);\n    }\n  }\n\n  /**\n   * @override\n   * @type {boolean}\n   */\n  _onUpdate(changed, context, userId) {\n    super._onUpdate(changed, context, userId);\n\n    if (game.user.id !== userId) return;\n\n    if (this.isSuppressed) return;\n\n    if (changed.disabled !== undefined) {\n      if (this.parent instanceof Item) {\n        this.parent.setActive?.(!this.disabled, context);\n      }\n    }\n  }\n\n  /**\n   * @type {Actor|null} Parent actor or null.\n   */\n  get actor() {\n    const parent = this.parent;\n    if (parent instanceof Actor) return parent;\n    else return parent?.actor || null;\n  }\n\n  /**\n   * @remarks BUG: Foundry v11 and older controls visibility through this.\n   * @override\n   * @type {boolean}\n   */\n  get isTemporary() {\n    if (this.getFlag(\"pf1\", \"show\") === false || game.settings.get(\"pf1\", \"hideTokenConditions\")) return false;\n\n    return super.isTemporary || this.getFlag(\"pf1\", \"show\") || false;\n  }\n\n  /**\n   * Temporary solution until Foundry v12 to deal with problems of isTemporary.\n   *\n   * @internal\n   */\n  get _hasDuration() {\n    const duration = this.duration.seconds ?? (this.duration.rounds || this.duration.turns) ?? 0;\n    return duration > 0;\n  }\n\n  /** @type {number|undefined} - Initiative counter if this effect started during combat */\n  get initiative() {\n    return this.getFlag(\"pf1\", \"initiative\");\n  }\n\n  /** @type {boolean} - Is this tracking buff active state and duration? */\n  get isTracker() {\n    return this.getFlag(\"pf1\", \"tracker\") ?? false;\n  }\n\n  get isSuppressed() {\n    if (this.parent instanceof Item) return this.parent?.isActive === false;\n    return false;\n  }\n}\n","import { ActorPF } from \"./actor/actor-pf.mjs\";\nimport { getSkipActionPrompt } from \"./settings.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\n/* -------------------------------------------- */\n\n/**\n * @internal\n * @param {string} combatantId - Combatant ID\n */\nasync function duplicateCombatantInitiativeDialog(combatantId) {\n  /** @type {CombatantPF} */\n  const combatant = game.combat.combatants.get(combatantId);\n  if (!combatant) return void ui.notifications.warn(game.i18n.localize(\"PF1.Warning.NoCombatantFound\"));\n\n  const offset = await pf1.utils.dialog.getNumber({\n    title: `${game.i18n.localize(\"PF1.DuplicateInitiative\")}: ${combatant.name}`,\n    label: game.i18n.localize(\"PF1.InitiativeOffset\"),\n    initial: 0,\n    classes: [\"duplicate-initiative\"],\n  });\n\n  if (!Number.isFinite(offset)) return; // Cancelled\n\n  return combatant.duplicateWithData({ initiative: (combatant.initiative ?? 0) + offset });\n}\n\n// Deprecated\nexport const duplicateCombatantInitiative = function (combat, combatant, initiative) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.documents.duplicateCombatantInitiative() is deprecated in favor of CombatantPF.duplicateWithData()\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n  return combatant.duplicateWithData({ initiative });\n};\n\nHooks.on(\"getCombatTrackerEntryContext\", function addCombatTrackerContextOptions(html, menuItems) {\n  menuItems.push({\n    name: \"PF1.DuplicateInitiative\",\n    icon: '<i class=\"fas fa-dice-d20\"></i>',\n    callback: ([li]) => duplicateCombatantInitiativeDialog(li.dataset.combatantId),\n  });\n});\n\nexport class CombatPF extends Combat {\n  /**\n   * @override\n   * @param {string[]} ids Combatant IDs to roll initiative for.\n   * @param {object} [options={}] - Additional options\n   * @param {string} [options.bonus=null] - Formula for bonus to initiative\n   * @param {string} [options.rollMode] - Roll mode override\n   * @param {boolean} [options.skipDialog=null] - Skip roll dialog\n   */\n  async rollInitiative(\n    ids,\n    { formula = null, d20, bonus = null, rollMode, updateTurn = true, messageOptions = {}, skipDialog = null } = {}\n  ) {\n    skipDialog ??= getSkipActionPrompt();\n    // Structure input data\n    ids = Array.isArray(ids) ? ids : [ids];\n\n    const currentId = this.combatant?.id;\n\n    const firstCombatant = this.combatants.get(ids[0]);\n    const rollerName =\n      (ids.length > 1 ? firstCombatant?.actor?.name : firstCombatant?.token?.name) ?? firstCombatant?.name;\n\n    // Show initiative dialog\n    if (!skipDialog) {\n      const dialogData = await Combat.implementation.showInitiativeDialog({\n        d20,\n        bonus,\n        rollMode,\n        name: rollerName,\n      });\n      rollMode = dialogData.rollMode;\n      bonus = dialogData.bonus || \"\";\n      d20 = dialogData.d20;\n      if (dialogData.stop) return this;\n    }\n\n    // Iterate over Combatants, performing an initiative roll for each\n    const [updates, messages] = await ids.reduce(\n      async (results, id, i) => {\n        const result = await results;\n        const [updates, messages] = result;\n\n        // Get Combatant data (non-strictly)\n        /** @type {CombatantPF} */\n        const combatant = this.combatants.get(id);\n        if (!combatant?.isOwner) return results;\n\n        // Produce an initiative roll for the Combatant\n        const roll = combatant.getInitiativeRoll(formula, d20, bonus);\n        roll.options.flavor = game.i18n.localize(\"PF1.Initiative\");\n        await roll.evaluate();\n        updates.push({ _id: id, initiative: roll.total });\n\n        // Produce an initiative roll for the Combatant\n        const isHidden = combatant.token?.hidden || combatant.hidden;\n        if (isHidden) rollMode = messageOptions.rollMode ?? \"gmroll\";\n\n        if (roll.err) ui.notifications.warn(roll.err.message);\n\n        const [notes, notesHTML] = combatant.actor?.getInitiativeContextNotes?.() ?? [];\n\n        // Create card template data\n        const templateData = {\n          formula: roll.formula,\n          tooltip: await roll.getTooltip(),\n          total: roll.total,\n          extraText: notesHTML,\n        };\n\n        // Ensure roll mode is not lost\n        if (rollMode) messageOptions.rollMode = rollMode;\n\n        // Create base chat card data\n        let chatData = {\n          speaker: ChatMessage.getSpeaker({\n            actor: combatant.actor,\n            token: combatant.token,\n            alias: combatant.name,\n          }),\n          ...messageOptions,\n        };\n\n        // Mimic core Foundry data\n        foundry.utils.setProperty(chatData, \"flags.core.initiativeRoll\", true);\n\n        // Generate message proper via D20RollPF\n        chatData = await roll.toMessage(chatData, {\n          create: false,\n          rollMode,\n          subject: { core: \"init\" },\n          chatTemplateData: templateData,\n        });\n\n        if (i > 0) chatData.sound = null; // Only play 1 sound for the whole set\n        messages.push(chatData);\n\n        // Return the Roll and the chat data\n        return results;\n      },\n      [[], []]\n    );\n    if (!updates.length) return this;\n\n    // Update multiple combatants\n    await this.updateEmbeddedDocuments(\"Combatant\", updates);\n\n    // Ensure the turn order remains with the same combatant\n    if (updateTurn && currentId) await this.update({ turn: this.turns.findIndex((t) => t.id === currentId) });\n\n    // Create multiple chat messages\n    const chatMessages = await ChatMessage.implementation.create(messages, { rollMode });\n    return { combat: this, messages: chatMessages };\n  }\n\n  /**\n   * @param {object} options\n   * @param {string} options.d20 Formula override\n   * @param {string} options.bonus Bonus formula override\n   * @param {string} options.name Name of the roller\n   * @returns {object}\n   */\n  static async showInitiativeDialog({ d20 = null, bonus = null, name } = {}) {\n    const rollMode = game.settings.get(\"core\", \"rollMode\");\n\n    const template = \"systems/pf1/templates/chat/roll-dialog.hbs\";\n    const dialogData = { d20, bonus, rollMode, rollModes: CONFIG.Dice.rollModes };\n\n    // Show dialog\n    // TODO: Use D20RollPF's prompt instead\n    return Dialog.wait(\n      {\n        title: game.i18n.format(\"PF1.InitiativeCheck\", { name }),\n        content: await renderTemplate(template, dialogData),\n        buttons: {\n          normal: {\n            label: game.i18n.localize(\"PF1.Roll\"),\n            callback: (html) => new FormDataExtended(html.querySelector(\"form\")).object,\n          },\n        },\n        default: \"normal\",\n        close: (html) => ({ stop: true }),\n      },\n      {\n        subject: { core: \"init\" },\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"roll-prompt\", \"roll-initiative\"],\n        jQuery: false,\n      },\n      {\n        focus: true,\n      }\n    );\n  }\n\n  /**\n   * @override\n   * @param {object} data Update data\n   * @param {options} options Context options\n   * @param {string} userId Triggering user ID\n   */\n  _onUpdate(changed, context, userId) {\n    if (changed.turn !== undefined || changed.round !== undefined) {\n      this._onNewTurn(changed, context, userId);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (\"turn\" in changed || \"round\" in changed) {\n      // Record origin turn and round\n      context.pf1 ??= {};\n      context.pf1.from = { turn: this.turn, round: this.round };\n    }\n  }\n\n  /**\n   * New turn handling.\n   *\n   * @param changed\n   * @param context\n   * @param userId\n   * @private\n   */\n  async _onNewTurn(changed, context, userId) {\n    if (!this._isForwardTime(changed, context)) return;\n\n    if (context.pf1?.from) {\n      const skipped = this._detectSkippedTurns(context.pf1.from, context);\n\n      if (game.users.activeGM?.isSelf) {\n        this._handleSkippedTurns(skipped, context);\n      }\n\n      const previous = this.turns.at(this.turn - 1);\n      if (!skipped.has(previous)) this._processEndTurn(context.pf1?.from, context);\n    }\n\n    this._processTurnStart(changed, context, userId);\n\n    this._processInitiative();\n  }\n\n  _isForwardTime(changed, context) {\n    // Non-UI turn progression does not have context.direction present to detect this otherwise\n    const t0 = context.pf1.from.turn,\n      r0 = context.pf1.from.round,\n      t1 = changed.turn ?? t0,\n      r1 = changed.round ?? r0,\n      rd = r1 - r0, // round delta\n      td = t1 - t0; // turn delta\n\n    if (rd < 0) return false;\n    else if (rd == 0 && td <= 0) return false;\n    return true;\n  }\n\n  /**\n   * Determine skipped turns\n   *\n   * @internal\n   * @param {object} from\n   * @param {number} from.turn From turn\n   * @param {number} from.round From round\n   * @param {object} context - Update context\n   * @returns {Set<Combatant>} - Set of combatant IDs whose turn was skipped\n   */\n  _detectSkippedTurns({ turn, round } = {}, context) {\n    const roundChange = this.round !== round;\n\n    const skipped = new Set();\n\n    // No combatants skipped\n    if (!roundChange && turn + 1 === this.turn) return skipped;\n\n    // Determine skipped combatants\n    for (const [index, combatant] of this.turns.entries()) {\n      // Seeking first, not actually skipped\n      if (!roundChange && index <= turn) continue;\n      // Skipped\n      else if (index < this.turn) skipped.add(combatant);\n      // Skipped (usually via nextRound)\n      else if (roundChange && index > turn) skipped.add(combatant);\n    }\n\n    Hooks.callAll(\"pf1CombatTurnSkip\", this, skipped, context);\n\n    return skipped;\n  }\n\n  /**\n   * Handle effects of skipped turns.\n   *\n   * @internal\n   * @param {Set<Combatant>} skipped - Combatant IDs of those whose turn was skipped.\n   * @param {object} context - Combat update context\n   */\n  _handleSkippedTurns(skipped, context) {\n    const currentTurn = this.turn;\n    const combat = this;\n    const event = \"turnEnd\";\n\n    const timeOffset = context.advanceTime ?? 0;\n\n    // Expire effects for skipped combatants\n    for (const combatant of skipped) {\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      // Adjust expiration time for those who come after in initiative (their expiration was for previous round)\n      const turn = this.turns.findIndex((c) => c === combatant);\n      const turnTimeOffset = timeOffset + (turn > currentTurn) ? -CONFIG.time.roundTime : 0;\n\n      actor.expireActiveEffects?.({ timeOffset: timeOffset + turnTimeOffset, combat, event });\n    }\n  }\n\n  /**\n   * Handle end of turn\n   *\n   * @internal\n   * @param {object} originTime\n   * @param {number} originTime.turn - Turn that ended\n   * @param {object} context\n   */\n  async _processEndTurn({ turn } = {}, context = {}) {\n    const previous = this.turns.at(turn);\n    const actor = previous.actor;\n    if (!actor) return;\n\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    let timeOffset = context.advanceTime ?? 0;\n    if (turn - 1 < 0) timeOffset -= CONFIG.time.roundTime; // Roll back time for a turn that ended on previous round\n\n    try {\n      await actor.expireActiveEffects?.({ timeOffset, combat: this, event: \"turnEnd\" });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process current combatant: expire active effects & buffs.\n   *\n   * @param {object} changed Update data\n   * @param {options} context Context options\n   * @param {string} userId Triggering user ID\n   */\n  async _processTurnStart(changed, context, userId) {\n    const actor = this.combatant?.actor;\n    if (!actor) return;\n\n    // Attempt to perform expiration on owning active user\n    const owner = actor.activeOwner;\n    if (!owner?.isSelf) return;\n\n    const timeOffset = context.advanceTime ?? 0;\n    try {\n      await actor.expireActiveEffects?.({ timeOffset, combat: this, event: \"turnStart\" });\n    } catch (error) {\n      console.error(error, actor);\n    }\n\n    try {\n      await actor.rechargeItems?.({ period: \"round\", exact: true });\n    } catch (error) {\n      console.error(error, actor);\n    }\n  }\n\n  /**\n   * Process end of durations based on initiative.\n   *\n   * Only active GM processes these to avoid conflicts and logic bloat.\n   *\n   * @internal\n   */\n  _processInitiative() {\n    if (!game.users.activeGM?.isSelf) return;\n\n    const initiative = this.initiative;\n    for (const combatant of this.combatants) {\n      if (combatant.isDefeated) continue;\n      const actor = combatant.actor;\n      if (!actor) continue;\n\n      actor.expireActiveEffects?.({ combat: this, initiative });\n    }\n  }\n\n  _onDelete(options, userId) {\n    super._onDelete(options, userId);\n\n    if (game.user.id !== userId) return;\n\n    // Show experience distributor after combat\n    if (!this.started) return;\n    const xpCfg = game.settings.get(\"pf1\", \"experienceConfig\");\n    if (xpCfg.disable) return;\n\n    const openUI = xpCfg.openDistributor;\n    const skipPrompt = pf1.documents.settings.getSkipActionPrompt();\n    if (openUI ^ skipPrompt) {\n      pf1.applications.ExperienceDistributor.fromCombat(this);\n    }\n  }\n\n  /**\n   * Get current initiative.\n   *\n   * @type {number|undefined}\n   */\n  get initiative() {\n    return this.combatant?.initiative;\n  }\n}\n","import { RollPF } from \"module/dice/roll.mjs\";\n\n/**\n * Combatant extension.\n */\nexport class CombatantPF extends Combatant {\n  /**\n   * Combat tracker resource update.\n   * Required to deal with 0 values disappearing with core implementation\n   *\n   * Synchronized with Foundry 10.291\n   *\n   * @override\n   * @returns {*} Resource value.\n   */\n  updateResource() {\n    if (!this.actor || !this.combat) return (this.resource = null);\n    return (this.resource = foundry.utils.getProperty(this.actor.system, this.parent.settings.resource) ?? null);\n  }\n\n  /**\n   * Duplicate combatant with added data.\n   *\n   * @param {object} data - Override data\n   * @param {object} context - Creation context\n   * @returns {Promise<Combatant>} - Created combatant\n   */\n  duplicateWithData(data = {}, context = {}) {\n    console.debug(\"Duplicating combatant:\", this);\n    context.parent ??= this.combat;\n    return this.constructor.create(foundry.utils.mergeObject(this.toObject(), data), context);\n  }\n\n  /**\n   * Get unevaluated initiative roll instance.\n   *\n   * @override\n   * @param {string} [formula] Initiative formula override\n   * @param {string} [d20=null] D20 override\n   * @param {number} [bonus=null] Bonus to initiative\n   * @returns {pf1.dice.D20RollPF} Initiative roll instance\n   *\n   * Synchronized with Foundry VTT 10.291\n   */\n  getInitiativeRoll(formula, d20 = null, bonus = null) {\n    formula ||= this._getInitiativeFormula(d20);\n    const rollData = this.actor?.getRollData() || {};\n    if (bonus) {\n      rollData.bonus = bonus;\n      formula += \" + @bonus\";\n    }\n\n    return new pf1.dice.D20RollPF(formula, rollData);\n  }\n\n  /**\n   * Override the default Initiative formula to customize special behaviors of the game system.\n   * Apply tiebreaker if desired\n   * See Combat._getInitiativeFormula for more detail.\n   *\n   * @override\n   * @param {string} [d20=pf1.dice.D20RollPF.standardRoll] Default check roll\n   * @returns {string} Initiative formula\n   */\n  _getInitiativeFormula(d20) {\n    d20 ||= pf1.dice.D20RollPF.standardRoll;\n    const defaultParts = [d20, `@attributes.init.total[${game.i18n.localize(\"PF1.Initiative\")}]`];\n    const actor = this.actor;\n    if (actor && game.settings.get(\"pf1\", \"initiativeTiebreaker\"))\n      defaultParts.push(`(@attributes.init.total / 100)[${game.i18n.localize(\"PF1.Tiebreaker\")}]`);\n    const parts = CONFIG.Combat.initiative.formula ? CONFIG.Combat.initiative.formula.split(/\\s*\\+\\s*/) : defaultParts;\n    if (!actor) return parts[0] || \"0\";\n    return parts.filter((p) => !!p).join(\" + \");\n  }\n}\n","/**\n * Transforms a key input into an array of objects for the keybinding API\n *\n * @param {string} key - A key string\n * @returns {{\"key\": string}[]} Keybinding objects\n */\nconst getLeftRight = (key) => [`${key}Left`, `${key}Right`].map((k) => ({ key: k }));\n\nconst SHIFT_KEYS = getLeftRight(\"Shift\");\nconst CTRL_KEYS = getLeftRight(\"Control\");\n\n/**\n * Registers the system's keybindings\n *\n * @internal\n */\nexport const registerSystemControls = () => {\n  game.keybindings.register(\"pf1\", \"skipConfirmPrompt\", {\n    name: \"PF1.KEYBINDINGS.SkipConfirmPrompt.Name\",\n    uneditable: SHIFT_KEYS,\n    onDown: () => {\n      pf1.skipConfirmPrompt = true;\n    },\n    onUp: () => {\n      pf1.skipConfirmPrompt = false;\n    },\n  });\n\n  game.keybindings.register(\"pf1\", \"forceShowItem\", {\n    name: \"PF1.KEYBINDINGS.ForceShowItem.Name\",\n    hint: \"PF1.KEYBINDINGS.ForceShowItem.Hint\",\n    uneditable: CTRL_KEYS,\n    onDown: () => {\n      pf1.forceShowItem = true;\n    },\n    onUp: () => {\n      pf1.forceShowItem = false;\n    },\n  });\n\n  game.keybindings.register(\"pf1\", \"hideTokenTooltip\", {\n    name: \"PF1.KEYBINDINGS.HideTokenTooltip.Name\",\n    hint: \"PF1.KEYBINDINGS.HideTokenTooltip.Hint\",\n    uneditable: CTRL_KEYS,\n    onDown: () => pf1.documents.controls._hideTokenTooltip(true),\n    onUp: () => pf1.documents.controls._hideTokenTooltip(false),\n  });\n\n  game.keybindings.register(\"pf1\", \"hideTokenTooltipGMInfo\", {\n    name: \"PF1.KEYBINDINGS.HideTokenTooltipGMInfo.Name\",\n    uneditable: SHIFT_KEYS,\n    restricted: true,\n    onDown: () => pf1.documents.controls._hideTokenTooltipGMInfo(true),\n    onUp: () => pf1.documents.controls._hideTokenTooltipGMInfo(false),\n  });\n\n  game.keybindings.register(\"pf1\", \"stickyTokenTooltip\", {\n    name: \"PF1.KEYBINDINGS.StickyTokenTooltip.Name\",\n    hint: \"PF1.KEYBINDINGS.StickyTokenTooltip.Hint\",\n    onDown: () => pf1.documents.controls._stickyTokenTooltip(true),\n    onUp: () => pf1.documents.controls._stickyTokenTooltip(false),\n  });\n};\n\n/**\n * Toggle the display of GM/Player info in the token tooltip\n *\n * @internal\n * @param {boolean} keyDown - Whether the key is pressed down\n * @returns {Promise<void>|void} A Promise that is resolved when the tooltip render handling is done\n */\nexport const _hideTokenTooltipGMInfo = (keyDown) => {\n  if (!pf1.tooltip) return;\n  pf1.tooltip.forceHideGMInfo = keyDown;\n  pf1.tooltip.refresh();\n};\n\n/**\n * @internal\n * @param {*} stickify\n */\nexport const _stickyTokenTooltip = (stickify) => {\n  if (!pf1.tooltip) return;\n  pf1.tooltip.sticky = stickify;\n};\n\n/**\n * Toggle the display of the token tooltip\n *\n * @internal\n * @param {boolean} keyDown - Whether the key is pressed down\n * @returns {Promise<void>|void} A Promise that is resolved when the tooltip render handling is done\n */\nexport const _hideTokenTooltip = (keyDown) => {\n  if (!pf1.tooltip) return;\n  if (game.settings.get(\"pf1\", \"tooltipConfig\")?.hideWithoutKey === true) pf1.tooltip.forceHide = !keyDown;\n  else pf1.tooltip.forceHide = keyDown;\n  pf1.tooltip.refresh();\n};\n","export class TokenDocumentPF extends TokenDocument {\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    this._preCreateSetSize();\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (context.recursive === false) return;\n\n    const flags = changed.flags?.pf1;\n    if (flags) {\n      // Delete flags instead of turning them false\n      const deleteFlags = [\"staticSize\", \"disableLowLight\", \"customVisionRules\"];\n      for (const flag of deleteFlags) {\n        if (flags[flag] === false) {\n          flags[`-=${flag}`] = null;\n          delete flags[flag];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle actor size during token creation.\n   */\n  _preCreateSetSize() {\n    if (!this.actor) return;\n\n    // Apply token size\n    if (this.getFlag(\"pf1\", \"staticSize\")) return;\n    const sizeConf = pf1.config.tokenSizes[this.actor.system.traits?.size];\n    if (!sizeConf) return;\n\n    this.updateSource({\n      width: sizeConf.w,\n      height: sizeConf.h,\n      texture: {\n        scaleX: sizeConf.scale * this.actor.prototypeToken.texture.scaleX,\n        scaleY: sizeConf.scale * this.actor.prototypeToken.texture.scaleY,\n      },\n    });\n  }\n\n  static getTrackedAttributes(data, path = []) {\n    const attr = super.getTrackedAttributes(data, path);\n\n    // Only append extra vars when not dealing with specific document type to avoid inserting them multiple times\n    if (!data) {\n      attr.value.push(\n        [\"attributes\", \"hp\", \"temp\"],\n        [\"attributes\", \"hp\", \"nonlethal\"],\n        [\"attributes\", \"ac\", \"normal\", \"total\"]\n      );\n    }\n\n    return attr;\n  }\n\n  /**\n   * Hijack Token health bar rendering to include temporary and temp-max health in the bar display\n   *\n   * @param barName\n   * @param root0\n   * @param root0.alternative\n   */\n  getBarAttribute(barName, { alternative = null } = {}) {\n    let data;\n    try {\n      data = super.getBarAttribute(barName, { alternative: alternative });\n    } catch (e) {\n      data = null;\n    }\n\n    // Make resources editable\n    if (data?.attribute.startsWith(\"resources.\")) data.editable = true;\n\n    const offsetAttributes = [\"attributes.hp\", \"attributes.wounds\", \"attributes.vigor\"];\n    if (offsetAttributes.includes(data?.attribute)) {\n      // Add temp HP on top\n      const temp = foundry.utils.getProperty(this.actor?.system, data.attribute + \".temp\") || 0;\n      data.value += temp;\n      // Allow editing\n      data.editable = true;\n    }\n\n    return data;\n  }\n\n  prepareBaseData() {\n    this._syncSenses();\n\n    super.prepareBaseData();\n  }\n\n  /**\n   * Synchronize senses from actor.\n   */\n  _syncSenses() {\n    if (!this.actor) return;\n    if (!game.settings.get(\"pf1\", \"systemVision\")) return;\n    if (this.getFlag(\"pf1\", \"customVisionRules\")) return;\n\n    this.detectionModes = [];\n\n    if (!this.sight.enabled) return;\n\n    // Get base range from source data\n    const baseRange = this._source.sight.range;\n\n    this.detectionModes = [];\n\n    this.sight.visionMode = \"basic\";\n\n    // Basic detection\n    const basicMode = { id: DetectionMode.BASIC_MODE_ID, enabled: true, range: baseRange };\n    this.detectionModes.push(basicMode);\n\n    const senses = this.actor?.system?.traits?.senses ?? {};\n\n    // Darkvision\n    const darkvision = senses.dv ?? 0;\n    if (darkvision > 0) {\n      this.sight.visionMode = \"darkvision\";\n      // Upgrade basic mode range if greater\n      basicMode.range = Math.max(baseRange, pf1.utils.convertDistance(darkvision)[0]);\n    }\n\n    // -----------------------\n\n    // See invisibility\n    if (senses.si) {\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: basicMode.range });\n    }\n\n    // True seeing\n    const trueseeing = senses.tr ?? 0;\n    if (trueseeing > 0) {\n      // Add normal vision within range of true seeing\n      const trr = pf1.utils.convertDistance(trueseeing)[0];\n      basicMode.range = Math.max(trr, basicMode.range);\n      if (trueseeing > darkvision) this.sight.visionMode = \"basic\";\n\n      this.detectionModes.push({ id: \"seeInvisibility\", enabled: true, range: trr, limited: true });\n    }\n\n    this.sight.range = Math.max(baseRange, basicMode.range);\n\n    // Tremor sense\n    if (senses.ts) {\n      this.detectionModes.push({ id: \"feelTremor\", enabled: true, range: senses.ts });\n    }\n\n    // Blind sense\n    if (senses.bse) {\n      this.detectionModes.push({ id: \"blindSense\", enabled: true, range: senses.bse });\n    }\n\n    // Blind sight\n    if (senses.bs) {\n      this.detectionModes.push({ id: \"blindSight\", enabled: true, range: senses.bs });\n    }\n\n    // Sort detection modes\n    this.detectionModes.sort(this.constructor._sortDetectionModes);\n\n    // Update vision advanced fields with current mode's defaults\n    const visionDefaults = CONFIG.Canvas.visionModes[this.sight.visionMode]?.vision?.defaults || {};\n    for (const fieldName of [\"attenuation\", \"brightness\", \"saturation\", \"contrast\"]) {\n      if (fieldName in visionDefaults) {\n        this.sight[fieldName] = visionDefaults[fieldName];\n      }\n    }\n  }\n\n  static _sortDetectionModes(a, b) {\n    if (a.id === DetectionMode.BASIC_MODE_ID) return -1;\n    if (b.id === DetectionMode.BASIC_MODE_ID) return 1;\n\n    const src = { a: CONFIG.Canvas.detectionModes[a.id], b: CONFIG.Canvas.detectionModes[b.id] };\n    return (src.a?.constructor.PRIORITY ?? 0) - (src.b?.constructor.PRIORITY ?? 0);\n  }\n}\n","import { ActorBasePF } from \"./actor-base.mjs\";\n\n/**\n * Basic actor with no built-in functionality.\n *\n * @deprecated Obsolete with Foundry v11\n */\nexport class BasicActorPF extends ActorBasePF {\n  constructor(...args) {\n    super(...args);\n\n    foundry.utils.logCompatibilityWarning(\n      `Basic actor type is obsolete with Foundry v11. Actor \"${this.uuid}\" will become nonfunctional in the future.`,\n      {\n        since: \"PF1 v9\",\n        until: \"PF1 v11\",\n      }\n    );\n  }\n\n  _resetInherentTotals() {}\n\n  _setSourceDetails() {}\n\n  prepareBaseData() {}\n\n  prepareDerivedData() {}\n\n  applyActiveEffects() {}\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\nexport class ActorCharacterPF extends ActorPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    // Link token data by default\n    if (data.prototypeToken?.actorLink === undefined) {\n      tokenUpdate.actorLink = true;\n    }\n\n    // Enable vision by default\n    if (game.settings.get(\"pf1\", \"characterVision\") && data.prototypeToken?.sight?.enabled === undefined) {\n      tokenUpdate.sight = { enabled: true };\n    }\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"pcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  /**\n   * @internal\n   * @override\n   * @param {object} changed\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preUpdate(changed, context, user) {\n    await super._preUpdate(changed, context, user);\n\n    if (!changed.system) return;\n\n    // Update experience\n    this._updateExp(changed);\n  }\n\n  /**\n   * Handle relative XP change and constrain it to appropriate minimum value.\n   *\n   * @protected\n   * @param {object} changed\n   */\n  _updateExp(changed) {\n    const xpData = changed.system.details?.xp;\n\n    if (xpData?.value === 0) {\n      // Reset XP to minimum possible\n      const level =\n        this.itemTypes.class?.filter((o) => o.subType !== \"mythic\").reduce((cur, o) => cur + o.system.level, 0) ?? 0;\n\n      xpData.value = level > 0 ? this.getLevelExp(level - 1) : 0;\n    }\n  }\n\n  /**\n   * Amount of experience required to gain next level at specific character level.\n   *\n   * @example\n   * getLevelExp(1) // -> 3000, the XP needed for level 2\n   *\n   * @param {number} level - Desired level to level-up.\n   * @param {object} [options] - Additional options\n   * @param {object} [options.rollData] - Roll data instance\n   * @returns {number} - The XP required for next level.\n   * @throws {Error} - If invalid level is provided.\n   */\n  getLevelExp(level, { rollData = null } = {}) {\n    if (!Number.isInteger(level) || !(level >= 0)) throw new Error(`Level \"${level}\" must be zero or greater integer.`);\n\n    const config = game.settings.get(\"pf1\", \"experienceConfig\");\n    const track = config.track;\n\n    // Preset experience tracks\n    if ([\"fast\", \"medium\", \"slow\"].includes(track)) {\n      const levels = pf1.config.CHARACTER_EXP_LEVELS[track];\n      // Normal levels\n      if (level < levels.length) return levels[level];\n      // Otherwise return last possible\n      else return levels.at(-1);\n    }\n\n    // Custom formula experience track\n    let totalXP = 0;\n    if (config.custom.formula.length > 0) {\n      rollData ??= this.getRollData();\n      for (let a = 0; a < level; a++) {\n        rollData.level = a + 1;\n        const roll = RollPF.safeRollSync(config.custom.formula, rollData);\n        totalXP += roll.total;\n      }\n      delete rollData.level; // Cleanup\n    }\n\n    return Math.max(1, totalXP);\n  }\n\n  /**\n   * @protected\n   * @override\n   */\n  prepareDerivedData() {\n    super.prepareDerivedData();\n    const actorData = this.system;\n\n    actorData.details ??= {};\n\n    // Prepare experience data\n    const level = actorData.details.level?.value || 1;\n\n    actorData.details.xp ??= {};\n\n    const maxExp = this.getLevelExp(level);\n    actorData.details.xp.max = maxExp;\n\n    // Experience bar\n    const curXp = actorData.details.xp.value;\n    // Maxed out XP needs no math\n    if (curXp >= maxExp) {\n      actorData.details.xp.pct = 100;\n    } else {\n      const prior = this.getLevelExp(level - 1 || 0);\n      actorData.details.xp.pct = ((Math.clamped(curXp, prior, maxExp) - prior) / (maxExp - prior)) * 100;\n    }\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\nexport class ActorNPCPF extends ActorPF {\n  /**\n   * @internal\n   * @override\n   * @param {object} data\n   * @param {object} context\n   * @param {User} user\n   */\n  async _preCreate(data, context, user) {\n    await super._preCreate(data, context, user);\n\n    const tokenUpdate = {};\n\n    if (data.prototypeToken?.disposition === undefined) {\n      const disposition = game.settings.get(\"pf1\", \"npcDisposition\");\n      if (disposition !== \"NONE\") {\n        tokenUpdate.disposition = CONST.TOKEN_DISPOSITIONS[disposition];\n      }\n    }\n\n    if (!foundry.utils.isEmpty(tokenUpdate)) {\n      this.prototypeToken.updateSource(tokenUpdate);\n    }\n  }\n\n  prepareBaseData() {\n    super.prepareBaseData();\n    this.system.details.cr.total = this.getCR();\n  }\n\n  prepareSpecificDerivedData() {\n    super.prepareSpecificDerivedData();\n\n    this._prepareCR();\n  }\n\n  _prepareCR() {\n    // Reset CR\n    foundry.utils.setProperty(this.system, \"details.cr.total\", this.getCR());\n\n    // Reset experience value\n    let newXP = 0;\n    try {\n      const crTotal = this.system.details?.cr?.total || 0;\n      newXP = this.getCRExp(crTotal);\n    } catch (e) {\n      newXP = this.getCRExp(1);\n    }\n    foundry.utils.setProperty(this.system, \"details.xp.value\", newXP);\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasArmorProficiency(item) {\n    // Assume NPCs to be proficient with their armor\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasArmorProficiency(item) : true;\n  }\n\n  /**\n   * @inheritDoc\n   * @remarks If NPC proficiencies is not enabled, this always returns true.\n   */\n  hasWeaponProficiency(item, options = {}) {\n    // Assume NPCs to be proficient with their weapon\n    return game.settings.get(\"pf1\", \"npcProficiencies\") ? super.hasWeaponProficiency(item, options) : true;\n  }\n\n  /**\n   * Get challegne rating.\n   * Applies CR offset modifications from templates.\n   *\n   * @returns {number}\n   */\n  getCR() {\n    const base = this.system.details?.cr?.base ?? 0;\n\n    // Gather CR from templates\n    const templates = this.itemTypes.feat.filter((item) => item.subType === \"template\" && item.isActive);\n\n    return templates.reduce((cur, item) => {\n      const crOffset = item.system.crOffset;\n      if (crOffset) {\n        cur += RollPF.safeRollSync(crOffset, item.getRollData()).total;\n      }\n      return cur;\n    }, base);\n  }\n\n  /**\n   * Return the amount of experience granted by killing a creature of a certain CR.\n   *\n   * @param {number} cr - The creature's challenge rating\n   * @returns {number|null} - The amount of experience granted per kill. Or null if the CR was invalid.\n   */\n  getCRExp(cr) {\n    if (cr < 1.0) return Math.floor(Math.max(400 * cr, 0));\n    return pf1.config.CR_EXP_LEVELS[cr] || null;\n  }\n}\n","import { ActorNPCPF } from \"./actor-npc.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorHauntPF extends ActorNPCPF {\n  prepareBaseData() {\n    // Forced deletion to ensure rolldata gets refreshed.\n    delete this._rollData;\n\n    // Needed for getRollData and ActorPF, but useless for the actor\n    this.system.abilities = {\n      str: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n\n    this.system.skills ??= {};\n    this.sourceDetails = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    this.system.details.cr.total = this.system.details.cr.base;\n    this.system.attributes.init.total = this.system.attributes.init.value;\n\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    this._prepareCR();\n\n    this.prepareHealth();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update item resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    this._initialized = true;\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter(\n      (item) =>\n        item.isActive &&\n        (item.system.changes?.length > 0 || Object.values(item.system.changeFlags ?? {}).some((v) => !!v))\n    );\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Set size index\n    const sizeChart = Object.keys(pf1.config.sizeChart);\n    result.size = sizeChart.indexOf(result.traits.size);\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = pf1.documents.actor.ActorPF.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Haunts don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    this._rollData = result;\n    return result;\n  }\n}\n","import { ActorNPCPF } from \"./actor-npc.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorTrapPF extends ActorNPCPF {\n  prepareBaseData() {\n    // Forced deletion to ensure rolldata gets refreshed.\n    delete this._rollData;\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    this.system.traits = { size: \"med\" };\n\n    this.system.abilities = {\n      str: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.system.attributes = {\n      attack: { general: 0, shared: 0 },\n      woundThresholds: {},\n    };\n\n    this.system.skills ??= {};\n    this.sourceDetails = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n  }\n\n  /**\n   * @override\n   */\n  prepareDerivedData() {\n    this.system.details.cr.total = this.system.details.cr.base;\n\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    this._prepareCR();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update item resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    this._initialized = true;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _resetInherentTotals() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _setSourceDetails() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter(\n      (item) =>\n        item.isActive &&\n        (item.system.changes?.length > 0 || Object.values(item.system.changeFlags ?? {}).some((v) => !!v))\n    );\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n    /* ----------------------------- */\n\n    // Set size index\n    const sizeChart = Object.keys(pf1.config.sizeChart);\n    result.size = sizeChart.indexOf(result.traits.size);\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = pf1.documents.actor.ActorPF.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Traps don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    this._rollData = result;\n    return result;\n  }\n}\n","import { ActorPF } from \"./actor-pf.mjs\";\nimport { applyChanges } from \"./utils/apply-changes.mjs\";\n\nexport class ActorVehiclePF extends ActorPF {\n  prepareBaseData() {\n    // Forced deletion to ensure rolldata gets refreshed.\n    delete this._rollData;\n\n    this._resetInherentTotals();\n\n    // Add base initiative\n    this.system.attributes.init.total = this.system.attributes.init.value;\n    this.system.attributes.cmd.total = this.system.attributes.cmd.value;\n    this.system.attributes.ac.normal.total = this.system.attributes.ac.normal.base;\n    this.system.attributes.savingThrows.save.total = this.system.attributes.savingThrows.save.base;\n\n    // Everything below this is needed for getRollData and ActorPF, but useless for the actor\n    this.system.attributes.attack ??= { general: 0, shared: 0 };\n    this.system.attributes.woundThresholds ??= {};\n    this.system.skills ??= {};\n    this.system.attributes.speed ??= {};\n\n    const strValue = this.system.abilities.str.value;\n    this.system.abilities = {\n      str: {\n        value: strValue,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      dex: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      con: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      int: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      wis: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n      cha: {\n        value: 10,\n        damage: 0,\n        drain: 0,\n        userPenalty: 0,\n        mod: 0,\n        total: 10,\n      },\n    };\n\n    this.sourceDetails = {};\n\n    //  Init resources structure\n    this.system.resources ??= {};\n  }\n\n  _getInherentTotalsKeys() {\n    return {\n      \"attributes.hp.max\": this.system.attributes?.hp?.base ?? 0,\n      \"details.carryCapacity.bonus.total\": 0,\n      \"details.carryCapacity.multiplier.total\": 0,\n    };\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   */\n  _getBaseValueFillKeys() {\n    return [{ parent: \"abilities.str\", key: \"base\", value: 0 }];\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  prepareDerivedData() {\n    this.items.forEach((item) => {\n      item._prepareDependentData(false);\n      this.updateItemResources(item);\n    });\n\n    applyChanges.call(this);\n\n    this.prepareHealth();\n    this._computeEncumbrance();\n\n    // Setup links\n    this.prepareItemLinks();\n\n    // Reset roll data cache again to include processed info\n    delete this._rollData;\n\n    // Update item resources\n    this.items.forEach((item) => {\n      item._prepareDependentData(true);\n      // because the resources were already set up above, this is just updating from current roll data - so do not warn on duplicates\n      this.updateItemResources(item, { warnOnDuplicate: false });\n    });\n\n    this._initialized = true;\n  }\n\n  prepareHealth() {\n    // Offset relative health\n    const hp = this.system.attributes.hp;\n    if (!Number.isFinite(hp?.offset)) hp.offset = 0;\n    hp.value = hp.max + hp.offset;\n  }\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  refreshDerivedData() {}\n\n  /**\n   * Needed to prevent unnecessary behavior in ActorPF\n   *\n   * @override\n   */\n  _prepareChanges() {\n    this.changeItems = this.items.filter(\n      (item) =>\n        item.isActive &&\n        (item.system.changes?.length > 0 || Object.values(item.system.changeFlags ?? {}).some((v) => !!v))\n    );\n\n    const changes = [];\n    for (const i of this.changeItems) {\n      changes.push(...i.changes);\n    }\n\n    const c = new Collection();\n    for (const change of changes) {\n      // Avoid ID conflicts\n      const parentId = change.parent?.id ?? \"Actor\";\n      const uniqueId = `${parentId}-${change._id}`;\n      c.set(uniqueId, change);\n    }\n    this.changes = c;\n  }\n\n  getRollData(options = { refresh: false }) {\n    // Return cached data, if applicable\n    const skipRefresh = !options.refresh && this._rollData;\n\n    const result = { ...(skipRefresh ? this._rollData : foundry.utils.deepClone(this.system)) };\n\n    // Clear certain fields if not refreshing\n    if (skipRefresh) {\n      for (const path of pf1.config.temporaryRollDataFields.actor) {\n        foundry.utils.setProperty(result, path, undefined);\n      }\n    }\n\n    /* ----------------------------- */\n    /* Always add the following data\n    /* ----------------------------- */\n\n    // Add combat round, if in combat\n    if (game.combats?.viewed) {\n      result.combat = {\n        round: game.combat.round || 0,\n      };\n    }\n\n    // Return cached data, if applicable\n    if (skipRefresh) return result;\n\n    /* ----------------------------- */\n    /* Set the following data on a refresh\n      /* ----------------------------- */\n\n    // Set size index\n    const sizeChart = Object.keys(pf1.config.sizeChart);\n    result.size = sizeChart.indexOf(result.traits.size);\n\n    // Add item dictionary flags\n    result.dFlags = this.itemFlags?.dictionary ?? {};\n\n    // Add range info\n    result.range = pf1.documents.actor.ActorPF.getReach(this.system.traits.size, this.system.traits.stature);\n\n    // Wound Threshold isn't applicable\n    result.attributes.woundThresholds = { level: 0 };\n\n    // Traps don't have ACP\n    result.attributes.acp = { attackPenalty: 0 };\n\n    this._rollData = result;\n    return result;\n  }\n\n  /**\n   * @remarks - Vehicles don't have weightless currency\n   * @override\n   * @inheritDoc\n   */\n  getTotalCurrency({ inLowestDenomination = true } = {}) {\n    const total = this.getCurrency(\"currency\", { inLowestDenomination: true });\n    return inLowestDenomination ? total : total / 100;\n  }\n}\n","import { RollPF } from \"module/dice/roll.mjs\";\nimport { openJournal } from \"@utils\";\n\n/**\n * Helper class for making `CONFIG.TextEditor.enrichers` usage easier.\n */\nexport class PF1TextEnricher {\n  id;\n\n  pattern;\n\n  match;\n\n  enricher;\n\n  /**\n   * @abstract\n   * @param {Event} event Click event\n   * @param {HTMLElement} target Target element\n   */\n  click(event, target) {}\n\n  /**\n   * @abstract\n   * @param {Event} event Drag event\n   * @param {HTMLElement} target Target element\n   */\n  drag(event, target) {}\n\n  /**\n   * @param {string} id Unique identifier\n   * @param {RegExp} pattern Pattern for content matching.\n   * @param {Function} enricher Function for generating enrichted content.\n   * @param {object} [interaction] Additional interaction options\n   * @param {string[]} [interaction.match] CSS selectors for triggering click or drag handler\n   * @param {Function} [interaction.click] Click handler\n   * @param {Function} [interaction.drag] Drag handler\n   */\n  constructor(id, pattern, enricher, { click, drag } = {}) {\n    if (!(pattern instanceof RegExp)) throw new Error(\"TextEnricher pattern must be a regular expression\");\n    if (!pattern.global) throw new Error(\"TextEnricher pattern must be global and multiline\");\n    this.id = id;\n    this.pattern = pattern;\n    this.enricher = enricher.bind(this);\n    this.click = click;\n    this.drag = drag;\n  }\n}\n\n/**\n * @param {Element} el\n * @param {string} icon\n */\nfunction setIcon(el, icon) {\n  const i = document.createElement(\"i\");\n  i.classList.add(...icon.split(\" \"));\n  el.prepend(i, \" \");\n}\n\n/**\n * Parses duration string into distinct time and unit.\n *\n * @param {string} duration\n */\nfunction parseDuration(duration) {\n  const re = /(?<time>\\d+)(?<unit>\\w+)?/.exec(duration);\n  if (!re) return [];\n  let { time, unit } = re.groups;\n\n  unit = (() => {\n    switch (unit?.[0]) {\n      case \"r\":\n        return game.i18n.localize(\"PF1.Time.Period.round.Label\");\n      case undefined:\n      case \"s\":\n        return game.i18n.localize(\"PF1.Time.Period.second.Label\");\n      case \"h\":\n        return game.i18n.localize(\"PF1.Time.Period.hour.Label\");\n      case \"m\":\n        return game.i18n.localize(\"PF1.Time.Period.minute.Label\");\n      default:\n        return null;\n    }\n  })();\n\n  return [parseInt(time), unit];\n}\n\n/**\n * Create enriched element for interaction.\n *\n * @param {object} config - Element configuration\n * @param {string} [config.label] - Prefix label for the element\n * @param {string} [config.icon] - Font Awesome icon classes\n * @param {boolean} [config.click=false] - Is this a clickable element?\n * @param {boolean} [config.drag=false] - Is this draggable element?\n * @param {string} config.handler - {@link PF1TextEnricher} ID\n * @param {Record<string,string>} [config.options] - Addional options set as dataset elements.\n * @param {boolean} [config.broken=false] - Is this broken?\n * @returns {HTMLElement} - The element.\n */\nexport function createElement({ label, icon, click = false, drag = false, handler, options, broken = false } = {}) {\n  const a = document.createElement(\"a\");\n  a.classList.add(\"pf1-link\");\n  if (click) a.classList.add(\"button\");\n  if (drag) {\n    a.classList.add(\"content\");\n    a.draggable = true;\n  }\n  if (icon) setIcon(a, icon);\n\n  if (label) a.append(label, \": \");\n  if (handler) a.dataset.handler = handler;\n\n  if (broken) a.classList.add(\"broken\");\n\n  setElementOptions(a, options);\n\n  return a;\n}\n\n/**\n * Get relevant actors based on the enriched element data.\n *\n * @param {HTMLElement} target - Clicked element.\n * @returns {ActorPF[]} - Relevant actors\n */\nexport function getRelevantActors(target) {\n  const actors = [];\n\n  // Speaker\n  if (target.dataset.speaker) {\n    const messageId = target.closest(\"[data-message-id]\")?.dataset.messageId;\n    const message = game.messages.get(messageId);\n    const actor = ChatMessage.getSpeakerActor(message.speaker);\n    if (actor) actors.push(actor);\n  }\n  // Controlled tokens\n  else if (canvas.tokens.controlled.length) {\n    const tokenActors = canvas.tokens.controlled.map((t) => t.actor);\n    for (const actor of tokenActors) {\n      if (actor) actors.push(actor);\n    }\n  }\n  // Configured character\n  else {\n    const actor = game.user.character;\n    if (actor) actors.push(actor);\n  }\n\n  if (actors.length == 0) {\n    ui.notifications.error(game.i18n.localize(\"PF1.EnrichedText.Errors.NoActors\"));\n    throw new Error(\"No valid actors found.\");\n  }\n\n  return actors;\n}\n\n/**\n * Add tooltip to enriched element.\n *\n * @param {Element} el Target element\n */\nexport function generateTooltip(el) {\n  const { roll, formula, bonus, speaker, name } = el.dataset;\n\n  const tooltip = [];\n  if (name) tooltip.push(name);\n  if (roll) {\n    if (/d\\d+/.test(roll)) tooltip.push(game.i18n.localize(\"PF1.Roll\") + `: ${roll}`);\n    else tooltip.push(game.i18n.format(\"PF1.TakeX\", { number: roll }));\n  } else if (formula) {\n    tooltip.push(formula);\n  }\n  if (bonus) tooltip.push(game.i18n.localize(\"PF1.Bonus\") + `: ${bonus}`);\n  if (speaker) tooltip.push(game.i18n.localize(\"PF1.EnrichedText.AsSpeaker\"));\n\n  el.dataset.tooltip = tooltip.join(\"<br>\");\n}\n\n/**\n * Break down options string into dataset properties.\n *\n * @internal\n * @param {Element} el Target element\n * @param {string} options Options string\n */\nexport function setElementOptions(el, options) {\n  if (options) {\n    for (const option of options.split(\";\")) {\n      const [key, value] = option.split(\"=\", 2);\n      el.dataset[key] = value ?? true;\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSave(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { roll, bonus, type } = target.dataset;\n  if (!type) throw new Error(\"No save type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSavingThrow(type, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAbility(event, target) {\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  const { ability, bonus, roll } = target.dataset;\n  if (!ability) throw new Error(\"No ability check type defined\");\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollAbilityTest(ability, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onSkill(event, target) {\n  // Add additional options\n  const options = {};\n  const { skill, bonus, roll, info } = target.dataset;\n  if (!skill) throw new Error(\"No skill key defined\");\n\n  if (info) {\n    const journal = pf1.config.skillCompendiumEntries[skill];\n    if (!journal) throw new Error(`Journal entry not found for skill \"${skill}\"`);\n    return void openJournal(journal);\n  }\n\n  if (roll) options.staticRoll = roll;\n  if (bonus) options.bonus = bonus;\n\n  const actors = getRelevantActors(target);\n\n  // Roll\n  for (const actor of actors) {\n    actor.rollSkill(skill, foundry.utils.deepClone(options));\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onUse(event, target) {\n  // Add additional options\n  const options = {};\n  const { type, item: itemName, action: actionData, speaker } = target.dataset;\n  if (!itemName) throw new Error(\"No item name defined\");\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    const item = actor.items.find((item) => {\n      if (type && item.type !== type) return false;\n      return item.name.localeCompare(itemName, undefined, { usage: \"search\" }) == 0;\n    });\n\n    if (!item) {\n      const msg = game.i18n.format(\"PF1.Warning.NoItemOnActor\", { actor: actor.name, item: itemName });\n      ui.notifications.warn(msg, { console: false });\n      console.warn(\"PF1 | @Use |\", msg, actor);\n      continue;\n    }\n\n    let itemAction = item.defaultAction;\n    if (actionData) {\n      const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionData);\n      const { actionTag, actionId } = re?.groups ?? {};\n      itemAction = item.actions.find((act) => {\n        if (act.id === actionId) return true;\n        if (act.data.tag === actionTag) return true;\n        return act.name.localeCompare(actionData, undefined, { usage: \"search\" }) == 0;\n      });\n    }\n\n    if (!itemAction) {\n      const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, actor: actor.name });\n      ui.notifications.warn(msg, { console: false });\n      console.warn(\"PF1 | @Use |\", msg, actor);\n      continue;\n    }\n\n    itemAction.use();\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onAction(event, target) {\n  // Add additional options\n  const options = {};\n  const { action: actionData } = target.dataset;\n\n  const msgId = target.closest(\".chat-message[data-message-id]\")?.dataset.messageId;\n  const msg = game.messages.get(msgId);\n  const item = msg.itemSource;\n\n  if (!item) {\n    const warn = game.i18n.format(\"PF1.EnrichedText.Errors.NoItemInMessage\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.warn(\"PF1 | @Action |\", warn, msg);\n  }\n\n  const actor = item.actor;\n\n  const re = /^(?:tag:(?<actionTag>.*?)|id:(?<actionId>.*?))$/.exec(actionData);\n  const { actionTag, actionId } = re?.groups ?? {};\n\n  const action = item.actions.find((act) => {\n    if (act.id === actionId) return true;\n    if (act.data.tag === actionTag) return true;\n    return act.name.localeCompare(actionData, undefined, { usage: \"search\" }) == 0;\n  });\n\n  if (!action) {\n    const msg = game.i18n.format(\"PF1.Warning.NoActionInItem\", { item: item.name, actor: actor.name });\n    ui.notifications.warn(msg, { console: false });\n    return void console.warn(\"PF1 | @Action |\", msg, actor);\n  }\n\n  action.use();\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onHealth(event, target) {\n  const { command, formula, speaker, nonlethal } = target.dataset;\n\n  const actors = getRelevantActors(target);\n\n  // Add additional options\n  const options = {};\n  if (nonlethal) options.asNonlethal = true;\n\n  for (const actor of actors) {\n    let value = RollPF.safeRollAsync(formula, actor.getRollData()).total;\n    if (command === \"heal\") value = -value;\n    actor.applyDamage(value, { ...options, event, element: target });\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onBrowse(event, target) {\n  const { category, options } = target.dataset;\n\n  // TODO: Configure browser filters with options.\n  // TODO: Find closest browser via Sørensen–Dice coefficient or something.\n\n  const browser = pf1.applications.compendiums[category];\n  if (browser) browser.render(true, { focus: true });\n  else ui.notifications.error(game.i18n.format(\"PF1.EnrichedText.Errors.BrowserNotFound\", { category }));\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport function onCondition(event, target) {\n  const { condition, toggle, remove, duration, options, info } = target.dataset;\n\n  /*\n  if (duration) {\n    const [time, unit] = parseDuration(duration);\n  }\n  */\n\n  if (info) {\n    const journal = pf1.registry.conditions.get(condition)?.journal;\n    if (!journal) throw new Error(`Journal entry not found for condition \"${condition}\"`);\n    return void openJournal(journal);\n  }\n\n  const actors = getRelevantActors(target);\n\n  for (const actor of actors) {\n    if (toggle) {\n      actor.toggleCondition(condition);\n    } else {\n      actor.setCondition(condition, !remove);\n    }\n  }\n}\n\n/**\n * @param {Event} event - Triggering event\n * @param {HTMLElement} target - Triggered element\n */\nexport async function onApply(event, target) {\n  const { uuid, level } = target.dataset;\n\n  const actors = getRelevantActors(target);\n  if (actors.length == 0) return;\n\n  const item = await fromUuid(uuid);\n  if (!item) {\n    const warn = game.i18n.localize(\"PF1.EnrichedText.Errors.ItemNotFound\");\n    ui.notifications.warn(warn, { console: false });\n    return void console.error(\"PF1 | @Apply |\", warn, uuid);\n  }\n\n  // TODO: Support more types (race, class, and few others should never be here)\n  if (item.type !== \"buff\") {\n    return void ui.notifications.error(\n      game.i18n.format(\"PF1.EnrichedText.Errors.UnsupportedItemType\", { type: item.type })\n    );\n  }\n\n  // Prepare item\n  const itemData = game.items.fromCompendium(item, { clearFolder: true });\n\n  itemData.system.active = true;\n  if (level !== undefined) {\n    itemData.system.level = Number(level);\n  }\n\n  // Apply\n  for (const actor of actors) {\n    // TODO: Activate existing item with same sourceId\n    Item.implementation.create(itemData, { parent: actor });\n  }\n}\n\n/**\n * Text enrichers\n */\nexport const enrichers = [\n  // @Apply\n  new PF1TextEnricher(\n    \"apply\",\n    /@Apply\\[(?<uuid>.*?)(?:;(?<options>.*?))?\\](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { uuid, options, label } = match.groups;\n\n      const item = fromUuidSync(uuid);\n      if (!item) console.warn(\"PF1 | @Apply | Could not find item\", uuid);\n\n      // TODO: Allow plain name instead of UUID. Needs configuration where to find said things.\n      const a = createElement({ label, click: true, handler: \"apply\", options, broken: !item });\n\n      if (item) {\n        a.dataset.name = `${game.i18n.localize(\"DOCUMENT.Item\")}: ${item.name}`;\n        a.dataset.uuid = item.uuid;\n        a.append(item.name);\n      } else a.replaceChildren(`@Apply[${uuid}]`);\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-angles-right\");\n\n      return a;\n    },\n    {\n      click: onApply,\n    }\n  ),\n  // @Save\n  new PF1TextEnricher(\n    \"save\",\n    /@Save\\[(?<save>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, { rollData } = {}) => {\n      const { save, options, label } = match.groups;\n      const a = createElement({ label, click: true, handler: \"save\", options });\n      const name = CONFIG.PF1.savingThrows[save];\n\n      let dc = a.dataset.dc;\n\n      // DC is not simple value\n      // For supporting things like: @Save[ref;dc=15+@attributes.hd.total + 2]\n      if (!/^\\d+$/.test(dc)) {\n        a.dataset.formula = dc;\n        const roll = RollPF.safeRollSync(dc, rollData, { formula: dc }, {}, { minimize: true });\n        dc = roll.total;\n      }\n\n      const title = dc !== undefined ? game.i18n.format(\"PF1.SavingThrowButtonLabel\", { type: name, dc }) : name;\n      a.append(title);\n      a.dataset.type = save;\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-shield-halved\");\n\n      return a;\n    },\n    {\n      click: onSave,\n    }\n  ),\n  // @Ability\n  new PF1TextEnricher(\n    \"ability\",\n    /@Ability\\[(?<ability>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { ability, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"ability\", options });\n      const title = CONFIG.PF1.abilities[ability] ?? ability;\n      a.dataset.ability = ability;\n      a.append(title);\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-brain\");\n\n      return a;\n    },\n    {\n      click: onAbility,\n    }\n  ),\n  // @Skill\n  new PF1TextEnricher(\n    \"skill\",\n    /@Skill\\[(?<skill>\\w+)(;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { skill, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"skill\", options });\n      const title = CONFIG.PF1.skills[skill] ?? skill;\n      a.dataset.skill = skill;\n\n      if (a.dataset.info) {\n        const compendium = pf1.config.skillCompendiumEntries[skill];\n        if (!compendium) return;\n        setIcon(a, \"fa-solid fa-book\");\n      }\n\n      a.append(title);\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-hands-clapping\");\n\n      return a;\n    },\n    {\n      click: onSkill,\n    }\n  ),\n  // @Use\n  new PF1TextEnricher(\n    \"use\",\n    /@Use\\[(?<item>.*?)(?:#(?<action>.*?))?(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n\n    (match, _options) => {\n      const { item, action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"use\", options });\n      a.append(item);\n      a.dataset.item = item;\n      if (action) {\n        const displayAction = action.replace(/^(id|tag):\\s*/, \"\");\n        a.append(` (${displayAction})`);\n        a.dataset.actionId = action;\n      }\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onUse,\n    }\n  ),\n  new PF1TextEnricher(\n    \"action\",\n    /@Action\\[(?<action>.[\\w\\d\\s]+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { action, label, options } = match.groups;\n      const a = createElement({ label, click: true, handler: \"action\", options });\n      a.append(action);\n      a.dataset.speaker = true;\n      a.dataset.action = action;\n\n      generateTooltip(a);\n      setIcon(a, \"fa-solid fa-trowel\");\n\n      return a;\n    },\n    {\n      click: onAction,\n    }\n  ),\n  // @Heal & @Damage\n  new PF1TextEnricher(\n    \"health\",\n    /@(?<command>Heal|Damage)\\[(?<formula>.*?)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match, _options) => {\n      const { command, formula, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"health\", options });\n      a.dataset.command = command.toLowerCase();\n      a.dataset.formula = formula;\n\n      a.append(\n        game.i18n.format(`PF1.EnrichedText.Health.${command}`, {\n          value: label || formula,\n          NL: a.dataset.nonlethal ? game.i18n.localize(\"PF1.EnrichedText.Health.NL\") : \"\",\n        })\n      );\n\n      generateTooltip(a);\n\n      if (a.dataset.command === \"heal\") setIcon(a, \"fa-solid fa-heart-pulse\");\n      else setIcon(a, \"fa-solid fa-heart-crack\");\n\n      return a;\n    },\n    {\n      click: onHealth,\n    }\n  ),\n  // @Browse\n  new PF1TextEnricher(\n    \"browse\",\n    /@Browse\\[(?<category>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { category, label, options } = match.groups;\n      const a = createElement({ click: true, handler: \"browse\", options });\n\n      a.dataset.category = category;\n\n      let mainlabel;\n      const browser = pf1.applications.compendiums[category];\n      // BUG: Fails on world load\n      if (!browser) {\n        setIcon(a, \"fa-solid fa-link-slash\");\n        a.classList.add(\"invalid\");\n        mainlabel = category;\n      } else {\n        setIcon(a, \"fa-solid fa-book\");\n        mainlabel = game.i18n.localize(browser.constructor.typeName);\n      }\n\n      mainlabel = game.i18n.format(\"PF1.EnrichedText.Browse\", { value: mainlabel });\n\n      if (label) a.append(label);\n      else a.append(mainlabel);\n\n      generateTooltip(a);\n\n      if (label) a.dataset.tooltip = mainlabel;\n      if (!browser) {\n        if (label) a.dataset.tooltip += \"<br>\";\n        a.dataset.tooltip +=\n          game.i18n.localize(\"PF1.EnrichedText.Error\") +\n          \": \" +\n          game.i18n.localize(\"PF1.EnrichedText.Errors.NoCategory\");\n      }\n\n      return a;\n    },\n    {\n      click: onBrowse,\n    }\n  ),\n  // @Condition\n  new PF1TextEnricher(\n    \"condition\",\n    /@Condition\\[(?<condition>\\w+)(?:;(?<options>.*?))?](?:\\{(?<label>.*?)})?/g,\n    (match) => {\n      const { condition, options, label } = match.groups;\n\n      // TODO: Find closest condition via Sørensen–Dice coefficient or something.\n      const cond = pf1.registry.conditions.get(condition);\n      const text = cond?.name || condition;\n\n      const a = createElement({ click: true, handler: \"condition\", options });\n      if (!cond) a.classList.add(\"broken\");\n\n      a.dataset.condition = condition;\n\n      if (a.dataset.disable) a.dataset.remove = true;\n\n      if (a.dataset.info) {\n        setIcon(a, \"fa-solid fa-atlas\");\n        if (!cond?.journal) a.classList.add(\"broken\");\n      } else if (a.dataset.remove) {\n        setIcon(a, \"fa-solid fa-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Remove\", { value: text });\n      } else if (a.dataset.toggle) {\n        setIcon(a, \"fa-solid fa-plus-minus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Toggle\", { value: text });\n      } else {\n        setIcon(a, \"fa-solid fa-plus\");\n        a.dataset.tooltip = game.i18n.format(\"PF1.EnrichedText.Add\", { value: text });\n      }\n\n      /*\n      if (a.dataset.duration) {\n        const [time, unit] = parseDuration(a.dataset.duration);\n        // TODO: i18n\n        const unitLabel = unit;\n        a.dataset.tooltip +=\n          \"<br>\" + game.i18n.format(\"PF1.EnrichedText.Condition.Duration\", { unit: unitLabel, period: time });\n      }\n      */\n\n      a.append(text);\n\n      return a;\n    },\n    {\n      click: onCondition,\n    }\n  ),\n];\n\n/**\n * Register in setup phase so modules can alter the enrichers before they're registered\n * ... and become largely immutable without deeper modification.\n * Otherwise this could be done in init phase.\n */\nHooks.once(\"setup\", () => {\n  CONFIG.TextEditor.enrichers.push(...enrichers);\n});\n\n/**\n * Proxy click and drag events to the enrichers\n *\n * @param {JQuery<MouseEvent>} event Click event\n * @param click\n */\nconst onEnrichedInteraction = (event, click = true) => {\n  const target = event.currentTarget,\n    handler = target.dataset.handler,\n    enricher = enrichers.find((e) => e.id === handler);\n\n  if (!enricher) throw new Error(`Relevant enricher not found: ${handler}`);\n\n  if (target.classList.contains(\"broken\")) return;\n\n  event.stopPropagation();\n  event.preventDefault();\n\n  if (click) enricher.click(event, target);\n  else enricher.drag(event, target);\n};\n\n// Register click & drag handlers\nHooks.once(\"ready\", () => {\n  // Mimic Foundry listener handling for simplicity\n  // TODO: Use plain DOM instead\n  const body = $(\"body\");\n  body.on(\"click\", \"a.pf1-link.button\", (event) => onEnrichedInteraction(event, true));\n  //body.on(\"drag\", \"a.pf1-link.content\", (event) => onEnrichedInteraction(event, false));\n});\n","import { measureDistance } from \"../utils/lib.mjs\";\n\nconst withinAngle = (min, max, value) => {\n  min = Math.normalizeDegrees(min);\n  max = Math.normalizeDegrees(max);\n  value = Math.normalizeDegrees(value);\n\n  if (min < max) return value >= min && value <= max;\n  return value >= min || value <= max;\n};\n\n/**\n * @param {Point} point\n * @param {Rectangle} rect\n * @returns {boolean}\n */\nconst withinRect = (point, rect) => {\n  return point.x >= rect.x && point.x < rect.x + rect.width && point.y >= rect.y && point.y < rect.y + rect.height;\n};\n\n/**\n * Applies patches to core functions to integrate Pathfinder specific measurements.\n *\n * Replacement for `CONFIG.Canvas.layers.templates.layerClass`\n */\nexport class TemplateLayerPF extends TemplateLayer {\n  /**\n   * Foundry does not allow snapping template drag.\n   *\n   * @override\n   * @param {Event} event\n   */\n  _onDragLeftMove(event) {\n    if (!game.settings.get(\"pf1\", \"measureStyle\")) return super._onDragLeftMove(event);\n\n    const interaction = event.interactionData;\n    const { destination, layerDragState, preview, origin } = interaction;\n    if (layerDragState === 0) return;\n\n    // Snap the destination to the grid\n    const snapToGrid = !event.shiftKey;\n    if (snapToGrid) {\n      interaction.destination = canvas.grid.getSnappedPosition(destination.x, destination.y, this.gridPrecision);\n    }\n\n    // Compute the ray\n    const ray = new Ray(origin, destination);\n    const dist = canvas.dimensions.distance;\n    const ratio = canvas.dimensions.size / dist;\n\n    // Update the preview object\n    const baseDistance = ray.distance / ratio;\n    preview.document.distance = baseDistance;\n\n    const baseDirection = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n    preview.document.direction = baseDirection;\n\n    if (snapToGrid) {\n      switch (preview.document.t) {\n        case \"cone\": {\n          const halfAngle = CONFIG.MeasuredTemplate.defaults.angle / 2;\n          preview.document.direction = Math.floor((baseDirection + halfAngle / 2) / halfAngle) * halfAngle;\n          break;\n        }\n      }\n    }\n\n    preview.renderFlags.set({ refreshShape: true });\n\n    // Confirm the creation state\n    interaction.layerDragState = 2;\n  }\n}\n\nexport class MeasuredTemplatePF extends MeasuredTemplate {\n  /**\n   * @deprecated\n   */\n  getHighlightedSquares() {\n    foundry.utils.logCompatibilityWarning(\n      \"MeasuredTemplatePF.getHighlightedSquares() deprecated in favor of MeasuredTemplate._getGridHighlightPositions()\",\n      {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      }\n    );\n    return this._getGridHighlightPositions();\n  }\n\n  /**\n   * Get highlighted square coordinates.\n   *\n   * Supports only circle, cone and ray templates.\n   *\n   * @protected\n   * @override\n   * @returns {Point[]} - Array of grid coordinates\n   */\n  _getGridHighlightPositions() {\n    const templateType = this.document.t;\n    if (!this.ray || !game.settings.get(\"pf1\", \"measureStyle\") || ![\"circle\", \"cone\", \"ray\"].includes(templateType)) {\n      return super._getGridHighlightPositions();\n    }\n\n    const isCone = templateType === \"cone\",\n      isRay = templateType === \"ray\";\n\n    const grid = canvas.grid,\n      // Size of each cell in pixels\n      gridSizePxBase = canvas.dimensions.size,\n      // Offset for uneven grids\n      gridSizePxOffset = gridSizePxBase % 2,\n      // Final grid size\n      gridSizePx = gridSizePxBase + gridSizePxOffset,\n      gridSizeUnits = canvas.dimensions.distance; // feet, meters, etc.\n\n    const { direction, angle: docAngle, distance } = this.document;\n    // If angle is 0, swap to default angle. Constrain it to 359 degrees, too. Angle of 360 is same as 0 for Foundry.\n    const angle = Math.min(Math.abs(docAngle || CONFIG.MeasuredTemplate.defaults.angle), 359);\n\n    // Parse rays as per Bresenham's algorithm\n    if (isRay) {\n      const result = [];\n\n      const line = (x0, y0, x1, y1) => {\n        x0 = Math.floor(x0 / gridSizePx);\n        x1 = Math.floor(x1 / gridSizePx);\n        y0 = Math.floor(y0 / gridSizePx);\n        y1 = Math.floor(y1 / gridSizePx);\n\n        const dx = Math.abs(x1 - x0);\n        const dy = Math.abs(y1 - y0);\n        const sx = x0 < x1 ? 1 : -1;\n        const sy = y0 < y1 ? 1 : -1;\n        let err = dx - dy;\n\n        while (!(x0 === x1 && y0 === y1)) {\n          result.push({ x: x0 * gridSizePx, y: y0 * gridSizePx });\n          const e2 = err << 1;\n          if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n          }\n          if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n          }\n        }\n      };\n\n      // Extend ray by half a square for better highlight calculation\n      const ray = Ray.fromAngle(this.ray.A.x, this.ray.A.y, this.ray.angle, this.ray.distance + gridSizePx / 2);\n\n      // Get resulting squares\n      line(ray.A.x, ray.A.y, ray.B.x, ray.B.y);\n\n      return result;\n    }\n\n    // Get number of rows and columns\n    const nr = Math.ceil((distance * 1.5) / gridSizeUnits / (gridSizePx / grid.h)),\n      nc = Math.ceil((distance * 1.5) / gridSizeUnits / (gridSizePx / grid.w));\n\n    // Get the center of the grid position occupied by the template\n    const { x, y } = this.document;\n\n    const [cx, cy] = grid.getCenter(x, y),\n      [col0, row0] = grid.grid.getGridPositionFromPixels(cx, cy),\n      minAngle = Math.normalizeDegrees(direction - angle / 2),\n      maxAngle = Math.normalizeDegrees(direction + angle / 2);\n\n    // Origin offset multiplier\n    const offsetMult = { x: 0, y: 0 };\n    // Offset measurement for cones\n    // Offset is to ensure that cones only start measuring from cell borders, as in https://www.d20pfsrd.com/magic/#Aiming_a_Spell\n    if (isCone) {\n      // Degrees anticlockwise from pointing right. In 45-degree increments from 0 to 360\n      const dir = (direction >= 0 ? 360 - direction : -direction) % 360;\n      // If we're not on a border for X, offset by 0.5 or -0.5 to the border of the cell in the direction we're looking on X axis\n      // /2 turns from 1/0/-1 to 0.5/0/-0.5\n      offsetMult.x = x % gridSizePxBase != 0 ? Math.sign(Math.round(Math.cos(Math.toRadians(dir)))) / 2 : 0;\n      // Same for Y, but cos Y goes down on screens, we invert\n      offsetMult.y = y % gridSizePxBase != 0 ? -Math.sign(Math.round(Math.sin(Math.toRadians(dir)))) / 2 : 0;\n    }\n\n    // Determine point of origin\n    const origin = {\n      x: x + offsetMult.x * gridSizePxBase,\n      y: y + offsetMult.y * gridSizePxBase,\n    };\n\n    const result = [];\n    for (let a = -nc; a < nc; a++) {\n      for (let b = -nr; b < nr; b++) {\n        // Position of cell's top-left corner, in pixels\n        const [gx, gy] = canvas.grid.grid.getPixelsFromGridPosition(col0 + a, row0 + b);\n\n        // Determine point we're measuring the distance to - always in the center of a grid square\n        const destination = { x: gx + gridSizePx * 0.5, y: gy + gridSizePx * 0.5 };\n\n        const ray = new Ray(origin, destination);\n        if (isCone && ray.distance > 0) {\n          const rayAngle = Math.normalizeDegrees(ray.angle / (Math.PI / 180));\n          if (!withinAngle(minAngle, maxAngle, rayAngle)) {\n            continue;\n          }\n        }\n\n        // Check distance, add 1 pixel to avoid rounding issues\n        const cdistance = measureDistance(origin, destination, { ray });\n        if (cdistance <= distance + 1) {\n          result.push({ x: gx, y: gy });\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Determine tokens residing within the template bounds, based on either grid higlight logic or token center.\n   *\n   * @public\n   * @returns {Promise<Token[]>} Tokens sufficiently within the template.\n   */\n  async getTokensWithin() {\n    const shape = this.document.t,\n      dimensions = this.scene.dimensions,\n      gridSizePx = dimensions.size,\n      gridSizeUnits = dimensions.distance;\n\n    const getCenter = () => {\n      if (shape !== \"rect\") return this.center;\n      // Hack: Fix for Foundry bug where .center for rectangle template returns top-left corner instead.\n      return {\n        x: this.x + this.width / 2,\n        y: this.y + this.height / 2,\n      };\n    };\n\n    // Ensure shape and related data exists (e.g. this.ray) for getHighlightedSquares to work correctly.\n    // this.width, this.height, etc. are wrong without this\n    if (!this.shape) {\n      this._applyRenderFlags({ refreshShape: true });\n      // HACK: Wait for next tick, the template won't be finalized by Foundry until then.\n      // Likely breaks with Foundry v12 with newer PIXI version\n      await new Promise((resolve) => canvas.app.ticker.addOnce(() => resolve()), undefined, PIXI.UPDATE_PRIORITY.LOW);\n    }\n\n    const tCenter = getCenter();\n\n    const { distance, angle, direction } = this.document;\n\n    // Max distance from template center, +1 cell for proper detection, and +1 pixel for uneven grids and rounding protection\n    const maxDistance = Math.max(this.height, this.width) + gridSizePx + 1;\n    // Get tokens within max potential distance from the template\n    const relevantTokens = new Set(\n      canvas.tokens.placeables.filter((t) => new Ray(t.center, tCenter).distance - t.sizeErrorMargin <= maxDistance)\n    );\n\n    const results = new Set();\n\n    const isLargeToken = (t) => t.document.width > 1 || t.document.height > 1;\n\n    const withinCircle = (target) => {\n      const ray = new Ray(tCenter, target);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include this token if its center is within template radius\n      return raySceneLength <= distance + 1;\n    };\n\n    const withinCone = (target, minAngle, maxAngle) => {\n      const ray = new Ray(tCenter, target);\n      const rayAngle = Math.normalizeDegrees(Math.toDegrees(ray.angle));\n      const rayWithinAngle = withinAngle(minAngle, maxAngle, rayAngle);\n      // Calculate ray length in relation to circle radius\n      const raySceneLength = (ray.distance / gridSizePx) * gridSizeUnits;\n      // Include token if its within template distance and within the cone's angle\n      return rayWithinAngle && raySceneLength <= distance + 1;\n    };\n\n    // Rectangle has same handling everywhere\n    if (shape === \"rect\") {\n      const rect = {\n        x: this.x,\n        y: this.y,\n        width: this.shape.width,\n        height: this.shape.height,\n      };\n\n      for (const t of relevantTokens) {\n        if (isLargeToken(t)) {\n          const cells = t.getOccupiedCells({ center: true });\n          if (cells.some((c) => withinRect(c, rect))) results.add(t);\n        } else {\n          if (withinRect(t.center, rect)) results.add(t);\n        }\n      }\n    }\n    // Special handling for gridless\n    else if (canvas.grid.type === CONST.GRID_TYPES.GRIDLESS && [\"circle\", \"cone\"].includes(shape)) {\n      // Pre-calc cone data\n      let minAngle, maxAngle;\n      if (shape === \"cone\") {\n        minAngle = Math.normalizeDegrees(direction - angle / 2);\n        maxAngle = Math.normalizeDegrees(direction + angle / 2);\n      }\n\n      // TODO: Test against vision points and ensure ~third of them are inside the template instead.\n      for (const t of relevantTokens) {\n        const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n        switch (shape) {\n          case \"circle\": {\n            if (cells.some((c) => withinCircle(c))) results.add(t);\n            break;\n          }\n          case \"cone\": {\n            if (cells.some((c) => withinCone(c, minAngle, maxAngle))) results.add(t);\n            break;\n          }\n        }\n      }\n    }\n    // Non-gridless\n    else {\n      const mapCoordsToCell = ({ x, y }) => ({ x, y, width: gridSizePx, height: gridSizePx });\n\n      const highlightSquares = this._getGridHighlightPositions().map(mapCoordsToCell);\n      for (const cell of highlightSquares) {\n        for (const t of relevantTokens) {\n          const cells = isLargeToken(t) ? t.getOccupiedCells({ center: true }) : [t.center];\n\n          if (cells.some((tc) => withinRect(tc, cell))) {\n            results.add(t);\n            relevantTokens.delete(t);\n          }\n        }\n      }\n    }\n\n    return Array.from(results);\n  }\n\n  // Highlight grid in PF1 style\n  highlightGrid() {\n    if (\n      !game.settings.get(\"pf1\", \"measureStyle\") ||\n      ![\"circle\", \"cone\", \"ray\"].includes(this.document.t) ||\n      canvas.grid.type !== CONST.GRID_TYPES.SQUARE\n    )\n      return super.highlightGrid();\n\n    const grid = canvas.grid,\n      bc = this.borderColor,\n      fc = this.fillColor;\n\n    // Only highlight for objects which have a defined shape\n    if (!this.id || !this.shape) return;\n\n    // Clear existing highlight\n    const hl = this.getHighlightLayer();\n    hl.clear();\n    if (!this.isVisible) return;\n\n    // Get grid squares to highlight\n    const highlightSquares = this._getGridHighlightPositions();\n    for (const s of highlightSquares) {\n      grid.grid.highlightGridPosition(hl, { x: s.x, y: s.y, color: fc, border: bc });\n    }\n  }\n\n  getHighlightLayer() {\n    return canvas.grid.getHighlightLayer(this.highlightId);\n  }\n\n  /**\n   * Return origin item if any.\n   *\n   * @type {Item|pf1.components.ItemAction|null}\n   */\n  get origin() {\n    const { uuid, action: actionId } = this.document.getFlag(\"pf1\", \"origin\") ?? {};\n    if (!uuid) return null;\n    const item = fromUuidSync(uuid);\n    const action = item?.actions?.get(actionId);\n    return action ?? item ?? null;\n  }\n}\n","import { convertDistance, measureDistance, calculateRangeFormula } from \"../utils/lib.mjs\";\nimport { RollPF } from \"../dice/roll.mjs\";\n\nconst rangeColor = {\n  fill: Color.from(\"#FF0000\"),\n  border: Color.from(\"#FF0000\").multiply(0.9),\n};\nconst reachColor = {\n  fill: Color.from(\"#FFFF00\"),\n  border: Color.from(\"#FFFF00\").multiply(0.9),\n};\n\nclass SquareHighlight {\n  constructor(origin, fillColor = 0x00ff00, borderColor = 0x000000) {\n    this.origin = origin;\n    this.borderColor = borderColor;\n    this.fillColor = fillColor;\n    this._squares = [];\n\n    this._id = foundry.utils.randomID();\n\n    canvas.grid.addHighlightLayer(`AttackHighlight.${this._id}`);\n  }\n\n  addSquare(x, y) {\n    this._squares.push({ x: x, y: y });\n  }\n\n  clear() {\n    const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n    if (!hl) return;\n    hl.clear();\n  }\n\n  render() {\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n\n    this.clear();\n\n    // Highlight squares\n    for (const s of this._squares) {\n      const x = Math.floor(this.origin.x - s.x) * gridSize;\n      const y = Math.floor(this.origin.y - s.y) * gridSize;\n      grid.grid.highlightGridPosition(hl, { x: x, y: y, border: this.borderColor, color: this.fillColor });\n    }\n  }\n}\n\n/**\n * Calculates the attack for a token's attack.\n */\nclass AttackHighlightBase {\n  /** @abstract */\n  clearHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n  /** @abstract */\n  renderHighlight() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @abstract\n   * @returns {boolean}\n   */\n  get isValid() {\n    throw new Error(\"must be overridden\");\n  }\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    const attack = action?.item;\n    if (!action || !token || !attack) throw new Error(\"Invalid arguments.\");\n  }\n}\n\nclass GridlessHighlight extends AttackHighlightBase {\n  /** @type {number[]|undefined} */\n  #rangeStops;\n\n  /** @override */\n  get isValid() {\n    return (this.#rangeStops?.length ?? 0) >= 2;\n  }\n\n  /** @type {{x: number, y: number} | undefined} */\n  #center;\n\n  /**\n   * @param {Token} token - The token to calculate the attack reach for\n   * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    this.#center = {\n      x: Math.floor(token.x + (tw * gridSize) / 2),\n      y: Math.floor(token.y + (th * gridSize) / 2),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.data.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const rangeMeasurements = [minRange || 0, r];\n\n    if (rangeKey === \"ft\") {\n      // Add range increments\n      const rangeIncrements = action.data.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        rangeMeasurements.push((a + 1) * r);\n      }\n    }\n\n    this.#rangeStops = rangeMeasurements.map((r) => {\n      const tokenOffset = r === 0 ? 0 : (tw * gridSize) / 2;\n      return (r * canvas.dimensions.size) / canvas.dimensions.distance + tokenOffset;\n    });\n\n    this._id = foundry.utils.randomID();\n    canvas.grid.addHighlightLayer(`AttackHighlight.${this._id}`);\n  }\n\n  clearHighlight() {\n    if (this.isValid) {\n      const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n      if (!hl) return;\n      hl.removeChildren();\n      this.#rangeStops = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.isValid) {\n      const hl = canvas.grid.getHighlightLayer(`AttackHighlight.${this._id}`);\n      if (!hl) return;\n      hl.clear();\n\n      const { x, y } = this.#center;\n\n      const circle = new PIXI.Graphics();\n\n      const stops = /** @type {!number[]} */ (this.#rangeStops);\n      for (let i = stops.length - 1; i > 0; i--) {\n        const outer = stops[i];\n        const inner = stops[i - 1];\n\n        const color = [rangeColor, reachColor][(i + 1) % 2];\n\n        circle.beginFill(color.fill, 0.1);\n        circle.drawCircle(x, y, outer);\n\n        // if inner has a defined value and is not 0, then cut a hole for either the next increment or because it's the minimum range\n        if (inner) {\n          circle.beginHole();\n          circle.beginFill(reachColor.fill, 0.1);\n          circle.drawCircle(x, y, inner);\n          circle.endHole();\n        }\n      }\n      circle.endFill();\n\n      hl.addChild(circle);\n    }\n  }\n}\n\nclass SquareGridHighlight extends AttackHighlightBase {\n  /**\n   * @typedef {object} AttackReachHighlight\n   * An object containing highlights belonging to a specific attack\n   * @property {SquareHighlight} normal - Highlight for normal range\n   * @property {SquareHighlight[]} extra - Additional highlights\n   */\n\n  /** @type {AttackReachHighlight|undefined} */\n  #currentHighlight;\n\n  /** @override */\n  get isValid() {\n    return !!this.#currentHighlight;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  constructor(token, action) {\n    super(token, action);\n    const attack = action?.item;\n\n    const grid = canvas.grid;\n    const gridSize = grid.size;\n    const tw = token.document.width;\n    const th = token.document.height;\n    const origin = {\n      x: Math.floor((token.x + tw * gridSize - 0.5 * gridSize) / gridSize),\n      y: Math.floor((token.y + th * gridSize - 0.5 * gridSize) / gridSize),\n    };\n\n    const rollData = action.getRollData();\n\n    // Determine whether reach\n    const rangeKey = action.data.range.units;\n    if (![\"melee\", \"touch\", \"reach\", \"ft\", \"close\", \"medium\"].includes(rangeKey)) return;\n    const isReach = rangeKey === \"reach\";\n    const isFeet = rangeKey === \"ft\";\n\n    // Determine minimum range\n    const minRange = pf1.utils.convertDistanceBack(action.getRange({ type: \"min\", rollData }))[0];\n\n    const r = pf1.utils.convertDistanceBack(action.getRange({ type: \"single\", rollData }))[0];\n\n    const squares = {\n      normal: [],\n      reach: [],\n      extra: [],\n    };\n    const useReachRule = game.settings.get(\"pf1\", \"alternativeReachCornerRule\") !== true;\n\n    squares.normal = this.#getReachSquares(token, r, minRange, { useReachRule: isFeet ? true : useReachRule });\n\n    if (rangeKey === \"ft\") {\n      // Add range increments\n      const ftDistance = convertDistance(r)[0];\n      const userLimit = game.settings.get(\"pf1\", \"performance\").reachLimit;\n      const maxSquareRange = Math.min(\n        userLimit, // arbitrary limit to enhance performance on large canvases\n        Math.max(\n          (canvas.dimensions.width / canvas.dimensions.size) * canvas.dimensions.distance,\n          (canvas.dimensions.height / canvas.dimensions.size) * canvas.dimensions.distance\n        ) + ftDistance\n      );\n      const rangeIncrements = action.data.range.maxIncrements;\n      for (let a = 1; a < rangeIncrements; a++) {\n        if ((a + 1) * ftDistance <= maxSquareRange) {\n          squares.extra.push(this.#getReachSquares(token, (a + 1) * r, a * r, { useReachRule }));\n        }\n      }\n    }\n\n    const result = {\n      normal: new SquareHighlight(origin, rangeColor.fill, rangeColor.border),\n      extra: [],\n    };\n\n    for (const s of squares.normal) {\n      result.normal.addSquare(s[0], s[1]);\n    }\n\n    // Add extra range squares\n    for (let a = 0; a < squares.extra.length; a++) {\n      const squaresExtra = squares.extra[a];\n\n      const color = {\n        fill: a % 2 === 1 ? rangeColor.fill : reachColor.fill,\n        border: a % 2 === 1 ? rangeColor.border : reachColor.border,\n      };\n\n      const hl = new SquareHighlight(origin, color.fill, color.border);\n      for (const s of squaresExtra) {\n        hl.addSquare(s[0], s[1]);\n      }\n      result.extra.push(hl);\n    }\n\n    this.#currentHighlight = result;\n  }\n\n  /**\n   *\n   * @param {Token} token\n   * @param {number} range\n   * @param {number} minRange\n   * @param {object} options\n   * @returns {Array<Array<number,number>>} - Array of x,y coordinate tuples\n   */\n  #getReachSquares(token, range, minRange = 0, options) {\n    const result = [];\n    if (canvas.grid.type !== CONST.GRID_TYPES.SQUARE) return result;\n\n    range = convertDistance(range)[0];\n    if (typeof minRange === \"number\") minRange = convertDistance(minRange)[0];\n\n    // Initialize variables\n    const gridDist = canvas.scene.grid.distance;\n    const gridSize = canvas.grid.size;\n\n    // Determine token squares\n    const tokenSquares = [];\n    for (let a = 0; a < Math.floor(token.w / gridSize); a++) {\n      for (let b = 0; b < Math.floor(token.h / gridSize); b++) {\n        const x = Math.floor((token.x + gridSize * 0.5) / gridSize + a);\n        const y = Math.floor((token.y + gridSize * 0.5) / gridSize + b);\n        tokenSquares.push([x, y]);\n      }\n    }\n\n    // Determine token-based variables\n    const tokenRect = [\n      Math.floor((token.x + gridSize * 0.5) / gridSize),\n      Math.floor((token.y + gridSize * 0.5) / gridSize),\n      Math.floor(token.w / gridSize),\n      Math.floor(token.h / gridSize),\n    ];\n\n    // Create function to determine closest token square\n    const getClosestTokenSquare = function (pos) {\n      const lowest = { square: null, dist: null };\n      for (const s of tokenSquares) {\n        const dist = Math.sqrt((s[0] - pos[0]) ** 2 + (s[1] - pos[1]) ** 2);\n        if (lowest.dist == null || dist < lowest.dist) {\n          lowest.square = s;\n          lowest.dist = dist;\n        }\n      }\n\n      return lowest.square;\n    };\n\n    // Gather potential squares\n    const squareRange = Math.round(range / gridDist);\n    const wMax = squareRange * 2 + tokenRect[2];\n    const hMax = squareRange * 2 + tokenRect[3];\n    const tl = [tokenRect[0] - squareRange, tokenRect[1] - squareRange];\n    for (let a = tl[0]; a < tl[0] + wMax; a++) {\n      for (let b = tl[1]; b < tl[1] + hMax; b++) {\n        const closestSquare = getClosestTokenSquare([a, b]);\n\n        const offset = [a - tokenRect[0], b - tokenRect[1]];\n        if (\n          !(\n            a >= tokenRect[0] &&\n            a < tokenRect[0] + tokenRect[2] &&\n            b >= tokenRect[1] &&\n            b < tokenRect[1] + tokenRect[2] &&\n            minRange != null\n          ) &&\n          this.#shouldAddReachSquare([a, b], closestSquare, range, minRange, options)\n        ) {\n          result.push(offset);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  #shouldAddReachSquare(pos, closestTokenSquare, range, minRange, options = { useReachRule: false }) {\n    const gridSize = canvas.grid.size;\n    const p0 = { x: closestTokenSquare[0] * gridSize, y: closestTokenSquare[1] * gridSize };\n    const p1 = { x: pos[0] * gridSize, y: pos[1] * gridSize };\n\n    const dist = measureDistance(p0, p1);\n    const dist2 = options.useReachRule ? measureDistance(p0, p1, { diagonalRule: \"555\" }) : null;\n    const reachRuleRange = convertDistance(10)[0];\n    if (dist > range) {\n      // Special rule for 10-ft. reach\n      if (!(options.useReachRule && range === reachRuleRange)) {\n        return false;\n      }\n    }\n\n    if (minRange != null && dist <= minRange) {\n      return false;\n    }\n\n    // Special rule for minimum ranges >= 10-ft.\n    if (options.useReachRule && minRange >= reachRuleRange && dist2 <= reachRuleRange) {\n      return false;\n    }\n\n    return true;\n  }\n\n  clearHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.clear();\n      for (const h of this.#currentHighlight.extra) {\n        h.clear();\n      }\n      this.#currentHighlight = undefined;\n    }\n  }\n\n  renderHighlight() {\n    if (this.#currentHighlight) {\n      this.#currentHighlight.normal.render();\n      for (const h of this.#currentHighlight.extra) {\n        h.render();\n      }\n    }\n  }\n}\n\n/** @type {AttackHighlightbase|undefined} */\nlet attackReachHighlight;\n\n/**\n * Calculates and renders the {@link AttackReachHighlight} for a token's attack.\n * If a highlight already exists, it will be removed.\n *\n * @param {Token} token - The token to calculate the attack reach for\n * @param {pf1.components.ItemAction} action - The action to calculate the reach for\n */\nexport const showAttackReach = (token, action) => {\n  // Clear previous highlight\n  clearHighlight();\n\n  const cls = canvas.grid.type === CONST.GRID_TYPES.SQUARE ? SquareGridHighlight : GridlessHighlight;\n\n  try {\n    const highlight = new cls(token, action);\n\n    // If a highlight could be created, make it the current highlight and render it\n    if (!highlight.isValid) return;\n    attackReachHighlight = highlight;\n    attackReachHighlight.renderHighlight();\n  } catch {\n    // no action, token, or item to use to render the highlight\n  }\n};\n\nexport const clearHighlight = () => {\n  attackReachHighlight?.clearHighlight();\n  attackReachHighlight = undefined;\n};\n\n/**\n * Returns a token belonging to either an actor's UUID or a token's UUID\n *\n * @async\n * @param {string} uuid - UUID of an actor or token\n * @returns {Promise<Token|null|undefined>} A Token, if one can be found\n */\nconst _getTokenByUuid = async function (uuid) {\n  if (!uuid) return;\n  /** @type {TokenDocument | Actor} */\n  const actor = await fromUuid(uuid);\n  if (actor instanceof TokenDocument) return actor.object;\n  return actor?.token ?? (actor != null ? canvas.tokens.placeables.find((o) => o.actor === actor) : null);\n};\n\n/**\n * Add listeners on the {@link ChatLog}'s HTML element, checking for hover events involving\n * chat cards' range element using event delegation.\n *\n * @param {JQuery<HTMLElement>} html - The chat log\n */\nexport function addReachListeners(html) {\n  html.on(\"pointerenter\", \".card-range\", _onMouseEnterReach);\n  html.on(\"pointerleave\", \".card-range\", _onMouseLeaveReach);\n}\n\n/**\n * Handle display of reach when a chat card's reach element is hovered\n *\n * @param {JQuery.MouseEnterEvent<HTMLElement>} event - A `mouseEnter` event\n */\nconst _onMouseEnterReach = (event) => {\n  event.preventDefault();\n  if (game.settings.get(\"pf1\", \"performance\").reachLimit < 10) return;\n\n  const reachElement = event.currentTarget;\n  const card = reachElement.closest(\".chat-card\");\n  const { tokenUuid, actionId, itemId } = card.dataset;\n  if (!(itemId && actionId && tokenUuid)) return;\n\n  _getTokenByUuid(tokenUuid).then((token) => {\n    if (!token) return;\n\n    const item = token.actor.allItems.find((item) => item.id === itemId);\n    const action = item?.actions.get(actionId);\n    if (!action) return;\n\n    showAttackReach(token, action);\n  });\n};\n\n/**\n * Handle clearing of reach highlights created by {@link _onMouseEnterReach}\n *\n * @param {JQuery.MouseLeaveEvent} event - A `mouseLeave` event\n */\nconst _onMouseLeaveReach = (event) => {\n  event.preventDefault();\n  clearHighlight();\n};\n","export class TokenPF extends Token {\n  /**\n   * Synced with Foundry 11.315\n   *\n   * @override\n   * @param {string|object} effect\n   * @param {object} options\n   * @param {boolean} options.active - Force active state\n   * @param {boolean} [options.overlay=false] - Overlay effect\n   * @returns {boolean} - was it applied or removed\n   */\n  async toggleEffect(effect, { active, overlay = false } = {}) {\n    const effectId = typeof effect === \"string\" ? effect : effect?.id;\n    if (this.actor) {\n      const buff = this.actor.items.get(effectId);\n      if (buff) {\n        foundry.utils.logCompatibilityWarning(\"Toggling buffs via TokenPF.toggleEffect() is deprecated.\", {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        });\n\n        await buff.setActive(active ?? !buff.isActive);\n        return buff.isActive;\n      }\n    }\n\n    if (this.actor && pf1.registry.conditions.has(effectId) && typeof this.actor.toggleCondition === \"function\") {\n      let rv;\n      if (active === undefined) rv = await this.actor.toggleCondition(effectId);\n      else rv = await this.actor.setCondition(effectId, active);\n      return rv[effectId];\n    } else {\n      return super.toggleEffect(effect, { active, overlay });\n    }\n  }\n\n  get actorVision() {\n    const ll = this.actor.system.traits?.senses?.ll ?? {};\n    return {\n      lowLight: ll.enabled,\n      lowLightMultiplier: ll.multiplier?.dim,\n      lowLightMultiplierBright: ll.multiplier?.bright,\n    };\n  }\n\n  get disableLowLight() {\n    return this.document.getFlag(\"pf1\", \"disableLowLight\") === true;\n  }\n\n  /**\n   * Synced with Foundry v11.315\n   *\n   * @override\n   * @since PF1 v10\n   */\n  _isVisionSource() {\n    if (!canvas.effects.visibility.tokenVision || !this.hasSight) return false;\n\n    // Only display hidden tokens for the GM\n    const isGM = game.user.isGM;\n    if (this.document.hidden && !isGM) return false;\n\n    // Always display controlled tokens which have vision\n    if (this.controlled) return true;\n\n    // Otherwise, vision is ignored for GM users\n    if (isGM) return false;\n\n    // Vision sharing\n    if (this.actor?.sharesVision) return true;\n\n    // If a non-GM user controls no other tokens with sight, display sight\n    const guarantee = game.settings.get(\"pf1\", \"guaranteedVision\");\n    const canObserve = this.actor?.testUserPermission(game.user, guarantee) ?? false;\n    if (!canObserve) return false;\n    const others = this.layer.controlled.filter((t) => !t.document.hidden && t.hasSight);\n    return !others.length;\n  }\n\n  /**\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The number to boost the bar by, if any.\n   * @protected\n   */\n  _getBarBoost(data) {\n    if (data.attribute === \"attributes.hp\") return { value: this.actor.system.attributes.hp.temp, color: 0xc0d6e4 };\n    if (data.attribute === \"attributes.vigor\")\n      return { value: this.actor.system.attributes.vigor.temp, color: 0xc0d6e4 };\n    return null;\n  }\n\n  /**\n   * Determines the length of the underline (bottom half-height bar overlay) on a token bar.\n   *\n   * @param {object} data         Resource data for this bar\n   * @returns {number|null}       The value of the bar underline, if any.\n   * @protected\n   */\n  _getBarUnderline(data) {\n    if (data.attribute === \"attributes.hp\")\n      return { value: this.actor.system.attributes.hp.nonlethal, color: 0x7d2828 };\n    return null;\n  }\n\n  /**\n   * Draw a single resource bar, given provided data.\n   *\n   * @param {number} number       The Bar number>\n   * @param {PIXI.Graphics} bar   The Bar container.\n   * @param {object} data         Resource data for this bar.\n   * @protected\n   */\n  _drawBar(number, bar, data) {\n    // Get boost value (such as temporary hit points\n    const boost = this._getBarBoost(data);\n    const underline = this._getBarUnderline(data);\n    const boostlessMax = data.max;\n\n    const val = Number(data.value);\n    data.max = Math.max(data.max, (boost?.value ?? 0) + val);\n    const pct = Math.clamped(val, 0, data.max) / data.max;\n    const boostlessPct = Math.clamped(val, 0, boostlessMax) / boostlessMax;\n\n    // Determine sizing\n    let h = Math.max(canvas.dimensions.size / 12, 8);\n    const w = this.w;\n    const bs = Math.clamped(h / 8, 1, 2);\n    if (this.document.height >= 2) h *= 1.6; // Enlarge the bar for large tokens\n\n    // Determine the color to use\n    const blk = 0x000000;\n    let color;\n    if (number === 0) color = Color.fromRGBvalues(1 - boostlessPct / 2, boostlessPct, 0);\n    else color = Color.fromRGBvalues(0.5 * boostlessPct, 0.7 * boostlessPct, 0.5 + boostlessPct / 2);\n\n    // Draw the bar\n    bar.clear();\n    // Draw background of bar\n    bar.beginFill(blk, 0.5).lineStyle(bs, blk, 1.0).drawRoundedRect(0, 0, this.w, h, 3);\n    // Draw bar boost\n    if (boost?.value > 0) {\n      const pct = Math.clamped(val + boost.value, 0, data.max) / data.max;\n      bar\n        .beginFill(boost.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, 0, pct * w, h, 2);\n    }\n\n    // Draw normal value\n    bar\n      .beginFill(color, 1.0)\n      .lineStyle(bs, blk, 1.0)\n      .drawRoundedRect(0, 0, pct * w, h, 2);\n    // Draw bar underline\n    if (underline?.value > 0) {\n      const pct = Math.clamped(underline.value, 0, data.max) / data.max;\n      bar\n        .beginFill(underline.color, 1.0)\n        .lineStyle(bs, blk, 1.0)\n        .drawRoundedRect(0, h / 2, pct * w, h / 2, 2);\n    }\n\n    // Set position\n    const posY = number === 0 ? this.h - h : 0;\n    bar.position.set(0, posY);\n  }\n\n  /**\n   * Returns error margin, in pixels, for measuring to and from token center.\n   *\n   * Defined as larger of half the token's width and height.\n   *\n   * @type {number}\n   */\n  get sizeErrorMargin() {\n    return Math.max(this.w / 2, this.h / 2);\n  }\n\n  /**\n   * Return coordinates of cells the token occupies.\n   *\n   * Bug: Does not work with hex grid.\n   * Bug: Does not account for rotation.\n   *\n   * @param {object} [options={}] - Additional options\n   * @param {boolean} [options.center=false] - Return cell centers instead of origins\n   * @returns {Point[]} - Occupied cell coordinates.\n   */\n  getOccupiedCells({ center = false } = {}) {\n    const doc = this.document;\n    const gridSizePx = this.scene.grid.size ?? 1;\n    const { x, y, width, height } = doc;\n\n    // Offset for returning cell center\n    const offset = center ? gridSizePx / 2 : 0;\n\n    const squares = [];\n\n    const wr = width - 1,\n      hr = height - 1;\n\n    for (let x0 = 0; x0 <= wr; x0++) {\n      for (let y0 = 0; y0 <= hr; y0++) {\n        squares.push({ x: x + x0 * gridSizePx + offset, y: y + y0 * gridSizePx + offset });\n      }\n    }\n\n    return squares;\n  }\n\n  /**\n   * @type {boolean} - Is this token a square?\n   */\n  get isSquare() {\n    return this.document.width === this.document.height;\n  }\n}\n","import { clearHighlight, showAttackReach } from \"./attack-reach.mjs\";\nimport { getSkipActionPrompt } from \"module/documents/settings.mjs\";\nimport { renderCachedTemplate } from \"@utils/handlebars/templates.mjs\";\n\nexport class TokenQuickActions {\n  /**\n   * Add quick action buttons to token HUD.\n   *\n   * @param {TokenHUD} app\n   * @param {JQuery} html\n   */\n  static async addQuickActions(app, html) {\n    const token = app.object;\n    const actor = token.actor;\n\n    const quickActions = actor?.getQuickActions?.();\n    if (!quickActions?.length) return;\n\n    const templateData = {\n      actions: quickActions,\n    };\n\n    const div = document.createElement(\"div\");\n    div.innerHTML = renderCachedTemplate(\"systems/pf1/templates/hud/quick-actions.hbs\", templateData);\n\n    this.activateElementListeners(div.firstChild, actor, token);\n\n    html[0].querySelector(\".col.middle\").after(div.firstChild);\n  }\n\n  /**\n   * Add listeners to token HUD quick action element.\n   *\n   * @param {Element} el Quick action element\n   * @param {Actor} actor - Associated actor\n   * @param {Token} token - Associated token\n   */\n  static activateElementListeners(el, actor, token) {\n    el.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      const itemId = event.target.dataset.itemId;\n      const item = actor.items.get(itemId);\n      if (!event.ctrlKey) {\n        item.use({ ev: event, token: token.document, skipDialog: getSkipActionPrompt() });\n      } else {\n        item.displayCard({ token: token.document });\n      }\n    });\n\n    el.addEventListener(\"contextmenu\", (event) => {\n      event.preventDefault();\n      const itemId = event.target.dataset.itemId;\n      const item = actor.items.get(itemId);\n      item.sheet.render(true, { focus: true });\n    });\n\n    // Reach highlight on mouse hover\n    if (game.settings.get(\"pf1\", \"performance\").reachLimit >= 10) {\n      el.querySelectorAll(\".token-quick-action\").forEach((el) => {\n        const itemId = el.dataset.itemId;\n        const item = actor.items.get(itemId);\n        const action = item.defaultAction;\n        el.addEventListener(\"pointerenter\", () => showAttackReach(token, action), { passive: true });\n        el.addEventListener(\"pointerleave\", () => clearHighlight(), { passive: true });\n      });\n    }\n  }\n}\n","/**\n * See invisibility detection mode with respect to sight (light & darkvision)\n */\nexport class DetectionModeInvisibilityPF extends DetectionModeInvisibility {\n  static ID = \"seeInvisibility\";\n  static LABEL = \"PF1.Sense.seeInvis\";\n  static PRIORITY = 100000;\n\n  /**\n   * Copy of DetectionModeBasicSight._testPoint instead of the one inherited from DetectionMode.\n   *\n   * Allows seeing invisible in lit areas.\n   *\n   * @override\n   */\n  _testPoint(visionSource, mode, target, test) {\n    // Blocked by walls\n    if (!this._testLOS(visionSource, mode, target, test)) return false;\n    // Otherwise allowed within range\n    if (this._testRange(visionSource, mode, target, test)) return true;\n\n    // If limited (e.g. true seeing), do not care about other light sources beyond range\n    if (mode.limited) return false;\n\n    // Allowed outside of range if lit\n    const { x, y } = test.point;\n    for (const lightSource of canvas.effects.lightSources.values()) {\n      if (!lightSource.active) continue;\n      if (lightSource.shape.contains(x, y)) return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Blindsense\n */\nexport class DetectionModeBlindSensePF extends DetectionMode {\n  static ID = \"blindSense\";\n  static LABEL = \"PF1.Sense.blindsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200100;\n\n  constructor(data = {}, ...args) {\n    data.walls = true;\n    super(data, ...args);\n  }\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: this.ID === \"blindSense\",\n    }));\n  }\n\n  /** @override */\n  _canDetect(visionSource, target) {\n    return true;\n  }\n}\n\n/**\n * Blindsight\n */\nexport class DetectionModeBlindSightPF extends DetectionModeBlindSensePF {\n  static ID = \"blindSight\";\n  static LABEL = \"PF1.Sense.blindsight\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.OTHER;\n  static PRIORITY = 200000;\n\n  /** @override */\n  static getDetectionFilter() {\n    return (this._detectionFilter ??= OutlineOverlayFilter.create({\n      outlineColor: [0, 0.33, 0.6, 1],\n      knockout: false,\n      wave: false,\n    }));\n  }\n}\n\n/**\n * Tremorsense\n *\n * Unlike base implementation, does not block with walls.\n */\nexport class DetectionModeTremorPF extends DetectionModeTremor {\n  static ID = \"feelTremor\";\n  static LABEL = \"PF1.Sense.tremorsense\";\n  static DETECTION_TYPE = DetectionMode.DETECTION_TYPES.MOVE;\n  static PRIORITY = 201000;\n\n  constructor(data = {}, ...args) {\n    data.walls = false;\n    super(data, ...args);\n  }\n}\n","/**\n * Rules accurate darkvision override.\n *\n * @remarks\n * Compared to example implementation, this does not turn dim light into bright.\n */\nexport const darkvision = (() => {\n  const data = CONFIG.Canvas.visionModes.darkvision.toObject();\n  delete data.lighting.levels[VisionMode.LIGHTING_LEVELS.DIM];\n  return new VisionMode(data);\n})();\n","import { MeasuredTemplatePF } from \"./measure.mjs\";\nimport { throttle } from \"@utils\";\n\n/**\n * A helper class for building MeasuredTemplates for PF1 spells and abilities\n *\n * @augments {MeasuredTemplate}\n */\nexport class AbilityTemplate extends MeasuredTemplatePF {\n  /**\n   * Preview movement and rotation re-render throttle time in milliseconds.\n   *\n   * @private\n   */\n  static RENDER_THROTTLE = 30;\n\n  /**\n   * A factory method to create an AbilityTemplate instance using provided data\n   *\n   * @param {object} data - Data used to create the template\n   * @param {\"cone\" | \"circle\" | \"rect\" | \"ray\"} data.type - The type of template\n   * @param {number} data.distance - The distance/size of the template\n   * @param {string} [data.texture=null] - Path to template texture\n   * @param {string} [data.color=game.user.color] - Template color\n   * @param {object} [data.flags] - Additional flags stored on the template\n   * @returns {AbilityTemplate|null} - The template object, or null if the data does not produce a template\n   */\n  static fromData(data) {\n    const type = data.type;\n    const distance = data.distance;\n    const flags = data.flags;\n    if (!type) return null;\n    if (!distance) return null;\n    if (!canvas.scene) return null;\n    if (![\"cone\", \"circle\", \"rect\", \"ray\"].includes(type)) return null;\n\n    // Prepare template data\n    const templateData = {\n      t: type,\n      distance: distance || 5,\n      direction: 0,\n      x: 0,\n      y: 0,\n      flags,\n      fillColor: data.color ? data.color : game.user.color,\n      texture: data.texture ? data.texture : null,\n      _id: foundry.utils.randomID(16),\n    };\n\n    // Additional type-specific data\n    switch (type) {\n      case \"cone\":\n        if (game.settings.get(\"pf1\", \"measureStyle\") === true)\n          templateData.angle = CONFIG.MeasuredTemplate.defaults.angle;\n        else templateData.angle = CONFIG.MeasuredTemplate.defaults.originalAngle;\n        break;\n      case \"rect\":\n        templateData.distance = Math.sqrt(Math.pow(distance, 2) + Math.pow(distance, 2));\n        templateData.direction = 45;\n        break;\n      case \"ray\":\n        templateData.width = CONFIG.MeasuredTemplate.defaults.width;\n        break;\n      default:\n        break;\n    }\n\n    // Return the template constructed from the item data\n    const cls = CONFIG.MeasuredTemplate.documentClass;\n    const template = new cls(templateData, { parent: canvas.scene });\n    const object = new this(template);\n    return object;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Creates a preview of the spell template\n   *\n   * @param {Event} event   The initiating click event\n   */\n  async drawPreview(event) {\n    const initialLayer = canvas.activeLayer;\n    await this.draw();\n    this.active = true;\n    this.layer.activate();\n    this.layer.preview.addChild(this);\n    return this.activatePreviewListeners(initialLayer);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Activate listeners for the template preview\n   *\n   * @param {CanvasLayer} initialLayer  The initially active CanvasLayer to re-activate after the workflow is complete\n   * @returns {Promise<object>} Returns result object\n   */\n  activatePreviewListeners(initialLayer) {\n    return new Promise((resolve) => {\n      const handlers = {};\n\n      const pfStyle = game.settings.get(\"pf1\", \"measureStyle\") === true;\n\n      const _clear = () => {\n        if (this.destroyed) return;\n        this.destroy();\n      };\n\n      const throttleRefresh = throttle(() => {\n        this.refresh();\n        canvas.app.render();\n      }, this.constructor.RENDER_THROTTLE);\n\n      // Update placement (mouse-move)\n      handlers.mm = (event) => {\n        event.stopPropagation();\n        const center = event.data.getLocalPosition(this.layer);\n        const pos = canvas.grid.getSnappedPosition(center.x, center.y, 2);\n        this.document.x = pos.x;\n        this.document.y = pos.y;\n        throttleRefresh();\n      };\n\n      // Cancel the workflow (right-click)\n      handlers.rc = (event, canResolve = true) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.layer.preview.removeChildren();\n        canvas.stage.off(\"pointermove\", handlers.mm);\n        canvas.stage.off(\"pointerdown\", handlers.lc);\n        canvas.app.view.removeEventListener(\"contextmenu\", handlers.rc);\n        canvas.app.view.removeEventListener(\"wheel\", handlers.mw);\n        // Clear highlight\n        this.active = false;\n        const hl = canvas.grid.getHighlightLayer(this.highlightId);\n        hl.clear();\n        _clear();\n\n        initialLayer.activate();\n        if (canResolve) resolve({ result: false });\n      };\n\n      // Confirm the workflow (left-click)\n      handlers.lc = async (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        handlers.rc(event, false);\n\n        // Create the template\n        const result = {\n          result: this.document.distance != 0, // Only if template size is creater than 0\n          place: async () => {\n            const [doc] = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [\n              this.document.toObject(false),\n            ]);\n            this.document = doc;\n            return doc;\n          },\n          delete: () => {\n            return this.document.delete();\n          },\n        };\n        _clear();\n        resolve(result);\n      };\n\n      // Rotate the template by 3 degree increments (mouse-wheel)\n      handlers.mw = (event) => {\n        event.preventDefault(); // Prevent browser zoom\n        event.stopPropagation(); // Prevent other handlers\n\n        let delta, snap;\n        if (event.ctrlKey) {\n          delta = canvas.dimensions.distance * -Math.sign(event.deltaY);\n          this.document.distance += delta;\n          if (this.document.distance < 0) this.document.distance = 0;\n        } else {\n          if (pfStyle && this.document.t === \"cone\") {\n            delta = 90;\n            snap = event.shiftKey ? delta : 45;\n          } else {\n            delta = canvas.grid.type > CONST.GRID_TYPES.SQUARE ? 30 : 15;\n            snap = event.shiftKey ? delta : 5;\n          }\n          if (this.document.t === \"rect\") {\n            snap = Math.sqrt(Math.pow(5, 2) + Math.pow(5, 2));\n            this.document.distance += snap * -Math.sign(event.deltaY);\n          } else {\n            this.document.direction += snap * Math.sign(event.deltaY);\n          }\n        }\n\n        throttleRefresh();\n      };\n\n      // Activate listeners\n      if (this.controlIcon) this.controlIcon.removeAllListeners();\n      canvas.stage.on(\"pointermove\", handlers.mm);\n      canvas.stage.on(\"pointerdown\", handlers.lc);\n      canvas.app.view.addEventListener(\"contextmenu\", handlers.rc);\n      canvas.app.view.addEventListener(\"wheel\", handlers.mw);\n      this.hitArea = new PIXI.Polygon([]);\n    });\n  }\n\n  refresh() {\n    if (!this.template) return;\n    if (!canvas.scene) return;\n\n    return super.refresh();\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\n\n/**\n * Base term to identify function terms.\n */\nexport class FunctionTerm extends RollTerm {\n  constructor({ terms = [], options = {}, maxArgs } = {}) {\n    super({ options });\n\n    this.terms = terms.map((t) => {\n      if (t instanceof RollTerm) return t;\n      if (t.class) return RollTerm.fromData(t);\n      return t;\n    });\n\n    // Cap arguments\n    if (maxArgs > 0 && this.terms.length > maxArgs) this.terms = this.terms.slice(0, maxArgs);\n  }\n\n  isIntermediate = false;\n\n  /**\n   * Function parameters\n   *\n   * @type {RollTerm[]}\n   */\n  terms = [];\n\n  static parseArgs(args) {\n    return args.map((t) => {\n      if (t instanceof RollTerm) return t;\n\n      const ts = RollPF.parse(t);\n      if (ts.length > 1) return ParentheticalTerm.fromTerms(ts);\n      else return ts[0];\n    });\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\"];\n\n  /**\n   * Determine if the string term expression is identifier for this function.\n   *\n   * @param {string} expression String identifier from StringTerm.term\n   * @returns {boolean}\n   */\n  static matchTerm(expression) {\n    return false;\n  }\n\n  /**\n   * @type {string} - Simpler formula representation of the result if possible.\n   */\n  get simplify() {\n    return this.formula;\n  }\n\n  /**\n   * @type {true} Simple method of checking this is a FunctionTerm\n   */\n  static get isFunction() {\n    return true;\n  }\n}\n","/**\n * Actual string to be passed to functions.\n *\n * Meant to remain a string instead of being parsed more by Foundry.\n */\nexport class RealStringTerm extends StringTerm {\n  constructor({ term = null, options = {} } = {}) {\n    super({ options });\n    this.term = /^(\\\\?[\"'])(?<str>.*)\\1$/.exec(term)?.groups.str ?? term;\n    if (typeof this.term !== \"string\") throw new Error(`RealStringTerm can only accept strings, received: \"${term}\"`);\n    this._evaluated = true;\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"term\"];\n\n  /**\n   * False expression to allow Roll.validate() passing when it includes this terms.\n   */\n  get expression() {\n    return this.term;\n  }\n\n  get formula() {\n    return `\"${this.term}\"`;\n  }\n\n  static matchTerm(expression) {\n    return /^(\\\\?[\"']).*\\1$/.test(expression);\n  }\n}\n","export class BooleanTerm extends RollTerm {\n  constructor({ term = true, options = {} } = {}) {\n    super({ options });\n    if (![\"true\", \"false\", true, false].includes(term))\n      throw new Error(`BooleanTerm can only be \"true\" or \"false\", received: ${term}`);\n    this.term = term === \"true\" || term === true;\n    this._evaluated = true;\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"term\"];\n\n  get total() {\n    return this.term ? 1 : 0;\n  }\n\n  get expression() {\n    return this.term;\n  }\n\n  get formula() {\n    return this.term.toString();\n  }\n\n  static matchTerm(expression) {\n    return [\"true\", \"false\"].includes(expression);\n  }\n}\n","export class NullTerm extends RollTerm {\n  constructor({ options = {} } = {}) {\n    super({ options });\n    this._evaluated = true;\n  }\n\n  get expression() {\n    return null;\n  }\n\n  get formula() {\n    return \"null\";\n  }\n\n  static matchTerm(expression) {\n    return expression === \"null\";\n  }\n}\n","export class UndefinedTerm extends RollTerm {\n  constructor({ options = {} } = {}) {\n    super({ options });\n    this._evaluated = true;\n  }\n\n  get expression() {\n    return undefined;\n  }\n\n  get formula() {\n    return \"undefined\";\n  }\n\n  static matchTerm(expression) {\n    return expression === \"undefined\";\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * RollTerm for ifelse(condition, if-true, if-false) function.\n *\n * Defaults:\n * - True: 1\n * - False: 0\n *\n * @example\n * ifelse(true) // => 1\n * ifelse(3 > 6, 100, 5) // => 5\n * ifelse(@boo == 2, 10) // => 0\n */\nexport class IfElseTerm extends FunctionTerm {\n  constructor({ terms = [], options }) {\n    super({ options });\n\n    // Help fromData functionality to get things right\n    if (terms) {\n      if (terms[0] instanceof RollTerm) this.terms = terms;\n      else if (typeof terms[0] === \"string\") {\n        this.terms = terms.reduce((all, t) => {\n          if (!t) {\n            all.push(t);\n            return all;\n          }\n          const ts = Roll.parse(t);\n          if (ts.length > 1) all.push(ParentheticalTerm.fromTerms(ts));\n          else all.push(ts[0]);\n          return all;\n        }, []);\n      } else {\n        try {\n          this.terms = terms.map((t) => (t ? RollTerm.fromData(t) : null));\n        } catch (err) {\n          console.error({ terms }, err);\n        }\n      }\n    }\n\n    // Scrap excess arguments\n    if (this.terms.length > 3) this.terms = this.terms.slice(0, 3);\n  }\n\n  terms = [];\n\n  isIntermediate = false;\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\"];\n  static MODIFIERS = {};\n\n  get total() {\n    const [condition, ifTrue, ifFalse] = this.terms;\n    const state = !!condition.total;\n    const term = state ? ifTrue : ifFalse;\n    if (term) return term.total;\n    return state ? 1 : 0;\n  }\n\n  /**\n   * @type {Die[]}\n   */\n  get dice() {\n    return this.terms.reduce((dice, t) => {\n      if (t instanceof DiceTerm) dice.push(t);\n      else if (t instanceof PoolTerm) dice = dice.concat(t.dice);\n      return dice;\n    }, []);\n  }\n\n  /**\n   * @override\n   * @type {string} - Simpler representation of the result.\n   */\n  get simplify() {\n    const [condition, ifTrue, ifFalse] = this.terms;\n    const state = !!condition.total;\n    const term = state ? ifTrue : ifFalse;\n    if (term) return term.formula;\n    return state ? \"1\" : \"0\";\n  }\n\n  /**\n   * @type {string}\n   */\n  get expression() {\n    const terms = [this.terms[0].formula, this.terms[1]?.formula || \"1\", this.terms[2]?.formula || \"0\"];\n    // Omit default behaviour values\n    if (terms[2] === \"0\") {\n      terms.pop();\n      if (terms[1] === \"1\") terms.pop();\n    }\n    return `ifelse(${terms.join(\", \")})`;\n  }\n\n  get isDeterministic() {\n    return !this.terms.some((t) => !t.isDeterministic);\n  }\n\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        term.evaluate(rollOpts);\n      }\n    }\n\n    const [condition, ifTrue, ifFalse] = this.terms;\n\n    const state = !!condition.total;\n    const term = (state ? ifTrue : ifFalse) ?? new NumericTerm({ number: state ? 1 : 0 });\n\n    // Copy flavor to active term\n    if (this.flavor) term.options.flavor = this.flavor;\n\n    // Omit unmatched result from stored data\n    this.terms = [condition, state ? ifTrue : null, state ? null : ifFalse];\n\n    return this;\n  }\n\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    return this._evaluateSync({ minimize, maximize });\n  }\n\n  static matchTerm(expression) {\n    return expression === \"ifelse\";\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { IfElseTerm } from \"./ifelse-term.mjs\";\n\n/**\n * RollTerm for if(condition, if-true) function.\n *\n * @inheritdoc\n * @example\n * if(true, 5) // => 5\n * if(3 > 2) // => 1\n * if(1 > 3) // => 0\n */\nexport class IfTerm extends IfElseTerm {\n  constructor({ terms = [], roll, options }) {\n    super({ terms, roll, options });\n\n    if (this.terms.length > 2) this.terms = this.terms.slice(0, 2);\n  }\n\n  get expression() {\n    const terms = [this.terms[0].formula];\n    const ifTrue = this.terms[1]?.formula || \"1\";\n    // Omit default behaviour value\n    if (ifTrue !== \"1\") terms.push(ifTrue);\n\n    return `if(${terms.join(\", \")})`;\n  }\n\n  get isDeterministic() {\n    return !this.terms.some((t) => !t.isDeterministic);\n  }\n\n  static matchTerm(expression) {\n    return expression === \"if\";\n  }\n}\n","import { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * lookup(search, ...values)\n *\n * Seach is evaluated to a number which is used as zero-based offset to values array, returning the value at evaluated offset.\n *\n * If index goes out of bounds, first value is used as fallback.\n *\n * Usage:\n * - For bounding lookups, use min(), max() and clamped() functions as appropriate.\n * - You may add +1 to your formula to use the first value as explicit error fallback.\n *\n * @example\n * lookup(2, 0, 10, 20, 30) // => 20\n * lookup(500, -100, 10, 20) // => -100\n */\nexport class LookupTerm extends FunctionTerm {\n  constructor({ terms = [], search, result, options = {} } = {}) {\n    super({ terms, options });\n\n    this.search = search;\n    this.result = result;\n\n    // Less than 3 arguments is meaningless as it always has same result, or lacks even default result\n    if (this.terms.length < 3) throw new Error(`LookupTerm requires minimum of 3 arguments`);\n  }\n\n  result = null;\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\", \"search\", \"result\"];\n\n  get expression() {\n    return `lookup(${this.terms.map((t) => (t instanceof ParentheticalTerm ? t.term : t.expression)).join(\", \")})`;\n  }\n\n  get formula() {\n    return `lookup(${this.terms.map((t) => t.formula).join(\", \")})${this.flavor ? `[${this.flavor}]` : \"\"}`;\n  }\n\n  get total() {\n    const search = this.terms[0];\n    if (!search) return undefined;\n\n    let offset = search.total;\n    if (!this.terms[1 + offset]) offset = 0;\n    return this.terms[1 + offset]?.total;\n  }\n\n  get dice() {\n    const term = this.lookupResult;\n    if (!term) return [];\n\n    const roll = Roll.defaultImplementation.fromTerms(term);\n    return roll.dice ?? [];\n  }\n\n  get lookupResult() {\n    const search = this.terms[0];\n    if (!search) return undefined;\n    let offset = search.total;\n\n    // Reset offset if invalid\n    if (offset < 0) offset = 0;\n    else if (this.terms.length < offset + 1) offset = 0;\n\n    return this.terms[1 + offset];\n  }\n\n  get simplify() {\n    return this.lookupResult.formula;\n  }\n\n  get isDeterministic() {\n    return this.terms[0]?.isDeterministic && this.lookupResult?.isDeterministic;\n  }\n\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n    const evalOffset = (i) => {\n      const term = this.terms[i];\n      if (!term._evaluated) term.evaluate(rollOpts);\n    };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    evalOffset(0);\n\n    const search = this.terms[0];\n    const searchRoll = Roll.defaultImplementation.fromTerms([search]);\n    if (!searchRoll._evaluated) searchRoll.evaluate(rollOpts);\n    let offset = Math.max(0, searchRoll.total);\n    if (!this.terms[1 + offset]) offset = 0;\n\n    evalOffset(offset);\n\n    if (this.flavor) this.result.terms[1 + offset].options.flavor = this.flavor;\n\n    this.result ??= Roll.defaultImplementation.fromTerms(this.terms);\n\n    return this;\n  }\n\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize };\n    const evalOffset = async (i) => {\n      const term = this.terms[i];\n      if (!term._evaluated) await term.evaluate(rollOpts);\n    };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          await term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    await evalOffset(0);\n\n    const search = this.terms[0];\n    this.search ??= Roll.defaultImplementation.fromTerms([search]);\n    if (!this.search._evaluated) await this.search.evaluate(rollOpts);\n    let offset = Math.max(0, this.search.total);\n    if (!this.terms[1 + offset]) offset = 0;\n\n    await evalOffset(offset);\n\n    if (this.flavor) this.terms[1 + offset].options.flavor ??= this.flavor;\n\n    return this;\n  }\n\n  get hasNumericTooltip() {\n    const term = this.lookupResult;\n    return term?.isDeterministic ?? true;\n  }\n\n  /**\n   * Get tooltip data for the result.\n   *\n   * @override\n   */\n  getTooltipData() {\n    const term = this.lookupResult;\n    if (!term) return;\n    const roll = Roll.defaultImplementation.fromTerms([term]);\n    return {\n      total: roll.total,\n      flavor: term.options.flavor ?? game.i18n.localize(\"PF1.Undefined\"),\n    };\n  }\n\n  static matchTerm(expression) {\n    return expression === \"lookup\";\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * RollTerm for sizeReach() function\n *\n * @todo Remove roll from serialized data.\n */\nexport class SizeReachTerm extends FunctionTerm {\n  constructor({ terms = [], options = {} } = {}) {\n    super({ terms, options, maxArgs: 3 });\n  }\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\", \"roll\"];\n  static MODIFIERS = {};\n\n  /** @type {number|undefined} */\n  get total() {\n    return this.roll?.total;\n  }\n\n  /** @type {Die[]|undefined} */\n  get dice() {\n    return this.roll?.dice;\n  }\n\n  get expression() {\n    return `sizeReach(${this.terms.map((t) => t.formula).join(\", \")})`;\n  }\n\n  get formula() {\n    return `sizeReach(${this.terms.map((t) => t.formula).join(\", \")})`;\n  }\n\n  /** @type {string|undefined} */\n  get simplify() {\n    return this.roll?.formula;\n  }\n\n  /**\n   * The dice inside this term are valid for inclusion with parent.\n   */\n  get inheritDice() {\n    return this.roll?.dice.length > 0;\n  }\n\n  /** @override */\n  get isDeterministic() {\n    return !this.terms.some((t) => !t.isDeterministic);\n  }\n\n  /** @override */\n  static get isFunction() {\n    return true;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        term.evaluate(rollOpts);\n      }\n    }\n\n    const noRoll = !this.roll;\n    // Map terms to sizeRoll params\n    const sizeDice = noRoll ? pf1.utils.roll.sizeReach(...this.terms.map((r) => r.total)) : null;\n    if (sizeDice && this.flavor) sizeDice[0].options.flavor = this.flavor;\n    // Generate final roll\n    const roll = noRoll ? RollPF.fromTerms(sizeDice) : this.roll;\n    // Copy flavor\n    if (this.flavor) roll.options.flavor = this.flavor;\n\n    this.roll = roll._evaluated ? roll : roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  /** @inheritDoc */\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          await term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        await term.evaluate(rollOpts);\n      }\n    }\n\n    const noRoll = !this.roll;\n    // Map terms to sizeRoll params\n    const reach = noRoll ? pf1.utils.roll.sizeReach(...this.terms.map((r) => r.total)) : null;\n    if (reach && this.flavor) reach[0].options.flavor = this.flavor;\n    // Generate final roll\n    const roll = noRoll ? RollPF.fromTerms(reach) : this.roll;\n    // Copy flavor\n    if (this.flavor) roll.options.flavor = this.flavor;\n\n    this.roll = roll._evaluated ? roll : await roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  static matchTerm(expression) {\n    return expression === \"sizeReach\";\n  }\n\n  get hasNumericTooltip() {\n    return this.roll?.dice.length === 0;\n  }\n\n  getTooltipData() {\n    this.roll.getTooltipData();\n  }\n}\n","import { RollPF } from \"../../roll.mjs\";\nimport { FunctionTerm } from \"../base/function-term.mjs\";\n\n/**\n * RollTerm for sizeRoll() function\n */\nexport class SizeRollTerm extends FunctionTerm {\n  constructor({ terms = [], roll, options = {} } = {}) {\n    super({ terms, options, maxArgs: 4 });\n\n    this.roll = roll ? (roll instanceof Roll ? roll : Roll.fromData(roll)) : undefined;\n  }\n\n  roll = null;\n\n  static SERIALIZE_ATTRIBUTES = [\"terms\", \"roll\"];\n\n  /** @type {number|undefined} */\n  get total() {\n    return this.roll.total;\n  }\n\n  /** @type {Die[]} */\n  get dice() {\n    return this.roll?.dice ?? [];\n  }\n\n  get expression() {\n    return `sizeRoll(${this.terms.map((t) => t.formula).join(\", \")})`;\n  }\n\n  /**\n   * The dice inside this term are valid for inclusion with parent.\n   */\n  get inheritDice() {\n    return true;\n  }\n\n  /**\n   * @override\n   * @type {string} - Simpler representation of the result (e.g. 3d6 instead of sizeRoll(3, 6)).\n   */\n  get simplify() {\n    return this.roll?.formula;\n  }\n\n  /** @override */\n  get isDeterministic() {\n    return false;\n  }\n\n  /** @inheritDoc */\n  _evaluateSync({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize, async: false };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        term.evaluate(rollOpts);\n      }\n    }\n\n    if (!this.roll) {\n      // Map terms to sizeRoll params\n      const sizeDice = pf1.utils.roll.sizeRoll(...this.terms.map((r) => r.total));\n      if (sizeDice && this.flavor) sizeDice[0].options.flavor = this.flavor;\n      // Generate final roll\n      this.roll = RollPF.fromTerms(sizeDice);\n    }\n\n    // Copy flavor\n    if (this.flavor) this.roll.options.flavor ??= this.flavor;\n\n    if (!this.roll._evaluated) this.roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  /** @inheritDoc */\n  async _evaluate({ minimize = false, maximize = false } = {}) {\n    const rollOpts = { minimize, maximize };\n\n    const terms = [];\n    for (let term of this.terms) {\n      if (!term._evaluated) {\n        if (term.isIntermediate) {\n          await term.evaluate(rollOpts);\n          term = new NumericTerm({ number: term.total, options: term.options });\n        }\n      }\n      terms.push(term);\n    }\n    this.terms = terms;\n\n    for (const term of this.terms) {\n      if (!term._evaluated) {\n        await term.evaluate(rollOpts);\n      }\n    }\n\n    if (!this.roll) {\n      // Map terms to sizeRoll params\n      const sizeDice = pf1.utils.roll.sizeRoll(...this.terms.map((r) => r.total));\n      if (sizeDice && this.flavor) sizeDice[0].options.flavor = this.flavor;\n      // Generate final roll\n      this.roll = RollPF.fromTerms(sizeDice);\n    }\n\n    // Copy flavor\n    if (this.flavor) this.roll.options.flavor ??= this.flavor;\n\n    if (!this.roll._evaluated) await this.roll.evaluate(rollOpts);\n\n    return this;\n  }\n\n  static matchTerm(expression) {\n    return expression === \"sizeRoll\";\n  }\n\n  getTooltipData() {\n    return this.roll.getTooltipData();\n  }\n}\n","/**\n * @property {string} text - Note contents\n * @property {string} subTaget - Note subject\n */\nexport class ContextNote extends foundry.abstract.DataModel {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n    return {\n      text: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n      target: new fields.StringField({ initial: \"\", nullable: false, blank: true }),\n    };\n  }\n\n  get subTarget() {\n    foundry.utils.logCompatibilityWarning(\"ContextNote.subTarget is deprecated in favor of ContextNote.target\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    return this.target;\n  }\n\n  static migrateData(source) {\n    if (source.subTarget) {\n      // Transfer a special tuple format target\n      if (source.target === \"spell\" && source.subTarget === \"effect\") {\n        source.target = \"spellEffect\";\n      }\n      // Otherwise transfer subtarget to target\n      else {\n        source.target = source.subTarget;\n      }\n    }\n  }\n}\n","import { keepUpdateArray } from \"../utils/lib.mjs\";\n\nexport class ItemConditional {\n  constructor(data, parent) {\n    this.data = data;\n    this.parent = parent;\n\n    this.prepareData();\n  }\n\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (parent instanceof pf1.components.ItemAction) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newConditionalData = foundry.utils.deepClone(parent.data.conditionals || []);\n      newConditionalData.push(...data);\n\n      // Update parent\n      await parent.update({ conditionals: newConditionalData });\n\n      // Return results\n      return data.map((o) => parent.conditionals.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      default: false,\n      name: \"\",\n      modifiers: [],\n    };\n  }\n\n  /** @type {string} */\n  get id() {\n    return this.data._id;\n  }\n\n  /** @type {string} */\n  get name() {\n    return this.data.name;\n  }\n\n  prepareData() {\n    // Update modifiers\n    if (this.data.modifiers instanceof Array) {\n      this.modifiers = this._prepareModifiers(this.data.modifiers);\n    }\n  }\n\n  _prepareModifiers(modifiers) {\n    const prior = this.modifiers;\n    const collection = new Collection();\n    for (const o of modifiers) {\n      let modifier = null;\n      if (prior && prior.has(o._id)) {\n        modifier = prior.get(o._id);\n        modifier.data = o;\n        modifier.prepareData();\n      } else modifier = new pf1.components.ItemConditionalModifier(o, this);\n      collection.set(o._id || modifier.data._id, modifier);\n    }\n    return collection;\n  }\n\n  async update(updateData, options = {}) {\n    const idx = this.parent.data.conditionals.indexOf(this.data);\n    const prevData = foundry.utils.deepClone(this.data);\n    const newUpdateData = foundry.utils.mergeObject(prevData, updateData);\n\n    // Make sure modifiers remain in an array\n    keepUpdateArray(this.data, newUpdateData, \"modifiers\");\n\n    if (options.dryRun) return newUpdateData;\n    await this.parent.update({ [`conditionals.${idx}`]: newUpdateData });\n  }\n\n  async delete() {\n    const conditionals = foundry.utils.deepClone(this.parent.data.conditionals);\n    conditionals.findSplice((c) => c._id === this.id);\n    return this.parent.update({ conditionals });\n  }\n}\n\nexport class ItemConditionalModifier {\n  /**\n   * @param {object} data\n   * @param {ItemConditional} parent\n   */\n  constructor(data, parent) {\n    this.data = data;\n    this.parent = parent;\n\n    this.prepareData();\n  }\n\n  static async create(data, context = {}) {\n    const { parent } = context;\n\n    if (parent instanceof pf1.components.ItemConditional) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newConditionalModifierData = foundry.utils.deepClone(parent.data.modifiers || []);\n      newConditionalModifierData.push(...data);\n\n      // Update parent\n      await parent.update({ modifiers: newConditionalModifierData });\n\n      // Return results\n      return data.map((o) => parent.modifiers.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      formula: \"\",\n      target: \"\",\n      subTarget: \"\",\n      type: \"\",\n      damageType: pf1.components.ItemAction.defaultDamageType,\n      critical: \"\",\n    };\n  }\n\n  /** @type {string} */\n  get id() {\n    return this.data._id;\n  }\n\n  prepareData() {}\n\n  async update(updateData, options = {}) {\n    const idx = this.parent.data.modifiers.indexOf(this.data);\n    const prevData = foundry.utils.deepClone(this.data);\n    const newUpdateData = foundry.utils.flattenObject(foundry.utils.mergeObject(prevData, updateData));\n\n    if (options.dryRun) return newUpdateData;\n    await this.parent.update({ [`modifiers.${idx}`]: foundry.utils.expandObject(newUpdateData) });\n  }\n\n  async delete() {\n    const idx = this.parent.data.modifiers.indexOf(this.data);\n    if (idx < 0) throw new Error(`Modifier not found in parent ${this.parent.name}`);\n\n    const modifiers = foundry.utils.duplicate(this.parent.data.modifiers);\n    modifiers.splice(idx, 1);\n    return this.parent.update({ modifiers });\n  }\n}\n","/**\n * Script Call\n */\nexport class ItemScriptCall {\n  constructor(data, parent) {\n    this.data = foundry.utils.mergeObject(this.constructor.defaultData, data);\n    this.parent = parent;\n\n    if (this.type === \"macro\") {\n      const macro = fromUuidSync(this.value);\n      this.data.name = macro?.name || `${game.i18n.localize(\"PF1.Unknown\")} (${game.i18n.localize(\"DOCUMENT.Macro\")})`;\n      this.data.img = macro?.img || \"icons/svg/hazard.svg\";\n    }\n  }\n\n  /**\n   * Creates a script call.\n   *\n   * @param {object[]} data - Data to initialize the script call(s) with.\n   * @param {object} context - An object containing context information.\n   * @param {ItemPF} [context.parent] - The parent entity to create the script call within.\n   * @returns The resulting script calls, or an empty array if nothing was created.\n   */\n  static async create(data, context) {\n    const { parent } = context;\n\n    if (parent instanceof pf1.documents.item.ItemPF) {\n      // Prepare data\n      data = data.map((dataObj) => foundry.utils.mergeObject(this.defaultData, dataObj));\n      const newScriptCallData = parent.toObject().system.scriptCalls || [];\n      newScriptCallData.push(...data);\n\n      // Update parent\n      await parent.update({ \"system.scriptCalls\": newScriptCallData });\n\n      // Return results\n      return data.map((o) => parent.scriptCalls.get(o._id));\n    }\n\n    return [];\n  }\n\n  static get defaultData() {\n    return {\n      _id: foundry.utils.randomID(16),\n      name: game.i18n.localize(\"PF1.ScriptCalls.NewName\"),\n      img: \"icons/svg/dice-target.svg\",\n      type: \"script\",\n      value: \"\",\n      category: \"\",\n      hidden: false,\n    };\n  }\n\n  /** @type {string} */\n  get id() {\n    return this.data._id;\n  }\n\n  /** @type {string} */\n  get type() {\n    return this.data.type;\n  }\n\n  /** @type {string} */\n  get value() {\n    return this.data.value;\n  }\n\n  /** @type {string} */\n  get category() {\n    return this.data.category;\n  }\n\n  /** @type {string} */\n  get name() {\n    return this.data.name;\n  }\n\n  /** @type {string} */\n  get img() {\n    return this.data.img;\n  }\n\n  /** @type {boolean} */\n  get hidden() {\n    return this.data.hidden;\n  }\n\n  /** @type {boolean} */\n  get hide() {\n    return this.hidden && !game.user.isGM;\n  }\n\n  /**\n   * @deprecated\n   * @returns {string}\n   */\n  async getScriptBody() {\n    foundry.utils.logCompatibilityWarning(\"ItemScriptCall.getScriptBody() has been deprecated with no replacement.\", {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    return this.type === \"script\" ? this.value : (await fromUuid(this.value))?.command ?? \"\";\n  }\n\n  /**\n   * Get macro delegate for executing this script call with.\n   *\n   * @returns {Macro}\n   */\n  async getDelegate() {\n    if (this.type === \"script\") {\n      return new Macro({\n        type: \"script\",\n        command: this.value,\n        name: this.name,\n      });\n    } else {\n      return fromUuid(this.value);\n    }\n  }\n\n  async update(data, options = {}) {\n    if (this.parent != null) {\n      const rawChange = this.parent.system.scriptCalls.find((o) => o._id === this.id);\n      const idx = this.parent.system.scriptCalls.indexOf(rawChange);\n      if (idx >= 0) {\n        data = Object.entries(data).reduce((cur, o) => {\n          cur[`system.scriptCalls.${idx}.${o[0]}`] = o[1];\n          return cur;\n        }, {});\n        return this.parent.update(data, options);\n      }\n    }\n  }\n\n  // Opens up the editor for this script call\n  async edit({ editable = true } = {}) {\n    // For Macros\n    if (this.type === \"macro\") {\n      const macro = await fromUuid(this.value);\n      if (!macro) return void ui.notifications.error(game.i18n.format(\"PF1.Error.NoMacroID\", { id: this.value }));\n\n      macro.sheet.render(true, { focus: true, editable });\n    }\n    // For regular script calls\n    else {\n      const scriptEditor = new pf1.applications.ScriptEditor({\n        command: this.value,\n        name: this.name,\n        parent: this.parent,\n        script: this.id,\n        scriptCall: true,\n      }).render(true, { editable });\n\n      const result = await scriptEditor.awaitResult();\n      if (result) {\n        return this.update({ value: result.command, name: result.name });\n      }\n    }\n  }\n\n  /**\n   * Executes the script.\n   *\n   * @param {object} shared - An object passed between script calls, and which is passed back as a result of ItemPF.executeScriptCalls.\n   * @param {Object<string, object>} extraParams - A dictionary containing extra parameters to pass on to the call.\n   * @returns {*} - Script return value if any\n   */\n  async execute(shared, extraParams = {}) {\n    // Add variables to the evaluation scope\n    const item = this.parent;\n    const actor = item.actor;\n    const action = shared.action ?? null;\n    const token = actor?.token?.object ?? actor.getActiveTokens(false, false)[0];\n\n    const scm = await this.getDelegate();\n    if (!scm) return;\n\n    // Create temporary macro for handling execution context and other utility\n    return scm.execute({ item, actor, token, shared, action, ...extraParams });\n  }\n}\n","import { convertDistance, calculateRange } from \"../lib.mjs\";\nimport { RollPF } from \"../../dice/roll.mjs\";\n\n/**\n * @internal\n */\nexport const registerHandlebarsHelpers = function () {\n  Handlebars.registerHelper(\"convertDistance\", (value) => (Number.isFinite(value) ? convertDistance(value)[0] : value));\n  Handlebars.registerHelper(\"distanceUnit\", (type) => {\n    foundry.utils.logCompatibilityWarning(`distanceUnit HBS helper is deprecated with no replacement.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    const u = convertDistance(0, type)[1];\n    return pf1.config.measureUnitsShort[u] || u;\n  });\n\n  Handlebars.registerHelper(\"actionRange\", (action, rollData) => {\n    if (!action?.hasRange) return null;\n\n    const range = action.data.range.value;\n    const rangeType = action.data.range.units;\n\n    if (rangeType == null) return null;\n\n    const [rng, unit] = calculateRange(range, rangeType, rollData);\n    return `${rng} ${unit}`;\n  });\n\n  /**\n   * @param {ItemAction} action\n   * @param {object} [_rollData] - Deprecated\n   * @param {object} [options]\n   */\n  function actionDamage(action, _rollData, options) {\n    if (!action.hasDamage) return null;\n    return pf1.utils.formula.actionDamage(action, { simplify: options?.hash?.combine ?? true });\n  }\n\n  Handlebars.registerHelper(\"actionDamage\", actionDamage);\n\n  Handlebars.registerHelper(\"damageTypes\", (typeInfo) => {\n    foundry.utils.logCompatibilityWarning(`damageTypes HBS helper is deprecated with no replacement.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n    const rv = [];\n    const { custom, values } = typeInfo;\n    if (custom) rv.push(custom);\n    values.forEach((dtId) => rv.push(game.i18n.localize(pf1.registry.damageTypes.get(dtId)?.name ?? \"PF1.Undefined\")));\n    return rv.join(\", \");\n  });\n\n  Handlebars.registerHelper(\"actionAttacks\", (action) => {\n    foundry.utils.logCompatibilityWarning(`actionAttacks HBS helper is deprecated with no replacement.`, {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    });\n\n    const attacks = action.getAttacks({ full: true, bonuses: true, conditionals: true }).map((atk) => atk.attackBonus);\n    const highest = Math.max(...attacks); // Highest bonus, with assumption the first might not be that.\n    return `${attacks.length} (${highest < 0 ? highest : `+${highest}`}${attacks.length > 1 ? \"/…\" : \"\"})`;\n  });\n\n  /**\n   * Fetches ability mod value based on ability key.\n   * Avoids contaminating rollData or item data with excess strings.\n   *\n   * @deprecated Remove for v10\n   */\n  Handlebars.registerHelper(\"abilityMod\", (abl, rollData, multiplier) => {\n    return Math.floor(rollData.abilities[abl]?.mod * multiplier ?? 1);\n  });\n\n  Handlebars.registerHelper(\"json-string\", (obj) => {\n    return new Handlebars.SafeString(escape(JSON.stringify(obj)));\n  });\n\n  // Alt numberFormat helper\n  Handlebars.registerHelper(\"numberFormatAlt\", (number, { hash } = {}) =>\n    pf1.utils.limitPrecision(number, hash.decimals)\n  );\n};\n","import { ItemSelector } from \"module/applications/item-selector.mjs\";\nimport { ActorSelector } from \"module/applications/actor-selector.mjs\";\n\n/**\n * @deprecated - Use {@link pf1.utils.dialog.getNumber} instead\n * @param options\n * @param options.title\n * @param options.initial\n * @param options.min\n * @param options.max\n */\nexport async function dialogGetNumber({\n  title = \"Input Number\",\n  initial = null,\n  min = Number.NEGATIVE_INFINITY,\n  max = Number.POSITIVE_INFINITY,\n} = {}) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.dialog.dialogGetNumber is deprecated in favor of pf1.utils.dialog.getNumber\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n\n  let num = await pf1.utils.dialog.getNumber({ title, initial, min, max });\n  // match old return type and value\n  if (Number.isNaN(num)) num = initial;\n  return `${num}`;\n}\n\n/**\n * @deprecated - Use {@link pf1.utils.dialog.getActor} instead\n * @param title\n * @param actors\n * @returns {Promise<{type: string, id: string}>}\n */\nexport async function dialogGetActor(title = \"\", actors = []) {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.utils.dialog.dialogGetActor is deprecated in favor of pf1.utils.dialog.getActor\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n\n  const actorId = await pf1.utils.dialog.getActor({ actors: actors, title: title });\n  return { type: \"actor\", id: actorId };\n}\n\n/**\n * Choose actor from list.\n *\n * This is simplified interface to {@link pf1.applications.ActorSelector}\n *\n * @param {object} options - Options\n * @param {Function<Actor>} [options.filter] - Filtering callback function.\n * @param {Actor[]} [options.actors] - Actor list to choose from.\n * @param {string} [options.title] - Dialog title\n * @param {boolean} [options.disableUnowned=true] - Disable interactions with unowned actors.\n * @param {string} [options.selected] - Already selected actor ID.\n * @param {*} [options.ownership=CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED] - Minimum Ownership level\n * @param {boolean} [options.showUnowned=true] - Whether to show unowned actors.\n * @param {object} [options.appOptions={}] - Application options\n * @param {object} [options.renderOptions={}] - Render options\n * @returns {Promise<string|null>} - Actor ID or null if cancelled.\n */\nexport async function getActor({\n  filter,\n  actors,\n  title,\n  disableUnowned,\n  ownership,\n  selected,\n  showUnowned,\n  appOptions = {},\n  renderOptions = {},\n} = {}) {\n  const filterFunc = (actor) => {\n    return filter?.(actor) ?? true;\n  };\n\n  const options = {\n    actors,\n    disableUnowned,\n    filter: filterFunc,\n    ownership,\n    selected,\n    showUnowned,\n  };\n\n  appOptions.title = title;\n\n  return ActorSelector.wait(options, appOptions, renderOptions);\n}\n\n/**\n * Choose item from actor.\n *\n * This is simplified interface to {@link pf1.applications.ItemSelector}\n *\n * @param {object} options - Options\n * @param {boolean} [options.empty=true] - Allow empty selection.\n * @param {string} [options.type] - Basic filter for item type.\n * @param {string} [options.subType] - Basic filter for item subtype.\n * @param {Function<Item>} [options.filter] - Filtering callback function.\n * @param {Actor} [options.actor] - Actor from which to get items from.\n * @param {Item[]} [options.items] - Item list to get item from. Used only if actor is undefined.\n * @param {string} [options.title] - Dialog title\n * @param {object} [options.appOptions={}] - Application options\n * @param {object} [options.renderOptions={}] - Render options\n * @returns {Promise<Item|null>} - Chosen item or null.\n */\nexport async function getItem({\n  empty = true,\n  type,\n  subType,\n  filter,\n  actor,\n  items,\n  title,\n  appOptions = {},\n  renderOptions = {},\n} = {}) {\n  if (!type && !subType && !filter) throw new Error(\"Insufficient filter rules provided.\");\n\n  const filterFunc = (item) => {\n    if (type && item.type !== type) return false;\n    if (subType && item.subType !== subType) return false;\n    return filter?.(item) ?? true;\n  };\n\n  const options = {\n    actor,\n    items,\n    empty,\n    filter: filterFunc,\n  };\n\n  // Provide nice basic title\n  if (!title && !filter && type) {\n    if (subType) title = pf1.config[`${type}Types`]?.[subType];\n    else title = game.i18n.localize(CONFIG.Item.typeLabels[type]);\n    if (title) title = game.i18n.format(\"PF1.SelectSpecific\", { specifier: title });\n  }\n\n  appOptions.title = title;\n\n  return ItemSelector.wait(options, appOptions, renderOptions);\n}\n\n/**\n * Query for a number from current user.\n *\n * @example\n * const num = await pf1.utils.dialog.getNumber({\n *   placeholder: \"NaN\",\n *   hint: \"Amazing\",\n *   label: \"Gimme a number\",\n * });\n *\n * @param {object} [options={}] Additional options\n * @param {number} [options.min=null] Minimum value\n * @param {number} [options.max=null] Maximum value\n * @param {number} [options.step] Value stepping\n * @param {string} [options.title] Dialog title\n * @param {string} [options.label] A label preceding the number input.\n * @param {string} [options.hint] A hint displayed under the input.\n * @param {number} [options.initial] Initial value\n * @param {string} [options.placeholder] Placeholder value or description.\n * @param {string[]} [options.classes=[]] CSS classes to add.\n * @param {Function} [options.render] Render callback.\n * @param {object} [options.dialog={}] Additional dialog options.\n * @returns {Promise<number>} Provided value\n */\nexport async function getNumber({\n  title,\n  label,\n  hint,\n  initial,\n  placeholder,\n  min,\n  max,\n  step,\n  classes = [],\n  render,\n  dialog: dialogOptions = {},\n} = {}) {\n  const templateData = { value: initial, min, max, step, placeholder, label, hint };\n  const content = await renderTemplate(\"systems/pf1/templates/apps/get-number.hbs\", templateData);\n\n  return Dialog.wait(\n    {\n      title: title || game.i18n.localize(\"PF1.Application.GetNumber.Title\"),\n      content,\n      buttons: {\n        confirm: {\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: game.i18n.localize(\"PF1.Application.GetNumber.Confirm\"),\n          callback: (html) => html.querySelector(\"input[name='number']\").valueAsNumber,\n        },\n      },\n      default: \"confirm\",\n      render,\n      close: () => NaN,\n    },\n    {\n      jQuery: false,\n      classes: [...Dialog.defaultOptions.classes, \"pf1\", \"get-number\", ...classes],\n    },\n    {\n      focus: true,\n      width: 260,\n      ...dialogOptions,\n    }\n  );\n}\n","/**\n * Split copper currency into gold, silver and copper.\n *\n * @param {number} cp Copper\n * @returns {{gp:number,sp:number,cp:number}} Gold, silver, and copper.\n */\nexport function split(cp) {\n  const gp = Math.floor(cp / 100);\n  const sp = Math.floor(cp / 10) - gp * 10;\n  cp = cp - gp * 100 - sp * 10;\n  return {\n    gp: Math.max(0, gp),\n    sp: Math.max(0, sp),\n    cp: Math.max(0, cp),\n  };\n}\n\n/**\n * Merges provided currencies into specified type.\n *\n * @param {object} currency - Currency object\n * @param {number} [currency.pp] - Platinum\n * @param {number} [currency.gp] - Gold\n * @param {number} [currency.sp] - Silver\n * @param {number} [currency.cp] - Copper\n * @param {CoinType} [type] - Return coinage, defaults to copper.\n * @returns {number} - Merged currency\n */\nexport function merge({ pp = 0, gp = 0, sp = 0, cp = 0 } = {}, type = \"cp\") {\n  const copper = pp * 1_000 + gp * 100 + sp * 10 + cp;\n  switch (type) {\n    case \"pp\":\n      return copper / 1_000;\n    case \"gp\":\n      return copper / 100;\n    case \"sp\":\n      return copper / 10;\n    default:\n      return copper;\n  }\n}\n\n/**\n * Convert given amount of copper to some other currency, excess is placed on less valuable coinage.\n *\n * @param {number} cp - Copper quantity\n * @param {CoinType} [target=\"gp\"] - Target unit\n * @returns {{pp:number,gp:number,sp:number,cp:number}} - Resulting conversion\n */\nexport function convert(cp, target = \"gp\") {\n  if (!Number.isFinite(cp) || !(cp >= 0)) throw new Error(`Invalid copper quantity: ${cp}`);\n  let pp = 0,\n    gp = 0,\n    sp = 0;\n  const types = { pp: 3, gp: 2, sp: 1, cp: 0 };\n  const largestType = types[target];\n  if (largestType >= types.pp) {\n    pp = Math.floor(cp / 1_000);\n    cp -= pp * 1_000;\n  }\n  if (largestType >= types.gp) {\n    gp = Math.max(0, Math.floor(cp / 100));\n    cp -= gp * 100;\n  }\n  if (largestType >= types.sp) {\n    sp = Math.max(0, Math.floor(cp / 10));\n    cp -= sp * 10;\n  }\n  return { pp, gp, sp, cp };\n}\n","/**\n * @internal\n * @typedef {RollTerm|FormulaPart} AnyTerm\n */\n\n/**\n * Removes flairs from a formula.\n *\n * @param {string} formula Formula\n * @returns {string} Stripped formula\n */\nexport const unflair = (formula) => formula.replace(/\\[[^\\]]*]/g, \"\");\n\n/**\n * Compress basic math and space in produced formula.\n *\n * @param {string} formula - Formula to compress\n * @returns {string} - Compressed formula\n */\nexport const compress = (formula) =>\n  formula\n    .replace(/\\s+/g, \"\") // remove whitespaces\n    .replace(/\\+-/g, \"-\") // + -n = -n\n    .replace(/--/g, \"+\") // - -n = +n\n    .replace(/-\\+/g, \"-\") // - +n = -n\n    .replace(/\\+\\++/g, \"+\"); // + +n = +n\n\n/**\n * @param {AnyTerm} t\n * @returns {boolean}\n */\nconst isSimpleTerm = (t) => t instanceof NumericTerm || t?.simple || false;\n\nclass FormulaPart {\n  /** @type {AnyChunk[]} */\n  terms = [];\n  simple = false;\n\n  constructor(terms = [], simple = false) {\n    this.terms = terms.filter((t) => !!t);\n    this.simple = simple;\n  }\n\n  get isDeterministic() {\n    return this.terms.every((t) => t.isDeterministic);\n  }\n\n  get formula() {\n    const f = this.terms\n      .map((t) => {\n        if (t.constructor.isFunction) return `${t.simplify}`;\n        else if (t.isDeterministic) return `${t.total}`;\n        else return t.formula;\n      })\n      .join(\"\");\n\n    const roll = Roll.create(f);\n    if (roll.isDeterministic) return roll.evaluate({ async: false }).total.toString();\n    else return f;\n  }\n\n  get total() {\n    const roll = Roll.create(this.formula);\n    roll.evaluate({ async: false });\n    return roll.total;\n  }\n}\n\n/**\n * Combine [\"-\", term] into single {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms\n */\nfunction negativeTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof OperatorTerm && term.operator === \"-\") {\n      // Add preceding + if operators are fully consumed\n      if (!(nterms.at(-1) instanceof OperatorTerm)) {\n        const nt = new OperatorTerm({ operator: \"+\" });\n        nt.evaluate({ async: false });\n        nterms.push(nt);\n      }\n      nterms.push(new FormulaPart([term, terms.shift()], true));\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n *\n * @param {AnyTerm[]} terms\n */\nfunction stringTerms(terms) {\n  const nterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof StringTerm) {\n      // Partial dice terms combine left\n      if (/^d\\d/.test(term.expression)) {\n        nterms.push(new FormulaPart([nterms.pop(), term]));\n      }\n      // Rest combine right\n      else {\n        nterms.push(new FormulaPart([term, terms.shift()]));\n      }\n    } else nterms.push(term);\n  }\n  return nterms;\n}\n\n/**\n * Combine [term, operator, term] cases into singular {@link FormulaPart}\n *\n * @param {AnyTerm[]} terms - Terms to combine\n * @param {string[]} operators - Operators to look for\n * @param {boolean} simpleOnly - Only combine simple terms\n * @returns {AnyTerm[]} - Product\n */\nfunction triTermOps(terms, operators, simpleOnly = false) {\n  const eterms = [];\n  while (terms.length) {\n    const term = terms.shift();\n    if (term instanceof OperatorTerm && operators.includes(term.operator)) {\n      // Only combine simple terms\n      if (simpleOnly && !(isSimpleTerm(eterms.at(-1)) && isSimpleTerm(terms[0]))) {\n        // Fall through\n      }\n      // Combine all\n      else {\n        const left = eterms.pop(),\n          right = terms.shift();\n        eterms.push(new FormulaPart([left, term, right], isSimpleTerm(left) && isSimpleTerm(right)));\n        continue;\n      }\n    }\n    eterms.push(term);\n  }\n\n  return eterms;\n}\n\n/**\n * Ternary wrapper\n */\nclass TernaryTerm {\n  /** @type {RollTerm|FormulaPart}  */\n  condition;\n  /** @type {RollTerm|FormulaPart}  */\n  ifTrue;\n  /** @type {RollTerm|FormulaPart}  */\n  ifFalse;\n\n  constructor(condition, ifTrue, ifFalse) {\n    if (!(condition instanceof FormulaPart))\n      condition = new FormulaPart(Array.isArray(condition) ? condition : [condition]);\n    this.condition = condition;\n\n    if (!(ifTrue instanceof FormulaPart)) ifTrue = new FormulaPart(Array.isArray(ifTrue) ? ifTrue : [ifTrue]);\n    this.ifTrue = ifTrue;\n\n    if (!(ifFalse instanceof FormulaPart)) ifFalse = new FormulaPart(Array.isArray(ifFalse) ? ifFalse : [ifFalse]);\n    this.ifFalse = ifFalse;\n  }\n\n  get isDeterministic() {\n    return Roll.create(this.formula).isDeterministic;\n  }\n\n  get formula() {\n    if (this.condition.isDeterministic) {\n      if (this.condition.total) {\n        return this.ifTrue.formula;\n      } else {\n        return this.ifFalse.formula;\n      }\n    } else return [this.condition.formula, \"?\", this.ifTrue.formula, \":\", this.ifFalse.formula].join(\" \");\n  }\n\n  get total() {\n    return Roll.create(this.formula).evaluate({ async: false }).total;\n  }\n}\n\n/**\n * Convert ternaries into {@link TernaryTerm}s\n *\n * @param {AnyTerm[]} terms - Terms to look ternaries from.\n * @returns {AnyTerm[]} - Product\n */\nfunction ternaryTerms(terms) {\n  const tterms = [];\n  while (terms.length) {\n    let term = terms.shift();\n    if (term instanceof OperatorTerm && term.operator === \"?\") {\n      const cond = tterms.pop();\n      const ifTrue = [];\n      while (terms.length) {\n        term = terms.shift();\n        const endTern = term instanceof OperatorTerm && term.operator === \":\";\n        if (endTern) break;\n        ifTrue.push(term);\n      }\n      const ifFalse = terms.shift();\n      tterms.push(new TernaryTerm(cond, ifTrue, ifFalse));\n    } else tterms.push(term);\n  }\n  return tterms;\n}\n\n/**\n * Simplifies formula to very basic level.\n *\n * @param {string} formula - Formula\n * @param {object} [rollData={}] - Roll data\n * @param {object} [options] - Additional options\n * @param {boolean} [options.strict] - Attempt to return something even slightly valid even with bad formulas\n * @returns {string} - Simpler formula\n * @throws {Error} - On invalid formula\n */\nexport function simplify(formula, rollData = {}, { strict = true } = {}) {\n  formula = compress(Roll.replaceFormulaData(unflair(formula), rollData, { missing: 0 }));\n\n  // Produce nicer formula\n  formula = Roll.defaultImplementation\n    .parse(formula)\n    .map((t) => {\n      if (t instanceof ParentheticalTerm) {\n        t.evaluate();\n        const v = t.total;\n        return v >= 0 ? `${t.total}` : `(${t.total})`;\n      }\n      return t.formula;\n    })\n    .join(\"\");\n\n  const roll = new Roll.defaultImplementation(formula);\n\n  // Evaluate\n  // TODO: v12 this needs to call .evaluateSync()\n  try {\n    roll.evaluate({ async: false, minimize: true });\n  } catch (err) {\n    if (strict) throw err;\n    else return compress(formula);\n  }\n  // Old evaluation, fails with parenthetical terms followed by d6 or the like\n  //terms.forEach((term) => term.evaluate({ async: false, minimize: true }));\n  let terms = roll.terms;\n\n  // Negatives (combine - with the following term)\n  terms = negativeTerms(terms);\n\n  // PEMDAS\n  // Foundry doesn't support juxtaposition so it's not handled here\n\n  // Exponents\n  terms = triTermOps(terms, [\"**\"]);\n  // Multiply/Divide\n  terms = triTermOps(terms, [\"/\", \"*\"]);\n  // Conditionals\n  terms = triTermOps(terms, [\"==\", \"===\", \">\", \">=\", \"<\", \"<=\", \"!=\", \"!==\"]);\n  // Plus/Minus\n  terms = triTermOps(terms, [\"+\", \"-\"], true);\n  // String terms\n  terms = stringTerms(terms);\n  // Ternaries\n  terms = ternaryTerms(terms);\n\n  // Make final pass\n  const final = new FormulaPart(terms);\n\n  return final.formula.replace(/ \\+ 0\\b/g, \"\");\n}\n\n/**\n * Get action's damage formula.\n *\n * @internal\n * @param {ItemAction} action\n * @param {object} [options] - Additional options\n * @param {boolean} [options.simplify] - Simplify and compress the resulting formula before returning.\n * @param {boolean} [options.strict] - Strict option to pass to {@link pf1.utils.formula.simplify simplify}.\n * @returns {string}\n */\nexport function actionDamage(action, { simplify = true, strict = true } = {}) {\n  const actor = action.actor,\n    item = action.item,\n    actorData = actor?.system,\n    actionData = action.data;\n\n  const parts = [];\n\n  const lazy = {\n    _rollData: null,\n    get rollData() {\n      this._rollData ??= action.getRollData();\n      return this._rollData;\n    },\n  };\n\n  const handleFormula = (formula, change) => {\n    try {\n      switch (typeof formula) {\n        case \"string\": {\n          // Ensure @item.level and similar gets parsed correctly\n          const rd = formula.indexOf(\"@\") >= 0 ? change?.parent?.getRollData() ?? lazy.rollData : {};\n          if (formula != 0) {\n            const newformula = pf1.utils.formula.simplify(formula, rd, { strict });\n            if (newformula != 0) parts.push(newformula);\n          }\n          break;\n        }\n        case \"number\":\n          if (formula != 0) parts.push(`${formula}`);\n          break;\n      }\n    } catch (err) {\n      console.error(`Action damage formula parsing error with \"${formula}\"`, err, action);\n      parts.push(\"NaN\");\n    }\n  };\n\n  const handleParts = (parts) => parts.forEach(({ formula }) => handleFormula(formula));\n\n  // Normal damage parts\n  handleParts(actionData.damage.parts);\n\n  const isNatural = action.item.subType === \"natural\";\n\n  // Include ability score only if the string isn't too long yet\n  const dmgAbl = actionData.ability.damage;\n  if (dmgAbl) {\n    const ablMax = actionData.ability?.max ?? Infinity;\n    const dmgAblBaseMod = Math.min(actorData?.abilities[dmgAbl]?.mod ?? 0, ablMax);\n    const held = action.data?.held || item?.system.held || \"normal\";\n    let ablDmgMult =\n      actionData.ability.damageMult ?? (isNatural ? null : pf1.config.abilityDamageHeldMultipliers[held]) ?? 1;\n    if (isNatural && !(actionData.naturalAttack?.primaryAttack ?? true)) {\n      ablDmgMult = actionData.naturalAttack?.secondary?.damageMult ?? 0.5;\n    }\n\n    const dmgAblMod = dmgAblBaseMod >= 0 ? Math.floor(dmgAblBaseMod * ablDmgMult) : dmgAblBaseMod;\n    if (dmgAblMod != 0) parts.push(dmgAblMod);\n  }\n\n  // Include damage parts that don't happen on crits\n  handleParts(actionData.damage.nonCritParts);\n\n  // Include general sources. Item enhancement bonus is among these.\n  action.allDamageSources.forEach((s) => handleFormula(s.formula, s));\n\n  // Something probably went wrong\n  // Early exit from invalid formulas\n  if (parts.length === 0 || parts.some((p) => p === \"NaN\")) {\n    console.warn(\"Action damage resulted in invalid formula:\", parts.join(\" + \"), action);\n    return \"NaN\";\n  }\n\n  const semiFinal = pf1.utils.formula.compress(parts.join(\"+\"));\n  if (!simplify) return semiFinal;\n\n  // Simplification turns 1d12+1d8+6-8+3-2 into 1d12+1d8-1\n  try {\n    const rollData = semiFinal.indexOf(\"@\") >= 0 ? lazy.rollData : undefined;\n    const final = pf1.utils.formula.simplify(semiFinal, rollData, { strict });\n    return pf1.utils.formula.compress(final);\n  } catch (err) {\n    console.error(\"Invalid action damage formula:\", parts.join(\" + \"), action, err);\n    return \"NaN\";\n  }\n}\n","/**\n * Returns the result of a roll of die, which changes based on different sizes.\n *\n * Applies size change damage progression as per Paizo's FAQ entry for it.\n *\n * @see https://paizo.com/paizo/faq/v5748nruor1fm#v5748eaic9t3f\n *\n * @param {number} origCount - The original number of die to roll.\n * @param {number} origSides - The original number of sides per die to roll.\n * @param {string|number} [targetSize=\"M\"] - The target size to change the die to.\n *   Can be a string of values \"F\", \"D\", \"T\", \"S\", \"M\", \"L\", \"H\", \"G\" or \"C\" for the different sizes.\n *   Can also be a number in the range of 0 to 8, where 4 is Medium.\n * @param {string|number} [initialSize=\"M\"] - The initial size of the creature. See targetSize above.\n * @returns {Die[]|NumericTerm[]} The resulting die roll.\n */\nexport function sizeRoll(origCount, origSides, targetSize = \"M\", initialSize = \"M\") {\n  // Return NaN from invalid input\n  if (!Number.isFinite(origCount) || !Number.isFinite(origSides)) {\n    return [new NumericTerm({ number: NaN })];\n  }\n\n  const _getSizeIndex = function (size) {\n    if (typeof size === \"string\") return Object.values(pf1.config.sizeChart).indexOf(size.toUpperCase());\n    return size;\n  };\n  targetSize = _getSizeIndex(targetSize);\n  initialSize = _getSizeIndex(initialSize);\n\n  // Do no conversion if no size change is occurring\n  if (targetSize === initialSize) {\n    // Special case for 1d1\n    if (origCount === 1 && origSides === 1) return [new NumericTerm({ number: 1 })];\n    return [new Die({ number: origCount, faces: origSides })];\n  }\n\n  // Special rules\n  // \"If the die type is not referenced on this chart\"\n  if (origCount > 1) {\n    // D10\n    if (origSides === 10) {\n      if (targetSize < initialSize) {\n        initialSize--;\n      } else {\n        origCount *= 2;\n        initialSize++;\n      }\n      origSides = 8;\n    }\n    // D4\n    else if (origSides === 4) {\n      // 2d4=1d8, 3d4=2d6, 4d4=2d8, 5d4=3d6, 6d4=3d8, etc...\n      origSides = origCount % 2 == 0 ? 8 : 6;\n      origCount = Math.floor((origCount + 1) / 2);\n    }\n  }\n\n  // D12\n  // Each d12 counts as 2d6\n  if (origSides === 12) {\n    origCount *= 2;\n    origSides = 6;\n  }\n\n  // Get initial die type\n  let currentDie = `${origCount}d${origSides}`;\n  const c = pf1.config.sizeDie;\n\n  // \"If the exact number of original dice is not found on this chart...\"\n  if (c.indexOf(currentDie) === -1 && [6, 8].includes(origSides)) {\n    // Xd6: \"find the next lowest number of d6 on the chart and use that number of d8 as the original damage value\"\n    let shifted;\n    const fc = c.map((d) => d.split(\"d\").map((n) => Number(n)));\n    if (origSides === 6) {\n      shifted = fc.filter(([c, s]) => c < origCount && s === origSides).at(-1);\n    }\n    // Xd8: \"find the next highest number of d8 on the chart and use that number of d6 as the original damage value\"\n    else if (origSides === 8) {\n      shifted = fc.filter(([c, s]) => c > origCount && s === origSides).at(0);\n    } else {\n      // Paizo has not provided instructions how to resolve this\n    }\n\n    if (shifted) {\n      const [count, sides] = shifted;\n      // Swap d6 to d8 and vice versa\n      const newSides = sides === 6 ? 8 : 6;\n      currentDie = `${count}d${newSides}`;\n    }\n  }\n\n  // Pick an index from the chart\n  let index = c.indexOf(currentDie);\n  if (index === -1 && currentDie === \"1d1\") index = 0;\n  let formula = currentDie;\n  // If found, shift size\n  if (index >= 0) {\n    const d6Index = c.indexOf(\"1d6\");\n    const d8Index = c.indexOf(\"1d8\");\n    let sizeOffset = initialSize - targetSize;\n    let curSize = initialSize;\n\n    // When decreasing in size (e.g. from medium to small)\n    while (sizeOffset > 0) {\n      if (curSize <= 4 || index <= d8Index) {\n        index--;\n        sizeOffset--;\n        curSize--;\n      } else {\n        index -= 2;\n        sizeOffset--;\n        curSize--;\n      }\n    }\n    // When increasing in size (e.g. from medium to large)\n    while (sizeOffset < 0) {\n      if (curSize <= 3 || index <= d6Index) {\n        index++;\n        sizeOffset++;\n        curSize++;\n      } else {\n        index += 2;\n        sizeOffset++;\n        curSize++;\n      }\n    }\n\n    index = Math.max(0, Math.min(c.length - 1, index));\n    formula = c[index];\n  }\n\n  if (index === -1) {\n    ui.notifications.warn(game.i18n.format(\"PF1.Warning.NoSizeDie\", { fallback: currentDie, formula }));\n  }\n\n  const [number, faces] = formula.split(\"d\").map((n) => parseInt(n));\n  if (!faces || (number === 1 && faces === 1)) return [new NumericTerm({ number: number })];\n  return [new Die({ number: number, faces: faces })];\n}\n\n/**\n * Return reach information for defined size and stature.\n *\n * @param {string|number} [size=\"M\"] PF1.sizeChart key or offset\n * @param {boolean} [reach=false] Reach weapon\n * @param {\"tall\"|\"long\"} [stature=\"tall\"] Character stature\n * @returns {NumericTerm[]}\n */\nexport const sizeReach = function (size = \"M\", reach = false, stature = \"tall\") {\n  if (typeof size === \"number\") size = Object.values(pf1.config.sizeChart)[size];\n  size = Object.entries(pf1.config.sizeChart).find((o) => o[1] === size)[0];\n\n  return [\n    new NumericTerm({\n      number: pf1.documents.actor.ActorPF.getReach(size, stature)[reach ? \"reach\" : \"melee\"],\n    }),\n  ];\n};\n","/**\n * Condition/ status effects section\n */\nexport const getConditions = function () {\n  const core = CONFIG.statusEffects;\n  let sys = pf1.registry.conditions.map((condition) => {\n    return {\n      id: condition.id,\n      label: condition.name,\n      icon: condition.texture,\n    };\n  });\n  if (game.settings.get(\"pf1\", \"coreEffects\")) sys.push(...core);\n  else {\n    const deadCond = core.find((e) => e.id === \"dead\");\n    sys = [deadCond, ...sys];\n  }\n  return sys.sort((a, b) => a.label.localeCompare(b.label));\n};\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single script call category/trigger.\n *\n * @group Script Call Categories\n */\nexport class ScriptCallCategory extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      itemTypes: new fields.ArrayField(new fields.StringField({})),\n      info: new fields.StringField({ required: true, blank: false, initial: \"\" }, { localize: true }),\n    };\n  }\n}\n\n/**\n * The singleton registry of script call categories/trigger events.\n * At runtime this registry is accessible as `pf1.registry.scriptCalls`.\n *\n * @group Script Call Categories\n * @see {@link Registry}\n * @see {@link ScriptCallCategory}\n * @augments {Registry<ScriptCallCategory>}\n */\nexport class ScriptCalls extends Registry {\n  /** @inheritdoc */\n  static model = ScriptCallCategory;\n\n  /** @inheritdoc */\n  static _defaultData = [\n    // Use\n    {\n      _id: \"use\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.Use.Name\",\n      info: \"PF1.ScriptCalls.Use.Info\",\n    },\n    // Post-Use\n    {\n      _id: \"postUse\",\n      itemTypes: [\"attack\", \"buff\", \"feat\", \"loot\", \"equipment\", \"implant\", \"consumable\", \"spell\", \"weapon\"],\n      name: \"PF1.ScriptCalls.PostUse.Name\",\n      info: \"PF1.ScriptCalls.PostUse.Info\",\n    },\n    // Equip\n    {\n      _id: \"equip\",\n      itemTypes: [\"weapon\", \"equipment\", \"loot\"],\n      name: \"PF1.ScriptCalls.Equip.Name\",\n      info: \"PF1.ScriptCalls.Equip.Info\",\n    },\n    // Implant\n    {\n      _id: \"implant\",\n      itemTypes: [\"implant\"],\n      name: \"PF1.ScriptCalls.Implant.Name\",\n      info: \"PF1.ScriptCalls.Implant.Info\",\n    },\n    // Toggle\n    {\n      _id: \"toggle\",\n      itemTypes: [\"buff\", \"feat\"],\n      name: \"PF1.ScriptCalls.Toggle.Name\",\n      info: \"PF1.ScriptCalls.Toggle.Info\",\n    },\n    // Change Quantity\n    {\n      _id: \"changeQuantity\",\n      itemTypes: [\"loot\", \"equipment\", \"weapon\", \"implant\", \"consumable\", \"container\"],\n      name: \"PF1.ScriptCalls.ChangeQuantity.Name\",\n      info: \"PF1.ScriptCalls.ChangeQuantity.Info\",\n    },\n    // Change Level\n    {\n      _id: \"changeLevel\",\n      itemTypes: [\"buff\", \"class\"],\n      name: \"PF1.ScriptCalls.ChangeLevel.Name\",\n      info: \"PF1.ScriptCalls.ChangeLevel.Info\",\n    },\n  ];\n}\n\n/**\n * {@inheritDoc ScriptCalls}\n *\n * @group Script Call Categories\n * @type {ScriptCalls}\n */\nexport let scriptCalls;\n","import { Registry, RegistryEntry } from \"./base-registry.mjs\";\n\nconst fields = foundry.data.fields;\n\n/**\n * A single condition entry in the {@link Condition} registry.\n *\n * @group Conditions\n */\nexport class Condition extends RegistryEntry {\n  static defineSchema() {\n    return {\n      ...super.defineSchema(),\n      texture: new fields.StringField({ required: true, initial: \"\" }),\n      track: new fields.StringField({\n        required: false,\n        blank: true,\n        initial: \"\",\n        choices: Conditions.TRACKS,\n      }),\n      mechanics: new fields.SchemaField(\n        {\n          changes: new fields.ArrayField(\n            new fields.SchemaField({\n              formula: new fields.StringField({ required: true }),\n              target: new fields.StringField({ required: true }),\n              type: new fields.StringField({ required: true }),\n              operator: new fields.StringField({ required: false, initial: undefined }),\n              priority: new fields.NumberField({ required: false, initial: undefined }),\n              continuous: new fields.BooleanField({ required: false, initial: undefined }),\n            })\n          ),\n          flags: new fields.ArrayField(new fields.StringField({})),\n        },\n        {\n          required: false,\n          nullable: true,\n          initial: null,\n        }\n      ),\n      journal: new fields.StringField({ nullable: true, blank: false, required: false }),\n      showInDefense: new fields.BooleanField({ required: false, initial: true }),\n      showInAction: new fields.BooleanField({ required: false, initial: true }),\n    };\n  }\n}\n\n/**\n * The singleton registry of condition types.\n * At runtime this registry is accessible as `pf1.registry.conditions`.\n *\n * @group Conditions\n * @see {@link Registry}\n * @see {@link Condition}\n * @augments {Registry<Condition>}\n */\nexport class Conditions extends Registry {\n  /** @inheritdoc */\n  static model = Condition;\n\n  /**\n   * An array of allowed tracks of condition advancement.\n   */\n  static TRACKS = /** @type {const} */ ([\"fear\", \"lethargy\"]);\n\n  /**\n   * @internal\n   */\n  static SET_TO_ZERO = {\n    formula: 0,\n    type: \"untypedPerm\",\n    operator: \"set\",\n    priority: 1001,\n    continuous: true,\n  };\n\n  /** @inheritdoc */\n  static _defaultData = [\n    {\n      _id: \"bleed\",\n      name: \"PF1.Condition.bleed\",\n      texture: \"systems/pf1/icons/conditions/bleed.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.L6DTocj1PbOtuspU\",\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"blind\",\n      name: \"PF1.Condition.blind\",\n      texture: \"systems/pf1/icons/conditions/blind.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.A9KUpd2bsdZZsQqj\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n    },\n    {\n      _id: \"confused\",\n      name: \"PF1.Condition.confused\",\n      texture: \"systems/pf1/icons/conditions/confused.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.J2yma0xciBKRUh9t\",\n      showInDefense: false,\n    },\n    {\n      _id: \"cowering\",\n      name: \"PF1.Condition.cowering\",\n      texture: \"systems/pf1/icons/conditions/screaming.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.eNW5geiJqrnAjjNu\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"dazed\",\n      name: \"PF1.Condition.dazed\",\n      texture: \"systems/pf1/icons/conditions/dazed.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.2A6Gk60pLDKR2zT0\",\n      showInAction: false,\n    },\n    {\n      _id: \"dazzled\",\n      name: \"PF1.Condition.dazzled\",\n      texture: \"systems/pf1/icons/conditions/dazzled.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.xHUnCadQ2qYsfvV0\",\n      mechanics: {\n        changes: [\n          {\n            formula: -1,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      showInDefense: false,\n      showInAction: false,\n    },\n    {\n      _id: \"deaf\",\n      name: \"PF1.Condition.deaf\",\n      texture: \"systems/pf1/icons/conditions/deaf.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.3uIamlB0L1UZUwoF\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"init\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"entangled\",\n      name: \"PF1.Condition.entangled\",\n      texture: \"systems/pf1/icons/conditions/entangled.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.oxmugd8SoxVjvRRl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"exhausted\",\n      name: \"PF1.Condition.exhausted\",\n      texture: \"systems/pf1/icons/conditions/exhausted.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ITxxh53qgl74wWcE\",\n      mechanics: {\n        changes: [\n          {\n            formula: -6,\n            target: \"str\",\n            type: \"untyped\",\n          },\n          {\n            formula: -6,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n    },\n    {\n      _id: \"fatigued\",\n      name: \"PF1.Condition.fatigued\",\n      texture: \"systems/pf1/icons/conditions/fatigued.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.AVaxTNildXRzYnQm\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"str\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"lethargy\",\n      showInDefense: false,\n    },\n    {\n      _id: \"frightened\",\n      name: \"PF1.Condition.frightened\",\n      texture: \"systems/pf1/icons/conditions/frightened.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.uqpJ7ZMnWF5qjOTl\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      showInAction: false,\n    },\n    {\n      _id: \"grappled\",\n      name: \"PF1.Condition.grappled\",\n      texture: \"systems/pf1/icons/conditions/grappled.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.i4gHNAVajJWs4cFI\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"dex\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"helpless\",\n      name: \"PF1.Condition.helpless\",\n      texture: \"systems/pf1/icons/conditions/helpless.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.6dtCytJsNkO8Hwq4\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"incorporeal\",\n      name: \"PF1.Condition.incorporeal\",\n      texture: \"systems/pf1/icons/conditions/incorporeal.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.acqGBiMxTbXZ47zU\",\n      mechanics: {\n        changes: [\n          {\n            formula: 0,\n            target: \"nac\",\n            type: \"base\",\n            operator: \"set\",\n            priority: -10,\n          },\n          {\n            formula: \"max(1, @abilities.cha.mod)\",\n            operator: \"add\",\n            target: \"ac\",\n            type: \"deflection\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"invisible\",\n      name: \"PF1.Condition.invisible\",\n      texture: \"systems/pf1/icons/conditions/invisible.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.Wr2ZWUZcyVWQ4GtX\",\n      showInDefense: false,\n    },\n    {\n      _id: \"nauseated\",\n      name: \"PF1.Condition.nauseated\",\n      texture: \"systems/pf1/icons/conditions/nauseated.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ySiyyK1BMAyKPY4I\",\n    },\n    {\n      _id: \"panicked\",\n      name: \"PF1.Condition.panicked\",\n      texture: \"systems/pf1/icons/conditions/fear.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.nGTsTfpWcJTTU3rk\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n    },\n    {\n      _id: \"paralyzed\",\n      name: \"PF1.Condition.paralyzed\",\n      texture: \"systems/pf1/icons/conditions/paralyzed.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.24p2Koq4FFCLDKnj\",\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n          {\n            ...this.SET_TO_ZERO,\n            target: \"str\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"pinned\",\n      name: \"PF1.Condition.pinned\",\n      texture: \"systems/pf1/icons/conditions/pinned.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.poCq8gXdDi5leaMT\",\n      mechanics: {\n        changes: [\n          {\n            formula: \"min(0, @abilities.dex.mod)\",\n            target: \"dexMod\",\n            type: \"untyped\",\n            operator: \"set\",\n            priority: 1001,\n            continuous: true,\n          },\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"cmd\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"prone\",\n      name: \"PF1.Condition.prone\",\n      texture: \"systems/pf1/icons/conditions/prone.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.VbagnIPQS523dwxa\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"mattack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n    {\n      _id: \"shaken\",\n      name: \"PF1.Condition.shaken\",\n      texture: \"systems/pf1/icons/conditions/shaken.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.XxLUswkCuXnXmA5T\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      track: \"fear\",\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"sickened\",\n      name: \"PF1.Condition.sickened\",\n      texture: \"systems/pf1/icons/conditions/sickened.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.7LwCMwrX3tchvrjW\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"wdamage\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allSavingThrows\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"skills\",\n            type: \"untyped\",\n          },\n          {\n            formula: -2,\n            target: \"allChecks\",\n            type: \"untyped\",\n          },\n        ],\n      },\n      showInAction: false,\n      showInDefense: false,\n    },\n    {\n      _id: \"sleep\",\n      name: \"PF1.Condition.sleep\",\n      texture: \"systems/pf1/icons/conditions/sleep.png\",\n      journal: null,\n      mechanics: {\n        changes: [\n          {\n            ...this.SET_TO_ZERO,\n            target: \"dex\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"staggered\",\n      name: \"PF1.Condition.staggered\",\n      texture: \"systems/pf1/icons/conditions/staggered.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.TTp8q9Vb2PNAujWu\",\n    },\n    {\n      _id: \"stunned\",\n      name: \"PF1.Condition.stunned\",\n      texture: \"systems/pf1/icons/conditions/stunned.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.ZgsBPY0uVCVl6SGh\",\n      mechanics: {\n        changes: [\n          {\n            formula: -2,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n        ],\n        flags: [\"loseDexToAC\"],\n      },\n      showInAction: false,\n    },\n    {\n      _id: \"squeezing\",\n      name: \"PF1.Condition.squeezing\",\n      texture: \"systems/pf1/icons/conditions/squeezing.png\",\n      journal: \"Compendium.pf1.pf1e-rules.JournalEntry.NSqfXaj4MevUR2uJ.JournalEntryPage.jzeZ0Uf31CAMZra9\",\n      mechanics: {\n        changes: [\n          {\n            formula: -4,\n            target: \"ac\",\n            type: \"untyped\",\n          },\n          {\n            formula: -4,\n            target: \"attack\",\n            type: \"untyped\",\n          },\n        ],\n      },\n    },\n  ];\n\n  /**\n   * Get all conditions that have belong to a given track\n   *\n   * @param {string} track - The given track to check for\n   * @returns {string[]} - An array of all conditions in the given track\n   */\n  conditionsInTrack(track) {\n    return this.contents.filter((condition) => condition.track === track).map((condition) => condition.id);\n  }\n\n  /**\n   * Get all tracks and their conditions\n   *\n   * @returns {string[][]}\n   */\n  trackedConditions() {\n    return this.tracks.map((track) => this.conditionsInTrack(track));\n  }\n\n  /**\n   * The condition tracks\n   *\n   * @type {string[]}\n   */\n  get tracks() {\n    return this.constructor.TRACKS;\n  }\n}\n\n/**\n * {@inheritDoc Conditions}\n *\n * @group Conditions\n * @type {Conditions}\n */\nexport let conditions;\n","import { Registry } from \"./base-registry.mjs\";\nimport { RegistryEntry } from \"./base-registry.mjs\";\n\n// Notes\n// PPC = Player Companion\n// PRG is in rare cases used to refer to core rulebook, but also sometimes to refer to the game in its entirety\n// PCh = Pathfinder Chronicles\n\nclass URLField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (!/^https?:\\/\\/[\\w\\d.]+\\.\\w+/.test(value)) throw new Error(\"Must be a valid URL\");\n  }\n}\n\nclass DateField extends foundry.data.fields.StringField {\n  /** @override */\n  _validateType(value) {\n    super._validateType(value);\n\n    if (value && Number.isNaN(Date.parse(value))) {\n      throw new Error(\"Must be valid date in YYYY-MM-DD format.\");\n    }\n  }\n}\n\nexport class Source extends RegistryEntry {\n  static defineSchema() {\n    const fields = foundry.data.fields;\n\n    const optionalString = (options = {}) =>\n      new fields.StringField({ required: false, nullable: true, blank: true, initial: undefined, ...options });\n\n    return {\n      ...super.defineSchema(),\n      name: new fields.StringField({ nullable: false, blank: false, required: true }),\n      abbr: new fields.StringField({ nullable: false, blank: false, required: false, initial: undefined }), // Add constraints\n      date: new DateField({ required: false, nullable: true, blank: false, initial: undefined }),\n      pages: new fields.NumberField({\n        required: false,\n        integer: true,\n        min: 1,\n        initial: undefined,\n        label: \"Page count\",\n      }),\n      isbn: optionalString(), // TODO: Validate ISBN\n      publisher: new fields.StringField({ required: false, blank: false, nullable: false, initial: \"Paizo\" }), // Assume Paizo\n      level: new fields.NumberField({\n        required: false,\n        min: 1,\n        integer: true,\n        initial: undefined,\n        label: \"Starting level\",\n      }),\n      tieIn: optionalString(),\n      url: new URLField({ required: false, nullable: true, blank: true, initial: undefined }),\n      legacy: new fields.BooleanField({ required: false, initial: false, label: \"D&D 3.5 Material\" }),\n      type: optionalString({ choices: () => this.TYPES }),\n    };\n  }\n\n  /**\n   * An array of allowed types of sources.\n   *\n   * core: Core book\n   * companion: Player companion\n   * setting: Campaign setting book\n   * ap: Adventure path\n   * pg: Adventure path - player guide\n   * comic: Comic\n   * pfs: Pathfinder Society\n   * module: Module\n   */\n  static TYPES = /** @type {const} */ ([\"core\", \"setting\", \"ap\", \"module\", \"companion\", \"pg\", \"comic\", \"pfs\"]);\n}\n\nexport class Sources extends Registry {\n  /** @inheritdoc */\n  static model = Source;\n\n  /**\n   * Book type prefix\n   */\n  static PREFIXES = {\n    companion: \"PPC\", // Pathfinder Player Companion\n  };\n\n  static _defaultData = [\n    {\n      _id: \"PZO1110\",\n      name: \"Core Rulebook\",\n      abbr: \"CRB\",\n      date: \"2009-08-13\",\n      pages: 576,\n      isbn: \"978-1-60125-150-3\",\n      url: \"http://paizo.com/products/btpy88yj\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1114\",\n      name: \"GameMastery Guide\",\n      abbr: \"GMG\",\n      date: \"2010-06-23\",\n      pages: 320,\n      isbn: \"978-1-60125-217-3\",\n      url: \"http://paizo.com/products/btpy8ffn\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1112\",\n      name: \"Bestiary [1]\",\n      date: \"2009-10-21\",\n      pages: 320,\n      isbn: \"978-1-60125-183-1\",\n      url: \"http://paizo.com/products/btpy8auu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1116\",\n      name: \"Bestiary 2\",\n      date: \"2010-12-29\",\n      pages: 320,\n      isbn: \"978-1-60125-268-5\",\n      url: \"http://paizo.com/products/btpy8hif\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1120\",\n      name: \"Bestiary 3\",\n      date: \"2011-12-21\",\n      pages: 320,\n      isbn: \"978-1-60125-378-1\",\n      url: \"http://paizo.com/products/btpy8odu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1127\",\n      name: \"Bestiary 4\",\n      date: \"2013-10-30\",\n      pages: 320,\n      isbn: \"978-1-60125-575-4\",\n      url: \"http://paizo.com/products/btpy91ds\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1133\",\n      name: \"Bestiary 5\",\n      date: \"2015-11-18\",\n      pages: 320,\n      isbn: \"978-1-60125-792-5\",\n      url: \"http://paizo.com/products/btpy9g9x\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1137\",\n      name: \"Bestiary 6\",\n      date: \"2017-04-26\",\n      pages: 320,\n      isbn: \"978-1-60125-931-8\",\n      url: \"http://paizo.com/products/btpy9r1y\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1129\",\n      name: \"Advanced Class Guide\",\n      abbr: \"ACG\",\n      date: \"2015-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-671-3\",\n      url: \"http://paizo.com/products/btpy978v\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1115\",\n      name: \"Advanced Player's Guide\",\n      abbr: \"APG\",\n      date: \"2010-08-05\",\n      pages: 320,\n      isbn: \"978-1-60125-246-3\",\n      url: \"http://paizo.com/products/btpy8fo1\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1121\",\n      name: \"Advanced Race Guide\",\n      abbr: \"ARG\",\n      date: \"2012-06-20\",\n      pages: 256,\n      isbn: \"978-1-60125-390-3\",\n      url: \"http://paizo.com/products/btpy8rv2\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1138\",\n      name: \"Adventurer's Guide\",\n      date: \"2017-05-24\",\n      pages: 192,\n      isbn: \"978-1-60125-938-7\",\n      url: \"http://paizo.com/products/btpy9sjo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1128\",\n      name: \"Strategy Guide\",\n      date: \"2015-03-25\",\n      pages: 160,\n      isbn: \"978-1-60125-626-3\",\n      url: \"http://paizo.com/products/btpy99sk\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1132\",\n      name: \"Occult Adventures\",\n      abbr: \"OA\",\n      date: \"2015-07-29\",\n      pages: 272,\n      isbn: \"978-1-60125-762-8\",\n      url: \"http://paizo.com/products/btpy9egu\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1131\",\n      name: \"Pathfinder Unchained\",\n      date: \"2015-04-29\",\n      pages: 256,\n      isbn: \"978-1-60125-715-4\",\n      url: \"http://paizo.com/products/btpy9c25\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1136\",\n      name: \"Villain Codex\",\n      date: \"2016-11-16\",\n      pages: 256,\n      isbn: \"978-1-60125-906-6\",\n      url: \"http://paizo.com/products/btpy9oo7\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1130\",\n      name: \"Monster Codex\",\n      abbr: \"MC\",\n      date: \"2014-10-22\",\n      pages: 256,\n      isbn: \"978-1-60125-686-7\",\n      url: \"http://paizo.com/products/btpy9926\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1135\",\n      name: \"Horror Adventures\",\n      date: \"2016-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-849-6\",\n      url: \"http://paizo.com/products/btpy9n5a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1126\",\n      name: \"Mythic Adventures\",\n      date: \"2013-08-14\",\n      pages: 256,\n      isbn: \"978-1-60125-549-5\",\n      url: \"http://paizo.com/products/btpy8ywe\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1124\",\n      name: \"NPC Codex\",\n      date: \"2012-11-21\",\n      pages: 320,\n      isbn: \"978-1-60125-467-2\",\n      url: \"http://paizo.com/products/btpy8v3a\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1125\",\n      name: \"Ultimate Campaign\",\n      date: \"2013-05-29\",\n      pages: 256,\n      isbn: \"978-1-60125-498-6\",\n      url: \"http://paizo.com/products/btpy8x64\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1118\",\n      name: \"Ultimate Combat\",\n      abbr: \"UC\",\n      date: \"2011-08-04\",\n      pages: 256,\n      isbn: \"978-1-60125-359-0\",\n      url: \"http://paizo.com/products/btpy8mcz\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1123\",\n      name: \"Ultimate Equipment\",\n      abbr: \"UE\",\n      date: \"2012-08-16\",\n      pages: 400,\n      isbn: \"978-1-60125-449-8\",\n      url: \"http://paizo.com/products/btpy8tmc\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1134\",\n      name: \"Ultimate Intrigue\",\n      abbr: \"UI\",\n      date: \"2016-03-30\",\n      pages: 256,\n      isbn: \"978-1-60125-826-7\",\n      url: \"http://paizo.com/products/btpy9j6p\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1117\",\n      name: \"Ultimate Magic\",\n      abbr: \"UM\",\n      date: \"2011-05-08\",\n      pages: 256,\n      isbn: \"978-1-60125-299-9\",\n      url: \"http://paizo.com/products/btpy8k8r\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1139\",\n      name: \"Book of the Damned\",\n      date: \"2017-09-27\",\n      pages: 258,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9tok\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1140\",\n      name: \"Ultimate Wilderness\",\n      abbr: \"UW\",\n      date: \"2017-11-15\",\n      pages: 288,\n      isbn: \"978-1-60125-986-8\",\n      url: \"https://paizo.com/products/btpy9ujo\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1141\",\n      name: \"Planar Adventures\",\n      abbr: \"PA\",\n      date: \"2018-06-27\",\n      pages: 192,\n      isbn: \"978-1-64078-044-6\",\n      url: \"https://paizo.com/products/btpya1am\",\n      type: \"core\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Player's Guide\",\n      date: \"2007-09-01\",\n      pages: 16,\n      isbn: \"978-1-60125-059-9\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8bd9\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9001\",\n      name: \"Rise of the Runelords #1: Burnt Offerings\",\n      abbr: \"RotR-1\",\n      date: \"2007-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-035-3\",\n      url: \"https://paizo.com/products/btpy7zkr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9002\",\n      name: \"Rise of the Runelords #2: The Skinsaw Murders\",\n      abbr: \"RotR-2\",\n      date: \"2007-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-037-7\",\n      url: \"https://paizo.com/products/btpy8029\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9003\",\n      name: \"Rise of the Runelords #3: The Hook Mountain Massacre\",\n      abbr: \"RotR-3\",\n      date: \"2007-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-038-4\",\n      url: \"https://paizo.com/products/btpy80e8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9004\",\n      name: \"Rise of the Runelords #4: Fortress of the Stone Giants\",\n      abbr: \"RotR-4\",\n      date: \"2007-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-039-1\",\n      url: \"https://paizo.com/products/btpy80hm\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9005\",\n      name: \"Rise of the Runelords #5: Sins of the Saviors\",\n      abbr: \"RotR-5\",\n      date: \"2007-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-040-7\",\n      url: \"https://paizo.com/products/btpy815p\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9006\",\n      name: \"Rise of the Runelords #6: Spires of Xin-Shalast\",\n      abbr: \"RotR-6\",\n      date: \"2008-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-041-4\",\n      url: \"https://paizo.com/products/btpy817c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-2S\",\n      name: \"Curse of the Crimson Throne Player's Guide\",\n      date: \"2008-02-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy806v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1021\",\n      name: \"Curse of the Crimson Throne\",\n      date: \"2016-10-01\",\n      pages: 480,\n      isbn: \"978-1-60125-890-8\",\n      url: \"http://paizo.com/products/btpy9nme\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9007\",\n      name: \"Curse of the Crimson Throne #1: Edge of Anarchy\",\n      abbr: \"CotCT-1\",\n      date: \"2008-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-088-9\",\n      url: \"https://paizo.com/products/btpy81xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9008\",\n      name: \"Curse of the Crimson Throne #2: Seven Days to the Grave\",\n      abbr: \"CotCT-2\",\n      date: \"2008-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-091-9\",\n      url: \"https://paizo.com/products/btpy82qy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9009\",\n      name: \"Curse of the Crimson Throne #3: Escape From Old Korvosa\",\n      abbr: \"CotCT-3\",\n      date: \"2008-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-092-6\",\n      url: \"https://paizo.com/products/btpy82t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9010\",\n      name: \"Curse of the Crimson Throne #4: A History of Ashes\",\n      abbr: \"CotCT-4\",\n      date: \"2008-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-093-3\",\n      url: \"https://paizo.com/products/btpy82u9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9011\",\n      name: \"Curse of the Crimson Throne #5: Skeletons of Scarwall\",\n      abbr: \"CotCT-5\",\n      date: \"2008-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-099-5\",\n      url: \"https://paizo.com/products/btpy83yw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9012\",\n      name: \"Curse of the Crimson Throne #6: Crown of Fangs\",\n      abbr: \"CotCT-6\",\n      date: \"2008-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-109-1\",\n      url: \"https://paizo.com/products/btpy84el\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9401\",\n      name: \"Second Darkness Player's Guide\",\n      date: \"2008-08-01\",\n      pages: 32,\n      isbn: \"978-1-60125-142-8\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy84en\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9013\",\n      name: \"Second Darkness #1: Shadow in the Sky\",\n      date: \"2008-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-115-2\",\n      url: \"https://paizo.com/products/btpy84em\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9014\",\n      name: \"Second Darkness #2: Children of the Void\",\n      date: \"2008-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-127-5\",\n      url: \"https://paizo.com/products/btpy85ed\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9015\",\n      name: \"Second Darkness #3: The Armageddon Echo\",\n      date: \"2008-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-128-2\",\n      url: \"https://paizo.com/products/btpy85ep\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9016\",\n      name: \"Second Darkness #4: Endless Night\",\n      date: \"2008-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-129-9\",\n      url: \"https://paizo.com/products/btpy85er\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9017\",\n      name: \"Second Darkness #5: A Memory of Darkness\",\n      date: \"2008-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-130-5\",\n      url: \"https://paizo.com/products/btpy86j6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9018\",\n      name: \"Second Darkness #6: Descent into Midnight\",\n      date: \"2009-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-131-2\",\n      url: \"https://paizo.com/products/btpy86v1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9404\",\n      name: \"Legacy of Fire Player's Guide\",\n      date: \"2009-03-01\",\n      pages: 32,\n      isbn: \"978-1-60125-168-8\",\n      tieIn: \"Legacy of Fire\",\n      legacy: true,\n      url: \"https://paizo.com/products/btpy8737\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9019\",\n      name: \"Legacy of Fire #1: Howl of the Carrion King\",\n      abbr: \"LoF-1\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-159-6\",\n      url: \"https://paizo.com/products/btpy8735\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9020\",\n      name: \"Legacy of Fire #2: House of the Beast\",\n      abbr: \"LoF-2\",\n      date: \"2009-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-160-2\",\n      url: \"https://paizo.com/products/btpy86xw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9021\",\n      name: \"Legacy of Fire #3: The Jackal's Price\",\n      abbr: \"LoF-3\",\n      date: \"2009-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-161-9\",\n      url: \"https://paizo.com/products/btpy87uv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9022\",\n      name: \"Legacy of Fire #4: The End of Eternity\",\n      abbr: \"LoF-4\",\n      date: \"2009-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-173-2\",\n      url: \"https://paizo.com/products/btpy87ux\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9023\",\n      name: \"Legacy of Fire #5: The Impossible Eye\",\n      abbr: \"LoF-5\",\n      date: \"2009-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-179-4\",\n      url: \"https://paizo.com/products/btpy88tp\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9024\",\n      name: \"Legacy of Fire #6: The Final Wish\",\n      abbr: \"LoF-6\",\n      date: \"2009-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-185-5\",\n      url: \"https://paizo.com/products/btpy89a2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-5E\",\n      name: \"Council of Thieves Player's Guide\",\n      date: \"2009-08-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy89m7\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9025\",\n      name: \"Council of Thieves #1: The Bastards of Erebus\",\n      abbr: \"CoT-1\",\n      date: \"2009-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-190-9\",\n      url: \"https://paizo.com/products/btpy89a4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9026\",\n      name: \"Council of Thieves #2: The Sixfold Trial\",\n      abbr: \"CoT-2\",\n      date: \"2009-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-196-1\",\n      url: \"https://paizo.com/products/btpy89vw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9027\",\n      name: \"Council of Thieves #3: What Lies in Dust\",\n      abbr: \"CoT-3\",\n      date: \"2009-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-197-8\",\n      url: \"https://paizo.com/products/btpy8b8h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9028\",\n      name: \"Council of Thieves #4: The Infernal Syndrom\",\n      abbr: \"CoT-4\",\n      date: \"2009-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-198-5\",\n      url: \"https://paizo.com/products/btpy8b9h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9029\",\n      name: \"Council of Thieves #5: Mother of Flies\",\n      abbr: \"CoT-5\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-199-2\",\n      url: \"https://paizo.com/products/btpy8bc1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9030\",\n      name: \"Council of Thieves #6: The Twice-Damned Prince\",\n      abbr: \"CoT-6\",\n      date: \"2010-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-226-5\",\n      url: \"https://paizo.com/products/btpy8d54\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-6E\",\n      name: \"Kingmaker Player's Guide\",\n      date: \"2010-03-01\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy8dqh\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9031\",\n      name: \"Kingmaker #1: Stolen Land\",\n      date: \"2010-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-229-6\",\n      url: \"https://paizo.com/products/btpy8dhc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9032\",\n      name: \"Kingmaker #2: Rivers Run Red\",\n      date: \"2010-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-233-3\",\n      url: \"https://paizo.com/products/btpy8dml\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9033\",\n      name: \"Kingmaker #3: The Varnhold Vanishing\",\n      date: \"2010-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-234-0\",\n      url: \"https://paizo.com/products/btpy8e7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9034\",\n      name: \"Kingmaker #4: Blood for Blood\",\n      date: \"2010-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-251-7\",\n      url: \"https://paizo.com/products/btpy8b7w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9035\",\n      name: \"Kingmaker #5: War of the River Kings\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-252-4\",\n      url: \"https://paizo.com/products/btpy8b7u\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9036\",\n      name: \"Kingmaker #6: Sound of a Thousand Screams\",\n      date: \"2010-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-253-1\",\n      url: \"https://paizo.com/products/btpy8b7x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-7E\",\n      name: \"Serpent's Skull Player's Guide\",\n      date: \"2010-07-01\",\n      pages: 13,\n      url: \"https://paizo.com/products/btpy8g6d\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9037\",\n      name: \"Serpent's Skull #1: Soul for Smuggler's Shiv\",\n      date: \"2010-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-254-8\",\n      url: \"https://paizo.com/products/btpy8b7v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9038\",\n      name: \"Serpent's Skull #2: Racing to Ruin\",\n      date: \"2010-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-273-9\",\n      url: \"https://paizo.com/products/btpy8ddc\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9039\",\n      name: \"Serpent's Skull #3: City of Seven Spears\",\n      date: \"2010-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-274-6\",\n      url: \"https://paizo.com/products/btpy8h6h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9040\",\n      name: \"Serpent's Skull #4: Vaults of Madness\",\n      date: \"2010-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-275-3\",\n      url: \"https://paizo.com/products/btpy8dde\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9041\",\n      name: \"Serpent's Skull #5: The Thousand Fangs Below\",\n      date: \"2011-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-276-0\",\n      url: \"https://paizo.com/products/btpy8ddf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9042\",\n      name: \"Serpent's Skull #6: Sanctum of the Serpent God\",\n      date: \"2011-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-307-1\",\n      url: \"https://paizo.com/products/btpy8g3i\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-8E\",\n      name: \"Carrion Crown Player's Guide\",\n      date: \"2011-03-01\",\n      pages: 15,\n      url: \"https://paizo.com/products/btpy8j0q\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9043\",\n      name: \"Carrion Crown #1: The Haunting of Harrowstone\",\n      abbr: \"CC-1\",\n      date: \"2011-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-308-8\",\n      url: \"https://paizo.com/products/btpy8g7a\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9044\",\n      name: \"Carrion Crown #2: Trial of the Beast\",\n      abbr: \"CC-2\",\n      date: \"2011-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-309-5\",\n      url: \"https://paizo.com/products/btpy8g7b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9045\",\n      name: \"Carrion Crown #3: Broken Moon\",\n      abbr: \"CC-3\",\n      date: \"2011-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-310-1\",\n      url: \"https://paizo.com/products/btpy8g7c\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9046\",\n      name: \"Carrion Crown #4: Wake of the Watcher\",\n      abbr: \"CC-4\",\n      date: \"2011-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-311-8\",\n      url: \"https://paizo.com/products/btpy8g7d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9047\",\n      name: \"Carrion Crown #5: Ashes at Dawn\",\n      abbr: \"CC-5\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-312-5\",\n      url: \"https://paizo.com/products/btpy8g7e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9048\",\n      name: \"Carrion Crown #6: Shadows of Gallowspire\",\n      abbr: \"CC-6\",\n      date: \"2011-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-313-2\",\n      url: \"https://paizo.com/products/btpy8g7t\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-9E\",\n      name: \"Jade Regent Player's Guide\",\n      date: \"2011-07-27\",\n      pages: 28,\n      url: \"https://paizo.com/products/btpy8mh3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9049\",\n      name: \"Jade Regent #1: The Brinewall Legacy\",\n      date: \"2011-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-361-3\",\n      url: \"https://paizo.com/products/btpy8j35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9050\",\n      name: \"Jade Regent #2: Night of Frozen Shadows\",\n      date: \"2011-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-366-8\",\n      url: \"https://paizo.com/products/btpy8jrr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9051\",\n      name: \"Jade Regent #3: The Hungry Storm\",\n      date: \"2011-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-374-3\",\n      url: \"https://paizo.com/products/btpy8kgv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9052\",\n      name: \"Jade Regent #4: Forest of Spirits\",\n      date: \"2011-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-380-4\",\n      url: \"https://paizo.com/products/btpy8l2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9053\",\n      name: \"Jade Regent #5: Tide of Honor\",\n      date: \"2012-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-385-9\",\n      url: \"https://paizo.com/products/btpy8mh0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9054\",\n      name: \"Jade Regent #6: The Empty Throne\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-400-9\",\n      url: \"https://paizo.com/products/btpy8mh1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-10E\",\n      name: \"Skull and Shackles Player's Guide\",\n      date: \"2012-02-01\",\n      pages: 30,\n      url: \"https://paizo.com/products/btpy8rwc\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9055\",\n      name: \"Skull & Shackles #1: The Wormwood Mutiny\",\n      date: \"2012-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-404-7\",\n      url: \"https://paizo.com/products/btpy8mh2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9056\",\n      name: \"Skull & Shackles #2: Raiders of the Fever Sea\",\n      date: \"2012-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-409-2\",\n      url: \"https://paizo.com/products/btpy8moe\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9057\",\n      name: \"Skull & Shackles #3: Tempest Rising\",\n      date: \"2012-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-413-9\",\n      url: \"https://paizo.com/products/btpy8mof\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9058\",\n      name: \"Skull & Shackles #4: Island of Empty Eyes\",\n      date: \"2012-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-416-0\",\n      url: \"https://paizo.com/products/btpy8mog\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9059\",\n      name: \"Skull & Shackles #5: The Price of Infamy\",\n      date: \"2012-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-421-4\",\n      url: \"https://paizo.com/products/btpy8moh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9060\",\n      name: \"Skull & Shackles #6: From Hell's Heart\",\n      date: \"2012-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-422-1\",\n      url: \"https://paizo.com/products/btpy8moi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO1002-PGE\",\n      name: \"Rise of the Runelords Anniversary Edition Player's Guide\",\n      date: \"2012-07-01\",\n      pages: 17,\n      url: \"https://paizo.com/products/btpy8tgl\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO1002\",\n      name: \"Rise of the Runelords Anniversary Edition\",\n      abbr: \"RotRAE\",\n      date: \"2012-07-01\",\n      pages: 432,\n      isbn: \"978-1-60125-436-8\",\n      url: \"http://paizo.com/products/btpy8tc0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-11E\",\n      name: \"Shattered Star Player's Guide\",\n      date: \"2012-08-01\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy8txj\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9061\",\n      name: \"Shattered Star #1: Shards of Sin\",\n      date: \"2012-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-452-8\",\n      url: \"https://paizo.com/products/btpy8tmh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9062\",\n      name: \"Shattered Star #2: Curse of the Lady's Light\",\n      date: \"2012-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-459-7\",\n      url: \"https://paizo.com/products/btpy8run\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9063\",\n      name: \"Shattered Star #3: The Asylum Stone\",\n      date: \"2012-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-469-6\",\n      url: \"https://paizo.com/products/btpy8sds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9064\",\n      name: \"Shattered Star #4: Beyond the Doomsday Door\",\n      date: \"2012-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-474-0\",\n      url: \"https://paizo.com/products/btpy8t35\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9065\",\n      name: \"Shattered Star #5: Into the Nightmare Rift\",\n      date: \"2012-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-487-0\",\n      url: \"https://paizo.com/products/btpy8tdh\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9066\",\n      name: \"Shattered Star #6: The Dead Heart of Xin\",\n      date: \"2013-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-491-7\",\n      url: \"https://paizo.com/products/btpy8tvr\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-12E\",\n      name: \"Reign of Winter Player's Guide\",\n      date: \"2013-02-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy8x1t\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9067\",\n      name: \"Reign of Winter #1: The Snows of Summer\",\n      date: \"2013-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-492-4\",\n      url: \"https://paizo.com/products/btpy8ubg\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9068\",\n      name: \"Reign of Winter #2: The Shackled Hut\",\n      date: \"2013-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-493-1\",\n      url: \"https://paizo.com/products/btpy8uwz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9069\",\n      name: \"Reign of Winter #3: Maiden, Mother, Crone\",\n      date: \"2013-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-494-8\",\n      url: \"https://paizo.com/products/btpy8xbz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9070\",\n      name: \"Reign of Winter #4: The Frozen Stars\",\n      date: \"2013-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-495-5\",\n      url: \"https://paizo.com/products/btpy8vss\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9071\",\n      name: \"Reign of Winter #5: Rasputin Must Die!\",\n      date: \"2013-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-496-2\",\n      url: \"https://paizo.com/products/btpy8wbv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9072\",\n      name: \"Reign of Winter #6: The Witch Queen's Revenge\",\n      date: \"2013-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-497-9\",\n      url: \"https://paizo.com/products/btpy8wve\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-13E\",\n      name: \"Wrath of the Righteous Player's Guide\",\n      date: \"2013-08-09\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy919c\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9073\",\n      name: \"Wrath of the Righteous #1: The Worldwound Incursion\",\n      date: \"2013-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-553-2\",\n      url: \"https://paizo.com/products/btpy8x8e\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9074\",\n      name: \"Wrath of the Righteous #2: Sword of Valor\",\n      date: \"2013-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-568-6\",\n      url: \"https://paizo.com/products/btpy8xsi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9075\",\n      name: \"Wrath of the Righteous #3: Demon's Heresy\",\n      date: \"2013-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-577-8\",\n      url: \"https://paizo.com/products/btpy8yor\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9076\",\n      name: \"Wrath of the Righteous #4: The Midnight Isles\",\n      date: \"2013-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-585-3\",\n      url: \"https://paizo.com/products/btpy8z6x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9077\",\n      name: \"Wrath of the Righteous #5: Herald of the Ivory Labyrinth\",\n      date: \"2014-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-586-0\",\n      url: \"https://paizo.com/products/btpy909v\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9078\",\n      name: \"Wrath of the Righteous #6: City of Locusts\",\n      date: \"2014-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-587-7\",\n      url: \"https://paizo.com/products/btpy921g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-14E\",\n      name: \"Mummy's Mask Player's Guide\",\n      date: \"2014-03-01\",\n      pages: 14,\n      url: \"https://paizo.com/products/btpy94z3\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9079\",\n      name: \"Mummy's Mask #1: The Half-Dead City\",\n      date: \"2014-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-588-4\",\n      url: \"https://paizo.com/products/btpy94qz\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9080\",\n      name: \"Mummy's Mask #2: Empty Graves\",\n      date: \"2014-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-589-1\",\n      url: \"https://paizo.com/products/btpy94vv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9081\",\n      name: \"Mummy's Mask #3: Shifting Sands\",\n      date: \"2014-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-590-7\",\n      url: \"https://paizo.com/products/btpy94qb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9082\",\n      name: \"Mummy's Mask #4: Secrets of the Sphinx\",\n      date: \"2014-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-591-4\",\n      url: \"https://paizo.com/products/btpy9386\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9083\",\n      name: \"Mummy's Mask #5: The Slave Trenches of Hakotep\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-592-1\",\n      url: \"https://paizo.com/products/btpy97at\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9084\",\n      name: \"Mummy's Mask #6: Pyramid of the Sky Pharaoh\",\n      date: \"2014-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-593-8\",\n      url: \"https://paizo.com/products/btpy97av\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-15E\",\n      name: \"Iron Gods Player's Guide\",\n      date: \"2014-08-05\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy98lf\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9085\",\n      name: \"Iron Gods #1: Fires of Creation\",\n      date: \"2014-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-673-7\",\n      url: \"https://paizo.com/products/btpy95br\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9086\",\n      name: \"Iron Gods #2: Lords of Rust\",\n      date: \"2014-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-678-2\",\n      url: \"https://paizo.com/products/btpy95bs\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9087\",\n      name: \"Iron Gods #3: The Choking Tower\",\n      date: \"2014-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-688-1\",\n      url: \"https://paizo.com/products/btpy95bt\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9088\",\n      name: \"Iron Gods #4: Valley of the Brain Collectors\",\n      date: \"2014-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-704-8\",\n      url: \"https://paizo.com/products/btpy95bu\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9089\",\n      name: \"Iron Gods #5: Palace of Fallen Stars\",\n      date: \"2014-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-711-6\",\n      url: \"https://paizo.com/products/btpy95bv\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9090\",\n      name: \"Iron Gods #6: The Divinity Drive\",\n      date: \"2015-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-724-6\",\n      url: \"https://paizo.com/products/btpy95bw\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-16E\",\n      name: \"Giantslayer Player's Guide\",\n      date: \"2015-01-25\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9bsv\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9091\",\n      name: \"Giantslayer #1: Battle of Bloodmarch Hill\",\n      date: \"2015-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-725-3\",\n      url: \"https://paizo.com/products/btpy96ps\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9092\",\n      name: \"Giantslayer #2: The Hill Giant's Pledge\",\n      date: \"2015-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-726-0\",\n      url: \"https://paizo.com/products/btpy98t4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9093\",\n      name: \"Giantslayer #3: Forge of the Giant God\",\n      date: \"2015-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-727-7\",\n      url: \"https://paizo.com/products/btpy98t5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9094\",\n      name: \"Giantslayer #4: Ice Tomb of the Giant Queen\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-728-4\",\n      url: \"https://paizo.com/products/btpy98t6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9095\",\n      name: \"Giantslayer #5: Anvil of Fire\",\n      date: \"2015-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-729-1\",\n      url: \"https://paizo.com/products/btpy98t7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9096\",\n      name: \"Giantslayer #6: Shadow of the Storm Tyrant\",\n      date: \"2015-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-730-7\",\n      url: \"https://paizo.com/products/btpy98t8\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-17E\",\n      name: \"Hell's Rebels Player's Guide\",\n      date: \"2015-08-12\",\n      pages: 34,\n      url: \"https://paizo.com/products/btpy9g44\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO9097\",\n      name: \"Hell's Rebels #1: In Hell's Bright Shadow\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-768-0\",\n      url: \"https://paizo.com/products/btpy98t9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9098\",\n      name: \"Hell's Rebels #2: Turn of the Torrent\",\n      date: \"2015-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-784-0\",\n      url: \"https://paizo.com/products/btpy98ta\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9099\",\n      name: \"Hell's Rebels #3: Dance of the Damned\",\n      date: \"2015-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-788-8\",\n      url: \"https://paizo.com/products/btpy98tb\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90100\",\n      name: \"Hell's Rebels #4: A Song of Silver\",\n      date: \"2015-12-01\",\n      pages: 128,\n      isbn: \"978-1-60125-795-6\",\n      url: \"https://paizo.com/products/btpy98tf\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90101\",\n      name: \"Hell's Rebels #5: The Kintargo Contract\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-800-7\",\n      url: \"https://paizo.com/products/btpy98td\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90102\",\n      name: \"Hell's Rebels #6: Breaking the Bones of Hell\",\n      date: \"2016-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-808-3\",\n      url: \"https://paizo.com/products/btpy9i8d\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-18E\",\n      name: \"Hell's Vengeance Player's Guide\",\n      date: \"2016-02-25\",\n      pages: 20,\n      url: \"https://paizo.com/products/btpy9jva\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90103\",\n      name: \"Hell's Vengeance #1: The Hellfire Compact\",\n      date: \"2016-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-818-2\",\n      url: \"https://paizo.com/products/btpy9gds\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90104\",\n      name: \"Hell's Vengeance #2: Wrath of Thrune\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-824-3\",\n      url: \"https://paizo.com/products/btpy9h32\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90105\",\n      name: \"Hell's Vengeance #3: The Inferno Gate\",\n      date: \"2016-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-827-4\",\n      url: \"https://paizo.com/products/btpy9hj9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90106\",\n      name: \"Hell's Vengeance #4: For Queen & Empire\",\n      date: \"2016-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-836-6\",\n      url: \"https://paizo.com/products/btpy9ics\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90107\",\n      name: \"Hell's Vengeance #5: Scourge of the Godclaw\",\n      date: \"2016-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-842-7\",\n      url: \"https://paizo.com/products/btpy9ips\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90108\",\n      name: \"Hell's Vengeance #6: Hell Comes to Westcrown\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-851-9\",\n      url: \"https://paizo.com/products/btpy9jd0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-19E\",\n      name: \"Strange Aeons Player's Guide\",\n      date: \"2016-08-17\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9nrw\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90109\",\n      name: \"Strange Aeons #1: In Search of Sanity\",\n      date: \"2016-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-882-3\",\n      url: \"https://paizo.com/products/btpy9k5o\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90110\",\n      name: \"Strange Aeons #2: The Thrushmoor Terror\",\n      date: \"2016-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-892-2\",\n      url: \"https://paizo.com/products/btpy9l3g\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90111\",\n      name: \"Strange Aeons #3: Dreams of the Yellow King\",\n      date: \"2016-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-899-1\",\n      url: \"https://paizo.com/products/btpy9mbj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90112\",\n      name: \"Strange Aeons #4: The Whisper Out of Time\",\n      date: \"2016-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-908-0\",\n      url: \"https://paizo.com/products/btpy9n12\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90113\",\n      name: \"Strange Aeons #5: What Grows Within\",\n      date: \"2017-01-01\",\n      pages: 96,\n      isbn: \"978-1-60125-913-4\",\n      url: \"https://paizo.com/products/btpy9nd3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90114\",\n      name: \"Strange Aeons #6: Black Stars Beckon\",\n      date: \"2017-02-01\",\n      pages: 96,\n      isbn: \"978-1-60125-919-6\",\n      url: \"https://paizo.com/products/btpy9nd9\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-20E\",\n      name: \"Ironfang Invasion Player's Guide\",\n      date: \"2017-03-16\",\n      pages: 12,\n      url: \"https://paizo.com/products/btpy9sc5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90115\",\n      name: \"Ironfang Invasion #1: Trail of the Hunted\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-926-4\",\n      url: \"https://paizo.com/products/btpy9npj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90116\",\n      name: \"Ironfang Invasion #2: Fangs of War\",\n      date: \"2017-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-932-5\",\n      url: \"https://paizo.com/products/btpy9npk\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90117\",\n      name: \"Ironfang Invasion #3: Assault on Longshadow\",\n      date: \"2017-04-01\",\n      pages: 96,\n      isbn: \"978-1-60125-935-6\",\n      url: \"https://paizo.com/products/btpy9p1h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #4: Siege of Stone\",\n      date: \"2017-05-01\",\n      pages: 96,\n      isbn: \"978-1-60125-940-0\",\n      url: \"https://paizo.com/products/btpy9pn4\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90119\",\n      name: \"Ironfang Invasion #5: Prisoners of the Blight\",\n      date: \"2017-06-01\",\n      pages: 96,\n      isbn: \"978-1-60125-943-1\",\n      url: \"https://paizo.com/products/btpy9npn\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90120\",\n      name: \"Ironfang Invasion #6: Vault of the Onyx Citadel\",\n      date: \"2017-07-01\",\n      pages: 96,\n      isbn: \"978-1-60125-952-3\",\n      url: \"https://paizo.com/products/btpy9pno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-21E\",\n      name: \"Ruins of Azlant Player's Guide\",\n      date: \"2017-08-03\",\n      pages: 16,\n      url: \"https://paizo.com/products/btpy9uir\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90121\",\n      name: \"Ruins of Azlant #1: The Lost Outpost\",\n      date: \"2017-08-01\",\n      pages: 96,\n      isbn: \"978-1-60125-964-6\",\n      url: \"https://paizo.com/products/btpy9qya\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90122\",\n      name: \"Ruins of Azlant #2: Into the Shattered Continent\",\n      date: \"2017-09-01\",\n      pages: 96,\n      isbn: \"978-1-60125-972-1\",\n      url: \"https://paizo.com/products/btpy9uk0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90123\",\n      name: \"Ruins of Azlant #3: The Flooded Cathedral\",\n      date: \"2017-10-01\",\n      pages: 96,\n      isbn: \"978-1-60125-981-3\",\n      url: \"https://paizo.com/products/btpy9uk2\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90124\",\n      name: \"Ruins of Azlant #4: City in the Deep\",\n      date: \"2017-11-01\",\n      pages: 96,\n      isbn: \"978-1-60125-988-2\",\n      url: \"https://paizo.com/products/btpy9x2h\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90125\",\n      name: \"Ruins of Azlant #5: Tower of the Drowned Dead\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-60125-998-1\",\n      url: \"https://paizo.com/products/btpy9xa1\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90126\",\n      name: \"Ruins of Azlant #6: Beyond the Veiled Past\",\n      date: \"2017-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-009-5\",\n      url: \"https://paizo.com/products/btpy9xf0\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-22E\",\n      name: \"War for the Crown Player's Guide\",\n      date: \"2018-03-22\",\n      pages: 18,\n      url: \"https://paizo.com/products/btpya08v\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90127\",\n      name: \"War for the Crown #1: Crownfall\",\n      date: \"2018-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-015-6\",\n      url: \"https://paizo.com/products/btpy9zk7\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90128\",\n      name: \"War for the Crown #2: Songbird, Scion, Saboteur\",\n      date: \"2018-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-025-5\",\n      url: \"https://paizo.com/products/btpya04x\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90129\",\n      name: \"War for the Crown #3: The Twilight Child\",\n      date: \"2018-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-032-3\",\n      url: \"https://paizo.com/products/btpya0fi\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90130\",\n      name: \"War for the Crown #4: City in the Lion's Eye\",\n      date: \"2018-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-037-8\",\n      url: \"https://paizo.com/products/btpy9wmy\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90131\",\n      name: \"War for the Crown #5: The Reaper's Right Hand\",\n      date: \"2018-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-045-3\",\n      url: \"https://paizo.com/products/btpy9x04\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90132\",\n      name: \"War for the Crown #6: The Six-Legend Soul\",\n      date: \"2018-07-01\",\n      pages: 96,\n      isbn: \"978-1-64078-052-1\",\n      url: \"https://paizo.com/products/btpy9xdq\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-23E\",\n      name: \"Return of the Runelords Player's Guide\",\n      date: \"2018-09-05\",\n      pages: 14,\n      url: \"https://paizo.com/products/btq01su5\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90133\",\n      name: \"Return of the Runelords #1: Secrets of Roderic's Cove\",\n      date: \"2018-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-062-0\",\n      url: \"https://paizo.com/products/btpy9y26\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90134\",\n      name: \"Return of the Runelords #2: It Came from Hollow Mountain\",\n      date: \"2018-09-01\",\n      pages: 96,\n      isbn: \"978-1-64078-070-5\",\n      url: \"https://paizo.com/products/btpy9z14\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90135\",\n      name: \"Return of the Runelords #3: Runeplague\",\n      date: \"2018-10-01\",\n      pages: 96,\n      isbn: \"978-1-64078-079-8\",\n      url: \"https://paizo.com/products/btpy9zsl\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90136\",\n      name: \"Return of the Runelords #4: Temple of the Peacock Spirit\",\n      date: \"2018-11-01\",\n      pages: 96,\n      isbn: \"978-1-64078-091-0\",\n      url: \"https://paizo.com/products/btpya0b5\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90137\",\n      name: \"Return of the Runelords #5: The City Outside of Time\",\n      date: \"2018-12-01\",\n      pages: 96,\n      isbn: \"978-1-64078-098-9\",\n      url: \"https://paizo.com/products/btq01vak\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90138\",\n      name: \"Return of the Runelords #6: Rise of New Thassilon\",\n      date: \"2019-01-01\",\n      pages: 96,\n      isbn: \"978-1-64078-106-1\",\n      url: \"https://paizo.com/products/btq01w1w\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9000-24E\",\n      name: \"Tyrant's Grasp Player's Guide\",\n      date: \"2019-02-08\",\n      pages: 9,\n      url: \"https://paizo.com/products/btq01xdp\",\n      type: \"pg\",\n    },\n    {\n      _id: \"PZO90139\",\n      name: \"Tyrant's Grasp #1: The Dead Roads\",\n      date: \"2019-02-01\",\n      pages: 96,\n      isbn: \"978-1-64078-111-5\",\n      url: \"https://paizo.com/products/btq01ws3\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90140\",\n      name: \"Tyrant's Grasp #2: Eulogy for Roslar's Coffer\",\n      date: \"2019-03-01\",\n      pages: 96,\n      isbn: \"978-1-64078-119-1\",\n      url: \"https://paizo.com/products/btq01x4b\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90141\",\n      name: \"Tyrant's Grasp #3: Last Watch\",\n      date: \"2019-04-01\",\n      pages: 96,\n      isbn: \"978-1-64078-126-9\",\n      url: \"https://paizo.com/products/btq01x4f\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90142\",\n      name: \"Tyrant's Grasp #4: Gardens of Gallowspire\",\n      date: \"2019-05-01\",\n      pages: 96,\n      isbn: \"978-1-64078-134-4\",\n      url: \"https://paizo.com/products/btq01xj6\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90143\",\n      name: \"Tyrant's Grasp #5: Borne by the Sun's Grace\",\n      date: \"2019-06-01\",\n      pages: 96,\n      isbn: \"978-1-64078-140-5\",\n      url: \"https://paizo.com/products/btq01znj\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO90144\",\n      name: \"Tyrant's Grasp #6: Midwives to Death\",\n      date: \"2019-08-01\",\n      pages: 96,\n      isbn: \"978-1-64078-144-3\",\n      url: \"https://paizo.com/products/btq01zno\",\n      type: \"ap\",\n    },\n    {\n      _id: \"PZO9500\",\n      name: \"Hollow's Last Hope\",\n      date: \"2007-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9501\",\n      name: \"Crown of the Kobold King\",\n      date: \"2007-06-01\",\n      pages: 32,\n      level: 2,\n      isbn: \"978-1-60125-048-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9502\",\n      name: \"Conquest of Bloodsworn Vale\",\n      date: \"2007-07-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-049-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9503\",\n      name: \"Seven Swords of Sin\",\n      date: \"2007-08-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-050-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9504\",\n      name: \"Gallery of Evil\",\n      date: \"2007-09-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-051-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9505\",\n      name: \"Entombed with the Pharaohs\",\n      date: \"2007-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-052-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-TC1\",\n      name: \"Into the Haunted Forest\",\n      date: \"2007-11-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-108-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9506\",\n      name: \"Carnival of Tears\",\n      date: \"2007-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-055-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9507\",\n      name: \"Guardians of Dragonfall\",\n      date: \"2007-12-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-056-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9508\",\n      name: \"Hangman's Noose\",\n      date: \"2008-01-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-073-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9509\",\n      name: \"Crucible of Chaos\",\n      date: \"2008-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-074-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9510\",\n      name: \"River into Darkness\",\n      date: \"2008-03-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-075-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9511\",\n      name: \"The Demon Within\",\n      date: \"2008-04-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-076-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9512\",\n      name: \"Flight of the Red Raven\",\n      date: \"2008-05-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-101-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-2\",\n      name: \"Revenge of the Kobold King\",\n      date: \"2008-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9513\",\n      name: \"Tower of the Last Baron\",\n      date: \"2008-06-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-102-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9514\",\n      name: \"Treasure of Chimera Cove\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-119-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9515\",\n      name: \"Hungry Are the Dead\",\n      date: \"2008-10-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-120-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9516\",\n      name: \"The Pact Stone Pyramid\",\n      date: \"2008-11-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-145-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9517\",\n      name: \"Clash of the Kingslayers\",\n      date: \"2009-01-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-125-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9518\",\n      name: \"Blood of Dragonscar\",\n      date: \"2009-03-01\",\n      pages: 32,\n      level: 15,\n      isbn: \"978-1-60125-170-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9519\",\n      name: \"Beyond the Vault of Souls\",\n      date: \"2009-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-174-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9520NM\",\n      name: \"Crypt of the Everflame\",\n      date: \"2009-08-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-186-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9521\",\n      name: \"Carrion Hill\",\n      date: \"2009-11-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-206-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9522\",\n      name: \"Masks of the Living God\",\n      date: \"2009-12-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-207-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9523\",\n      name: \"Realm of the Fellnight Queen\",\n      date: \"2010-02-01\",\n      pages: 32,\n      level: 7,\n      isbn: \"978-1-60125-224-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9524\",\n      name: \"City of Golden Death\",\n      date: \"2010-04-01\",\n      pages: 32,\n      level: 5,\n      isbn: \"978-1-60125-225-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9525\",\n      name: \"From Shore to Sea\",\n      date: \"2010-06-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-257-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-4\",\n      name: \"Master of the Fallen Fortress\",\n      date: \"2010-06-01\",\n      pages: 16,\n      level: 1,\n      isbn: \"978-1-60125-365-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9526\",\n      name: \"Curse of the Riven Sky\",\n      date: \"2010-07-01\",\n      pages: 32,\n      level: 10,\n      isbn: \"978-1-60125-258-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9527\",\n      name: \"The Witchwar Legacy\",\n      date: \"2010-09-01\",\n      pages: 32,\n      level: 17,\n      isbn: \"978-1-60125-279-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9528\",\n      name: \"The Godsmouth Heresy\",\n      date: \"2010-12-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-280-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9529\",\n      name: \"Cult of the Ebon Destroyers\",\n      date: \"2011-02-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-317-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9530\",\n      name: \"Tomb of the Iron Medusa\",\n      date: \"2011-04-01\",\n      pages: 32,\n      level: 14,\n      isbn: \"978-1-60125-318-7\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9531\",\n      name: \"Academy of Secrets\",\n      date: \"2011-06-01\",\n      pages: 32,\n      level: 13,\n      isbn: \"978-1-60125-343-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-5\",\n      name: \"We Be Goblins!\",\n      date: \"2011-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9532\",\n      name: \"The Harrowing\",\n      date: \"2011-07-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-355-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9533\",\n      name: \"Feast of Ravenmoor\",\n      date: \"2011-09-01\",\n      pages: 32,\n      level: 3,\n      isbn: \"978-1-60125-367-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9534\",\n      name: \"The Ruby Phoenix Tournament\",\n      date: \"2012-01-01\",\n      pages: 32,\n      level: 11,\n      isbn: \"978-1-60125-381-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9535\",\n      name: \"The Midnight Mirror\",\n      date: \"2012-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-401-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9536\",\n      name: \"No Response from Deepmar\",\n      date: \"2012-05-01\",\n      pages: 32,\n      level: 8,\n      isbn: \"978-1-60125-410-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-6\",\n      name: \"Dawn of the Scarlet Sun\",\n      date: \"2012-06-01\",\n      pages: 16,\n      level: 5,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9537\",\n      name: \"The Moonscar\",\n      date: \"2012-08-01\",\n      pages: 32,\n      level: 16,\n      isbn: \"978-1-60125-426-9\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9538\",\n      name: \"Murder's Mark\",\n      date: \"2012-10-01\",\n      pages: 32,\n      level: 1,\n      isbn: \"978-1-60125-447-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9539\",\n      name: \"Broken Chains\",\n      date: \"2013-03-01\",\n      pages: 32,\n      level: 6,\n      isbn: \"978-1-60125-461-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9540\",\n      name: \"Fangwood Keep\",\n      date: \"2013-04-01\",\n      pages: 32,\n      level: 4,\n      isbn: \"978-1-60125-476-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9541\",\n      name: \"Doom Comes to Dustpawn\",\n      date: \"2013-05-01\",\n      pages: 32,\n      level: 9,\n      isbn: \"978-1-60125-504-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-7\",\n      name: \"We Be Goblins Too!\",\n      date: \"2013-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9542\",\n      name: \"The Dragon's Demand\",\n      date: \"2013-07-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-527-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9543\",\n      name: \"Wardens of the Reborn Forge\",\n      date: \"2013-12-01\",\n      pages: 64,\n      level: 12,\n      isbn: \"978-1-60125-555-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9544\",\n      name: \"Tears at Bitter Manor\",\n      date: \"2014-03-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-613-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-8\",\n      name: \"Risen from the Sands\",\n      date: \"2014-06-01\",\n      pages: 16,\n      level: 3,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9545\",\n      name: \"The Emerald Spire Superdungeon\",\n      date: \"2014-06-01\",\n      pages: 160,\n      level: 1,\n      isbn: \"978-1-60125-655-3\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9546\",\n      name: \"Plunder & Peril\",\n      date: \"2014-11-01\",\n      pages: 64,\n      level: 4,\n      isbn: \"978-1-60125-680-5\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9547\",\n      name: \"Daughters of Fury\",\n      date: \"2015-02-01\",\n      pages: 64,\n      level: 3,\n      isbn: \"978-1-60125-706-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-9\",\n      name: \"We Be Goblins Free!\",\n      date: \"2015-06-01\",\n      pages: 16,\n      level: 4,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9548\",\n      name: \"Feast of Dust\",\n      date: \"2015-11-01\",\n      pages: 64,\n      level: 11,\n      isbn: \"978-1-60125-735-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9549\",\n      name: \"The House on Hook Street\",\n      date: \"2015-12-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-790-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9550\",\n      name: \"Down the Blighted Path\",\n      date: \"2016-02-01\",\n      pages: 64,\n      level: 5,\n      isbn: \"978-1-60125-815-1\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9551\",\n      name: \"Ire of the Storm\",\n      date: \"2016-05-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-830-4\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-10\",\n      name: \"We B4 Goblins!\",\n      date: \"2016-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9552\",\n      name: \"Gallows of Madness\",\n      date: \"2016-08-01\",\n      pages: 64,\n      level: 1,\n      isbn: \"978-1-60125-854-0\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9553\",\n      name: \"Seers of the Drowned City\",\n      date: \"2016-11-01\",\n      pages: 64,\n      level: 6,\n      isbn: \"978-1-60125-902-8\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGENA001\",\n      name: \"Heroes for Highdelve\",\n      date: \"2017-08-01\",\n      pages: 20,\n      level: 1,\n      isbn: \"978-1-64078-002-6\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZOGAUNTLET\",\n      name: \"The Gauntlet\",\n      date: \"2018-05-01\",\n      pages: 16,\n      level: 8,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-12\",\n      name: \"We Be 5uper Goblins!\",\n      date: \"2018-06-01\",\n      pages: 16,\n      level: 6,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9554\",\n      name: \"Cradle of Night\",\n      date: \"2018-12-01\",\n      pages: 64,\n      level: 8,\n      isbn: \"978-1-60125-991-2\",\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9500-14\",\n      name: \"We Be Heroes?\",\n      date: \"2019-06-01\",\n      pages: 16,\n      level: 1,\n      type: \"module\",\n    },\n    {\n      _id: \"PZO9402\",\n      name: \"Elves of Golarion\",\n      date: \"2008-10-01\",\n      isbn: \"978-1-60125-143-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9403\",\n      name: \"Osirion, Land of Pharaohs\",\n      date: \"2008-12-01\",\n      isbn: \"978-1-60125-144-2\",\n      url: \"https://paizo.com/products/btpy86j7\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9405\",\n      name: \"Taldor, Echoes of Glory\",\n      date: \"2009-04-01\",\n      isbn: \"978-1-60125-169-5\",\n      legacy: true,\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9406\",\n      name: \"Qadira, Gateway to the East\",\n      date: \"2009-06-01\",\n      isbn: \"978-1-60125-180-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9407\",\n      name: \"Cheliax, Empire of Devils\",\n      date: \"2009-08-01\",\n      isbn: \"978-1-60125-191-6\",\n      tieIn: \"Council of Thieves\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9408\",\n      name: \"Dwarves of Golarion\",\n      date: \"2009-12-01\",\n      isbn: \"978-1-60125-204-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9409\",\n      name: \"Andoran, Spirit of Liberty\",\n      date: \"2010-01-01\",\n      isbn: \"978-1-60125-205-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9410\",\n      name: \"Adventurer's Armory\",\n      abbr: \"AA\",\n      date: \"2010-04-01\",\n      isbn: \"978-1-60125-222-7\",\n      tieIn: \"Kingmaker\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9411\",\n      name: \"Gnomes of Golarion\",\n      date: \"2010-05-01\",\n      isbn: \"978-1-60125-223-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9412\",\n      name: \"Sargava, the Lost Colony\",\n      date: \"2010-06-01\",\n      isbn: \"978-1-60125-255-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9413\",\n      name: \"Orcs of Golarion\",\n      date: \"2010-08-01\",\n      isbn: \"978-1-60125-256-2\",\n      tieIn: \"Serpent's Skull\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9414\",\n      name: \"Inner Sea Primer\",\n      date: \"2010-11-01\",\n      isbn: \"978-1-60125-277-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9415\",\n      name: \"Halflings of Golarion\",\n      date: \"2011-01-01\",\n      isbn: \"978-1-60125-278-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9416\",\n      name: \"Faiths of Purity\",\n      date: \"2011-04-01\",\n      isbn: \"978-1-60125-314-9\",\n      tieIn: \"Carrion Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9417\",\n      name: \"Humans of Golarion\",\n      date: \"2011-06-01\",\n      isbn: \"978-1-60125-315-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9418\",\n      name: \"Faiths of Balance\",\n      date: \"2011-07-01\",\n      isbn: \"978-1-60125-316-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9419\",\n      name: \"Goblins of Golarion\",\n      date: \"2011-08-01\",\n      isbn: \"978-1-60125-362-0\",\n      tieIn: \"Jade Regent\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9420\",\n      name: \"Faiths of Corruption\",\n      date: \"2011-10-01\",\n      isbn: \"978-1-60125-375-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9421\",\n      name: \"Dragon Empires Primer\",\n      date: \"2012-01-01\",\n      isbn: \"978-1-60125-386-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9422\",\n      name: \"Pirates of the Inner Sea\",\n      abbr: \"PotIS\",\n      date: \"2012-02-01\",\n      isbn: \"978-1-60125-405-4\",\n      tieIn: \"Skull & Shackles\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9423\",\n      name: \"Blood of Fiends\",\n      date: \"2012-04-01\",\n      isbn: \"978-1-60125-423-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9424\",\n      name: \"Blood of Angels\",\n      date: \"2012-07-01\",\n      isbn: \"978-1-60125-438-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9425\",\n      name: \"Varisia, Birthplace of Legends\",\n      date: \"2012-08-02\",\n      isbn: \"978-1-60125-453-5\",\n      tieIn: \"Shattered Star\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9426\",\n      name: \"Knights of the Inner Sea\",\n      date: \"2012-09-01\",\n      isbn: \"978-1-60125-460-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9427\",\n      name: \"Blood of the Night\",\n      date: \"2012-12-06\",\n      isbn: \"978-1-60125-470-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9428\",\n      name: \"People of the North\",\n      date: \"2013-01-22\",\n      isbn: \"978-1-60125-475-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9429\",\n      name: \"Animal Archive\",\n      date: \"2013-02-13\",\n      isbn: \"978-1-60125-488-7\",\n      tieIn: \"Reign of Winter\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9430\",\n      name: \"Dungeoneer's Handbook\",\n      abbr: \"DHB\",\n      date: \"2013-03-08\",\n      isbn: \"978-1-60125-510-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9431\",\n      name: \"Champions of Purity\",\n      date: \"2013-04-16\",\n      isbn: \"978-1-60125-511-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9432\",\n      name: \"Kobolds of Golarion\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-512-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9433\",\n      name: \"Quests & Campaigns\",\n      date: \"2013-06-13\",\n      isbn: \"978-1-60125-513-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9434\",\n      name: \"Dragonslayer's Handbook\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-526-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9435\",\n      name: \"Pathfinder Society Primer\",\n      date: \"2013-07-11\",\n      isbn: \"978-1-60125-534-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9436\",\n      name: \"Faiths & Philosophies\",\n      date: \"2013-08-19\",\n      isbn: \"978-1-60125-543-3\",\n      tieIn: \"Wrath of the Righteous\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9437\",\n      name: \"Demon Hunter's Handbook\",\n      date: \"2013-08-17\",\n      isbn: \"978-1-60125-554-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9438\",\n      name: \"Mythic Origins\",\n      date: \"2013-09-25\",\n      isbn: \"978-1-60125-569-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9439\",\n      name: \"Blood of the Moon\",\n      date: \"2013-10-21\",\n      isbn: \"978-1-60125-578-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9440\",\n      name: \"Magical Marketplace\",\n      abbr: \"MM\",\n      date: \"2013-12-11\",\n      isbn: \"978-1-60125-600-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9441\",\n      name: \"People of the Sands\",\n      date: \"2014-01-09\",\n      isbn: \"978-1-60125-601-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9442\",\n      name: \"Bastards of Golarion\",\n      date: \"2014-02-06\",\n      isbn: \"978-1-60125-602-7\",\n      tieIn: \"Mummy's Mask\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9443\",\n      name: \"Champions of Balance\",\n      date: \"2014-03-25\",\n      isbn: \"978-1-60125-603-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9444\",\n      name: \"Undead Slayer's Handbook\",\n      abbr: \"USH\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-604-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9445\",\n      name: \"Alchemy Manual\",\n      abbr: \"AM\",\n      date: \"2014-04-30\",\n      isbn: \"978-1-60125-605-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9446\",\n      name: \"The Harrow Handbook\",\n      date: \"2014-05-28\",\n      isbn: \"978-1-60125-650-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9447\",\n      name: \"Blood of the Elements\",\n      date: \"2014-06-25\",\n      isbn: \"978-1-60125-654-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9448\",\n      name: \"People of the River\",\n      date: \"2014-07-25\",\n      isbn: \"978-1-60125-666-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9449\",\n      name: \"People of the Stars\",\n      date: \"2014-08-14\",\n      isbn: \"978-1-60125-674-4\",\n      tieIn: \"Iron Gods\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9450\",\n      name: \"Champions of Corruption\",\n      date: \"2014-09-10\",\n      isbn: \"978-1-60125-679-9\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9451\",\n      name: \"Advanced Class Origins\",\n      date: \"2014-10-22\",\n      isbn: \"978-1-60125-689-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9452\",\n      name: \"Ranged Tactics Toolbox\",\n      date: \"2014-11-24\",\n      isbn: \"978-1-60125-705-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9453\",\n      name: \"Giant Hunter's Handbook\",\n      date: \"2014-12-17\",\n      isbn: \"978-1-60125-712-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9454\",\n      name: \"Familiar Folio\",\n      abbr: \"FF\",\n      date: \"2015-01-28\",\n      isbn: \"978-1-60125-731-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9455\",\n      name: \"Melee Tactics Toolbox\",\n      date: \"2015-03-25\",\n      isbn: \"978-1-60125-732-1\",\n      tieIn: \"Giant Slayer\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9456\",\n      name: \"Heroes of the Wild\",\n      date: \"2015-04-29\",\n      isbn: \"978-1-60125-733-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9457\",\n      name: \"Cohorts and Companions\",\n      date: \"2015-05-27\",\n      isbn: \"978-1-60125-734-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9458\",\n      name: \"Monster Summoner's Handbook\",\n      date: \"2015-06-24\",\n      isbn: \"978-1-60125-758-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9459\",\n      name: \"Dirty Tactics Toolbox\",\n      date: \"2015-09-02\",\n      isbn: \"978-1-60125-763-5\",\n      tieIn: \"Hell's Rebels\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9460\",\n      name: \"Heroes of the Streets\",\n      date: \"2015-09-30\",\n      isbn: \"978-1-60125-769-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9461\",\n      name: \"Occult Origins\",\n      abbr: \"OO\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-785-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9462\",\n      name: \"Black Markets\",\n      abbr: \"BM\",\n      date: \"2015-10-21\",\n      isbn: \"978-1-60125-789-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9463\",\n      name: \"Weapon Master's Handbook\",\n      date: \"2015-11-18\",\n      isbn: \"978-1-60125-796-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9464\",\n      name: \"Agents of Evil\",\n      date: \"2015-12-16\",\n      isbn: \"978-1-60125-801-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9465\",\n      name: \"Arcane Anthology\",\n      abbr: \"AA\",\n      date: \"2016-01-27\",\n      isbn: \"978-1-60125-814-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9466\",\n      name: \"Blood of Shadows\",\n      date: \"2016-02-24\",\n      isbn: \"978-1-60125-820-5\",\n      tieIn: \"Hell's Vengeance\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9467\",\n      name: \"Armor Master's Handbook\",\n      date: \"2016-04-27\",\n      isbn: \"978-1-60125-829-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9468\",\n      name: \"Magic Tactics Toolbox\",\n      date: \"2016-05-25\",\n      isbn: \"978-1-60125-838-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9469\",\n      name: \"Spymaster's Handbook\",\n      date: \"2016-06-29\",\n      isbn: \"978-1-60125-844-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9470\",\n      name: \"Legacy of Dragons\",\n      date: \"2016-08-04\",\n      isbn: \"978-1-60125-853-3\",\n      tieIn: \"Strange Aeons\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9471\",\n      name: \"Haunted Heroes Handbook\",\n      date: \"2016-08-31\",\n      isbn: \"978-1-60125-884-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9472\",\n      name: \"Divine Anthology\",\n      date: \"2016-09-28\",\n      isbn: \"978-1-60125-894-6\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9473\",\n      name: \"Blood of the Beast\",\n      date: \"2016-11-16\",\n      isbn: \"978-1-60125-901-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9474\",\n      name: \"Paths of the Righteous\",\n      date: \"2016-12-14\",\n      isbn: \"978-1-60125-910-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9475\",\n      name: \"Healer's Handbook\",\n      abbr: \"HH\",\n      date: \"2017-01-25\",\n      isbn: \"978-1-60125-914-1\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9476\",\n      name: \"Heroes of the High Court\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-920-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9477\",\n      name: \"Psychic Anthology\",\n      date: \"2017-02-22\",\n      isbn: \"978-1-60125-928-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9478\",\n      name: \"Monster Hunter's Handbook\",\n      date: \"2017-03-29\",\n      isbn: \"978-1-60125-933-2\",\n      tieIn: \"Ironfang Invasion\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9479\",\n      name: \"Heroes of the Darklands\",\n      date: \"2017-04-26\",\n      isbn: \"978-1-60125-936-3\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9480\",\n      name: \"Legacy of the First World\",\n      date: \"2017-05-31\",\n      isbn: \"978-1-60125-941-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9481\",\n      name: \"Adventurer's Armory 2\",\n      abbr: \"AA2\",\n      date: \"2017-06-28\",\n      isbn: \"978-1-60125-945-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9482\",\n      name: \"Blood of the Sea\",\n      date: \"2017-07-26\",\n      isbn: \"978-1-60125-955-4\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9483\",\n      name: \"Elemental Master's Handbook\",\n      date: \"2017-08-17\",\n      isbn: \"978-1-60125-965-3\",\n      tieIn: \"Ruins of Azlant\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9484\",\n      name: \"Antihero's Handbook\",\n      date: \"2017-09-20\",\n      isbn: \"978-1-60125-973-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9485\",\n      name: \"Blood of the Coven\",\n      date: \"2017-10-18\",\n      isbn: \"978-1-60125-982-0\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9486\",\n      name: \"People of the Wastes\",\n      date: \"2017-11-15\",\n      isbn: \"978-1-60125-990-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9487\",\n      name: \"Potions & Poisons\",\n      abbr: \"P&P\",\n      date: \"2017-12-13\",\n      isbn: \"978-1-64078-000-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9488\",\n      name: \"Disciple's Doctrine\",\n      date: \"2018-01-31\",\n      isbn: \"978-1-64078-011-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9489\",\n      name: \"Merchant's Manifest\",\n      date: \"2018-03-28\",\n      isbn: \"978-1-64078-026-2\",\n      tieIn: \"War for the Crown\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9490\",\n      name: \"Blood of the Ancients\",\n      date: \"2018-05-30\",\n      isbn: \"978-1-64078-038-5\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9491\",\n      name: \"Heroes from the Fringe\",\n      date: \"2018-08-29\",\n      isbn: \"978-1-64078-053-8\",\n      tieIn: \"Return of the Runelords\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9492\",\n      name: \"Plane-Hopper's Handbook\",\n      date: \"2018-09-19\",\n      isbn: \"978-1-64078-071-2\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9493\",\n      name: \"Martial Arts Handbook\",\n      date: \"2018-11-14\",\n      isbn: \"978-1-64078-092-7\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9494\",\n      name: \"Wilderness Origins\",\n      date: \"2019-01-30\",\n      isbn: \"978-1-64078-107-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9495\",\n      name: \"Heroes of Golarion\",\n      date: \"2019-03-27\",\n      isbn: \"978-1-64078-120-7\",\n      tieIn: \"Tyrant's Grasp\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO9496\",\n      name: \"Chronicle of Legends\",\n      date: \"2019-05-29\",\n      isbn: \"978-1-64078-136-8\",\n      type: \"companion\",\n    },\n    {\n      _id: \"PZO1106\",\n      name: \"Pathfinder Chronicles: Guide to Korvosa\",\n      date: \"2008-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-078-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1105\",\n      name: \"Pathfinder Chronicles: Gazetteer\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-077-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1107\",\n      name: \"Pathfinder Chronicles: Classic Monsters Revisited\",\n      date: \"2008-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-079-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1108\",\n      name: \"Pathfinder Chronicles: Guide to Darkmoon Vale\",\n      date: \"2008-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-100-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO1111\",\n      name: \"Pathfinder Chronicles: Campaign Setting\",\n      date: \"2008-08-01\",\n      pages: 256,\n      isbn: \"978-1-60125-112-1\",\n      url: \"http://paizo.com/products/btpy84eo\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9202\",\n      name: \"Pathfinder Chronicles: Gods and Magic\",\n      date: \"2008-10-01\",\n      pages: 32,\n      isbn: \"978-1-60125-139-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9204\",\n      name: \"Pathfinder Chronicles: Into the Darklands\",\n      date: \"2008-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-140-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9205\",\n      name: \"Pathfinder Chronicles: Guide to Absalom\",\n      date: \"2008-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-141-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9207\",\n      name: \"Pathfinder Chronicles: Dragons Revisited\",\n      date: \"2009-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-165-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9208\",\n      name: \"Pathfinder Chronicles: Dark Markets: A Guide to Katapesh\",\n      date: \"2009-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-166-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9209\",\n      name: \"Pathfinder Chronicles: The Great Beyond\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-167-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9210\",\n      name: \"Pathfinder Chronicles: Dungeon Denizens Revisited\",\n      abbr: \"DDR\",\n      date: \"2009-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-172-5\",\n      type: \"setting\",\n      legacy: true,\n    },\n    {\n      _id: \"PZO9211\",\n      name: \"Pathfinder Chronicles: Seekers of Secrets\",\n      abbr: \"SoS\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9213\",\n      name: \"Pathfinder Chronicles: Princes of Darkness\",\n      date: \"2009-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-189-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9214\",\n      name: \"Pathfinder Chronicles: Cities of Golarion\",\n      date: \"2009-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-178-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9216\",\n      name: \"Pathfinder Chronicles: Classic Horrors Revisited\",\n      date: \"2010-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-202-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9217E\",\n      name: \"Pathfinder Chronicles: Guide to the River Kingdoms\",\n      date: \"2010-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-203-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9219\",\n      name: \"Pathfinder Chronicles: NPC Guide\",\n      date: \"2010-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-219-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9220\",\n      name: \"Pathfinder Chronicles: Classic Treasures Revisited\",\n      date: \"2010-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-220-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9221\",\n      name: \"Pathfinder Chronicles: Faction Guide\",\n      abbr: \"FG\", //  PCh:FG\n      date: \"2010-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-221-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9222\",\n      name: \"Pathfinder Chronicles: Heart of the Jungle\",\n      date: \"2010-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-247-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9223\",\n      name: \"Pathfinder Chronicles: City of Strangers\",\n      date: \"2010-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-248-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9227\",\n      name: \"Misfit Monsters Redeemed\",\n      date: \"2010-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-270-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9225\",\n      name: \"Lords of Chaos\",\n      date: \"2010-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-250-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9229\",\n      name: \"Lost Cities of Golarion\",\n      date: \"2011-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-272-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9226\",\n      name: \"The Inner Sea World Guide\",\n      abbr: \"ISWG\",\n      date: \"2011-03-01\",\n      pages: 320,\n      isbn: \"978-1-60125-269-2\",\n      url: \"http://paizo.com/products/btpy8ief\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9231\",\n      name: \"Rule of Fear\",\n      date: \"2011-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-301-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9232\",\n      name: \"Rival Guide\",\n      date: \"2011-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-302-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9233\",\n      name: \"Undead Revisited\",\n      date: \"2011-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-303-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9234\",\n      name: \"Dungeons of Golarion\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-304-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9235\",\n      name: \"Pathfinder Society Field Guide\",\n      abbr: \"PSFG\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-305-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9237\",\n      name: \"Inner Sea Magic\",\n      date: \"2011-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-360-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9238\",\n      name: \"Lands of the Linnorm Kings\",\n      date: \"2011-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-365-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9239\",\n      name: \"Horsemen of the Apocalypse\",\n      date: \"2011-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-373-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9240\",\n      name: \"Dragon Empires Gazetteer\",\n      date: \"2011-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-379-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9241\",\n      name: \"Mythical Monsters Revisited\",\n      date: \"2012-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-384-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9243\",\n      name: \"Distant Worlds\",\n      date: \"2012-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-403-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9244\",\n      name: \"Isles of the Shackles\",\n      date: \"2012-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-408-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9245\",\n      name: \"Giants Revisited\",\n      date: \"2012-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-412-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9246\",\n      name: \"Lost Kingdoms\",\n      date: \"2012-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-415-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9248\",\n      name: \"Magnimar, City of Monuments\",\n      date: \"2012-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-446-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9249\",\n      name: \"Paths of Prestige\",\n      date: \"2012-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-451-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9250\",\n      name: \"Artifacts & Legends\",\n      date: \"2012-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-458-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9251\",\n      name: \"Inner Sea Bestiary\",\n      abbr: \"ISB\",\n      date: \"2012-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-468-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9252\",\n      name: \"Mystery Monsters Revisited\",\n      date: \"2012-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-473-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9253\",\n      name: \"Irrisen, Land of Eternal Winter\",\n      date: \"2013-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-486-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9255\",\n      name: \"Chronicle of the Righteous\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-506-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9256\",\n      name: \"Fey Revisited\",\n      date: \"2013-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-507-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9257\",\n      name: \"Castles of the Inner Sea\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-508-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9258\",\n      name: \"Dragons Unleashed\",\n      date: \"2013-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-525-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9259\",\n      name: \"The Worldwound\",\n      date: \"2013-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-532-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9261\",\n      name: \"Demons Revisited\",\n      date: \"2013-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-552-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9262\",\n      name: \"Mythic Realms\",\n      date: \"2013-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-567-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9263\",\n      name: \"Towns of the Inner Sea\",\n      date: \"2013-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-576-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9264\",\n      name: \"Inner Sea NPC Codex\",\n      date: \"2013-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-594-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9265\",\n      name: \"Osirion, Legacy of Pharaohs\",\n      date: \"2014-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-595-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9267\",\n      name: \"Inner Sea Gods\",\n      abbr: \"ISG\",\n      date: \"2014-04-01\",\n      pages: 320,\n      isbn: \"978-1-60125-597-6\",\n      url: \"http://paizo.com/products/btpy94wj\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9268\",\n      name: \"Inner Sea Combat\",\n      abbr: \"ISC\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-598-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9269\",\n      name: \"Occult Mysteries\",\n      date: \"2014-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-649-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9270\",\n      name: \"Numeria, Land of Fallen Stars\",\n      date: \"2014-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-653-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9272\",\n      name: \"Technology Guide\",\n      abbr: \"TG\",\n      date: \"2014-08-01\",\n      pages: 64,\n      isbn: \"978-1-60125-672-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9273\",\n      name: \"Undead Unleashed\",\n      date: \"2014-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-677-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9274\",\n      name: \"Ships of the Inner Sea\",\n      date: \"2014-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-702-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9275\",\n      name: \"Lost Treasures\",\n      date: \"2014-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-703-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9276\",\n      name: \"Belkzen, Hold of the Orc Hordes\",\n      date: \"2015-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-710-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9278\",\n      name: \"Tombs of Golarion\",\n      date: \"2015-03-01\",\n      pages: 64,\n      isbn: \"978-1-60125-720-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9279\",\n      name: \"Andoran, Birthplace of Freedom\",\n      date: \"2015-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-721-5\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9283\",\n      name: \"Inner Sea Monster Codex\",\n      date: \"2015-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-752-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9281\",\n      name: \"Hell Unleashed\",\n      date: \"2015-07-01\",\n      pages: 64,\n      isbn: \"978-1-60125-757-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9284\",\n      name: \"Occult Bestiary\",\n      date: \"2015-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-767-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9280\",\n      name: \"Inner Sea Races\",\n      abbr: \"ISR\",\n      date: \"2015-09-01\",\n      pages: 256,\n      isbn: \"978-1-60125-722-2\",\n      url: \"http://paizo.com/products/btpy9g9v\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9285\",\n      name: \"Distant Shores\",\n      date: \"2015-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-787-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9286\",\n      name: \"Occult Realms\",\n      date: \"2015-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-794-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9287\",\n      name: \"Cheliax, The Infernal Empire\",\n      date: \"2015-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-799-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9289\",\n      name: \"Darklands Revisited\",\n      date: \"2016-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-819-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9290\",\n      name: \"Inner Sea Faiths\",\n      date: \"2016-03-01\",\n      pages: 96,\n      isbn: \"978-1-60125-825-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9291\",\n      name: \"Heaven Unleashed\",\n      date: \"2016-04-01\",\n      pages: 64,\n      isbn: \"978-1-60125-828-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9292\",\n      name: \"Inner Sea Intrigue\",\n      date: \"2016-05-01\",\n      pages: 64,\n      isbn: \"978-1-60125-837-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9293\",\n      name: \"Path of the Hellknight\",\n      date: \"2016-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-843-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9295\",\n      name: \"Planes of Power\",\n      date: \"2016-09-01\",\n      pages: 64,\n      isbn: \"978-1-60125-883-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9296\",\n      name: \"Inner Sea Temples\",\n      date: \"2016-10-01\",\n      pages: 64,\n      isbn: \"978-1-60125-893-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9297\",\n      name: \"Horror Realms\",\n      date: \"2016-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-900-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9298\",\n      name: \"The First World, Realm of the Fey\",\n      date: \"2016-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-909-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO9299\",\n      name: \"Qadira, Jewel of the East\",\n      date: \"2017-01-01\",\n      pages: 64,\n      isbn: \"978-1-60125-912-7\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92101\",\n      name: \"Lands of Conflict\",\n      date: \"2017-02-01\",\n      pages: 64,\n      isbn: \"978-1-60125-927-1\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92102\",\n      name: \"Aquatic Adventures\",\n      date: \"2017-06-01\",\n      pages: 64,\n      isbn: \"978-1-60125-944-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92105\",\n      name: \"Taldor, the First Empire\",\n      date: \"2017-12-01\",\n      pages: 64,\n      isbn: \"978-1-60125-999-8\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92107\",\n      name: \"Inner Sea Taverns\",\n      date: \"2018-02-01\",\n      pages: 64,\n      isbn: \"978-1-64078-016-3\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92108\",\n      name: \"Nidal, Land of Shadows\",\n      date: \"2018-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-033-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92109\",\n      name: \"Distant Realms\",\n      date: \"2018-06-01\",\n      pages: 64,\n      isbn: \"978-1-64078-046-0\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92111\",\n      name: \"Sandpoint, Light of the Lost Coast\",\n      date: \"2018-10-01\",\n      pages: 64,\n      isbn: \"978-1-64078-080-4\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92104\",\n      name: \"Construct Handbook\",\n      date: \"2018-11-01\",\n      pages: 64,\n      isbn: \"978-1-60125-989-9\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92112\",\n      name: \"Faiths of Golarion\",\n      date: \"2018-12-01\",\n      pages: 64,\n      isbn: \"978-1-64078-099-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92114\",\n      name: \"Concordance of Rivals\",\n      date: \"2019-04-01\",\n      pages: 64,\n      isbn: \"978-1-64078-127-6\",\n      type: \"setting\",\n    },\n    {\n      _id: \"PZO92116\",\n      name: \"Druma, Profit and Prophecy\",\n      date: \"2019-08-01\",\n      pages: 64,\n      isbn: \"978-1-64078-141-2\",\n      type: \"setting\",\n    },\n    {\n      _id: \"DYN0031-E\",\n      name: \"Worldscape #1\",\n      date: \"2016-10-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oco\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0032-E\",\n      name: \"Worldscape #2\",\n      date: \"2016-11-16\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9oza\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0033-E\",\n      name: \"Worldscape #3\",\n      date: \"2016-12-21\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcq\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0034-E\",\n      name: \"Worldscape #4\",\n      date: \"2017-01-25\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcu\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0035-E\",\n      name: \"Worldscape #5\",\n      date: \"2017-02-22\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9qcy\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0036-E\",\n      name: \"Worldscape #6\",\n      date: \"2017-04-05\",\n      pages: 32,\n      type: \"comic\",\n      url: \"https://paizo.com/products/btpy9sgk\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0046-HC\",\n      name: \"Spiral of Bones\",\n      date: \"2019-02-09\",\n      pages: 136,\n      type: \"comic\",\n      isbn: \"978-1-5241-0738-3\",\n      url: \"https://paizo.com/products/btq01x8j\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"DYN0010-A\",\n      name: \"Pathfinder Comics #10\",\n      date: \"2013-10-23\",\n      pages: 32,\n      type: \"comic\",\n      publisher: \"Dynamite Entertainment\",\n    },\n    {\n      _id: \"PZOPSS0310E\",\n      name: \"Pathfinder Society Scenario #3–10: The Immortal Conundrum\",\n      date: \"2011-11-01\",\n      pages: 24,\n      type: \"pfs\",\n    },\n    {\n      _id: \"PZOPSS0000E\",\n      name: \"Pathfinder Society Roleplaying Guild Guide\",\n      date: \"2019-08-09\",\n      pages: 44,\n      type: \"pfs\",\n    },\n  ];\n}\n\n/**\n * @type {Sources}\n */\nexport let sources;\n","/**\n * Migation category tracker for @see {MigrationState}\n */\nexport class MigrationCategory {\n  state = null;\n\n  id = null;\n  label = null;\n  isNumber = false;\n  processed = null;\n  invalid = 0;\n  errors = [];\n  current = null;\n  total = null;\n  ignored = 0;\n  completed = false;\n\n  constructor(id, label, isNumber, state) {\n    this.state = state;\n    this.id = id;\n    this.label = game.i18n.localize(label);\n    this.isNumber = isNumber;\n    if (isNumber) {\n      this.total = 0;\n      this.processed = 0;\n    }\n  }\n\n  /**\n   * Signal that an entry has started processing.\n   *\n   * @param {any} entry - Whatever was started processing.\n   */\n  startEntry(entry) {\n    this.current = entry;\n    this.state.call(this, { entry, action: \"process\", actionState: \"start\", processing: this.processed + 1 });\n  }\n\n  /**\n   * Signal that an entry has finished processing.\n   *\n   * @param {any} entry - Whatever was finished processing with.\n   */\n  finishEntry(entry) {\n    this.current = null;\n    this.processed += 1;\n    this.state.call(this, { entry, action: \"process\", actionState: \"finish\", processed: this.processed });\n  }\n\n  recordError(entry, error) {\n    this.errors.push({ entry, error });\n  }\n\n  /**\n   * Signal that a specific entry was ignored.\n   *\n   * @param {any} entry - Whatever was ignored.\n   */\n  ignoreEntry(entry) {\n    this.ignored += 1;\n    this.state.call(this, { entry, action: \"ignore\" });\n  }\n\n  /**\n   * Add unspecific ignored entries.\n   *\n   * @param {number} ignored\n   */\n  addIgnored(ignored) {\n    this.ignored += ignored;\n    this.state.call(this, { action: \"info\", ignored, total: this.total, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of items in this category.\n   *\n   * @param {number} total\n   */\n  setTotal(total) {\n    this.total = total;\n    this.state.call(this, { action: \"info\", total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  /**\n   * Record total number of invalid items in this category.\n   *\n   * @param {number} total\n   */\n  setInvalid(total) {\n    this.invalid = total;\n    this.state.call(this, { action: \"info\", total: this.total, ignored: this.ignored, invalid: this.invalid });\n  }\n\n  /**\n   * Signal the start of processing this category.\n   */\n  start() {\n    this.completed = false;\n    this.state.call(this, { action: \"start\" });\n  }\n\n  /**\n   * Signal the finishing of processing this category.\n   */\n  finish() {\n    this.completed = true;\n    this.state.call(this, { action: \"finish\" });\n  }\n\n  /**\n   * Return name of currently processed entry.\n   *\n   * @type {string|null} - Name of the entry, or null if no entry is being processed.\n   */\n  get currentName() {\n    const current = this.current;\n    if (!current) return null;\n\n    if (current instanceof foundry.abstract.Document) return current.name;\n    if (current instanceof CompendiumCollection) return current.metadata.label;\n    return null;\n  }\n\n  getInvalidEntries() {\n    let collection;\n    switch (this.id) {\n      case \"actors\":\n      case \"items\":\n      case \"scenes\":\n        collection = game[this.id];\n        break;\n      default:\n        return [];\n    }\n\n    const results = [];\n    for (const id of collection.invalidDocumentIds) {\n      results.push({ id, entry: collection.getInvalid(id) });\n    }\n\n    return results;\n  }\n\n  getErrorEntries() {\n    return this.errors;\n  }\n}\n","import { MigrationCategory } from \"./migration-category.mjs\";\n\n/**\n * State object for tracking migration progress.\n */\nexport class MigrationState {\n  /** @type {string} Display label */\n  label;\n\n  /**\n   * @type {Record<number, Function>}\n   */\n  callbacks = {};\n\n  /**\n   * @type {Record<string, MigrationCategory>}\n   */\n  categories = {};\n\n  completed = false;\n\n  /**\n   * @type {boolean} Compendium unlocking state.\n   */\n  unlock = false;\n\n  constructor(label) {\n    if (label) label = game.i18n.localize(label);\n    this.label = label;\n  }\n\n  /**\n   * @param {string} category\n   * @param {string} label\n   * @param {boolean} isNumber\n   * @returns {MigrationCategory}\n   */\n  createCategory(category, label, isNumber) {\n    const mc = new MigrationCategory(category, label, isNumber, this);\n    this.categories[category] = mc;\n    this.call(mc, { action: \"new\" });\n    return mc;\n  }\n\n  /**\n   * @param {MigrationCategory|MigrationState} category - Category or the overall state\n   * @param {object} info - Category or state specific data\n   */\n  call(category, info) {\n    for (const callback of Object.values(this.callbacks)) {\n      try {\n        callback(this, category, info);\n      } catch (err) {\n        console.error(err, callback);\n      }\n    }\n  }\n\n  start() {\n    this.completed = false;\n    this.call(this, { action: \"start\" });\n  }\n\n  finish() {\n    this.completed = true;\n    this.call(this, { action: \"finish\" });\n  }\n\n  get errors() {\n    return Object.values(this.categories).reduce((total, c) => total + c.errors.length, 0);\n  }\n\n  get invalid() {\n    return Object.values(this.categories).reduce((total, c) => total + c.invalid, 0);\n  }\n\n  get ignored() {\n    return Object.values(this.categories).reduce((total, c) => total + c.ignored, 0);\n  }\n}\n","export class MigrationIssuesDialog extends Dialog {\n  /**\n   * Present simple dialog with issues within a migration category.\n   *\n   * @param {MigrationCategory} category\n   */\n  static async open(category) {\n    const templateData = {\n      errors: category.getErrorEntries(),\n      invalid: category.getInvalidEntries(),\n    };\n\n    return this.prompt({\n      title: game.i18n.localize(\"PF1.Migration.Dialog.Issues\") + \" – \" + category.label,\n      content: await renderTemplate(\"systems/pf1/templates/apps/migration-issues.hbs\", templateData),\n      rejectClose: false,\n      options: {\n        classes: [...Dialog.defaultOptions.classes, \"pf1\", \"migration-issues\"],\n        jQuery: false,\n        width: 620,\n        height: \"auto\",\n      },\n    });\n  }\n\n  /**\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    // Copy ID/UUID to clipboard\n    jq.on(\"click\", \".issue .id a\", (ev) => {\n      const el = ev.target;\n      const { id, uuid } = el.dataset;\n      game.clipboard.copyPlainText(uuid || id);\n      const type = uuid ? \"UUID\" : \"ID\";\n      ui.notifications.info(game.i18n.format(\"DOCUMENT.IdCopiedClipboard\", { label: \"\", type, id: uuid || id }));\n    });\n  }\n}\n","import { MigrationState } from \"../../migration/migration-state.mjs\";\nimport { MigrationIssuesDialog } from \"./migration-issues-dialog.mjs\";\n\nexport class MigrationDialog extends Application {\n  /**\n   * Migration state object.\n   *\n   * @type {MigrationState}\n   */\n  state;\n\n  constructor(state, options) {\n    super(options);\n\n    this.state = state;\n\n    this.autoClose = options.autoClose ?? false;\n\n    state.callbacks[this.appId] = this._onMigration.bind(this);\n  }\n\n  get title() {\n    const label = game.i18n.localize(\"PF1.Migration.Dialog.Title\");\n    if (this.state.label) return `${label}: ${this.state.label}`;\n    return label;\n  }\n\n  get template() {\n    return \"systems/pf1/templates/apps/migration.hbs\";\n  }\n\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    return {\n      ...options,\n      classes: [...options.classes, \"pf1\", \"migration\"],\n      width: \"auto\",\n      height: \"auto\",\n      top: 200,\n      resizable: true,\n    };\n  }\n\n  getData() {\n    return {\n      state: this.state,\n    };\n  }\n\n  /**\n   * @override\n   * @param {JQuery<HTMLElement>} jq\n   */\n  activateListeners(jq) {\n    super.activateListeners(jq);\n\n    if (this.state.completed && this.autoClose) {\n      setTimeout(() => this.close(), 2_000);\n    }\n\n    const html = jq[0];\n\n    html.querySelectorAll(\".value.has-details\").forEach((el) => {\n      el.addEventListener(\"click\", this._onClickForDetails.bind(this));\n    });\n  }\n\n  _onClickForDetails(event) {\n    event.preventDefault();\n\n    const el = event.target.closest(\".category\");\n    const categoryId = el.dataset.category;\n    const category = this.state.categories[categoryId];\n\n    MigrationIssuesDialog.open(category);\n  }\n\n  /**\n   * @param {MigrationCategory|MigrationState} state\n   * @param {object} info\n   */\n  _onMigration(state, info) {\n    // Queue render if already rendering\n    if (this._state === Application.RENDER_STATES.RENDERING) this._queueRender = true;\n    else this.render();\n  }\n\n  /**\n   * @override\n   */\n  async _render(...args) {\n    const rv = await super._render(...args);\n\n    // Handle queued render\n    if (this._queueRender) {\n      this._queueRender = false;\n      this.render();\n    }\n\n    return rv;\n  }\n\n  /**\n   * @override\n   * @param  {...any} args\n   * @returns\n   */\n  async close(...args) {\n    delete this.state.callbacks[this.appId];\n    return super.close(...args);\n  }\n\n  /**\n   * Initialize migration dialog and migration state tracker if necessary.\n   *\n   * @param {MigrationState} [state] - Existing state tracker if any\n   * @param {string} [label] - Label associated with the tracker\n   * @param {object} [dialogOptions={}] - Dialog options\n   * @returns {MigrationDialog} - Active state tracker\n   */\n  static initialize(state, label, dialogOptions = {}) {\n    state ??= new MigrationState(label);\n    state.label ||= label;\n\n    const app = new this(state, { autoClose: dialogOptions.autoClose ?? false });\n    app.render(true, dialogOptions);\n    return app;\n  }\n}\n","import { ItemPF } from \"./documents/item/item-pf.mjs\";\nimport { ItemChange } from \"./components/change.mjs\";\n\nimport { MigrationDialog } from \"./applications/migration/migration-dialog.mjs\";\nimport { MigrationState } from \"./migration/migration-state.mjs\";\n\n/**\n * Moved compendium content.\n */\nexport const moved = {\n  // Trapfinding (v10)\n  \"Compendium.pf1.class-abilities.OhHKCLQXoMlYNodk\": \"Compendium.pf1.class-abilities.Item.pEODJDoTk7uhCZY7\",\n  // Trap Sense (v10)\n  \"Compendium.pf1.class-abilities.fb00TzBa32sSisGb\": \"Compendium.pf1.class-abilities.Item.BoEkMviJrW0PKmhj\",\n  // Danger Sense (v10)\n  \"Compendium.pf1.class-abilities.4bcGnKYf9beV0nfa\": \"Compendium.pf1.class-abilities.Item.sTlu3zgAEDdJnER5\",\n  // Fast Movement (v10)\n  \"Compendium.pf1.class-abilities.dvQdP8QfrDA9Lxzk\": \"Compendium.pf1.class-abilities.Item.9EX00obqhGHcrOdp\",\n};\n\nconst marker = () => ({ pf1: { action: \"migration\" } });\n\n/**\n * An indicator for whether the system is currently migrating the world.\n *\n * @type {boolean}\n */\n// As the `pf1` global does not use this ES module but a cloned copy, this value\n// only exists for the documentation. Always use `pf1.migrations.isMigrating` instead!\nexport let isMigrating = false; // eslint-disable-line prefer-const -- pf1.migrations.isMigrating is changed at runtime\n\n/**\n * Initialize {@link MigrationState} and {@link MigrationDialog}\n *\n * @param {MigrationState} [state] - State tracker\n * @param {string} [label] - Label\n * @param {object} [dialog=null] - If falsy, disable dialog. Otherwise options for the dialog.\n * @returns {MigrationState} - Original state or newly initialized one.\n */\nfunction initializeStateAndDialog(state, label, dialog = null) {\n  state ??= new MigrationState(label);\n  if (dialog) MigrationDialog.initialize(state, label, dialog);\n  return state;\n}\n\n/**\n * Perform a system migration for the entire World,\n * applying migrations for Actors, Items, Scenes, Tokens and Compendium packs\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param {boolean} [options.systemPacks=false] - Migrate system packs.\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog={}] - Progress dialog options. Set to falsy to disable the dialog.\n * @returns {Promise<void>} - A Promise which resolves once the migration is completed\n */\nexport async function migrateWorld({ unlock = false, systemPacks = false, state, dialog = {} } = {}) {\n  const isGM = game.user.isGM;\n\n  // Deny migration if migration is in progress and there's an active GM,\n  // otherwise assume it's an error and allow migration to start anew.\n  // Don't check for the setting to avoid migration state getting stuck, only trust the in-memory state\n  if (pf1.migrations.isMigrating && game.users.activeGM) {\n    return void ui.notifications.error(game.i18n.localize(\"PF1.Migration.InProgress\"));\n  }\n\n  if (isGM) await game.settings.set(\"pf1\", \"migrating\", true);\n\n  pf1.migrations.isMigrating = true;\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"world\" });\n\n  state = initializeStateAndDialog(state, \"PF1.Migration.Category.World\", dialog);\n  state.unlock = unlock;\n\n  state.start();\n\n  const startMessage = game.i18n.format(\"PF1.Migration.Start\", { version: game.system.version });\n  const smsgId = ui.notifications.info(startMessage, { permanent: true, console: false });\n  console.log(\"PF1 | Migration | Starting...\");\n\n  if (isGM) {\n    await _migrateWorldSettings();\n  }\n\n  // Migrate World Actors\n  await migrateActors({ state, noHooks: true });\n\n  // Migrate World Items\n  await migrateItems({ state, noHooks: true });\n\n  // Migrate Actor Override Tokens\n  await migrateScenes({ state, noHooks: true });\n\n  if (isGM) {\n    // Migrate Compendium Packs\n    const packs = game.packs.filter((p) => {\n      const source = p.metadata.packageType;\n      // Ignore modules, adventures, etc.\n      if (![\"world\", \"system\"].includes(source)) return false;\n      // Ignore system packs unless configured to include them\n      if (source === \"system\" && !systemPacks) return false;\n      // Ignore unsupported pack types\n      return [\"Actor\", \"Item\", \"Scene\"].includes(p.metadata.type);\n    });\n\n    await migrateCompendiums(packs, { unlock, state, noHooks: true });\n  }\n\n  // Remove start message\n  ui.notifications.remove(smsgId);\n\n  // Remove migration notification\n  ui.notifications.info(game.i18n.format(\"PF1.Migration.End\", { version: game.system.version }), { console: false });\n  console.log(\"PF1 | Migration | Completed!\");\n\n  if (isGM) {\n    // Set the migration as complete\n    await game.settings.set(\"pf1\", \"systemMigrationVersion\", game.system.version);\n\n    await game.settings.set(\"pf1\", \"migrating\", false);\n  }\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"world\" });\n}\n\n/**\n * Migrate actors directory.\n *\n * @param {object} [options={}]\n * @param {MigrationState} [options.state]\n * @param {object} [options.dialog=null]\n * @param options.noHooks\n * @returns {Promise<void>}\n */\nexport async function migrateActors({ state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"actors\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Actors\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"actors\", \"PF1.Migration.Category.Actors\", true);\n\n  console.log(\"PF1 | Migration | Actors directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.actors.size);\n  tracker.setInvalid(game.actors.invalidDocumentIds.size);\n\n  for (const actor of game.actors) {\n    if (!actor.isOwner) {\n      tracker.ignoreEntry(actor);\n      continue;\n    }\n\n    tracker.startEntry(actor);\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), undefined, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Actor: ${actor.name} | Applying updates`);\n        await actor.update(updateData, marker());\n      }\n    } catch (err) {\n      tracker.recordError(actor, err);\n      console.error(`PF1 | Migration | Actor: ${actor.name} | Error`, err);\n    }\n    tracker.finishEntry(actor);\n  }\n\n  console.log(\"PF1 | Migration | Actors directory complete!\");\n  tracker.finish();\n  if (localState) state.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"actors\" });\n}\n\n/**\n * Migrate items directory.\n *\n * @param {object} [options={}]\n * @param {MigrationState} [options.state]\n * @param {object} [options.dialog=null]\n * @param options.noHooks\n * @returns {Promise<void>}\n */\nexport async function migrateItems({ state, dialog = null, noHooks = false } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"items\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Items\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"items\", \"PF1.Migration.Category.Items\", true);\n\n  console.log(\"PF1 | Migration | Items directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.items.size);\n  tracker.setInvalid(game.items.invalidDocumentIds.size);\n\n  for (const item of game.items) {\n    if (!item.isOwner) {\n      tracker.ignoreEntry(item);\n      continue;\n    }\n\n    tracker.startEntry(item);\n\n    try {\n      const updateData = await migrateItemData(item.toObject());\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`PF1 | Migration | Item: ${item.name} | Applying updates`);\n        await item.update(updateData, marker());\n      }\n    } catch (err) {\n      tracker.recordError(item, err);\n      console.error(`PF1 | Migration | Item: ${item.name} | Error`, err);\n    }\n    tracker.finishEntry(item);\n  }\n\n  tracker.finish();\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Items directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"items\" });\n}\n\n/**\n * Migrate all scenes.\n *\n * @see {@link migrateScene}\n *\n * @param {object} [options={}]\n * @param {MigrationState} [options.state]\n * @param options.noHooks\n * @param {object} [options.dialog=null]\n *\n * @returns {Promise<void>}\n */\nexport async function migrateScenes({ state, noHooks = false, dialog = null } = {}) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"scenes\" });\n\n  // Locally generated state tracker\n  const localState = !state;\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Scenes\", dialog);\n\n  if (localState) state.start();\n\n  const tracker = state.createCategory(\"scenes\", \"PF1.Migration.Category.Scenes\", true);\n\n  console.log(\"PF1 | Migration | Scene directory starting...\");\n  tracker.start();\n\n  tracker.setTotal(game.scenes.size);\n  tracker.setInvalid(game.scenes.invalidDocumentIds.size);\n\n  for (const scene of game.scenes) {\n    tracker.startEntry(scene);\n    await migrateScene(scene, { state, tracker });\n    tracker.finishEntry(scene);\n  }\n\n  tracker.finish();\n\n  if (localState) state.finish();\n  console.log(\"PF1 | Migration | Scene directory complete!\");\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"scenes\" });\n}\n\n/**\n * Migrate compendiums.\n *\n * @see {@link migrateCompendium}\n *\n * @param {Array<string|WorldCollection>|null} [packIds=null] - Array of pack IDs or packs to migrate. If null, all packs will be migrated.\n * @param {object} [options={}] - Additional options to pass along.\n * @param {boolean} [options.unlock=false] - If false, locked compendiums are ignored.\n * @param options.noHooks\n * @param {MigrationState} [options.state] - Migration state tracker\n * @param {object} [options.dialog=null] - Display migration dialog. Falsy disables.\n * @returns {Promise<void>} - Promise that resolves once all migrations are complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendiums(\n  packIds = null,\n  { unlock = false, state, noHooks = false, dialog = null } = {}\n) {\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"packs\", packs: foundry.utils.deepClone(packIds) });\n\n  if (packIds === null) packIds = [...game.packs];\n\n  // Locally generated state tracker\n  const localState = !state;\n  if (dialog) state = initializeStateAndDialog(state, \"PF1.Migration.Category.Packs\", dialog);\n  if (state) state.unlock = unlock;\n\n  if (localState) state?.start();\n\n  const tracker = state?.createCategory(\"packs\", \"PF1.Migration.Category.Packs\", true);\n  tracker?.start();\n  tracker?.setTotal(packIds.length);\n\n  for (const pack of packIds) {\n    tracker?.startEntry(pack);\n\n    if (!unlock && pack.locked) tracker?.ignoreEntry(pack);\n\n    try {\n      await migrateCompendium(pack, { unlock, noHooks: true });\n    } catch (error) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error`, error);\n    }\n\n    tracker?.finishEntry(pack);\n  }\n\n  tracker?.finish();\n  if (localState) state?.finish();\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"packs\", packs: foundry.utils.deepClone(packIds) });\n}\n\n/**\n * Migrate system compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {MigrationState} [options.state]\n * @param {object} [options.dialog={}] - Migration dialog options. Falsy disables the dialog.\n * @returns {Promise<void>}\n */\nexport async function migrateSystem({ unlock = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"system\" });\n\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.System\", dialog);\n  state.unlock = unlock;\n\n  state.start();\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"system\");\n  await migrateCompendiums(packs, { unlock, state, dialog: false, noHooks: true });\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"system\" });\n}\n\n/**\n * Migrate module compendia.\n *\n * Convenience wrapper for migrateCompendiums.\n *\n * @see {@link migrateCompendiums}\n *\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock] - Unlock compendiums\n * @param {object} [options.dialog={}] - Dialog options. Falsy disables the dialog.\n * @param {MigrationState} [options.state]\n * @returns {Promise<void>}\n */\nexport async function migrateModules({ unlock = true, state, dialog = {} } = {}) {\n  Hooks.callAll(\"pf1MigrationStarted\", { scope: \"modules\" });\n\n  state ??= initializeStateAndDialog(state, \"PF1.Migration.Category.Modules\", dialog);\n  state.unlock = unlock;\n\n  state.start();\n\n  const packs = game.packs.filter((p) => p.metadata.packageType === \"module\");\n  await migrateCompendiums(packs, { unlock, state, noHooks: true });\n\n  state.finish();\n\n  Hooks.callAll(\"pf1MigrationFinished\", { scope: \"modules\" });\n}\n\n/* -------------------------------------------- */\n\n/**\n * Clear messages generated by pack.migrate()\n *\n * @internal\n * @param {string} marker - string to look for\n */\nfunction clearCoreMessages(marker) {\n  const testActiveMsg = (el, marker) => {\n    if (el instanceof jQuery) el = el[0];\n    return el.textContent.includes(marker);\n  };\n  // Queue has special objects\n  ui.notifications.queue = ui.notifications.queue.filter((msg) => !msg.message.includes(marker));\n  // Active has jQuery elements\n  ui.notifications.active = ui.notifications.active.filter((msg) => !testActiveMsg(msg));\n  ui.notifications.fetch();\n}\n\n/**\n * Apply migration rules to all Documents within a single Compendium pack\n *\n * @param {CompendiumCollection|string} pack - Compendium (or its ID) to migrate\n * @param {object} [options={}] - Additional options\n * @param {boolean} [options.unlock=false] - If false, locked compendium will be ignored.\n * @param options.noHooks\n * @returns {Promise<void>} - Promise that resolves once migration is complete.\n * @throws {Error} - If defined pack is not found.\n */\nexport async function migrateCompendium(pack, { unlock = false, noHooks = false } = {}) {\n  if (typeof pack === \"string\") {\n    pack = game.packs.get(pack);\n    if (!pack) throw new Error(`Compendium \"${pack}\" not found.`);\n  }\n\n  if (pack.locked && !unlock) return;\n\n  const docType = pack.metadata.type;\n  if (![\"Actor\", \"Item\", \"Scene\"].includes(docType)) return;\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationStarted\", { scope: \"pack\", collection: pack });\n\n  const wasLocked = pack.locked;\n  if (wasLocked) await pack.configure({ locked: false });\n\n  // Begin by requesting server-side data model migration and get the migrated content\n  await pack.migrate();\n  clearCoreMessages(`Compendium pack ${pack.collection}`);\n\n  // Iterate over compendium entries - applying fine-tuned migration functions\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Starting...`);\n\n  /** @type {Actor[]|Scene[]|Item[]} */\n  console.debug(`PF1 | Migration | Pack: ${pack.collection} | Requesting documents from server`);\n  const documents = await pack.getDocuments();\n\n  const updates = [];\n\n  console.debug(\n    `PF1 | Migration | Pack: ${pack.collection} | Building update data for ${documents.length} document(s)`\n  );\n  // Collect updates\n  for (const document of documents) {\n    try {\n      let updateData;\n      switch (docType) {\n        case \"Item\":\n          updateData = await migrateItemData(document.toObject(), undefined, { item: document });\n          break;\n        case \"Actor\":\n          updateData = await migrateActorData(document.toObject(), undefined, { actor: document });\n          break;\n        case \"Scene\": {\n          await migrateScene(document);\n          break;\n        }\n      }\n\n      if (updateData && !foundry.utils.isEmpty(updateData)) {\n        updateData._id = document.id;\n        updates.push(updateData);\n      }\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error!`, err);\n    }\n  }\n\n  if (updates.length) {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | Applying update(s) to ${updates.length} document(s)`);\n    // Commit updates\n    try {\n      await getDocumentClass(docType).updateDocuments(updates, { pack: pack.collection, ...marker() });\n    } catch (err) {\n      console.error(`PF1 | Migration | Pack: ${pack.collection} | Error:`, err);\n    }\n  } else {\n    console.debug(`PF1 | Migration | Pack: ${pack.collection} | No updates needed`);\n  }\n\n  if (wasLocked) await pack.configure({ locked: true });\n\n  if (!noHooks) Hooks.callAll(\"pf1MigrationFinished\", { scope: \"pack\", collection: pack });\n\n  console.log(`PF1 | Migration | Pack: ${pack.collection} | Migration complete!`);\n}\n\n/**\n * Migrates world settings.\n */\nasync function _migrateWorldSettings() {\n  const tooltipWorldConfig = game.settings.get(\"pf1\", \"tooltipWorldConfig\");\n  if (tooltipWorldConfig.hideActorName !== undefined) {\n    // 1 (All) for true, -2 (None) for false\n    tooltipWorldConfig.hideActorNameByDisposition == tooltipWorldConfig.hideActorName ? 1 : -2;\n    game.settings.set(\"pf1\", \"tooltipWorldConfig\", tooltipWorldConfig);\n  }\n}\n\n/* -------------------------------------------- */\n/*  Document Type Migration Helpers               */\n/* -------------------------------------------- */\n\n/**\n * Migrate data in tokens that is no longer used.\n *\n * @param {object} tokenData Token data\n * @param {object} [options] - Additional options\n * @param {TokenDocument} [options.token] - Token document\n */\nexport async function migrateTokenData(tokenData, { token }) {\n  const flags = tokenData.flags?.pf1 ?? {};\n\n  const updateData = {};\n\n  // Remove obsolete flags\n  if (flags.lowLightVision !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVision\"] = null;\n  }\n  if (flags.lowLightVisionMultiplier !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplier\"] = null;\n  }\n  if (flags.lowLightVisionMultiplierBright !== undefined) {\n    updateData[\"flags.pf1.-=lowLightVisionMultiplierBright\"] = null;\n  }\n\n  // Remove disabled but still in use flags\n  if (flags.disableLowLight === false) {\n    updateData[\"flags.pf1.-=disableLowLight\"] = null;\n  }\n  if (flags.staticSize === false) {\n    updateData[\"flags.pf1.-=staticSize\"] = null;\n  }\n  if (flags.customVisionRules === false) {\n    updateData[\"flags.pf1.-=customVisionRules\"] = null;\n  }\n\n  // Remove data from v9 vision handling\n  // Added with PF1 v9.4\n  if (!flags.customVisionRules) {\n    // Attempt to preserve vision range after migration\n    if (tokenData.sight.visionMode !== \"basic\") {\n      if (tokenData.sight.range !== 0) updateData[\"sight.range\"] = 0;\n      updateData[\"sight.visionMode\"] = \"basic\";\n    }\n    if (\"saturation\" in tokenData.sight) updateData[\"sight.-=saturation\"] = null;\n    if (\"brightness\" in tokenData.sight) updateData[\"sight.-=brightness\"] = null;\n    if (\"attenuation\" in tokenData.sight) updateData[\"sight.-=attenuation\"] = null;\n    if (\"contrast\" in tokenData.sight) updateData[\"sight.-=contrast\"] = null;\n    if (tokenData.detectionModes?.length) updateData[\"detectionModes\"] = [];\n  }\n\n  // Record migrated version\n  if (!foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return updateData;\n}\n\n/**\n * Migrate token.\n *\n * @param {TokenDocument} token - Token to migrate\n * @returns {Promise<TokenDocument|null>} - Promise to updated document,. or null if no update was done.\n */\nexport async function migrateToken(token) {\n  const tokenData = token.toObject();\n  const updateData = await migrateTokenData(tokenData, { token });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return token.update(foundry.utils.expandObject(updateData), marker());\n  }\n}\n\n/**\n * Migrate singular actor document.\n *\n * @param {Actor} actor - Actor to migrate.\n * @returns {Promise<Actor|null>}\n */\nexport async function migrateActor(actor) {\n  await migrateActiveEffectsToItems(actor);\n\n  const updateData = await migrateActorData(actor.toObject(), actor.token, { actor });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return actor.update(updateData, marker());\n  }\n\n  return null;\n}\n\n/**\n * Migrate active effects from actor to items that should own them instead.\n *\n * Added with PF1 v10\n *\n * @param {ActorPF} actor\n */\nexport async function migrateActiveEffectsToItems(actor) {\n  const p = [];\n  for (const buff of actor.itemTypes.buff) {\n    if (!buff.isActive) continue;\n    try {\n      const ae = buff.effect;\n      if (!ae) continue;\n      if (ae.parent === buff) continue; // Already migrated\n\n      const aeData = ae.toObject();\n      setProperty(aeData, \"flags.pf1.tracker\", true);\n      aeData.transfer = true;\n\n      const p0 = ActiveEffect.implementation.create(aeData, { parent: buff });\n      const p1 = ae.delete();\n      p.push(p0, p1);\n    } catch (err) {\n      console.error(\"PF1 | Migration | Failed to transition buff tracker to origin\", err);\n    }\n  }\n\n  await Promise.all(p);\n}\n\n/**\n * Migrate a single Actor document to incorporate latest data model changes\n * Return an Object of updateData to be applied\n *\n * @param {ActorData} actorData   The actor data to derive an update from\n * @param {TokenDocument} token\n * @param {object} [options] - Additional options\n * @param {Actor} [options.actor] - Associated actor document\n * @returns {object} - The updateData to apply\n */\nexport async function migrateActorData(actorData, token, { actor } = {}) {\n  // Ignore basic actor type\n  if (actorData.type === \"basic\") return {};\n  // Ignore module introduced types\n  if (!game.system.template.Actor.types.includes(actorData.type)) return {};\n\n  const updateData = {};\n\n  _migrateCharacterLevel(actorData, updateData);\n  _migrateActorEncumbrance(actorData, updateData);\n  _migrateActorNoteArrays(actorData, updateData);\n  _migrateActorSpeed(actorData, updateData);\n  _migrateActorSpellbookCL(actorData, updateData);\n  _migrateActorSpellbookSlots(actorData, updateData);\n  _migrateActorSpellbookPrep(actorData, updateData);\n  _migrateActorSpellbookKind(actorData, updateData, actor);\n  _migrateActorConcentration(actorData, updateData);\n  _migrateActorBaseStats(actorData, updateData);\n  _migrateUnusedActorCreatureType(actorData, updateData);\n  _migrateActorSpellbookDCFormula(actorData, updateData);\n  _migrateActorHPAbility(actorData, updateData);\n  _migrateActorCR(actorData, updateData);\n  _migrateAttackAbility(actorData, updateData);\n  _migrateActorDefenseAbility(actorData, updateData);\n  _migrateActorSpellbookUsage(actorData, updateData);\n  _migrateActorNullValues(actorData, updateData);\n  _migrateActorSpellbookDomainSlots(actorData, updateData);\n  _migrateActorStatures(actorData, updateData);\n  _migrateActorProficiencies(actorData, updateData, { actor });\n  _migrateActorInitAbility(actorData, updateData);\n  _migrateActorChangeRevamp(actorData, updateData);\n  _migrateActorCMBRevamp(actorData, updateData);\n  _migrateCarryBonus(actorData, updateData);\n  _migrateBuggedValues(actorData, updateData);\n  _migrateSpellbookUsage(actorData, updateData);\n  _migrateActorHP(actorData, updateData);\n  _migrateActorSenses(actorData, updateData, token);\n  _migrateActorInvaliddSkills(actorData, updateData);\n  _migrateActorSkillRanks(actorData, updateData);\n  _migrateActorSkillJournals(actorData, updateData);\n  _migrateActorSubskillData(actorData, updateData);\n  _migrateActorUnusedData(actorData, updateData);\n  _migrateActorDRandER(actorData, updateData);\n  _migrateActorTraitsCustomToArray(actorData, updateData);\n  _migrateActorFlags(actorData, updateData);\n\n  // Migrate Owned Items\n  const items = [];\n  for (const item of actorData.items ?? []) {\n    // Migrate the Owned Item\n    const itemData = item instanceof Item ? item.toObject() : item;\n    const itemDoc = actor?.items.get(itemData._id);\n    try {\n      const itemUpdate = await migrateItemData(itemData, actor, { item: itemDoc });\n\n      // Update the Owned Item\n      if (!foundry.utils.isEmpty(itemUpdate)) {\n        itemUpdate._id = itemData._id;\n        items.push(foundry.utils.expandObject(itemUpdate));\n      }\n    } catch (err) {\n      console.error(\n        `Error migrating Item \"${item.name}\" [${itemDoc?.uuid ?? itemData._id}] on actor \"${actorData.name}\" [${\n          actor?.uuid ?? actorData._id\n        }]`\n      );\n      throw new Error(`Item \"${item.name}\" [${itemData._id}] failed migration: ${err.message}`, { cause: err });\n    }\n  }\n  if (items.length > 0) updateData.items = items;\n\n  // Active Effects\n  await _migrateActorActiveEffects(actorData, updateData, actor);\n\n  // Record migrated version\n  if (!foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  return foundry.utils.expandObject(updateData);\n}\n\n/* -------------------------------------------- */\n\n/**\n *  Migrate singular item document.\n *\n * @param {Item} item - Item document to update.\n * @returns {Promise<Item|null>} - Promise to updated item document, or null if no update was performed.\n */\nexport async function migrateItem(item) {\n  const updateData = await migrateItemData(item.toObject(), item.actor, { item });\n  if (!foundry.utils.isEmpty(updateData)) {\n    return item.update(updateData, marker());\n  }\n  return null;\n}\n\n/**\n * Migrate a single Item document to incorporate latest data model changes\n *\n * @param {object} itemData    The item data to derive an update from\n * @param {Actor} actor - Parent actor document\n * @param {object} [options] - Additional options\n * @param {number} [options._depth=0] - Internal only. Recursion depth tracking.\n * @param {Item} [options.item] - Item document\n * @returns {object} - The updateData to apply\n */\nexport async function migrateItemData(itemData, actor = null, { item, _depth = 0 } = {}) {\n  const updateData = {};\n\n  // Migrate data to system\n  if (itemData.system == null && itemData.data != null) {\n    itemData = foundry.utils.deepClone(itemData);\n    itemData.system = itemData.data;\n    delete itemData.data;\n  }\n\n  // Ignore module introduced types\n  if (!game.system.template.Item.types.includes(itemData.type)) return {};\n\n  _migrateItemArrayTypes(itemData, updateData);\n  _migrateFlagsArrayToObject(itemData, updateData);\n  _migrateWeaponImprovised(itemData, updateData);\n  _migrateItemSpellDescription(itemData, updateData);\n  _migrateClassDynamics(itemData, updateData);\n  _migrateClassType(itemData, updateData);\n  _migrateClassCasting(itemData, updateData);\n  _migrateSpellDivineFocus(itemData, updateData);\n  _migrateWeaponCategories(itemData, updateData);\n  _migrateArmorCategories(itemData, updateData);\n  _migrateArmorMaxDex(itemData, updateData);\n  _migrateItemSize(itemData, updateData);\n  _migrateItemFeatAbilityTypes(itemData, updateData);\n  _migrateClassLevels(itemData, updateData);\n  _migrateSavingThrowTypes(itemData, updateData);\n  _migrateCR(itemData, updateData);\n  _migrateItemChanges(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemContextNotes(itemData, updateData);\n  _migrateEquipmentSize(itemData, updateData);\n  _migrateSpellCosts(itemData, updateData);\n  _migrateSpellPreparation(itemData, updateData, { item });\n  _migrateLootEquip(itemData, updateData);\n  _migrateItemLinks(itemData, updateData, { item, actor });\n  _migrateItemProficiencies(itemData, updateData);\n  _migrateItemNotes(itemData, updateData);\n  _migrateScriptCalls(itemData, updateData);\n  _migrateItemActions(itemData, updateData, actor);\n  _migrateItemChargeCost(itemData, updateData);\n  _migrateItemLimitedUses(itemData, updateData);\n  _migrateItemWeight(itemData, updateData);\n  _migrateItemHealth(itemData, updateData);\n  _migrateContainerReduction(itemData, updateData);\n  _migrateContainerPrice(itemData, updateData);\n  _migrateItemType(itemData, updateData);\n  _migrateItemLearnedAt(itemData, updateData);\n  _migrateItemTuples(itemData, updateData);\n  _migrateEquipmentCategories(itemData, updateData);\n  _migrateSpellDescriptors(itemData, updateData);\n  _migrateItemTraitsCustomToArray(itemData, updateData);\n  _migrateItemChangeFlags(itemData, updateData);\n  _migrateItemMaterials(itemData, updateData);\n  _migrateItemUnusedData(itemData, updateData);\n\n  // Migrate action data\n  const alreadyHasActions = itemData.system.actions instanceof Array && itemData.system.actions.length > 0;\n  const itemActionData = alreadyHasActions ? itemData.system.actions : updateData[\"system.actions\"];\n  if (itemActionData instanceof Array) {\n    const newActionData = itemActionData.map((action) => migrateItemActionData(action, updateData, { itemData, item }));\n    // Update only if something changed. Bi-directional testing for detecting deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(itemActionData, newActionData)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newActionData, itemActionData))\n    ) {\n      updateData[\"system.actions\"] = newActionData;\n    }\n  }\n\n  // Migrate container .inventoryItems array to .items map\n  // Introduced with PF1 v10\n  if (itemData.system?.inventoryItems instanceof Array) {\n    updateData[\"system.items\"] = {};\n    for (const sitem of itemData.system.inventoryItems) {\n      sitem._id ||= foundry.utils.randomID(16);\n\n      // Deal with corrupt items or v9 or older items\n      sitem.system ??= {};\n      try {\n        if (\"data\" in sitem) {\n          sitem.system = foundry.utils.mergeObject(sitem.data, sitem.system, { inplace: false });\n          delete sitem.data;\n        }\n\n        const subItem = new Item.implementation(sitem);\n\n        const itemUpdateData = await migrateItemData(subItem.toObject(), actor, { _depth: _depth + 1 });\n        subItem.updateSource(itemUpdateData);\n\n        updateData[\"system.items\"][sitem._id] = subItem.toObject();\n      } catch (err) {\n        console.error(\"Failed to migrate container content:\", { item: sitem, parent: item, actor });\n      }\n    }\n\n    updateData[\"system.-=inventoryItems\"] = null;\n  }\n\n  // Migrate container items\n  const migrateContainerItems = async (items) => {\n    if (!items) return;\n    for (const [itemId, itemData] of Object.entries(items)) {\n      try {\n        // Basic validation\n        const subItem = new Item.implementation(itemData);\n\n        // Migrate\n        const subUpdate = await migrateItemData(subItem.toObject(), actor, { item: subItem, _depth: _depth + 1 });\n\n        if (!foundry.utils.isEmpty(subUpdate)) {\n          const diff = subItem.updateSource(subUpdate);\n          updateData[\"system.items\"] ??= {};\n          updateData[\"system.items\"][itemId] = diff;\n        }\n      } catch (err) {\n        console.error(\"PF1 | Migration | Error\", err, item);\n      }\n    }\n  };\n\n  await migrateContainerItems(itemData.system.items);\n\n  // Record migrated version\n  if (!foundry.utils.isEmpty(updateData)) {\n    updateData[\"flags.pf1.migration\"] = game.system.version;\n  }\n\n  // Return the migrated update data\n  return updateData;\n}\n\n// Migrate empty action type to \"other\"\n// Added with PF1 v10\nconst _migrateActionType = (action, itemData) => {\n  action.actionType ||= \"other\";\n};\n\n// Added with PF1 v10\nconst _migrateActionLimitedUses = (action, itemData) => {\n  // Migrate unlimited to empty selection, as the two are identical in meaning\n  if (action.uses?.self?.per === \"unlimited\") {\n    delete action.uses.self.per;\n  }\n\n  // Only physical items can be single use\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (action.uses?.self?.per === \"single\") {\n      action.uses.self.per = \"charges\";\n      action.uses.self.maxFormula = \"1\";\n    }\n  }\n};\n\n/**\n * Older actors incorrectly has .range.value as number instead of string\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionRange = (action, itemData) => {\n  const range = action.range?.value;\n  if (range === null || range === \"\") {\n    delete action.range.value;\n  } else if (range !== undefined && typeof range !== \"string\") {\n    action.range.value = String(range);\n  }\n};\n\n/**\n * Migrates a single action within an item.\n *\n * @param {object} action - The action's data, which also serves as the update data to pass on.\n * @param {object} updateData - Item update data\n * @param {object} [options] - Additional options\n * @param {Item} [options.item=null] - Parent item document this action is in.\n * @param {object} options.itemData - Parent item data\n * @returns {object} The resulting action data.\n */\nexport const migrateItemActionData = function (action, updateData, { itemData, item = null } = {}) {\n  action = foundry.utils.mergeObject(pf1.components.ItemAction.defaultData, action);\n\n  _migrateActionType(action, itemData);\n  _migrateActionLimitedUses(action, itemData);\n  _migrateActionRange(action, itemData);\n  _migrateActionDamageParts(action, itemData);\n  _migrateUnchainedActionEconomy(action, itemData);\n  _migrateActionDamageType(action, itemData);\n  _migrateActionConditionals(action, itemData);\n  _migrateActionEnhOverride(action, itemData);\n  _migrateActionPrimaryAttack(action, itemData);\n  _migrateActionChargeUsage(action, itemData);\n  _migrateActionExtraAttacks(action, itemData);\n  _migrateActionAmmunitionUsage(action, itemData, updateData);\n  _migrateActionHarmlessSpell(action, itemData);\n  _migrateActionSpellArea(action, itemData);\n  _migrateActionTemplate(action, itemData);\n  _migrateActionDuration(action, itemData);\n  _migrateActionMaterials(action, itemData);\n  _migrateActionObsoleteTypes(action, itemData);\n  _migrateActionUnusedData(action, itemData);\n\n  // Return the migrated update data\n  return action;\n};\n\n/* -------------------------------------------- */\n\n/**\n * Migrate singular scene document.\n *\n * @param {Scene} scene - Scene document to update.\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @returns {Promise<void>}\n */\nexport async function migrateScene(scene, { state, tracker } = {}) {\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Starting...`);\n  try {\n    await migrateSceneTokens(scene, { state, tracker });\n    await migrateSceneActors(scene, { state, tracker });\n\n    // Mark last migrated version\n    if (game.user.isGM) await scene.setFlag(\"pf1\", \"migration\", game.system.version);\n  } catch (err) {\n    tracker?.recordError(scene, err);\n    console.error(`PF1 | Migration | Scene: ${scene.name} | Error`, err);\n  }\n  console.log(`PF1 | Migration | Scene: ${scene.name} | Complete!`);\n}\n\n/**\n * Migrate a single Scene data object\n *\n * @deprecated\n */\nexport async function migrateSceneData() {\n  foundry.utils.logCompatibilityWarning(\n    \"pf1.migrations.migrateSceneData() is obsolete, please use pf1.migrations.migrateScene() instead\",\n    {\n      since: \"PF1 v10\",\n      until: \"PF1 v11\",\n    }\n  );\n  return {};\n}\n\n/**\n * Migrate tokens in a single scene.\n *\n * @param {Scene} scene - The Scene to Update\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n */\nexport async function migrateSceneTokens(scene, { state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (!token.isOwner) continue;\n\n    try {\n      await migrateToken(token);\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/**\n * Migrate unlinked actors on a single scene.\n *\n * @param {Scene} scene - Scene to migrate actors in.\n * @param {object} [options] - Additional options\n * @param {MigrationState} [options.state=null]\n * @param {MigrationCategory} [options.tracker=null]\n * @returns {Promise<void>}\n */\nexport async function migrateSceneActors(scene, { state = null, tracker = null } = {}) {\n  for (const token of scene.tokens) {\n    if (token.isLinked) continue;\n    const actor = token.actor;\n    if (!actor?.isOwner) continue;\n\n    try {\n      const updateData = await migrateActorData(actor.toObject(), token, { actor });\n      if (!foundry.utils.isEmpty(updateData)) {\n        const items = updateData.items;\n        delete updateData.items;\n        const effects = updateData.effects;\n        delete updateData.effects;\n        if (!foundry.utils.isEmpty(updateData)) await actor.update(updateData, marker());\n        if (items?.length) await actor.updateEmbeddedDocuments(\"Item\", items, marker());\n        if (effects?.length) await actor.updateEmbeddedDocuments(\"ActiveEffect\", effects, marker());\n      }\n    } catch (err) {\n      tracker?.recordError(token, err);\n      console.error(`PF1 | Migration | Scene: ${scene.name} | Token: ${token.id} | Error`, token, err);\n    }\n  }\n}\n\n/* -------------------------------------------- */\n\nconst _migrateCharacterLevel = function (ent, updateData) {\n  const arr = [\"details.level.value\", \"details.level.min\", \"details.level.max\", \"details.mythicTier\"];\n\n  for (const k of arr) {\n    const value = foundry.utils.getProperty(ent.system, k);\n    if (value == null) {\n      updateData[\"system.\" + k] = 0;\n    }\n  }\n};\n\nconst _migrateActorEncumbrance = function (ent, updateData) {\n  const arr = {\n    \"system.attributes.encumbrance.level\": \"attributes.encumbrance.-=level\",\n    \"system.attributes.encumbrance.levels.light\": \"attributes.encumbrance.levels.-=light\",\n    \"system.attributes.encumbrance.levels.medium\": \"attributes.encumbrance.levels.-=medium\",\n    \"system.attributes.encumbrance.levels.heavy\": \"attributes.encumbrance.levels.-=heavy\",\n    \"system.attributes.encumbrance.levels.carry\": \"attributes.encumbrance.levels.-=carry\",\n    \"system.attributes.encumbrance.levels.drag\": \"attributes.encumbrance.levels.-=drag\",\n    \"system.attributes.encumbrance.carriedWeight\": \"attributes.encumbrance.-=carriedWeight\",\n  };\n  for (const [key, updateKey] of Object.entries(arr)) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (value !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  }\n};\n\n/**\n * Convert array based flags into object.\n *\n * @param ent\n * @param updateData\n */\nconst _migrateFlagsArrayToObject = function (ent, updateData) {\n  const flags = ent.system.flags;\n  if (!flags) return;\n  const bflags = flags.boolean,\n    dflags = flags.dictionary;\n\n  if (Array.isArray(bflags)) {\n    // Compatibility with old data: Convert old array into actual dictionary.\n    updateData[\"system.flags.boolean\"] = bflags.reduce((flags, flag) => {\n      flags[flag] = true;\n      return flags;\n    }, {});\n  }\n\n  if (Array.isArray(dflags)) {\n    updateData[\"system.flags.dictionary\"] = dflags.reduce((flags, [key, value]) => {\n      flags[key] = value;\n      return flags;\n    }, {});\n  }\n};\n\nconst _migrateActorNoteArrays = function (ent, updateData) {\n  const list = [\"system.attributes.acNotes\", \"system.attributes.cmdNotes\", \"system.attributes.srNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && value instanceof Array) {\n      updateData[k] = value.join(\"\\n\");\n    }\n  }\n};\n\nconst _migrateActorSpeed = function (ent, updateData) {\n  const arr = [\n    \"attributes.speed.land\",\n    \"attributes.speed.climb\",\n    \"attributes.speed.swim\",\n    \"attributes.speed.fly\",\n    \"attributes.speed.burrow\",\n  ];\n  for (const k of arr) {\n    let value = foundry.utils.getProperty(ent.system, k);\n    if (typeof value === \"string\") value = parseInt(value);\n    if (typeof value === \"number\") {\n      updateData[`system.${k}.base`] = value;\n    } else if (value === null) {\n      updateData[`system.${k}.base`] = 0;\n    } else if (value?.total !== undefined) {\n      // Delete derived data\n      updateData[`system.${k}.-=total`] = null;\n    }\n\n    // Add maneuverability\n    if (k === \"attributes.speed.fly\" && foundry.utils.getProperty(ent.system, `${k}.maneuverability`) === undefined) {\n      updateData[`system.${k}.maneuverability`] = \"average\";\n    }\n  }\n};\n\nconst _migrateActorSpellbookSlots = function (ent, updateData) {\n  for (const spellbookSlot of Object.keys(\n    foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (\n      foundry.utils.getProperty(ent.system, `attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`) == null\n    ) {\n      updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.autoSpellLevels`] = true;\n    }\n\n    for (let a = 0; a < 10; a++) {\n      const baseKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.base`;\n      const maxKey = `system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.max`;\n      const base = foundry.utils.getProperty(ent, baseKey);\n      const max = foundry.utils.getProperty(ent, maxKey);\n\n      if (base === undefined) {\n        if (typeof max === \"number\" && max > 0) {\n          updateData[baseKey] = max.toString();\n        }\n      } else {\n        const newBase = parseInt(base);\n        if (newBase > 0) {\n          if (newBase !== base) updateData[baseKey] = newBase;\n        } else {\n          // Remove pointless default value not present in new actors either\n          updateData[`system.attributes.spells.spellbooks.${spellbookSlot}.spells.spell${a}.-=base`] = null;\n        }\n      }\n    }\n  }\n};\n\n// Remove inconsistently used .spontaneous permanently recorded boolean\n// Added with PF1 v10\nfunction _migrateActorSpellbookPrep(actorData, updateData) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    const wasSpontaneous = book.spontaneous;\n    if (wasSpontaneous === undefined) continue;\n\n    const usesAuto = book.autoSpellLevelCalculation ?? false;\n    const usesSpellpoints = book.spellPoints.useSystem === true;\n    if (!usesAuto && !usesSpellpoints) {\n      // Set prep type to match old spontaneous toggle\n      updateData[`system.attributes.spells.spellbooks.${bookId}.spellPreparationMode`] = wasSpontaneous\n        ? \"spontaneous\"\n        : \"prepared\";\n\n      // Set progression type to high to match old behaviour\n      updateData[`system.attributes.spells.spellbooks.${bookId}.casterType`] = \"high\";\n    }\n\n    updateData[`system.attributes.spells.spellbooks.${bookId}.-=spontaneous`] = null;\n  }\n}\n\n/**\n * Migrate spellbook kind (arcane, divine, psychic, ...)\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} actor - Actor document\n */\nfunction _migrateActorSpellbookKind(actorData, updateData, actor) {\n  for (const [bookId, book] of Object.entries(\n    foundry.utils.getProperty(actorData.system, \"attributes.spells.spellbooks\") || {}\n  )) {\n    if (book.kind === undefined && book.inUse) {\n      // Attempt to get data from class\n      const castingClass =\n        !!book.class && book.class !== \"_hd\" ? actor.itemTypes.class.find((i) => i.system.tag === book.class) : null;\n      let kind = castingClass?.system.casting?.spells;\n\n      if (!kind) {\n        // Attempt to determine kind without access to source class\n        kind = \"arcane\"; // Default to arcane if all else fails\n        if (book.arcaneSpellFailure) kind = \"arcane\";\n        else if (book.psychic) kind = \"psychic\";\n        else if (book.spellPreparationMode === \"prepared\" && book.ability === \"int\") kind = \"alchemy\";\n        else if (book.class !== \"_hd\") kind = \"divine\";\n      }\n\n      updateData[`system.attributes.spells.spellbooks.${bookId}.kind`] = kind;\n    }\n  }\n}\n\nconst _migrateActorBaseStats = function (ent, updateData) {\n  const keys = [\n    \"system.attributes.hp.base\",\n    \"system.attributes.hd.base\",\n    \"system.attributes.savingThrows.fort.value\",\n    \"system.attributes.savingThrows.ref.value\",\n    \"system.attributes.savingThrows.will.value\",\n  ];\n  for (const k of keys) {\n    if (\n      k === \"system.attributes.hp.base\" &&\n      !(foundry.utils.getProperty(ent, \"items\") || []).filter((o) => o.type === \"class\").length\n    )\n      continue;\n    if (foundry.utils.getProperty(ent, k) !== undefined) {\n      const kList = k.split(\".\");\n      kList[kList.length - 1] = `-=${kList[kList.length - 1]}`;\n      updateData[kList.join(\".\")] = null;\n    }\n  }\n};\n\nconst _migrateUnusedActorCreatureType = function (ent, updateData) {\n  const type = foundry.utils.getProperty(ent.system, \"attributes.creatureType\");\n  if (type != undefined) updateData[\"system.attributes.-=creatureType\"] = null;\n};\n\nconst _migrateActorSpellbookDCFormula = function (ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.baseDCFormula`;\n    const curFormula = foundry.utils.getProperty(ent, key);\n    if (!curFormula) updateData[key] = \"10 + @sl + @ablMod\";\n  }\n};\n\nconst _migrateActorSpellbookName = function (ent, updateData) {\n  const spellbooks = Object.entries(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const [bookId, book] of spellbooks) {\n    if (book.altName !== undefined) {\n      const key = `system.attributes.spells.spellbooks.${bookId}`;\n      updateData[`${key}.-=altName`] = null;\n      if (book.altName.length) updateData[`${key}.name`] = book.altName;\n    }\n  }\n};\n\nconst _migrateActorSpellbookCL = function (ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n\n  for (const k of spellbooks) {\n    const key = `system.attributes.spells.spellbooks.${k}.cl`;\n    const curBase = parseInt(foundry.utils.getProperty(ent, key + \".base\"));\n    const curFormula = foundry.utils.getProperty(ent, key + \".formula\");\n    if (curBase > 0) {\n      if (curFormula.length > 0) updateData[`${key}.formula`] = curFormula + \" + \" + curBase;\n      else updateData[`${key}.formula`] = curFormula + curBase;\n      updateData[`${key}.base`] = 0;\n    }\n  }\n};\n\nconst _migrateActorConcentration = function (ent, updateData) {\n  const spellbooks = Object.keys(foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {});\n  for (const k of spellbooks) {\n    // Delete unused .concentration from old actors\n    const key = `system.attributes.spells.spellbooks.${k}`;\n    const oldValue = foundry.utils.getProperty(ent, `${key}.concentration`);\n    const isString = typeof oldValue === \"string\";\n    if (Number.isFinite(oldValue) || isString) updateData[`${key}.-=concentration`] = null;\n    if (isString) {\n      // Assume erroneous bonus formula location and combine it with existing bonus formula.\n      const formulaKey = `${key}.concentrationFormula`;\n      const formula = [oldValue];\n      formula.push(foundry.utils.getProperty(ent, formulaKey) || \"\");\n      updateData[formulaKey] = formula.filter((f) => f !== 0 && f?.toString().trim().length).join(\" + \");\n    }\n  }\n};\n\nconst _migrateActorHPAbility = function (ent, updateData) {\n  // Set HP ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.hpAbility\") === undefined) {\n    updateData[\"system.attributes.hpAbility\"] = \"con\";\n  }\n\n  // Set Fortitude save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.fort.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.fort.ability\"] = \"con\";\n  }\n\n  // Set Reflex save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.ref.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.ref.ability\"] = \"dex\";\n  }\n\n  // Set Will save ability\n  if (foundry.utils.getProperty(ent.system, \"attributes.savingThrows.will.ability\") === undefined) {\n    updateData[\"system.attributes.savingThrows.will.ability\"] = \"wis\";\n  }\n};\n\nconst _migrateItemArrayTypes = function (ent, updateData) {\n  const conditionals = ent.system.conditionals;\n  if (conditionals != null && !(conditionals instanceof Array)) {\n    updateData[\"system.conditionals\"] = [];\n  }\n\n  const contextNotes = ent.system.contextNotes;\n  if (contextNotes != null && !(contextNotes instanceof Array)) {\n    if (contextNotes instanceof Object) updateData[\"system.contextNotes\"] = Object.values(contextNotes);\n    else updateData[\"system.contextNotes\"] = [];\n  }\n};\n\nconst _migrateWeaponImprovised = function (ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  const value = foundry.utils.getProperty(ent.system, \"weaponType\");\n  if (value === \"improv\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.properties.imp\"] = true;\n  }\n};\n\n// Migrates the weird .shortDescription back to .description.value\n// Added with PF1 v10\nconst _migrateItemSpellDescription = function (itemData, updateData) {\n  if (itemData.type !== \"spell\") return;\n\n  if (itemData.system.shortDescription) {\n    updateData[\"system.-=shortDescription\"] = null;\n\n    // If description.value exists, it's the older oversized pre-rendered version that is unwanted\n    updateData[\"system.description.value\"] = itemData.system.shortDescription;\n  }\n};\n\nconst _migrateSpellDivineFocus = function (item, updateData) {\n  if (item.type !== \"spell\") return;\n\n  const df = foundry.utils.getProperty(item.system, \"components.divineFocus\");\n  if (typeof df === \"boolean\") updateData[\"system.components.divineFocus\"] = Number(df);\n};\n\nconst _migrateClassDynamics = function (ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  const bab = ent.system.bab;\n  if (typeof bab === \"number\") updateData[\"system.bab\"] = \"low\";\n\n  const stKeys = [\"system.savingThrows.fort.value\", \"system.savingThrows.ref.value\", \"system.savingThrows.will.value\"];\n  for (const key of stKeys) {\n    const value = foundry.utils.getProperty(ent, key);\n    if (typeof value === \"number\") updateData[key] = \"low\";\n  }\n};\n\nconst _migrateClassType = function (ent, updateData) {\n  if (ent.type !== \"class\") return;\n\n  if (ent.system.classType !== undefined && ent.system.subType === undefined) {\n    updateData[\"system.subType\"] = \"base\";\n  }\n};\n\n// Added with PF1 v10\nfunction _migrateClassCasting(itemData, updateData) {\n  const casting = itemData.system?.casting;\n  if (!casting) return;\n\n  if (!casting.type) {\n    updateData[\"system.-=casting\"] = null;\n    return;\n  }\n\n  // domainSlots -> domain\n  if (casting.domainSlots !== undefined) {\n    updateData[\"system.casting.domain\"] = casting.domain ?? casting.domainSlots ?? 1;\n    updateData[\"system.casting.-=domainSlots\"] = null;\n  }\n}\n\nconst _migrateWeaponCategories = function (ent, updateData) {\n  if (ent.type !== \"weapon\") return;\n\n  // Change category\n  const type = ent.system.weaponType;\n  if (type === \"misc\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"other\";\n  } else if (type === \"splash\") {\n    updateData[\"system.weaponType\"] = \"misc\";\n    updateData[\"system.weaponSubtype\"] = \"splash\";\n  }\n\n  const changeProp = [\"simple\", \"martial\", \"exotic\"].includes(type);\n  if (changeProp && ent.system.weaponSubtype == null) {\n    updateData[\"system.weaponSubtype\"] = \"1h\";\n  }\n\n  // Change light property\n  const lgt = foundry.utils.getProperty(ent.system, \"properties.lgt\");\n  if (lgt != null) {\n    updateData[\"system.properties.-=lgt\"] = null;\n    if (lgt === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"light\";\n    }\n  }\n\n  // Change two-handed property\n  const two = foundry.utils.getProperty(ent.system, \"properties.two\");\n  if (two != null) {\n    updateData[\"system.properties.-=two\"] = null;\n    if (two === true && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"2h\";\n    }\n  }\n\n  // Change melee property\n  const melee = foundry.utils.getProperty(ent.system, \"weaponData.isMelee\");\n  if (melee != null) {\n    updateData[\"system.weaponData.-=isMelee\"] = null;\n    if (melee === false && changeProp) {\n      updateData[\"system.weaponSubtype\"] = \"ranged\";\n    }\n  }\n};\n\nconst _migrateArmorCategories = function (ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const oldType = foundry.utils.getProperty(ent.system, \"armor.type\");\n  if (oldType == null) return;\n\n  if (oldType === \"clothing\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"clothing\";\n  } else if (oldType === \"shield\") {\n    updateData[\"system.equipmentType\"] = \"shield\";\n    updateData[\"system.equipmentSubtype\"] = \"lightShield\";\n  } else if (oldType === \"misc\") {\n    updateData[\"system.equipmentType\"] = \"misc\";\n    updateData[\"system.equipmentSubtype\"] = \"wondrous\";\n  } else if ([\"light\", \"medium\", \"heavy\"].includes(oldType)) {\n    updateData[\"system.equipmentType\"] = \"armor\";\n    updateData[\"system.equipmentSubtype\"] = `${oldType}Armor`;\n  }\n\n  updateData[\"system.armor.-=type\"] = null;\n};\n\n/**\n * Convert string armor max dex to number.\n *\n * Introduced with PF1 v10\n *\n * @param item\n * @param updateData\n */\nconst _migrateArmorMaxDex = (item, updateData) => {\n  if (item.type !== \"equipment\") return;\n\n  let maxDex = item.system.armor?.dex;\n  // Skip valid states\n  if (maxDex === undefined || maxDex === null) return;\n  if (typeof maxDex === \"number\") return;\n\n  // Convert string to number\n  maxDex = parseInt(maxDex);\n  if (Number.isInteger(maxDex)) {\n    updateData[\"system.armor.dex\"] = maxDex;\n  }\n  // Assume corrupt value otherwise\n  else {\n    updateData[\"system.armor.-=dex\"] = null;\n  }\n};\n\nconst _migrateEquipmentCategories = (item, updateData) => {\n  if (item.type !== \"equipment\") return;\n\n  const subtype = updateData[\"system.subType\"] ?? item.system.subType;\n  if (subtype !== \"misc\") return;\n\n  switch (item.system.equipmentSubtype) {\n    case \"wondrous\":\n      updateData[\"system.subType\"] = \"wondrous\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"clothing\":\n      updateData[\"system.subType\"] = \"clothing\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n    case \"other\":\n      updateData[\"system.subType\"] = \"other\";\n      updateData[\"system.-=equipmentSubtype\"] = null;\n      break;\n  }\n};\n\nconst _migrateSpellDescriptors = (item, updateData) => {\n  if (item.type !== \"spell\" || item.system.types === undefined) return;\n\n  const current = item.system.types\n    .split(\",\")\n    .flatMap((x) => x.split(\";\"))\n    .filter((x) => x)\n    .map((x) => x.trim());\n\n  const value = [];\n  const custom = [];\n  const entries = Object.entries(pf1.config.spellDescriptors);\n  current.forEach((c) => {\n    const exists = entries.find(([k, v]) => c.toLowerCase() === k.toLowerCase() || c.toLowerCase() === v.toLowerCase());\n    if (exists) {\n      value.push(exists[0]);\n    } else {\n      custom.push(c);\n    }\n  });\n\n  updateData[\"system.-=types\"] = null;\n  updateData[\"system.descriptors.value\"] = value;\n  updateData[\"system.descriptors.custom\"] = custom.join(\"; \");\n};\n\nconst _migrateItemSize = function (ent, updateData) {\n  // Convert custom sizing in weapons\n  if (ent.type === \"weapon\") {\n    const wdSize = foundry.utils.getProperty(ent.system, \"weaponData.size\");\n    if (wdSize) {\n      // Move old\n      updateData[\"system.size\"] = wdSize;\n      updateData[\"system.weaponData.-=size\"] = null;\n      return;\n    }\n  }\n\n  const oldSize = ent.system.size;\n  if ([\"spell\", \"class\", \"buff\", \"feat\"].includes(ent.type)) {\n    // Remove size from abstract items\n    if (oldSize !== undefined) {\n      updateData[\"system.-=size\"] = null;\n    }\n  } else {\n    // Add default size to everything else if not present\n    if (oldSize === undefined) {\n      updateData[\"system.size\"] = \"med\";\n    }\n  }\n};\n\nconst _migrateItemFeatAbilityTypes = function (itemData, updateData) {\n  if (itemData.type !== \"feat\") return;\n\n  const type = itemData.system.abilityType;\n  // Convert \"none\" and other invalid values (e.g. null or \"n/a\") to \"na\"\n  // Added with PF1 v10\n  if (pf1.config.abilityTypes[type] === undefined) {\n    updateData[\"system.abilityType\"] = \"na\";\n  }\n};\n\nconst _migrateClassLevels = function (ent, updateData) {\n  const level = ent.system.levels;\n  if (typeof level === \"number\" && ent.system.level == null) {\n    updateData[\"system.level\"] = level;\n    updateData[\"system.-=levels\"] = null;\n  }\n};\n\nconst _migrateSavingThrowTypes = function (ent, updateData) {\n  if (\n    foundry.utils.getProperty(ent.system, \"save.type\") == null &&\n    typeof foundry.utils.getProperty(ent.system, \"save.description\") === \"string\"\n  ) {\n    const desc = foundry.utils.getProperty(ent.system, \"save.description\");\n    if (desc.match(/REF/i)) updateData[\"system.save.type\"] = \"ref\";\n    else if (desc.match(/FORT/i)) updateData[\"system.save.type\"] = \"fort\";\n    else if (desc.match(/WILL/i)) updateData[\"system.save.type\"] = \"will\";\n  }\n};\n\nconst _migrateCR = function (ent, updateData) {\n  // Migrate CR offset\n  const crOffset = ent.system.crOffset;\n  if (typeof crOffset === \"number\") {\n    updateData[\"system.crOffset\"] = crOffset.toString();\n  }\n};\n\nconst _migrateItemChanges = function (itemData, updateData) {\n  // Migrate changes\n  const changes = itemData.system.changes;\n  if (Array.isArray(changes)) {\n    const newChanges = [];\n    for (const c of changes) {\n      if (Array.isArray(c)) {\n        const newChange = new ItemChange({\n          formula: c[0],\n          target: c[1],\n          subTarget: c[2],\n          modifier: c[3],\n        });\n\n        newChanges.push(newChange.toObject());\n      } else {\n        const cd = foundry.utils.deepClone(c); // Avoid mutating source data so diff works properly\n        // Transform legacy operators\n        if (cd.operator === \"=\") cd.operator = \"set\";\n        if (cd.operator === \"+\") cd.operator = \"add\";\n\n        // Value should not exist, yet it was added previously by using derived data for updates.\n        delete cd.value;\n\n        newChanges.push(new ItemChange(cd).toObject());\n      }\n    }\n\n    // Alter the changes list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(changes, newChanges)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newChanges, changes))\n    ) {\n      updateData[\"system.changes\"] = newChanges;\n    }\n  }\n\n  const oldChanges = updateData[\"system.changes\"] ?? itemData.system?.changes ?? [];\n  const newChanges = [];\n  let updateChanges = false;\n  for (const change of oldChanges) {\n    const newChange = { ...change };\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/\\.subSkills\\./.test(change.subTarget)) {\n      newChange.subTarget = change.subTarget.replace(\".subSkills.\", \".\");\n      updateChanges = true;\n    }\n    // Remove use of penalty bonus type\n    // @since PF1 v10\n    if (change.modifier === \"penalty\") {\n      // Convert the special ability score case to specific target\n      if ([\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\"].includes(change.subTarget)) {\n        newChange.subTarget = `${change.subTarget}Pen`;\n      }\n      // Convert all to untyped modifiers\n      newChange.modifier = \"untyped\";\n      updateChanges = true;\n    }\n    newChanges.push(newChange);\n  }\n  if (updateChanges) {\n    updateData[\"system.changes\"] = newChanges;\n  }\n};\n\nconst _migrateItemContextNotes = (itemData, updateData) => {\n  // Migrate context notes\n  const oldNotes = itemData.system.contextNotes;\n  if (Array.isArray(oldNotes) && oldNotes?.length > 0) {\n    const newNotes = [];\n\n    for (const oldNote of oldNotes) {\n      let newNote = foundry.utils.deepClone(oldNote);\n\n      // Transform old tuple.\n      if (Array.isArray(oldNote)) {\n        newNote = { text: oldNote[0], target: oldNote[1], subTarget: oldNote[2] };\n      }\n\n      newNote = new pf1.components.ContextNote(newNote).toObject();\n\n      newNotes.push(newNote);\n    }\n\n    // Alter the context note list, but only if changes actually occurred. Bidirectional to detect deletions.\n    if (\n      !foundry.utils.isEmpty(foundry.utils.diffObject(oldNotes, newNotes)) ||\n      !foundry.utils.isEmpty(foundry.utils.diffObject(newNotes, oldNotes))\n    ) {\n      updateData[\"system.contextNotes\"] = newNotes;\n    }\n  }\n\n  const notes = updateData[\"system.contextNotes\"] ?? oldNotes ?? [];\n  let updateNotes = false;\n  const newNotes = [];\n  for (const note of notes) {\n    const newNote = { ...note };\n    // Replace targets with .subSkills. for ones without\n    // @since PF1 v10\n    if (/^skill\\..+\\.subSkills\\..+$/.test(note.target)) {\n      newNote.target = note.target.replace(\".subSkills.\", \".\");\n      updateNotes = true;\n    }\n    newNotes.push(newNote);\n  }\n  if (updateNotes) {\n    updateData[\"system.contextNotes\"] = newNotes;\n  }\n};\n\nconst _migrateItemChangeFlags = (item, updateData) => {\n  const flags = item.system?.changeFlags;\n  if (!flags) return;\n\n  // Dwarf-like encumbrance to distinct no medium/heavy encumbrance\n  if (flags.noEncumbrance !== undefined) {\n    if (flags.noEncumbrance === true) {\n      updateData[\"system.changeFlags.noMediumEncumbrance\"] = true;\n      updateData[\"system.changeFlags.noHeavyEncumbrance\"] = true;\n    }\n    updateData[\"system.changeFlags.-=noEncumbrance\"] = null;\n  }\n};\n\nconst _migrateEquipmentSize = function (ent, updateData) {\n  if (ent.type !== \"equipment\") return;\n\n  const size = ent.system.size;\n  if (!size) {\n    updateData[\"system.size\"] = \"med\";\n  }\n};\n\n// Migrate .weight number to .weight.value\n// Migrate .baseWeight that was briefly introduced in 0.81\nconst _migrateItemWeight = function (ent, updateData) {\n  const baseWeight = ent.system.baseWeight,\n    weight = ent.system.weight;\n\n  // Skip items of inappropriate type\n  const isPhysical = CONFIG.Item.documentClasses[ent.type]?.isPhysical;\n  if (!isPhysical) {\n    if (weight !== undefined) {\n      // Ensure inappropriate items don't have spurious weight, which breaks data prep\n      updateData[\"system.-=weight\"] = null;\n    }\n    return;\n  }\n\n  if (Number.isFinite(weight)) {\n    updateData[\"system.weight.value\"] = weight;\n  } else if (weight == null || typeof weight !== \"object\") {\n    // Convert any other values to just 0 weight, e.g. null\n    updateData[\"system.weight.value\"] = 0;\n  }\n\n  // If baseWeight exists and looks reasonable, use it for base weight instead\n  if (baseWeight !== undefined) {\n    if (Number.isFinite(baseWeight) && baseWeight > 0) {\n      updateData[\"system.weight.value\"] = baseWeight;\n    }\n    updateData[\"system.-=baseWeight\"] = null;\n  }\n};\n\nconst _migrateItemHealth = function (item, updateData) {\n  const isPhysical = CONFIG.Item.documentClasses[item.type]?.isPhysical;\n\n  const hp = item.system.hp;\n  if (isPhysical) {\n    if (hp) {\n      // Fix invalid data type\n      if (typeof hp.max === \"string\") updateData[\"system.hp.max\"] = parseInt(hp.max);\n      if (typeof hp.value === \"string\") updateData[\"system.hp.value\"] = parseInt(hp.value);\n    } else {\n      // Restore missing HP data\n      updateData[\"system.hp.value\"] = 10;\n      updateData[\"system.hp.max\"] = 10;\n    }\n  } else if (item.type !== \"class\" && hp !== undefined) {\n    updateData[\"system.-=hp\"] = null;\n  }\n};\n\nconst _migrateSpellCosts = function (ent, updateData) {\n  if (ent.type !== \"spell\") return;\n\n  const spellPointCost = foundry.utils.getProperty(ent.system, \"spellPoints.cost\");\n  if (spellPointCost == null) {\n    updateData[\"system.spellPoints.cost\"] = \"1 + @sl\";\n  }\n\n  const slotCost = ent.system.slotCost;\n  if (slotCost == null) {\n    updateData[\"system.slotCost\"] = 1;\n  }\n\n  const autoDeduct = ent.system.preparation?.autoDeductCharges;\n  if (autoDeduct !== undefined) {\n    if (autoDeduct === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.preparation.-=autoDeductCharges\"] = null;\n  }\n};\n\n/**\n * Migrate spell preparation\n *\n * Added with PF1 v10\n *\n * @param {object} itemData\n * @param {object} updateData\n * @param {object} context\n * @param {Item} [context.item=null]\n */\nfunction _migrateSpellPreparation(itemData, updateData, { item = null } = {}) {\n  if (itemData.type !== \"spell\") return;\n\n  const spellbook = item?.spellbook;\n  const prepMode = spellbook?.spellPreparationMode || \"prepared\";\n  const usesSpellPoints = spellbook?.spellPoints?.useSystem ?? false;\n  const isPrepared = usesSpellPoints ? false : prepMode === \"prepared\";\n\n  const prep = itemData.system.preparation ?? {};\n  if (prep.maxAmount !== undefined) {\n    if (!(prep.max > 0)) {\n      // Migrate even older non number max amount\n      if (typeof prep.maxAmount !== \"number\") prep.maxAmount = 0;\n      updateData[\"system.preparation.max\"] = prep.maxAmount ?? 0;\n    }\n    updateData[\"system.preparation.-=maxAmount\"] = null;\n  }\n  if (prep.spontaneousPrepared !== undefined) {\n    if (!(prep.value > 0) && !isPrepared) {\n      updateData[\"system.preparation.value\"] = prep.spontaneousPrepared ? 1 : 0;\n    }\n    updateData[\"system.preparation.-=spontaneousPrepared\"] = null;\n  }\n  if (prep.preparedAmount !== undefined) {\n    if (!(prep.value > 0) && isPrepared) {\n      updateData[\"system.preparation.value\"] = Math.max(\n        prep.preparedAmount,\n        updateData[\"system.preparation.value\"] || 0\n      );\n    }\n    updateData[\"system.preparation.-=preparedAmount\"] = null;\n  }\n}\n\nconst _migrateLootEquip = function (ent, updateData) {\n  if (ent.type === \"loot\" && !ent.system.equipped) {\n    updateData[\"system.equipped\"] = false;\n  }\n};\n\nconst _migrateUnchainedActionEconomy = (action, item) => {\n  action.activation ??= {};\n  // Migrate .unchainedAction.activation to .activation.unchained\n  if (action.unchainedAction?.activation) {\n    action.activation.unchained = action.unchainedAction.activation;\n    delete action.unchainedAction;\n  }\n};\n\nconst _migrateItemLinks = function (itemData, updateData, { item, actor }) {\n  const linkData = itemData.system.links ?? {};\n  for (const [linkType, oldLinks] of Object.entries(linkData)) {\n    let updated = false;\n    const links = foundry.utils.deepClone(oldLinks);\n    for (const link of links) {\n      const type = link.dataType;\n      if (type !== undefined) {\n        if (type === \"data\") {\n          delete link.dataType;\n        } else if (type === \"world\") {\n          // Reconstruct world item UUID\n          link.uuid = link.id.replace(/^world\\./, \"Item.\");\n          delete link.id;\n          delete link.dataType;\n        } else if (type === \"compendium\") {\n          // Reconstruct compendium UUID\n          link.uuid = `Compendium.${link.id}`;\n          delete link.id;\n          delete link.dataType;\n        }\n        delete link.img;\n        updated = true;\n      }\n\n      // Convert ID to relative UUID\n      if (link.id !== undefined && actor) {\n        link.uuid = actor?.items?.get(link.id)?.getRelativeUUID(actor);\n        delete link.id;\n        updated = true;\n      }\n\n      if (actor && link.uuid) {\n        let linked = fromUuidSync(link.uuid, { relative: actor });\n        // Attempt to recover bad links to other actors\n        if (linked?.actor) {\n          // Attempt to adjust owned item\n          if (linked.actor !== actor) linked = actor.items.get(linked.id);\n          const newLink = linked?.getRelativeUUID(actor);\n          // Successful recovery?\n          if (linked && newLink !== link.uuid) {\n            link.uuid = newLink;\n            updated = true;\n          }\n        }\n      }\n\n      // Handle moved compendium content\n      if (link.uuid) {\n        const muuid = moved[link.uuid];\n        if (muuid) {\n          link.uuid = muuid;\n          updated = true;\n        }\n      }\n\n      // Remove unused data\n      if (link._index !== undefined) {\n        delete link._index;\n        updated = true;\n      }\n\n      if (link.hiddenLinks !== undefined) {\n        delete link.hiddenLinks;\n        updated = true;\n      }\n    }\n\n    if (updated) {\n      updateData[`system.links.${linkType}`] = links;\n    }\n  }\n};\n\nconst _migrateItemProficiencies = function (item, updateData) {\n  // Added with PF1 v10\n  // Migrate sim/mar to simple/martial\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  const oldKeys = Object.keys(wprofmap);\n  if (item.system.weaponProf?.value?.some((p) => oldKeys.includes(p))) {\n    const nwprof = item.system.weaponProf.value.map((p) => wprofmap[p] || p);\n    updateData[\"system.weaponProf.value\"] = nwprof;\n  }\n};\n\nconst _migrateItemNotes = function (ent, updateData) {\n  const list = [\"system.attackNotes\", \"system.effectNotes\"];\n  for (const k of list) {\n    const value = foundry.utils.getProperty(ent, k);\n    const hasValue = foundry.utils.hasProperty(ent, k);\n    if (hasValue && !(value instanceof Array)) {\n      updateData[k] = [];\n      if (typeof value === \"string\" && value.length > 0) {\n        updateData[k] = value.trim().split(/[\\n\\r]/);\n      }\n    }\n  }\n};\n\nconst _migrateItemActions = function (item, updateData, actor = null) {\n  const hasOldAction =\n    !!item.system.actionType || !!item.system.activation?.type || !!item.system.measureTemplate?.type;\n  const alreadyHasActions = item.system.actions instanceof Array && item.system.actions.length > 0;\n  if ((!hasOldAction && item.type !== \"spell\") || alreadyHasActions) return;\n\n  // Transfer data to an action\n  const actionData = pf1.components.ItemAction.defaultData;\n  const removeKeys = [\"_id\", \"name\", \"img\"];\n  for (const k of Object.keys(actionData)) {\n    if (!removeKeys.includes(k)) {\n      if (item.system[k] != null) actionData[k] = foundry.utils.deepClone(item.system[k]);\n    }\n  }\n\n  // Transfer name and image\n  if ([\"weapon\", \"attack\"].includes(item.type)) {\n    actionData.name = game.i18n.localize(\"PF1.Attack\");\n  } else {\n    actionData.name = game.i18n.localize(\"PF1.Use\");\n  }\n  actionData.img = item.img;\n  // Clear description\n  actionData.description = \"\";\n  // Add spell data\n  if (item.type === \"spell\") {\n    // Make sure it has an activation type\n    actionData.activation.type ||= \"standard\";\n\n    // Transfer spell duration\n    actionData.duration.value = item.system.spellDuration;\n\n    // Transfer spell point cost\n    if (actor != null) {\n      const spellbookKey = item.system.spellbook;\n      const spellbook = actor.system.attributes?.spells?.spellbooks?.[spellbookKey];\n      if (spellbook.spellPoints?.useSystem) {\n        const oldSpellPointCostFormula = item.system.spellPoints?.cost;\n        if (oldSpellPointCostFormula) actionData.uses.autoDeductChargesCost = oldSpellPointCostFormula;\n      }\n    }\n  }\n\n  // Fix power attack multiplier being non-number\n  const paMult = actionData.powerAttack?.multiplier;\n  if (typeof paMult === \"string\") {\n    if (paMult === \"\") delete actionData.powerAttack.multiplier;\n    else actionData.powerAttack.multiplier = parseInt(paMult);\n  }\n\n  // Clean out old attack and effect notes\n  updateData[\"system.attackNotes\"] = [];\n  updateData[\"system.effectNotes\"] = [];\n\n  updateData[\"system.actions\"] = [actionData];\n};\n\nconst _migrateScriptCalls = (item, updateData) => {\n  if (!(item.system.scriptCalls?.length > 0)) return;\n  let updated = false;\n\n  // Clear out unused name and image for linked macros.\n  const scripts = foundry.utils.deepClone(item.system.scriptCalls);\n  for (const script of scripts) {\n    if (script.type == \"macro\") {\n      if (script.name || script.img) {\n        script.name = \"\";\n        script.img = \"\";\n        updated = true;\n      }\n    }\n  }\n\n  if (updated) {\n    updateData[\"system.scriptCalls\"] = scripts;\n  }\n};\n\n/**\n * Convert tuple learnedAt values into key:value pairs directly in the object.\n *\n * @param item\n * @param updateData\n */\nconst _migrateItemLearnedAt = (item, updateData) => {\n  const learnedAt = item.system.learnedAt ?? {};\n  for (const [category, value] of Object.entries(learnedAt)) {\n    if (Array.isArray(value)) {\n      updateData[`system.learnedAt.${category}`] = value.reduce((learned, [classId, level]) => {\n        // Skip invalid entries\n        if (typeof classId !== \"string\" || classId.length == 0) return learned;\n        // Split combined entries and transform them to object format\n        for (let clsId of classId.split(\"/\")) {\n          clsId = clsId.trim().replace(\".\", \"-\"); // Sanitize\n          if (clsId) learned[clsId] = level;\n        }\n        return learned;\n      }, {});\n    }\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionChargeUsage = function (action, itemData) {\n  if (action.uses?.autoDeductCharges !== undefined) {\n    if (action.uses.autoDeductCharges === false) {\n      action.uses.autoDeductChargesCost = \"0\";\n    } else if (action.uses.autoDeductChargesCost === \"1\") action.uses.autoDeductChargesCost = \"\";\n    delete action.uses.autoDeductCharges;\n  }\n};\n\n/**\n * Migrate action..\n * - ... usesAmmo boolean away\n * - ... ammoType to item.system.ammo.type\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n * @param {object} updateData - Item update data\n */\nconst _migrateActionAmmunitionUsage = function (action, itemData, updateData) {\n  if (action.usesAmmo === false) {\n    delete action.ammoType;\n  }\n  if (action.usesAmmo === true) {\n    if (!itemData.system.ammo?.type && !updateData[\"system.ammo.type\"]) {\n      updateData[\"system.ammo.type\"] = action.ammoType;\n      action.ammoType = \"\"; // Inherit from item\n    }\n\n    // Same as base item\n    if (itemData.system.ammo?.type == action.ammoType) delete action.ammoType;\n  }\n\n  // Migrate .ammoType to .ammo.type\n  if (action.ammoType) {\n    action.ammo ??= {};\n    action.ammo.type = action.ammoType;\n  }\n  delete action.ammoType;\n\n  // Delete empty ammo type (inherited)\n  if (action.ammo && !action.ammo.type) {\n    delete action.ammo.type;\n  }\n\n  // Uses ammo is no longer used\n  delete action.usesAmmo;\n};\n\n// Migrate harmless from save descriptor to the harmless toggle.\n// Added with PF1 v10\nconst _migrateActionHarmlessSpell = (action, itemData) => {\n  if (!action.save.description) return;\n\n  if (/\\bharmless\\b/.test(action.save.description)) {\n    action.save.description = action.save.description\n      .replace(/\\s*\\bharmless\\b\\s*/, \"\")\n      .replace(/\\(,\\s*/, \"(\")\n      .replace(/\\s*,\\)/, \")\")\n      .replace(\"()\", \"\")\n      .trim();\n    action.save.harmless = true;\n  }\n};\n\n// Migrate .spellArea to .area\n// Added with PF1 v10\nconst _migrateActionSpellArea = (action, itemData) => {\n  action.area ||= action.spellArea;\n  delete action.spellArea;\n};\n\n/**\n * @since PF1 v10\n * @param action\n * @param itemData\n */\nconst _migrateActionTemplate = (action, itemData) => {\n  //\n  const mt = action.measureTemplate;\n  if (!mt) return;\n\n  mt.color ||= mt.customColor;\n  delete mt.overrideColor;\n  delete mt.customColor;\n\n  mt.texture ||= mt.customTexture;\n  delete mt.overrideTexture;\n  delete mt.customTexture;\n};\n\n// Action duration\n// Added with PF1 v10\nconst _migrateActionDuration = (action, itemData) => {\n  action.duration ??= {};\n\n  // Something has caused \"null\" string durations for some people, this clears it.\n  if (action.duration.value === \"null\") action.duration.value = \"\";\n\n  // Swap units to \"special\" if undefined and formula exists\n  if (!action.duration.units && !!action.duration.value) {\n    action.duration.units = \"spec\";\n  }\n\n  // Swap \"instantaneous\" formula to instantaneous unit\n  if (action.duration.value === \"instantaneous\") {\n    delete action.duration.value;\n    action.duration.units = \"inst\";\n  }\n\n  // Convert easy special values to actual duration info\n  if (action.duration.units === \"spec\") {\n    const value = action.duration.value || \"\";\n\n    switch (value) {\n      case \"1 round\":\n      case \"1 full round\":\n        action.duration.value = \"1\";\n        action.duration.units = \"round\";\n        break;\n      case \"1 min.\":\n      case \"1 minute\":\n        action.duration.value = \"1\";\n        action.duration.units = \"minute\";\n        break;\n      case \"1 hour\":\n        action.duration.value = \"1\";\n        action.duration.units = \"hour\";\n        break;\n      case \"8 hours\":\n        action.duration.value = \"8\";\n        action.duration.units = \"hour\";\n        break;\n      case \"24 hours\":\n        action.duration.value = \"24\";\n        action.duration.units = \"hour\";\n        break;\n      case \"1 day\":\n        action.duration.value = \"1\";\n        action.duration.units = \"day\";\n        break;\n      case \"permanent\":\n        delete action.duration.value;\n        action.duration.units = \"perm\";\n        break;\n      case \"see below\":\n      case \"see text\":\n        delete action.duration.value;\n        action.duration.units = \"seeText\";\n        break;\n    }\n  }\n};\n\nconst _migrateActionMaterials = (action, itemData) => {\n  const addons = action.material?.addon;\n  if (addons) {\n    // Convert Throneglass into non-addon material\n    // Since PF1 vNEXT\n    const tg = \"throneglass\";\n    if (action.material.addon.includes(tg)) {\n      action.material.addon = action.material.addon.filter((ma) => ma !== tg);\n      action.material.normal.value ||= tg;\n    }\n  }\n};\n\n/**\n * Added with PF1 v10\n *\n * @param {object} action\n * @param {object} itemData\n */\nconst _migrateActionExtraAttacks = (action, itemData) => {\n  // Convert tuples into objects\n  if (action.attackParts?.length) {\n    const parts = action.attackParts ?? [];\n    if (parts.some((p) => Array.isArray(p))) {\n      action.attackParts = parts.map((part) => (Array.isArray(part) ? { formula: part[0], name: part[1] } : part));\n    }\n\n    // Ensure formulas are strings\n    for (const part of action.attackParts) part.formula = `${part.formula}`;\n  }\n\n  // Unify extra attacks structure\n  action.extraAttacks ??= {};\n\n  if (action.attackParts !== undefined) {\n    action.extraAttacks.manual = action.attackParts ?? [];\n    delete action.attackParts;\n  }\n\n  if (action.formulaicAttacks !== undefined) {\n    action.extraAttacks.formula ??= {};\n    action.extraAttacks.formula.count = action.formulaicAttacks?.count?.formula || \"\";\n    action.extraAttacks.formula.bonus = action.formulaicAttacks?.bonus?.formula || \"\";\n    action.extraAttacks.formula.label = action.formulaicAttacks?.label || \"\";\n    delete action.formulaicAttacks;\n  }\n\n  if (!action.extraAttacks.type) {\n    // Convert existing formulas to standard options\n    if (\n      action.extraAttacks.formula?.count === \"min(3, ceil(@attributes.bab.total / 5) - 1)\" &&\n      action.extraAttacks.formula?.bonus === \"@formulaicAttack * -5\"\n    ) {\n      action.extraAttacks.type = \"standard\";\n      delete action.extraAttacks.formula.count;\n      delete action.extraAttacks.formula.bonus;\n      delete action.extraAttacks.formula.label;\n\n      if (action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"advanced\";\n      } else {\n        delete action.extraAttacks.manual;\n      }\n    } else {\n      if (action.extraAttacks.formula?.count?.length || action.extraAttacks.manual?.length) {\n        action.extraAttacks.type = \"custom\";\n      }\n    }\n\n    // Delete unused data\n    if (!action.extraAttacks.formula?.count) delete action.extraAttacks.formula.count;\n    if (!action.extraAttacks.formula?.bonus) delete action.extraAttacks.formula.bonus;\n    if (!action.extraAttacks.formula?.label) delete action.extraAttacks.formula.label;\n    if (!(action.extraAttacks.manual?.length > 0)) delete action.extraAttacks.manual;\n  }\n\n  if (foundry.utils.isEmpty(action.extraAttacks.formula)) {\n    delete action.extraAttacks.formula;\n  }\n};\n\n/**\n * Migrate value types that should never have been those types.\n *\n * This may be only correcting macro/module errors and not things caused by the system.\n * Previously these were type checked in code with special handling.\n *\n * @param action\n * @param itemData\n */\nconst _migrateActionObsoleteTypes = (action, itemData) => {\n  const templateSize = action.measureTemplate?.size;\n  if (templateSize !== undefined) {\n    if (typeof templateSize !== \"string\") {\n      action.measureTemplate.size = `${templateSize}`;\n    }\n  }\n  const durVal = action.duration?.value;\n  if (durVal !== undefined && durVal !== null) {\n    if (typeof durVal !== \"string\") {\n      action.duration.value = `${durVal}`;\n    }\n  }\n};\n\n/**\n * Remove dead data\n *\n * @param action\n * @param itemData\n */\nconst _migrateActionUnusedData = (action, itemData) => {\n  // Added with PF1 v10\n  if (!action.formula) delete action.formula;\n};\n\nconst _migrateItemChargeCost = function (item, updateData) {\n  const toggle = item.system.uses?.autoDeductCharges;\n  if (toggle !== undefined) {\n    // Mimic old setting by setting cost to 0\n    if (toggle === false) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n    updateData[\"system.uses.-=autoDeductCharges\"] = null;\n  }\n  // Special handling for cantrips if the above didn't match\n  else if (item.system.level === 0 && item.system.uses?.autoDeductChargesCost === undefined) {\n    const defaultAction = item.system.actions?.[0];\n    // Check for presence of obsoleted autoDeductCharges in first action\n    if (\n      defaultAction?.uses?.autoDeductCharges === true &&\n      updateData[\"system.uses.autoDeductChargesCost\"] === undefined\n    ) {\n      updateData[\"system.uses.autoDeductChargesCost\"] = \"0\";\n    }\n  }\n};\n\n// Added with PF1 v10\nconst _migrateItemLimitedUses = (itemData, updateData) => {\n  // Migrate unlimited to empty selection, as the two are identical in meaning\n  if (itemData.system.uses?.per === \"unlimited\") {\n    updateData[\"system.uses.per\"] = \"\";\n  }\n\n  // Only physical items have single use, convert use cases to 1 charge\n  const isPhysical = CONFIG.Item.documentClasses[itemData.type]?.isPhysical;\n  if (!isPhysical) {\n    if (itemData.system.uses?.per === \"single\") {\n      updateData[\"system.uses.per\"] = \"charges\";\n      updateData[\"system.uses.maxFormula\"] = \"1\";\n    }\n  }\n};\n\n/**\n * Migrate damage part tuples into objects\n *\n * Introduced with PF1 v9\n *\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionDamageParts = function (action, itemData) {\n  const categories = action.damage;\n  for (const part of [\"parts\", \"critParts\", \"nonCritParts\"]) {\n    const category = categories[part];\n    if (!category) continue;\n\n    category.forEach((damage, index) => {\n      if (Array.isArray(damage)) {\n        const [formula, type] = damage;\n        category[index] = { formula, type };\n      }\n    });\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionDamageType = function (action, itemData) {\n  // Determine data paths using damage types\n  const damageGroupPaths = [\"damage.parts\", \"damage.critParts\", \"damage.nonCritParts\"];\n  for (const damageGroupPath of damageGroupPaths) {\n    const damageGroup = foundry.utils.getProperty(action, damageGroupPath);\n    for (const damagePart of damageGroup) {\n      // Convert damage types\n      const damageType = damagePart.type;\n      if (typeof damageType === \"string\") {\n        const damageTypeData = pf1.components.ItemAction.defaultDamageType;\n        damageTypeData.values = _Action_ConvertDamageType(damageType);\n        if (damageTypeData.values.length === 0) damageTypeData.custom = damageType;\n        damagePart.type = damageTypeData;\n      }\n      // Convert array to object\n      else if (damageType instanceof Array) {\n        const damageTypeData = pf1.components.ItemAction.defaultDamageType;\n        damageTypeData.values = damageType;\n        damagePart.type = damageTypeData;\n      }\n    }\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionConditionals = function (action, itemData) {\n  for (const conditional of action.conditionals ?? []) {\n    // Create conditional ID\n    if (!conditional._id) conditional._id = foundry.utils.randomID(16);\n\n    if (!Array.isArray(conditional.modifiers)) {\n      conditional.modifiers = Object.values(conditional.modifiers);\n    }\n\n    for (const modifier of conditional.modifiers) {\n      // Create modifier ID\n      if (!modifier._id) modifier._id = foundry.utils.randomID(16);\n\n      // Ensure subTarget exists\n      modifier.subTarget ??= \"\";\n\n      let reResult;\n      // Convert modifier subtarget\n      if ((reResult = modifier.subTarget.match(/^attack\\.([0-9]+)/))) {\n        modifier.subTarget = `attack_${reResult[1]}`;\n      }\n\n      // Remove excess sheet data that was previously incorretly added\n      delete modifier.targets;\n      delete modifier.subTargets;\n      delete modifier.conditionalModifierTypes;\n      delete modifier.conditionalCritical;\n\n      // Convert modifier damage type\n      if (modifier.target === \"damage\" && !modifier.damageType) {\n        const damageTypeData = pf1.components.ItemAction.defaultDamageType;\n        damageTypeData.values = _Action_ConvertDamageType(modifier.type);\n        if (damageTypeData.values.length === 0) damageTypeData.custom = modifier.type;\n        modifier.damageType = damageTypeData;\n        modifier.type = \"\";\n      }\n    }\n  }\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionEnhOverride = function (action, itemData) {\n  if (typeof action.enh !== \"object\") {\n    action.enh = { value: action.enh ?? null };\n  }\n\n  // Set to null if disabled.\n  if (action.enh.override == false) {\n    action.enh.value = null;\n  }\n  // Reset odd values to null, too.\n  else if (action.enh.value !== null && typeof action.enh.value !== \"number\") {\n    action.enh.value = null;\n  }\n  // Delete now unused .override toggle\n  delete action.enh.override;\n};\n\n/**\n * @param {object} action - Action data\n * @param {object} itemData - Parent item data\n */\nconst _migrateActionPrimaryAttack = function (action, itemData) {\n  if (action.naturalAttack?.primaryAttack === undefined) {\n    foundry.utils.setProperty(action, \"naturalAttack.primaryAttack\", itemData.system.primaryAttack ?? true);\n  }\n};\n\nconst _migrateActorCR = function (ent, updateData) {\n  // Migrate base CR\n  const cr = foundry.utils.getProperty(ent.system, \"details.cr\");\n  if (typeof cr === \"number\") {\n    updateData[\"system.details.cr.base\"] = cr;\n  } else if (cr == null) {\n    updateData[\"system.details.cr.base\"] = 1;\n  }\n\n  // Remove derived data if present\n  if (foundry.utils.getProperty(ent.system, \"details.cr.total\") !== undefined) {\n    updateData[\"system.details.cr.-=total\"] = null;\n  }\n};\n\nconst _migrateAttackAbility = function (ent, updateData) {\n  const cmbAbl = foundry.utils.getProperty(ent.system, \"attributes.cmbAbility\");\n  if (cmbAbl === undefined) updateData[\"system.attributes.cmbAbility\"] = \"str\";\n\n  const meleeAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.meleeAbility\");\n  if (meleeAbl === undefined) updateData[\"system.attributes.attack.meleeAbility\"] = \"str\";\n\n  const rangedAbl = foundry.utils.getProperty(ent.system, \"attributes.attack.rangedAbility\");\n  if (rangedAbl === undefined) updateData[\"system.attributes.attack.rangedAbility\"] = \"dex\";\n};\n\nconst _migrateActorSpellbookUsage = function (ent, updateData) {\n  const spellbookUsage = foundry.utils.getProperty(ent.system, \"attributes.spells.usedSpellbooks\");\n  if (spellbookUsage !== undefined) {\n    updateData[\"system.attributes.spells.-=usedSpellbooks\"] = null;\n  }\n};\n\nconst _migrateActorNullValues = function (ent, updateData) {\n  // Prepare test data\n  const entries = { \"system.attributes.energyDrain\": foundry.utils.getProperty(ent.system, \"attributes.energyDrain\") };\n  for (const [k, a] of Object.entries(ent.system.abilities || {})) {\n    entries[`system.abilities.${k}.damage`] = a.damage;\n    entries[`system.abilities.${k}.drain`] = a.drain;\n    entries[`system.abilities.${k}.penalty`] = a.penalty;\n  }\n\n  // Set null values to 0\n  for (const [k, v] of Object.entries(entries)) {\n    if (v === null) {\n      updateData[k] = 0;\n    }\n  }\n};\n\nconst _migrateActorSpellbookDomainSlots = function (ent, updateData) {\n  const spellbooks = foundry.utils.getProperty(ent.system, \"attributes.spells.spellbooks\") || {};\n\n  for (const [k, b] of Object.entries(spellbooks)) {\n    if (b.domainSlotValue !== undefined) continue;\n    const key = `system.attributes.spells.spellbooks.${k}.domainSlotValue`;\n    updateData[key] = 1;\n  }\n};\n\nconst _migrateActorStatures = function (ent, updateData) {\n  const stature = foundry.utils.getProperty(ent.system, \"traits.stature\");\n\n  if (stature === undefined) {\n    updateData[\"system.traits.stature\"] = \"tall\";\n  }\n};\n\n// Migrate weapon proficiencies\n// Converts sim and mar to simple and martial\n// Added with PF1 v10\nconst _migrateActorProficiencies = (actorData, updateData, { actor = null } = {}) => {\n  const wprofs = actorData.system.traits?.weaponProf?.value;\n  if (wprofs === undefined) return;\n\n  if (!Array.isArray(wprofs) || wprofs.length == 0) return; // TODO: Migrate if in wrong format\n\n  const wprofmap = {\n    sim: \"simple\",\n    mar: \"martial\",\n  };\n\n  const oldKeys = Object.keys(wprofmap);\n  if (wprofs.some((p) => oldKeys.includes(p))) {\n    const nwprofs = wprofs.map((v) => wprofmap[v] || v);\n    updateData[\"system.traits.weaponProf.value\"] = nwprofs;\n  }\n};\n\nconst _migrateActorDefenseAbility = function (ent, updateData) {\n  const normalACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.normal.ability\");\n  if (normalACAbl === undefined) updateData[\"system.attributes.ac.normal.ability\"] = \"dex\";\n  const touchACAbl = foundry.utils.getProperty(ent.system, \"attributes.ac.touch.ability\");\n  if (touchACAbl === undefined) updateData[\"system.attributes.ac.touch.ability\"] = \"dex\";\n\n  // CMD\n  const cmdDexAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.dexAbility\");\n  if (cmdDexAbl === undefined) updateData[\"system.attributes.cmd.dexAbility\"] = \"dex\";\n  const cmdStrAbl = foundry.utils.getProperty(ent.system, \"attributes.cmd.strAbility\");\n  if (cmdStrAbl === undefined) updateData[\"system.attributes.cmd.strAbility\"] = \"str\";\n};\n\nconst _migrateActorInitAbility = function (ent, updateData) {\n  const abl = foundry.utils.getProperty(ent.system, \"attributes.init.ability\");\n\n  if (abl === undefined) {\n    updateData[\"system.attributes.init.ability\"] = \"dex\";\n  }\n};\n\nconst _migrateActorCMBRevamp = function (ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"attributes.cmb.total\") !== undefined) {\n    updateData[\"system.attributes.cmb.-=total\"] = null;\n  }\n};\n\nconst _migrateActorChangeRevamp = function (ent, updateData) {\n  // Skills\n  Object.keys(ent.system.skills ?? {}).forEach((s) => {\n    const path = `system.skills.${s}.`;\n    if (foundry.utils.getProperty(ent, path + \"changeBonus\") !== undefined) {\n      updateData[path + \"-=changeBonus\"] = null;\n    }\n\n    // Check for subskill\n    Object.keys(foundry.utils.getProperty(ent, `system.skills.${s}.subSkills`) ?? {}).forEach((s2) => {\n      const subPath = `system.skills.${s}.subSkills.${s2}.`;\n      if (foundry.utils.getProperty(ent, subPath + \"changeBonus\") !== undefined) {\n        updateData[subPath + \"-=changeBonus\"] = null;\n      }\n    });\n  });\n\n  // Remove derived data\n  const derivedKeys = {\n    \"system.attributes.hp.max\": \"attributes.hp.-=max\",\n    \"system.attributes.ac.normal.total\": \"attributes.ac.normal.-=total\",\n    \"system.attributes.ac.touch.total\": \"attributes.ac.touch.-=total\",\n    \"system.attributes.ac.flatFooted.total\": \"attributes.ac.flatFooted.-=total\",\n    \"system.attributes.cmd.total\": \"attributes.cmd.-=total\",\n    \"system.attributes.cmd.flatFootedTotal\": \"attributes.cmd.-=flatFootedTotal\",\n    \"system.attributes.sr.total\": \"attributes.sr.-=total\",\n    \"system.attributes.init.total\": \"attributes.init.-=total\",\n  };\n\n  Object.entries(derivedKeys).forEach(([key, updateKey]) => {\n    if (foundry.utils.getProperty(ent, key) !== undefined) {\n      updateData[\"system.\" + updateKey] = null;\n    }\n  });\n};\n\nconst _migrateActorInvaliddSkills = (actor, updateData) => {\n  const skills = actor.system.skills;\n  if (!skills) return;\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) {\n      updateData[`system.skills.-=${key}`] = null;\n      continue;\n    }\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) {\n        updateData[`system.skills.${key}.subSkills.-=${subKey}`] = null;\n      }\n    }\n  }\n};\n\n/**\n * Migrate abnormal skill rank values to 0.\n * Primarily changing nulls to 0 to match new actors.\n *\n * @param ent\n * @param updateData\n */\nconst _migrateActorSkillRanks = function (ent, updateData) {\n  const skills = ent.system.skills;\n  if (!skills) return; // Unlinked with no skill overrides of any kind\n  for (const [key, sklData] of Object.entries(skills)) {\n    if (!sklData) continue;\n    if (!Number.isFinite(sklData.rank)) updateData[`system.skills.${key}.rank`] = 0;\n    for (const [subKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (!Number.isFinite(subSklData.rank)) updateData[`system.skills.${key}.subSkills.${subKey}.rank`] = 0;\n    }\n  }\n};\n\nconst _migrateCarryBonus = function (ent, updateData) {\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.bonus.user\") === undefined) {\n    let bonus = foundry.utils.getProperty(ent.system, \"abilities.str.carryBonus\");\n    if (bonus !== undefined) {\n      bonus = bonus || 0;\n      updateData[\"system.details.carryCapacity.bonus.user\"] = bonus;\n    }\n    updateData[\"system.abilities.str.-=carryBonus\"] = null;\n  }\n  if (foundry.utils.getProperty(ent.system, \"details.carryCapacity.multiplier.user\") === undefined) {\n    let mult = foundry.utils.getProperty(ent.system, \"abilities.str.carryMultiplier\");\n    if (mult !== undefined) {\n      mult = mult || 1;\n      updateData[\"system.details.carryCapacity.multiplier.user\"] = mult - 1;\n    }\n    updateData[\"system.abilities.str.-=carryMultiplier\"] = null;\n  }\n};\n\nconst _migrateBuggedValues = function (ent, updateData) {\n  // Convert to integers\n  const convertToInt = [\n    \"system.details.xp.value\",\n    \"system.currency.pp\",\n    \"system.currency.gp\",\n    \"system.currency.sp\",\n    \"system.currency.cp\",\n    \"system.altCurrency.pp\",\n    \"system.altCurrency.gp\",\n    \"system.altCurrency.sp\",\n    \"system.altCurrency.cp\",\n  ];\n  for (const key of convertToInt) {\n    const oldValue = foundry.utils.getProperty(ent, key),\n      value = parseInt(oldValue ?? 0);\n    if (oldValue !== value) {\n      updateData[key] = value;\n    }\n  }\n};\n\nconst _migrateSpellbookUsage = function (ent, updateData) {\n  const usedSpellbooks = ent.items\n    .filter((i) => i.type === \"spell\")\n    .reduce((cur, i) => {\n      if (!i.system.spellbook) return cur;\n      if (cur.includes(i.system.spellbook)) return cur;\n      cur.push(i.system.spellbook);\n      return cur;\n    }, []);\n\n  for (const bookKey of usedSpellbooks) {\n    const path = `system.attributes.spells.spellbooks.${bookKey}.inUse`;\n    if (foundry.utils.getProperty(ent, path) !== true) {\n      updateData[path] = true;\n    }\n  }\n};\n\nconst _migrateActorHP = function (ent, updateData) {\n  // Migrate HP, Wounds and Vigor values from absolutes to relatives, which is a change in 0.80.16\n  for (const k of [\"system.attributes.hp\", \"system.attributes.wounds\", \"system.attributes.vigor\"]) {\n    const value = foundry.utils.getProperty(ent, `${k}.value`);\n\n    // Fill offset if missing\n    if (foundry.utils.getProperty(ent, `${k}.offset`) == null) {\n      const max = foundry.utils.getProperty(ent, `${k}.max`) ?? 0;\n      updateData[`${k}.offset`] = (value ?? 0) - max;\n    }\n    // Value is no longer used if it exists\n\n    if (value !== undefined) {\n      updateData[`${k}.-=value`] = null;\n    }\n  }\n};\n\nconst _migrateActorSenses = function (ent, updateData, token) {\n  const oldSenses = ent.system.traits?.senses;\n  if (typeof oldSenses === \"string\") {\n    const tokenData = token ?? ent.prototypeToken;\n\n    updateData[\"system.traits.senses\"] = {\n      dv: tokenData.brightSight,\n      ts: 0,\n      bs: 0,\n      bse: 0,\n      ll: {\n        enabled: tokenData.flags?.pf1?.lowLightVision,\n        multiplier: {\n          dim: tokenData.flags?.pf1?.lowLightVisionMultiplier ?? 2,\n          bright: tokenData.flags?.pf1?.lowLightVisionMultiplierBright ?? 2,\n        },\n      },\n      sid: false,\n      tr: 0,\n      si: false,\n      sc: 0,\n      custom: oldSenses,\n    };\n  }\n\n  // Migrate boolean Scent sense to number\n  if (typeof oldSenses?.sc === \"boolean\") {\n    updateData[\"system.traits.senses.sc\"] = oldSenses.sc ? 30 : 0;\n  }\n\n  // Migrate boolean true seeing to number\n  if (typeof oldSenses?.tr === \"boolean\") {\n    updateData[\"system.traits.senses.tr\"] = oldSenses.tr ? 120 : 0;\n  }\n};\n\nconst _migrateActorSkillJournals = function (ent, updateData) {\n  const reOldJournalFormat = /^[a-zA-Z0-9]+$/;\n  for (const [skillKey, sklData] of Object.entries(ent.system.skills ?? {})) {\n    if (!sklData) continue;\n    for (const [subSkillKey, subSklData] of Object.entries(sklData.subSkills ?? {})) {\n      if (!subSklData) continue;\n      if (subSklData.journal?.match(reOldJournalFormat)) {\n        updateData[`system.skills.${skillKey}.subSkills.${subSkillKey}.journal`] = `JournalEntry.${subSklData.journal}`;\n      }\n    }\n\n    if (sklData.journal?.match(reOldJournalFormat)) {\n      updateData[`system.skills.${skillKey}.journal`] = `JournalEntry.${sklData.journal}`;\n    }\n  }\n};\n\nconst _migrateActorSubskillData = (actor, updateData) => {\n  for (const [skillId, skillData] of Object.entries(actor.system.skills ?? {})) {\n    if (!skillData) continue;\n    for (const [subSkillId, subSkillData] of Object.entries(skillData.subSkills ?? {})) {\n      if (!subSkillData) continue;\n      if (subSkillData.mod !== undefined) {\n        // Remove permanently stored .mod which is derived value\n        // Added with PF1 v9\n        updateData[`system.skills.${skillId}.subSkills.${subSkillId}.-=mod`] = null;\n      }\n    }\n  }\n};\n\nconst _migrateActorDRandER = function (ent, updateData) {\n  const oldDR = ent.system.traits?.dr;\n  const oldER = ent.system.traits?.eres;\n\n  if (typeof oldDR === \"string\") {\n    updateData[\"system.traits.dr\"] = {\n      value: [],\n      custom: oldDR,\n    };\n  }\n\n  if (typeof oldER === \"string\") {\n    updateData[\"system.traits.eres\"] = {\n      value: [],\n      custom: oldER,\n    };\n  }\n};\n\nconst _migrateActorTraitsCustomToArray = (actor, updateData) => {\n  const keys = [\"di\", \"dv\", \"ci\", \"languages\", \"armorProf\", \"weaponProf\"];\n\n  keys.forEach((key) => {\n    const trait = actor.system.traits?.[key];\n    if (!trait || typeof trait.custom !== \"string\") return;\n\n    const custom =\n      trait.custom\n        ?.split(pf1.config.re.traitSeparator)\n        .map((x) => x.trim())\n        .filter((x) => x) ?? [];\n    if (custom.length) {\n      updateData[`system.traits.${key}.custom`] = custom;\n    } else {\n      updateData[`system.traits.${key}.-=custom`] = null;\n    }\n  });\n};\n\n/**\n * @param actorData\n * @param updateData\n * @since PF1 v10\n */\nconst _migrateActorFlags = (actorData, updateData) => {\n  const flags = actorData.flags?.pf1;\n  if (!flags) return;\n\n  // visionPermission to visionSharing\n  if (flags.visionPermission) {\n    updateData[\"flags.pf1.visionSharing.default\"] = flags.visionPermission.default === \"yes\" ? true : false;\n    const mapping = {\n      yes: true,\n      no: false,\n      default: null,\n    };\n    updateData[\"flags.pf1.visionSharing.users\"] = Object.fromEntries(\n      Object.entries(flags.visionPermission?.users ?? {}).map(([uid, data]) => [uid, mapping[data.level] ?? null])\n    );\n    updateData[\"flags.pf1.-=visionPermission\"] = null;\n  }\n};\n\nconst _Action_ConvertDamageType = function (damageTypeString) {\n  const separator = /(?:\\s*\\/\\s*|\\s+and\\s+|\\s+or\\s+)/i;\n  const damageTypeList = [\n    {\n      tests: [\"b\", \"blunt\", \"bludgeoning\"],\n      result: \"bludgeoning\",\n    },\n    {\n      tests: [\"p\", \"pierce\", \"piercing\"],\n      result: \"piercing\",\n    },\n    {\n      tests: [\"s\", \"slash\", \"slashing\"],\n      result: \"slashing\",\n    },\n    {\n      tests: [\"f\", \"fire\"],\n      result: \"fire\",\n    },\n    {\n      tests: [\"cold\", \"c\"],\n      result: \"cold\",\n    },\n    {\n      tests: [\"e\", \"electric\", \"electricity\", \"electrical\"],\n      result: \"electric\",\n    },\n    {\n      tests: [\"a\", \"acid\"],\n      result: \"acid\",\n    },\n    {\n      tests: [\"sonic\"],\n      result: \"sonic\",\n    },\n    {\n      tests: [\"force\"],\n      result: \"force\",\n    },\n    {\n      tests: [\"neg\", \"negative\"],\n      result: \"negative\",\n    },\n    {\n      tests: [\"pos\", \"positive\"],\n      result: \"positive\",\n    },\n    {\n      tests: [\"u\", \"untyped\", \"untype\"],\n      result: \"untyped\",\n    },\n  ];\n\n  const damageTypes = damageTypeString.split(separator).map((o) => o.toLowerCase());\n  const result = [];\n  for (const damageTest of damageTypeList) {\n    for (const testString of damageTest.tests) {\n      if (damageTypes.includes(testString)) {\n        result.push(damageTest.result);\n      }\n    }\n  }\n\n  if (result.length > 0) return result;\n  return [];\n};\n\nconst _migrateContainerPrice = (item, updateData) => {\n  if (item.type !== \"container\") return;\n\n  // .basePrice was merged into .price with PF1 v9\n  if (item.system.basePrice !== undefined) {\n    updateData[\"system.price\"] = item.system.basePrice;\n    updateData[\"system.-=basePrice\"] = null;\n  }\n  if (item.system.unidentified?.basePrice !== undefined) {\n    updateData[\"system.unidentified.price\"] = item.system.unidentified.basePrice;\n    updateData[\"system.unidentified.-=basePrice\"] = null;\n  }\n};\n\nconst _migrateContainerReduction = (item, updateData) => {\n  if (item.type !== \"container\") return;\n  if (item.system.weightReduction !== undefined) {\n    updateData[\"system.weight.reduction.percent\"] = item.system.weightReduction;\n    updateData[\"system.-=weightReduction\"] = null;\n  }\n};\n\nconst _migrateItemType = function (ent, updateData) {\n  const type = ent.type;\n  const oldType = ent.system[`${type}Type`];\n  if (oldType == null) return;\n  updateData[\"system.subType\"] = oldType;\n  updateData[`system.-=${type}Type`] = null;\n};\n\n/**\n * @param item\n * @param updateData\n */\nconst _migrateItemTraitsCustomToArray = (item, updateData) => {\n  const keys = [\"armorProf\", \"descriptors\", \"languages\", \"weaponGroups\", \"weaponProf\"];\n\n  keys.forEach((key) => {\n    const trait = item.system[key];\n    if (!trait || typeof trait.custom !== \"string\") return;\n\n    const custom = trait.custom\n      .split(pf1.config.re.traitSeparator)\n      .map((x) => x.trim())\n      .filter((x) => x);\n\n    if (custom.length) {\n      updateData[`system.${key}.custom`] = custom;\n    } else {\n      updateData[`system.${key}.-=custom`] = null;\n    }\n  });\n};\n\n/**\n * @param {object} itemData\n * @param {object} updateData\n * @since PF1 v10\n */\nconst _migrateItemFlags = (itemData, updateData) => {\n  if (!itemData.flags?.pf1) return;\n\n  if (itemData.flags.pf1.abundant !== undefined) {\n    updateData[\"system.abundant\"] = Boolean(itemData.flags.pf1.abundant);\n    updateData[\"flags.pf1.-=abundant\"] = null;\n  }\n};\n\nconst _migrateItemMaterials = (itemData, updateData) => {\n  const tg = \"throneglass\";\n\n  // Convert incorrect material addon data\n  // Weapon\n  if (itemData.system.material?.addon) {\n    let addon = itemData.system.material.addon;\n    if (!Array.isArray(addon)) {\n      updateData[\"system.material.addon\"] = Object.entries(addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n      addon = updateData[\"system.material.addon\"];\n    }\n    // Convert Throneglass into main material\n    // Since PF1 vNEXT\n    if (addon.includes(tg)) {\n      updateData[\"system.material.addon\"] = addon.filter((ma) => ma !== tg);\n      if (!itemData.system.material?.normal?.value) {\n        updateData[\"system.material.normal.value\"] = tg;\n      }\n    }\n  }\n  // Armor\n  if (itemData.system.armor?.material?.addon) {\n    let addon = itemData.system.armor?.material?.addon;\n    if (!Array.isArray(addon)) {\n      updateData[\"system.armor.material.addon\"] = Object.entries(addon)\n        .filter(([_, chosen]) => chosen)\n        .map(([key]) => key);\n      addon = updateData[\"system.armor.material.addon\"];\n    }\n    // Convert Throneglass into main material\n    // Since PF1 vNEXT\n    if (addon.includes(tg)) {\n      updateData[\"system.armor.material.addon\"] = addon.filter((ma) => ma !== tg);\n      if (!itemData.system.armor?.material?.normal?.value) {\n        updateData[\"system.armor.material.normal.value\"] = tg;\n      }\n    }\n  }\n};\n\n/**\n * Removes data that the system has added to items that is now unused with no new location.\n *\n * @param item\n * @param updateData\n */\nconst _migrateItemUnusedData = (item, updateData) => {\n  // .priceUnits was never used, removal added with PF1 v9\n  if (item.system.priceUnits !== undefined) {\n    updateData[\"system.-=priceUnits\"] = null;\n  }\n\n  // .description.chat was never used\n  if (item.system.description?.chat !== undefined) {\n    updateData[\"system.description.-=chat\"] = null;\n  }\n\n  // .identifiedName was made obsolete with PF1 v9\n  if (item.system.identifiedName !== undefined) {\n    updateData[\"system.-=identifiedName\"] = null;\n  }\n\n  // Creating items in containers added typeName for no reason (in 0.82.5 and older)\n  if (item.system.typeName !== undefined) {\n    updateData[\"system.-=typeName\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.weaponData !== undefined) {\n    updateData[\"system.-=weaponData\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.range !== undefined) {\n    updateData[\"system.-=range\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.primaryAttack !== undefined) {\n    updateData[\"system.-=primaryAttack\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.activation !== undefined) {\n    updateData[\"system.-=activation\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.unchainedAction !== undefined) {\n    updateData[\"system.-=unchainedAction\"] = null;\n  }\n\n  // Data not used since 0.81.0\n  if (item.system.measureTemplate !== undefined) {\n    updateData[\"system.-=measureTemplate\"] = null;\n  }\n\n  // useCustomTag not used since PF1 v10\n  if (item.system.useCustomTag !== undefined) {\n    updateData[\"system.-=useCustomTag\"] = null;\n    if (item.system.useCustomTag === false && item.system.tag !== undefined) {\n      updateData[\"system.-=tag\"] = null;\n    }\n  }\n\n  // ammoType seems to have never been actually used, but it was stored in items\n  if (item.system.ammoType !== undefined) {\n    updateData[\"system.-=ammoType\"] = null;\n    // Move it anyway just in case, if missing\n    if (!item.system.ammo?.type && item.system.ammoType) {\n      updateData[\"system.ammo.type\"] = item.system.ammoType;\n    }\n  }\n};\n\n/**\n * Migrate Active Effect data.\n * - Removes pf1_ status ID prefixes.\n *\n * Added with PF1 v10\n *\n * @param {object} actorData - Actor data\n * @param {object} updateData - Update data\n * @param {Actor} [actor] - Actor document\n * @param actor\n */\nconst _migrateActorActiveEffects = async (actorData, updateData, actor) => {\n  // Migate Active Effects\n  const effects = [];\n  for (const ae of actorData.effects ?? []) {\n    const aeUpdate = await migrateActiveEffectData(ae, actor);\n    if (!foundry.utils.isEmpty(aeUpdate)) {\n      aeUpdate._id = ae._id;\n      effects.push(aeUpdate);\n    }\n  }\n\n  if (effects.length) updateData.effects = effects;\n};\n\nconst _migrateActorUnusedData = (actor, updateData) => {\n  // Obsolete vision\n  if (foundry.utils.getProperty(actor.system, \"attributes.vision\") !== undefined) {\n    updateData[\"system.attributes.-=vision\"] = null;\n  }\n\n  if (foundry.utils.getProperty(actor.prototypeToken, \"flags.pf1.lowLightVision\") !== undefined) {\n    updateData[\"prototypeToken.flags.pf1.-=lowLightVision\"] = null;\n  }\n\n  // XP max is purely derived value\n  if (actor.system.details?.xp?.max !== undefined) {\n    updateData[\"system.details.xp.-=max\"] = null;\n  }\n\n  // Actor resources have always been derived data\n  if (actor.system.resources !== undefined) {\n    updateData[\"system.-=resources\"] = null;\n  }\n\n  // Conditions no longer are permanently stored in actor data (since PF1 v10)\n  if (actor.system.attributes?.conditions !== undefined) {\n    updateData[\"system.attributes.-=conditions\"] = null;\n  }\n\n  if (actor.system.details.level !== undefined) {\n    updateData[\"system.details.-=level\"] = null;\n  }\n};\n\n/**\n * Flatten item tuple arrays\n * Since PF1 v9\n *\n * @param item\n * @param updateData\n */\nconst _migrateItemTuples = (item, updateData) => {\n  // Race subtypes\n  if (item.type === \"race\") {\n    if (item.system.subTypes?.length) {\n      if (typeof item.system.subTypes[0] !== \"string\") {\n        updateData[\"system.subTypes\"] = item.system.subTypes.flat();\n      }\n    }\n  }\n\n  // Tags\n  if (item.system.tags?.length) {\n    if (typeof item.system.tags[0] !== \"string\") {\n      updateData[\"system.tags\"] = item.system.tags.flat();\n    }\n  }\n\n  // Feat class associations\n  const classAssociations = item.system.associations?.classes;\n  if (classAssociations?.length) {\n    if (typeof classAssociations[0] !== \"string\") {\n      updateData[\"system.associations.classes\"] = classAssociations.flat();\n    }\n  }\n};\n\n/**\n * Migrate Active Effect data\n *\n * @param {object} ae Active Effect data\n * @param {Actor} actor Actor\n */\nconst migrateActiveEffectData = async (ae, actor) => {\n  if (!actor) return;\n\n  const updateData = {};\n\n  // Fix broken AE\n  if (!ae.name) updateData.name = \"No Name\";\n\n  /**\n   * @param {string} origin Origin string\n   * @returns {string|undefined} Relative UUID, if origin was found\n   */\n  const getNewRelativeOrigin = async (origin) => {\n    if (typeof origin !== \"string\") return; // Invalid origin type, recorded by SBC?\n    const newOrigin = await fromUuid(origin, { relative: actor });\n    if (newOrigin instanceof Item && newOrigin.actor === actor) {\n      return newOrigin.getRelativeUUID(actor);\n    }\n  };\n\n  // Convert no longer used flags.pf1.prigin to origin, if no origin is present\n  const originFlag = ae.flags?.pf1?.origin;\n  if (originFlag) {\n    if (!ae.origin) {\n      const newOrigin = await getNewRelativeOrigin(originFlag);\n      if (newOrigin) updateData.origin = newOrigin;\n    }\n    updateData.flags ??= {};\n    updateData.flags.pf1 ??= {};\n    updateData.flags.pf1[\"-=origin\"] = null;\n  }\n\n  // Convert origin to relative origin\n  if (ae.origin) {\n    const newOrigin = await getNewRelativeOrigin(ae.origin);\n    // Avoid empty updates\n    if (newOrigin && ae.origin !== newOrigin) {\n      updateData.origin = newOrigin;\n    }\n  }\n\n  // Remove pf1_ prefix from status effects\n  if (ae.statuses.some((s) => s.startsWith(\"pf1_\"))) {\n    updateData.statuses = Array.from(new Set(ae.statuses.map((s) => s.replace(/^pf1_/, \"\"))));\n  }\n\n  return updateData;\n};\n","/**\n * The core API provided by the system, available via the global `pf1`.\n *\n * @module\n */\n\n// Imports for side effects\nimport \"./less/pf1.less\";\nimport \"./module/hmr.mjs\";\nimport \"./module/patch-core.mjs\";\nimport \"module/compendium-directory.mjs\";\nimport \"./module/chatlog.mjs\";\n\n// Import Modules\nimport { measureDistances } from \"./module/utils/canvas.mjs\";\nimport { moduleToObject, setDefaultSceneScaling } from \"./module/utils/lib.mjs\";\nimport { initializeSocket } from \"./module/socket.mjs\";\nimport { SemanticVersion } from \"./module/utils/semver.mjs\";\nimport * as macros from \"./module/documents/macros.mjs\";\nimport * as chatUtils from \"./module/utils/chat.mjs\";\nimport { initializeModuleIntegration } from \"./module/modules.mjs\";\nimport { ActorPFProxy } from \"@actor/actor-proxy.mjs\";\nimport { ItemPFProxy } from \"@item/item-proxy.mjs\";\n\n// New API\nimport * as PF1 from \"./module/config.mjs\";\nimport * as PF1CONST from \"./module/const.mjs\";\nimport * as applications from \"./module/applications/_module.mjs\";\nimport * as documents from \"./module/documents/_module.mjs\";\nimport * as actionUse from \"./module/action-use/_module.mjs\";\nimport * as chat from \"./module/chat/_module.mjs\";\nimport * as _canvas from \"./module/canvas/_module.mjs\";\nimport * as dice from \"./module/dice/_module.mjs\";\nimport * as components from \"./module/components/_module.mjs\";\nimport * as utils from \"./module/utils/_module.mjs\";\nimport * as registry from \"./module/registry/_module.mjs\";\nimport * as migrations from \"./module/migration.mjs\";\nimport * as rollFunctions from \"./module/utils/roll-functions.mjs\";\n\n// ESM exports, to be kept in sync with globalThis.pf1\nexport {\n  actionUse,\n  applications,\n  _canvas as canvas,\n  components,\n  PF1 as config,\n  PF1CONST as const,\n  dice,\n  documents,\n  migrations,\n  registry,\n  utils,\n  chat,\n};\n\nglobalThis.pf1 = moduleToObject({\n  actionUse,\n  applications,\n  canvas: _canvas,\n  components,\n  config: PF1,\n  const: PF1CONST,\n  dice,\n  documents,\n  migrations,\n  registry,\n  /** @type {TooltipPF|null} */\n  tooltip: null,\n  utils,\n  chat,\n  // Initialize skip confirm prompt value\n  skipConfirmPrompt: false,\n});\n\n/* -------------------------------------------- */\n/*  Foundry VTT Initialization                  */\n/* -------------------------------------------- */\nHooks.once(\"init\", function () {\n  console.log(`PF1 | Initializing Pathfinder 1 System`);\n\n  // Redirect notifications to console before Notifications is ready\n  ui.notifications = {\n    info: (msg, opts = {}) => (opts.console !== false ? console.log(msg) : undefined),\n    warn: (msg, opts = {}) => (opts.console !== false ? console.warn(msg) : undefined),\n    error: (msg, opts = {}) => (opts.console !== false ? console.error(msg) : undefined),\n  };\n\n  // Global exports\n  globalThis.RollPF = dice.RollPF;\n\n  // Record Configuration Values\n  CONFIG.PF1 = pf1.config;\n\n  // Canvas object classes and configuration\n  CONFIG.Canvas.layers.templates.layerClass = _canvas.TemplateLayerPF;\n  CONFIG.MeasuredTemplate.objectClass = _canvas.MeasuredTemplatePF;\n  CONFIG.MeasuredTemplate.defaults.originalAngle = CONFIG.MeasuredTemplate.defaults.angle;\n  CONFIG.MeasuredTemplate.defaults.angle = 90; // PF1 uses 90 degree angles\n  CONFIG.Token.objectClass = _canvas.TokenPF;\n\n  // Document classes\n  CONFIG.Actor.documentClass = ActorPFProxy;\n  CONFIG.Actor.documentClasses = {\n    character: documents.actor.ActorCharacterPF,\n    npc: documents.actor.ActorNPCPF,\n    haunt: documents.actor.ActorHauntPF,\n    trap: documents.actor.ActorTrapPF,\n    vehicle: documents.actor.ActorVehiclePF,\n    basic: documents.actor.BasicActorPF,\n  };\n  CONFIG.Item.documentClass = ItemPFProxy;\n  CONFIG.Item.documentClasses = {\n    attack: documents.item.ItemAttackPF,\n    buff: documents.item.ItemBuffPF,\n    class: documents.item.ItemClassPF,\n    consumable: documents.item.ItemConsumablePF,\n    container: documents.item.ItemContainerPF,\n    equipment: documents.item.ItemEquipmentPF,\n    feat: documents.item.ItemFeatPF,\n    loot: documents.item.ItemLootPF,\n    race: documents.item.ItemRacePF,\n    spell: documents.item.ItemSpellPF,\n    weapon: documents.item.ItemWeaponPF,\n    implant: documents.item.ItemImplantPF,\n  };\n\n  CONFIG.Token.documentClass = documents.TokenDocumentPF;\n  CONFIG.ActiveEffect.documentClass = documents.ActiveEffectPF;\n  CONFIG.ActiveEffect.legacyTransferral = false; // TODO: Remove once legacy transferral is no longer default.\n  CONFIG.Combat.documentClass = documents.CombatPF;\n  CONFIG.Combatant.documentClass = documents.CombatantPF;\n  CONFIG.ChatMessage.documentClass = documents.ChatMessagePF;\n\n  // UI classes\n  CONFIG.ui.items = applications.ItemDirectoryPF;\n\n  // Dice config\n  CONFIG.Dice.rolls.unshift(dice.RollPF);\n  for (const [key, term] of Object.entries(dice.terms.fn)) {\n    CONFIG.Dice.termTypes[key] = term;\n  }\n  for (const [key, term] of Object.entries(dice.terms.aux)) {\n    CONFIG.Dice.termTypes[key] = term;\n  }\n  CONFIG.Dice.rolls.push(dice.D20RollPF);\n  CONFIG.Dice.rolls.push(dice.DamageRoll);\n  Object.defineProperties(CONFIG.Dice, {\n    RollPF: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"CONFIG.Dice.RollPF is deprecated in favor of RollPF global and pf1.dice.RollPF\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return pf1.dice.RollPF;\n      },\n    },\n  });\n  Object.defineProperties(CONFIG.Dice.rolls, {\n    DamageRoll: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"CONFIG.Dice.rolls.DamageRoll is deprecated in favor of pf1.dice.DamageRoll\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return pf1.dice.DamageRoll;\n      },\n    },\n    D20RollPF: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"CONFIG.Dice.rolls.D20RollPF is deprecated in favor of pf1.dice.D20RollPF\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return pf1.dice.D20RollPF;\n      },\n    },\n  });\n\n  // Modifier -> Type\n  Object.defineProperties(pf1.config, {\n    bonusModifiers: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"pf1.config.bonusModifiers is deprecated in favor of pf1.config.bonusTypes\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return this.bonusTypes;\n      },\n    },\n    stackingBonusModifiers: {\n      get() {\n        foundry.utils.logCompatibilityWarning(\n          \"pf1.config.stackingBonusModifiers is deprecated in favor of pf1.config.stackingBonusTypes\",\n          { since: \"PF1 v10\", until: \"PF1 v11\" }\n        );\n        return this.stackingBonusTypes;\n      },\n    },\n  });\n\n  Object.defineProperty(pf1.config, \"itemTypes\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\"pf1.config.itemTypes is deprecated in favor of CONFIG.Item.typeLabels\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      return Object.fromEntries(\n        Object.entries(CONFIG.Item.typeLabels).map(([key, label]) => [key, game.i18n.localize(label)])\n      );\n    },\n  });\n\n  Object.defineProperty(pf1.utils, \"rollPreProcess\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\"pf1.utils.rollPreProcess.* is deprecated in favor of pf1.utils.roll.*\", {\n        since: \"PF1 v10\",\n        until: \"PF1 v11\",\n      });\n\n      return pf1.utils.roll;\n    },\n  });\n\n  Object.defineProperty(pf1.applications, \"ActionChooser\", {\n    get() {\n      foundry.utils.logCompatibilityWarning(\n        \"pf1.utils.ActionChooser is deprecated in favor of pf1.utils.ActionSelector\",\n        {\n          since: \"PF1 v10\",\n          until: \"PF1 v11\",\n        }\n      );\n\n      return pf1.applications.ActionSelector;\n    },\n  });\n\n  CONFIG.time.roundTime = 6;\n\n  // Register System Settings\n  documents.settings.registerSystemSettings();\n  documents.settings.registerClientSettings();\n  setDefaultSceneScaling();\n\n  // Preload Handlebars Templates\n  utils.handlebars.preloadHandlebarsTemplates();\n  utils.handlebars.registerHandlebarsHelpers();\n\n  // Register sheet application classes\n  Actors.unregisterSheet(\"core\", ActorSheet);\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFCharacter, {\n    label: \"PF1.Sheet.PC\",\n    types: [\"character\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPC, {\n    label: \"PF1.Sheet.NPC\",\n    types: [\"npc\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLite, {\n    label: \"PF1.Sheet.NPCLite\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFNPCLoot, {\n    label: \"PF1.Sheet.NPCLoot\",\n    types: [\"npc\"],\n    makeDefault: false,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFHaunt, {\n    label: \"PF1.Sheet.Haunt\",\n    types: [\"haunt\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFTrap, {\n    label: \"PF1.Sheet.Trap\",\n    types: [\"trap\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFVehicle, {\n    label: \"PF1.Sheet.Vehicle\",\n    types: [\"vehicle\"],\n    makeDefault: true,\n  });\n  Actors.registerSheet(\"pf1\", applications.actor.ActorSheetPFBasic, {\n    label: \"PF1.Sheet.Basic\",\n    types: [\"basic\"],\n    makeDefault: true,\n  });\n  Items.unregisterSheet(\"core\", ItemSheet);\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF, {\n    label: \"PF1.Sheet.Item\",\n    types: [\"class\", \"feat\", \"spell\", \"consumable\", \"equipment\", \"loot\", \"weapon\", \"buff\", \"attack\", \"race\", \"implant\"],\n    makeDefault: true,\n  });\n  Items.registerSheet(\"pf1\", applications.item.ItemSheetPF_Container, {\n    label: \"PF1.Sheet.Container\",\n    types: [\"container\"],\n    makeDefault: true,\n  });\n\n  // Register detection modes\n  for (const mode of Object.values(pf1.canvas.detectionModes)) {\n    CONFIG.Canvas.detectionModes[mode.ID] = new mode({\n      id: mode.ID,\n      label: mode.LABEL,\n      type: mode.DETECTION_TYPE ?? DetectionMode.DETECTION_TYPES.SIGHT,\n    });\n  }\n\n  // Register vision modes\n  CONFIG.Canvas.visionModes.darkvision = pf1.canvas.visionModes.darkvision;\n\n  // Initialize socket listener\n  initializeSocket();\n\n  // Initialize module integrations\n  initializeModuleIntegration();\n\n  // Initialize registries with initial/built-in data\n  const registries = /** @type {const} */ ([\n    [\"damageTypes\", registry.DamageTypes],\n    [\"materialTypes\", registry.MaterialTypes],\n    [\"scriptCalls\", registry.ScriptCalls],\n    [\"conditions\", registry.Conditions],\n    [\"sources\", registry.Sources],\n  ]);\n  for (const [registryName, registryClass] of registries) {\n    pf1.registry[registryName] = new registryClass();\n  }\n\n  //Calculate conditions for world\n  CONFIG.statusEffects = pf1.utils.init.getConditions();\n\n  Object.defineProperty(pf1.config, \"conditions\", {\n    get: () => {\n      foundry.utils.logCompatibilityWarning(\n        \"Conditions have been moved into the Conditions registry. \" +\n          \"Use pf1.registry.conditions.getLabels() for the old format, or access the collection for full condition data.\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n      return pf1.registry.conditions.getLabels();\n    },\n  });\n\n  Object.defineProperty(pf1.config, \"conditionTextures\", {\n    get: () => {\n      foundry.utils.logCompatibilityWarning(\n        \"Condition textures have been moved into the Conditions registry. \" +\n          \"Access the collection for full condition data.\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n      return Object.fromEntries(\n        pf1.registry.conditions.map((registryObject) => [registryObject.id, registryObject.texture])\n      );\n    },\n  });\n\n  Object.defineProperty(pf1.config, \"conditionMechanics\", {\n    get: () => {\n      foundry.utils.logCompatibilityWarning(\n        \"Condition mechanics have been moved into the Conditions registry. \" +\n          \"Access the collection for full condition data.\",\n        { since: \"PF1 v10\", until: \"PF1 v11\" }\n      );\n      return Object.fromEntries(\n        pf1.registry.conditions.map((registryObject) => [registryObject.id, registryObject.mechanics])\n      );\n    },\n  });\n  // Diagonal ruleset implementation\n  SquareGrid.prototype.measureDistances = measureDistances;\n\n  // Call post-init hook\n  Hooks.callAll(\"pf1PostInit\");\n});\n\n// Load Quench test in development environment\nif (import.meta.env.DEV) {\n  await import(\"./module/test/index.mjs\");\n}\n\n/* -------------------------------------------- */\n/*  Foundry VTT Setup                           */\n/* -------------------------------------------- */\n\n// Pre-translation passes\nHooks.once(\"i18nInit\", function () {\n  // Localize CONFIG objects once up-front\n  const toLocalize = [\n    \"abilities\",\n    \"abilitiesShort\",\n    \"alignments\",\n    \"alignmentsShort\",\n    \"currencies\",\n    \"distanceUnits\",\n    \"itemActionTypes\",\n    \"senses\",\n    \"skills\",\n    \"timePeriods\",\n    \"timePeriodsShort\",\n    \"durationEndEvents\",\n    \"savingThrows\",\n    \"ac\",\n    \"featTypes\",\n    \"featTypesPlurals\",\n    \"traitTypes\",\n    \"conditionTypes\",\n    \"lootTypes\",\n    \"flyManeuverabilities\",\n    \"favouredClassBonuses\",\n    \"abilityTypes\",\n    \"weaponGroups\",\n    \"weaponTypes\",\n    \"weaponProperties\",\n    \"spellComponents\",\n    \"spellDescriptors\",\n    \"spellSchools\",\n    \"spellLevels\",\n    \"spellcasting\",\n    \"armorProficiencies\",\n    \"weaponProficiencies\",\n    \"actorSizes\",\n    \"abilityActivationTypes\",\n    \"abilityActivationTypesPlurals\",\n    \"limitedUsePeriods\",\n    \"equipmentTypes\",\n    \"equipmentSlots\",\n    \"implantSlots\",\n    \"implantTypes\",\n    \"consumableTypes\",\n    \"attackTypes\",\n    \"buffTypes\",\n    \"divineFocus\",\n    \"classSavingThrows\",\n    \"classBAB\",\n    \"classTypes\",\n    \"measureTemplateTypes\",\n    \"creatureTypes\",\n    \"measureUnits\",\n    \"measureUnitsShort\",\n    \"languages\",\n    \"weaponHoldTypes\",\n    \"auraStrengths\",\n    \"conditionalTargets\",\n    \"bonusTypes\",\n    \"abilityActivationTypes_unchained\",\n    \"abilityActivationTypesPlurals_unchained\",\n    \"actorStatures\",\n    \"ammoTypes\",\n    \"damageResistances\",\n    \"vehicles\",\n    \"woundThresholdConditions\",\n  ];\n\n  const toLocalizeConst = [\"messageVisibility\"];\n\n  // Config (sub-)objects to be sorted\n  const toSort = [\n    \"bonusTypes\",\n    \"skills\",\n    \"traitTypes\",\n    \"conditionTypes\",\n    \"consumableTypes\",\n    \"creatureTypes\",\n    \"featTypes\",\n    \"weaponProperties\",\n    \"spellSchools\",\n    \"languages\",\n  ];\n\n  /**\n   * Helper function to recursively localize object entries\n   *\n   * @param {object} obj - The object to be localized\n   * @param {string} cat - The object's name\n   * @returns {object} The localized object\n   */\n  const doLocalize = (obj, cat) => {\n    // Create tuples of (key, localized object/string)\n    const localized = Object.entries(obj).reduce((arr, [key, value]) => {\n      if (typeof value === \"string\") arr.push([key, game.i18n.localize(value)]);\n      else if (typeof value === \"object\") arr.push([key, doLocalize(value, `${cat}.${key}`)]);\n      return arr;\n    }, []);\n\n    if (toSort.includes(cat)) {\n      // Sort simple strings, fall back to sorting by label for objects/categories\n      localized.sort(([akey, aval], [bkey, bval]) => {\n        // Move misc to bottom of every list\n        if (akey === \"misc\") return 1;\n        else if (bkey === \"misc\") return -1;\n\n        // Regular sorting of localized strings\n        const localA = typeof aval === \"string\" ? aval : aval._label;\n        const localB = typeof bval === \"string\" ? bval : bval._label;\n        return localA.localeCompare(localB);\n      });\n    }\n\n    // Get the localized and sorted object out of tuple\n    return localized.reduce((obj, [key, value]) => {\n      obj[key] = value;\n      return obj;\n    }, {});\n  };\n\n  const doLocalizePaths = (obj, paths = []) => {\n    for (const path of paths) {\n      const value = foundry.utils.getProperty(obj, path);\n      if (value) {\n        foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n      }\n    }\n  };\n\n  const doLocalizeKeys = (obj, keys = []) => {\n    for (const path of Object.keys(foundry.utils.flattenObject(obj))) {\n      const key = path.split(\".\").at(-1);\n      if (keys.includes(key)) {\n        const value = foundry.utils.getProperty(obj, path);\n        if (value) {\n          foundry.utils.setProperty(obj, path, game.i18n.localize(value));\n        }\n      }\n    }\n  };\n\n  // Localize and sort CONFIG objects\n  for (const o of toLocalize) {\n    pf1.config[o] = doLocalize(pf1.config[o], o);\n  }\n\n  for (const o of toLocalizeConst) {\n    pf1.const[o] = doLocalize(pf1.const[o], o);\n  }\n\n  // Localize buff targets\n  const localizeLabels = [\"buffTargets\", \"buffTargetCategories\", \"contextNoteTargets\", \"contextNoteCategories\"];\n  for (const l of localizeLabels) {\n    for (const [k, v] of Object.entries(pf1.config[l])) {\n      pf1.config[l][k].label = game.i18n.localize(v.label);\n    }\n  }\n\n  // Extra attack structure\n  doLocalizeKeys(pf1.config.extraAttacks, [\"label\", \"flavor\"]);\n\n  // Level-up data\n  doLocalizePaths(pf1.config.levelAbilityScoreFeature, [\"name\", \"system.description.value\"]);\n\n  // Point buy data\n  doLocalizeKeys(pf1.config.pointBuy, [\"label\"]);\n});\n\n/**\n * This function runs after game data has been requested and loaded from the servers, so documents exist\n */\nHooks.once(\"setup\", () => {\n  // Prepare registry data\n  for (const registry of Object.values(pf1.registry)) {\n    if (registry instanceof pf1.registry.Registry) registry.setup();\n  }\n\n  // Register controls\n  documents.controls.registerSystemControls();\n\n  Hooks.callAll(\"pf1PostSetup\");\n});\n\n/* -------------------------------------------- */\n\n/**\n * Once the entire VTT framework is initialized, check to see if we should perform a data migration\n */\nHooks.once(\"ready\", async function () {\n  // Create tooltip\n  const ttconf = game.settings.get(\"pf1\", \"tooltipConfig\");\n  const ttwconf = game.settings.get(\"pf1\", \"tooltipWorldConfig\");\n  if (!ttconf.disable && !ttwconf.disable) pf1.applications.TooltipPF.toggle(true);\n\n  window.addEventListener(\"resize\", () => {\n    pf1.tooltip?.setPosition();\n  });\n\n  // Migrate data\n  const NEEDS_MIGRATION_VERSION = \"10.2\";\n  let PREVIOUS_MIGRATION_VERSION = game.settings.get(\"pf1\", \"systemMigrationVersion\");\n  if (typeof PREVIOUS_MIGRATION_VERSION === \"number\") {\n    PREVIOUS_MIGRATION_VERSION = PREVIOUS_MIGRATION_VERSION.toString() + \".0\";\n  } else if (\n    typeof PREVIOUS_MIGRATION_VERSION === \"string\" &&\n    PREVIOUS_MIGRATION_VERSION.match(/^([0-9]+)\\.([0-9]+)$/)\n  ) {\n    PREVIOUS_MIGRATION_VERSION = `${PREVIOUS_MIGRATION_VERSION}.0`;\n  }\n  const needMigration = SemanticVersion.fromString(NEEDS_MIGRATION_VERSION).isHigherThan(\n    SemanticVersion.fromString(PREVIOUS_MIGRATION_VERSION)\n  );\n\n  if (needMigration) {\n    const options = {};\n    // Omit dialog for new worlds with presumably nothing to migrate\n    if (PREVIOUS_MIGRATION_VERSION === \"0.0.0\") options.dialog = false;\n\n    await pf1.migrations.migrateWorld(options);\n  }\n\n  // Inform users who aren't running migration\n  if (!game.user.isGM && game.settings.get(\"pf1\", \"migrating\")) {\n    ui.notifications.warn(\"PF1.Migration.InProgress\", { localize: true });\n  }\n\n  // Migrate system settings\n  await documents.settings.migrateSystemSettings();\n\n  // Populate `pf1.applications.compendiums`\n  pf1.applications.compendiumBrowser.CompendiumBrowser.initializeBrowsers();\n\n  // Show changelog\n  if (!game.settings.get(\"pf1\", \"dontShowChangelog\")) {\n    const v = game.settings.get(\"pf1\", \"changelogVersion\") || \"0.0.1\";\n    const changelogVersion = SemanticVersion.fromString(v);\n    const curVersion = SemanticVersion.fromString(game.system.version);\n\n    if (curVersion.isHigherThan(changelogVersion)) {\n      const app = new pf1.applications.ChangeLogWindow(changelogVersion);\n      app.render(true, { focus: true });\n      game.settings.set(\"pf1\", \"changelogVersion\", curVersion.toString());\n    }\n  }\n\n  Hooks.callAll(\"pf1PostReady\");\n});\n\n/* -------------------------------------------- */\n/*  Other Hooks                                 */\n/* -------------------------------------------- */\n\nHooks.on(\n  \"renderChatMessage\",\n  /**\n   * @param {ChatMessage} cm - Chat message instance\n   * @param {JQuery<HTMLElement>} jq - JQuery instance\n   * @param {object} options - Render options\n   */\n  (cm, jq, options) => {\n    // Hide roll info\n    chatUtils.hideRollInfo(cm, jq, options);\n\n    // Hide GM sensitive info\n    chatUtils.hideGMSensitiveInfo(cm, jq, options);\n\n    // Hide non-visible targets for players\n    if (!game.user.isGM) chatUtils.hideInvisibleTargets(cm, jq[0]);\n\n    // Create target callbacks\n    chatUtils.addTargetCallbacks(cm, jq);\n\n    // Alter target defense options\n    chatUtils.alterTargetDefense(cm, jq);\n\n    // Optionally collapse the content\n    if (game.settings.get(\"pf1\", \"autoCollapseItemCards\")) jq.find(\".card-content\").hide();\n\n    // Optionally hide chat buttons\n    if (game.settings.get(\"pf1\", \"hideChatButtons\")) jq.find(\".card-buttons\").hide();\n\n    // Apply accessibility settings to chat message\n    chatUtils.applyAccessibilitySettings(cm, jq, options, game.settings.get(\"pf1\", \"accessibilityConfig\"));\n\n    // Alter ammo recovery options\n    chatUtils.alterAmmoRecovery(cm, jq);\n  }\n);\n\nHooks.on(\"renderChatPopout\", (app, html, data) => {\n  // Optionally collapse the content\n  if (game.settings.get(\"pf1\", \"autoCollapseItemCards\")) html.find(\".card-content\").hide();\n\n  // Optionally hide chat buttons\n  if (game.settings.get(\"pf1\", \"hideChatButtons\")) html.find(\".card-buttons\").hide();\n});\n\nHooks.on(\"renderChatLog\", (_, html) => documents.item.ItemPF.chatListeners(html));\nHooks.on(\"renderChatLog\", (_, html) => documents.actor.ActorPF.chatListeners(html));\nHooks.on(\"renderChatLog\", (_, html) => _canvas.attackReach.addReachListeners(html));\n\nHooks.on(\"renderChatPopout\", (_, html) => documents.item.ItemPF.chatListeners(html));\nHooks.on(\"renderChatPopout\", (_, html) => documents.actor.ActorPF.chatListeners(html));\n\nHooks.on(\"renderAmbientLightConfig\", (app, html) => {\n  _canvas.lowLightVision.addLowLightVisionToLightConfig(app, html);\n});\n\nHooks.on(\"renderTokenHUD\", (app, html, data) => {\n  _canvas.TokenQuickActions.addQuickActions(app, html, data);\n});\n\n// Hide token tooltip on token update or deletion\nHooks.on(\"deleteToken\", (token) => pf1.tooltip?.unbind(token));\nHooks.on(\"updateToken\", (token) => pf1.tooltip?.unbind(token));\n\nHooks.on(\"chatMessage\", (log, message, chatData) => {\n  const result = documents.customRolls(message, chatData.speaker);\n  return !result;\n});\n\nHooks.on(\"renderActorDirectory\", (app, html, data) => {\n  html.find(\"li.actor\").each((i, li) => {\n    li.addEventListener(\n      \"drop\",\n      applications.CurrencyTransfer._directoryDrop.bind(undefined, li.getAttribute(\"data-document-id\"))\n    );\n  });\n});\n\nHooks.on(\"renderItemDirectory\", (app, html, data) => {\n  html.find(\"li.item\").each((i, li) => {\n    li.addEventListener(\n      \"drop\",\n      applications.CurrencyTransfer._directoryDrop.bind(undefined, li.getAttribute(\"data-document-id\"))\n    );\n  });\n});\n\nHooks.on(\"dropActorSheetData\", (act, sheet, data) => {\n  if (data.type === \"Currency\") sheet._onDropCurrency(event, data);\n});\n\n/* -------------------------------------------- */\n/*  Hotbar Macros                               */\n/* -------------------------------------------- */\n\n// Delay hotbarDrop handler registration to allow modules to override it.\nHooks.once(\"ready\", () => {\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => {\n    let macro;\n    const { type, uuid } = data;\n    switch (type) {\n      case \"Item\":\n        macro = macros.createItemMacro(uuid, slot);\n        break;\n      case \"action\":\n        macro = macros.createActionMacro(data.actionId, uuid, slot);\n        break;\n      case \"skill\":\n        macro = macros.createSkillMacro(data.skill, uuid, slot);\n        break;\n      case \"save\":\n        macro = macros.createSaveMacro(data.save, uuid, slot);\n        break;\n      case \"defenses\":\n      case \"cmb\":\n      case \"concentration\":\n      case \"cl\":\n      case \"attack\":\n      case \"abilityScore\":\n      case \"initiative\":\n      case \"bab\":\n        macro = macros.createMiscActorMacro(type, uuid, slot, data);\n        break;\n      default:\n        return true;\n    }\n\n    if (macro == null || macro instanceof Promise) return false;\n  });\n});\n\n// Render TokenConfig\nHooks.on(\n  \"renderTokenConfig\",\n  /**\n   * @param {TokenConfig} app - Config application\n   * @param {JQuery<HTMLElement>} html - HTML element\n   */\n  async (app, html) => {\n    // Add vision inputs\n    let token = app.object;\n    // Prototype token\n    if (token instanceof Actor) token = token.prototypeToken;\n\n    const flags = token.flags?.pf1 ?? {};\n\n    // Add static size checkbox\n    const sizingTemplateData = { flags };\n    const sizeContent = await renderTemplate(\n      \"systems/pf1/templates/foundry/token/token-sizing.hbs\",\n      sizingTemplateData\n    );\n\n    const systemVision = game.settings.get(\"pf1\", \"systemVision\");\n\n    html.find('.tab[data-tab=\"appearance\"] > *:nth-child(3)').after(sizeContent);\n\n    const visionTab = html[0].querySelector(`.tab[data-tab=\"vision\"]`);\n\n    // Disable vision elements if custom vision is disabled\n    const enableCustomVision = flags.customVisionRules === true || !systemVision;\n\n    let addDetectionModeButtonListener;\n    const toggleCustomVision = (enabled) => {\n      // Disable vision mode selection\n      visionTab.querySelector(\"select[name='sight.visionMode']\").disabled = !enabled;\n\n      // Disable detection mode tab\n      const dmTab = visionTab.querySelector(\".tab[data-tab='detection']\");\n      for (const el of dmTab.querySelectorAll(\"input,select\")) {\n        if (el.name === \"flags.pf1.customVisionRules\") continue;\n        el.disabled = !enabled;\n      }\n\n      // Disable detection mode tab buttons via CSS\n      dmTab.classList.toggle(\"disabled\", !enabled);\n    };\n\n    if (!enableCustomVision) toggleCustomVision(enableCustomVision);\n\n    const visionContent = await renderTemplate(\"systems/pf1/templates/foundry/token/custom-vision.hbs\", {\n      enabled: enableCustomVision || !systemVision,\n      noSystemVision: !systemVision,\n    });\n\n    $(visionTab).append(visionContent);\n\n    // Add listener for custom vision rules checkbox\n    // Soft toggle to work nicer with Foundry's preview behaviour\n    visionTab.querySelector(`input[name=\"flags.pf1.customVisionRules\"]`).addEventListener(\"change\", async (event) => {\n      toggleCustomVision(event.target.checked);\n    });\n\n    // Resize windows\n    app.setPosition();\n  }\n);\n\n// Render Sidebar\nHooks.on(\"renderSidebarTab\", (app, html) => {\n  if (app instanceof Settings) {\n    // Add buttons\n    const chlogButton = $(`<button>${game.i18n.localize(\"PF1.Changelog\")}</button>`);\n    const helpButton = $(`<button>${game.i18n.localize(\"PF1.Help.Label\")}</button>`);\n    const tshooterButton = $(`<button>${game.i18n.localize(\"PF1.Troubleshooter.Button\")}</button>`);\n    html\n      .find(\"#game-details\")\n      .after(\n        $(`<h2>${game.i18n.localize(\"PF1.Title\")}</h2>`),\n        $(\"<div id='pf1-details'>\").append(chlogButton, helpButton, tshooterButton)\n      );\n\n    chlogButton.click(() => {\n      const chlog = Object.values(ui.windows).find((o) => o.id == \"changelog\") ?? new applications.ChangeLogWindow();\n      chlog.render(true, { focus: true });\n    });\n    helpButton.click(() => pf1.applications.helpBrowser.openUrl(\"Help/Home\"));\n    tshooterButton.click(() => pf1.applications.Troubleshooter.open());\n  }\n});\n\nHooks.on(\"controlToken\", () => {\n  // Refresh lighting to (un)apply low-light vision parameters to them\n  canvas.perception.update(\n    {\n      initializeLighting: true,\n    },\n    true\n  );\n});\n\n/* ------------------------------- */\n/* Expire active effects\n/* ------------------------------- */\n{\n  const expireFromTokens = function () {\n    if (game.users.activeGM?.isSelf) {\n      for (const t of canvas.tokens.placeables) {\n        // Skip tokens in combat to avoid too early expiration\n        if (t.combatant?.combat?.started) continue;\n        // Don't do anything for actors without this function (e.g. basic actors)\n        if (!t.actor?.expireActiveEffects) continue;\n        t.actor.expireActiveEffects();\n      }\n    }\n  };\n\n  // On game time change\n  Hooks.on(\"updateWorldTime\", () => {\n    expireFromTokens();\n  });\n\n  // On canvas render\n  Hooks.on(\"canvasReady\", () => {\n    expireFromTokens();\n  });\n}\n\n// Refresh skip state (alleviates sticky modifier issue #1572)\nwindow.addEventListener(\"focus\", () => (pf1.skipConfirmPrompt = false), { passive: true });\n","/**\n * Initialize module compatibility/integration code.\n *\n * Currently integrated modules:\n * - Drag Ruler\n * - DSN (scattered game.dice3d usage)\n */\nexport function initializeModuleIntegration() {\n  const integration = game.settings.get(\"pf1\", \"integration\");\n  // Drag Ruler <https://foundryvtt.com/packages/drag-ruler>\n  if (game.modules.get(\"drag-ruler\")?.active && integration.dragRuler) {\n    Hooks.once(\"dragRuler.ready\", (SpeedProvider) => {\n      // TODO: Disable enhanced terrain layer support until the module is fixed or support for it is removed\n      const enhancedTerrain = false; // game.modules.get(\"enhanced-terrain-layer\")?.active && integration.enhancedTerrainLayer;\n\n      class Pf1SpeedProvider extends SpeedProvider {\n        get colors() {\n          return [\n            { id: \"walk\", default: 0x00ff00, name: \"PF1.SETTINGS.DragRulerWalk\" },\n            { id: \"dash\", default: 0xffff00, name: \"PF1.SETTINGS.DragRulerDash\" },\n            { id: \"run\", default: 0xff8000, name: \"PF1.SETTINGS.DragRulerRun\" },\n          ];\n        }\n\n        getRanges(token) {\n          const baseSpeed = pf1.utils.convertDistance(this.getBaseSpeed(token))[0];\n          const rollData = token.actor.getRollData(),\n            inHeavyArmor = rollData.armor.type >= pf1.config.armorTypes.heavy,\n            inHeavyLoad = rollData.attributes.encumbrance.level >= pf1.config.encumbranceLevels.heavy;\n\n          let runMultiplier = 4;\n          if (inHeavyArmor || inHeavyLoad) runMultiplier = 3;\n          return [\n            { range: baseSpeed, color: \"walk\" },\n            { range: baseSpeed * 2, color: \"dash\" },\n            { range: baseSpeed * runMultiplier, color: \"run\" },\n          ];\n        }\n\n        getBaseSpeed(token) {\n          const [y, x] = canvas.grid.grid.getGridPositionFromPixels(token.x, token.y);\n          const useElevation = this.getSetting(\"useElevation\");\n          const speeds = token.actor.system.attributes.speed;\n\n          if (useElevation && token.document.elevation > 0) {\n            const flySpeed = speeds.fly.total;\n            if (flySpeed > 0) {\n              return flySpeed;\n            }\n          }\n\n          if (\n            enhancedTerrain &&\n            canvas.terrain.terrainFromGrid(x, y).some((terrain) => terrain.data.environment === \"water\")\n          ) {\n            const swimSpeed = speeds.swim.total;\n            if (swimSpeed > 0) {\n              return swimSpeed;\n            }\n          }\n\n          if (useElevation && token.document.elevation < 0) {\n            const burrowSpeed = speeds.burrow.total;\n            if (burrowSpeed > 0) {\n              return burrowSpeed;\n            }\n          }\n\n          return speeds.land.total;\n        }\n\n        get settings() {\n          return [\n            {\n              id: \"useElevation\",\n              name: \"PF1.SETTINGS.DragRulerUseElevationName\",\n              hint: \"PF1.SETTINGS.DragRulerUseElevationHint\",\n              scope: \"world\",\n              type: Boolean,\n              default: true,\n            },\n          ];\n        }\n      }\n      dragRuler.registerSystem(\"pf1\", Pf1SpeedProvider);\n    });\n  }\n}\n"],"names":["ChatMessagePF","ChatMessage","_initRollObject","maybeRollObject","Array","isArray","map","o","this","Roll","fromData","k","v","Object","entries","itemSource","itemId","flags","pf1","metadata","item","actor","constructor","getSpeakerActor","speaker","items","get","hasItemSource","measureTemplate","templateId","template","canvas","templates","targets","targetIds","tokens","placeables","filter","includes","id","prepareDerivedData","super","systemRolls","rolls","customRolls","message","rollData","match","type","RegExp","$1","toUpperCase","value","$2","flavor","$3","implementation","getSpeaker","scene","game","scenes","tokenDocument","token","tokenUuid","uuid","getRollData","evaluate","then","async","roll","total","isHealing","content","renderTemplate","tokenId","css","chatOptions","CONST","CHAT_MESSAGE_TYPES","ROLL","sound","CONFIG","sounds","dice","rollMode","settings","subject","health","create","SemanticVersion","static","major","minor","patch","preRelease","buildMetaData","fromString","str","re","result","parseInt","$4","$5","toString","isHigherThan","otherVersion","isLowerThan","RollPF","totalHalved","Math","floor","terms","reduce","t","DiceTerm","push","PoolTerm","inheritDice","concat","_dice","options","safeRoll","formula","context","suppressError","evalOpts","foundry","utils","logCompatibilityWarning","since","until","err","warning","Error","console","error","debug","safeRollSync","isDeterministic","maximize","minimize","safeRollAsync","safeTotal","data","simplifyTerms","simplified","term","prior","length","OperatorTerm","StringTerm","mergeObject","priorNumeric","NumericTerm","exec","groups","base","FunctionTerm","priorOperator","String","_classifyStringTerm","intermediate","inplace","operator","shift","at","pop","cleanFlavor","replace","getTooltip","parts","d","results","some","r","active","getTooltipData","numericParts","cur","idx","arr","ttdata","hasNumericTooltip","i18n","localize","parse","final","i","systerm","values","aux","find","matchTerm","ParentheticalTerm","fn","isFunction","args","parseArgs","_lenientSplitArgs","expression","split","trim","p","validate","join","createTag","s","a","toLowerCase","substring","fractionalToString","f","roundDecimals","rv","CR","parseFloat","fromNumber","Number","isNumeric","convertDistance","getDistanceSystem","round","system","getWeightSystem","measureDistance","p0","p1","ray","diagonalRule","state","diagonals","cells","Ray","gs","dimensions","size","nx","ceil","abs","dx","ny","dy","nDiagonal","min","nStraight","nd10","distance","naturalSort","propertyKey","numeric","ignorePunctuation","collator","Intl","Collator","sort","b","propA","getProperty","propB","compare","adjustNumberByStringCommand","initialValue","cmdStr","maxValue","clearValue","op","rawValue","isAbsolute","isNegative","isFinite","isNaN","warn","initial","command","openJournal","journal","fromUuid","JournalEntryPage","parent","sheet","render","pageId","editable","collapsed","width","height","getBuffTargets","buffTargets","deepClone","buffs","config","contextNotes","contextNoteTargets","_skillTargets","skillId","slice","skill","getSkillInfo","label","fullName","category","key","skills","books","attributes","spells","spellbooks","primary","secondary","tertiary","spelllike","spellTargets","_spellbookTargets","schoolId","keys","PF1","spellSchools","subKey","subLabel","fullKey","mainLabel","concn","getBuffTargetDictionary","targetCategories","buffTargetCategories","contextNoteCategories","categories","icon","startsWith","sortArrayByName","inputArr","elem","name","toLocaleLowerCase","binarySearch","searchArr","el","compare_fn","m","n","cmp","uniquePermutations","perm","Set","rest","j","add","createInlineFormula","closing","TextEditor","_createInlineRoll","cls","chatCommand","parsedCommand","ChatLog","cmd","matches","raw","rollType","fml","flv","document","createElement","dataset","mode","defaultImplementation","replaceFormulaData","simplify","classList","tooltip","innerHTML","enrichHTMLUnrolled","secrets","documents","relativeTo","pcontent","enrichHTML","html","text","_getTextNodes","rgx","_replaceTextContent","enrichHTMLUnrolledAsync","calculateRangeFormula","range","melee","reach","spellRangeFormulas","close","medium","long","calculateRange","keepUpdateArray","sourceObj","targetObj","keepPath","newValue","newArray","getType","subData","expandObject","setProperty","diffObjectAndArray","original","other","inner","keepLength","obj","isDifferent","difference","_difference","v0","v1","t0","d2","isEmpty","addLowLightVisionToLightConfig","app","light","object","checkboxStr","getFlag","checkbox","$","append","patchCore","LightSource_initialize","LightSource","prototype","initialize","dim","bright","getRadius","call","multiplier","hasSystemVision","requiresSelection","user","isGM","relevantTokens","tokenDoc","testUserPermission","controlled","lowLightTokens","actorVision","lowLight","tokenVision","lowLightMultiplier","lowLightMultiplierBright","max","origParse","origClick","_onClickInlineRoll","event","preventDefault","currentTarget","contains","chatMessage","closest","ui","windows","appid","documentName","_data","click","selector","off","on","KeyboardManager","_onAlt","up","modifiers","lock","new","REGEXP","RollTerm","FLAVOR_REGEXP_STRING","CLOSE_REGEXP","OPERATORS","origFunc","_createContentLink","target","hash","indexOf","forEach","firstChild","className","setAttribute","lastChild","textContent","class","original_handleShareImage","ImagePopout","_handleShareImage","image","title","caption","showTitle","doc","fromUuidSync","Item","_onFocusIn","formElements","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","isContentEditable","releaseKeys","defineProperty","querySelectorAll","patchLowLightVision","buttons","bestiary","feats","classes","races","wide","compendiumButtonClick","applications","compendiums","_render","focus","Hooks","element","querySelector","info","button","innerText","addEventListener","entryOptions","unshift","condition","li","pack","packs","disabled","callback","configure","getMessage","messages","messageId","isOwnedSpellCard","msg","isOwner","spellCardContextMenu","_","rollConcentration","spellbook","rollCL","measureDistances","segments","gridSpaces","BaseGrid","unifiedMeasureDistance","_TokenHUD_getStatusEffectChoices","TokenHUD","_getStatusEffectChoices","core","itemTypes","buff","src","img","isActive","isOverlay","cssClass","_onToggleEffect","overlay","statusId","effect","statusEffects","e","getAttribute","toggleEffect","runSocketFunction","senderId","isFirstGM","users","activeGM","isSelf","sender","eventType","source","sourceActor","dest","destActor","sourceContainer","destContainer","amount","CurrencyTransfer","transfer","sourceAlt","destAlt","alterChatTargetAttribute","targetActor","itemData","toObject","createEmbeddedDocuments","deleteEmbeddedDocuments","hasPermission","USER_PERMISSIONS","SETTINGS_MODIFY","refreshActors","renderOnly","log","contentHTML","save","valueElem","targetUuid","isFailure","addClass","removeClass","isSuccess","update","prop","ActorBasePF","Actor","_itemTypes","prepareBaseData","_rollData","getItemByTag","tag","defineProperties","getName","getId","identifier","activeOwner","u","getCombatants","combat","combatants","c","sharesVision","visionFlag","shared","default","_effectsWithDuration","effects","allApplicableEffects","_hasDuration","ItemBasePF","createDialog","CreateDialog","waitPrompt","createDocuments","origContext","supplements","_collectItemSupplements","created","_addSupplementChildLinks","allSupplements","Collection","collect","depth","links","classLink","newItems","supplement","extraItem","sourceId","old","count","set","newItem","parentUuid","fromCompendium","clearFolder","isPhysical","quantity","subType","updates","collection","children","_id","getRelativeUUID","updateDocuments","from","forcePlayerPerspective","activeState","setActive","canUse","applyChanges","changeOverrides","changes","types","getSortChangePriority","_sortChanges","targetA","targetB","typeA","typeB","prioA","priority","changeItems","changeFlags","k2","getSourceInfo","sourceInfo","negative","refreshDerivedData","continuousChanges","continuous","resetSkills","change","flats","getTargets","createOverride","_safeApplyChange","applySourceInfo","cc","finalizeSkills","bonusTypes","index","aSort","bSort","getChangeFlat","modifierType","curData","ablKey","skl","subSkills","subSkillId","subskill","rank","ability","subSkl","init","speedKey","speed","schoolDC","schoolCL","concnMatch","bookId","bookCL","test","sklKey","subSklKey","skillData","events","pf1GetChangeFlat","callAll","addDefaultChanges","actorData","tempChanges","pf1AddDefaultChanges","components","ItemChange","allClasses","calculateHealth","pcClasses","npcClasses","racialHD","all","healthConfig","nearest","down","rounding","pushHealth","fcb","format","manualHealth","healthSource","fcbHp","favoredClassTypes","fc","hp","autoHealth","rate","maximized","hpPerHD","hd","hpPerTier","tiers","level","dieHealth","hitDice","maxedHD","remaining","maxedHp","levelHp","computeHealth","sources","auto","hitdice","Racial","PC","NPC","useFractional","savingThrows","hasGoodSave","good","goodSaveFormula","classFractionalSavingThrowFormulas","goodSaveBonus","hpAbility","abilities","wounds","capitalize","strAbl","strAbility","abl","fort","ref","will","sr","cStr","details","carryCapacity","bonus","cMultBase","cMult","liteValues","bab","ac","normal","valfn","trget","naturalAC","equipment","equipped","armorTarget","armor","enh","baseAC","isBroken","enhAC","flyKey","fly","maneuverability","flyValue","flyManeuverabilityValues","sizeKey","traits","sizeMods","sizeStealthMods","sizeFlyMods","sizeSpecialMods","bonusSkillRankFormula","con","conditions","registry","mechanic","mechanics","changeData","changeObj","flag","energyDrain","csBonus","classSkillBonus","resetSkill","mod","cs","skillKey","subSkillKey","subSkill","acpPenaltyValue","acp","finalizeSkill","acpPenalty","abilityModifier","positive","setSourceInfoByName","getHighestChanges","ignoreTarget","highestTemplate","ids","highestID","highest","h","filterFunc","stackingBonusTypes","subTarget","abstract","DataModel","defineSchema","fields","StringField","blank","randomID","required","readonly","choices","NumberField","BooleanField","migrateData","modifier","updateTime","Date","_initialize","_source","writable","configurable","prepareData","ItemPF","dataObj","oldChangeData","delete","newIds","has","newChangeData","changeId","findSplice","defaultData","isDeferred","isDistance","getSourceInfoTargets","_preUpdate","updateSource","findIndex","updated","applyChange","msgSourceReference","errorMessage","errorData","onError","notifications","refresh","overrides","override","missing","loseDexToAC","isAC","diff","modifierChanger","abilityTarget","getAbilityModifier","damage","penalty","sourceInfoTargets","infoEntry","sourceInfoGroup","si","infoTarget","sInfo","doAdd","sumValue","existingInfoEntry","hasSameParent","isEnh","hasSameTarget","hasHighestValue","isSameModifier","isSameTarget","hasHigherValue","entry","splice","createFunction","funcDef","funcArgs","preDef","postDef","fullDef","Function","DamageRoll","damageType","custom","NORMAL","CRITICAL","NON_CRITICAL","isCritical","TYPES","HealthConfigModel","SchemaField","integer","nullable","variants","pc","useWoundsAndVigor","useWoundThresholds","allowWoundThresholdOverride","npc","getClassHD","continuity","woundThesholdOptions","HealthConfig","FormApplication","getData","hdId","defaultOptions","tabs","navSelector","contentSelector","group","submitOnChange","submitOnClose","closeOnSubmit","_onReset","_onSave","activateListeners","bind","_updateObject","formData","ExperienceConfigModel","disable","track","openDistributor","disableExperienceTracking","openXpDistributor","ExperienceConfig","_settings","enabled","hasCustomFormula","form","_onSaveConfig","stopPropagation","AccessibilityConfigModel","TokenTooltipWorldConfigModel","portrait","hide","hideHeld","hideArmor","hideBuffs","hideConditions","hideClothing","hideActorNameByDisposition","minimumPermission","DOCUMENT_OWNERSHIP_LEVELS","LIMITED","hideActorNameReplacement","TooltipWorldConfig","_cachedData","permissions","NONE","OBSERVER","OWNER","TokenTooltipConfigModel","hideWithoutKey","anchor","x","y","offset","onMouse","maxSize","TooltipConfig","canvasRect","view","getBoundingClientRect","screen","halfWidth","halfHeight","r1","r2","preview","hideKey","_handleImmediateChange","_openWorldSettings","tagName","checked","dtype","can","defaultSettings","IntegrationModel","diceSoNice","dragRuler","enhancedTerrainLayer","IntegrationConfig","dsnFound","modules","drFound","etlFound","PerformanceModel","reachLimit","PerformanceConfig","model","jq","reachLabel","passive","table","TooltipPF","Application","mousePos","clientX","clientY","hidden","_setPosition","forceHideGMInfo","forceHide","sticky","stickied","popOut","clientConfig","worldConfig","actorConfig","style","visibility","disposition","TOKEN_DISPOSITIONS","SECRET","unbind","clearBind","maxWidth","maxHeight","url","fullInfo","hideName","conditionId","texture","hideFromToken","held","clothing","elSize","position","left","top","sb","sidebar","mw","mh","minPos","maxPos","pos","clamped","show","toggle","force","loadableContent","loadableContentCount","loadedContentCount","one","tokenHover","hovering","elementFromPoint","enable","setPosition","registerSystemSettings","register","scope","Boolean","onChange","migrations","isMigrating","registerMenu","hint","restricted","requiresReload","imperial","metric","rounded","exact","perception","initializeLighting","initializeVision","refreshLighting","refreshVision","FRIENDLY","NEUTRAL","HOSTILE","TokenConfig","chat","refreshSheets","reset","_applyRenderFlags","redrawEffects","migrateSystemSettings","storage","removeItem","getSkipActionPrompt","skipConfirmPrompt","D20RollPF","Die","staticRoll","_formula","number","faces","getFormula","critical","TEN","TWENTY","d20","isCrit","_evaluated","isNat20","isNat1","isMisfire","natural","misfire","isStatic","isNormal","standardRoll","bonusTerms","promptDialog","DIALOG_TEMPLATE","renderData","rollModes","Dice","dialogOptions","Dialog","renderOptions","wait","_onDialogSubmit","takeTen","STATIC_ROLL","takeTwenty","jQuery","_getFormData","FormDataExtended","baseDice","toMessage","messageData","chatTemplate","CHAT_TEMPLATE","chatTemplateData","isAbnormal","abnormalTooltip","compendiumEntry","compendium","compendiumEntryType","noSound","applyRollMode","_evaluate","_applyBonus","_applyStaticRoll","_evaluateSync","newTotal","_total","ItemAction","_sheet","apps","normalMaterial","material","addonMaterial","addon","alignments","description","isCombatManeuver","actionType","activation","unchained","newActionData","actions","defaultDamageType","FALLBACK_IMAGE","isSelfCharged","uses","self","isCharged","cost","getChargeCost","charges","ammo","ammoType","loot","extraType","hasAttack","hasMultiAttack","exAtk","extraAttacks","manual","autoDeductCharges","per","useSpellPoints","spellPointCost","autoDeductChargesCost","getDefaultChargeFormula","isSingleUse","getRange","minRange","maxRange","baseRange","units","minValue","rangeType","minUnits","singleIncrementRange","maxIncrements","hasTemplate","hasDamage","critRange","getPowerAttackMult","action","mult","powerAttack","naturalAttack","primaryAttack","damageMult","hasRange","hasEffect","effectNotes","hasSave","getDC","dcBonus","baseDCFormula","dc","dcSchoolBonus","school","universalDCBonus","dcFormula","hasSound","soundEffect","enhancementBonus","isRanged","isSpell","damageSources","contexts","const","actionTypeToContext","getContextChanges","allDamageSources","conds","conditionals","mods","fakeCondChanges","isModifier","allChanges","cl","duration","maxFormula","color","attackName","attackBonus","critConfirmBonus","critParts","nonCritParts","attack","critMult","attackNotes","damageBonus","critMultiplier","nonlethal","splash","touch","spellEffect","area","lawful","chaotic","evil","_prepareConditionals","maxUses","canHold","isQuasiPhysical","conditional","ItemConditional","promises","submit","Promise","updateData","prevData","newUpdateData","performDeletions","keepPaths","path","getChatData","chatDataOptions","actionId","getLabels","actionData","labels","isUnchainedActionEconomy","activationTypes","abilityActivationTypes_unchained","abilityActivationTypes","activationTypesPlural","abilityActivationTypesPlurals_unchained","abilityActivationTypesPlurals","activationType","filterJoin","totalDC","threshold","sourceUnits","rangeLabel","distanceUnits","rangeUnit","itemActionTypes","attackSources","rollAttack","extraParts","isCMB","sizeBonus","proficiencyPenalty","masterwork","proficient","getProficiency","isNaturalSecondary","secondaryPenalty","rollOptions","ammoCost","rollDamage","conditionalParts","isNatural","ablMult","abilityDamageHeldMultipliers","extra","isExtra","Infinity","ablDamage","ablLabel","part","rollParts","getConditionalTargets","conditionalTargets","_label","getConditionalSubTargets","misc","hasProperty","getConditionalModifierTypes","damageTypes","getConditionalCritical","crit","nonCrit","getAttacks","full","resolve","bonuses","exAtkCfg","unnamedAttackIndex","attackCount","attacks","fullAttack","unchainedEconomy","parseAttacks","countFormula","bonusFormula","bonusLabel","exAtkCount","formulaicAttack","iteratives","iterativeExtraAttacks","iterativeAttackModifier","condBonuses","fill","sc","bonusRoll","atk","totalBonus","getAttackSources","use","component","ItemActionSheet","ChatAttack","actionUse","critConfirm","hasCritConfirm","AttackDamage","damageRows","critDamage","hasCards","cards","effectNotesHTML","notesOnly","setAction","setAmmo","ammoId","ammoItem","setRollData","critMultBonus","critCount","setEffectNotesHTML","enrichOptions","notes","addAttack","noAttack","ccKeys","ccKey","sourceDetails","broken","getDefenseDC","armorAsDR","baseCritMult","addDamage","repeatCount","repeat","totalDamage","properties","nnl","addEffectNotes","noteSources","getContextNotes","ns","note","explosionRadius","explode","measureUnitsShort","ft","finalize","half","ERR_REQUIREMENT","freeze","NO_ACTOR_PERM","DISABLED","INSUFFICIENT_QUANTITY","INSUFFICIENT_CHARGES","MISSING_AMMO","INSUFFICIENT_AMMO","ActionUse","templateData","checkRequirements","chargeCost","chargeCostBonus","createAttackDialog","AttackDialog","alterRollData","useOptions","clCheck","haste","manyshot","rapidShot","abilityMult","atkBonus","dmgBonus","pointBlankShot","manyShot","useMeasureTemplate","abilityDamageMultOverride","basePowerAttackBonus","powerAttackBonus","paMult","powerAttackPenalty","casterLevelCheck","concentrationCheck","generateAttacks","forceFullAttack","allAttacks","ActionUseAttack","ammos","getAmmo","abundant","autoSelectAmmo","identified","price","setFlag","_filterAmmo","defaultAmmo","isDefault","subtractAmmo","ammoUsage","usage","updateEmbeddedDocuments","updateAmmoUsage","chatAtk","chatAttack","handleConditionals","conditionalData","conditionalRoll","partString","flavoredFormula","conditionalPartsCommon","checkAttackRequirements","spontaneous","preparation","maxCharges","generateChatAttacks","addAttacks","addEmptyAttack","hasAmmo","saveDC","addFootnotes","_getConditionalParts","conditionalTemplates","addPart","templateKey","templateStr","parsedStr","powerAttackCritBonus","chatAttacks","typeMap","rsak","rwak","twak","rcman","mwak","msak","mcman","isAttack","getContextNotesParsed","footnotes","promptMeasureTemplate","mt","dist","templateOptions","origin","Color","AbilityTemplate","actorSheet","sheetRendered","_element","drawPreview","place","handleDiceSoNice","dice3d","isEnabled","chatData","mergeRolls","skipRolls","showRoll","pools","whisper","pool","showForRoll","blind","attackPool","critPool","getMessageData","OTHER","alias","props","extraText","enrichNotes","itemChatData","chatcard","addGenericPropertyLabels","header","combatProps","addCombatPropertyLabels","clNotes","identifiedDescription","unidentifiedDescription","actionDescription","gmSensitiveLabel","usystem","rangeUnits","spellFailure","somatic","arcaneSpellFailure","spellFailureRoll","spellFailureSuccess","generateChatMetadata","actionName","renderContext","totalChargeCost","atWill","showInAction","deaf","materialKey","materialAddons","normalMaterialAction","normalMaterialItem","baseMaterialItem","addonMaterialAction","addonMaterialItem","materialTypes","materialAddonNames","actionAlignments","itemAlignments","alignment","attackPenalty","woundThresholds","woundThresholdConditions","attackIndex","attackRolls","toJSON","damageIndex","damageRoll","spell","sl","executeScriptCalls","scriptData","postMessage","skipDialog","hideChat","hiddenData","getTokensWithin","combatant","isDefeated","_getDefenseDCParts","check","babIdent","prepareChargeCost","process","measureResult","reqErr","code","perAttack","reject","premessage_promises","totalCost","addCharges","updateTokenTargets","broadcastActivity","hasIdentifier","hasChanges","getDefaultArtwork","defaultIcons","_preCreate","preCreateData","_onCreate","userId","changed","_preUpdateNumericValueGuard","_chargePreUpdate","link","_onDelete","getLinkedItemsSync","memoryVariables","firstAction","defaultAction","weapon","isProficient","isOwned","parentItem","hasAction","hasFiniteCharges","getDefaultChargeCost","recharge","period","commit","limitedUsePeriodOrder","rechargeFormula","auraStrength","parentActor","limited","permission","isEmbedded","fullDescription","getDescription","body","actionTypes","defaultContextNote","ContextNote","showUnidentifiedData","prepareLinks","_prepareChanges","_prepareScriptCalls","wgroups","weaponGroups","g","_initialized","_prepareDependentData","_updateMaxUses","_prepareActions","_prepareIdentifier","inContainer","adjustContained","cn","_updateInheritedCharges","recursive","scriptCalls","sid","scriptCall","ItemScriptCall","extraParams","scripts","execute","cause","rootItem","_transformContainerUpdateData","memorizeVariables","containerItem","baseUpdate","_memoryVariables","memKeys","_onUpdate","startTime","time","worldTime","oldLevel","previous","every","iuses","getRawEffectData","getScriptCalls","displayCard","altChatData","isVersatile","hasExtraProperties","extraProperties","pfFlags","identifiedInfo","canPopout","unidentified","childTypeDistinct","childType","distanceValues","saveDesc","timePeriods","enhBonus","getTypeChatData","harmless","actionID","ev","isSafeInteger","sharedData","descriptionOnly","chatCard","originalEvent","ActionSelector","open","enumerable","usesAmmo","getContextStack","classTag","dFlags","bFlags","fromEntries","boolean","resizing","chatListeners","_onChatCardButton","_onChatCardToggleContent","card","isAuthor","_onChatCardAction","asNonlethal","tags","attackType","instances","damageRolls","dmg","ActorPF","applyDamage","ammoQuantity","recoveryData","ammoRecovery","failed","recovered","chance","recoverChance","random","display","popout","canCreateItemLink","linkType","dataType","targetItem","itemLink","sameActor","linkOnActor","targetLinks","deeptarget","generateInitialLinkData","extraData","packageType","createItemLink","itemUpdate","itemUpdates","getLinkedItems","includeLinkData","_results","l","relative","linkData","getAllLinkedItems","removeItemLink","linkItems","getLinkItem","getLinkedItemSync","getChangeTargets","actorSkills","s2","skl2","getChangeSubTargets","getValue","addItemBooleanFlag","flagName","removeItemBooleanFlag","hasItemBooleanFlag","getItemBooleanFlags","setItemDictionaryFlag","dictionary","removeItemDictionaryFlag","getItemDictionaryFlag","getItemDictionaryFlags","getAttackArray","attackArray","describePart","changeSources","effectiveChanges","ic","ablMod","virtualEnh","secondaryModifier","getAllDamageSources","ItemAttackPF","hasWeaponProficiency","fromItem","srcData","attackItem","timeworn","cursed","artifact","baseTypes","attackTypes","ItemBuffPF","start","_updateTrackingEffect","oldEffect","aeData","ActiveEffect","_preDelete","buffTypes","unit","timePeriodsShort","_prepareDuration","_prepareTraits","seconds","NaN","roundTime","totalSeconds","getDuration","createData","statuses","hideIcon","endTiming","end","initiative","ae","ItemClassPF","classLinks","classAssociations","_onLevelChange","casting","bookData","createSpellbook","prevLevel","usedBook","book","inUse","newLevel","curLevel","newAssociations","Map","itemsCreationData","_typeSorting","SORT_INTEGER_DENSITY","associations","itemIds","deleteDocuments","mythicTier","progression","domainSlots","cantrips","saveFormulas","classSavingThrowFormulas","classType","saveData","saveType","goodSave","babFormulas","classFractionalBABFormulas","classBABFormulas","babType","babFormula","babBase","_registerOnActor","isBaseClass","unlevel","alt","customHD","classTypes","classBAB","saves","classSavingThrows","hitDie","hasFCB","ItemPhysicalPF","_resetChargesOnQuantityUpdate","hardness","oldQuantity","newQuantity","oldUses","weight","converted","prepareWeight","baseWeight","getWeightMultiplier","convertWeight","_getArmorWeightMultiplier","actorSize","itemSize","armorWeight","sellValue","inLowestDenomination","forceUnidentified","single","identical","maxChargesValue","remainingCharges","getActualValue","pricePerUse","isIdentified","hpMax","checkYes","checkNo","carried","ItemConsumablePF","canEquip","consumableTypes","ItemContainerPF","_containedItemUpdate","oldItem","dryRun","fallback","temp","weightReduction","reduction","percent","currency","_calculateCoinWeight","_prepareInventory","weightMult","currencyWeight","contents","reductionFlat","getContainerContent","createContainerContent","itemsData","renderSheet","itemOptions","actuallyCreated","allowed","noHook","_stats","coreVersion","version","systemVersion","createdTime","now","lastModifiedBy","vtt","createContained","deleteContainerContent","embeddedName","actuallyDeleted","removeContained","updateContainerContents","actuallyUpdated","modifiedTime","updateContained","getTotalCurrency","pp","gp","sp","cp","convertCurrency","convert","divisor","coins","fullOptions","cpValue","totalValue","ItemEquipmentPF","subtype","equipmentSubtype","subtypes","equipmentTypes","slot","slotType","slotTypes","equipmentSlots","eType","typeKeys","eSubtype","subtypeKeys","showIdentified","subtypeLabels","armorValue","acpEffective","mdex","dex","hasSlots","shield","wondrous","applyEquippedEffects","shieldTypes","shieldType","heavy","tower","armorTypes","armorType","hasArmorProficiency","baseArmorProficiency","lightArmor","mediumArmor","heavyArmor","lightShield","heavyShield","towerShield","ItemFeatPF","abilityType","featTypes","featType","abilityTypes","short","traitType","traitTypes","abilityTypeLong","ItemLootPF","lootTypes","unequippableLoot","ItemRacePF","oldRace","race","newSize","oldSize","_pf1SizeChanged","speedUpdates","speeds","flyManeuverability","templatePaths","preloadHandlebarsTemplates","loadTemplates","renderCachedTemplate","Handlebars","partials","allowProtoMethodsByDefault","allowProtoPropertiesByDefault","preventIndent","ItemSpellPF","_assignLevelOnCreate","prep","prepUpdate","maxAmount","preparedAmount","spontaneousPrepared","spellPreparationMode","_preparationPreUpdate","current","learnedAt","spellLevels","getSpellComponents","compact","getEffectiveSpellLevel","spellLevel","getEffectiveCasterLevel","casterLevel","psychic","verbal","compat","oldk","newk","getOwnPropertyDescriptor","descs","descriptors","spellDescriptors","spellAbility","getMinimumCasterLevelBySpellData","isSpontaneous","spellbookKey","curUses","getSpellUses","newCharges","actorUpdateData","spellPoints","useSystem","slOffset","clOffset","reSplit","traitSeparator","srcComponents","srcMaterials","materials","kind","isDivine","spellComponents","thought","emotion","dfVariants","df","divineFocus","classId","tc","classCasterType","_replaceConsumableConversionString","string","toConsumable","origData","spellType","isWand","isPotion","isScroll","minLevel","minCl","materialPrice","gpValue","unidentifiedName","aura","convertNotes","arrKey","rlabel","rvalue","bAtk","dmgPart","oldSaveDC","desc","charcard","toConsumablePrompt","allowSpell","documentClasses","getFormData","createConsumable","potion","scroll","wand","isNPC","canCast","isDomain","domain","getDescriptionData","subschool","descriptor","act","activationCost","activationTypesPlurals","castingTime","durationFormula","variableDuration","dismiss","rangeValue","rf","rt","rl","savingThrowDescription","savingThrow","useDCandSR","slotCost","ItemWeaponPF","newWeaponType","weaponSubtype","weaponTypes","wType","wSubtype","weaponProperties","ItemImplantPF","implanted","implantTypes","implantSlots","cybertech","none","Spellbook","bookKey","addSpell","SpellbookLevel","SpellbookSlots","domainMax","domainUnused","used","SpellRanges","SpellbookMode","isHybrid","isPrestige","isPrepared","usesSpellpoints","isSemiSpontaneous","sharedVision","menu","actors","documentId","visionSharingSheet","offsetTop","window","innerHeight","innerWidth","VisionSharingSheet","ActorSheet","sheetConfig","levels","false","true","players","_getHeaderButtons","Resource","itemFlags","_queuedUpdates","containerItems","_states","_visionSharingSheet","_onChatCardButtonAction","saveId","rollSavingThrow","character","_getSourceLabel","typeLabel","_prepareContainerItems","getContainerContents","container","_prepareItemFlags","allItems","dEntries","uniqueId","applyActiveEffects","prepareConditions","expireActiveEffects","timeOffset","temporaryEffects","rounds","startRound","endOn","disableActiveEffects","deleteActiveEffects","disableBuffs","reason","deleteAEContext","disableAEContext","resources","_resetInherentTotals","_prepareNaturalReach","pf1PrepareBaseActorData","undrained","drain","userPenalty","refreshAbilityModifiers","_prepareClassSkills","status","getReach","stature","skillSet","actorItems","relevantActorItems","classSkillName","isClassSkill","classSkills","aprof","armorProf","profs","customTotal","prof","wprof","weaponProf","_updateSpellBook","cache","isSchool","bookClassId","bookClass","_generateSpellbookCache","bookInfo","spellbookAbility","spellSlotAbilityScoreBonus","spellSlotAbilityBonusFormula","spellSlotAbilityScore","spellSlotAbilityMod","clTotal","autoSpellLevelCalculation","autoFormula","autoSpellLevelCalculationFormula","autoBonus","autoTotal","autoSpellLevelTotal","clBonus","concentration","concFormula","concentrationFormula","formulaRoll","rollBonus","classAbilityMod","prevTotal","getAbilityBonus","getSpellSlotIncrease","useAuto","autoSpellLevels","casterType","casterProgression","castsPerDay","castsForLevels","classLevel","allLevelModFormula","allLevelMod","levelData","spellsForLevel","spellsPreparedPerDay","offsetFormula","hasCantrips","slots","domainSlotValue","levelSpells","lvlSlots","excess","mismatchSlots","invalidSlots","maxLevelByAblScore","preparedAllOffsetFormula","spellLevelData","hasIssues","lowAbilityScore","known","unused","domainSlotMax","available","preparedOffsetFormula","lowLevel","dSlots","acc","domainSlotsRemaining","invalidKnown","mismatchKnown","spellClass","bookKeys","allSpells","updateSpellbookInfo","maxDexBonus","maxBonus","encPen","_computeEncumbrance","gearPen","_applyArmorPenalties","encumbrance","gear","acpSkill","creatureType","humanoid","quadruped","prepareProficiencies","updateItemResources","natReach","prepareSpecificDerivedData","prepareCMB","prepareItemLinks","_prepareOverlandSpeeds","warnOnDuplicate","_setSourceDetails","overland","overlandSpeed","proficiencies","armorProficiencies","weaponProficiencies","languages","translations","customProficiencies","hasInfo","proficiency","customProfs","shrAtk","genAtk","general","cmbAbl","cmbAbility","cmbAblMod","cmb","pf1PrepareDerivedActorData","ab","baseMod","totalAtk","updateWoundThreshold","arbitrarySkills","backgroundSkills","background","acAbl","acTouchAbl","cmdDexAbl","dexAbility","acAblMod","acTouchAblMod","cmdDexAblMod","maxDex","flatFooted","acAblKey","flatFootedTotal","reducedSpeed","encLevel","encLevels","encumbranceLevels","noHeavyEncumbrance","noMediumEncumbrance","eqData","_prepareArmorData","heavyArmorFullSpeed","mediumArmorFullSpeed","speedValue","unhindered","getReducedMovementSpeed","encACPPPenalty","encMaxDex","encLabel","maxDexLabel","NumberFormat","signDisplay","attackACPPenalty","eqType","isShieldOrArmor","itemACP","bsInfo","mDex","isInteger","itemMDex","ignoreNull","sInfoA","brokenId","totalACP","linkedItem","linked","bt","hpconf","hpconfvariant","wtData","getWoundThresholdData","fk","woundThresholdChangeTargets","dexDenied","changeTarget","changeGrp","grp","srcValue","displayValue","_getInherentTotalsKeys","vigor","armorBonus","shieldBonus","skillKeys","_getBaseValueFillKeys","getLevelExp","oldData","_syncProtoTokenSize","maxVigor","excessVigorDamage","absoluteKeys","ablData","absKey","setConditions","prototypeToken","staticSize","tokenSizes","w","sourceUser","senses","ll","visionSharing","visionUpdate","getActiveTokens","_syncSenses","_updateTokenSize","protoTexture","scaleX","scale","scaleY","TokenDocument","_onCreateDescendantDocuments","arguments","updateConditionTracks","_handleConditionTracks","previousConditions","tracks","trackedConditions","conditionGroup","disableConditionId","_conditionToggleNotify","_onDeleteDescendantDocuments","updatedConditions","_cleanItemLinksTo","toRemove","_enumChildren","child","deleted","res","createAttackFromWeapon","oldBook","skillIdParts","mainSkillId","isSubSkill","parentSkill","skillCompendiumEntries","rollSkill","skillDataPathPart","haveParentSkill","noteObjects","formatContextNotes","cf","d20Roll","rollBAB","rollCMB","maneuver","ranged","atkData","atkAbl","reverse","wT","valid","getDefenseHeaders","damageResistances","damageVulnerabilities","headers","dr","eres","dv","cres","di","ci","conditionTypes","getInitiativeContextNotes","notesHTML","notesHTMLParts","rollInitiative","createCombatants","rerollInitiative","initiativeOptions","getDocumentClass","isToken","toCreate","inCombat","sceneId","actorId","savingThrowId","changeBonus","rollAbilityTest","abilityId","checkMod","displayDefenseCard","acNoteObjects","acNotes","cmdNoteObjects","cmdNotes","srNoteObjects","srNotes","saveNotesObjects","saveNotes","drNotes","parseResistances","energyResistance","immunity","vulnerability","showInDefense","wTlabel","fastHealing","regen","_deprecatePF1PrefixConditions","newKey","toggleCondition","setCondition","hasCondition","TypeError","newTrackState","disableTrackEntries","toDelete","currentCondition","oldAe","autoDelete","deleteContext","trender","type2","translatedType","type1","damages","resistances","counter","forceDialog","reductionDefault","asWounds","healingInvert","Token","numReg","_submit","val","dR","tok","actorType","tmp","currentHealth","woundAdjust","dt","newHP","nld","newHp","dialogData","healing","damageReduction","inp","swapSelected","chk","setReduction","mouseWheelAdd","increase","sign","deltaY","getWoundThresholdMultiplier","wt","woundMult","woundLevel","variant","penaltyBase","curHP","tempHP","maxHP","wtMult","wtMod","changeFlatKeys","curValue","allSkills","allNotes","noteSource","saveKey","miscKey","spellbookNotes","concentrationNotes","noteObj","subnote","carry","getCarryCapacity","drag","carriedWeight","getCarriedWeight","carryStr","carryMultiplier","encumbranceMultipliers","encumbranceLoads","multiplierCount","pow","mergeCurrency","v2","getCurrency","currencies","deprecated","armorData","skipRefresh","temporaryRollDataFields","combats","viewed","sizeChart","abilityMod","negLevels","parseAlignment","effectiveSize","reachStruct","getQuickActions","showInQuickbar","qi","haveAnyCharges","maxCharge","recharging","newMod","importFromJSON","json","JSON","getFeatCount","feat","owned","mythic","int","bonusFeatFormula","resetSpellbookUsage","restorePoints","restoreFormula","restoreRoll","rechargeItems","rechargeOptions","_changed","_restingHeal","hours","longTermCare","heal","performRest","restoreHealth","restoreDailyUses","verbose","healUpdate","spellbookUpdates","restOptions","modifyTokenAttribute","attribute","isDelta","isBar","isResource","createItemMacro","macro","macros","Macro","displaySheet","assignHotbarMacro","createActionMacro","actionMacro","createSkillMacro","skillInfo","createSaveMacro","saveName","createMiscActorMacro","getBookLabel","isMelee","hideRollInfo","cm","isBlind","hideGMSensitiveInfo","getIdentifiedBlock","hasCombinedName","_templateCache","remove","each","removeData","fromJSON","unescape","nroll","escape","stringify","alterAmmoRecovery","ia","alterTargetDefense","defenseData","actorUUID","applyAccessibilitySettings","conf","hideInvisibleTargets","targetsElem","ready","once","targetElems","hasVisible","isVisible","isObserver","removeProperty","getTokenByUuid","addTargetCallbacks","_mouseEnterCallback","_onHoverIn","hoverOutOthers","_mouseLeaveCallback","_onHoverOut","_imageClickCallback","shiftKey","panToToken","release","control","releaseOthers","imgElem","targetACClick","targetSavingThrowClick","createInlineRollString","hide3d","toAnchor","outerHTML","animatePan","center","ActorPFProxy","Proxy","construct","ItemPFProxy","measureTemplateTypes","MeasuredTemplate","prepared","low","med","high","hybrid","prestige","sheetSections","filters","interface","subTypes","racialAbility","inventory","equip","implants","consumable","tradeGoods","features","classFeat","trait","racial","combatlite","catKey","sectKey","section","iface","slow","fast","wis","cha","nonaction","free","swift","immediate","move","standard","aoo","minute","hour","special","reaction","oh","na","ex","su","fine","tiny","sm","lg","huge","grg","col","tall","ng","cg","ln","tn","le","ne","ce","arrow","bolt","repeatingBolt","slingBullet","gunBullet","dragoonBullet","dart","siege","nonhumanoid","lgt","hvy","shl","twr","untyped","untypedPerm","dodge","inherent","deflection","morale","luck","sacred","insight","resist","profane","competence","circumstance","alchemical","defense","abilityChecks","acpA","acpS","mDexA","mDexS","strMod","dexMod","conMod","intMod","wisMod","chaMod","strPen","dexPen","conPen","intPen","wisPen","chaPen","unskills","carryMult","strSkills","dexSkills","conSkills","intSkills","wisSkills","chaSkills","allChecks","strChecks","dexChecks","conChecks","intChecks","wisChecks","chaChecks","landSpeed","climbSpeed","swimSpeed","burrowSpeed","flySpeed","allSpeeds","aac","sac","nac","tac","ffac","mattack","nattack","rattack","tattack","wdamage","mwdamage","rwdamage","twdamage","rdamage","mdamage","ndamage","sdamage","allSavingThrows","ffcmd","mhp","spellResist","bonusFeats","bonusSkillRanks","sorcerer","wizard","cleric","oracle","druid","shaman","witch","alchemist","bard","hunter","inquisitor","investigator","magus","mesmerist","occultist","skald","spiritualist","summoner","antipaladin","bloodrager","paladin","ranger","bleed","confuse","daze","dazzle","deathEffects","disease","fatigue","fear","mindAffecting","poison","sicken","paralyze","petrify","polymorph","stun","sleep","allAttack","hasteAttack","rapidShotAttack","allDamage","hasteDamage","rapidShotDamage","drug","rod","staff","meleeWeapon","meleeSpell","rangedWeapon","rangedSpell","aberration","animal","dragon","fey","magicalBeast","monstrousHumanoid","ooze","outsider","plant","undead","vermin","haunt","basic","trap","vehicle","personal","mi","spec","seeText","unlimited","turnStart","turnEnd","slotless","head","headband","eyes","shoulders","neck","chest","belt","wrists","hands","ring","feet","advanced","flurry","unflurry","clumsy","poor","average","perfect","arm","brain","ears","legs","spellsave","aboleth","abyssal","aklo","ancientosiriani","androffan","aquan","auran","azlanti","boggard","catfolk","celestial","common","cyclops","dark","draconic","drowsign","druidic","dwarven","dziriak","elven","giant","gnoll","gnome","goblin","grippli","halfling","hallit","ignan","infernal","jistka","kasatha","kelish","lashunta","munavri","necril","orc","orvian","osiriani","polyglot","protean","reptoid","rougarou","samsaran","sasquatch","shadowtongue","shoanti","sphinx","strix","sylvan","syrinx","taldane","tekritanin","tengu","terran","thassilonian","tien","treant","triaxian","undercommon","vanaran","varisian","vegepygmy","vishkanya","vudrani","yaddithian","day","week","tool","food","herb","adventuring","animalGear","reagent","remedy","treasure","entertainment","power","km","out","points","epic","bs","bse","ts","tr","acr","apr","art","blf","clm","crf","dip","dev","dis","esc","han","hea","kar","kdu","ken","kge","khi","klo","kna","kno","kpl","kre","lin","lor","prf","pro","rid","sen","slt","spl","ste","sur","swm","umd","acid","air","cold","curse","darkness","death","earth","electricity","fire","languageDependent","meditative","pain","ruse","shadow","sonic","water","abj","div","enc","evo","ill","nec","trs","uni","arcane","divine","alchemy","inst","turn","month","year","magic","faith","social","campaign","cosmic","exemplar","faction","family","mount","region","religion","drawback","space","land","sea","axes","bladesHeavy","bladesLight","bows","crossbows","double","firearms","flails","hammers","monk","polearms","siegeEngines","spears","thrown","tribal","simple","martial","ato","blc","brc","dea","dst","dbl","fin","frg","imp","mnk","rch","sct","sma","slf","snd","spc","thr","trp","exotic","publicroll","gmroll","blindroll","selfroll","BaseFilter","compendiumBrowser","registerIndexFields","handledTypes","choice","activeChoiceCount","indexField","compendiumIndexFields","setup","prepareChoices","hasChoices","applyFilter","TEMPLATE","activeCount","field","root","UMD","highlightCallback","cb","NULL","targetLen","indexes","_indexes","len","highlighted","matchI","indexesI","opened","char","substr","prepare","prepareLowerInfo","_targetLower","_lower","_targetLowerCodes","lowerCodes","_nextBeginningIndexes","_bitflags","bitflags","score","prepareSearch","search","spaceSearches","containsSpace","searches","_info","getPrepared","targetPrepared","preparedCache","getPreparedSearch","searchPrepared","preparedSearchCache","limit","INT_MAX","isObj","INT_MIN","objResults","keyI","algorithm","preparedSearch","allowSpaces","algorithmSpaces","searchLower","searchLowerCodes","searchLowerCode","targetLowerCodes","searchLen","searchI","targetI","matchesSimpleLen","matchesSimple","successStrict","matchesStrictLen","nextBeginningIndexes","prepareNextBeginningIndexes","backtrackCount","matchesStrict","substringIndex","isSubstring","isSubstringBeginning","matchesBest","matchesBestLen","extraMatchGroupCount","uniqueBeginningIndexes","seen_indexes","first_seen_index_last_search","allowSpacesResult","strLen","lower","lowerCode","charCodeAt","beginningIndexes","beginningIndexesLen","wasUpper","wasAlphanum","targetCode","isUpper","isAlphanum","isBeginning","prepareBeginningIndexes","lastIsBeginning","lastIsBeginningI","defaultScoreFn","segs","noResults","q","poll","peek","replaceTop","searchBitflags","go","resultsLen","limitedCount","targetsLen","scoreFn","keysLen","highlight","hOpen","hClose","matchesIndex","cleanup","clear","exports","module","CompendiumBrowser","expandedFilters","_query","_loadingInfo","_debouncedRender","debounce","resizable","scrollY","dragDrop","dragSelector","dropSelector","initializeBrowsers","compendiumClasses","ItemBrowser","FeatBrowser","SpellBrowser","ClassBrowser","RaceBrowser","CreatureBrowser","BuffBrowser","getIndexes","packNames","resultPromise","indexingPromises","getIndex","finally","_mapEntry","__pack","__packLabel","__uuid","getUuid","__name","fuzzysort","normalize","_renderEntries","ENTRY_TEMPLATE","typeName","filterClasses","isPackIncluded","indexCount","entryCount","visible","unorderedEntries","loadPackIndex","flat","indexed","getFilteredEntries","activeFilters","selectionStart","input","selectionEnd","query","_entries","itemCount","filteredItemCount","loading","loadingInfo","_initLazyScrolling","filterContent","filterId","_onClickEntry","_onReload","_onClearFilters","_onFilterHeaderClick","_onCustomSearchFilter","ContextMenu","_getEntryContextOptions","locked","canUserCreate","collections","importFromCompendium","clipboard","copyPlainText","_canDragStart","_onDragStart","dataTransfer","setData","setTimeout","_event","filterContents","listEnd","IntersectionObserver","observer","isIntersecting","currentCount","newEntries","unobserve","newHtml","insertAdjacentHTML","_dragDrop","rootMargin","observe","ActorTraitSelector","DocumentSheet","splitCustom","replaceAll","chosen","updateButton","_updateDocument","_onSubmit","preventRender","appId","_onCustomInput","_onActiveCustomInput","isComposing","last","customTag","_deleteCustomTag","customInput","Registry","_defaultData","namespace","unregister","registryObject","RegistryEntry","ObjectField","schema","DamageType","abbr","FilePathField","DamageTypes","CATEGORIES","MaterialType","baseMaterial","lightBlade","oneHandBlade","twoHandBlade","buckler","asf","healthMultiplier","perPound","ammunition","lightWeapon","oneHandWeapon","twoHandWeapon","rangedOneHandWeapon","rangedTwoHandWeapon","bonusPerPound","MaterialTypes","DamageTypeSelector","damageCategorySortOrder","sortOrder","damageModifiers","dm","damageCategories","categoryObj","o2","idxA","idxB","_toggleDamageType","_onChangeData","dataPath","ActorResistanceSelector","isDR","originalEntries","damageOBJ","dType","operators","dtypes","dataCount","_onResistanceControl","_onResistanceChange","_onResistanceCustomChange","index2","updateValue","ActorRestDialog","PointBuyCalculator","actorAbl","ablValues","abilityCost","usedPoints","getSpentPoints","pointBuy","limitsArr","ldata","limits","invalidPoints","_onAbilityControl","Widget_ItemPicker","columns","_items","parentElem","rootElem","parseHTML","rowElem","itemElem","widthRate","offsetLeft","offsetBottom","_onClickItem","_cancelCallback","_onCancel","node","parentNode","cancel","attr","removeEventListener","LevelUpForm","simulacra","mold","unavailable","abilityScore","useBackgroundSkills","isMythic","levelUp","upgrades","added","isEnhanced","isNull","isValid","isAvailable","isModified","hasPlayerOwner","DICE_ROLL_MODES","PRIVATE","_initData","_initChoices","isLevelUp","isNewClass","increaseLevel","addClassWizard","_prepareAssociations","assocs","hpOptions","icons","ICONS","visibilityOptions","messageVisibility","levelAbilityScores","delta","ranks","adv","next","_getNextAbilityScoreLandmark","isReady","gained","_getDefaultHealthOption","_getDefaultHitPoints","_prepareHealthData","hpConf","clsConf","newHD","oldHD","hpAbl","hpMod","cfg","isFavouredClass","getLevelData","totalHD","oldSaves","newSaves","bg","tempActor","isMindless","advSkillRanks","bgSkillRanks","perLevel","skillsPerLevel","backgroundSkillClasses","bgranks","backgroundSkillsPerLevel","_onClickAbilityScoreOperator","_openItemSheet","_onCommit","_onSkip","itemUuid","_adjustAbilityScore","abls","_initFCBChoices","_initHPChoices","maxLeft","_getHealthFormula","dieSize","_spoofHealthRoll","_getHealthRoll","_disableSheet","cardData","newFeatures","hpValue","fcKey","oldFeatCount","ablUpdate","_updateAbilityScore","featCount","createChatMessage","cursor","prevValue","levelAbilityScoreFeature","OOC","SELF","altCurrency","notification","order","_curRange","_calcTotal","trigger","_options","formField","amounts","_failed","i18nKey","_directoryDrop","docDestId","getDragEventData","destDoc","actorUuid","containerId","sourceDoc","allowConversion","sourceCurrency","destCurrency","originalSource","assign","totalAmount","totalSource","newSource","socket","emit","minRequired","inCopper","ActorSheetPF","_filters","sections","searchCompositioning","searchRefresh","searchDelay","searchDelayEvent","effectiveSearch","_itemUpdates","_hiddenElems","_skillsLocked","_expandedItems","currentPrimaryTab","_tabs","currentSpellbookKey","isMetricDist","owner","isEditable","isCharacter","hasHD","usesAnySpellbook","sourceData","skillsLocked","tactical","unchainedActions","inCharacterGeneration","hasProficiencies","numAttacks","iters","fromRange","hasCurrency","hasAltCurrency","enrichHTMLOptions","bio","biography","pBio","biographyHTML","pNotes","_prepareItem","sizeModifier","baseBonus","meleeAbility","rangedAbility","genericAttacks","calculateTotalItemValue","totalLabel","arbitrary","untrained","issues","_prepareSenseLabels","_prepareItems","_prepareSkillsets","_prepareSkills","_prepareHiddenElements","hiddenElems","magicItems","strength","auraStrengths","identifyDC","firstClass","inheritedEffects","appliedEffects","cond","inherited","hasResource","hasUses","_canShowRange","attackSummary","isStack","destroyed","empty","selected","customSource","svalue","_prepareSpellbook","usesSlots","canPrepare","lvl","sets","adventure","localeCompare","backgroundOnlySkills","skillsets","useBGSkills","skillRanks","bgAllowed","bgUsed","sentToBG","load","carryLabel","kg","lbs","pct","encumbered","aboveHead","offGround","dragPush","_moveTooltips","filterLists","_initializeFilterItemList","_onToggleFilter","_searchFilterChange","_searchFilterCompositioning","_clearSearch","_onItemSummary","_onItemEdit","contextmenu","_hideShowElement","_onOpenCompendiumEntry","_onOpenCompendiumBrowser","_onSpanTextInput","_adjustActorPropertyBySpan","_onInputText","_selectOnClick","_onRollAbilityTest","_onRollBAB","_onRollAttack","_onRollInitiative","_onRollSavingThrow","_onArbitrarySkillCreate","_onSkillCreate","_onSkillEdit","_onSkillDelete","_itemActivationControl","_onRollSkillCheck","_onTraitSelector","_onResistanceSelector","_onRest","_onPointBuyCalculator","_onControlAlignment","_onSensesSelector","_onItemCreate","_onItemDelete","_onItemGive","_onItemSplit","_onItemRoll","_quickChangeItemQuantity","_quickEquipItem","_quickCarryItem","_quickIdentifyItem","_itemPreparedToggle","_duplicateItem","_quickAction","_convertCurrency","_setFeatUses","el0","activate","direction","TooltipManager","TOOLTIP_DIRECTIONS","LEFT","deactivate","_onLevelUp","_setSpellUses","_setMaxSpellUses","_onRollConcentration","_onRollCL","_setItemActive","_setBuffLevel","_onToggleCondition","_onEditCondition","_onToggleSkillLock","_activateExtendedTooltip","tooltipExtended","_getTooltipContext","list","paths","tooltipDirection","fullId","lazy","getSource","getNotes","noteObjs","subHeader","detail","tD","tB","tR","tU","oD","oU","asfSources","itemASF","implant","isBoolean","signed","formatter","actionDamage","strict","dmgSources","mu","featSources","skillSources","isBG","fcSkills","fullSkillId","mainId","parentElement","isNumber","newEl","noCap","endsWith","maxName","step","forbiddenClasses","allowRelative","replaceChild","readOnly","select","tip","cssText","_onDragSkillStart","skillElem","mainSkill","_onDragMiscStart","tab","_onDragSaveStart","_i","ul","_mouseWheelAdd","isInput","WheelEvent","ctrlKey","wheelStep","MouseEvent","setItemUpdate","_updateItems","oldEl","toNearest","_getSubmitData","for","hasClass","slideDown","slideUp","relevantAEs","bottom","dialog","getNumber","updatedata","openItemSummary","instant","summary","origValue","wheelEvent","handler","getSelection","anchorNode","removeAllRanges","keyHandler","parents","mainSkillData","_editSkill","isBackground","baseName","baseTag","SkillEditor","addCallback","deleteSkill","confirm","yes","rejectClose","SensesSelector","alignmentsShort","curQuantity","property","_prepareDuplicateItem","rename","searchUnusedName","newName","iter","currencyType","categoryId","sectionId","typeLabels","_sortNewItem","oldItems","_isItemSameSubGroup","names","no","targetActorId","getActor","SplitStack","keep","savingthrow","_applySectionFilter","hasASF","hasSpellbooks","spellbookSections","spellbookSpells","lang","_0","_1","ct","cat","featureSections","ablType","typelabel","found","discrepancy","buffSections","attackSections","classSections","_hidden","spellbookData","quickActions","_searchFilterCommit","prev","clearTimeout","blur","_createPlaceholders","_renderInner","preventClose","_onDropCurrency","_onDropItem","sourceItem","fromDropData","keepId","clearSort","_onSortItem","altKey","_alterDropItemData","_onDropItemCreate","fromActor","fromItemsDir","item0","item1","itemDatas","creationData","appOptions","specifier","clsId","ItemSelector","resultData","usedSpellbooks","_focusTabByItem","tabId","activateTab","isAlt","denomination","dragData","cr","elems","changedData","nodeName","selectedIndex","calculateSellItemValue","sellMultiplier","placeholder","ActorSheetPFBasic","ActorSheetPFCharacter","xpSettings","disableExperience","showXpBar","minimumExperience","hasClasses","hpSettings","xp","xpTrack","CHARACTER_EXP_LEVELS","ActorSheetPFNPC","_adjustCR","ActorSheetPFNPCLite","ActorSheetPFNPCLoot","itemValueDenomination","isLootSheet","baseCurrency","cpSellValue","noEquip","ActorSheetPFHaunt","ActorSheetPFTrap","ActorSheetPFVehicle","vehicleSizes","vehicles","convertibleKeys","convertDistanceBack","SpeedEditor","movementKeys","Widget_CategorizedItemPicker","_onClickCategory","first","scrollIntoView","block","ItemSheetPF","ItemSheet","_actionUpdates","itemType","canClassLink","hasClassLink","classData","hitDieSizes","wealth","inheritCharges","defaultChargeFormula","limitedUsePeriods","isRechargeable","isNaturalAttack","isImplant","showBothDescriptions","showIdentifiedData","unchainedActionEconomy","identify","strengthLabel","spellcasting","hasSpellbook","descriptionAttributes","decimals","constraints","fakeValue","inputValue","fakeName","isRange","disableEquipping","isClassFeature","isTemplate","skillIdata","classSkill","materialCategories","_prepareMaterialsAndAddons","alignmentTypes","_prepareAlignments","weaponCategories","equipmentCategories","hasMultipleSlots","hasSubCategory","topDescription","isCybertech","isSpontaneousLike","isPreparedSpell","isAtWill","spellbookChoices","n0","n1","DF","MDF","FDF","noDurationTiming","isMythicPath","favouredClassBonuses","isBaselikeClass","isRacialHD","isNPCClass","isPCClass","hasSpellType","canUseAmmo","invalidDefaultAmmo","showPriority","ch","chData","isAdd","isSet","isValidType","changePriority","noteTargets","distanceUnit","_prepareContentSource","descriptionHTML","pIdentDesc","unidentDesc","pUnidentDesc","pTopDesc","pScripts","pLinks","_prepareLinks","_getContentSources","main","_selectContentSource","bookSources","extras","datestamp","publisher","date","edition","itemSubtype","chosenMaterial","materialList","addonList","basicList","_isMaterialAllowed","addons","basics","alignmentChoices","help","oldLinks","typedLinks","wmult","convertWeightBack","relativeKeys","setCustomValidity","_onHoverTooltip","tooltipType","_onHoverWeightTooltip","_onHoverPriceTooltip","mValue","inline","_validateFormula","hasActor","RIGHT","mousemove","_onActionEdit","_onActionSummary","_onActionControl","_openHelpBrowser","_onEntrySelector","ContentSourceEditor","indeterminate","_onScriptCallEdit","_onScriptCallControl","_openLinkedItem","_onTextAreaDrop","_onCreateChange","_onOpenChangeMenu","_onNoteControl","_onNoteTargetControl","_createAttack","_createSpellbook","_onCardNoteControl","_onItemSelector","_onLinkControl","_onSpeedEdit","_setActionUses","_onOpenCompendium","_onScriptCallDrop","setActionUpdate","_updateActions","actionTarget","script","newScripts","edit","eventData","getContentLink","helpBrowser","openUrl","pf1Link","_canDragDrop","_onDrop","srcItem","targetActionID","prevActions","targetIdx","srcIdx","targetChangeId","removed","_onLinksDrop","oldApp","getUniqueActionName","_onDuplicateChange","_onDeleteChange","_onEditChange","dismissLockedTooltip","ChangeEditor","noteIndex","sortable","part1","EntrySelector","ItemSheetPF_Container","_prepareContents","coinage","merge","DEFAULT_TOKEN","itemQuantity","itemCharges","_openItemSummary","animation","_onItemTake","_quickItemActionControl","_setItemUses","nextElementSibling","dropTarget","targetId","siblings","siblingId","SortingHelpers","performIntegerSort","ItemCreateDialog","_updateCreationData","initialData","getSubtypes","folders","displayed","key0","label0","key1","label1","defaultName","folder","hasFolders","_createItem","defaultType","documentTypes","stopImmediatePropagation","promise","canCrit","hasCritDamage","hasNonCritDamage","chargedUsePeriods","showMaxChargeFormula","canInputRange","canInputMinRange","canInputDuration","itemName","itemEnh","usesSpellPoints","parentOwned","hasActivationType","showMaxRangeIncrements","isWeaponAttack","inheritedAmmoType","inheritedMisfire","minRangeAvailable","subTargets","conditionalModifierTypes","conditionalCritical","inheritedHeld","weaponHoldTypes","heldAbilityMultiplier","paMultiplier","extraAttacksTypes","extraAttacksConfig","allowCustom","_onEditImage","_onAttackControl","_onDamageControl","_onClickDamageType","_onNoteEntryControl","_onConditionalControl","_onAlignmentChecked","ItemConditionalModifier","k3","damageParts","damagePart","clickedElement","conditionalElement","modifierElement","manualExtraAttacks","attackPart","FilePicker","browse","previousValue","reResult","conditionalIdx","modifierIdx","CheckboxFilter","baseFilter.BaseFilter","booleanOperator","BOOLEAN_OPERATOR","_choiceQuery","_debouncedFilterChoices","getChoicesFromConfig","configObject","labelKey","innerSet","innerKey","innerValue","hasControls","MIN_SEARCH_CHOICES","hasSearch","prepareBooleanOperator","fieldData","AND","observedValues","flatMap","toggleChoice","activeChoices","testMethod","OR","choiceQuery","choiceKey","SearchFilter","cleanQuery","matchingChoices","choiceSet","NumberRangeFilter","ItemTypeFilter","WeaponTypeFilter","WeaponSubtypeFilter","WeaponPropertyFilter","WeaponGroupFilter","EquipmentTypeFilter","EquipmentSubtypeFilter","ItemSlotFilter","ConsumableTypeFilter","MiscItemTypeFilter","ItemPriceFilter","ItemCasterLevelFilter","PackFilter","usedPacks","orderedPacks","TagFilter","SpellSchoolFilter","SpellSubSchoolFilter","SpellDescriptorFilter","SpellLearnedByClassFilter","SpellLearnedByDomainFilter","SpellLearnedBySubdomainFilter","SpellLearnedByBloodlineFilter","SpellLevelFilter","activeLearnedAtFilters","activeLevelChoices","learnedAtChoice","learnedAtLevel","levelChoice","FeatTypeFilter","FeatClassFilter","ClassTypeFilter","ClassHitDieFilter","ClassBaseAttackBonusFilter","ClassSkillPointsFilter","ClassSavingThrowFilter","noneFilterResult","ClassFortitudeFilter","ClassReflexFilter","ClassWillFilter","CreatureTypeFilter","creatureTypes","CreatureSubTypeFilter","BuffTypeFilter","CreatureCRFilter","commonFilters.PackFilter","buffFilters.BuffTypeFilter","commonFilters.TagFilter","classFilters.ClassTypeFilter","classFilters.ClassHitDieFilter","classFilters.ClassBaseAttackBonusFilter","classFilters.ClassSkillPointsFilter","classFilters.ClassFortitudeFilter","classFilters.ClassReflexFilter","classFilters.ClassWillFilter","creatureFilters.CreatureCRFilter","featFilter.FeatTypeFilter","featFilter.FeatClassFilter","itemFilters.ItemTypeFilter","itemFilters.WeaponTypeFilter","itemFilters.WeaponSubtypeFilter","itemFilters.WeaponPropertyFilter","itemFilters.WeaponGroupFilter","itemFilters.EquipmentTypeFilter","itemFilters.EquipmentSubtypeFilter","itemFilters.ItemSlotFilter","itemFilters.ConsumableTypeFilter","itemFilters.MiscItemTypeFilter","itemFilters.ItemPriceFilter","itemFilters.ItemCasterLevelFilter","equipmentSubtypes","raceFilters.CreatureTypeFilter","raceFilters.CreatureSubTypeFilter","spellFilter.SpellSchoolFilter","spellFilter.SpellSubSchoolFilter","spellFilter.SpellDescriptorFilter","spellFilter.SpellLearnedByClassFilter","spellFilter.SpellLearnedByDomainFilter","spellFilter.SpellLearnedBySubdomainFilter","spellFilter.SpellLearnedByBloodlineFilter","spellFilter.SpellLevelFilter","typeString","learnedAtData","learnedAtLevels","learnedAtSource","_onClickAction","initAmmoUsage","initAttacks","isPrimaryAttack","_toggleExtraAttack","hasDamageAbility","isMeleeWeaponAttackAction","isRangedWeaponAttackAction","isWeapon","isFeat","canConfigureHeld","_onToggleFlag","_onChangeAttribute","_onSelectChange","_onToggleConditional","_onAmmoSelectClick","_onAmmoControlClick","_onAmmoClick","_unfocusElements","_hideExtraAttacks","_showExtraAttacks","resolveAttack","cancelable","translationString","setAttackAmmo","listElem","unsetFlag","attackBonusTotal","curAmmo","ChangeLogWindow","lastVersion","dontShowAgain","xhr","XMLHttpRequest","onload","changelog","_processChangelog","response","send","md","converter","showdown","Converter","lines","makeHtml","subtitle","isFlag","isFlat","_onEntryControl","_onEntryChange","newKeys","_onSaveSelection","HelpBrowserPF","_backwardHistory","_forwardHistory","_currentPage","extensions","defaultExtensions","noHeaderId","ghCompatibleHeaderId","prefixHeaderId","minWidth","minHeight","currentUrl","hasHistoryBack","hasHistoryForward","pageContent","isHome","getCurrentHistoryObject","contentElement","scrollTop","headerElement","getElementById","backInHistory","forwardInHistory","href","removeAttribute","regex","_offset","_string","foundrySrc","getRoute","_match","blockName","slugify","ScriptEditor","_promises","awaitResult","resolved","resolvePromises","convertKeys","isMetric","noSystemVision","gridUnits","_callbacks","skillName","isStaticSkill","skillTag","documentType","skillCoreUpdateData","newData","oldSubSkillId","oldSkillId","tagChanged","msgOpts","documentClass","_openCompendiumEntry","_onCompendiumControls","reportValidity","canAdd","stub","_onAction","prompt","sidx","dropData","_onDropContentSource","dropIndex","moved","osrc","ExperienceDistributor","_bonusXP","_actors","getActorData","characters","getCharacters","npcs","getNPCs","getTotalExperience","getSplitExperience","bonusXP","addListener","_onClickActor","actorID","reward","_shouldActorBeSelected","xpString","toLocaleString","fromCombat","_createDocumentIdLink","idLink","isValidOp","_onChangeTargetControl","ItemDirectoryPF","ItemDirectory","renderUpdateKeys","SidebarTab","Troubleshooter","unlock","migrating","world","unlockPacks","report","kb","discord","channel","faq","helpmodule","_runMigration","migrateWorld","migrateModules","_openHelp","migrationButtons","ActorSelector","delay","compositioning","disableUnowned","ownership","showUnowned","searchOptions","gmActive","actorList","ownedActors","isDisabled","unownedActors","searchTerm","splitValue","valueAsNumber","slider","oldstack","newstack","newval","ActiveEffectPF","isTracker","isSuppressed","isTemporary","turns","addCombatTrackerContextOptions","menuItems","duplicateCombatantInitiativeDialog","combatantId","duplicateWithData","CombatPF","Combat","updateTurn","messageOptions","currentId","firstCombatant","rollerName","showInitiativeDialog","stop","getInitiativeRoll","_onNewTurn","_isForwardTime","skipped","_detectSkippedTurns","_handleSkippedTurns","_processEndTurn","_processTurnStart","_processInitiative","r0","t1","rd","roundChange","currentTurn","advanceTime","turnTimeOffset","started","xpCfg","CombatantPF","Combatant","updateResource","resource","_getInitiativeFormula","defaultParts","getLeftRight","SHIFT_KEYS","CTRL_KEYS","registerSystemControls","keybindings","uneditable","onDown","onUp","forceShowItem","controls","_hideTokenTooltip","_hideTokenTooltipGMInfo","_stickyTokenTooltip","keyDown","stickify","TokenDocumentPF","_preCreateSetSize","deleteFlags","sizeConf","getTrackedAttributes","getBarAttribute","barName","alternative","detectionModes","sight","visionMode","basicMode","DetectionMode","BASIC_MODE_ID","darkvision","trueseeing","trr","_sortDetectionModes","visionDefaults","Canvas","visionModes","vision","defaults","fieldName","PRIORITY","BasicActorPF","ActorCharacterPF","tokenUpdate","actorLink","_updateExp","xpData","totalXP","maxExp","curXp","ActorNPCPF","getCR","_prepareCR","newXP","crTotal","getCRExp","crOffset","CR_EXP_LEVELS","ActorHauntPF","prepareHealth","ActorTrapPF","ActorVehiclePF","strValue","PF1TextEnricher","pattern","enricher","global","setIcon","prepend","draggable","setElementOptions","getRelevantActors","tokenActors","generateTooltip","option","onSave","onAbility","onSkill","onUse","itemAction","actionTag","onAction","msgId","onHealth","onBrowse","browser","onCondition","onApply","enrichers","replaceChildren","displayAction","NL","mainlabel","onEnrichedInteraction","withinAngle","normalizeDegrees","withinRect","point","rect","TemplateLayerPF","TemplateLayer","_onDragLeftMove","interaction","interactionData","destination","layerDragState","snapToGrid","grid","getSnappedPosition","gridPrecision","ratio","baseDistance","baseDirection","toDegrees","angle","halfAngle","renderFlags","refreshShape","MeasuredTemplatePF","getHighlightedSquares","_getGridHighlightPositions","templateType","isCone","isRay","gridSizePxBase","gridSizePx","gridSizeUnits","docAngle","line","x0","y0","x1","y1","sx","sy","e2","fromAngle","A","B","nr","nc","cx","cy","getCenter","col0","row0","getGridPositionFromPixels","minAngle","maxAngle","offsetMult","dir","cos","toRadians","sin","gx","gy","getPixelsFromGridPosition","rayAngle","PI","shape","ticker","addOnce","PIXI","UPDATE_PRIORITY","LOW","tCenter","maxDistance","sizeErrorMargin","isLargeToken","withinCone","rayWithinAngle","raySceneLength","getOccupiedCells","GRID_TYPES","GRIDLESS","mapCoordsToCell","highlightSquares","cell","highlightGrid","SQUARE","bc","borderColor","fillColor","hl","getHighlightLayer","highlightGridPosition","border","highlightId","rangeColor","multiply","reachColor","SquareHighlight","_squares","addHighlightLayer","addSquare","gridSize","AttackHighlightBase","clearHighlight","renderHighlight","GridlessHighlight","rangeStops","tw","th","rangeKey","rangeMeasurements","rangeIncrements","tokenOffset","removeChildren","circle","Graphics","stops","outer","beginFill","drawCircle","beginHole","endHole","endFill","addChild","SquareGridHighlight","currentHighlight","isFeet","squares","useReachRule","getReachSquares","ftDistance","userLimit","maxSquareRange","squaresExtra","gridDist","tokenSquares","tokenRect","getClosestTokenSquare","lowest","square","sqrt","squareRange","wMax","hMax","tl","closestSquare","shouldAddReachSquare","closestTokenSquare","dist2","reachRuleRange","attackReachHighlight","showAttackReach","addReachListeners","_onMouseEnterReach","_onMouseLeaveReach","_getTokenByUuid","TokenPF","effectId","disableLowLight","_isVisionSource","hasSight","guarantee","layer","_getBarBoost","_getBarUnderline","_drawBar","bar","boost","underline","boostlessMax","boostlessPct","fromRGBvalues","lineStyle","drawRoundedRect","posY","wr","hr","isSquare","TokenQuickActions","addQuickActions","activateElementListeners","after","DetectionModeInvisibilityPF","DetectionModeInvisibility","_testPoint","visionSource","_testLOS","_testRange","lightSource","lightSources","DetectionModeBlindSensePF","DETECTION_TYPES","walls","getDetectionFilter","_detectionFilter","OutlineOverlayFilter","outlineColor","knockout","wave","ID","_canDetect","DetectionModeBlindSightPF","DetectionModeTremorPF","DetectionModeTremor","MOVE","lighting","VisionMode","LIGHTING_LEVELS","DIM","originalAngle","initialLayer","activeLayer","draw","activatePreviewListeners","handlers","pfStyle","_clear","destroy","throttleRefresh","throttle","timeoutId","RENDER_THROTTLE","mm","getLocalPosition","rc","canResolve","stage","lc","snap","controlIcon","removeAllListeners","hitArea","Polygon","maxArgs","isIntermediate","fromTerms","RealStringTerm","BooleanTerm","NullTerm","UndefinedTerm","IfElseTerm","ifTrue","ifFalse","rollOpts","IfTerm","LookupTerm","lookupResult","evalOffset","searchRoll","SizeReachTerm","noRoll","sizeDice","sizeReach","SizeRollTerm","sizeRoll","newConditionalData","_prepareModifiers","newConditionalModifierData","flattenObject","duplicate","newScriptCallData","getScriptBody","getDelegate","rawChange","scriptEditor","scm","registerHandlebarsHelpers","registerHelper","rng","combine","typeInfo","dtId","SafeString","limitPrecision","dialogGetActor","dialogGetNumber","num","getItem","largestType","copper","unflair","compress","isSimpleTerm","FormulaPart","triTermOps","simpleOnly","eterms","right","TernaryTerm","handleFormula","newformula","handleParts","dmgAbl","ablMax","dmgAblBaseMod","ablDmgMult","dmgAblMod","semiFinal","negativeTerms","nterms","nt","stringTerms","ternaryTerms","tterms","origCount","origSides","targetSize","initialSize","_getSizeIndex","currentDie","sizeDie","shifted","sides","d6Index","d8Index","sizeOffset","curSize","sys","docType","fuzzyIndex","filteredIndex","it","searchMutations","mut","getActors","unlinked","User","testUsers","sceneList","Scene","isLinked","compareVersion","align","neutral","renderForEveryone","resetOrRender","Document","ScriptCallCategory","ArrayField","ScriptCalls","Condition","Conditions","TRACKS","SET_TO_ZERO","conditionsInTrack","URLField","_validateType","DateField","Source","optionalString","pages","isbn","tieIn","legacy","Sources","companion","MigrationCategory","processed","invalid","errors","ignored","completed","startEntry","actionState","processing","finishEntry","recordError","ignoreEntry","addIgnored","setTotal","setInvalid","finish","currentName","CompendiumCollection","getInvalidEntries","invalidDocumentIds","getInvalid","getErrorEntries","MigrationState","callbacks","createCategory","mc","MigrationIssuesDialog","MigrationDialog","autoClose","_onMigration","_onClickForDetails","_state","RENDER_STATES","RENDERING","_queueRender","marker","initializeStateAndDialog","migrateActors","noHooks","localState","tracker","migrateActorData","migrateItems","migrateItemData","migrateScenes","migrateScene","migrateCompendiums","packIds","migrateCompendium","clearCoreMessages","queue","fetch","wasLocked","migrate","getDocuments","migrateTokenData","tokenData","lowLightVision","lowLightVisionMultiplier","lowLightVisionMultiplierBright","customVisionRules","migrateToken","migrateActiveEffectsToItems","_migrateCharacterLevel","_migrateActorEncumbrance","_migrateActorNoteArrays","_migrateActorSpeed","_migrateActorSpellbookCL","_migrateActorSpellbookSlots","_migrateActorSpellbookPrep","wasSpontaneous","usesAuto","_migrateActorSpellbookKind","castingClass","_migrateActorConcentration","_migrateActorBaseStats","_migrateUnusedActorCreatureType","_migrateActorSpellbookDCFormula","_migrateActorHPAbility","_migrateActorCR","_migrateAttackAbility","_migrateActorDefenseAbility","_migrateActorSpellbookUsage","_migrateActorNullValues","_migrateActorSpellbookDomainSlots","_migrateActorStatures","_migrateActorProficiencies","_migrateActorInitAbility","_migrateActorChangeRevamp","_migrateActorCMBRevamp","_migrateCarryBonus","_migrateBuggedValues","_migrateSpellbookUsage","_migrateActorHP","_migrateActorSenses","_migrateActorInvaliddSkills","_migrateActorSkillRanks","_migrateActorSkillJournals","_migrateActorSubskillData","_migrateActorUnusedData","_migrateActorDRandER","_migrateActorTraitsCustomToArray","_migrateActorFlags","itemDoc","_migrateActorActiveEffects","_depth","_migrateItemArrayTypes","_migrateFlagsArrayToObject","_migrateWeaponImprovised","_migrateItemSpellDescription","_migrateClassDynamics","_migrateClassType","_migrateClassCasting","_migrateSpellDivineFocus","_migrateWeaponCategories","_migrateArmorCategories","_migrateArmorMaxDex","_migrateItemSize","_migrateItemFeatAbilityTypes","_migrateClassLevels","_migrateSavingThrowTypes","_migrateCR","_migrateItemChanges","_migrateItemChangeFlags","_migrateItemContextNotes","_migrateEquipmentSize","_migrateSpellCosts","_migrateSpellPreparation","prepMode","_migrateLootEquip","_migrateItemLinks","_migrateItemProficiencies","_migrateItemNotes","_migrateScriptCalls","_migrateItemActions","_migrateItemChargeCost","_migrateItemLimitedUses","_migrateItemWeight","_migrateItemHealth","_migrateContainerReduction","_migrateContainerPrice","_migrateItemType","_migrateItemLearnedAt","_migrateItemTuples","_migrateEquipmentCategories","_migrateSpellDescriptors","_migrateItemTraitsCustomToArray","_migrateItemMaterials","_migrateItemUnusedData","itemActionData","migrateItemActionData","diffObject","inventoryItems","sitem","subItem","itemUpdateData","subUpdate","migrateContainerItems","_migrateActionType","_migrateActionLimitedUses","_migrateActionRange","_migrateActionDamageParts","_migrateUnchainedActionEconomy","_migrateActionDamageType","_migrateActionConditionals","_migrateActionEnhOverride","_migrateActionPrimaryAttack","_migrateActionChargeUsage","_migrateActionExtraAttacks","_migrateActionAmmunitionUsage","_migrateActionHarmlessSpell","_migrateActionSpellArea","_migrateActionTemplate","_migrateActionDuration","_migrateActionMaterials","_migrateActionObsoleteTypes","_migrateActionUnusedData","migrateSceneTokens","migrateSceneActors","ent","updateKey","bflags","dflags","spellbookSlot","baseKey","maxKey","newBase","kList","curBase","curFormula","oldValue","isString","formulaKey","shortDescription","stKeys","weaponType","changeProp","two","oldType","exists","wdSize","newChanges","newChange","cd","oldChanges","updateChanges","oldNotes","newNotes","oldNote","newNote","updateNotes","noEncumbrance","autoDeduct","unchainedAction","newLink","muuid","_index","hiddenLinks","wprofmap","sim","mar","oldKeys","nwprof","hasOldAction","alreadyHasActions","removeKeys","spellDuration","oldSpellPointCostFormula","learned","spellArea","customColor","overrideColor","customTexture","overrideTexture","tg","ma","attackParts","formulaicAttacks","templateSize","durVal","damageGroupPaths","damageGroupPath","damageGroup","damageTypeData","_Action_ConvertDamageType","wprofs","nwprofs","subPath","sklData","subSklData","convertToInt","oldSenses","brightSight","reOldJournalFormat","subSkillData","oldDR","oldER","visionPermission","mapping","uid","damageTypeString","damageTypeList","tests","damageTest","testString","basePrice","priceUnits","identifiedName","weaponData","useCustomTag","aeUpdate","migrateActiveEffectData","getNewRelativeOrigin","newOrigin","originFlag","migrateActor","migrateItem","migrateSceneData","migrateSystem","systemPacks","startMessage","smsgId","permanent","_migrateWorldSettings","tooltipWorldConfig","hideActorName","globalThis","moduleToObject","_canvas","PF1CONST","opts","dice.RollPF","layers","layerClass","_canvas.TemplateLayerPF","objectClass","_canvas.MeasuredTemplatePF","_canvas.TokenPF","documents.actor.ActorCharacterPF","documents.actor.ActorNPCPF","documents.actor.ActorHauntPF","documents.actor.ActorTrapPF","documents.actor.ActorVehiclePF","documents.actor.BasicActorPF","documents.item.ItemAttackPF","documents.item.ItemBuffPF","documents.item.ItemClassPF","documents.item.ItemConsumablePF","documents.item.ItemContainerPF","documents.item.ItemEquipmentPF","documents.item.ItemFeatPF","documents.item.ItemLootPF","documents.item.ItemRacePF","documents.item.ItemSpellPF","documents.item.ItemWeaponPF","documents.item.ItemImplantPF","documents.TokenDocumentPF","documents.ActiveEffectPF","legacyTransferral","documents.CombatPF","documents.CombatantPF","documents.ChatMessagePF","applications.ItemDirectoryPF","dice.terms.fn","termTypes","dice.terms.aux","dice.D20RollPF","dice.DamageRoll","bonusModifiers","stackingBonusModifiers","setDefaultSceneScaling","gridDistance","Actors","unregisterSheet","registerSheet","applications.actor.ActorSheetPFCharacter","makeDefault","applications.actor.ActorSheetPFNPC","applications.actor.ActorSheetPFNPCLite","applications.actor.ActorSheetPFNPCLoot","applications.actor.ActorSheetPFHaunt","applications.actor.ActorSheetPFTrap","applications.actor.ActorSheetPFVehicle","applications.actor.ActorSheetPFBasic","Items","applications.item.ItemSheetPF","applications.item.ItemSheetPF_Container","LABEL","DETECTION_TYPE","SIGHT","initializeSocket","initializeModuleIntegration","integration","SpeedProvider","registerSystem","Pf1SpeedProvider","colors","getRanges","baseSpeed","getBaseSpeed","inHeavyArmor","inHeavyLoad","runMultiplier","useElevation","getSetting","elevation","burrow","registries","registry.DamageTypes","registry.MaterialTypes","registry.ScriptCalls","registry.Conditions","registry.Sources","registryName","registryClass","getConditions","SquareGrid","toLocalize","toLocalizeConst","toSort","doLocalize","localized","akey","aval","bkey","bval","localA","localB","doLocalizeKeys","localizeLabels","doLocalizePaths","ttconf","ttwconf","PREVIOUS_MIGRATION_VERSION","documents.settings.migrateSystemSettings","changelogVersion","curVersion","chatUtils.hideRollInfo","chatUtils.hideGMSensitiveInfo","chatUtils.addTargetCallbacks","chatUtils.alterTargetDefense","chatUtils.alterAmmoRecovery","documents.item.ItemPF","documents.actor.ActorPF","_canvas.attackReach.addReachListeners","_canvas.lowLightVision.addLowLightVisionToLightConfig","documents.customRolls","applications.CurrencyTransfer","macros.createItemMacro","macros.createActionMacro","macros.createSkillMacro","macros.createSaveMacro","macros.createMiscActorMacro","sizingTemplateData","sizeContent","systemVision","visionTab","enableCustomVision","toggleCustomVision","dmTab","visionContent","Settings","chlogButton","helpButton","tshooterButton","applications.ChangeLogWindow","expireFromTokens"],"mappings":"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CA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,KACA,MACA,OAEFh5E,OAAQ,CACN,EACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,MACA,MAEFi5E,KAAM,CACJ,EACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,MACA,MACA,KACA,MACA,MACA,IACA,KACA,KACA,KACA,qBAQyB,CAC3B,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,mBAj6EuB,CACvBrrF,IAAK,iBACL85D,IAAK,iBACLzrC,IAAK,iBACLm1D,IAAK,iBACL8H,IAAK,iBACLC,IAAK,iCAMuB,CAC5BvrF,IAAK,sBACL85D,IAAK,sBACLzrC,IAAK,sBACLm1D,IAAK,sBACL8H,IAAK,sBACLC,IAAK,8CA2R+B,CACpCC,UAAW,kCACX/uD,QAAS,gCACTgvD,KAAM,6BACNC,MAAO,8BACPC,UAAW,kCACXC,KAAM,6BACNC,SAAU,iCACVt6C,KAAM,kCACNvF,OAAQ,+BACR8/C,IAAK,4BACLlkF,MAAO,8BACPmkF,OAAQ,+BACRC,KAAM,6BACNC,QAAS,+DAMkC,CAC3CR,KAAM,6BACNC,MAAO,8BACPC,UAAW,kCACXC,KAAM,6BACNC,SAAU,iCACVt6C,KAAM,kCACNvF,OAAQ,+BACRpkC,MAAO,8BACPmkF,OAAQ,+BACRC,KAAM,sEAwB+C,CACrDvvD,QAAS,gCACTgvD,KAAM,6BACNS,SAAU,iCACV9iD,OAAQ,+BACR2iD,OAAQ,+BACRC,KAAM,6BACNC,QAAS,kEAxBqC,CAC9CT,UAAW,kCACX/uD,QAAS,gCACTgvD,KAAM,6BACNS,SAAU,iCACV9iD,OAAQ,+BACR4C,OAAQ,+BACR8/C,IAAK,4BACLC,OAAQ,+BACRC,KAAM,6BACNC,QAAS,6CApUgB,CACzB,G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BgB,CACvBiyB,KAAM,IACN13E,IAAK,IACL23E,KAAM,IACNC,GAAI,IACJ5C,IAAK,IACL6C,GAAI,IACJC,KAAM,IACNC,IAAK,IACLC,IAAK,aAyzDgB,CACrB,IACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,oBAlxDyB,CACzBN,KAAM,EACN13E,IAAK,EACL23E,KAAM,EACNC,GAAI,EACJ5C,IAAK,EACL6C,IAAI,EACJC,MAAM,EACNC,KAAK,EACLC,KAAK,YAvCiB,CACtBN,KAAM,EACN13E,IAAK,EACL23E,KAAM,EACNC,GAAI,EACJ5C,IAAK,EACL6C,IAAI,EACJC,MAAM,EACNC,KAAK,EACLC,KAAK,mBAMwB,CAC7BN,MAAM,EACN13E,KAAK,EACL23E,MAAM,EACNC,IAAI,EACJ5C,IAAK,EACL6C,GAAI,EACJC,KAAM,EACNC,IAAK,EACLC,IAAK,mBAqBwB,CAC7BN,KAAM,GACN13E,IAAK,GACL23E,KAAM,EACNC,GAAI,EACJ5C,IAAK,EACL6C,IAAI,EACJC,MAAM,EACNC,KAAK,GACLC,KAAK,2BA6gC+B,CACpCwR,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLpxE,IAAK,+EACLqxE,IAAK,+EACLC,IAAK,+EACLxb,IAAK,+EACLyb,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACL53D,IAAK,+EACL63D,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,+EACLC,IAAK,uFAhFe,CACpBjC,IAAK,eACLC,IAAK,eACLC,IAAK,eACLC,IAAK,eA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B70G,aAAe86J,OAKf96J,gBAAkB,CAChBq7J,UAAW,OAGbr7J,oBAAsB,CACpB,CACEukB,IAAK,UACLrV,KAAM,gBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,oBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,eACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,aACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,aACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,aACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,aACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,aACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,uBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,0BACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,sBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,oBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,gBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,YACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,kBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,qBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,oBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,iBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,sBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,QAER,CACEinB,IAAK,UACLrV,KAAM,oBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,QAER,CACEinB,IAAK,cACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNE,QAAQ,EACRz8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNomG,KAAM,SACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gDACNomG,KAAM,SACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uDACNomG,KAAM,SACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,yDACNomG,KAAM,SACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gDACNomG,KAAM,SACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,kDACNomG,KAAM,SACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,aACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,kDACNomG,KAAM,UACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,0DACNomG,KAAM,UACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,0DACNomG,KAAM,UACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,qDACNomG,KAAM,UACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wDACNomG,KAAM,UACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,iDACNomG,KAAM,UACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,iCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNE,QAAQ,EACRz8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,oCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNC,MAAO,iBACPC,QAAQ,EACRz8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,8CACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,yCACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,oCACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,aACLrV,KAAM,oCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gDACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,8CACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,yCACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,iDACNomG,KAAM,QACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,aACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,+BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,aACLrV,KAAM,iCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,+CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,qCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,+CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,iDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,aACLrV,KAAM,+BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gDACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uCACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gCACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,kCACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,aACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,oCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,oCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,sCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,yCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,2DACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNomG,KAAM,SACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,+CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,sCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,8CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,iCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,yCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,sDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,2DACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,sCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,kCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,yCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,iDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,8CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,kCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,kCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,+CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,yCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,8CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,+BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,qCACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,+CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,kCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,8CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,+CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,+BACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,8CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,sCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,qCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,8CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,kDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,iCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,mDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,kCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,kDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,+CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,yCACNowH,KAAM,aACN07B,MAAO,GACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,wDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,2DACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,yCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,2DACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,uDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,oDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,cACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,EACPt8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,oCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,8CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,WACLrV,KAAM,uCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACNv8H,IAAK,sCACLphC,KAAM,MAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,cACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,eACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,+BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,eACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,uBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,iCACNowH,KAAM,aACN07B,MAAO,IACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,YACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,GACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,aACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,aACLrV,KAAM,uBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,cACLrV,KAAM,eACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,aACLrV,KAAM,uBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPswI,KAAM,oBACN39J,KAAM,UAER,CACEinB,IAAK,aACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPrwI,MAAO,EACPrtB,KAAM,UAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN27B,KAAM,oBACNE,QAAQ,EACR79J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN27B,KAAM,oBACNv8H,IAAK,sCACLy8H,QAAQ,EACR79J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACNE,QAAQ,EACR79J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,qBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,6BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACNC,MAAO,YACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,kBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,gBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,cACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,2BACNomG,KAAM,QACNgqB,KAAM,aACN27B,KAAM,oBACNC,MAAO,mBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,iCACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,iBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,kBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNomG,KAAM,MACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,yBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,eACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,2BACNomG,KAAM,MACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,iBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,YACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,iBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,eACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,gBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,iBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,gBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,mBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,mBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,gBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,oBACNomG,KAAM,KACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,oBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNomG,KAAM,MACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,kBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,oBACNomG,KAAM,MACNgqB,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,oBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,0BACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN27B,KAAM,oBACNC,MAAO,iBACP59J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN27B,KAAM,oBACN39J,KAAM,aAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,oDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,gDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,wCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,2DACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,0CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,oDACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,UACN69J,QAAQ,GAEV,CACE52I,IAAK,UACLrV,KAAM,4CACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,4CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,qDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,qDACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,uCACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,2CACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,4BACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,eACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,cACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,uBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iCACNomG,KAAM,OACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,wBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,qBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,kCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,8BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,gCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNomG,KAAM,KACNgqB,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,kCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,0BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,kBACNomG,KAAM,MACNgqB,KAAM,aACN07B,MAAO,IACPC,KAAM,oBACNv8H,IAAK,qCACLphC,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,+BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,sBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,mBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,oCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,UACLrV,KAAM,4BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,2BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,oBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,yBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,iBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,qCACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,qBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,wBACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,WACLrV,KAAM,6BACNowH,KAAM,aACN07B,MAAO,GACPC,KAAM,oBACN39J,KAAM,WAER,CACEinB,IAAK,YACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,QACNohC,IAAK,sCACL2gG,UAAW,0BAEb,CACE96G,IAAK,YACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,QACNohC,IAAK,sCACL2gG,UAAW,0BAEb,CACE96G,IAAK,YACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,QACNohC,IAAK,sCACL2gG,UAAW,0BAEb,CACE96G,IAAK,YACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,QACNohC,IAAK,sCACL2gG,UAAW,0BAEb,CACE96G,IAAK,YACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,QACNohC,IAAK,sCACL2gG,UAAW,0BAEb,CACE96G,IAAK,YACLrV,KAAM,gBACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,QACNohC,IAAK,sCACL2gG,UAAW,0BAEb,CACE96G,IAAK,aACLrV,KAAM,kBACNowH,KAAM,aACN07B,MAAO,IACP19J,KAAM,QACN29J,KAAM,oBACNv8H,IAAK,sCACL2gG,UAAW,0BAEb,CACE96G,IAAK,YACLrV,KAAM,wBACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,QACN+hI,UAAW,0BAEb,CACE96G,IAAK,cACLrV,KAAM,4DACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,OAER,CACEinB,IAAK,cACLrV,KAAM,6CACNowH,KAAM,aACN07B,MAAO,GACP19J,KAAM,4NDz4GDuxB,sBjG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","x_google_ignoreList":[54]}